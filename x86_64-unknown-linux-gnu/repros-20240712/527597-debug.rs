#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u64,mut _3: u32,mut _4: u128,mut _5: i16,mut _6: i32,mut _7: u16,mut _8: i128,mut _9: usize) -> f32 {
mir! {
type RET = f32;
let _10: [isize; 5];
let _11: i32;
let _12: f32;
let _13: f32;
let _14: *const i16;
let _15: u8;
let _16: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _17: char;
let _18: f32;
let _19: u32;
let _20: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _21: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _22: &'static mut [u16; 2];
let _23: Adt58;
let _24: usize;
let _25: isize;
let _26: *const *const u128;
let _27: (*const u64, i32, (u16, u8), Adt43);
let _28: f32;
let _29: *const u128;
let _30: *mut (u16, u8);
let _31: &'static i128;
let _32: Adt43;
let _33: *const *const u128;
let _34: (i128, i8, i32, *const u64);
let _35: isize;
let _36: i16;
let _37: f64;
let _38: u128;
let _39: isize;
let _40: *const f32;
let _41: (i128, i8, i32, *const u64);
let _42: (i128, i8, i32, *const u64);
let _43: u8;
let _44: *const u64;
let _45: char;
let _46: *mut [u16; 2];
let _47: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _48: u64;
let _49: f32;
let _50: *const u64;
let _51: *mut [u16; 2];
let _52: Adt35;
let _53: &'static mut Adt35;
let _54: i64;
let _55: (i128, i8, i32, *const u64);
let _56: isize;
let _57: *const (char, u8, u32, f64);
let _58: f32;
let _59: (u16, u8);
let _60: [char; 7];
let _61: Adt43;
let _62: u16;
let _63: f64;
let _64: &'static (i32, *mut [u16; 2], bool, f64);
let _65: i32;
let _66: bool;
let _67: &'static &'static mut u64;
let _68: &'static i128;
let _69: &'static &'static mut u64;
let _70: [char; 7];
let _71: bool;
let _72: i64;
let _73: *mut (u16, u8);
let _74: u16;
let _75: u64;
let _76: [bool; 2];
let _77: *mut (bool,);
let _78: (i32,);
let _79: [i64; 2];
let _80: (char, u8, u32, f64);
let _81: bool;
let _82: *const f32;
let _83: bool;
let _84: isize;
let _85: u8;
let _86: ();
let _87: ();
{
_1 = false ^ true;
_7 = 27034_u16 * 31002_u16;
_7 = !28862_u16;
_3 = 115980611_u32;
_8 = (-118159413052412900891481281285623176293_i128) | (-96987455176560844505422907068351016392_i128);
_2 = 9099597240332214982_u64;
_6 = -(-930792333_i32);
_4 = 134760291883791494040228316925581918598_u128 + 67116386402693332957493935228959030657_u128;
_6 = '\u{19be5}' as i32;
_2 = 14762834863005490146_u64 >> _7;
_1 = _7 != _7;
_6 = 1892953427_i32 | (-1924014368_i32);
_1 = true;
_2 = _8 as u64;
_9 = !5_usize;
_6 = 307041080_i32 | 1287476113_i32;
_7 = 29903_u16;
_9 = 2686707999051446133_usize * 6052530885484949135_usize;
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,97_isize];
_7 = 2654449207896709618_i64 as u16;
_7 = 41083_u16 ^ 54814_u16;
_3 = 3232004532_u32;
Call(_4 = fn1(_7, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = 12309189463008102154_u64;
_1 = false ^ true;
_9 = 6_usize;
_10 = [9223372036854775807_isize,9223372036854775807_isize,(-128_isize),9223372036854775807_isize,(-94_isize)];
RET = 106_i8 as f32;
Goto(bb2)
}
bb2 = {
_6 = _2 as i32;
_5 = '\u{f1409}' as i16;
_5 = RET as i16;
_4 = !196461225661791660242642474941083056902_u128;
RET = _2 as f32;
_2 = 10333089916343749989_u64;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),68_isize,76_isize,9223372036854775807_isize];
_5 = 17343_i16;
_4 = 1276065585987615613718341275870646031_u128;
_3 = _6 as u32;
_11 = _6 & _6;
_4 = 126655241103435287368565609092963302494_u128 * 103889156888582128560748316430862018741_u128;
RET = _5 as f32;
_2 = 13076817951918070052_u64 & 11822375441951063470_u64;
_4 = 221141706670054553153105805841835243912_u128 >> _2;
_12 = -RET;
RET = -_12;
_9 = 13678710481035898203_usize ^ 1_usize;
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-18_isize),(-114_isize)];
_1 = _4 == _4;
_5 = (-23565_i16);
_2 = (-9223372036854775808_isize) as u64;
_4 = 96679366305684056380905755166257571996_u128 - 123271198141599612651560094055008255473_u128;
_13 = _12 - _12;
_1 = _13 < _12;
_10 = [(-59_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-29_isize),(-9223372036854775808_isize)];
_4 = 248007376587891626059482530416346457690_u128 << _9;
Goto(bb3)
}
bb3 = {
_4 = 33342152136222551583881352379374798594_u128;
_9 = 9453457458025648983_usize;
_14 = core::ptr::addr_of!(_5);
RET = _13 + _13;
(*_14) = -22183_i16;
_4 = _3 as u128;
(*_14) = (-18970_i16);
_8 = -(-11869145027094818442337146643978426662_i128);
(*_14) = (-22781_i16) | (-32238_i16);
(*_14) = _7 as i16;
(*_14) = 30643_i16 - 1146_i16;
_18 = -RET;
_6 = -_11;
(*_14) = _4 as i16;
(*_14) = '\u{e9d9a}' as i16;
(*_14) = '\u{1b940}' as i16;
_17 = '\u{9284}';
Goto(bb4)
}
bb4 = {
_7 = !41655_u16;
_14 = core::ptr::addr_of!((*_14));
_12 = _13;
(*_14) = (-25474_i16) << _6;
(*_14) = (-31662_i16);
(*_14) = 105_u8 as i16;
_15 = 151_u8;
_19 = _6 as u32;
_11 = -_6;
(*_14) = 24958_i16;
(*_14) = _2 as i16;
(*_14) = !28057_i16;
match _15 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
151 => bb8,
_ => bb7
}
}
bb5 = {
_4 = 33342152136222551583881352379374798594_u128;
_9 = 9453457458025648983_usize;
_14 = core::ptr::addr_of!(_5);
RET = _13 + _13;
(*_14) = -22183_i16;
_4 = _3 as u128;
(*_14) = (-18970_i16);
_8 = -(-11869145027094818442337146643978426662_i128);
(*_14) = (-22781_i16) | (-32238_i16);
(*_14) = _7 as i16;
(*_14) = 30643_i16 - 1146_i16;
_18 = -RET;
_6 = -_11;
(*_14) = _4 as i16;
(*_14) = '\u{e9d9a}' as i16;
(*_14) = '\u{1b940}' as i16;
_17 = '\u{9284}';
Goto(bb4)
}
bb6 = {
_6 = _2 as i32;
_5 = '\u{f1409}' as i16;
_5 = RET as i16;
_4 = !196461225661791660242642474941083056902_u128;
RET = _2 as f32;
_2 = 10333089916343749989_u64;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),68_isize,76_isize,9223372036854775807_isize];
_5 = 17343_i16;
_4 = 1276065585987615613718341275870646031_u128;
_3 = _6 as u32;
_11 = _6 & _6;
_4 = 126655241103435287368565609092963302494_u128 * 103889156888582128560748316430862018741_u128;
RET = _5 as f32;
_2 = 13076817951918070052_u64 & 11822375441951063470_u64;
_4 = 221141706670054553153105805841835243912_u128 >> _2;
_12 = -RET;
RET = -_12;
_9 = 13678710481035898203_usize ^ 1_usize;
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-18_isize),(-114_isize)];
_1 = _4 == _4;
_5 = (-23565_i16);
_2 = (-9223372036854775808_isize) as u64;
_4 = 96679366305684056380905755166257571996_u128 - 123271198141599612651560094055008255473_u128;
_13 = _12 - _12;
_1 = _13 < _12;
_10 = [(-59_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-29_isize),(-9223372036854775808_isize)];
_4 = 248007376587891626059482530416346457690_u128 << _9;
Goto(bb3)
}
bb7 = {
_2 = 12309189463008102154_u64;
_1 = false ^ true;
_9 = 6_usize;
_10 = [9223372036854775807_isize,9223372036854775807_isize,(-128_isize),9223372036854775807_isize,(-94_isize)];
RET = 106_i8 as f32;
Goto(bb2)
}
bb8 = {
_6 = _11 << _3;
(*_14) = 23883_i16;
_4 = _11 as u128;
(*_14) = (-17474_i16);
RET = -_18;
_2 = 15202397366981085147_u64;
(*_14) = _6 as i16;
_7 = 62193_u16 << _5;
_24 = _9 ^ _9;
(*_14) = 18416_i16 & 11018_i16;
_5 = (-6486_i16) << _15;
(*_14) = _1 as i16;
_9 = _15 as usize;
(*_14) = 7992_i16 + 20436_i16;
_2 = !8133310515930569241_u64;
_5 = (-7299_i16) >> _3;
_14 = core::ptr::addr_of!((*_14));
_24 = !_9;
_19 = _3;
Call(_15 = core::intrinsics::transmute(_1), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
(*_14) = _2 as i16;
_27.3.fld4 = (_1,);
(*_14) = !29953_i16;
_9 = _24 - _24;
(*_14) = (-5174_i16) >> _4;
_27.3.fld0 = [_17,_17,_17,_17,_17,_17,_17];
_27.2 = (_7, _15);
(*_14) = 21031_i16 * (-21666_i16);
(*_14) = -12690_i16;
_27.3.fld3.1 = _27.2.1;
_14 = core::ptr::addr_of!((*_14));
Goto(bb10)
}
bb10 = {
_27.3.fld7.0 = _11;
_27.1 = _11;
(*_14) = _3 as i16;
_27.0 = core::ptr::addr_of!(_27.3.fld5);
_27.3.fld3.2 = !_19;
_17 = '\u{37252}';
(*_14) = -15240_i16;
(*_14) = -10586_i16;
_27.2 = (_7, _15);
_27.2.0 = _7 | _7;
_25 = 9223372036854775807_isize << _7;
_29 = core::ptr::addr_of!(_4);
_27.3.fld7 = (_6,);
Goto(bb11)
}
bb11 = {
_30 = core::ptr::addr_of_mut!(_27.2);
(*_30) = (_7, _27.3.fld3.1);
Goto(bb12)
}
bb12 = {
(*_29) = 186939329981873507394616510216136631917_u128 ^ 187674882754812230495317863687123265080_u128;
_7 = !(*_30).0;
(*_30).0 = _7;
(*_30).1 = _27.3.fld3.1 + _15;
(*_30).0 = _7 * _7;
(*_29) = 196858140223160157515528998870832022551_u128 | 265195896544149434140750529301989772292_u128;
_27.3.fld7 = (_27.1,);
(*_14) = (-16537_i16) << (*_29);
(*_30) = (_7, _27.3.fld3.1);
(*_14) = (-23431_i16);
match _5 {
340282366920938463463374607431768188025 => bb14,
_ => bb13
}
}
bb13 = {
_4 = 33342152136222551583881352379374798594_u128;
_9 = 9453457458025648983_usize;
_14 = core::ptr::addr_of!(_5);
RET = _13 + _13;
(*_14) = -22183_i16;
_4 = _3 as u128;
(*_14) = (-18970_i16);
_8 = -(-11869145027094818442337146643978426662_i128);
(*_14) = (-22781_i16) | (-32238_i16);
(*_14) = _7 as i16;
(*_14) = 30643_i16 - 1146_i16;
_18 = -RET;
_6 = -_11;
(*_14) = _4 as i16;
(*_14) = '\u{e9d9a}' as i16;
(*_14) = '\u{1b940}' as i16;
_17 = '\u{9284}';
Goto(bb4)
}
bb14 = {
(*_30) = (_7, _15);
_34.3 = core::ptr::addr_of!(_27.3.fld5);
(*_30).0 = _25 as u16;
(*_30).1 = _15 << _2;
_15 = _27.2.1 + (*_30).1;
_27.3.fld2 = -_25;
_32.fld1 = [_3,_19,_19,_19,_19];
(*_30).0 = _7;
(*_30).1 = _15;
(*_30) = (_7, _15);
_24 = _9 - _9;
(*_29) = _6 as u128;
_27.2.0 = _7 >> (*_30).1;
_32.fld3.1 = (-42_i8) as u8;
(*_30).1 = _27.3.fld2 as u8;
(*_29) = 88219918791941133203099488066156741489_u128;
(*_30).1 = _32.fld3.1 | _15;
(*_14) = !(-29680_i16);
_3 = !_19;
(*_30).0 = 1393338588622750462_i64 as u16;
(*_14) = (-32246_i16);
(*_30) = (_7, _15);
Goto(bb15)
}
bb15 = {
(*_30).1 = !_15;
RET = _4 as f32;
_15 = !(*_30).1;
(*_30) = (_7, _27.3.fld3.1);
(*_30).0 = _7 + _7;
(*_30).1 = _15 >> (*_29);
_32.fld7.0 = _6 >> (*_30).0;
(*_14) = (-13843_i16);
(*_30) = (_7, _27.3.fld3.1);
(*_14) = (-13775_i16) | 15289_i16;
(*_29) = 201411142527991815116996548638114912225_u128 << (*_30).1;
(*_30).1 = _15;
(*_29) = 246478538084256085603714140109716964954_u128 * 22375140149913783738951115982529258606_u128;
_27.3.fld3.0 = _17;
(*_30) = (_7, _15);
RET = (*_30).1 as f32;
(*_30).0 = _7;
(*_30).1 = _15 << (*_29);
_32.fld7.0 = _27.1 & _11;
_34.2 = _17 as i32;
_34.0 = (*_14) as i128;
(*_30).0 = _7;
(*_30).0 = _7 >> (*_29);
_42.3 = core::ptr::addr_of!(_2);
_39 = (*_30).1 as isize;
(*_14) = (-28453_i16) + 26765_i16;
Goto(bb16)
}
bb16 = {
(*_14) = (-13500_i16) << _15;
_41.1 = (-43_i8) & (-36_i8);
(*_30).1 = _27.3.fld3.1;
(*_14) = (-31094_i16);
_27.3.fld1 = _32.fld1;
_32.fld3.0 = _27.3.fld3.0;
_35 = !_39;
(*_30) = (_7, _27.3.fld3.1);
(*_30).0 = _7 >> _27.3.fld3.1;
_32.fld6 = (*_30).0 as i64;
(*_29) = 196917149018186463734956037507806031760_u128 & 255269914566519990127817950291489187320_u128;
_27.3.fld3.1 = _15;
_41 = (_34.0, 53_i8, _32.fld7.0, Move(_42.3));
(*_14) = !(-1109_i16);
(*_30).1 = _41.1 as u8;
(*_30).0 = _7 + _7;
(*_14) = 28202_i16 * (-13545_i16);
Goto(bb17)
}
bb17 = {
_18 = (*_14) as f32;
_40 = core::ptr::addr_of!(_28);
(*_30).1 = !_15;
(*_30).0 = (*_14) as u16;
(*_30).1 = _27.3.fld3.1;
(*_40) = (*_30).1 as f32;
Call((*_29) = core::intrinsics::transmute(_8), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
(*_30).0 = _41.1 as u16;
_32.fld3.2 = _27.3.fld3.2 + _3;
_26 = core::ptr::addr_of!(_29);
(*_29) = 310700322469509348232185071457634152148_u128 - 338210039064856407159195494090778289354_u128;
_27.3.fld5 = _41.1 as u64;
(*_30) = (_7, _15);
(*_30).0 = _7;
_27.3.fld1 = [_32.fld3.2,_32.fld3.2,_32.fld3.2,_32.fld3.2,_27.3.fld3.2];
_38 = (*_29);
(*_29) = _38 | _38;
_9 = _24 | _24;
Goto(bb19)
}
bb19 = {
(*_30).0 = _7 & _7;
(*_40) = RET - _13;
Call((*_29) = core::intrinsics::transmute(_38), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
(*_14) = 27283_i16 + (-13007_i16);
(*_30) = (_7, _15);
_2 = !_27.3.fld5;
(*_30).0 = _41.2 as u16;
(*_30) = (_7, _15);
(*_30).0 = _7 & _7;
(*_14) = -3183_i16;
_42 = (_41.0, _41.1, _27.3.fld7.0, Move(_41.3));
_27.3.fld6 = -_32.fld6;
(*_40) = _18 + RET;
_6 = _27.1 * _32.fld7.0;
_27.2.1 = _27.3.fld3.1;
(*_40) = _13 - _18;
(*_30) = (_7, _27.3.fld3.1);
(*_29) = !_38;
_41.0 = _34.0 & _34.0;
(*_30) = (_7, _27.3.fld3.1);
(*_30).1 = _27.3.fld3.1 - _27.3.fld3.1;
_32.fld5 = (*_14) as u64;
(*_26) = core::ptr::addr_of!((*_29));
match _41.1 {
0 => bb12,
1 => bb8,
2 => bb17,
3 => bb21,
4 => bb22,
53 => bb24,
_ => bb23
}
}
bb21 = {
_4 = 33342152136222551583881352379374798594_u128;
_9 = 9453457458025648983_usize;
_14 = core::ptr::addr_of!(_5);
RET = _13 + _13;
(*_14) = -22183_i16;
_4 = _3 as u128;
(*_14) = (-18970_i16);
_8 = -(-11869145027094818442337146643978426662_i128);
(*_14) = (-22781_i16) | (-32238_i16);
(*_14) = _7 as i16;
(*_14) = 30643_i16 - 1146_i16;
_18 = -RET;
_6 = -_11;
(*_14) = _4 as i16;
(*_14) = '\u{e9d9a}' as i16;
(*_14) = '\u{1b940}' as i16;
_17 = '\u{9284}';
Goto(bb4)
}
bb22 = {
_2 = 12309189463008102154_u64;
_1 = false ^ true;
_9 = 6_usize;
_10 = [9223372036854775807_isize,9223372036854775807_isize,(-128_isize),9223372036854775807_isize,(-94_isize)];
RET = 106_i8 as f32;
Goto(bb2)
}
bb23 = {
_6 = _2 as i32;
_5 = '\u{f1409}' as i16;
_5 = RET as i16;
_4 = !196461225661791660242642474941083056902_u128;
RET = _2 as f32;
_2 = 10333089916343749989_u64;
_10 = [9223372036854775807_isize,(-9223372036854775808_isize),68_isize,76_isize,9223372036854775807_isize];
_5 = 17343_i16;
_4 = 1276065585987615613718341275870646031_u128;
_3 = _6 as u32;
_11 = _6 & _6;
_4 = 126655241103435287368565609092963302494_u128 * 103889156888582128560748316430862018741_u128;
RET = _5 as f32;
_2 = 13076817951918070052_u64 & 11822375441951063470_u64;
_4 = 221141706670054553153105805841835243912_u128 >> _2;
_12 = -RET;
RET = -_12;
_9 = 13678710481035898203_usize ^ 1_usize;
_10 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-18_isize),(-114_isize)];
_1 = _4 == _4;
_5 = (-23565_i16);
_2 = (-9223372036854775808_isize) as u64;
_4 = 96679366305684056380905755166257571996_u128 - 123271198141599612651560094055008255473_u128;
_13 = _12 - _12;
_1 = _13 < _12;
_10 = [(-59_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-29_isize),(-9223372036854775808_isize)];
_4 = 248007376587891626059482530416346457690_u128 << _9;
Goto(bb3)
}
bb24 = {
(*_30).0 = _7 | _7;
_27.3.fld3.2 = (*_30).1 as u32;
_42.1 = -_41.1;
(*_30).1 = _11 as u8;
(*_30).1 = !_15;
(*_30).1 = !_27.3.fld3.1;
(*_40) = _13;
(*_30).1 = _27.3.fld5 as u8;
_32.fld5 = _2;
(*_26) = core::ptr::addr_of!((*_29));
(*_29) = !_38;
_32.fld3.0 = _27.3.fld3.0;
(*_14) = -(-14318_i16);
_27.3.fld1 = [_27.3.fld3.2,_32.fld3.2,_27.3.fld3.2,_27.3.fld3.2,_27.3.fld3.2];
(*_26) = core::ptr::addr_of!(_4);
_8 = !_41.0;
(*_30) = (_7, _27.3.fld3.1);
_44 = core::ptr::addr_of!(_48);
(*_30).0 = _32.fld6 as u16;
_61.fld1 = _32.fld1;
(*_26) = core::ptr::addr_of!((*_29));
_54 = _32.fld6;
(*_30) = (_7, _15);
_3 = !_27.3.fld3.2;
Goto(bb25)
}
bb25 = {
_55.2 = _27.3.fld5 as i32;
_61.fld3.3 = _25 as f64;
_32.fld4 = _27.3.fld4;
_32.fld3.1 = (*_30).1;
(*_14) = 15535_i16 & (-24551_i16);
(*_30).1 = _32.fld3.1 | _15;
(*_29) = (*_14) as u128;
_27.0 = core::ptr::addr_of!(_32.fld5);
(*_29) = _38 << (*_30).1;
(*_30).1 = _15 >> (*_29);
(*_26) = core::ptr::addr_of!(_4);
(*_30).0 = _7;
Goto(bb26)
}
bb26 = {
(*_44) = _32.fld5;
_61.fld0 = [_27.3.fld3.0,_32.fld3.0,_27.3.fld3.0,_32.fld3.0,_17,_27.3.fld3.0,_17];
_45 = _17;
(*_30).1 = _32.fld3.1 * _32.fld3.1;
_55.1 = _41.1 * _42.1;
_61.fld2 = _35 >> (*_30).1;
(*_44) = _32.fld5 - _27.3.fld5;
_48 = (*_30).0 as u64;
(*_30).1 = (*_40) as u8;
(*_14) = _7 as i16;
(*_44) = _27.3.fld5 & _32.fld5;
(*_26) = core::ptr::addr_of!((*_29));
(*_14) = !10038_i16;
_55.2 = _6 >> _41.1;
Call((*_30).1 = core::intrinsics::transmute(_32.fld3.1), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
(*_14) = 26633_i16 << (*_44);
(*_26) = core::ptr::addr_of!((*_29));
(*_30).1 = !_15;
_3 = _27.3.fld3.2 | _27.3.fld3.2;
_36 = _27.3.fld5 as i16;
Goto(bb28)
}
bb28 = {
_2 = (*_44);
_32.fld0 = _61.fld0;
(*_14) = _1 as i16;
(*_30).0 = (*_29) as u16;
_57 = core::ptr::addr_of!(_27.3.fld3);
(*_30).1 = (*_57).1;
(*_57).1 = (*_30).1;
_55.2 = _41.2 >> (*_57).1;
Goto(bb29)
}
bb29 = {
_27.3.fld3 = (_45, (*_30).1, _3, _61.fld3.3);
(*_40) = RET * _18;
(*_57).3 = _61.fld3.3;
(*_57).2 = _1 as u32;
(*_44) = (*_57).3 as u64;
(*_44) = _2 & _32.fld5;
_34.0 = _8;
_36 = (*_14) * (*_14);
Goto(bb30)
}
bb30 = {
(*_57) = (_45, (*_30).1, _3, _61.fld3.3);
(*_57).3 = _61.fld3.3 - _61.fld3.3;
(*_44) = _32.fld5 & _32.fld5;
_2 = (*_44) & (*_44);
(*_44) = _2 | _32.fld5;
(*_57).1 = !(*_30).1;
_61 = Adt43 { fld0: _32.fld0,fld1: _27.3.fld1,fld2: _39,fld3: (*_57),fld4: _27.3.fld4,fld5: (*_44),fld6: _54,fld7: _32.fld7 };
_28 = -RET;
_32.fld6 = _54;
(*_14) = _36 << (*_57).2;
_55 = Move(_42);
_26 = core::ptr::addr_of!((*_26));
_42.3 = core::ptr::addr_of!((*_44));
(*_57).3 = _32.fld7.0 as f64;
Goto(bb31)
}
bb31 = {
(*_14) = _36 + _36;
(*_30).0 = _7 ^ _7;
(*_57).0 = _61.fld3.0;
(*_57).0 = _61.fld3.0;
_27.3.fld3.0 = _45;
(*_29) = _38 ^ _38;
match _41.1 {
0 => bb18,
1 => bb13,
2 => bb3,
3 => bb4,
53 => bb33,
_ => bb32
}
}
bb32 = {
(*_30).0 = _7 & _7;
(*_40) = RET - _13;
Call((*_29) = core::intrinsics::transmute(_38), ReturnTo(bb20), UnwindUnreachable())
}
bb33 = {
(*_57).3 = -_61.fld3.3;
_43 = (*_30).1 >> _27.2.1;
Call((*_44) = core::intrinsics::transmute(_61.fld2), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
(*_29) = _38 * _38;
_18 = (*_30).0 as f32;
_58 = (*_57).3 as f32;
(*_30).0 = _7;
(*_44) = !_27.3.fld5;
(*_57).2 = _3;
_32.fld6 = (*_40) as i64;
(*_40) = -RET;
(*_57) = (_17, (*_30).1, _3, _61.fld3.3);
_73 = Move(_30);
Call(_15 = core::intrinsics::transmute((*_57).1), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
(*_29) = !_38;
_26 = core::ptr::addr_of!((*_26));
(*_57) = (_17, _32.fld3.1, _61.fld3.2, _61.fld3.3);
_56 = _39 | _27.3.fld2;
(*_44) = _2 | _2;
(*_14) = _36;
_27.2.1 = (*_57).1 - (*_57).1;
_32.fld2 = -_61.fld2;
_29 = core::ptr::addr_of!((*_29));
(*_44) = _28 as u64;
_27.2 = (_7, _43);
(*_57).3 = _61.fld3.3 + _61.fld3.3;
(*_57).3 = _61.fld3.3;
(*_44) = _56 as u64;
_2 = !_61.fld5;
(*_57) = (_61.fld3.0, _27.2.1, _61.fld3.2, _61.fld3.3);
(*_57).1 = _15 - _43;
(*_57).1 = _27.2.1 >> _35;
Goto(bb36)
}
bb36 = {
_27.3.fld6 = _32.fld6 - _61.fld6;
_71 = (*_57).3 > (*_57).3;
_11 = _7 as i32;
(*_57).1 = _61.fld3.1;
_63 = _41.1 as f64;
_28 = -_58;
_72 = -_27.3.fld6;
_42.2 = _41.2 << (*_14);
(*_57).0 = _45;
(*_26) = core::ptr::addr_of!((*_29));
(*_57).0 = _61.fld3.0;
_77 = core::ptr::addr_of_mut!(_27.3.fld4);
_32.fld3 = ((*_57).0, (*_57).1, (*_57).2, (*_57).3);
(*_77) = (_1,);
(*_14) = _36 - _36;
(*_57) = (_32.fld3.0, _43, _3, _32.fld3.3);
_27.3.fld2 = _61.fld2;
_27.3.fld2 = _61.fld2;
_61.fld3.2 = (*_57).2 ^ (*_57).2;
_15 = _41.1 as u8;
(*_57).0 = _17;
(*_77).0 = _1;
_59.1 = (*_57).1 << _3;
_32 = Move(_27.3);
(*_26) = core::ptr::addr_of!((*_29));
_42.1 = !_55.1;
(*_40) = RET;
_60 = [_61.fld3.0,_32.fld3.0,_17,_45,_61.fld3.0,_17,_45];
Goto(bb37)
}
bb37 = {
(*_77) = (_61.fld4.0,);
_81 = (*_77).0 ^ _32.fld4.0;
(*_57).0 = _17;
(*_44) = _61.fld5 + _61.fld5;
(*_40) = _18 * _18;
_27.3 = Adt43 { fld0: _60,fld1: _32.fld1,fld2: _32.fld2,fld3: _61.fld3,fld4: _61.fld4,fld5: (*_44),fld6: _72,fld7: _61.fld7 };
(*_57).3 = _61.fld3.3 - _63;
_5 = _36 ^ _36;
(*_26) = core::ptr::addr_of!((*_29));
_27.2.1 = (*_57).1 - _59.1;
_32.fld7.0 = _27.3.fld2 as i32;
(*_44) = _27.3.fld5;
_32.fld7 = (_55.2,);
_71 = (*_77).0;
(*_40) = RET * RET;
_42 = (_8, _41.1, _32.fld7.0, Move(_44));
RET = (*_40) - (*_40);
(*_77) = _61.fld4;
_31 = &_8;
_71 = !(*_77).0;
(*_57).3 = -_63;
Goto(bb38)
}
bb38 = {
Call(_86 = dump_var(0_usize, 17_usize, Move(_17), 72_usize, Move(_72), 56_usize, Move(_56), 25_usize, Move(_25)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_86 = dump_var(0_usize, 9_usize, Move(_9), 10_usize, Move(_10), 54_usize, Move(_54), 7_usize, Move(_7)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_86 = dump_var(0_usize, 5_usize, Move(_5), 60_usize, Move(_60), 3_usize, Move(_3), 2_usize, Move(_2)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_86 = dump_var(0_usize, 48_usize, Move(_48), 4_usize, Move(_4), 87_usize, _87, 87_usize, _87), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u16,mut _2: [isize; 5]) -> u128 {
mir! {
type RET = u128;
let _3: *const (i128, i64);
let _4: ();
let _5: ();
{
RET = 298279707321227636485637786621210204423_u128 << _1;
Call(RET = fn2(_1, _1, _2, _2, _2, _1, _1, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [(-122_isize),9223372036854775807_isize,12_isize,(-9223372036854775808_isize),40_isize];
Goto(bb2)
}
bb2 = {
Call(_4 = dump_var(1_usize, 2_usize, Move(_2), 5_usize, _5, 5_usize, _5, 5_usize, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u16,mut _2: u16,mut _3: [isize; 5],mut _4: [isize; 5],mut _5: [isize; 5],mut _6: u16,mut _7: u16,mut _8: [isize; 5],mut _9: [isize; 5]) -> u128 {
mir! {
type RET = u128;
let _10: (Adt45,);
let _11: char;
let _12: isize;
let _13: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _14: (u128,);
let _15: i128;
let _16: [bool; 2];
let _17: [char; 7];
let _18: char;
let _19: i32;
let _20: (u16, u8);
let _21: &'static [i64; 2];
let _22: f32;
let _23: (u16, u8);
let _24: &'static usize;
let _25: [char; 7];
let _26: bool;
let _27: u128;
let _28: *mut (i32, *mut [u16; 2], bool, f64);
let _29: f64;
let _30: [u16; 3];
let _31: *const u64;
let _32: *mut (i32, *mut [u16; 2], bool, f64);
let _33: char;
let _34: &'static i128;
let _35: &'static mut Adt35;
let _36: *mut [u16; 2];
let _37: f64;
let _38: u32;
let _39: isize;
let _40: [i8; 6];
let _41: *const f32;
let _42: isize;
let _43: Adt72;
let _44: [u32; 2];
let _45: isize;
let _46: ();
let _47: ();
{
_2 = _7;
_1 = _7 & _7;
_3 = [(-7_isize),(-126_isize),(-110_isize),9223372036854775807_isize,(-93_isize)];
RET = 101771717660600041280638272085355169406_u128 ^ 142430447827221936611758342598573237902_u128;
_2 = _7 ^ _1;
_4 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
Goto(bb1)
}
bb1 = {
_11 = '\u{82aae}';
_2 = _7 + _7;
_12 = (-9223372036854775808_isize);
_4 = _9;
Call(_14 = fn3(_9, _4, _11, _12, _12, _11, _9, _4, _3, _7, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = '\u{29e6c}';
_6 = !_2;
Goto(bb3)
}
bb3 = {
_6 = _1 * _2;
_14.0 = 17983903246661670209_u64 as u128;
_4 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_3 = _9;
_14.0 = RET;
_14.0 = RET;
_11 = '\u{e7ce5}';
_11 = '\u{eaef}';
_3 = _9;
_8 = [_12,_12,_12,_12,_12];
_8 = [_12,_12,_12,_12,_12];
match _12 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb4 = {
_11 = '\u{29e6c}';
_6 = !_2;
Goto(bb3)
}
bb5 = {
_11 = '\u{82aae}';
_2 = _7 + _7;
_12 = (-9223372036854775808_isize);
_4 = _9;
Call(_14 = fn3(_9, _4, _11, _12, _12, _11, _9, _4, _3, _7, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_4 = _9;
_9 = [_12,_12,_12,_12,_12];
_8 = [_12,_12,_12,_12,_12];
_9 = [_12,_12,_12,_12,_12];
_11 = '\u{68303}';
_11 = '\u{97e0b}';
_4 = [_12,_12,_12,_12,_12];
_14.0 = (-393256115295322403_i64) as u128;
_7 = _6 | _6;
_1 = _7 << _6;
_14.0 = RET ^ RET;
_14 = (RET,);
_12 = (-9223372036854775808_isize) >> _7;
_15 = -97956167063734624099402501054183035434_i128;
_6 = _1 >> _1;
_16 = [true,true];
_14.0 = RET | RET;
_2 = _6 - _6;
_12 = 127458636_i32 as isize;
_3 = [_12,_12,_12,_12,_12];
_15 = (-127816824967360911653097977608518757504_i128);
_5 = _4;
_16 = [false,true];
_7 = _6 - _6;
_8 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_6 = !_2;
Goto(bb11)
}
bb11 = {
_3 = _8;
_18 = _11;
_8 = [_12,_12,_12,_12,_12];
_18 = _11;
_16 = [false,true];
_19 = 16535985055888837735_usize as i32;
_11 = _18;
_16 = [false,true];
RET = 5899348787787837588_usize as u128;
match _15 {
0 => bb7,
1 => bb4,
212465541953577551810276629823249453952 => bb12,
_ => bb10
}
}
bb12 = {
_14.0 = RET;
_15 = -(-97449496602808201638060119716994957412_i128);
_17 = [_11,_11,_11,_11,_18,_11,_11];
_11 = _18;
_12 = (-9223372036854775808_isize);
_20 = (_2, 66_u8);
RET = _14.0;
_6 = _15 as u16;
match _20.1 {
0 => bb10,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb5,
5 => bb13,
66 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
_11 = '\u{82aae}';
_2 = _7 + _7;
_12 = (-9223372036854775808_isize);
_4 = _9;
Call(_14 = fn3(_9, _4, _11, _12, _12, _11, _9, _4, _3, _7, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_9 = _4;
_12 = -9223372036854775807_isize;
_2 = !_20.0;
_7 = _2;
_17 = [_11,_11,_11,_11,_11,_11,_18];
_12 = (-32_isize) * (-98_isize);
_6 = !_20.0;
_18 = _11;
_4 = _8;
_14 = (RET,);
_6 = _7 << _20.0;
_7 = _14.0 as u16;
_2 = _20.0 * _20.0;
_5 = [_12,_12,_12,_12,_12];
_7 = _6 - _20.0;
_19 = 342078704_i32;
_4 = [_12,_12,_12,_12,_12];
_18 = _11;
RET = _15 as u128;
_9 = [_12,_12,_12,_12,_12];
match _20.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb14,
66 => bb17,
_ => bb16
}
}
bb16 = {
Return()
}
bb17 = {
RET = _14.0;
_14.0 = RET | RET;
_6 = _2;
_9 = _4;
_22 = _19 as f32;
_9 = _5;
_12 = 9223372036854775807_isize;
_20.0 = _7 & _2;
_7 = _1 * _20.0;
_18 = _11;
_20.0 = _1;
_8 = [_12,_12,_12,_12,_12];
_12 = (-24092_i16) as isize;
_3 = _8;
_23 = _20;
_1 = !_7;
_9 = [_12,_12,_12,_12,_12];
_4 = [_12,_12,_12,_12,_12];
_23.1 = 2218357245_u32 as u8;
_1 = _23.0;
Goto(bb18)
}
bb18 = {
_22 = _14.0 as f32;
_14.0 = RET;
_9 = _4;
_20.0 = _6 >> _2;
_14.0 = !RET;
_1 = _15 as u16;
_16 = [false,false];
_15 = !(-31153499376501794447429104525753683735_i128);
_26 = false;
Goto(bb19)
}
bb19 = {
_27 = RET + RET;
_17 = [_11,_11,_11,_11,_18,_11,_18];
_12 = (-9223372036854775808_isize);
_27 = !RET;
match _20.1 {
0 => bb7,
66 => bb20,
_ => bb2
}
}
bb20 = {
_3 = [_12,_12,_12,_12,_12];
match _20.1 {
0 => bb17,
1 => bb15,
2 => bb3,
3 => bb12,
4 => bb10,
5 => bb8,
66 => bb21,
_ => bb7
}
}
bb21 = {
_29 = _2 as f64;
_22 = _15 as f32;
_4 = [_12,_12,_12,_12,_12];
match _20.1 {
0 => bb22,
1 => bb23,
2 => bb24,
3 => bb25,
4 => bb26,
66 => bb28,
_ => bb27
}
}
bb22 = {
Return()
}
bb23 = {
_27 = RET + RET;
_17 = [_11,_11,_11,_11,_18,_11,_18];
_12 = (-9223372036854775808_isize);
_27 = !RET;
match _20.1 {
0 => bb7,
66 => bb20,
_ => bb2
}
}
bb24 = {
Return()
}
bb25 = {
_4 = _9;
_9 = [_12,_12,_12,_12,_12];
_8 = [_12,_12,_12,_12,_12];
_9 = [_12,_12,_12,_12,_12];
_11 = '\u{68303}';
_11 = '\u{97e0b}';
_4 = [_12,_12,_12,_12,_12];
_14.0 = (-393256115295322403_i64) as u128;
_7 = _6 | _6;
_1 = _7 << _6;
_14.0 = RET ^ RET;
_14 = (RET,);
_12 = (-9223372036854775808_isize) >> _7;
_15 = -97956167063734624099402501054183035434_i128;
_6 = _1 >> _1;
_16 = [true,true];
_14.0 = RET | RET;
_2 = _6 - _6;
_12 = 127458636_i32 as isize;
_3 = [_12,_12,_12,_12,_12];
_15 = (-127816824967360911653097977608518757504_i128);
_5 = _4;
_16 = [false,true];
_7 = _6 - _6;
_8 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_6 = !_2;
Goto(bb11)
}
bb26 = {
_11 = '\u{82aae}';
_2 = _7 + _7;
_12 = (-9223372036854775808_isize);
_4 = _9;
Call(_14 = fn3(_9, _4, _11, _12, _12, _11, _9, _4, _3, _7, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb27 = {
_3 = _8;
_18 = _11;
_8 = [_12,_12,_12,_12,_12];
_18 = _11;
_16 = [false,true];
_19 = 16535985055888837735_usize as i32;
_11 = _18;
_16 = [false,true];
RET = 5899348787787837588_usize as u128;
match _15 {
0 => bb7,
1 => bb4,
212465541953577551810276629823249453952 => bb12,
_ => bb10
}
}
bb28 = {
_14 = (_27,);
_12 = 101627598_u32 as isize;
_26 = !false;
_20.0 = _7 - _2;
_5 = [_12,_12,_12,_12,_12];
_26 = true;
_25 = _17;
_12 = 101_isize ^ (-43_isize);
_7 = !_2;
_27 = RET;
_11 = _18;
_33 = _11;
_4 = [_12,_12,_12,_12,_12];
_34 = &_15;
_2 = _7 >> _20.0;
_23.1 = !_20.1;
_14.0 = !RET;
_6 = _20.0 << _23.1;
_22 = 3902324352803181449_i64 as f32;
_8 = [_12,_12,_12,_12,_12];
RET = _12 as u128;
Goto(bb29)
}
bb29 = {
_33 = _18;
_30 = [_2,_20.0,_2];
_19 = 501018073_i32 | (-561842399_i32);
_33 = _11;
_33 = _11;
_3 = _4;
_27 = (-608_i16) as u128;
_15 = (-88580896401626588234124577544185970848_i128);
_11 = _18;
_11 = _33;
_20.0 = _7 ^ _2;
_6 = _7;
_20.1 = _23.1;
_14.0 = !RET;
_15 = _29 as i128;
_38 = 2202619252_u32 - 2551580472_u32;
_23 = (_7, _20.1);
_7 = _23.0 << _15;
_11 = _33;
_14.0 = !RET;
_15 = !27737332970638968874306292800773212149_i128;
_40 = [60_i8,111_i8,(-63_i8),11_i8,37_i8,61_i8];
Goto(bb30)
}
bb30 = {
_39 = _38 as isize;
_9 = [_12,_39,_39,_39,_39];
_5 = [_39,_39,_12,_12,_39];
_14 = (RET,);
_2 = _23.0 - _7;
_22 = (-7641263321551485897_i64) as f32;
_33 = _18;
_17 = [_18,_18,_18,_33,_18,_11,_11];
_7 = _23.0;
_42 = -_12;
_43.fld3 = core::ptr::addr_of!(_22);
_17 = _25;
_43.fld1.0 = _14.0 >> _7;
_26 = !true;
_43.fld5 = [_23.0,_7,_20.0];
_38 = 3159683571_u32 + 1815515840_u32;
Goto(bb31)
}
bb31 = {
_8 = [_39,_42,_12,_42,_12];
_39 = _12 | _42;
_17 = _25;
RET = _43.fld1.0;
_43.fld1.0 = RET >> RET;
_2 = _6 - _20.0;
_40 = [37_i8,17_i8,(-104_i8),100_i8,(-12_i8),23_i8];
Goto(bb32)
}
bb32 = {
Call(_46 = dump_var(2_usize, 6_usize, Move(_6), 14_usize, Move(_14), 20_usize, Move(_20), 17_usize, Move(_17)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Call(_46 = dump_var(2_usize, 11_usize, Move(_11), 15_usize, Move(_15), 42_usize, Move(_42), 27_usize, Move(_27)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_46 = dump_var(2_usize, 30_usize, Move(_30), 1_usize, Move(_1), 40_usize, Move(_40), 12_usize, Move(_12)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_46 = dump_var(2_usize, 5_usize, Move(_5), 23_usize, Move(_23), 47_usize, _47, 47_usize, _47), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [isize; 5],mut _2: [isize; 5],mut _3: char,mut _4: isize,mut _5: isize,mut _6: char,mut _7: [isize; 5],mut _8: [isize; 5],mut _9: [isize; 5],mut _10: u16,mut _11: [isize; 5]) -> (u128,) {
mir! {
type RET = (u128,);
let _12: char;
let _13: isize;
let _14: char;
let _15: [isize; 5];
let _16: isize;
let _17: char;
let _18: *mut (bool,);
let _19: (u8,);
let _20: char;
let _21: *const u128;
let _22: u16;
let _23: [i32; 5];
let _24: f32;
let _25: (u16, u8);
let _26: isize;
let _27: *const u64;
let _28: (*mut [u16; 2], [u16; 2], *const u128, u128);
let _29: (i128, i64);
let _30: Adt45;
let _31: *mut (u16, u8);
let _32: isize;
let _33: bool;
let _34: (char, u8, u32, f64);
let _35: [u16; 3];
let _36: char;
let _37: isize;
let _38: isize;
let _39: char;
let _40: i128;
let _41: isize;
let _42: f32;
let _43: *mut [u16; 2];
let _44: *mut [u16; 2];
let _45: *mut [u16; 2];
let _46: usize;
let _47: isize;
let _48: f64;
let _49: *const u64;
let _50: u16;
let _51: u128;
let _52: *mut (bool,);
let _53: bool;
let _54: char;
let _55: Adt72;
let _56: [u16; 8];
let _57: *mut [u16; 2];
let _58: bool;
let _59: *mut [u16; 2];
let _60: &'static mut u64;
let _61: &'static (i32, *mut [u16; 2], bool, f64);
let _62: char;
let _63: *const f32;
let _64: *mut (i32, *mut [u16; 2], bool, f64);
let _65: *const f32;
let _66: isize;
let _67: Adt58;
let _68: isize;
let _69: u128;
let _70: [i8; 6];
let _71: isize;
let _72: *const *const u128;
let _73: char;
let _74: isize;
let _75: ([i32; 5], u64);
let _76: isize;
let _77: i64;
let _78: i64;
let _79: char;
let _80: &'static mut [u16; 2];
let _81: *const u128;
let _82: &'static i128;
let _83: Adt43;
let _84: u8;
let _85: isize;
let _86: (*const u128, [u32; 5], Adt58);
let _87: i32;
let _88: bool;
let _89: ();
let _90: ();
{
_11 = [_5,_5,_4,_4,_4];
_5 = _4 * _4;
_11 = [_5,_5,_5,_4,_4];
_12 = _6;
_4 = _5;
_11 = [_4,_5,_4,_4,_5];
_7 = [_5,_5,_4,_4,_5];
Goto(bb1)
}
bb1 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb2 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb3 = {
_14 = _6;
RET = (31625018368800776638285970369832686236_u128,);
_16 = _5 << _4;
RET = (297052455215851078239296848997681103288_u128,);
RET = (20258641486338082147320280861781363974_u128,);
match RET.0 {
20258641486338082147320280861781363974 => bb5,
_ => bb4
}
}
bb4 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb5 = {
_1 = _15;
_19 = (123_u8,);
_20 = _6;
_13 = 2_usize as isize;
_7 = [_16,_5,_5,_13,_5];
_17 = _3;
_22 = _10;
RET.0 = 74308494105980172696713510200206469953_u128;
_12 = _3;
_3 = _14;
_17 = _6;
RET.0 = 269602730634850938753745450890484508502_u128 - 92491395020714940351480239857572156229_u128;
_1 = [_5,_13,_16,_16,_16];
_7 = [_5,_16,_16,_16,_5];
_19.0 = !59_u8;
_16 = _5;
_15 = [_13,_16,_16,_5,_5];
_8 = [_16,_16,_5,_16,_5];
_21 = core::ptr::addr_of!(RET.0);
(*_21) = 49638725786494688438213886510098668835_u128 | 42949656783039473397327288146470950832_u128;
_11 = [_13,_16,_4,_4,_5];
_23 = [1660693651_i32,(-1580835286_i32),(-227091941_i32),(-2058574497_i32),(-1386057158_i32)];
_6 = _20;
(*_21) = 330723890599985938146895446021653722068_u128 >> _10;
_2 = [_16,_16,_16,_5,_16];
(*_21) = 38292190240018048555893597319776194710_u128 >> _22;
(*_21) = !255881165273390672366211715521623223062_u128;
Call(_6 = fn4(_15, Move(_21), _14, (*_21), _20), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_23 = [(-1064414614_i32),1769593818_i32,(-944598737_i32),1782609751_i32,187439321_i32];
_5 = RET.0 as isize;
_20 = _14;
_1 = _2;
_3 = _12;
_4 = _5 - _13;
_12 = _14;
_9 = _15;
_5 = -_4;
_17 = _6;
_4 = 15850228041241082364_usize as isize;
_8 = [_16,_16,_16,_13,_16];
_17 = _12;
_10 = _19.0 as u16;
_4 = !_5;
_19.0 = false as u8;
_13 = -_4;
_8 = _9;
_21 = core::ptr::addr_of!(RET.0);
_25 = (_22, _19.0);
(*_21) = true as u128;
Goto(bb7)
}
bb7 = {
Goto(bb8)
}
bb8 = {
(*_21) = 208785448585067700426887078577476759532_u128 | 281642113336963695540371710404837244836_u128;
(*_21) = !275830356193611358906045636863758402264_u128;
_28.0 = core::ptr::addr_of_mut!(_28.1);
_21 = core::ptr::addr_of!((*_21));
(*_21) = 132308612564344187023230972325000387356_u128 * 139466881883327784964526704482231737996_u128;
_28.1 = [_25.0,_22];
_24 = (-128801281898070371153663978394017914996_i128) as f32;
_28.3 = !(*_21);
_9 = [_5,_4,_5,_16,_5];
_2 = _8;
_10 = _22 << (*_21);
_7 = [_5,_13,_13,_4,_13];
_29 = (106176100182176716983437925959021846944_i128, (-2701824676277640296_i64));
_19.0 = _25.1 * _25.1;
_5 = _16 - _16;
_19.0 = !_25.1;
_28.2 = core::ptr::addr_of!((*_21));
_1 = _8;
match _29.0 {
0 => bb7,
1 => bb4,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
106176100182176716983437925959021846944 => bb13,
_ => bb12
}
}
bb9 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb10 = {
_23 = [(-1064414614_i32),1769593818_i32,(-944598737_i32),1782609751_i32,187439321_i32];
_5 = RET.0 as isize;
_20 = _14;
_1 = _2;
_3 = _12;
_4 = _5 - _13;
_12 = _14;
_9 = _15;
_5 = -_4;
_17 = _6;
_4 = 15850228041241082364_usize as isize;
_8 = [_16,_16,_16,_13,_16];
_17 = _12;
_10 = _19.0 as u16;
_4 = !_5;
_19.0 = false as u8;
_13 = -_4;
_8 = _9;
_21 = core::ptr::addr_of!(RET.0);
_25 = (_22, _19.0);
(*_21) = true as u128;
Goto(bb7)
}
bb11 = {
_1 = _15;
_19 = (123_u8,);
_20 = _6;
_13 = 2_usize as isize;
_7 = [_16,_5,_5,_13,_5];
_17 = _3;
_22 = _10;
RET.0 = 74308494105980172696713510200206469953_u128;
_12 = _3;
_3 = _14;
_17 = _6;
RET.0 = 269602730634850938753745450890484508502_u128 - 92491395020714940351480239857572156229_u128;
_1 = [_5,_13,_16,_16,_16];
_7 = [_5,_16,_16,_16,_5];
_19.0 = !59_u8;
_16 = _5;
_15 = [_13,_16,_16,_5,_5];
_8 = [_16,_16,_5,_16,_5];
_21 = core::ptr::addr_of!(RET.0);
(*_21) = 49638725786494688438213886510098668835_u128 | 42949656783039473397327288146470950832_u128;
_11 = [_13,_16,_4,_4,_5];
_23 = [1660693651_i32,(-1580835286_i32),(-227091941_i32),(-2058574497_i32),(-1386057158_i32)];
_6 = _20;
(*_21) = 330723890599985938146895446021653722068_u128 >> _10;
_2 = [_16,_16,_16,_5,_16];
(*_21) = 38292190240018048555893597319776194710_u128 >> _22;
(*_21) = !255881165273390672366211715521623223062_u128;
Call(_6 = fn4(_15, Move(_21), _14, (*_21), _20), ReturnTo(bb6), UnwindUnreachable())
}
bb12 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb13 = {
_1 = [_5,_13,_13,_4,_13];
match _29.0 {
0 => bb8,
106176100182176716983437925959021846944 => bb14,
_ => bb2
}
}
bb14 = {
_28.0 = core::ptr::addr_of_mut!(_28.1);
_16 = _5;
Goto(bb15)
}
bb15 = {
(*_21) = _28.3 << _29.1;
_14 = _3;
(*_21) = (-1186077143_i32) as u128;
_34.0 = _12;
_28.2 = core::ptr::addr_of!((*_21));
_4 = _16;
_17 = _34.0;
_34.0 = _12;
_2 = [_16,_4,_16,_16,_5];
_20 = _12;
(*_21) = _28.3 ^ _28.3;
(*_21) = _28.3 + _28.3;
_26 = _16 | _4;
(*_21) = _28.3 - _28.3;
(*_21) = _28.3 >> _22;
(*_21) = _28.3 >> _16;
Goto(bb16)
}
bb16 = {
_4 = 2350369888352240187_u64 as isize;
_29 = (9682119637372076084151934429354058177_i128, (-5960876484048595283_i64));
_16 = _13;
(*_21) = _28.3 ^ _28.3;
_9 = [_13,_26,_26,_26,_5];
match _29.0 {
0 => bb17,
9682119637372076084151934429354058177 => bb19,
_ => bb18
}
}
bb17 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb18 = {
Goto(bb8)
}
bb19 = {
_21 = core::ptr::addr_of!((*_21));
(*_21) = !_28.3;
_3 = _34.0;
_31 = core::ptr::addr_of_mut!(_25);
_36 = _6;
(*_31) = (_10, _19.0);
_13 = _5 | _16;
_16 = !_5;
(*_21) = _29.1 as u128;
(*_31).1 = _19.0;
(*_31) = (_10, _19.0);
(*_31).1 = _19.0 + _19.0;
(*_31).0 = _29.0 as u16;
_19.0 = (*_31).1 | (*_31).1;
(*_31).1 = _19.0 << (*_21);
(*_21) = 1332083584_u32 as u128;
(*_21) = !_28.3;
_26 = _13 | _16;
_23 = [(-958893163_i32),(-422287482_i32),1609730418_i32,(-283305901_i32),1908714298_i32];
match _29.1 {
0 => bb12,
1 => bb8,
2 => bb20,
3 => bb21,
340282366920938463457413730947719616173 => bb23,
_ => bb22
}
}
bb20 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb21 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb22 = {
_1 = [_5,_13,_13,_4,_13];
match _29.0 {
0 => bb8,
106176100182176716983437925959021846944 => bb14,
_ => bb2
}
}
bb23 = {
RET.0 = !_28.3;
(*_31).0 = _10 ^ _22;
(*_31).1 = _19.0;
_29.0 = 8286899318640561498_u64 as i128;
(*_21) = _28.3 << _25.0;
(*_21) = _28.3;
(*_31).1 = _19.0 | _19.0;
_24 = (*_31).1 as f32;
(*_31).0 = false as u16;
(*_31) = (_10, _19.0);
_28.3 = (*_21) - (*_21);
(*_31).0 = _10 * _10;
_4 = !_26;
Goto(bb24)
}
bb24 = {
_34.2 = 3625050106_u32;
(*_31).0 = _22 * _10;
_23 = [(-1251872522_i32),(-989764648_i32),(-288911950_i32),(-100450971_i32),(-366902329_i32)];
_39 = _20;
_6 = _36;
(*_31).1 = _19.0;
RET = (_28.3,);
(*_31) = (_10, _19.0);
(*_31).1 = !_19.0;
_28.1 = [(*_31).0,(*_31).0];
(*_31).1 = _24 as u8;
(*_31) = (_22, _19.0);
_41 = -_16;
_23 = [2040543544_i32,1267435810_i32,(-1857939987_i32),35685247_i32,978556865_i32];
(*_31).0 = !_10;
(*_31).1 = _19.0 & _19.0;
Goto(bb25)
}
bb25 = {
(*_21) = !_28.3;
(*_31) = (_10, _19.0);
_29.0 = -(-147250832521943850461568432732604895342_i128);
(*_31) = (_10, _19.0);
(*_31).0 = _29.1 as u16;
(*_21) = !_28.3;
(*_21) = !_28.3;
_40 = -_29.0;
(*_31).0 = _10 << (*_21);
_48 = _24 as f64;
_37 = _26;
_34 = (_6, (*_31).1, 2321238830_u32, _48);
_26 = _37 - _37;
_28.1 = [(*_31).0,(*_31).0];
_44 = core::ptr::addr_of_mut!(_28.1);
_22 = (*_31).0 >> (*_31).0;
(*_44) = [(*_31).0,(*_31).0];
(*_31).0 = _24 as u16;
(*_21) = _28.3 >> _37;
(*_21) = (*_31).1 as u128;
_28.0 = core::ptr::addr_of_mut!((*_44));
_19.0 = (*_31).1 & (*_31).1;
(*_31).0 = 1556040282_i32 as u16;
(*_31).0 = 12017575185209649091_u64 as u16;
_29 = (_40, 3816981803405443125_i64);
(*_21) = _28.3;
match _34.2 {
0 => bb17,
1 => bb24,
2 => bb15,
3 => bb12,
4 => bb5,
5 => bb13,
6 => bb26,
2321238830 => bb28,
_ => bb27
}
}
bb26 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb27 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb28 = {
_38 = _26 ^ _4;
_23 = [(-326073785_i32),61868756_i32,(-1777373378_i32),(-1814598264_i32),1325102298_i32];
(*_31) = (_22, _19.0);
(*_44) = [_25.0,(*_31).0];
_50 = !(*_31).0;
_25.0 = _22 + _22;
_45 = core::ptr::addr_of_mut!((*_44));
(*_31).0 = _22;
(*_31) = (_22, _19.0);
_34 = (_17, (*_31).1, 3947070402_u32, _48);
_39 = _20;
_47 = _38;
match _29.1 {
0 => bb29,
1 => bb30,
2 => bb31,
3 => bb32,
3816981803405443125 => bb34,
_ => bb33
}
}
bb29 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb30 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb31 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb32 = {
_1 = [_5,_13,_13,_4,_13];
match _29.0 {
0 => bb8,
106176100182176716983437925959021846944 => bb14,
_ => bb2
}
}
bb33 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb34 = {
(*_31).1 = _19.0 << (*_31).0;
_10 = !(*_31).0;
(*_31).1 = 18_i8 as u8;
(*_21) = _28.3 >> _26;
(*_44) = [(*_31).0,(*_31).0];
_25.0 = (*_31).1 as u16;
(*_21) = _28.3 - _28.3;
(*_31).0 = true as u16;
_32 = _26;
_15 = [_26,_38,_47,_26,_38];
_33 = _34.3 == _34.3;
(*_31) = (_50, _34.1);
(*_31).1 = _19.0 & _34.1;
(*_31).1 = !_34.1;
_40 = _29.0;
(*_21) = !_28.3;
_25.1 = _34.1;
(*_44) = [(*_31).0,(*_31).0];
(*_31) = (_22, _34.1);
(*_44) = [(*_31).0,(*_31).0];
(*_31) = (_50, _19.0);
match _34.2 {
0 => bb11,
3947070402 => bb36,
_ => bb35
}
}
bb35 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb36 = {
(*_31) = (_50, _34.1);
(*_44) = [(*_31).0,(*_31).0];
(*_31).1 = _34.2 as u8;
Goto(bb37)
}
bb37 = {
(*_31).1 = _34.1 ^ _19.0;
_54 = _34.0;
(*_31).1 = _19.0;
_14 = _20;
_51 = (*_21) ^ (*_21);
(*_31) = (_10, _34.1);
_19 = ((*_31).1,);
_26 = _47;
(*_31) = (_50, _34.1);
_14 = _39;
(*_21) = _51;
_55.fld3 = core::ptr::addr_of!(_24);
(*_44) = [(*_31).0,(*_31).0];
(*_44) = [(*_31).0,_25.0];
(*_44) = [(*_31).0,_10];
(*_31) = (_22, _34.1);
(*_31).1 = _34.1 ^ _34.1;
_16 = _4 * _5;
_55.fld4 = [_33,_33];
_29 = (_40, (-7716093193042062627_i64));
_9 = [_26,_47,_4,_47,_47];
(*_31).0 = _34.2 as u16;
_36 = _12;
(*_31) = (_10, _34.1);
(*_31).0 = !_50;
match _34.2 {
0 => bb33,
1 => bb38,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
3947070402 => bb44,
_ => bb43
}
}
bb38 = {
_3 = _12;
RET = (140377111416329703401997700453992488924_u128,);
_4 = -_5;
_11 = _2;
_14 = _3;
_6 = _14;
_7 = [_4,_4,_4,_5,_4];
_13 = _5;
_5 = !_4;
_12 = _14;
_2 = [_5,_4,_4,_4,_13];
_13 = !_5;
_9 = [_13,_5,_4,_4,_5];
_9 = [_5,_13,_5,_4,_13];
_6 = _3;
_4 = (-5593931091337066100_i64) as isize;
_15 = [_4,_4,_13,_13,_5];
_8 = [_5,_5,_13,_5,_4];
_8 = _11;
_9 = _7;
_16 = _13 * _13;
_9 = _1;
_9 = _11;
_1 = _9;
_14 = _3;
_15 = [_4,_16,_16,_16,_5];
_5 = _13;
Goto(bb2)
}
bb39 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb40 = {
_1 = _15;
_19 = (123_u8,);
_20 = _6;
_13 = 2_usize as isize;
_7 = [_16,_5,_5,_13,_5];
_17 = _3;
_22 = _10;
RET.0 = 74308494105980172696713510200206469953_u128;
_12 = _3;
_3 = _14;
_17 = _6;
RET.0 = 269602730634850938753745450890484508502_u128 - 92491395020714940351480239857572156229_u128;
_1 = [_5,_13,_16,_16,_16];
_7 = [_5,_16,_16,_16,_5];
_19.0 = !59_u8;
_16 = _5;
_15 = [_13,_16,_16,_5,_5];
_8 = [_16,_16,_5,_16,_5];
_21 = core::ptr::addr_of!(RET.0);
(*_21) = 49638725786494688438213886510098668835_u128 | 42949656783039473397327288146470950832_u128;
_11 = [_13,_16,_4,_4,_5];
_23 = [1660693651_i32,(-1580835286_i32),(-227091941_i32),(-2058574497_i32),(-1386057158_i32)];
_6 = _20;
(*_21) = 330723890599985938146895446021653722068_u128 >> _10;
_2 = [_16,_16,_16,_5,_16];
(*_21) = 38292190240018048555893597319776194710_u128 >> _22;
(*_21) = !255881165273390672366211715521623223062_u128;
Call(_6 = fn4(_15, Move(_21), _14, (*_21), _20), ReturnTo(bb6), UnwindUnreachable())
}
bb41 = {
_14 = _6;
RET = (31625018368800776638285970369832686236_u128,);
_16 = _5 << _4;
RET = (297052455215851078239296848997681103288_u128,);
RET = (20258641486338082147320280861781363974_u128,);
match RET.0 {
20258641486338082147320280861781363974 => bb5,
_ => bb4
}
}
bb42 = {
_23 = [(-1064414614_i32),1769593818_i32,(-944598737_i32),1782609751_i32,187439321_i32];
_5 = RET.0 as isize;
_20 = _14;
_1 = _2;
_3 = _12;
_4 = _5 - _13;
_12 = _14;
_9 = _15;
_5 = -_4;
_17 = _6;
_4 = 15850228041241082364_usize as isize;
_8 = [_16,_16,_16,_13,_16];
_17 = _12;
_10 = _19.0 as u16;
_4 = !_5;
_19.0 = false as u8;
_13 = -_4;
_8 = _9;
_21 = core::ptr::addr_of!(RET.0);
_25 = (_22, _19.0);
(*_21) = true as u128;
Goto(bb7)
}
bb43 = {
_13 = 126_u8 as isize;
_9 = _11;
_16 = -_5;
_7 = [_16,_5,_5,_16,_16];
_15 = _1;
_12 = _6;
Goto(bb3)
}
bb44 = {
_29 = (_40, 8314684745440916212_i64);
(*_44) = [(*_31).0,(*_31).0];
_26 = !_47;
(*_31) = (_50, _19.0);
(*_31).0 = _50;
(*_44) = [(*_31).0,(*_31).0];
(*_31).0 = _10 * _22;
_43 = core::ptr::addr_of_mut!((*_44));
_2 = [_26,_26,_5,_26,_47];
match _34.2 {
0 => bb42,
1 => bb36,
3947070402 => bb46,
_ => bb45
}
}
bb45 = {
_21 = core::ptr::addr_of!((*_21));
(*_21) = !_28.3;
_3 = _34.0;
_31 = core::ptr::addr_of_mut!(_25);
_36 = _6;
(*_31) = (_10, _19.0);
_13 = _5 | _16;
_16 = !_5;
(*_21) = _29.1 as u128;
(*_31).1 = _19.0;
(*_31) = (_10, _19.0);
(*_31).1 = _19.0 + _19.0;
(*_31).0 = _29.0 as u16;
_19.0 = (*_31).1 | (*_31).1;
(*_31).1 = _19.0 << (*_21);
(*_21) = 1332083584_u32 as u128;
(*_21) = !_28.3;
_26 = _13 | _16;
_23 = [(-958893163_i32),(-422287482_i32),1609730418_i32,(-283305901_i32),1908714298_i32];
match _29.1 {
0 => bb12,
1 => bb8,
2 => bb20,
3 => bb21,
340282366920938463457413730947719616173 => bb23,
_ => bb22
}
}
bb46 = {
(*_44) = [_25.0,(*_31).0];
(*_31) = (_50, _19.0);
_55.fld5 = [(*_31).0,(*_31).0,(*_31).0];
(*_31) = (_50, _34.1);
_28.0 = core::ptr::addr_of_mut!((*_44));
_62 = _17;
(*_31).1 = !_19.0;
(*_44) = [(*_31).0,(*_31).0];
_37 = _16 + _26;
_63 = core::ptr::addr_of!(_24);
_56 = [(*_31).0,_10,(*_31).0,(*_31).0,(*_31).0,(*_31).0,_10,(*_31).0];
_42 = (*_63);
(*_44) = [(*_31).0,_22];
_35 = [(*_31).0,(*_31).0,(*_31).0];
Call(_66 = core::intrinsics::bswap(_47), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
(*_44) = [(*_31).0,(*_31).0];
(*_63) = (-17891_i16) as f32;
_28.0 = core::ptr::addr_of_mut!((*_44));
(*_44) = [(*_31).0,(*_31).0];
(*_63) = _42 + _42;
_55.fld2 = _48;
Goto(bb48)
}
bb48 = {
(*_31).0 = _29.0 as u16;
(*_63) = -_42;
_59 = core::ptr::addr_of_mut!((*_44));
_69 = _51;
_28.3 = (*_21);
(*_31).1 = !_34.1;
_38 = _32 + _16;
_46 = 0_usize;
(*_59) = [_56[_46],_56[_46]];
_55.fld1.0 = !(*_21);
_78 = -_29.1;
(*_44) = [_55.fld5[_46],_56[_46]];
_25.1 = _34.1 - _34.1;
_39 = _20;
(*_63) = _42 - _42;
(*_31).1 = _34.1 ^ _34.1;
_76 = _37 ^ _15[_46];
_34.1 = _78 as u8;
_79 = _14;
Goto(bb49)
}
bb49 = {
(*_31).0 = !(*_44)[_46];
(*_44)[_46] = _56[_46];
(*_44)[_46] = (*_31).0;
_78 = _29.1 << _9[_46];
(*_63) = _42 * _42;
(*_44) = [_22,(*_31).0];
(*_44) = [_55.fld5[_46],_50];
_45 = Move(_59);
(*_44)[_46] = (*_31).0;
(*_21) = _55.fld1.0 - _55.fld1.0;
_34.2 = 740559434_u32 | 3313253344_u32;
_32 = _47 * _47;
(*_31).0 = _28.1[_46];
_13 = _76;
(*_63) = -_42;
(*_44)[_46] = !(*_31).0;
_83.fld1 = [_34.2,_34.2,_34.2,_34.2,_34.2];
(*_21) = _51 & _28.3;
(*_44) = [(*_31).0,(*_31).0];
_84 = (*_31).1 >> _2[_46];
_75.0[_46] = _23[_46];
Goto(bb50)
}
bb50 = {
Call(_89 = dump_var(3_usize, 36_usize, Move(_36), 10_usize, Move(_10), 17_usize, Move(_17), 66_usize, Move(_66)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_89 = dump_var(3_usize, 84_usize, Move(_84), 40_usize, Move(_40), 20_usize, Move(_20), 33_usize, Move(_33)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_89 = dump_var(3_usize, 79_usize, Move(_79), 3_usize, Move(_3), 35_usize, Move(_35), 32_usize, Move(_32)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_89 = dump_var(3_usize, 26_usize, Move(_26), 11_usize, Move(_11), 56_usize, Move(_56), 5_usize, Move(_5)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_89 = dump_var(3_usize, 54_usize, Move(_54), 38_usize, Move(_38), 16_usize, Move(_16), 14_usize, Move(_14)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_89 = dump_var(3_usize, 62_usize, Move(_62), 1_usize, Move(_1), 13_usize, Move(_13), 90_usize, _90), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: [isize; 5],mut _2: *const u128,mut _3: char,mut _4: u128,mut _5: char) -> char {
mir! {
type RET = char;
let _6: [u32; 5];
let _7: *const (char, u8, u32, f64);
let _8: (isize, *const u128);
let _9: bool;
let _10: Adt43;
let _11: char;
let _12: (u128,);
let _13: *const i16;
let _14: &'static &'static mut u64;
let _15: [i8; 4];
let _16: f64;
let _17: f64;
let _18: &'static &'static mut u64;
let _19: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _20: f32;
let _21: bool;
let _22: &'static &'static mut u64;
let _23: *const f32;
let _24: (i128, i8, i32, *const u64);
let _25: isize;
let _26: isize;
let _27: i16;
let _28: [i8; 6];
let _29: *const (i128, i64);
let _30: &'static mut [u16; 2];
let _31: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _32: f32;
let _33: isize;
let _34: *const u64;
let _35: *const (i128, i64);
let _36: *mut [u16; 2];
let _37: (u16, u8);
let _38: &'static mut Adt35;
let _39: &'static (i32, *mut [u16; 2], bool, f64);
let _40: *mut (u16, u8);
let _41: usize;
let _42: f32;
let _43: f64;
let _44: *const u64;
let _45: &'static i128;
let _46: isize;
let _47: u64;
let _48: &'static mut Adt35;
let _49: f32;
let _50: isize;
let _51: i32;
let _52: [u16; 3];
let _53: (u8,);
let _54: *mut (i32, *mut [u16; 2], bool, f64);
let _55: f64;
let _56: *const *const u128;
let _57: u16;
let _58: char;
let _59: Adt58;
let _60: *mut [u16; 2];
let _61: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _62: f32;
let _63: *mut (i32, *mut [u16; 2], bool, f64);
let _64: ();
let _65: ();
{
_3 = _5;
_2 = core::ptr::addr_of!(_4);
RET = _5;
(*_2) = 280762314339719994147749092117682222817_u128 | 121788980518574499364793836363681070175_u128;
_4 = !255155351543475889204471056040048181981_u128;
(*_2) = (-4489240721431433589_i64) as u128;
Goto(bb1)
}
bb1 = {
_4 = 101699896114049168860911582682733088465_u128 + 280962461802862079709276081079532500472_u128;
Call(_6 = fn5(RET, Move(_2), (*_2), (*_2), (*_2), (*_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _3;
_2 = core::ptr::addr_of!(_4);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 159844147350849270686519887961884121765_u128 - 216053603274798611356752828921997369862_u128;
_2 = core::ptr::addr_of!((*_2));
_8 = ((-35_isize), Move(_2));
_8.1 = core::ptr::addr_of!(_4);
RET = _5;
_4 = 22_i8 as u128;
_2 = core::ptr::addr_of!(_4);
RET = _5;
RET = _5;
(*_2) = 127737771516003197922640586501530943378_u128 * 174750335282854270831195577514324911996_u128;
(*_2) = 332252383176936732087258257644091290990_u128;
_7 = core::ptr::addr_of!(_10.fld3);
(*_7).2 = !1281166207_u32;
(*_7).3 = (*_2) as f64;
Call((*_7).3 = core::intrinsics::transmute(_8.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_7).1 = !36_u8;
(*_7).2 = !3207087876_u32;
(*_7).0 = RET;
(*_7).0 = _3;
RET = (*_7).0;
(*_2) = 25392601679311073204361536597397907466_u128;
_10.fld1 = _6;
Goto(bb4)
}
bb4 = {
(*_7).0 = RET;
(*_7).2 = (-8176459251829952356_i64) as u32;
(*_7).1 = 156_u8 << (*_2);
(*_7).3 = (*_7).2 as f64;
(*_7).0 = _5;
_10.fld7.0 = (-2127567766_i32);
(*_7).0 = _5;
(*_7).3 = (*_7).1 as f64;
(*_7).0 = RET;
(*_7).1 = 103_u8 << (*_7).2;
_10.fld5 = 14711166476666152083_u64;
_10.fld3.3 = 176_i16 as f64;
_11 = (*_7).0;
(*_7).1 = 98_u8 - 180_u8;
(*_2) = 97377224306953151154122108494103211268_u128 | 82634924677000711430638245529409240655_u128;
_10.fld3.0 = _11;
(*_7).3 = (*_7).1 as f64;
_10.fld6 = (-2215052656549737646_i64) >> (*_7).1;
(*_7).2 = 2776816099_u32 & 436676887_u32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 47079266519019354221680716921128269542_u128 - 139714239117950835119735944663191839852_u128;
(*_2) = 141859168527857672098930809732316361326_u128;
(*_7).3 = _10.fld6 as f64;
(*_7).0 = _11;
_8.0 = 9223372036854775807_isize - 9223372036854775807_isize;
(*_7).1 = 191_u8;
Goto(bb5)
}
bb5 = {
_7 = core::ptr::addr_of!((*_7));
(*_7).1 = 181_u8 & 188_u8;
(*_7).1 = 179_u8 ^ 233_u8;
(*_7).0 = RET;
(*_2) = 118838744176919275690198533307026457361_u128;
RET = (*_7).0;
(*_7).0 = RET;
_8.0 = (-9223372036854775808_isize);
(*_7).1 = 145_u8 * 238_u8;
(*_2) = 243731341389626053228497167688156180900_u128;
(*_7).2 = 2267822753_u32 << (*_7).1;
(*_7).2 = 3046845270_u32 >> (*_7).1;
_7 = core::ptr::addr_of!((*_7));
(*_7).2 = !3991539607_u32;
(*_7).2 = 1566838831_u32 | 2876390_u32;
(*_7).3 = _10.fld6 as f64;
(*_7).1 = 11_u8 - 68_u8;
(*_7).3 = 44004309484428670553800741288556521778_i128 as f64;
(*_7).3 = _10.fld7.0 as f64;
match (*_2) {
243731341389626053228497167688156180900 => bb6,
_ => bb1
}
}
bb6 = {
(*_7).3 = (*_7).1 as f64;
(*_7).0 = _5;
_15 = [(-87_i8),(-89_i8),95_i8,13_i8];
_10.fld4 = (true,);
(*_7).3 = 9317_u16 as f64;
_10.fld3.1 = !227_u8;
(*_2) = 164819628535486412762899717339158544183_u128 * 278327584860245512013776994119622964002_u128;
(*_7).3 = _10.fld6 as f64;
_5 = (*_7).0;
(*_7).1 = 42_u8 & 255_u8;
(*_2) = 83391821107990720251128678614501802810_u128 - 63772641464246582922382826366477469291_u128;
(*_7).3 = (*_2) as f64;
(*_7).3 = _8.0 as f64;
(*_7).2 = !2121149861_u32;
(*_7).3 = _8.0 as f64;
(*_7).0 = _5;
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb7 = {
_7 = core::ptr::addr_of!((*_7));
(*_7).1 = 181_u8 & 188_u8;
(*_7).1 = 179_u8 ^ 233_u8;
(*_7).0 = RET;
(*_2) = 118838744176919275690198533307026457361_u128;
RET = (*_7).0;
(*_7).0 = RET;
_8.0 = (-9223372036854775808_isize);
(*_7).1 = 145_u8 * 238_u8;
(*_2) = 243731341389626053228497167688156180900_u128;
(*_7).2 = 2267822753_u32 << (*_7).1;
(*_7).2 = 3046845270_u32 >> (*_7).1;
_7 = core::ptr::addr_of!((*_7));
(*_7).2 = !3991539607_u32;
(*_7).2 = 1566838831_u32 | 2876390_u32;
(*_7).3 = _10.fld6 as f64;
(*_7).1 = 11_u8 - 68_u8;
(*_7).3 = 44004309484428670553800741288556521778_i128 as f64;
(*_7).3 = _10.fld7.0 as f64;
match (*_2) {
243731341389626053228497167688156180900 => bb6,
_ => bb1
}
}
bb8 = {
RET = _3;
_2 = core::ptr::addr_of!(_4);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 159844147350849270686519887961884121765_u128 - 216053603274798611356752828921997369862_u128;
_2 = core::ptr::addr_of!((*_2));
_8 = ((-35_isize), Move(_2));
_8.1 = core::ptr::addr_of!(_4);
RET = _5;
_4 = 22_i8 as u128;
_2 = core::ptr::addr_of!(_4);
RET = _5;
RET = _5;
(*_2) = 127737771516003197922640586501530943378_u128 * 174750335282854270831195577514324911996_u128;
(*_2) = 332252383176936732087258257644091290990_u128;
_7 = core::ptr::addr_of!(_10.fld3);
(*_7).2 = !1281166207_u32;
(*_7).3 = (*_2) as f64;
Call((*_7).3 = core::intrinsics::transmute(_8.0), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
(*_7).1 = !36_u8;
(*_7).2 = !3207087876_u32;
(*_7).0 = RET;
(*_7).0 = _3;
RET = (*_7).0;
(*_2) = 25392601679311073204361536597397907466_u128;
_10.fld1 = _6;
Goto(bb4)
}
bb10 = {
_8 = ((-9223372036854775808_isize), Move(_2));
_9 = _10.fld4.0 ^ _10.fld4.0;
(*_7).3 = _4 as f64;
(*_7).2 = (*_7).0 as u32;
_10.fld7 = (1591773895_i32,);
_9 = _10.fld4.0 ^ _10.fld4.0;
(*_7).2 = 3382064760_u32 ^ 2626626472_u32;
(*_7).3 = _8.0 as f64;
_8.0 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_20 = 81867625732780622115867395343430110491_i128 as f32;
_7 = core::ptr::addr_of!((*_7));
_10.fld3.0 = _11;
(*_7).1 = (-10802976994948902956618443574620511715_i128) as u8;
(*_7).0 = _11;
_7 = core::ptr::addr_of!((*_7));
Call((*_7).2 = core::intrinsics::transmute((*_7).0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
(*_7).0 = _5;
_9 = _10.fld4.0 | _10.fld4.0;
_10.fld2 = _10.fld5 as isize;
(*_7).0 = _3;
(*_7).3 = _10.fld7.0 as f64;
(*_7).1 = 194_u8;
(*_7).3 = (*_7).2 as f64;
_17 = (*_7).3;
(*_7) = (_3, 206_u8, 3055055167_u32, _17);
(*_7).0 = _5;
(*_7).1 = 18_u8 >> (*_7).2;
(*_7).3 = _17 * _17;
(*_7).0 = RET;
Call((*_7).3 = core::intrinsics::transmute(_10.fld5), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_7).1 = !169_u8;
(*_7) = (_5, 26_u8, 3195288172_u32, _17);
(*_7).2 = _10.fld6 as u32;
(*_7).2 = 3309202525_u32;
(*_7).1 = 201_u8;
(*_7) = (_3, 46_u8, 1768990607_u32, _17);
(*_7) = (_3, 168_u8, 1777994441_u32, _17);
Goto(bb13)
}
bb13 = {
(*_7).3 = -_17;
_20 = 91_i8 as f32;
_23 = core::ptr::addr_of!(_20);
(*_7) = (_11, 165_u8, 842473924_u32, _17);
(*_7) = (RET, 3_u8, 1543568517_u32, _17);
(*_7).3 = _17 * _17;
_10.fld3.2 = 3_usize as u32;
(*_7).2 = 26492_u16 as u32;
_24.1 = !2_i8;
(*_7).2 = 1605278004_u32;
(*_7).2 = _8.0 as u32;
_10.fld0 = [(*_7).0,(*_7).0,(*_7).0,(*_7).0,_10.fld3.0,(*_7).0,(*_7).0];
(*_23) = _4 as f32;
Goto(bb14)
}
bb14 = {
_6 = [(*_7).2,(*_7).2,(*_7).2,(*_7).2,(*_7).2];
_26 = !_8.0;
(*_7).1 = 113_u8;
Goto(bb15)
}
bb15 = {
(*_7).1 = 138_u8 * 33_u8;
(*_7).1 = 43_u8;
(*_7).1 = _4 as u8;
(*_23) = _4 as f32;
Goto(bb16)
}
bb16 = {
(*_7) = (_11, 210_u8, 158373869_u32, _17);
_7 = core::ptr::addr_of!((*_7));
(*_7).0 = RET;
_26 = _10.fld7.0 as isize;
(*_23) = _10.fld7.0 as f32;
RET = _10.fld3.0;
(*_7).2 = _10.fld5 as u32;
_5 = (*_7).0;
_10.fld2 = -_26;
(*_7).1 = 71_u8 + 97_u8;
(*_7) = (RET, 158_u8, 3002722977_u32, _17);
(*_7) = (RET, 112_u8, 2935539873_u32, _17);
(*_23) = _4 as f32;
(*_23) = _10.fld6 as f32;
(*_7).2 = 2361718609_u32;
(*_23) = 5755_u16 as f32;
match _10.fld3.1 {
0 => bb8,
1 => bb5,
2 => bb7,
3 => bb17,
4 => bb18,
5 => bb19,
112 => bb21,
_ => bb20
}
}
bb17 = {
(*_7).0 = RET;
(*_7).2 = (-8176459251829952356_i64) as u32;
(*_7).1 = 156_u8 << (*_2);
(*_7).3 = (*_7).2 as f64;
(*_7).0 = _5;
_10.fld7.0 = (-2127567766_i32);
(*_7).0 = _5;
(*_7).3 = (*_7).1 as f64;
(*_7).0 = RET;
(*_7).1 = 103_u8 << (*_7).2;
_10.fld5 = 14711166476666152083_u64;
_10.fld3.3 = 176_i16 as f64;
_11 = (*_7).0;
(*_7).1 = 98_u8 - 180_u8;
(*_2) = 97377224306953151154122108494103211268_u128 | 82634924677000711430638245529409240655_u128;
_10.fld3.0 = _11;
(*_7).3 = (*_7).1 as f64;
_10.fld6 = (-2215052656549737646_i64) >> (*_7).1;
(*_7).2 = 2776816099_u32 & 436676887_u32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 47079266519019354221680716921128269542_u128 - 139714239117950835119735944663191839852_u128;
(*_2) = 141859168527857672098930809732316361326_u128;
(*_7).3 = _10.fld6 as f64;
(*_7).0 = _11;
_8.0 = 9223372036854775807_isize - 9223372036854775807_isize;
(*_7).1 = 191_u8;
Goto(bb5)
}
bb18 = {
RET = _3;
_2 = core::ptr::addr_of!(_4);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 159844147350849270686519887961884121765_u128 - 216053603274798611356752828921997369862_u128;
_2 = core::ptr::addr_of!((*_2));
_8 = ((-35_isize), Move(_2));
_8.1 = core::ptr::addr_of!(_4);
RET = _5;
_4 = 22_i8 as u128;
_2 = core::ptr::addr_of!(_4);
RET = _5;
RET = _5;
(*_2) = 127737771516003197922640586501530943378_u128 * 174750335282854270831195577514324911996_u128;
(*_2) = 332252383176936732087258257644091290990_u128;
_7 = core::ptr::addr_of!(_10.fld3);
(*_7).2 = !1281166207_u32;
(*_7).3 = (*_2) as f64;
Call((*_7).3 = core::intrinsics::transmute(_8.0), ReturnTo(bb3), UnwindUnreachable())
}
bb19 = {
(*_7).3 = -_17;
_20 = 91_i8 as f32;
_23 = core::ptr::addr_of!(_20);
(*_7) = (_11, 165_u8, 842473924_u32, _17);
(*_7) = (RET, 3_u8, 1543568517_u32, _17);
(*_7).3 = _17 * _17;
_10.fld3.2 = 3_usize as u32;
(*_7).2 = 26492_u16 as u32;
_24.1 = !2_i8;
(*_7).2 = 1605278004_u32;
(*_7).2 = _8.0 as u32;
_10.fld0 = [(*_7).0,(*_7).0,(*_7).0,(*_7).0,_10.fld3.0,(*_7).0,(*_7).0];
(*_23) = _4 as f32;
Goto(bb14)
}
bb20 = {
(*_7).3 = (*_7).1 as f64;
(*_7).0 = _5;
_15 = [(-87_i8),(-89_i8),95_i8,13_i8];
_10.fld4 = (true,);
(*_7).3 = 9317_u16 as f64;
_10.fld3.1 = !227_u8;
(*_2) = 164819628535486412762899717339158544183_u128 * 278327584860245512013776994119622964002_u128;
(*_7).3 = _10.fld6 as f64;
_5 = (*_7).0;
(*_7).1 = 42_u8 & 255_u8;
(*_2) = 83391821107990720251128678614501802810_u128 - 63772641464246582922382826366477469291_u128;
(*_7).3 = (*_2) as f64;
(*_7).3 = _8.0 as f64;
(*_7).2 = !2121149861_u32;
(*_7).3 = _8.0 as f64;
(*_7).0 = _5;
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb21 = {
_10.fld6 = -2678225215940129410_i64;
(*_7).3 = _17 * _17;
(*_7).1 = 248_u8;
_24.2 = _9 as i32;
(*_7).1 = (*_7).0 as u8;
_12.0 = (*_7).1 as u128;
(*_7).1 = _24.1 as u8;
(*_7).3 = _24.2 as f64;
_10.fld5 = _24.1 as u64;
Goto(bb22)
}
bb22 = {
(*_7).0 = _11;
_10.fld5 = (*_7).2 as u64;
(*_7).0 = _3;
_10.fld4 = (_9,);
(*_7) = (RET, 206_u8, 2912529921_u32, _17);
(*_7).3 = _17 * _17;
Goto(bb23)
}
bb23 = {
_9 = (*_7).0 != (*_7).0;
(*_7).2 = 2499827481_u32 + 1382442718_u32;
(*_7).1 = !70_u8;
_10.fld3 = (_5, 171_u8, 3668754438_u32, _17);
(*_7).0 = _3;
(*_7).0 = _5;
(*_7) = (_11, 160_u8, 1177299736_u32, _17);
_2 = core::ptr::addr_of!(_4);
(*_7).1 = !125_u8;
(*_23) = 28607_u16 as f32;
Goto(bb24)
}
bb24 = {
(*_7).3 = _17;
(*_7).0 = _11;
(*_23) = _10.fld7.0 as f32;
_10.fld6 = (*_7).3 as i64;
(*_23) = (-27400_i16) as f32;
(*_7).0 = _3;
(*_7).0 = _5;
_6 = [(*_7).2,(*_7).2,(*_7).2,(*_7).2,(*_7).2];
_10.fld3.0 = RET;
(*_7).2 = !1245287698_u32;
(*_23) = _10.fld6 as f32;
(*_7).0 = RET;
(*_7).1 = !187_u8;
(*_7).1 = _24.2 as u8;
(*_7).3 = _17 - _17;
(*_7) = (_11, 156_u8, 3442021777_u32, _17);
_10.fld3.0 = _3;
(*_7) = (_5, 223_u8, 1695922779_u32, _17);
(*_7).1 = 202_u8;
(*_23) = 6_usize as f32;
(*_23) = (*_7).1 as f32;
(*_7).0 = _11;
(*_7).1 = (*_7).2 as u8;
(*_7).0 = _3;
(*_7).2 = !462690189_u32;
(*_7).1 = !238_u8;
Goto(bb25)
}
bb25 = {
(*_2) = _12.0 << (*_7).1;
(*_23) = _10.fld5 as f32;
_32 = (*_23);
(*_7).1 = 7504946057728160015_usize as u8;
(*_2) = _10.fld6 as u128;
(*_7) = (RET, 222_u8, 2657824511_u32, _17);
(*_23) = (*_7).1 as f32;
(*_23) = _32 + _32;
(*_7).0 = _5;
_12 = ((*_2),);
(*_7).2 = 2585781472_u32 | 1427180500_u32;
_37.0 = 56143_u16;
_10.fld2 = _26 >> (*_2);
(*_7).1 = !254_u8;
(*_23) = _32;
(*_7) = (_3, 185_u8, 1487602097_u32, _17);
_13 = core::ptr::addr_of!(_27);
(*_7).0 = RET;
(*_7).2 = (-27694_i16) as u32;
(*_13) = !(-4312_i16);
Call((*_7).2 = core::intrinsics::transmute((*_7).0), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
(*_13) = (-17450_i16);
_24.0 = 67523372335915802088179692213256092563_i128 << (*_7).1;
(*_7) = (RET, 123_u8, 1513947671_u32, _17);
(*_13) = -(-28799_i16);
(*_7).3 = _17 - _17;
(*_13) = 16479_i16;
_20 = _32 * _32;
(*_7).3 = (*_7).2 as f64;
_32 = (*_23);
(*_7).2 = 3386394800_u32 ^ 1560938088_u32;
(*_7).2 = !498495347_u32;
match (*_13) {
0 => bb27,
1 => bb28,
2 => bb29,
16479 => bb31,
_ => bb30
}
}
bb27 = {
(*_7).0 = RET;
(*_7).2 = (-8176459251829952356_i64) as u32;
(*_7).1 = 156_u8 << (*_2);
(*_7).3 = (*_7).2 as f64;
(*_7).0 = _5;
_10.fld7.0 = (-2127567766_i32);
(*_7).0 = _5;
(*_7).3 = (*_7).1 as f64;
(*_7).0 = RET;
(*_7).1 = 103_u8 << (*_7).2;
_10.fld5 = 14711166476666152083_u64;
_10.fld3.3 = 176_i16 as f64;
_11 = (*_7).0;
(*_7).1 = 98_u8 - 180_u8;
(*_2) = 97377224306953151154122108494103211268_u128 | 82634924677000711430638245529409240655_u128;
_10.fld3.0 = _11;
(*_7).3 = (*_7).1 as f64;
_10.fld6 = (-2215052656549737646_i64) >> (*_7).1;
(*_7).2 = 2776816099_u32 & 436676887_u32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 47079266519019354221680716921128269542_u128 - 139714239117950835119735944663191839852_u128;
(*_2) = 141859168527857672098930809732316361326_u128;
(*_7).3 = _10.fld6 as f64;
(*_7).0 = _11;
_8.0 = 9223372036854775807_isize - 9223372036854775807_isize;
(*_7).1 = 191_u8;
Goto(bb5)
}
bb28 = {
(*_7).3 = _17;
(*_7).0 = _11;
(*_23) = _10.fld7.0 as f32;
_10.fld6 = (*_7).3 as i64;
(*_23) = (-27400_i16) as f32;
(*_7).0 = _3;
(*_7).0 = _5;
_6 = [(*_7).2,(*_7).2,(*_7).2,(*_7).2,(*_7).2];
_10.fld3.0 = RET;
(*_7).2 = !1245287698_u32;
(*_23) = _10.fld6 as f32;
(*_7).0 = RET;
(*_7).1 = !187_u8;
(*_7).1 = _24.2 as u8;
(*_7).3 = _17 - _17;
(*_7) = (_11, 156_u8, 3442021777_u32, _17);
_10.fld3.0 = _3;
(*_7) = (_5, 223_u8, 1695922779_u32, _17);
(*_7).1 = 202_u8;
(*_23) = 6_usize as f32;
(*_23) = (*_7).1 as f32;
(*_7).0 = _11;
(*_7).1 = (*_7).2 as u8;
(*_7).0 = _3;
(*_7).2 = !462690189_u32;
(*_7).1 = !238_u8;
Goto(bb25)
}
bb29 = {
(*_7).1 = 138_u8 * 33_u8;
(*_7).1 = 43_u8;
(*_7).1 = _4 as u8;
(*_23) = _4 as f32;
Goto(bb16)
}
bb30 = {
(*_7).0 = _11;
_10.fld5 = (*_7).2 as u64;
(*_7).0 = _3;
_10.fld4 = (_9,);
(*_7) = (RET, 206_u8, 2912529921_u32, _17);
(*_7).3 = _17 * _17;
Goto(bb23)
}
bb31 = {
(*_7).3 = _17 - _17;
(*_23) = _32 + _32;
(*_7).3 = -_17;
_10.fld3.0 = RET;
(*_7) = (_11, 236_u8, 1953020135_u32, _17);
(*_7).0 = _5;
_37.1 = (*_7).1 % (*_7).1;
(*_13) = 25008_i16 - (-1851_i16);
(*_7).0 = _5;
(*_7).0 = _5;
_10.fld5 = _37.0 as u64;
Goto(bb32)
}
bb32 = {
_42 = -(*_23);
(*_23) = -_32;
_10.fld3.3 = (*_2) as f64;
(*_13) = (-6325_i16) | (-12571_i16);
_20 = _42 - _32;
_10.fld3 = (RET, _37.1, 1367528184_u32, _17);
_8.0 = _26 * _10.fld2;
_41 = !4_usize;
(*_23) = _42 + _42;
_27 = _12.0 as i16;
(*_7).3 = -_17;
_10.fld3 = (_11, _37.1, 900255018_u32, _17);
(*_7).3 = -_17;
(*_7).0 = RET;
_43 = (*_7).3;
_37.1 = !(*_7).1;
(*_7).2 = !3611696359_u32;
(*_7).2 = 3088642424_u32 + 2041270979_u32;
(*_2) = (*_23) as u128;
_3 = (*_7).0;
(*_7).1 = _37.1 + _37.1;
(*_13) = 11178_i16;
(*_7).1 = _10.fld6 as u8;
_23 = core::ptr::addr_of!((*_23));
_12 = ((*_2),);
match (*_13) {
11178 => bb34,
_ => bb33
}
}
bb33 = {
RET = _3;
_2 = core::ptr::addr_of!(_4);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 159844147350849270686519887961884121765_u128 - 216053603274798611356752828921997369862_u128;
_2 = core::ptr::addr_of!((*_2));
_8 = ((-35_isize), Move(_2));
_8.1 = core::ptr::addr_of!(_4);
RET = _5;
_4 = 22_i8 as u128;
_2 = core::ptr::addr_of!(_4);
RET = _5;
RET = _5;
(*_2) = 127737771516003197922640586501530943378_u128 * 174750335282854270831195577514324911996_u128;
(*_2) = 332252383176936732087258257644091290990_u128;
_7 = core::ptr::addr_of!(_10.fld3);
(*_7).2 = !1281166207_u32;
(*_7).3 = (*_2) as f64;
Call((*_7).3 = core::intrinsics::transmute(_8.0), ReturnTo(bb3), UnwindUnreachable())
}
bb34 = {
_37 = (37337_u16, (*_7).1);
(*_7).0 = _3;
(*_7) = (_3, _37.1, 2616903853_u32, _17);
_1 = [_10.fld2,_8.0,_26,_10.fld2,_26];
(*_2) = _12.0 * _12.0;
(*_7).3 = _43;
(*_7).3 = _43 * _17;
(*_23) = _42 * _32;
(*_7) = (_3, _37.1, 1684868590_u32, _43);
_46 = _10.fld2;
_1 = [_46,_26,_46,_10.fld2,_46];
(*_7).2 = 2076233178_u32 * 3166350404_u32;
_46 = _37.0 as isize;
(*_7) = (RET, _37.1, 3528874993_u32, _17);
(*_7) = (_11, _37.1, 932310519_u32, _17);
_17 = -(*_7).3;
(*_7).0 = _3;
(*_7).3 = _10.fld6 as f64;
(*_7).1 = _8.0 as u8;
(*_13) = 19005_i16;
(*_7) = (_11, _37.1, 344723493_u32, _17);
(*_7).1 = !_37.1;
(*_7).3 = _10.fld6 as f64;
(*_2) = _12.0 | _12.0;
(*_7).3 = _43 + _43;
Goto(bb35)
}
bb35 = {
(*_7) = (RET, _37.1, 885976939_u32, _43);
(*_7).1 = _37.1 >> (*_2);
(*_23) = (*_2) as f32;
_24.3 = core::ptr::addr_of!(_47);
(*_23) = _42 * _42;
(*_2) = !_12.0;
_4 = _12.0;
(*_7) = (_3, _37.1, 3586550407_u32, _17);
_28 = [_24.1,_24.1,_24.1,_24.1,_24.1,_24.1];
_49 = (*_23) * (*_23);
(*_2) = _12.0;
(*_7).3 = _17 - _17;
_25 = _46 * _26;
_24.1 = 22_i8 - 28_i8;
(*_7).2 = 1516017449_u32 - 1161326255_u32;
(*_7).1 = _37.1 & _37.1;
(*_23) = _42 * _49;
(*_2) = !_12.0;
(*_7).2 = !3959802125_u32;
match (*_13) {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
4 => bb40,
5 => bb41,
19005 => bb43,
_ => bb42
}
}
bb36 = {
(*_7).0 = RET;
(*_7).2 = (-8176459251829952356_i64) as u32;
(*_7).1 = 156_u8 << (*_2);
(*_7).3 = (*_7).2 as f64;
(*_7).0 = _5;
_10.fld7.0 = (-2127567766_i32);
(*_7).0 = _5;
(*_7).3 = (*_7).1 as f64;
(*_7).0 = RET;
(*_7).1 = 103_u8 << (*_7).2;
_10.fld5 = 14711166476666152083_u64;
_10.fld3.3 = 176_i16 as f64;
_11 = (*_7).0;
(*_7).1 = 98_u8 - 180_u8;
(*_2) = 97377224306953151154122108494103211268_u128 | 82634924677000711430638245529409240655_u128;
_10.fld3.0 = _11;
(*_7).3 = (*_7).1 as f64;
_10.fld6 = (-2215052656549737646_i64) >> (*_7).1;
(*_7).2 = 2776816099_u32 & 436676887_u32;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 47079266519019354221680716921128269542_u128 - 139714239117950835119735944663191839852_u128;
(*_2) = 141859168527857672098930809732316361326_u128;
(*_7).3 = _10.fld6 as f64;
(*_7).0 = _11;
_8.0 = 9223372036854775807_isize - 9223372036854775807_isize;
(*_7).1 = 191_u8;
Goto(bb5)
}
bb37 = {
(*_7).3 = -_17;
_20 = 91_i8 as f32;
_23 = core::ptr::addr_of!(_20);
(*_7) = (_11, 165_u8, 842473924_u32, _17);
(*_7) = (RET, 3_u8, 1543568517_u32, _17);
(*_7).3 = _17 * _17;
_10.fld3.2 = 3_usize as u32;
(*_7).2 = 26492_u16 as u32;
_24.1 = !2_i8;
(*_7).2 = 1605278004_u32;
(*_7).2 = _8.0 as u32;
_10.fld0 = [(*_7).0,(*_7).0,(*_7).0,(*_7).0,_10.fld3.0,(*_7).0,(*_7).0];
(*_23) = _4 as f32;
Goto(bb14)
}
bb38 = {
RET = _3;
_2 = core::ptr::addr_of!(_4);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 159844147350849270686519887961884121765_u128 - 216053603274798611356752828921997369862_u128;
_2 = core::ptr::addr_of!((*_2));
_8 = ((-35_isize), Move(_2));
_8.1 = core::ptr::addr_of!(_4);
RET = _5;
_4 = 22_i8 as u128;
_2 = core::ptr::addr_of!(_4);
RET = _5;
RET = _5;
(*_2) = 127737771516003197922640586501530943378_u128 * 174750335282854270831195577514324911996_u128;
(*_2) = 332252383176936732087258257644091290990_u128;
_7 = core::ptr::addr_of!(_10.fld3);
(*_7).2 = !1281166207_u32;
(*_7).3 = (*_2) as f64;
Call((*_7).3 = core::intrinsics::transmute(_8.0), ReturnTo(bb3), UnwindUnreachable())
}
bb39 = {
(*_13) = (-17450_i16);
_24.0 = 67523372335915802088179692213256092563_i128 << (*_7).1;
(*_7) = (RET, 123_u8, 1513947671_u32, _17);
(*_13) = -(-28799_i16);
(*_7).3 = _17 - _17;
(*_13) = 16479_i16;
_20 = _32 * _32;
(*_7).3 = (*_7).2 as f64;
_32 = (*_23);
(*_7).2 = 3386394800_u32 ^ 1560938088_u32;
(*_7).2 = !498495347_u32;
match (*_13) {
0 => bb27,
1 => bb28,
2 => bb29,
16479 => bb31,
_ => bb30
}
}
bb40 = {
(*_7).3 = (*_7).1 as f64;
(*_7).0 = _5;
_15 = [(-87_i8),(-89_i8),95_i8,13_i8];
_10.fld4 = (true,);
(*_7).3 = 9317_u16 as f64;
_10.fld3.1 = !227_u8;
(*_2) = 164819628535486412762899717339158544183_u128 * 278327584860245512013776994119622964002_u128;
(*_7).3 = _10.fld6 as f64;
_5 = (*_7).0;
(*_7).1 = 42_u8 & 255_u8;
(*_2) = 83391821107990720251128678614501802810_u128 - 63772641464246582922382826366477469291_u128;
(*_7).3 = (*_2) as f64;
(*_7).3 = _8.0 as f64;
(*_7).2 = !2121149861_u32;
(*_7).3 = _8.0 as f64;
(*_7).0 = _5;
match _8.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb41 = {
_8 = ((-9223372036854775808_isize), Move(_2));
_9 = _10.fld4.0 ^ _10.fld4.0;
(*_7).3 = _4 as f64;
(*_7).2 = (*_7).0 as u32;
_10.fld7 = (1591773895_i32,);
_9 = _10.fld4.0 ^ _10.fld4.0;
(*_7).2 = 3382064760_u32 ^ 2626626472_u32;
(*_7).3 = _8.0 as f64;
_8.0 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_20 = 81867625732780622115867395343430110491_i128 as f32;
_7 = core::ptr::addr_of!((*_7));
_10.fld3.0 = _11;
(*_7).1 = (-10802976994948902956618443574620511715_i128) as u8;
(*_7).0 = _11;
_7 = core::ptr::addr_of!((*_7));
Call((*_7).2 = core::intrinsics::transmute((*_7).0), ReturnTo(bb11), UnwindUnreachable())
}
bb42 = {
_10.fld6 = -2678225215940129410_i64;
(*_7).3 = _17 * _17;
(*_7).1 = 248_u8;
_24.2 = _9 as i32;
(*_7).1 = (*_7).0 as u8;
_12.0 = (*_7).1 as u128;
(*_7).1 = _24.1 as u8;
(*_7).3 = _24.2 as f64;
_10.fld5 = _24.1 as u64;
Goto(bb22)
}
bb43 = {
_10.fld3.0 = _11;
(*_2) = _12.0;
_45 = &_24.0;
(*_2) = _12.0;
_10.fld4 = (_9,);
(*_7).0 = _3;
_49 = (*_23) - (*_23);
_8.1 = core::ptr::addr_of!((*_2));
(*_23) = _49 * _42;
(*_23) = -_49;
(*_7).0 = _3;
(*_7).0 = _11;
_16 = -(*_7).3;
(*_7).1 = _37.1;
(*_7).1 = _37.1 >> (*_45);
match (*_13) {
0 => bb29,
1 => bb18,
2 => bb24,
19005 => bb45,
_ => bb44
}
}
bb44 = {
(*_7).1 = !169_u8;
(*_7) = (_5, 26_u8, 3195288172_u32, _17);
(*_7).2 = _10.fld6 as u32;
(*_7).2 = 3309202525_u32;
(*_7).1 = 201_u8;
(*_7) = (_3, 46_u8, 1768990607_u32, _17);
(*_7) = (_3, 168_u8, 1777994441_u32, _17);
Goto(bb13)
}
bb45 = {
(*_13) = (-5001_i16) - 14269_i16;
(*_7).3 = _43 + _16;
(*_7) = (RET, _37.1, 2252672596_u32, _16);
(*_23) = _24.2 as f32;
(*_7).1 = _10.fld3.3 as u8;
_11 = (*_7).0;
(*_7).3 = _16;
_4 = _46 as u128;
(*_13) = _37.0 as i16;
(*_7).1 = _37.1 & _37.1;
(*_7) = (_11, _37.1, 2918856911_u32, _17);
(*_7) = (_5, _37.1, 776694273_u32, _16);
match (*_7).2 {
0 => bb44,
1 => bb46,
776694273 => bb48,
_ => bb47
}
}
bb46 = {
(*_7).1 = !169_u8;
(*_7) = (_5, 26_u8, 3195288172_u32, _17);
(*_7).2 = _10.fld6 as u32;
(*_7).2 = 3309202525_u32;
(*_7).1 = 201_u8;
(*_7) = (_3, 46_u8, 1768990607_u32, _17);
(*_7) = (_3, 168_u8, 1777994441_u32, _17);
Goto(bb13)
}
bb47 = {
_10.fld6 = -2678225215940129410_i64;
(*_7).3 = _17 * _17;
(*_7).1 = 248_u8;
_24.2 = _9 as i32;
(*_7).1 = (*_7).0 as u8;
_12.0 = (*_7).1 as u128;
(*_7).1 = _24.1 as u8;
(*_7).3 = _24.2 as f64;
_10.fld5 = _24.1 as u64;
Goto(bb22)
}
bb48 = {
(*_7) = (RET, _37.1, 3146829667_u32, _17);
(*_7).3 = _16;
(*_7).0 = _3;
_10.fld3.1 = _37.1;
_4 = !_12.0;
(*_13) = (*_7).3 as i16;
(*_23) = (*_45) as f32;
(*_2) = _12.0;
_8.0 = _10.fld2 & _46;
_44 = core::ptr::addr_of!(_47);
(*_44) = _10.fld5 - _10.fld5;
(*_7) = (RET, _37.1, 2747321478_u32, _43);
(*_7).1 = _37.1;
(*_2) = !_12.0;
_52 = [_37.0,_37.0,_37.0];
(*_7).3 = -_16;
(*_23) = _25 as f32;
(*_7) = (_11, _37.1, 2403644084_u32, _16);
(*_7).1 = _37.1 << _37.0;
(*_7) = (RET, _37.1, 4052038285_u32, _16);
(*_7).2 = !2291303791_u32;
_24.3 = core::ptr::addr_of!((*_44));
Goto(bb49)
}
bb49 = {
(*_7).1 = _37.1 * _37.1;
(*_7) = (_5, _37.1, 4197873164_u32, _43);
_40 = core::ptr::addr_of_mut!(_37);
(*_7).3 = _43;
(*_2) = !_12.0;
(*_23) = _49 - _49;
(*_7).0 = _3;
(*_23) = _42 - _49;
(*_40) = (29961_u16, (*_7).1);
Goto(bb50)
}
bb50 = {
Call(_64 = dump_var(4_usize, 47_usize, Move(_47), 15_usize, Move(_15), 52_usize, Move(_52), 41_usize, Move(_41)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_64 = dump_var(4_usize, 37_usize, Move(_37), 1_usize, Move(_1), 4_usize, Move(_4), 26_usize, Move(_26)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_64 = dump_var(4_usize, 46_usize, Move(_46), 65_usize, _65, 65_usize, _65, 65_usize, _65), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: char,mut _2: *const u128,mut _3: u128,mut _4: u128,mut _5: u128,mut _6: u128) -> [u32; 5] {
mir! {
type RET = [u32; 5];
let _7: (i32, *mut [u16; 2], bool, f64);
let _8: isize;
let _9: [u16; 2];
let _10: *const u64;
let _11: (i128, i64);
let _12: Adt45;
let _13: i8;
let _14: isize;
let _15: &'static &'static mut u64;
let _16: isize;
let _17: Adt58;
let _18: (i128, i64);
let _19: bool;
let _20: *const u128;
let _21: (*mut [u16; 2], [u16; 2], *const u128, u128);
let _22: *mut (bool,);
let _23: (*const u128, [u32; 5], Adt58);
let _24: i32;
let _25: *const (i128, i64);
let _26: bool;
let _27: i8;
let _28: [u8; 4];
let _29: f32;
let _30: &'static mut Adt35;
let _31: isize;
let _32: f64;
let _33: f32;
let _34: &'static &'static mut u64;
let _35: *const *const u128;
let _36: (u16, u8);
let _37: &'static *const i16;
let _38: &'static mut (bool,);
let _39: u32;
let _40: &'static i128;
let _41: [u32; 2];
let _42: &'static i128;
let _43: *const (char, u8, u32, f64);
let _44: &'static i128;
let _45: char;
let _46: f32;
let _47: *mut [u16; 2];
let _48: char;
let _49: &'static mut [u16; 2];
let _50: i64;
let _51: &'static *const i16;
let _52: i32;
let _53: [u32; 7];
let _54: *mut (i32, *mut [u16; 2], bool, f64);
let _55: &'static mut Adt35;
let _56: u64;
let _57: Adt58;
let _58: char;
let _59: u64;
let _60: &'static i128;
let _61: bool;
let _62: f64;
let _63: u32;
let _64: bool;
let _65: (u128,);
let _66: &'static mut Adt35;
let _67: i8;
let _68: f64;
let _69: isize;
let _70: &'static mut u64;
let _71: i128;
let _72: u16;
let _73: [bool; 2];
let _74: u128;
let _75: isize;
let _76: f64;
let _77: *const u128;
let _78: ();
let _79: ();
{
_1 = '\u{9f574}';
_5 = _6;
_1 = '\u{ea3b0}';
_3 = _6 << _6;
_4 = _6 + _6;
_3 = !_4;
_1 = '\u{82962}';
RET = [5224979_u32,740559128_u32,1322555006_u32,3158714381_u32,685069518_u32];
RET = [2953046391_u32,2127091873_u32,4113634230_u32,1040041154_u32,293930424_u32];
_1 = '\u{103bae}';
_5 = (-1756602589_i32) as u128;
_6 = _3;
_3 = !_4;
_3 = _5 ^ _4;
Call(_6 = fn6(_1, Move(_2), _3, _1, RET, _1, _4, _3, _5, _4, _3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7.2 = true ^ false;
_2 = core::ptr::addr_of!(_6);
RET = [2184289681_u32,941782122_u32,4195341234_u32,1616056781_u32,1940131363_u32];
(*_2) = _4 << _4;
_7.3 = (-1081649734_i32) as f64;
(*_2) = _3 * _3;
_6 = _3;
(*_2) = _5 ^ _3;
(*_2) = !_3;
_7.3 = 16710477056663424235_u64 as f64;
(*_2) = _4 | _3;
RET = [51311644_u32,2570816066_u32,1971368473_u32,877350108_u32,2425704544_u32];
_4 = !(*_2);
_5 = (*_2) - (*_2);
_3 = (*_2);
(*_2) = _3 << _5;
(*_2) = _3 ^ _3;
_5 = (*_2) + (*_2);
(*_2) = _5;
(*_2) = _5 - _4;
(*_2) = !_3;
(*_2) = _5;
(*_2) = _5 << _5;
(*_2) = !_5;
(*_2) = !_5;
Goto(bb2)
}
bb2 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_6 = _3;
_11 = (38676689282427267020655492675578521195_i128, (-7497950118334886962_i64));
_9 = [3674_u16,34233_u16];
_11.1 = !(-2958995772792185042_i64);
match _11.0 {
0 => bb1,
1 => bb2,
38676689282427267020655492675578521195 => bb5,
_ => bb4
}
}
bb4 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_7.1 = core::ptr::addr_of_mut!(_9);
_7.3 = (-118_i8) as f64;
_7.2 = false ^ false;
_8 = (-9223372036854775808_isize);
_7.2 = true;
_11.1 = -(-3701867182981666227_i64);
_11.0 = -(-153387546446335395617806290996475921718_i128);
_7.0 = (-1645295317_i32);
_2 = core::ptr::addr_of!(_6);
_7.2 = false ^ true;
_6 = !_3;
(*_2) = _5;
(*_2) = _3 & _3;
_8 = (-9223372036854775808_isize) * (-117_isize);
match _7.0 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
340282366920938463463374607430122916139 => bb11,
_ => bb10
}
}
bb6 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_6 = _3;
_11 = (38676689282427267020655492675578521195_i128, (-7497950118334886962_i64));
_9 = [3674_u16,34233_u16];
_11.1 = !(-2958995772792185042_i64);
match _11.0 {
0 => bb1,
1 => bb2,
38676689282427267020655492675578521195 => bb5,
_ => bb4
}
}
bb8 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_7.2 = true ^ false;
_2 = core::ptr::addr_of!(_6);
RET = [2184289681_u32,941782122_u32,4195341234_u32,1616056781_u32,1940131363_u32];
(*_2) = _4 << _4;
_7.3 = (-1081649734_i32) as f64;
(*_2) = _3 * _3;
_6 = _3;
(*_2) = _5 ^ _3;
(*_2) = !_3;
_7.3 = 16710477056663424235_u64 as f64;
(*_2) = _4 | _3;
RET = [51311644_u32,2570816066_u32,1971368473_u32,877350108_u32,2425704544_u32];
_4 = !(*_2);
_5 = (*_2) - (*_2);
_3 = (*_2);
(*_2) = _3 << _5;
(*_2) = _3 ^ _3;
_5 = (*_2) + (*_2);
(*_2) = _5;
(*_2) = _5 - _4;
(*_2) = !_3;
(*_2) = _5;
(*_2) = _5 << _5;
(*_2) = !_5;
(*_2) = !_5;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
(*_2) = _3 - _3;
match _7.0 {
0 => bb1,
1 => bb4,
2 => bb12,
3 => bb13,
340282366920938463463374607430122916139 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
_6 = _3;
_11 = (38676689282427267020655492675578521195_i128, (-7497950118334886962_i64));
_9 = [3674_u16,34233_u16];
_11.1 = !(-2958995772792185042_i64);
match _11.0 {
0 => bb1,
1 => bb2,
38676689282427267020655492675578521195 => bb5,
_ => bb4
}
}
bb14 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_9 = [61814_u16,52572_u16];
(*_2) = !_5;
_14 = _8 + _8;
_14 = -_8;
_4 = (*_2) ^ (*_2);
(*_2) = _1 as u128;
_14 = _8 >> _5;
_19 = _7.2 | _7.2;
_7.2 = _19;
_7.3 = _11.1 as f64;
_3 = _7.0 as u128;
(*_2) = _4 * _4;
_18 = (_11.0, _11.1);
_3 = (*_2) ^ (*_2);
Goto(bb16)
}
bb16 = {
_11.1 = _18.1 >> (*_2);
_3 = 3508698091_u32 as u128;
(*_2) = _4 << _11.1;
(*_2) = _14 as u128;
_11 = _18;
(*_2) = _4;
(*_2) = !_4;
_1 = '\u{d76f}';
_16 = _14 << (*_2);
(*_2) = _5 | _4;
_21.3 = (*_2) | (*_2);
_21 = (Move(_7.1), _9, Move(_2), (*_2));
_18.1 = (-116_i8) as i64;
_19 = _7.2;
_20 = Move(_21.2);
Call(_2 = core::intrinsics::arith_offset(_20, 9223372036854775807_isize), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_7.0 = -109526380_i32;
_16 = _1 as isize;
_23.1 = RET;
_21.2 = Move(_2);
_8 = _14;
_7.1 = core::ptr::addr_of_mut!(_9);
_18.1 = _11.1 * _11.1;
_23.0 = Move(_20);
_14 = 98_i8 as isize;
_6 = _21.3 >> _21.3;
Goto(bb18)
}
bb18 = {
_24 = _7.0;
_4 = !_6;
_20 = core::ptr::addr_of!(_3);
_23.0 = core::ptr::addr_of!((*_20));
_13 = 33_i8 | (-117_i8);
_24 = _7.0;
(*_20) = _21.3 << _4;
_19 = !_7.2;
_18.0 = _11.0 - _11.0;
_23.0 = core::ptr::addr_of!(_4);
(*_20) = _21.3 & _21.3;
_7.2 = (*_20) == _21.3;
(*_20) = _21.3 | _4;
(*_20) = !_6;
_26 = !_7.2;
_7.1 = core::ptr::addr_of_mut!(_9);
_18.1 = _11.1 - _11.1;
_23.0 = core::ptr::addr_of!((*_20));
_1 = '\u{338e1}';
_8 = _16 | _16;
(*_20) = _5 ^ _21.3;
_24 = _1 as i32;
(*_20) = 1_usize as u128;
_8 = _16 >> _4;
_7.1 = Move(_21.0);
(*_20) = !_4;
_11.0 = _18.0 - _18.0;
_9 = [30838_u16,24258_u16];
Goto(bb19)
}
bb19 = {
(*_20) = _4;
(*_20) = _6;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_20) = _21.3 ^ _6;
_23.0 = Move(_20);
Goto(bb20)
}
bb20 = {
_20 = core::ptr::addr_of!(_21.3);
(*_20) = !_3;
(*_20) = !_3;
(*_20) = 3272842991402961096_u64 as u128;
_18.1 = -_11.1;
(*_20) = !_4;
_7.2 = _26 | _26;
_19 = !_7.2;
_4 = (*_20);
(*_20) = _4 + _4;
(*_20) = _7.0 as u128;
_7.0 = _24 | _24;
(*_20) = _3 ^ _6;
_31 = !_8;
_11.1 = _18.1 + _18.1;
(*_20) = _3;
Goto(bb21)
}
bb21 = {
_11 = (_18.0, _18.1);
_28 = [193_u8,84_u8,192_u8,156_u8];
(*_20) = _1 as u128;
_21.3 = _4 & _3;
(*_20) = !_6;
(*_20) = _4 | _6;
_13 = !(-109_i8);
(*_20) = _7.3 as u128;
_36.1 = 13245995983761787061_u64 as u8;
Goto(bb22)
}
bb22 = {
_29 = (-10413_i16) as f32;
_6 = _3 ^ _4;
_13 = (-100_i8) & 56_i8;
_18.0 = _11.0;
_25 = core::ptr::addr_of!(_18);
(*_25).0 = _11.0;
(*_25).0 = _3 as i128;
(*_25).0 = _11.0;
RET = [263901821_u32,1581901180_u32,3385598005_u32,1293485270_u32,2813069322_u32];
(*_25) = _11;
_32 = _7.3 + _7.3;
(*_25).1 = _11.1 - _11.1;
(*_25).0 = -_11.0;
(*_25).0 = _11.0;
(*_20) = _4 ^ _6;
(*_25).1 = _11.1 << (*_20);
(*_25).0 = _11.0 & _11.0;
_11.0 = !_18.0;
(*_25).0 = _11.0 ^ _11.0;
Goto(bb23)
}
bb23 = {
(*_25).1 = _11.1 + _11.1;
(*_25) = (_11.0, _11.1);
_36.0 = 15423_u16;
_32 = _7.3 * _7.3;
_33 = _7.3 as f32;
_24 = _7.0 - _7.0;
(*_20) = !_5;
(*_25) = (_11.0, _11.1);
(*_25) = _11;
(*_25).1 = _11.1 | _11.1;
(*_25).1 = 10565210173726770586_usize as i64;
(*_25) = (_11.0, _11.1);
_16 = _31;
(*_25).0 = _29 as i128;
_18.1 = _11.1 * _11.1;
(*_25) = _11;
_6 = _33 as u128;
_8 = _16 << _3;
_21.1 = _9;
_11 = ((*_25).0, (*_25).1);
(*_25).0 = _11.0 >> _8;
(*_25).1 = _11.1 >> (*_20);
(*_25).1 = -_11.1;
(*_25).1 = _13 as i64;
(*_20) = _36.0 as u128;
Call((*_25).1 = core::intrinsics::transmute(_16), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_40 = &_11.0;
(*_25).0 = 6_usize as i128;
(*_20) = _36.1 as u128;
_36.0 = 64797_u16 & 5940_u16;
(*_20) = _3;
_46 = _24 as f32;
(*_25).1 = _16 as i64;
(*_25).0 = (*_40) >> (*_20);
(*_20) = _3;
(*_25).0 = (*_40) * (*_40);
(*_25) = _11;
_21.3 = !_5;
(*_25).1 = _11.1;
Goto(bb25)
}
bb25 = {
(*_20) = _4 & _4;
_13 = (-11_i8);
(*_20) = _3;
(*_25).1 = _11.1 | _11.1;
_11.0 = (*_25).0 + (*_25).0;
(*_25).0 = _11.0 << (*_20);
_36.1 = !183_u8;
(*_25).1 = -_11.1;
(*_20) = _46 as u128;
_13 = 71_i8 ^ 31_i8;
_52 = (-5566_i16) as i32;
_18 = _11;
(*_25) = (_11.0, _11.1);
(*_25).0 = _11.0 * _11.0;
_27 = _13 & _13;
_45 = _1;
(*_20) = _4;
_47 = core::ptr::addr_of_mut!(_9);
(*_25).1 = -_11.1;
_41 = [2222199898_u32,1813082736_u32];
(*_20) = _19 as u128;
_50 = (*_25).1 << (*_20);
(*_25).1 = _36.0 as i64;
_35 = core::ptr::addr_of!(_2);
_39 = 1158739538_u32 + 513387399_u32;
(*_47) = [_36.0,_36.0];
_29 = -_46;
(*_47) = [_36.0,_36.0];
Goto(bb26)
}
bb26 = {
_18.0 = _11.0 + _11.0;
_27 = _13;
(*_25).1 = _45 as i64;
_13 = _27;
_36 = (30902_u16, 134_u8);
_7.3 = -_32;
_7.3 = _32 + _32;
_44 = &(*_25).0;
(*_25) = (_11.0, _50);
Goto(bb27)
}
bb27 = {
(*_47) = [_36.0,_36.0];
_23.0 = core::ptr::addr_of!((*_20));
(*_20) = !_3;
(*_25) = (_11.0, _50);
_13 = _27;
_21.1 = [_36.0,_36.0];
(*_47) = [_36.0,_36.0];
_21 = (Move(_47), (*_47), Move(_20), _3);
match _36.0 {
0 => bb28,
30902 => bb30,
_ => bb29
}
}
bb28 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb29 = {
_11 = (_18.0, _18.1);
_28 = [193_u8,84_u8,192_u8,156_u8];
(*_20) = _1 as u128;
_21.3 = _4 & _3;
(*_20) = !_6;
(*_20) = _4 | _6;
_13 = !(-109_i8);
(*_20) = _7.3 as u128;
_36.1 = 13245995983761787061_u64 as u8;
Goto(bb22)
}
bb30 = {
(*_25).0 = _11.0;
_35 = core::ptr::addr_of!(_21.2);
match _36.1 {
0 => bb20,
1 => bb13,
2 => bb4,
3 => bb31,
4 => bb32,
5 => bb33,
134 => bb35,
_ => bb34
}
}
bb31 = {
_7.2 = true ^ false;
_2 = core::ptr::addr_of!(_6);
RET = [2184289681_u32,941782122_u32,4195341234_u32,1616056781_u32,1940131363_u32];
(*_2) = _4 << _4;
_7.3 = (-1081649734_i32) as f64;
(*_2) = _3 * _3;
_6 = _3;
(*_2) = _5 ^ _3;
(*_2) = !_3;
_7.3 = 16710477056663424235_u64 as f64;
(*_2) = _4 | _3;
RET = [51311644_u32,2570816066_u32,1971368473_u32,877350108_u32,2425704544_u32];
_4 = !(*_2);
_5 = (*_2) - (*_2);
_3 = (*_2);
(*_2) = _3 << _5;
(*_2) = _3 ^ _3;
_5 = (*_2) + (*_2);
(*_2) = _5;
(*_2) = _5 - _4;
(*_2) = !_3;
(*_2) = _5;
(*_2) = _5 << _5;
(*_2) = !_5;
(*_2) = !_5;
Goto(bb2)
}
bb32 = {
(*_20) = _4 & _4;
_13 = (-11_i8);
(*_20) = _3;
(*_25).1 = _11.1 | _11.1;
_11.0 = (*_25).0 + (*_25).0;
(*_25).0 = _11.0 << (*_20);
_36.1 = !183_u8;
(*_25).1 = -_11.1;
(*_20) = _46 as u128;
_13 = 71_i8 ^ 31_i8;
_52 = (-5566_i16) as i32;
_18 = _11;
(*_25) = (_11.0, _11.1);
(*_25).0 = _11.0 * _11.0;
_27 = _13 & _13;
_45 = _1;
(*_20) = _4;
_47 = core::ptr::addr_of_mut!(_9);
(*_25).1 = -_11.1;
_41 = [2222199898_u32,1813082736_u32];
(*_20) = _19 as u128;
_50 = (*_25).1 << (*_20);
(*_25).1 = _36.0 as i64;
_35 = core::ptr::addr_of!(_2);
_39 = 1158739538_u32 + 513387399_u32;
(*_47) = [_36.0,_36.0];
_29 = -_46;
(*_47) = [_36.0,_36.0];
Goto(bb26)
}
bb33 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb34 = {
_6 = _3;
_11 = (38676689282427267020655492675578521195_i128, (-7497950118334886962_i64));
_9 = [3674_u16,34233_u16];
_11.1 = !(-2958995772792185042_i64);
match _11.0 {
0 => bb1,
1 => bb2,
38676689282427267020655492675578521195 => bb5,
_ => bb4
}
}
bb35 = {
(*_25) = (_11.0, _50);
_41 = [_39,_39];
(*_35) = Move(_23.0);
(*_25).1 = _32 as i64;
(*_25) = _11;
(*_25) = _11;
_40 = &(*_25).0;
(*_25).1 = _50;
_18.0 = _11.0 - _11.0;
_54 = core::ptr::addr_of_mut!(_7);
(*_35) = core::ptr::addr_of!(_21.3);
(*_54).2 = _26;
(*_25).1 = -_50;
_32 = (*_54).3 * (*_54).3;
(*_25).0 = _11.0 + _11.0;
(*_54).3 = _32;
_39 = !1704681813_u32;
match _36.1 {
0 => bb20,
134 => bb37,
_ => bb36
}
}
bb36 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb37 = {
_48 = _1;
_58 = _45;
_36.0 = _48 as u16;
_21.3 = _36.1 as u128;
_47 = core::ptr::addr_of_mut!(_9);
(*_25).0 = _11.0 - _11.0;
(*_35) = core::ptr::addr_of!(_6);
(*_25).1 = _24 as i64;
_19 = !(*_54).2;
(*_25).1 = _16 as i64;
(*_54).1 = core::ptr::addr_of_mut!((*_47));
(*_35) = core::ptr::addr_of!(_4);
_56 = 5061685382027759336_u64;
(*_35) = core::ptr::addr_of!(_21.3);
_50 = (*_25).1 + (*_25).1;
(*_54).1 = core::ptr::addr_of_mut!((*_47));
(*_54).3 = _27 as f64;
_56 = 8005502120654363286_u64;
_62 = (*_54).3;
(*_25) = (_11.0, _50);
(*_54).0 = _24 - _24;
(*_35) = core::ptr::addr_of!(_4);
_23.0 = core::ptr::addr_of!(_5);
(*_35) = core::ptr::addr_of!(_3);
(*_54) = (_24, Move(_47), _26, _62);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
Call((*_25).0 = core::intrinsics::transmute(_11.0), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
(*_25) = (_11.0, _50);
(*_25) = _11;
_58 = _48;
(*_54).3 = -_32;
(*_54).2 = !_19;
(*_25) = _11;
(*_54).2 = !_26;
(*_25).1 = _36.1 as i64;
_32 = -(*_54).3;
(*_54).2 = _19;
(*_35) = core::ptr::addr_of!(_5);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
(*_54).3 = -_32;
(*_35) = Move(_23.0);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
(*_35) = core::ptr::addr_of!(_4);
(*_35) = core::ptr::addr_of!(_4);
(*_54).2 = (*_54).0 != (*_54).0;
_67 = -_27;
_11 = (*_25);
_14 = _36.0 as isize;
_50 = (*_25).1 ^ (*_25).1;
match _36.1 {
0 => bb22,
1 => bb30,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
6 => bb43,
134 => bb45,
_ => bb44
}
}
bb39 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb40 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb41 = {
_9 = [61814_u16,52572_u16];
(*_2) = !_5;
_14 = _8 + _8;
_14 = -_8;
_4 = (*_2) ^ (*_2);
(*_2) = _1 as u128;
_14 = _8 >> _5;
_19 = _7.2 | _7.2;
_7.2 = _19;
_7.3 = _11.1 as f64;
_3 = _7.0 as u128;
(*_2) = _4 * _4;
_18 = (_11.0, _11.1);
_3 = (*_2) ^ (*_2);
Goto(bb16)
}
bb42 = {
_7.0 = -109526380_i32;
_16 = _1 as isize;
_23.1 = RET;
_21.2 = Move(_2);
_8 = _14;
_7.1 = core::ptr::addr_of_mut!(_9);
_18.1 = _11.1 * _11.1;
_23.0 = Move(_20);
_14 = 98_i8 as isize;
_6 = _21.3 >> _21.3;
Goto(bb18)
}
bb43 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb44 = {
(*_20) = _4 & _4;
_13 = (-11_i8);
(*_20) = _3;
(*_25).1 = _11.1 | _11.1;
_11.0 = (*_25).0 + (*_25).0;
(*_25).0 = _11.0 << (*_20);
_36.1 = !183_u8;
(*_25).1 = -_11.1;
(*_20) = _46 as u128;
_13 = 71_i8 ^ 31_i8;
_52 = (-5566_i16) as i32;
_18 = _11;
(*_25) = (_11.0, _11.1);
(*_25).0 = _11.0 * _11.0;
_27 = _13 & _13;
_45 = _1;
(*_20) = _4;
_47 = core::ptr::addr_of_mut!(_9);
(*_25).1 = -_11.1;
_41 = [2222199898_u32,1813082736_u32];
(*_20) = _19 as u128;
_50 = (*_25).1 << (*_20);
(*_25).1 = _36.0 as i64;
_35 = core::ptr::addr_of!(_2);
_39 = 1158739538_u32 + 513387399_u32;
(*_47) = [_36.0,_36.0];
_29 = -_46;
(*_47) = [_36.0,_36.0];
Goto(bb26)
}
bb45 = {
_71 = (*_54).0 as i128;
(*_54).0 = _24 - _24;
(*_54).1 = core::ptr::addr_of_mut!(_9);
_16 = -_31;
match _56 {
0 => bb27,
1 => bb46,
2 => bb47,
3 => bb48,
4 => bb49,
5 => bb50,
6 => bb51,
8005502120654363286 => bb53,
_ => bb52
}
}
bb46 = {
_7.2 = true ^ false;
_2 = core::ptr::addr_of!(_6);
RET = [2184289681_u32,941782122_u32,4195341234_u32,1616056781_u32,1940131363_u32];
(*_2) = _4 << _4;
_7.3 = (-1081649734_i32) as f64;
(*_2) = _3 * _3;
_6 = _3;
(*_2) = _5 ^ _3;
(*_2) = !_3;
_7.3 = 16710477056663424235_u64 as f64;
(*_2) = _4 | _3;
RET = [51311644_u32,2570816066_u32,1971368473_u32,877350108_u32,2425704544_u32];
_4 = !(*_2);
_5 = (*_2) - (*_2);
_3 = (*_2);
(*_2) = _3 << _5;
(*_2) = _3 ^ _3;
_5 = (*_2) + (*_2);
(*_2) = _5;
(*_2) = _5 - _4;
(*_2) = !_3;
(*_2) = _5;
(*_2) = _5 << _5;
(*_2) = !_5;
(*_2) = !_5;
Goto(bb2)
}
bb47 = {
_48 = _1;
_58 = _45;
_36.0 = _48 as u16;
_21.3 = _36.1 as u128;
_47 = core::ptr::addr_of_mut!(_9);
(*_25).0 = _11.0 - _11.0;
(*_35) = core::ptr::addr_of!(_6);
(*_25).1 = _24 as i64;
_19 = !(*_54).2;
(*_25).1 = _16 as i64;
(*_54).1 = core::ptr::addr_of_mut!((*_47));
(*_35) = core::ptr::addr_of!(_4);
_56 = 5061685382027759336_u64;
(*_35) = core::ptr::addr_of!(_21.3);
_50 = (*_25).1 + (*_25).1;
(*_54).1 = core::ptr::addr_of_mut!((*_47));
(*_54).3 = _27 as f64;
_56 = 8005502120654363286_u64;
_62 = (*_54).3;
(*_25) = (_11.0, _50);
(*_54).0 = _24 - _24;
(*_35) = core::ptr::addr_of!(_4);
_23.0 = core::ptr::addr_of!(_5);
(*_35) = core::ptr::addr_of!(_3);
(*_54) = (_24, Move(_47), _26, _62);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
Call((*_25).0 = core::intrinsics::transmute(_11.0), ReturnTo(bb38), UnwindUnreachable())
}
bb48 = {
(*_20) = _4;
(*_20) = _6;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_20) = _21.3 ^ _6;
_23.0 = Move(_20);
Goto(bb20)
}
bb49 = {
_7.1 = core::ptr::addr_of_mut!(_9);
_7.3 = (-118_i8) as f64;
_7.2 = false ^ false;
_8 = (-9223372036854775808_isize);
_7.2 = true;
_11.1 = -(-3701867182981666227_i64);
_11.0 = -(-153387546446335395617806290996475921718_i128);
_7.0 = (-1645295317_i32);
_2 = core::ptr::addr_of!(_6);
_7.2 = false ^ true;
_6 = !_3;
(*_2) = _5;
(*_2) = _3 & _3;
_8 = (-9223372036854775808_isize) * (-117_isize);
match _7.0 {
0 => bb1,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
340282366920938463463374607430122916139 => bb11,
_ => bb10
}
}
bb50 = {
RET = [543562624_u32,2495476301_u32,832804394_u32,469268220_u32,3487314708_u32];
_6 = _4;
_7.0 = 304366111_i32 + 321555236_i32;
(*_2) = _5 + _5;
_7.3 = (-31130_i16) as f64;
_11.1 = (-5998722821459625841_i64) >> (*_2);
_3 = (*_2) >> _11.1;
(*_2) = _4 >> _3;
(*_2) = _4 >> _3;
_4 = 7541_i16 as u128;
_11.0 = 131244744093339615734655842909588401153_i128 + 15323152280205021002954670946775660635_i128;
_7.3 = _7.0 as f64;
_6 = _5;
(*_2) = !_5;
_7.1 = core::ptr::addr_of_mut!(_9);
(*_2) = _3 & _3;
(*_2) = _5;
(*_2) = 9223372036854775807_isize as u128;
(*_2) = _3 & _3;
(*_2) = !_3;
(*_2) = _3 - _3;
(*_2) = _3;
_8 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_1 = '\u{7f202}';
_9 = [49915_u16,36085_u16];
(*_2) = _3 << _3;
(*_2) = _3;
Call(_10 = fn8(Move(_7), (*_2), (*_2), (*_2), Move(_2), (*_2), _11.1, (*_2), (*_2)), ReturnTo(bb3), UnwindUnreachable())
}
bb51 = {
_24 = _7.0;
_4 = !_6;
_20 = core::ptr::addr_of!(_3);
_23.0 = core::ptr::addr_of!((*_20));
_13 = 33_i8 | (-117_i8);
_24 = _7.0;
(*_20) = _21.3 << _4;
_19 = !_7.2;
_18.0 = _11.0 - _11.0;
_23.0 = core::ptr::addr_of!(_4);
(*_20) = _21.3 & _21.3;
_7.2 = (*_20) == _21.3;
(*_20) = _21.3 | _4;
(*_20) = !_6;
_26 = !_7.2;
_7.1 = core::ptr::addr_of_mut!(_9);
_18.1 = _11.1 - _11.1;
_23.0 = core::ptr::addr_of!((*_20));
_1 = '\u{338e1}';
_8 = _16 | _16;
(*_20) = _5 ^ _21.3;
_24 = _1 as i32;
(*_20) = 1_usize as u128;
_8 = _16 >> _4;
_7.1 = Move(_21.0);
(*_20) = !_4;
_11.0 = _18.0 - _18.0;
_9 = [30838_u16,24258_u16];
Goto(bb19)
}
bb52 = {
(*_25) = (_11.0, _50);
(*_25) = _11;
_58 = _48;
(*_54).3 = -_32;
(*_54).2 = !_19;
(*_25) = _11;
(*_54).2 = !_26;
(*_25).1 = _36.1 as i64;
_32 = -(*_54).3;
(*_54).2 = _19;
(*_35) = core::ptr::addr_of!(_5);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
(*_54).3 = -_32;
(*_35) = Move(_23.0);
(*_54).1 = core::ptr::addr_of_mut!(_21.1);
(*_35) = core::ptr::addr_of!(_4);
(*_35) = core::ptr::addr_of!(_4);
(*_54).2 = (*_54).0 != (*_54).0;
_67 = -_27;
_11 = (*_25);
_14 = _36.0 as isize;
_50 = (*_25).1 ^ (*_25).1;
match _36.1 {
0 => bb22,
1 => bb30,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
6 => bb43,
134 => bb45,
_ => bb44
}
}
bb53 = {
(*_54).3 = _32;
(*_35) = core::ptr::addr_of!(_65.0);
(*_25).0 = _67 as i128;
(*_54).3 = _32 + _32;
(*_54).3 = _32 + _32;
(*_54).0 = _24;
_47 = core::ptr::addr_of_mut!(_9);
(*_54).1 = core::ptr::addr_of_mut!((*_47));
(*_25) = _11;
(*_54).3 = _32 + _32;
(*_25).0 = _11.0 ^ _11.0;
(*_54).3 = _32;
(*_54).2 = _26;
(*_25).1 = _11.1 << (*_25).0;
_59 = 22264_i16 as u64;
_41 = [_39,_39];
(*_35) = core::ptr::addr_of!(_4);
(*_47) = [_36.0,_36.0];
Goto(bb54)
}
bb54 = {
Call(_78 = dump_var(5_usize, 67_usize, Move(_67), 18_usize, Move(_18), 56_usize, Move(_56), 31_usize, Move(_31)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_78 = dump_var(5_usize, 36_usize, Move(_36), 52_usize, Move(_52), 19_usize, Move(_19), 48_usize, Move(_48)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_78 = dump_var(5_usize, 71_usize, Move(_71), 41_usize, Move(_41), 27_usize, Move(_27), 5_usize, Move(_5)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_78 = dump_var(5_usize, 4_usize, Move(_4), 11_usize, Move(_11), 59_usize, Move(_59), 79_usize, _79), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: char,mut _2: *const u128,mut _3: u128,mut _4: char,mut _5: [u32; 5],mut _6: char,mut _7: u128,mut _8: u128,mut _9: u128,mut _10: u128,mut _11: u128,mut _12: u128) -> u128 {
mir! {
type RET = u128;
let _13: f64;
let _14: char;
let _15: &'static i128;
let _16: *mut (bool,);
let _17: f32;
let _18: &'static mut u64;
let _19: *const f32;
let _20: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _21: &'static mut Adt35;
let _22: [i128; 6];
let _23: i32;
let _24: &'static mut u64;
let _25: (isize, *const u128);
let _26: (bool,);
let _27: &'static usize;
let _28: &'static mut [u16; 2];
let _29: &'static usize;
let _30: isize;
let _31: [i64; 2];
let _32: u128;
let _33: (u8,);
let _34: *mut (i32, *mut [u16; 2], bool, f64);
let _35: char;
let _36: i64;
let _37: u32;
let _38: (&'static mut (bool,), &'static (i32, *mut [u16; 2], bool, f64), f32);
let _39: u8;
let _40: bool;
let _41: i16;
let _42: *mut (bool,);
let _43: ([i32; 5], u64);
let _44: Adt69;
let _45: ();
let _46: ();
{
_4 = _6;
_2 = core::ptr::addr_of!(_12);
(*_2) = _11 & _9;
(*_2) = _11 - _7;
(*_2) = (-5_i8) as u128;
_5 = [1776057489_u32,97963860_u32,907757563_u32,631933398_u32,336576834_u32];
_11 = (-18258_i16) as u128;
(*_2) = 178_u8 as u128;
_2 = core::ptr::addr_of!((*_2));
(*_2) = _7 + _3;
(*_2) = _7;
(*_2) = _8 * _10;
_4 = _6;
(*_2) = !_7;
(*_2) = !_10;
(*_2) = _3;
_13 = (-568883858_i32) as f64;
_10 = (*_2);
_9 = _13 as u128;
(*_2) = _3 + _8;
RET = !(*_2);
Goto(bb1)
}
bb1 = {
_6 = _4;
(*_2) = _7 - _8;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !RET;
_19 = core::ptr::addr_of!(_17);
_4 = _6;
(*_19) = 7_usize as f32;
(*_2) = !_8;
_11 = _3 << (*_2);
_11 = (*_2);
(*_19) = 12375688373471980558_u64 as f32;
_19 = core::ptr::addr_of!((*_19));
(*_2) = _10 ^ _3;
(*_2) = 2566823020285227929_u64 as u128;
(*_2) = 2870105458_u32 as u128;
_14 = _4;
(*_19) = _13 as f32;
(*_19) = 50_u8 as f32;
(*_19) = 249_u8 as f32;
_2 = core::ptr::addr_of!((*_2));
(*_19) = 2519250936143025932_u64 as f32;
(*_19) = (-9223372036854775808_isize) as f32;
(*_19) = 79_isize as f32;
_22 = [71860513556903343071454633156381746245_i128,75374606296472255956151396197664442035_i128,139322293050380959912139981457583215509_i128,(-34703783836617348484867323988019127478_i128),(-95091413511798426585344960606371863279_i128),146499452884926847784873279642238495006_i128];
Goto(bb2)
}
bb2 = {
(*_2) = _7 >> _3;
_25.1 = core::ptr::addr_of!((*_2));
(*_2) = _3;
(*_2) = (*_19) as u128;
(*_2) = !_8;
(*_2) = _8;
(*_19) = 87_isize as f32;
_3 = 43_i8 as u128;
(*_2) = RET * _10;
(*_2) = _8 | _11;
_25.0 = 96_isize << (*_2);
(*_19) = _25.0 as f32;
(*_19) = 1762413109_i32 as f32;
(*_19) = 9919947827153539875_usize as f32;
_12 = 41849_u16 as u128;
(*_2) = _10 & RET;
_19 = core::ptr::addr_of!((*_19));
(*_2) = _11;
(*_19) = 57894745913069760409684163745948747358_i128 as f32;
_12 = 3127028413920603199_usize as u128;
_26.0 = true ^ false;
_10 = (*_2);
Goto(bb3)
}
bb3 = {
(*_19) = 13_i8 as f32;
Call((*_2) = fn7(Move(_19), _5, Move(_2), _8, (*_19), Move(_25), (*_19), (*_19), (*_19), _17, _14, (*_19)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = _14;
_26 = (false,);
_2 = core::ptr::addr_of!(_11);
_9 = !(*_2);
_30 = !(-45_isize);
_16 = core::ptr::addr_of_mut!(_26);
_31 = [4160063440951647533_i64,7601101465136245170_i64];
(*_2) = !_12;
(*_16).0 = !false;
(*_16) = (true,);
_6 = _1;
(*_16) = (false,);
(*_2) = _12 << _12;
_6 = _4;
_2 = core::ptr::addr_of!((*_2));
_22 = [117693488874174838924075068028144188614_i128,(-151912941507216339719764656782024124436_i128),(-158871689528342999186102742454844804303_i128),136649586499070513173677659483821778407_i128,123031634728896104923667974853564454182_i128,86627831917098918414315115590035629352_i128];
(*_2) = _12 - RET;
(*_16) = (true,);
(*_16).0 = false & false;
_33 = (32_u8,);
Goto(bb5)
}
bb5 = {
(*_16) = (false,);
_16 = core::ptr::addr_of_mut!((*_16));
(*_16) = (true,);
(*_2) = (-916719336_i32) as u128;
_2 = core::ptr::addr_of!((*_2));
Goto(bb6)
}
bb6 = {
_31 = [(-2473422299595397642_i64),2063270527910774416_i64];
_35 = _14;
_6 = _1;
_7 = RET;
_25.0 = (*_2) as isize;
(*_2) = !_9;
(*_16) = (true,);
_38.0 = &mut (*_16);
(*_2) = !_9;
(*_2) = _7 * RET;
_11 = _12;
(*_2) = _12 * RET;
Call(_12 = core::intrinsics::transmute((*_2)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_23 = (-6811088036155059913_i64) as i32;
_22 = [161917983384534575592111511073780842224_i128,46661713970892719323854572487199676098_i128,119963411431763584920175528233682279650_i128,(-99901623673429409147511865592184263547_i128),(-154552805639517022922275849575347136526_i128),126078200366451438026033828307004760237_i128];
_38.2 = _17 + _17;
_40 = false;
(*_2) = 3712413268_u32 as u128;
(*_2) = !_12;
RET = (*_2) * (*_2);
(*_2) = _7;
(*_2) = _8 >> _33.0;
Goto(bb8)
}
bb8 = {
Call(_45 = dump_var(6_usize, 26_usize, Move(_26), 9_usize, Move(_9), 12_usize, Move(_12), 1_usize, Move(_1)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_45 = dump_var(6_usize, 7_usize, Move(_7), 11_usize, Move(_11), 40_usize, Move(_40), 35_usize, Move(_35)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_45 = dump_var(6_usize, 8_usize, Move(_8), 31_usize, Move(_31), 46_usize, _46, 46_usize, _46), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: *const f32,mut _2: [u32; 5],mut _3: *const u128,mut _4: u128,mut _5: f32,mut _6: (isize, *const u128),mut _7: f32,mut _8: f32,mut _9: f32,mut _10: f32,mut _11: char,mut _12: f32) -> u128 {
mir! {
type RET = u128;
let _13: f32;
let _14: isize;
let _15: *const f32;
let _16: (Adt45,);
let _17: *const (char, u8, u32, f64);
let _18: &'static &'static mut u64;
let _19: *const i16;
let _20: i64;
let _21: *const (char, u8, u32, f64);
let _22: (Adt45,);
let _23: u16;
let _24: u16;
let _25: (u8,);
let _26: *mut (u16, u8);
let _27: f64;
let _28: isize;
let _29: (i128, i8, i32, *const u64);
let _30: *mut (i32, *mut [u16; 2], bool, f64);
let _31: ();
let _32: ();
{
_4 = 326652257163226738818716184023425970659_u128 + 232802156075333378160900385415286602515_u128;
_6 = ((-24_isize), Move(_3));
_4 = false as u128;
_10 = 47611_u16 as f32;
RET = _4;
_11 = '\u{a551e}';
RET = _6.0 as u128;
_3 = Move(_6.1);
_13 = -_12;
_6.1 = core::ptr::addr_of!(_4);
match _6.0 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211432 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_14 = _6.0;
_2 = [2658892324_u32,3025831983_u32,980482000_u32,696847579_u32,413518551_u32];
_7 = 35478_u16 as f32;
_1 = core::ptr::addr_of!(_8);
_12 = RET as f32;
Goto(bb5)
}
bb5 = {
_12 = 20318_u16 as f32;
_6.1 = core::ptr::addr_of!(_4);
_2 = [2632100267_u32,2293289626_u32,4286791528_u32,2187009825_u32,1099837620_u32];
(*_1) = -_12;
Goto(bb6)
}
bb6 = {
(*_1) = _7 + _5;
(*_1) = _12;
(*_1) = _9;
_4 = !RET;
_9 = (*_1);
_5 = 1442_i16 as f32;
_8 = _7 + _10;
(*_1) = _9 - _12;
match _14 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607431768211432 => bb7,
_ => bb5
}
}
bb7 = {
(*_1) = _13 * _7;
(*_1) = -_12;
(*_1) = (-169016537778769140546601861135834866639_i128) as f32;
_4 = RET >> _6.0;
(*_1) = -_12;
(*_1) = _5 - _5;
_14 = !_6.0;
(*_1) = _9 + _12;
_15 = core::ptr::addr_of!(_10);
_1 = core::ptr::addr_of!((*_15));
(*_15) = 5817687243222618646_usize as f32;
_5 = (*_15) * (*_15);
_20 = !1421301002744926402_i64;
_6.0 = _14;
(*_15) = (-130776190631626243530949552297274159015_i128) as f32;
_5 = _7 - _10;
(*_15) = _8 * _8;
(*_15) = 2281748879_u32 as f32;
Goto(bb8)
}
bb8 = {
(*_15) = _12;
(*_15) = _12 * _8;
(*_15) = _12;
_15 = Move(_1);
_10 = 119_i8 as f32;
_3 = core::ptr::addr_of!(RET);
(*_3) = _14 as u128;
_7 = _8 + _5;
(*_3) = !_4;
(*_3) = _5 as u128;
_14 = _6.0 - _6.0;
(*_3) = _4 & _4;
_5 = -_7;
_7 = _9;
_7 = _5 + _5;
_5 = _7 - _7;
_8 = _7 - _7;
_1 = core::ptr::addr_of!(_10);
(*_3) = _4 + _4;
Goto(bb9)
}
bb9 = {
(*_3) = !_4;
(*_1) = -_5;
(*_3) = _4;
(*_3) = !_4;
(*_1) = _5 * _12;
(*_3) = _4 >> _4;
(*_3) = _4 - _4;
(*_3) = _4 * _4;
(*_1) = 27696_i16 as f32;
(*_1) = -_5;
(*_1) = _7 * _5;
_12 = -(*_1);
_24 = 13210_u16 << RET;
(*_3) = _4 & _4;
(*_3) = (*_1) as u128;
(*_1) = _5;
Goto(bb10)
}
bb10 = {
Call(_31 = dump_var(7_usize, 4_usize, Move(_4), 11_usize, Move(_11), 20_usize, Move(_20), 32_usize, _32), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: (i32, *mut [u16; 2], bool, f64),mut _2: u128,mut _3: u128,mut _4: u128,mut _5: *const u128,mut _6: u128,mut _7: i64,mut _8: u128,mut _9: u128) -> *const u64 {
mir! {
type RET = *const u64;
let _10: Adt72;
let _11: char;
let _12: [u16; 8];
let _13: &'static &'static mut u64;
let _14: &'static mut [u16; 2];
let _15: Adt66;
let _16: isize;
let _17: f64;
let _18: Adt35;
let _19: isize;
let _20: u32;
let _21: bool;
let _22: u128;
let _23: *mut [u16; 2];
let _24: *const f32;
let _25: Adt45;
let _26: f32;
let _27: &'static mut u64;
let _28: (i32, *mut [u16; 2], bool, f64);
let _29: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _30: char;
let _31: (isize, *const u128);
let _32: f32;
let _33: u128;
let _34: f64;
let _35: f64;
let _36: u64;
let _37: [u16; 3];
let _38: [isize; 5];
let _39: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _40: &'static mut (bool,);
let _41: ();
let _42: ();
{
_5 = core::ptr::addr_of!(_2);
_4 = (*_5);
_4 = !(*_5);
(*_5) = !_6;
_3 = (*_5) >> (*_5);
Call(_4 = fn9(), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_5) = _3 << _3;
(*_5) = 118_u8 as u128;
Goto(bb2)
}
bb2 = {
(*_5) = !_4;
(*_5) = _1.3 as u128;
_6 = 10868617964031195877_u64 as u128;
_1.2 = !false;
_10.fld4 = [_1.2,_1.2];
(*_5) = _9 * _8;
Call((*_5) = core::intrinsics::bswap(_8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
(*_5) = 32324_i16 as u128;
(*_5) = _1.0 as u128;
_1.3 = 85_i8 as f64;
(*_5) = _3 + _3;
_2 = 3908305407585184717_usize as u128;
(*_5) = _3;
_10.fld5 = [6413_u16,15812_u16,39168_u16];
_7 = '\u{de65c}' as i64;
_11 = '\u{f018d}';
(*_5) = _9;
(*_5) = (-21889_i16) as u128;
(*_5) = _3 * _3;
(*_5) = 119_i8 as u128;
(*_5) = !_8;
_10.fld1 = ((*_5),);
_10.fld4 = [_1.2,_1.2];
_1.2 = (*_5) < (*_5);
(*_5) = _10.fld1.0 - _10.fld1.0;
_10.fld1.0 = !(*_5);
Goto(bb4)
}
bb4 = {
_7 = 1901947506966437526_i64 ^ (-8506407598602671096_i64);
_1.2 = false | false;
_10.fld2 = _1.3;
(*_5) = _9 | _9;
(*_5) = !_9;
_5 = core::ptr::addr_of!(_8);
(*_5) = !_2;
(*_5) = _10.fld1.0;
(*_5) = _2 - _2;
_3 = (*_5);
(*_5) = _10.fld1.0;
_7 = 220628200205884255_i64 & 5417841222406058542_i64;
_15 = Adt66::Variant0 { fld0: 3070348490_u32 };
_10.fld1.0 = (*_5) >> (*_5);
_10.fld0 = !3_usize;
_10.fld1.0 = !(*_5);
(*_5) = _3 >> _2;
_6 = !(*_5);
(*_5) = _3;
(*_5) = !_10.fld1.0;
_12 = [9410_u16,10699_u16,39968_u16,10012_u16,21692_u16,39034_u16,5088_u16,26986_u16];
(*_5) = _6;
Call((*_5) = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_1.0 = (-417414207_i32);
_1.2 = (*_5) <= _10.fld1.0;
(*_5) = 7683549100604924613_u64 as u128;
_16 = 43_i8 as isize;
(*_5) = 229407369_u32 as u128;
_10.fld5 = [32217_u16,52302_u16,21434_u16];
_7 = 7966486900093071395_i64 * 2055962088671975597_i64;
_10.fld5 = [34821_u16,56757_u16,31108_u16];
(*_5) = _6 << _2;
_19 = _16;
match _1.0 {
340282366920938463463374607431350797249 => bb7,
_ => bb6
}
}
bb6 = {
_7 = 1901947506966437526_i64 ^ (-8506407598602671096_i64);
_1.2 = false | false;
_10.fld2 = _1.3;
(*_5) = _9 | _9;
(*_5) = !_9;
_5 = core::ptr::addr_of!(_8);
(*_5) = !_2;
(*_5) = _10.fld1.0;
(*_5) = _2 - _2;
_3 = (*_5);
(*_5) = _10.fld1.0;
_7 = 220628200205884255_i64 & 5417841222406058542_i64;
_15 = Adt66::Variant0 { fld0: 3070348490_u32 };
_10.fld1.0 = (*_5) >> (*_5);
_10.fld0 = !3_usize;
_10.fld1.0 = !(*_5);
(*_5) = _3 >> _2;
_6 = !(*_5);
(*_5) = _3;
(*_5) = !_10.fld1.0;
_12 = [9410_u16,10699_u16,39968_u16,10012_u16,21692_u16,39034_u16,5088_u16,26986_u16];
(*_5) = _6;
Call((*_5) = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
(*_5) = !_10.fld1.0;
_20 = _1.3 as u32;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _3;
Goto(bb8)
}
bb8 = {
_15 = Adt66::Variant0 { fld0: _20 };
(*_5) = _10.fld0 as u128;
_22 = 25635_u16 as u128;
(*_5) = 5919109771578368873_u64 as u128;
_4 = _2 & _10.fld1.0;
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 ^ _20;
_1.2 = true;
(*_5) = _2 ^ _10.fld1.0;
(*_5) = _9 << _10.fld1.0;
match _1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431350797249 => bb9,
_ => bb7
}
}
bb9 = {
_10.fld1 = ((*_5),);
_12 = [56246_u16,17476_u16,25610_u16,40786_u16,40378_u16,23850_u16,52968_u16,23583_u16];
_10.fld4 = [_1.2,_1.2];
(*_5) = _4 * _4;
_21 = _1.2;
Goto(bb10)
}
bb10 = {
_15 = Adt66::Variant0 { fld0: _20 };
(*_5) = _3 & _3;
_10.fld1.0 = 28040492136587215265976523149420367626_i128 as u128;
_12 = [30221_u16,61932_u16,59328_u16,10635_u16,52466_u16,32017_u16,22828_u16,58847_u16];
(*_5) = !_2;
_10.fld2 = _1.3 - _1.3;
_1.0 = (-2144455093_i32) << (*_5);
_11 = '\u{ff73a}';
_6 = _4 ^ (*_5);
_23 = Move(_1.1);
(*_5) = _19 as u128;
(*_5) = !_2;
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 * _20;
(*_5) = !_3;
(*_5) = _11 as u128;
Goto(bb11)
}
bb11 = {
(*_5) = !_6;
_1.0 = (-644639985_i32) << (*_5);
_9 = _4;
_9 = (*_5) | (*_5);
(*_5) = _3;
_1 = (325899795_i32, Move(_23), _21, _10.fld2);
match _1.0 {
0 => bb1,
1 => bb10,
2 => bb3,
3 => bb8,
4 => bb5,
5 => bb6,
325899795 => bb12,
_ => bb7
}
}
bb12 = {
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 << _3;
(*_5) = _4;
_22 = (*_5);
_26 = Field::<u32>(Variant(_15, 0), 0) as f32;
_28.2 = _21;
_28.2 = _21;
_17 = _1.3;
_26 = Field::<u32>(Variant(_15, 0), 0) as f32;
_10.fld0 = !4_usize;
_8 = _9 << _6;
(*_5) = _4 - _4;
_6 = _4 * (*_5);
match _1.0 {
0 => bb7,
1 => bb2,
2 => bb13,
3 => bb14,
325899795 => bb16,
_ => bb15
}
}
bb13 = {
_7 = 1901947506966437526_i64 ^ (-8506407598602671096_i64);
_1.2 = false | false;
_10.fld2 = _1.3;
(*_5) = _9 | _9;
(*_5) = !_9;
_5 = core::ptr::addr_of!(_8);
(*_5) = !_2;
(*_5) = _10.fld1.0;
(*_5) = _2 - _2;
_3 = (*_5);
(*_5) = _10.fld1.0;
_7 = 220628200205884255_i64 & 5417841222406058542_i64;
_15 = Adt66::Variant0 { fld0: 3070348490_u32 };
_10.fld1.0 = (*_5) >> (*_5);
_10.fld0 = !3_usize;
_10.fld1.0 = !(*_5);
(*_5) = _3 >> _2;
_6 = !(*_5);
(*_5) = _3;
(*_5) = !_10.fld1.0;
_12 = [9410_u16,10699_u16,39968_u16,10012_u16,21692_u16,39034_u16,5088_u16,26986_u16];
(*_5) = _6;
Call((*_5) = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb14 = {
(*_5) = 32324_i16 as u128;
(*_5) = _1.0 as u128;
_1.3 = 85_i8 as f64;
(*_5) = _3 + _3;
_2 = 3908305407585184717_usize as u128;
(*_5) = _3;
_10.fld5 = [6413_u16,15812_u16,39168_u16];
_7 = '\u{de65c}' as i64;
_11 = '\u{f018d}';
(*_5) = _9;
(*_5) = (-21889_i16) as u128;
(*_5) = _3 * _3;
(*_5) = 119_i8 as u128;
(*_5) = !_8;
_10.fld1 = ((*_5),);
_10.fld4 = [_1.2,_1.2];
_1.2 = (*_5) < (*_5);
(*_5) = _10.fld1.0 - _10.fld1.0;
_10.fld1.0 = !(*_5);
Goto(bb4)
}
bb15 = {
_1.0 = (-417414207_i32);
_1.2 = (*_5) <= _10.fld1.0;
(*_5) = 7683549100604924613_u64 as u128;
_16 = 43_i8 as isize;
(*_5) = 229407369_u32 as u128;
_10.fld5 = [32217_u16,52302_u16,21434_u16];
_7 = 7966486900093071395_i64 * 2055962088671975597_i64;
_10.fld5 = [34821_u16,56757_u16,31108_u16];
(*_5) = _6 << _2;
_19 = _16;
match _1.0 {
340282366920938463463374607431350797249 => bb7,
_ => bb6
}
}
bb16 = {
_10.fld3 = core::ptr::addr_of!(_26);
(*_5) = _22 | _3;
_28.1 = Move(_1.1);
_16 = !_19;
match _1.0 {
0 => bb8,
1 => bb2,
2 => bb5,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
325899795 => bb22,
_ => bb21
}
}
bb17 = {
_1.0 = (-417414207_i32);
_1.2 = (*_5) <= _10.fld1.0;
(*_5) = 7683549100604924613_u64 as u128;
_16 = 43_i8 as isize;
(*_5) = 229407369_u32 as u128;
_10.fld5 = [32217_u16,52302_u16,21434_u16];
_7 = 7966486900093071395_i64 * 2055962088671975597_i64;
_10.fld5 = [34821_u16,56757_u16,31108_u16];
(*_5) = _6 << _2;
_19 = _16;
match _1.0 {
340282366920938463463374607431350797249 => bb7,
_ => bb6
}
}
bb18 = {
_15 = Adt66::Variant0 { fld0: _20 };
(*_5) = _3 & _3;
_10.fld1.0 = 28040492136587215265976523149420367626_i128 as u128;
_12 = [30221_u16,61932_u16,59328_u16,10635_u16,52466_u16,32017_u16,22828_u16,58847_u16];
(*_5) = !_2;
_10.fld2 = _1.3 - _1.3;
_1.0 = (-2144455093_i32) << (*_5);
_11 = '\u{ff73a}';
_6 = _4 ^ (*_5);
_23 = Move(_1.1);
(*_5) = _19 as u128;
(*_5) = !_2;
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 * _20;
(*_5) = !_3;
(*_5) = _11 as u128;
Goto(bb11)
}
bb19 = {
_7 = 1901947506966437526_i64 ^ (-8506407598602671096_i64);
_1.2 = false | false;
_10.fld2 = _1.3;
(*_5) = _9 | _9;
(*_5) = !_9;
_5 = core::ptr::addr_of!(_8);
(*_5) = !_2;
(*_5) = _10.fld1.0;
(*_5) = _2 - _2;
_3 = (*_5);
(*_5) = _10.fld1.0;
_7 = 220628200205884255_i64 & 5417841222406058542_i64;
_15 = Adt66::Variant0 { fld0: 3070348490_u32 };
_10.fld1.0 = (*_5) >> (*_5);
_10.fld0 = !3_usize;
_10.fld1.0 = !(*_5);
(*_5) = _3 >> _2;
_6 = !(*_5);
(*_5) = _3;
(*_5) = !_10.fld1.0;
_12 = [9410_u16,10699_u16,39968_u16,10012_u16,21692_u16,39034_u16,5088_u16,26986_u16];
(*_5) = _6;
Call((*_5) = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb20 = {
(*_5) = _3 << _3;
(*_5) = 118_u8 as u128;
Goto(bb2)
}
bb21 = {
_7 = 1901947506966437526_i64 ^ (-8506407598602671096_i64);
_1.2 = false | false;
_10.fld2 = _1.3;
(*_5) = _9 | _9;
(*_5) = !_9;
_5 = core::ptr::addr_of!(_8);
(*_5) = !_2;
(*_5) = _10.fld1.0;
(*_5) = _2 - _2;
_3 = (*_5);
(*_5) = _10.fld1.0;
_7 = 220628200205884255_i64 & 5417841222406058542_i64;
_15 = Adt66::Variant0 { fld0: 3070348490_u32 };
_10.fld1.0 = (*_5) >> (*_5);
_10.fld0 = !3_usize;
_10.fld1.0 = !(*_5);
(*_5) = _3 >> _2;
_6 = !(*_5);
(*_5) = _3;
(*_5) = !_10.fld1.0;
_12 = [9410_u16,10699_u16,39968_u16,10012_u16,21692_u16,39034_u16,5088_u16,26986_u16];
(*_5) = _6;
Call((*_5) = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb22 = {
_1 = (354622337_i32, Move(_28.1), _28.2, _17);
_24 = Move(_10.fld3);
(*_5) = _9 * _2;
_1.3 = _10.fld2;
_21 = !_1.2;
_11 = '\u{f31d1}';
_28.2 = _21;
(*_5) = _9 >> _3;
_31.1 = core::ptr::addr_of!((*_5));
_10.fld2 = (-163017537975132912282537083224684422234_i128) as f64;
_19 = 26453_u16 as isize;
_30 = _11;
_5 = Move(_31.1);
match _1.0 {
0 => bb19,
1 => bb8,
2 => bb23,
3 => bb24,
354622337 => bb26,
_ => bb25
}
}
bb23 = {
_15 = Adt66::Variant0 { fld0: _20 };
(*_5) = _10.fld0 as u128;
_22 = 25635_u16 as u128;
(*_5) = 5919109771578368873_u64 as u128;
_4 = _2 & _10.fld1.0;
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 ^ _20;
_1.2 = true;
(*_5) = _2 ^ _10.fld1.0;
(*_5) = _9 << _10.fld1.0;
match _1.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431350797249 => bb9,
_ => bb7
}
}
bb24 = {
(*_5) = _3 << _3;
(*_5) = 118_u8 as u128;
Goto(bb2)
}
bb25 = {
_10.fld3 = core::ptr::addr_of!(_26);
(*_5) = _22 | _3;
_28.1 = Move(_1.1);
_16 = !_19;
match _1.0 {
0 => bb8,
1 => bb2,
2 => bb5,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
325899795 => bb22,
_ => bb21
}
}
bb26 = {
_10.fld0 = 1561797727671117840_usize;
_1.2 = _6 != _22;
_33 = _22 * _2;
_28.0 = _1.0;
place!(Field::<u32>(Variant(_15, 0), 0)) = 13526652645644349563_u64 as u32;
_24 = core::ptr::addr_of!(_26);
(*_24) = 90_u8 as f32;
_10.fld3 = core::ptr::addr_of!((*_24));
(*_24) = 72_u8 as f32;
(*_24) = Field::<u32>(Variant(_15, 0), 0) as f32;
_10.fld1 = (_8,);
(*_24) = _10.fld0 as f32;
_9 = !_6;
Goto(bb27)
}
bb27 = {
_8 = _6;
(*_24) = 36933_u16 as f32;
(*_24) = Field::<u32>(Variant(_15, 0), 0) as f32;
_12 = [52505_u16,21416_u16,3959_u16,38542_u16,41830_u16,31428_u16,3921_u16,23461_u16];
_10.fld0 = 3248942953203601348_usize * 5188897191327369404_usize;
(*_24) = _22 as f32;
_19 = _16 ^ _16;
place!(Field::<u32>(Variant(_15, 0), 0)) = _20 + _20;
_4 = _9 + _6;
(*_24) = _1.0 as f32;
match _28.0 {
0 => bb25,
1 => bb28,
2 => bb29,
354622337 => bb31,
_ => bb30
}
}
bb28 = {
(*_5) = !_10.fld1.0;
_20 = _1.3 as u32;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _3;
Goto(bb8)
}
bb29 = {
_10.fld3 = core::ptr::addr_of!(_26);
(*_5) = _22 | _3;
_28.1 = Move(_1.1);
_16 = !_19;
match _1.0 {
0 => bb8,
1 => bb2,
2 => bb5,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
325899795 => bb22,
_ => bb21
}
}
bb30 = {
(*_5) = 32324_i16 as u128;
(*_5) = _1.0 as u128;
_1.3 = 85_i8 as f64;
(*_5) = _3 + _3;
_2 = 3908305407585184717_usize as u128;
(*_5) = _3;
_10.fld5 = [6413_u16,15812_u16,39168_u16];
_7 = '\u{de65c}' as i64;
_11 = '\u{f018d}';
(*_5) = _9;
(*_5) = (-21889_i16) as u128;
(*_5) = _3 * _3;
(*_5) = 119_i8 as u128;
(*_5) = !_8;
_10.fld1 = ((*_5),);
_10.fld4 = [_1.2,_1.2];
_1.2 = (*_5) < (*_5);
(*_5) = _10.fld1.0 - _10.fld1.0;
_10.fld1.0 = !(*_5);
Goto(bb4)
}
bb31 = {
_36 = 16941839650405248539_u64 >> _8;
_5 = core::ptr::addr_of!(_8);
_27 = &mut _36;
RET = core::ptr::addr_of!((*_27));
_26 = 12_i8 as f32;
(*_5) = _22 - _4;
_13 = &_27;
(*_27) = !12528424070499882040_u64;
_16 = _19 << (*_5);
(*_27) = 9549028946258965725_u64;
(*_27) = 16940135902779993108_u64 >> (*_5);
_20 = Field::<u32>(Variant(_15, 0), 0) - Field::<u32>(Variant(_15, 0), 0);
(*_27) = 11201261169008462688_u64;
Goto(bb32)
}
bb32 = {
Call(_41 = dump_var(8_usize, 6_usize, Move(_6), 4_usize, Move(_4), 8_usize, Move(_8), 22_usize, Move(_22)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Call(_41 = dump_var(8_usize, 20_usize, Move(_20), 33_usize, Move(_33), 11_usize, Move(_11), 9_usize, Move(_9)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9() -> u128 {
mir! {
type RET = u128;
let _1: isize;
let _2: f64;
let _3: bool;
let _4: *mut (u16, u8);
let _5: &'static mut [u16; 2];
let _6: *mut (i32, *mut [u16; 2], bool, f64);
let _7: *mut (bool,);
let _8: [i8; 4];
let _9: isize;
let _10: [i8; 6];
let _11: usize;
let _12: &'static [i64; 2];
let _13: (i32, *mut [u16; 2], bool, f64);
let _14: isize;
let _15: char;
let _16: Adt79;
let _17: f32;
let _18: usize;
let _19: *mut (u16, u8);
let _20: &'static mut [u16; 2];
let _21: u64;
let _22: (bool,);
let _23: f64;
let _24: bool;
let _25: u16;
let _26: *const *const u128;
let _27: u64;
let _28: f32;
let _29: u8;
let _30: *mut (bool,);
let _31: &'static usize;
let _32: i128;
let _33: isize;
let _34: isize;
let _35: *const *const u128;
let _36: (char, &'static usize, i8);
let _37: u16;
let _38: &'static i128;
let _39: isize;
let _40: (i32, *mut [u16; 2], bool, f64);
let _41: char;
let _42: isize;
let _43: bool;
let _44: bool;
let _45: i64;
let _46: *const u64;
let _47: f64;
let _48: isize;
let _49: bool;
let _50: usize;
let _51: isize;
let _52: i64;
let _53: i16;
let _54: isize;
let _55: Adt66;
let _56: *const u128;
let _57: bool;
let _58: [u32; 5];
let _59: *mut [u16; 2];
let _60: *const i16;
let _61: f32;
let _62: *const f32;
let _63: isize;
let _64: bool;
let _65: i16;
let _66: f32;
let _67: Adt69;
let _68: f32;
let _69: &'static (i32, *mut [u16; 2], bool, f64);
let _70: u32;
let _71: &'static mut Adt35;
let _72: bool;
let _73: *mut (u16, u8);
let _74: ();
let _75: ();
{
RET = (-273521145_i32) as u128;
RET = 11111236918810676830027078948305927709_u128 << 11268477454178228223_usize;
_2 = (-9223372036854775808_isize) as f64;
_1 = (-26_isize) - 9223372036854775807_isize;
_1 = (-9223372036854775808_isize);
_1 = !(-9223372036854775808_isize);
_2 = 8743408621685451211_i64 as f64;
RET = 88193161843939455310778843389218960929_u128 & 134315191650321411299165894521434180707_u128;
_2 = (-24_i8) as f64;
RET = 88461364996844248001610444436136076680_u128 | 259919692643295031001048503627508433984_u128;
_2 = 3393030500_u32 as f64;
_2 = 5951149706259231679_i64 as f64;
RET = 60636405509656338477898409692849241887_u128 + 337551355867472953191011867838319216736_u128;
_1 = (-9223372036854775808_isize) & (-120_isize);
RET = 1543146163_u32 as u128;
_2 = 9536377805515368436_u64 as f64;
Call(_2 = core::intrinsics::transmute(_1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = _2 as u128;
_2 = _1 as f64;
_2 = (-120973830052597957500703640584636907152_i128) as f64;
RET = 204557812498544259908948925096077896747_u128 | 330412211131654578962668961863451518196_u128;
Goto(bb2)
}
bb2 = {
RET = 263654922380885904033064985377725135207_u128 | 314002036352515617655509019530033755949_u128;
RET = 87545169656489272180664982192383895465_u128;
_1 = 9789883145144374530_u64 as isize;
_2 = 20782_u16 as f64;
_2 = 39_i8 as f64;
_2 = 0_usize as f64;
RET = !290689772451206969851550631575956049621_u128;
RET = 335733800902042308278302005037426409020_u128 * 271614245831590664717808666020724565167_u128;
_2 = 106111813715504186313352684315288694836_i128 as f64;
_2 = (-1236661889_i32) as f64;
RET = 5_usize as u128;
_1 = 9223372036854775807_isize >> RET;
_1 = -9223372036854775807_isize;
RET = (-12125_i16) as u128;
_2 = (-1504343722_i32) as f64;
RET = 60020344537879982983480669557583443546_u128 & 52847402740000491532374665158899671122_u128;
_2 = 11_i8 as f64;
RET = 142674352476770378383213326683874615488_u128 | 277987299542968203869844256865751995493_u128;
_1 = 9223372036854775807_isize;
_1 = RET as isize;
Goto(bb3)
}
bb3 = {
RET = 298130664702584917531462736454412504531_u128;
RET = 294554536483326748771517453657334767534_u128;
_1 = 7337_i16 as isize;
RET = !188805224056891229048441019991229186765_u128;
_2 = 3975437807256741874_i64 as f64;
_2 = 1034479589_i32 as f64;
_2 = 48268_u16 as f64;
RET = 127627631280771311129044990620312094933_u128 ^ 128150893499621370623236247764841784239_u128;
_2 = 939053680228131770_u64 as f64;
_1 = (-1879776265_i32) as isize;
_2 = _1 as f64;
_2 = 5_usize as f64;
_1 = (-1354403061_i32) as isize;
_2 = (-628830197_i32) as f64;
_1 = (-8_isize) | (-9223372036854775808_isize);
_2 = 136_u8 as f64;
_2 = 7_usize as f64;
_1 = 9223372036854775807_isize | (-9223372036854775808_isize);
_2 = RET as f64;
_1 = (-86_isize) - (-9223372036854775808_isize);
_1 = 69_isize >> RET;
Goto(bb4)
}
bb4 = {
_1 = 9223372036854775807_isize >> RET;
_3 = true | false;
RET = !77778061918457480492205302286677951555_u128;
RET = 53922316909739385108331509743847921375_u128;
_3 = _1 != _1;
_2 = 1386375582028139758_i64 as f64;
_1 = -50_isize;
_2 = 128_u8 as f64;
_3 = !false;
_1 = (-9223372036854775808_isize) + 29_isize;
RET = 285272712203994879992386069909060597012_u128;
_2 = 6864_u16 as f64;
_1 = (-246322196_i32) as isize;
RET = 247623103325569256823775110988375728906_u128;
RET = 276251264849518585922275077646080174124_u128 ^ 294232899834390991868791778119922752068_u128;
_1 = 792584779019217645_i64 as isize;
_2 = _1 as f64;
_3 = true;
RET = 19081_i16 as u128;
_1 = !9223372036854775807_isize;
RET = 38008804557990580342319509608150958949_u128 >> _1;
_2 = 221171965973920140_u64 as f64;
_1 = 102_isize >> RET;
_3 = _1 >= _1;
Call(_2 = fn10(_3, _1, _1, _1, _1, RET, _1, _1, RET, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_3 = !false;
_1 = -(-9223372036854775808_isize);
_1 = 9223372036854775807_isize;
_3 = false;
_8 = [(-78_i8),(-69_i8),(-118_i8),(-123_i8)];
_3 = false ^ false;
RET = !316920913015803308798905736626229425221_u128;
_8 = [77_i8,(-111_i8),(-3_i8),(-8_i8)];
_3 = !false;
RET = 162693893535009896295201558712831186204_u128;
RET = !179090548132487105383718526511249128255_u128;
RET = 445817118069742052_i64 as u128;
_2 = 4249036205_u32 as f64;
_9 = 27915_u16 as isize;
_3 = _2 >= _2;
_9 = _1 ^ _1;
_3 = _1 >= _9;
_9 = _1 - _1;
_3 = RET >= RET;
RET = !305575829697476881399440149400990165358_u128;
_1 = _9;
_3 = false;
_2 = (-395487447_i32) as f64;
_10 = [(-91_i8),(-122_i8),(-120_i8),114_i8,5_i8,(-44_i8)];
Goto(bb6)
}
bb6 = {
_1 = 29184501_i32 as isize;
RET = !16819118577853776211728937571372292673_u128;
_8 = [80_i8,52_i8,(-74_i8),5_i8];
_9 = !_1;
_8 = [(-28_i8),(-82_i8),21_i8,16_i8];
_9 = _1 & _1;
_2 = (-84_i8) as f64;
_11 = !0_usize;
Goto(bb7)
}
bb7 = {
_11 = 0_usize << RET;
_10 = [(-108_i8),(-79_i8),(-64_i8),26_i8,(-124_i8),66_i8];
_10 = [(-104_i8),54_i8,5_i8,(-87_i8),(-27_i8),(-7_i8)];
_1 = -_9;
_13.3 = -_2;
_9 = -_1;
_10 = [(-40_i8),29_i8,(-89_i8),(-11_i8),(-25_i8),25_i8];
_1 = _9 * _9;
_13.2 = _9 == _1;
_6 = core::ptr::addr_of_mut!(_13);
(*_6).2 = (*_6).3 <= (*_6).3;
(*_6).3 = _2;
(*_6).0 = 457618987_i32 + 2128952291_i32;
_10 = [(-77_i8),42_i8,(-92_i8),(-28_i8),17_i8,(-104_i8)];
(*_6).2 = _3;
(*_6).3 = -_2;
(*_6).3 = _2 - _2;
_3 = !(*_6).2;
(*_6).0 = 606896815_i32;
RET = 304263525982518326106152545286993014004_u128 >> _11;
_11 = 233_u8 as usize;
Goto(bb8)
}
bb8 = {
(*_6).3 = _2 - _2;
match (*_6).0 {
606896815 => bb9,
_ => bb6
}
}
bb9 = {
(*_6).2 = !_3;
(*_6).0 = (-471627237_i32);
RET = 151383370487704953167806587097480564970_u128;
(*_6).2 = !_3;
(*_6).2 = _11 != _11;
(*_6).3 = _2;
_15 = '\u{645e5}';
(*_6).0 = 333193328_i32 * (-444875374_i32);
(*_6).0 = 1296384482_i32 - 1562468891_i32;
(*_6).0 = (-107648570_i32) - (-1481898820_i32);
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb5,
5 => bb10,
6 => bb11,
151383370487704953167806587097480564970 => bb13,
_ => bb12
}
}
bb10 = {
RET = 263654922380885904033064985377725135207_u128 | 314002036352515617655509019530033755949_u128;
RET = 87545169656489272180664982192383895465_u128;
_1 = 9789883145144374530_u64 as isize;
_2 = 20782_u16 as f64;
_2 = 39_i8 as f64;
_2 = 0_usize as f64;
RET = !290689772451206969851550631575956049621_u128;
RET = 335733800902042308278302005037426409020_u128 * 271614245831590664717808666020724565167_u128;
_2 = 106111813715504186313352684315288694836_i128 as f64;
_2 = (-1236661889_i32) as f64;
RET = 5_usize as u128;
_1 = 9223372036854775807_isize >> RET;
_1 = -9223372036854775807_isize;
RET = (-12125_i16) as u128;
_2 = (-1504343722_i32) as f64;
RET = 60020344537879982983480669557583443546_u128 & 52847402740000491532374665158899671122_u128;
_2 = 11_i8 as f64;
RET = 142674352476770378383213326683874615488_u128 | 277987299542968203869844256865751995493_u128;
_1 = 9223372036854775807_isize;
_1 = RET as isize;
Goto(bb3)
}
bb11 = {
_1 = 9223372036854775807_isize >> RET;
_3 = true | false;
RET = !77778061918457480492205302286677951555_u128;
RET = 53922316909739385108331509743847921375_u128;
_3 = _1 != _1;
_2 = 1386375582028139758_i64 as f64;
_1 = -50_isize;
_2 = 128_u8 as f64;
_3 = !false;
_1 = (-9223372036854775808_isize) + 29_isize;
RET = 285272712203994879992386069909060597012_u128;
_2 = 6864_u16 as f64;
_1 = (-246322196_i32) as isize;
RET = 247623103325569256823775110988375728906_u128;
RET = 276251264849518585922275077646080174124_u128 ^ 294232899834390991868791778119922752068_u128;
_1 = 792584779019217645_i64 as isize;
_2 = _1 as f64;
_3 = true;
RET = 19081_i16 as u128;
_1 = !9223372036854775807_isize;
RET = 38008804557990580342319509608150958949_u128 >> _1;
_2 = 221171965973920140_u64 as f64;
_1 = 102_isize >> RET;
_3 = _1 >= _1;
Call(_2 = fn10(_3, _1, _1, _1, _1, RET, _1, _1, RET, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb12 = {
RET = _2 as u128;
_2 = _1 as f64;
_2 = (-120973830052597957500703640584636907152_i128) as f64;
RET = 204557812498544259908948925096077896747_u128 | 330412211131654578962668961863451518196_u128;
Goto(bb2)
}
bb13 = {
(*_6).3 = _2;
(*_6).3 = _2;
(*_6).0 = !759671647_i32;
_7 = core::ptr::addr_of_mut!(_22);
(*_7).0 = (*_6).2 & _3;
(*_6).3 = _2 - _2;
(*_7).0 = !(*_6).2;
match RET {
0 => bb6,
151383370487704953167806587097480564970 => bb14,
_ => bb11
}
}
bb14 = {
(*_7).0 = !(*_6).2;
(*_6).0 = 46359_u16 as i32;
match RET {
0 => bb5,
151383370487704953167806587097480564970 => bb15,
_ => bb3
}
}
bb15 = {
(*_7) = ((*_6).2,);
_14 = _1;
(*_7) = ((*_6).2,);
RET = 5658960500913107664144436724757104118_u128;
(*_6).3 = _2;
(*_7).0 = (*_6).0 <= (*_6).0;
(*_6).2 = !(*_7).0;
(*_6).2 = (*_6).0 > (*_6).0;
(*_6).3 = _2 - _2;
(*_7) = ((*_6).2,);
(*_6).0 = (-103516741_i32) * (-1170724492_i32);
(*_6).0 = (-1349863604_i32) + (-1896032335_i32);
(*_7).0 = (*_6).2 > (*_6).2;
_22 = ((*_6).2,);
_24 = (*_6).2 ^ (*_6).2;
_11 = 3_usize;
(*_6).2 = (*_6).0 < (*_6).0;
(*_7) = ((*_6).2,);
_25 = !23305_u16;
(*_6).2 = (*_7).0;
(*_7).0 = (*_6).0 <= (*_6).0;
(*_6).2 = (*_7).0;
(*_7).0 = !(*_6).2;
_28 = (-23139770834897812339392787003327129707_i128) as f32;
(*_6).0 = (-1405953669_i32) + (-227433562_i32);
match _8[_11] {
0 => bb1,
1 => bb14,
2 => bb3,
3 => bb9,
4 => bb13,
16 => bb17,
_ => bb16
}
}
bb16 = {
RET = 298130664702584917531462736454412504531_u128;
RET = 294554536483326748771517453657334767534_u128;
_1 = 7337_i16 as isize;
RET = !188805224056891229048441019991229186765_u128;
_2 = 3975437807256741874_i64 as f64;
_2 = 1034479589_i32 as f64;
_2 = 48268_u16 as f64;
RET = 127627631280771311129044990620312094933_u128 ^ 128150893499621370623236247764841784239_u128;
_2 = 939053680228131770_u64 as f64;
_1 = (-1879776265_i32) as isize;
_2 = _1 as f64;
_2 = 5_usize as f64;
_1 = (-1354403061_i32) as isize;
_2 = (-628830197_i32) as f64;
_1 = (-8_isize) | (-9223372036854775808_isize);
_2 = 136_u8 as f64;
_2 = 7_usize as f64;
_1 = 9223372036854775807_isize | (-9223372036854775808_isize);
_2 = RET as f64;
_1 = (-86_isize) - (-9223372036854775808_isize);
_1 = 69_isize >> RET;
Goto(bb4)
}
bb17 = {
(*_7).0 = !(*_6).2;
(*_6).0 = 258673856_i32;
(*_6).0 = 1078921306_i32;
(*_6).2 = !(*_7).0;
(*_7) = (_13.2,);
(*_7) = ((*_6).2,);
(*_6).3 = -_2;
_17 = 841380490_u32 as f32;
(*_6).3 = _2 - _2;
(*_6).2 = (*_7).0 ^ (*_7).0;
(*_6).2 = (*_7).0 <= _22.0;
(*_7).0 = (*_6).2 ^ (*_6).2;
(*_7) = ((*_6).2,);
(*_7) = ((*_6).2,);
(*_7) = ((*_6).2,);
(*_6).2 = !(*_7).0;
(*_6).0 = (-1325970385_i32) ^ (-2141504444_i32);
(*_7).0 = (*_6).2;
(*_6).3 = 11186_i16 as f64;
_34 = _14;
_30 = core::ptr::addr_of_mut!((*_7));
(*_30).0 = _11 >= _11;
(*_6).2 = (*_30).0;
(*_30).0 = !_24;
_34 = _14 | _9;
(*_6).3 = _2 + _2;
match _10[_11] {
0 => bb1,
1 => bb2,
2 => bb8,
3 => bb4,
4 => bb15,
5 => bb7,
6 => bb18,
340282366920938463463374607431768211428 => bb20,
_ => bb19
}
}
bb18 = {
RET = _2 as u128;
_2 = _1 as f64;
_2 = (-120973830052597957500703640584636907152_i128) as f64;
RET = 204557812498544259908948925096077896747_u128 | 330412211131654578962668961863451518196_u128;
Goto(bb2)
}
bb19 = {
_1 = 9223372036854775807_isize >> RET;
_3 = true | false;
RET = !77778061918457480492205302286677951555_u128;
RET = 53922316909739385108331509743847921375_u128;
_3 = _1 != _1;
_2 = 1386375582028139758_i64 as f64;
_1 = -50_isize;
_2 = 128_u8 as f64;
_3 = !false;
_1 = (-9223372036854775808_isize) + 29_isize;
RET = 285272712203994879992386069909060597012_u128;
_2 = 6864_u16 as f64;
_1 = (-246322196_i32) as isize;
RET = 247623103325569256823775110988375728906_u128;
RET = 276251264849518585922275077646080174124_u128 ^ 294232899834390991868791778119922752068_u128;
_1 = 792584779019217645_i64 as isize;
_2 = _1 as f64;
_3 = true;
RET = 19081_i16 as u128;
_1 = !9223372036854775807_isize;
RET = 38008804557990580342319509608150958949_u128 >> _1;
_2 = 221171965973920140_u64 as f64;
_1 = 102_isize >> RET;
_3 = _1 >= _1;
Call(_2 = fn10(_3, _1, _1, _1, _1, RET, _1, _1, RET, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb20 = {
_3 = _22.0;
(*_7).0 = _3 ^ (*_6).2;
_2 = -(*_6).3;
Goto(bb21)
}
bb21 = {
_11 = (*_7).0 as usize;
(*_6).2 = (*_7).0;
(*_7).0 = !(*_6).2;
(*_7).0 = (*_6).2;
_15 = '\u{e47bc}';
(*_6).0 = 384616131_i32 + (-506147090_i32);
(*_6).0 = 2031278726_i32 >> _9;
_39 = (*_6).2 as isize;
match RET {
0 => bb1,
1 => bb14,
2 => bb9,
3 => bb4,
4 => bb6,
5658960500913107664144436724757104118 => bb23,
_ => bb22
}
}
bb22 = {
RET = _2 as u128;
_2 = _1 as f64;
_2 = (-120973830052597957500703640584636907152_i128) as f64;
RET = 204557812498544259908948925096077896747_u128 | 330412211131654578962668961863451518196_u128;
Goto(bb2)
}
bb23 = {
(*_6).2 = (*_7).0;
_41 = _15;
(*_6).2 = (*_7).0;
_2 = (*_6).0 as f64;
(*_7) = (_13.2,);
(*_6).3 = -_2;
(*_7) = ((*_6).2,);
(*_6).0 = !(-104128706_i32);
(*_6).3 = _2 + _2;
(*_6).2 = !(*_7).0;
Goto(bb24)
}
bb24 = {
_41 = _15;
_22.0 = (*_6).2;
(*_7).0 = (*_6).2 & _13.2;
_40.3 = 73_i8 as f64;
match RET {
0 => bb12,
1 => bb16,
2 => bb25,
5658960500913107664144436724757104118 => bb27,
_ => bb26
}
}
bb25 = {
_3 = _22.0;
(*_7).0 = _3 ^ (*_6).2;
_2 = -(*_6).3;
Goto(bb21)
}
bb26 = {
RET = 298130664702584917531462736454412504531_u128;
RET = 294554536483326748771517453657334767534_u128;
_1 = 7337_i16 as isize;
RET = !188805224056891229048441019991229186765_u128;
_2 = 3975437807256741874_i64 as f64;
_2 = 1034479589_i32 as f64;
_2 = 48268_u16 as f64;
RET = 127627631280771311129044990620312094933_u128 ^ 128150893499621370623236247764841784239_u128;
_2 = 939053680228131770_u64 as f64;
_1 = (-1879776265_i32) as isize;
_2 = _1 as f64;
_2 = 5_usize as f64;
_1 = (-1354403061_i32) as isize;
_2 = (-628830197_i32) as f64;
_1 = (-8_isize) | (-9223372036854775808_isize);
_2 = 136_u8 as f64;
_2 = 7_usize as f64;
_1 = 9223372036854775807_isize | (-9223372036854775808_isize);
_2 = RET as f64;
_1 = (-86_isize) - (-9223372036854775808_isize);
_1 = 69_isize >> RET;
Goto(bb4)
}
bb27 = {
(*_6).3 = _2 * _40.3;
(*_6).2 = _3 != (*_7).0;
(*_6).3 = 17142595292731499462_u64 as f64;
(*_7) = ((*_6).2,);
_40.0 = (*_6).0 - (*_6).0;
(*_7) = ((*_6).2,);
_43 = !(*_7).0;
_14 = _39 >> (*_6).0;
(*_7).0 = !(*_6).2;
match RET {
5658960500913107664144436724757104118 => bb29,
_ => bb28
}
}
bb28 = {
_1 = 9223372036854775807_isize >> RET;
_3 = true | false;
RET = !77778061918457480492205302286677951555_u128;
RET = 53922316909739385108331509743847921375_u128;
_3 = _1 != _1;
_2 = 1386375582028139758_i64 as f64;
_1 = -50_isize;
_2 = 128_u8 as f64;
_3 = !false;
_1 = (-9223372036854775808_isize) + 29_isize;
RET = 285272712203994879992386069909060597012_u128;
_2 = 6864_u16 as f64;
_1 = (-246322196_i32) as isize;
RET = 247623103325569256823775110988375728906_u128;
RET = 276251264849518585922275077646080174124_u128 ^ 294232899834390991868791778119922752068_u128;
_1 = 792584779019217645_i64 as isize;
_2 = _1 as f64;
_3 = true;
RET = 19081_i16 as u128;
_1 = !9223372036854775807_isize;
RET = 38008804557990580342319509608150958949_u128 >> _1;
_2 = 221171965973920140_u64 as f64;
_1 = 102_isize >> RET;
_3 = _1 >= _1;
Call(_2 = fn10(_3, _1, _1, _1, _1, RET, _1, _1, RET, _1), ReturnTo(bb5), UnwindUnreachable())
}
bb29 = {
(*_7) = ((*_6).2,);
(*_7) = ((*_6).2,);
(*_6).3 = _2 + _2;
_22.0 = (*_6).2;
(*_6).2 = _1 >= _1;
_23 = _25 as f64;
(*_7).0 = (*_6).2 < (*_6).2;
_40.0 = (*_6).3 as i32;
_44 = (*_7).0 < (*_7).0;
(*_7).0 = (*_6).2 ^ (*_6).2;
_32 = 4033540168281030537_i64 as i128;
_40.3 = (*_6).3 - (*_6).3;
_41 = _15;
(*_6).3 = _40.3 - _40.3;
_25 = 3591_u16 - 59347_u16;
(*_6).0 = !_40.0;
match RET {
0 => bb10,
1 => bb11,
2 => bb15,
3 => bb24,
4 => bb5,
5 => bb6,
6 => bb27,
5658960500913107664144436724757104118 => bb30,
_ => bb21
}
}
bb30 = {
(*_7).0 = _43;
(*_7) = ((*_6).2,);
_24 = !(*_6).2;
(*_6).3 = _40.3;
(*_6).3 = _40.3;
_49 = (*_7).0;
(*_6).3 = _40.3;
(*_6).0 = _40.0;
(*_7) = ((*_6).2,);
(*_6).2 = (*_6).3 < (*_6).3;
_39 = _1 >> (*_6).0;
_24 = (*_6).2;
_30 = core::ptr::addr_of_mut!(_22);
_36.2 = !(-10_i8);
(*_7) = (_13.2,);
_36.0 = _41;
_32 = (*_6).2 as i128;
(*_6).2 = (*_7).0;
(*_7).0 = _13.2 | (*_6).2;
(*_7) = (_44,);
(*_6).2 = (*_7).0;
(*_7) = ((*_6).2,);
(*_6).0 = _40.0 << _32;
Goto(bb31)
}
bb31 = {
(*_6).2 = !(*_7).0;
(*_7) = (_24,);
_6 = core::ptr::addr_of_mut!((*_6));
(*_6).3 = _40.3 * _40.3;
_32 = (-14031437920399649081943345846564159045_i128);
(*_6).0 = _40.0 - _40.0;
(*_6).0 = _40.0;
(*_6).3 = _40.3;
_38 = &_32;
match (*_38) {
0 => bb32,
1 => bb33,
2 => bb34,
3 => bb35,
4 => bb36,
326250929000538814381431261585204052411 => bb38,
_ => bb37
}
}
bb32 = {
RET = 263654922380885904033064985377725135207_u128 | 314002036352515617655509019530033755949_u128;
RET = 87545169656489272180664982192383895465_u128;
_1 = 9789883145144374530_u64 as isize;
_2 = 20782_u16 as f64;
_2 = 39_i8 as f64;
_2 = 0_usize as f64;
RET = !290689772451206969851550631575956049621_u128;
RET = 335733800902042308278302005037426409020_u128 * 271614245831590664717808666020724565167_u128;
_2 = 106111813715504186313352684315288694836_i128 as f64;
_2 = (-1236661889_i32) as f64;
RET = 5_usize as u128;
_1 = 9223372036854775807_isize >> RET;
_1 = -9223372036854775807_isize;
RET = (-12125_i16) as u128;
_2 = (-1504343722_i32) as f64;
RET = 60020344537879982983480669557583443546_u128 & 52847402740000491532374665158899671122_u128;
_2 = 11_i8 as f64;
RET = 142674352476770378383213326683874615488_u128 | 277987299542968203869844256865751995493_u128;
_1 = 9223372036854775807_isize;
_1 = RET as isize;
Goto(bb3)
}
bb33 = {
RET = _2 as u128;
_2 = _1 as f64;
_2 = (-120973830052597957500703640584636907152_i128) as f64;
RET = 204557812498544259908948925096077896747_u128 | 330412211131654578962668961863451518196_u128;
Goto(bb2)
}
bb34 = {
(*_7).0 = !(*_6).2;
(*_6).0 = 46359_u16 as i32;
match RET {
0 => bb5,
151383370487704953167806587097480564970 => bb15,
_ => bb3
}
}
bb35 = {
(*_6).2 = (*_7).0;
_41 = _15;
(*_6).2 = (*_7).0;
_2 = (*_6).0 as f64;
(*_7) = (_13.2,);
(*_6).3 = -_2;
(*_7) = ((*_6).2,);
(*_6).0 = !(-104128706_i32);
(*_6).3 = _2 + _2;
(*_6).2 = !(*_7).0;
Goto(bb24)
}
bb36 = {
_3 = !false;
_1 = -(-9223372036854775808_isize);
_1 = 9223372036854775807_isize;
_3 = false;
_8 = [(-78_i8),(-69_i8),(-118_i8),(-123_i8)];
_3 = false ^ false;
RET = !316920913015803308798905736626229425221_u128;
_8 = [77_i8,(-111_i8),(-3_i8),(-8_i8)];
_3 = !false;
RET = 162693893535009896295201558712831186204_u128;
RET = !179090548132487105383718526511249128255_u128;
RET = 445817118069742052_i64 as u128;
_2 = 4249036205_u32 as f64;
_9 = 27915_u16 as isize;
_3 = _2 >= _2;
_9 = _1 ^ _1;
_3 = _1 >= _9;
_9 = _1 - _1;
_3 = RET >= RET;
RET = !305575829697476881399440149400990165358_u128;
_1 = _9;
_3 = false;
_2 = (-395487447_i32) as f64;
_10 = [(-91_i8),(-122_i8),(-120_i8),114_i8,5_i8,(-44_i8)];
Goto(bb6)
}
bb37 = {
RET = 298130664702584917531462736454412504531_u128;
RET = 294554536483326748771517453657334767534_u128;
_1 = 7337_i16 as isize;
RET = !188805224056891229048441019991229186765_u128;
_2 = 3975437807256741874_i64 as f64;
_2 = 1034479589_i32 as f64;
_2 = 48268_u16 as f64;
RET = 127627631280771311129044990620312094933_u128 ^ 128150893499621370623236247764841784239_u128;
_2 = 939053680228131770_u64 as f64;
_1 = (-1879776265_i32) as isize;
_2 = _1 as f64;
_2 = 5_usize as f64;
_1 = (-1354403061_i32) as isize;
_2 = (-628830197_i32) as f64;
_1 = (-8_isize) | (-9223372036854775808_isize);
_2 = 136_u8 as f64;
_2 = 7_usize as f64;
_1 = 9223372036854775807_isize | (-9223372036854775808_isize);
_2 = RET as f64;
_1 = (-86_isize) - (-9223372036854775808_isize);
_1 = 69_isize >> RET;
Goto(bb4)
}
bb38 = {
_17 = _28 + _28;
_52 = 1034819974031370839_i64;
(*_7) = (_13.2,);
(*_7) = ((*_6).2,);
(*_6).0 = _40.0 | _40.0;
(*_7).0 = (*_6).2 & (*_6).2;
(*_7) = ((*_6).2,);
_30 = core::ptr::addr_of_mut!((*_7));
(*_30) = (_24,);
(*_30).0 = !_49;
_26 = core::ptr::addr_of!(_56);
_44 = _43 ^ (*_6).2;
_34 = -_39;
(*_6).0 = _40.0 << _11;
(*_30) = ((*_6).2,);
Goto(bb39)
}
bb39 = {
_36.1 = &_11;
_31 = &_11;
_21 = 3351777841958938570_u64 * 14503248270263747909_u64;
_46 = core::ptr::addr_of!(_21);
(*_26) = core::ptr::addr_of!(RET);
_21 = 11552067074908812962_u64 - 12341763188493417451_u64;
(*_30) = (_13.2,);
(*_30) = ((*_6).2,);
(*_30).0 = (*_6).2;
(*_6).0 = _40.0 ^ _40.0;
_13.2 = _40.0 == (*_6).0;
_6 = core::ptr::addr_of_mut!(_40);
(*_6).2 = (*_30).0 >= _24;
(*_6).2 = (*_30).0 > (*_30).0;
(*_7) = ((*_6).2,);
_45 = _52;
match (*_38) {
0 => bb13,
1 => bb37,
2 => bb15,
3 => bb26,
4 => bb20,
326250929000538814381431261585204052411 => bb41,
_ => bb40
}
}
bb40 = {
(*_7).0 = _43;
(*_7) = ((*_6).2,);
_24 = !(*_6).2;
(*_6).3 = _40.3;
(*_6).3 = _40.3;
_49 = (*_7).0;
(*_6).3 = _40.3;
(*_6).0 = _40.0;
(*_7) = ((*_6).2,);
(*_6).2 = (*_6).3 < (*_6).3;
_39 = _1 >> (*_6).0;
_24 = (*_6).2;
_30 = core::ptr::addr_of_mut!(_22);
_36.2 = !(-10_i8);
(*_7) = (_13.2,);
_36.0 = _41;
_32 = (*_6).2 as i128;
(*_6).2 = (*_7).0;
(*_7).0 = _13.2 | (*_6).2;
(*_7) = (_44,);
(*_6).2 = (*_7).0;
(*_7) = ((*_6).2,);
(*_6).0 = _40.0 << _32;
Goto(bb31)
}
bb41 = {
(*_46) = _36.2 as u64;
(*_6).0 = _13.0 << _11;
_31 = Move(_36.1);
(*_7).0 = !(*_6).2;
(*_7) = (_40.2,);
(*_46) = _11 as u64;
_41 = _15;
(*_7) = (_13.2,);
_41 = _36.0;
_53 = 15_u8 as i16;
(*_6).3 = -_2;
(*_6).3 = _13.3 - _13.3;
_53 = !27450_i16;
(*_7).0 = _40.2;
Goto(bb42)
}
bb42 = {
(*_6).3 = _2 * _2;
(*_46) = 11550835895054048275_u64;
(*_7).0 = (*_6).0 < (*_6).0;
Call(_23 = core::intrinsics::transmute((*_46)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_68 = _28 - _17;
(*_6).2 = (*_7).0 ^ _44;
_37 = !_25;
(*_56) = !324018041008259909167175074123765851713_u128;
(*_26) = core::ptr::addr_of!((*_56));
(*_7) = ((*_6).2,);
(*_56) = 96464311834557079255543227287791987226_u128 << (*_6).0;
(*_7) = (_44,);
(*_7).0 = (*_6).2 > (*_6).2;
_44 = !(*_7).0;
(*_7) = (_40.2,);
(*_7).0 = (*_6).2 ^ (*_6).2;
_47 = -(*_6).3;
(*_6).2 = !(*_7).0;
(*_7).0 = (*_6).2;
(*_46) = 15684091947210949360_u64 & 16606890076330600814_u64;
_27 = _21 + (*_46);
_66 = _17;
_65 = (*_6).0 as i16;
(*_26) = core::ptr::addr_of!((*_56));
(*_6).0 = _13.0 * _13.0;
Goto(bb44)
}
bb44 = {
Call(_74 = dump_var(9_usize, 27_usize, Move(_27), 41_usize, Move(_41), 8_usize, Move(_8), 24_usize, Move(_24)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_74 = dump_var(9_usize, 53_usize, Move(_53), 15_usize, Move(_15), 25_usize, Move(_25), 21_usize, Move(_21)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_74 = dump_var(9_usize, 43_usize, Move(_43), 45_usize, Move(_45), 65_usize, Move(_65), 34_usize, Move(_34)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: u128,mut _7: isize,mut _8: isize,mut _9: u128,mut _10: isize) -> f64 {
mir! {
type RET = f64;
let _11: isize;
let _12: u32;
let _13: usize;
let _14: usize;
let _15: isize;
let _16: &'static (i32, *mut [u16; 2], bool, f64);
let _17: bool;
let _18: isize;
let _19: [i32; 5];
let _20: u64;
let _21: *const *const u128;
let _22: (Adt45,);
let _23: isize;
let _24: Adt43;
let _25: bool;
let _26: [char; 7];
let _27: f32;
let _28: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _29: isize;
let _30: &'static mut [u16; 2];
let _31: char;
let _32: isize;
let _33: [u16; 2];
let _34: &'static (i32, *mut [u16; 2], bool, f64);
let _35: [i128; 6];
let _36: *const f32;
let _37: isize;
let _38: bool;
let _39: i32;
let _40: isize;
let _41: u8;
let _42: *const u128;
let _43: u64;
let _44: bool;
let _45: *const *const u128;
let _46: [u16; 2];
let _47: (i32,);
let _48: &'static mut [u16; 2];
let _49: &'static usize;
let _50: u16;
let _51: *const *const u128;
let _52: *const u128;
let _53: isize;
let _54: *const (i128, i64);
let _55: (u128,);
let _56: *const u128;
let _57: (u8,);
let _58: u16;
let _59: char;
let _60: *mut (u16, u8);
let _61: f64;
let _62: isize;
let _63: isize;
let _64: f64;
let _65: [i64; 2];
let _66: (char, &'static usize, i8);
let _67: *const i16;
let _68: isize;
let _69: &'static *const i16;
let _70: i16;
let _71: Adt35;
let _72: ();
let _73: ();
{
_6 = !_9;
_8 = _5;
_3 = -_10;
_9 = _6;
RET = (-96908077118095299219336620280871990142_i128) as f64;
_4 = _5;
_3 = '\u{ce1c0}' as isize;
_13 = (-16316_i16) as usize;
_13 = 16494849031704342555_usize >> _3;
_12 = 3873553243_u32;
_7 = _5 | _8;
_9 = _6 << _7;
_10 = _9 as isize;
_13 = 9533300805926892102_usize & 11797183573679896054_usize;
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
3873553243 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_1 = _5 > _2;
_11 = _5;
_14 = 11456281991467994773_u64 as usize;
_5 = !_10;
_6 = _13 as u128;
_4 = _9 as isize;
_10 = _4;
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
3873553243 => bb7,
_ => bb5
}
}
bb7 = {
_11 = -_2;
_3 = _7 * _10;
_4 = _11 >> _3;
_11 = -_3;
_15 = _3;
_11 = _4 & _15;
_3 = _11;
_15 = _7 << _7;
_4 = _10;
_14 = _13 | _13;
_14 = _13 ^ _13;
_7 = -_5;
_8 = _11;
_4 = -_11;
_4 = _3 ^ _11;
_17 = _1 & _1;
_4 = _3 & _11;
_2 = _15 + _8;
_13 = _3 as usize;
match _12 {
0 => bb4,
3873553243 => bb8,
_ => bb2
}
}
bb8 = {
_18 = RET as isize;
_11 = _8 | _7;
_12 = 29687_i16 as u32;
_7 = _11 ^ _4;
_11 = 51938707249172866968282067851405749879_i128 as isize;
_19 = [746956314_i32,1270352233_i32,(-571601203_i32),2029763987_i32,1395397354_i32];
_11 = _3;
_19 = [(-160765250_i32),2064638368_i32,(-981502132_i32),(-1116683577_i32),2106376661_i32];
_18 = -_8;
Call(_13 = fn11(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_10 = _2 & _7;
Goto(bb10)
}
bb10 = {
_3 = _10 * _8;
_2 = 29754_u16 as isize;
_3 = _11;
_17 = !_1;
_10 = _18 * _7;
_9 = _6;
_10 = _8 << _15;
_14 = _13 + _13;
_17 = _1;
_20 = 7762645149135629242_u64;
_13 = RET as usize;
_2 = _4;
_2 = _7 * _8;
_14 = _2 as usize;
_6 = _9 + _9;
_18 = !_7;
_20 = _12 as u64;
Goto(bb11)
}
bb11 = {
_12 = 1360294453_u32 ^ 2392875381_u32;
_15 = '\u{184bc}' as isize;
_1 = _17;
_2 = !_4;
_10 = _18 * _18;
_19 = [1998334912_i32,(-460545554_i32),429748096_i32,1899479992_i32,(-1228913064_i32)];
_7 = _2;
Goto(bb12)
}
bb12 = {
_23 = (-51_i8) as isize;
_8 = !_2;
RET = (-823629465982484222_i64) as f64;
_12 = 415196634_u32 ^ 833352701_u32;
_23 = _18;
_19 = [2031826935_i32,(-512299237_i32),1188667969_i32,(-465697169_i32),(-2093540206_i32)];
RET = _9 as f64;
_15 = 191_u8 as isize;
_23 = _18;
_1 = _17;
_6 = !_9;
_4 = _7 & _18;
_23 = -_10;
_24.fld3.0 = '\u{a936a}';
_4 = _23;
_19 = [1349468811_i32,1929501953_i32,1534382814_i32,553519349_i32,(-1822603362_i32)];
RET = 52163_u16 as f64;
_24.fld5 = !_20;
_2 = (-75_i8) as isize;
_23 = _9 as isize;
_24.fld3.3 = RET * RET;
Call(_8 = core::intrinsics::transmute(_23), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_3 = -_18;
_7 = _10;
_25 = !_1;
_24.fld3.2 = _12;
_24.fld3.1 = !82_u8;
_24.fld4 = (_25,);
_24.fld3.1 = 144_u8;
Goto(bb14)
}
bb14 = {
_15 = _11 >> _10;
_14 = _13 ^ _13;
_15 = _7 | _4;
_24.fld6 = -624519377373389727_i64;
_10 = _4 << _15;
_24.fld2 = _24.fld6 as isize;
_3 = _18 | _10;
_24.fld7.0 = (-289526283_i32);
_24.fld3 = ('\u{32ada}', 146_u8, _12, RET);
_14 = _13 ^ _13;
_18 = _3;
_24.fld3.1 = 147_u8;
_24.fld7 = ((-362527924_i32),);
RET = _24.fld3.3 + _24.fld3.3;
_9 = _6 * _6;
_24.fld3.2 = _12 >> _7;
_1 = !_24.fld4.0;
_10 = _18;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_12];
match _24.fld7.0 {
0 => bb2,
1 => bb15,
340282366920938463463374607431405683532 => bb17,
_ => bb16
}
}
bb15 = {
Return()
}
bb16 = {
_3 = _10 * _8;
_2 = 29754_u16 as isize;
_3 = _11;
_17 = !_1;
_10 = _18 * _7;
_9 = _6;
_10 = _8 << _15;
_14 = _13 + _13;
_17 = _1;
_20 = 7762645149135629242_u64;
_13 = RET as usize;
_2 = _4;
_2 = _7 * _8;
_14 = _2 as usize;
_6 = _9 + _9;
_18 = !_7;
_20 = _12 as u64;
Goto(bb11)
}
bb17 = {
_14 = _13 + _13;
_24.fld0 = [_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0];
_7 = _15 << _18;
_24.fld4 = (_17,);
_24.fld7.0 = 85675506075217859199526286924324628638_i128 as i32;
_24.fld5 = _20;
_3 = _7 >> _15;
_19 = [_24.fld7.0,_24.fld7.0,_24.fld7.0,_24.fld7.0,_24.fld7.0];
_14 = _13 >> _7;
_8 = _24.fld3.0 as isize;
_26 = [_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0,_24.fld3.0];
_6 = !_9;
match _24.fld3.1 {
0 => bb5,
1 => bb6,
147 => bb19,
_ => bb18
}
}
bb18 = {
_18 = RET as isize;
_11 = _8 | _7;
_12 = 29687_i16 as u32;
_7 = _11 ^ _4;
_11 = 51938707249172866968282067851405749879_i128 as isize;
_19 = [746956314_i32,1270352233_i32,(-571601203_i32),2029763987_i32,1395397354_i32];
_11 = _3;
_19 = [(-160765250_i32),2064638368_i32,(-981502132_i32),(-1116683577_i32),2106376661_i32];
_18 = -_8;
Call(_13 = fn11(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb19 = {
_24.fld3.3 = RET * RET;
Goto(bb20)
}
bb20 = {
_24.fld4.0 = !_25;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
_11 = _18 ^ _5;
_33 = [50631_u16,32753_u16];
_27 = _24.fld3.2 as f32;
_24.fld4 = (_1,);
_13 = !_14;
_2 = _7;
_14 = _13 * _13;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
Goto(bb21)
}
bb21 = {
_31 = _24.fld3.0;
_8 = _4;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
RET = _24.fld3.1 as f64;
_5 = _3 + _2;
_24.fld6 = (-17043_i16) as i64;
_24.fld3.0 = _31;
_9 = _6;
_35 = [(-87738854166891271947601933887104399860_i128),(-71115699911110485460427889718690111233_i128),78402843595978125956488049437476000587_i128,(-151917984151848845390563999508219860547_i128),57001314687251357708011983558273624870_i128,(-80823735702531959246484872347347890388_i128)];
_20 = (-18655660988001704790743873963877107786_i128) as u64;
_24.fld4 = (_25,);
_2 = _24.fld3.2 as isize;
match _24.fld3.1 {
0 => bb12,
1 => bb10,
2 => bb8,
147 => bb22,
_ => bb16
}
}
bb22 = {
_36 = core::ptr::addr_of!(_27);
_33 = [22871_u16,65418_u16];
RET = _24.fld3.3;
(*_36) = 17911_u16 as f32;
_24.fld7.0 = 1246257518_i32;
_24.fld3.2 = _12 * _12;
_24.fld4.0 = !_17;
_18 = _14 as isize;
Goto(bb23)
}
bb23 = {
_24.fld5 = _20 - _20;
_9 = _6 >> _3;
_15 = -_3;
(*_36) = (-69_i8) as f32;
_6 = _9 + _9;
_30 = &mut _33;
(*_30) = [15875_u16,50583_u16];
Call((*_36) = core::intrinsics::transmute((*_30)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
(*_30) = [29466_u16,25580_u16];
(*_36) = (-8648_i16) as f32;
_10 = _24.fld7.0 as isize;
_24.fld2 = _7;
_24.fld3.1 = !211_u8;
_39 = _24.fld7.0 | _24.fld7.0;
(*_30) = [11723_u16,59480_u16];
(*_30) = [49103_u16,24105_u16];
(*_36) = _24.fld3.2 as f32;
(*_36) = _11 as f32;
_24.fld5 = !_20;
_15 = _20 as isize;
_5 = _18 ^ _11;
(*_36) = _20 as f32;
_1 = _17 & _17;
_27 = _9 as f32;
_26 = [_31,_24.fld3.0,_31,_31,_24.fld3.0,_24.fld3.0,_24.fld3.0];
_7 = (*_36) as isize;
(*_30) = [58790_u16,46460_u16];
match _24.fld7.0 {
1246257518 => bb26,
_ => bb25
}
}
bb25 = {
Return()
}
bb26 = {
_6 = _9 + _9;
(*_30) = [13011_u16,3920_u16];
_19 = [_39,_24.fld7.0,_39,_39,_39];
_39 = _24.fld7.0 << _2;
_11 = _5 << _18;
(*_30) = [20363_u16,19382_u16];
_44 = _25;
_45 = core::ptr::addr_of!(_42);
_1 = _18 <= _24.fld2;
(*_30) = [27923_u16,30648_u16];
(*_36) = 30_i8 as f32;
(*_45) = core::ptr::addr_of!(_9);
(*_30) = [23467_u16,46628_u16];
(*_45) = core::ptr::addr_of!((*_42));
_7 = _3;
(*_45) = core::ptr::addr_of!((*_42));
(*_45) = core::ptr::addr_of!((*_42));
_2 = _18 & _5;
_46 = (*_30);
_24.fld3.3 = RET * RET;
(*_42) = _6;
Goto(bb27)
}
bb27 = {
_32 = _3 - _2;
_47 = (_39,);
(*_36) = _24.fld6 as f32;
_10 = _5;
_49 = &_13;
(*_36) = _39 as f32;
(*_45) = core::ptr::addr_of!((*_42));
(*_42) = _24.fld3.1 as u128;
Goto(bb28)
}
bb28 = {
(*_36) = 143950207603341203889387958256911863676_i128 as f32;
_24.fld4 = (_25,);
(*_45) = core::ptr::addr_of!((*_42));
_50 = _11 as u16;
_39 = _47.0;
_18 = _7 & _5;
_25 = !_1;
(*_36) = _24.fld5 as f32;
_24.fld4 = (_1,);
(*_36) = 11138_i16 as f32;
(*_30) = [_50,_50];
(*_30) = [_50,_50];
_19 = [_47.0,_47.0,_47.0,_47.0,_39];
_27 = RET as f32;
(*_30) = _46;
_47 = _24.fld7;
_53 = _2 ^ _3;
(*_45) = core::ptr::addr_of!((*_42));
match _24.fld7.0 {
0 => bb8,
1 => bb19,
2 => bb24,
3 => bb12,
1246257518 => bb30,
_ => bb29
}
}
bb29 = {
_24.fld4.0 = !_25;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
_11 = _18 ^ _5;
_33 = [50631_u16,32753_u16];
_27 = _24.fld3.2 as f32;
_24.fld4 = (_1,);
_13 = !_14;
_2 = _7;
_14 = _13 * _13;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
Goto(bb21)
}
bb30 = {
(*_45) = core::ptr::addr_of!((*_42));
(*_30) = [_50,_50];
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_12,_24.fld3.2];
_15 = _53 << (*_49);
match _47.0 {
0 => bb22,
1 => bb31,
2 => bb32,
1246257518 => bb34,
_ => bb33
}
}
bb31 = {
Return()
}
bb32 = {
_18 = RET as isize;
_11 = _8 | _7;
_12 = 29687_i16 as u32;
_7 = _11 ^ _4;
_11 = 51938707249172866968282067851405749879_i128 as isize;
_19 = [746956314_i32,1270352233_i32,(-571601203_i32),2029763987_i32,1395397354_i32];
_11 = _3;
_19 = [(-160765250_i32),2064638368_i32,(-981502132_i32),(-1116683577_i32),2106376661_i32];
_18 = -_8;
Call(_13 = fn11(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb33 = {
_3 = -_18;
_7 = _10;
_25 = !_1;
_24.fld3.2 = _12;
_24.fld3.1 = !82_u8;
_24.fld4 = (_25,);
_24.fld3.1 = 144_u8;
Goto(bb14)
}
bb34 = {
(*_36) = _39 as f32;
(*_45) = core::ptr::addr_of!((*_42));
_25 = !_24.fld4.0;
_26 = [_24.fld3.0,_24.fld3.0,_24.fld3.0,_31,_31,_24.fld3.0,_31];
_29 = _24.fld3.2 as isize;
_40 = !_32;
_13 = _14 & _14;
(*_45) = core::ptr::addr_of!((*_42));
(*_30) = [_50,_50];
(*_36) = _39 as f32;
_45 = core::ptr::addr_of!((*_45));
(*_42) = !_6;
(*_30) = _46;
Goto(bb35)
}
bb35 = {
_4 = _32;
_9 = _6 ^ _6;
(*_36) = 62886565054771490236850779336745566104_i128 as f32;
_24.fld3.0 = _31;
_9 = _6 | _6;
_8 = _53 & _7;
_24.fld4.0 = (*_42) > (*_42);
match _47.0 {
0 => bb36,
1 => bb37,
1246257518 => bb39,
_ => bb38
}
}
bb36 = {
(*_45) = core::ptr::addr_of!((*_42));
(*_30) = [_50,_50];
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_12,_24.fld3.2];
_15 = _53 << (*_49);
match _47.0 {
0 => bb22,
1 => bb31,
2 => bb32,
1246257518 => bb34,
_ => bb33
}
}
bb37 = {
_24.fld4.0 = !_25;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
_11 = _18 ^ _5;
_33 = [50631_u16,32753_u16];
_27 = _24.fld3.2 as f32;
_24.fld4 = (_1,);
_13 = !_14;
_2 = _7;
_14 = _13 * _13;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
Goto(bb21)
}
bb38 = {
_6 = _9 + _9;
(*_30) = [13011_u16,3920_u16];
_19 = [_39,_24.fld7.0,_39,_39,_39];
_39 = _24.fld7.0 << _2;
_11 = _5 << _18;
(*_30) = [20363_u16,19382_u16];
_44 = _25;
_45 = core::ptr::addr_of!(_42);
_1 = _18 <= _24.fld2;
(*_30) = [27923_u16,30648_u16];
(*_36) = 30_i8 as f32;
(*_45) = core::ptr::addr_of!(_9);
(*_30) = [23467_u16,46628_u16];
(*_45) = core::ptr::addr_of!((*_42));
_7 = _3;
(*_45) = core::ptr::addr_of!((*_42));
(*_45) = core::ptr::addr_of!((*_42));
_2 = _18 & _5;
_46 = (*_30);
_24.fld3.3 = RET * RET;
(*_42) = _6;
Goto(bb27)
}
bb39 = {
(*_36) = _20 as f32;
Goto(bb40)
}
bb40 = {
(*_42) = _6 | _6;
_14 = 3791103727562324019974809607180479695_i128 as usize;
_31 = _24.fld3.0;
(*_42) = _50 as u128;
_24.fld3.3 = RET;
_31 = _24.fld3.0;
(*_30) = _46;
(*_36) = _24.fld6 as f32;
(*_42) = _6;
(*_36) = 17726853162251059654448725970732470041_i128 as f32;
(*_45) = core::ptr::addr_of!((*_42));
match _24.fld7.0 {
0 => bb12,
1 => bb13,
2 => bb27,
3 => bb41,
4 => bb42,
5 => bb43,
6 => bb44,
1246257518 => bb46,
_ => bb45
}
}
bb41 = {
_36 = core::ptr::addr_of!(_27);
_33 = [22871_u16,65418_u16];
RET = _24.fld3.3;
(*_36) = 17911_u16 as f32;
_24.fld7.0 = 1246257518_i32;
_24.fld3.2 = _12 * _12;
_24.fld4.0 = !_17;
_18 = _14 as isize;
Goto(bb23)
}
bb42 = {
(*_45) = core::ptr::addr_of!((*_42));
(*_30) = [_50,_50];
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_12,_24.fld3.2];
_15 = _53 << (*_49);
match _47.0 {
0 => bb22,
1 => bb31,
2 => bb32,
1246257518 => bb34,
_ => bb33
}
}
bb43 = {
_24.fld5 = _20 - _20;
_9 = _6 >> _3;
_15 = -_3;
(*_36) = (-69_i8) as f32;
_6 = _9 + _9;
_30 = &mut _33;
(*_30) = [15875_u16,50583_u16];
Call((*_36) = core::intrinsics::transmute((*_30)), ReturnTo(bb24), UnwindUnreachable())
}
bb44 = {
Return()
}
bb45 = {
_24.fld4.0 = !_25;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
_11 = _18 ^ _5;
_33 = [50631_u16,32753_u16];
_27 = _24.fld3.2 as f32;
_24.fld4 = (_1,);
_13 = !_14;
_2 = _7;
_14 = _13 * _13;
_24.fld1 = [_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2,_24.fld3.2];
Goto(bb21)
}
bb46 = {
_48 = &mut (*_30);
(*_45) = core::ptr::addr_of!((*_42));
(*_45) = core::ptr::addr_of!((*_42));
(*_48) = [_50,_50];
_24.fld2 = !_11;
(*_36) = _24.fld3.3 as f32;
(*_42) = !_6;
_35 = [(-139772172663453319613228508609882639328_i128),119335181074168710144852032077706364750_i128,35040491404224982880249482147092256444_i128,46904136150698674700450966623635641926_i128,122453622460879193880511653613321016366_i128,5389138435628009958458990708954854400_i128];
_57.0 = _24.fld3.1 >> _24.fld2;
(*_48) = _46;
_24.fld4 = (_25,);
(*_45) = core::ptr::addr_of!((*_42));
(*_36) = _24.fld5 as f32;
_15 = _53 | _5;
_47.0 = _39;
_55 = ((*_42),);
_18 = _4;
(*_45) = core::ptr::addr_of!((*_42));
(*_48) = [_50,_50];
(*_48) = [_50,_50];
_13 = (*_36) as usize;
Goto(bb47)
}
bb47 = {
(*_48) = [_50,_50];
(*_36) = (*_42) as f32;
_53 = -_5;
(*_48) = [_50,_50];
_24.fld3 = (_31, _57.0, _12, RET);
_46 = (*_48);
_3 = _32 & _40;
(*_45) = core::ptr::addr_of!((*_42));
_24.fld4.0 = (*_42) >= (*_42);
_32 = _53 >> _9;
_47.0 = _39 ^ _39;
(*_36) = _39 as f32;
_18 = _32 + _10;
_58 = (-12629_i16) as u16;
_18 = _24.fld3.2 as isize;
_6 = _55.0 & (*_42);
_55.0 = (*_42) & (*_42);
(*_36) = _14 as f32;
_40 = -_7;
(*_45) = core::ptr::addr_of!((*_42));
(*_36) = _24.fld6 as f32;
(*_42) = _31 as u128;
(*_42) = _55.0 + _6;
_62 = !_8;
match _24.fld7.0 {
0 => bb25,
1246257518 => bb49,
_ => bb48
}
}
bb48 = {
_18 = RET as isize;
_11 = _8 | _7;
_12 = 29687_i16 as u32;
_7 = _11 ^ _4;
_11 = 51938707249172866968282067851405749879_i128 as isize;
_19 = [746956314_i32,1270352233_i32,(-571601203_i32),2029763987_i32,1395397354_i32];
_11 = _3;
_19 = [(-160765250_i32),2064638368_i32,(-981502132_i32),(-1116683577_i32),2106376661_i32];
_18 = -_8;
Call(_13 = fn11(_5), ReturnTo(bb9), UnwindUnreachable())
}
bb49 = {
(*_48) = [_50,_50];
(*_48) = [_50,_50];
(*_42) = _47.0 as u128;
(*_45) = core::ptr::addr_of!((*_42));
(*_42) = !_6;
(*_45) = core::ptr::addr_of!((*_42));
_39 = _47.0;
_41 = _57.0 * _57.0;
_24.fld6 = (-2275907457030114871_i64) * (-4385719080329506433_i64);
_42 = core::ptr::addr_of!((*_42));
(*_36) = _13 as f32;
_40 = _2 + _7;
_37 = (*_42) as isize;
(*_45) = core::ptr::addr_of!((*_42));
_65 = [_24.fld6,_24.fld6];
_43 = (*_42) as u64;
_9 = _55.0;
_68 = -_37;
_12 = !_24.fld3.2;
Goto(bb50)
}
bb50 = {
Call(_72 = dump_var(10_usize, 29_usize, Move(_29), 12_usize, Move(_12), 50_usize, Move(_50), 35_usize, Move(_35)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_72 = dump_var(10_usize, 3_usize, Move(_3), 4_usize, Move(_4), 13_usize, Move(_13), 23_usize, Move(_23)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_72 = dump_var(10_usize, 8_usize, Move(_8), 41_usize, Move(_41), 5_usize, Move(_5), 14_usize, Move(_14)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_72 = dump_var(10_usize, 7_usize, Move(_7), 10_usize, Move(_10), 58_usize, Move(_58), 20_usize, Move(_20)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_72 = dump_var(10_usize, 46_usize, Move(_46), 2_usize, Move(_2), 57_usize, Move(_57), 37_usize, Move(_37)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_72 = dump_var(10_usize, 65_usize, Move(_65), 73_usize, _73, 73_usize, _73, 73_usize, _73), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize) -> usize {
mir! {
type RET = usize;
let _2: bool;
let _3: [i128; 6];
let _4: f32;
let _5: &'static usize;
let _6: f64;
let _7: *mut (i32, *mut [u16; 2], bool, f64);
let _8: char;
let _9: *const (i128, i64);
let _10: isize;
let _11: u128;
let _12: (isize, *const u128);
let _13: *mut (u16, u8);
let _14: (i128, i8, i32, *const u64);
let _15: &'static mut Adt35;
let _16: [u8; 4];
let _17: bool;
let _18: *mut (i32, *mut [u16; 2], bool, f64);
let _19: u64;
let _20: char;
let _21: [i8; 6];
let _22: (isize, *const u128);
let _23: ((u16, u8), *const u128, &'static (i32, *mut [u16; 2], bool, f64), usize);
let _24: [u32; 2];
let _25: (char, &'static usize, i8);
let _26: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _27: (&'static mut (bool,), &'static (i32, *mut [u16; 2], bool, f64), f32);
let _28: &'static i128;
let _29: f64;
let _30: *mut (bool,);
let _31: &'static [i64; 2];
let _32: *const u128;
let _33: f32;
let _34: *const f32;
let _35: &'static mut Adt35;
let _36: i32;
let _37: f32;
let _38: *const (char, u8, u32, f64);
let _39: &'static mut u64;
let _40: f32;
let _41: *mut (u16, u8);
let _42: isize;
let _43: u16;
let _44: *const (char, u8, u32, f64);
let _45: (i32,);
let _46: [u16; 8];
let _47: ();
let _48: ();
{
_1 = 9402158072258265309_usize as isize;
RET = 11353_i16 as usize;
_2 = true;
_2 = RET > RET;
_2 = !false;
_3 = [(-28971674914269924864112334441910221851_i128),77124231135069641555562086548254039555_i128,8062221266853467699790647845713197761_i128,11200482036006365789315836875135127363_i128,118751337596046143056422920027664473058_i128,113564247522015895137880015625022558180_i128];
_1 = -9223372036854775807_isize;
RET = 1_usize * 7_usize;
_1 = !9223372036854775807_isize;
_5 = &RET;
Goto(bb1)
}
bb1 = {
_4 = 6064767575036419070_u64 as f32;
_3 = [(-32067838553624216771009506983120643781_i128),(-42540616428238598478585254596222739609_i128),12722177699968119923289903207855228722_i128,103778600283296390428042221215875624963_i128,(-164611554405763978007105501521791400301_i128),105902807587176782594106180936543616455_i128];
_3 = [(-41738088963917090345791517901226037082_i128),(-32095280823928715726184159569448871047_i128),168419805767454920182793517869339149295_i128,(-150812571231980135357602474545989740762_i128),169697922250832051993212944459568403951_i128,(-129191955535765554308022960077533510584_i128)];
_6 = (-149565475936428400295358355466864012719_i128) as f64;
_2 = !true;
_4 = (-21600_i16) as f32;
_4 = 6591090624922574088_u64 as f32;
_3 = [111200384285406910268171255516370022419_i128,98883130910100004871730358206935565529_i128,2083325782583776297163385788521049570_i128,(-79727828247734065851335754038871148407_i128),48333338769201918933832430730005138370_i128,(-66794820292428084712817076734960953963_i128)];
_3 = [81426783971359402356690790889083513799_i128,62694929208384689279134519638710097859_i128,(-164877904031713005708272824684973874832_i128),126589712332479879675590958016046277520_i128,51874852062683182246507465268524103302_i128,(-83795266982723602806809228873128244381_i128)];
_4 = (-973036923_i32) as f32;
_3 = [146554455004425479689118856643303816153_i128,(-132141250129273843647798200384650614239_i128),(-33573881727096247799995087796750098377_i128),43105364282466575690125798416186708315_i128,(-46432711228992606311949479559185048376_i128),(-106392844288546766038303866621279257103_i128)];
_3 = [(-36275790975034374752512383380996313232_i128),(-129303644895719077955960922025363250594_i128),97090107179659616704296217360215825751_i128,80172180605177721851727388331972397065_i128,(-162969952825032485645701660863735623692_i128),(-104628885999179375456867410224700765794_i128)];
_1 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_8 = '\u{e235a}';
_8 = '\u{41d89}';
Call(_8 = fn12((*_5), Move(_5), (*_5), _3, (*_5), (*_5), _1, (*_5), (*_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = [(-140517383388899062348068358471934584309_i128),60047181599291448044418942623614632569_i128,59134130614520070194698177827642855562_i128,42194406451891301602604847234845660003_i128,130221178152394271121273537191740167427_i128,(-106226762868722604849002670982951880770_i128)];
_5 = &RET;
RET = 70_i8 as usize;
_6 = (-1421683825566131270_i64) as f64;
_10 = _1;
_1 = (-110_i8) as isize;
_4 = 7222_u16 as f32;
_4 = 1030504334_i32 as f32;
Goto(bb3)
}
bb3 = {
_4 = 8759_i16 as f32;
_11 = 216033435432325786803251630496569070091_u128;
_12.0 = !_1;
_10 = !_1;
_12.0 = 9545_u16 as isize;
_12.1 = core::ptr::addr_of!(_11);
_14.1 = (-16_i8);
_11 = 111763284433760159476588623544372409696_u128;
_11 = 238030398955246083169588668012383706967_u128 + 315931959162942740557030741384937320705_u128;
_12.1 = core::ptr::addr_of!(_11);
_14.2 = -756025656_i32;
_1 = _10;
_3 = [(-58885577419937351200351618056681501301_i128),(-130352173198808613862140590959614406130_i128),120258794288160021836888026944461846924_i128,157358859424112782161847904949296136021_i128,94576467636619319770207804825309453446_i128,(-122014552806681019272804060639004638227_i128)];
_10 = 445930258_u32 as isize;
_2 = true;
_14.0 = (-125145341430631683613351537913134810365_i128) | 101745513981129635665810286546300223739_i128;
_4 = _6 as f32;
_8 = '\u{5dcc4}';
match _14.1 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211440 => bb9,
_ => bb8
}
}
bb4 = {
_3 = [(-140517383388899062348068358471934584309_i128),60047181599291448044418942623614632569_i128,59134130614520070194698177827642855562_i128,42194406451891301602604847234845660003_i128,130221178152394271121273537191740167427_i128,(-106226762868722604849002670982951880770_i128)];
_5 = &RET;
RET = 70_i8 as usize;
_6 = (-1421683825566131270_i64) as f64;
_10 = _1;
_1 = (-110_i8) as isize;
_4 = 7222_u16 as f32;
_4 = 1030504334_i32 as f32;
Goto(bb3)
}
bb5 = {
_4 = 6064767575036419070_u64 as f32;
_3 = [(-32067838553624216771009506983120643781_i128),(-42540616428238598478585254596222739609_i128),12722177699968119923289903207855228722_i128,103778600283296390428042221215875624963_i128,(-164611554405763978007105501521791400301_i128),105902807587176782594106180936543616455_i128];
_3 = [(-41738088963917090345791517901226037082_i128),(-32095280823928715726184159569448871047_i128),168419805767454920182793517869339149295_i128,(-150812571231980135357602474545989740762_i128),169697922250832051993212944459568403951_i128,(-129191955535765554308022960077533510584_i128)];
_6 = (-149565475936428400295358355466864012719_i128) as f64;
_2 = !true;
_4 = (-21600_i16) as f32;
_4 = 6591090624922574088_u64 as f32;
_3 = [111200384285406910268171255516370022419_i128,98883130910100004871730358206935565529_i128,2083325782583776297163385788521049570_i128,(-79727828247734065851335754038871148407_i128),48333338769201918933832430730005138370_i128,(-66794820292428084712817076734960953963_i128)];
_3 = [81426783971359402356690790889083513799_i128,62694929208384689279134519638710097859_i128,(-164877904031713005708272824684973874832_i128),126589712332479879675590958016046277520_i128,51874852062683182246507465268524103302_i128,(-83795266982723602806809228873128244381_i128)];
_4 = (-973036923_i32) as f32;
_3 = [146554455004425479689118856643303816153_i128,(-132141250129273843647798200384650614239_i128),(-33573881727096247799995087796750098377_i128),43105364282466575690125798416186708315_i128,(-46432711228992606311949479559185048376_i128),(-106392844288546766038303866621279257103_i128)];
_3 = [(-36275790975034374752512383380996313232_i128),(-129303644895719077955960922025363250594_i128),97090107179659616704296217360215825751_i128,80172180605177721851727388331972397065_i128,(-162969952825032485645701660863735623692_i128),(-104628885999179375456867410224700765794_i128)];
_1 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_8 = '\u{e235a}';
_8 = '\u{41d89}';
Call(_8 = fn12((*_5), Move(_5), (*_5), _3, (*_5), (*_5), _1, (*_5), (*_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_10 = 111_u8 as isize;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_8 = '\u{3d0f4}';
_14.2 = -1687048471_i32;
RET = 5_usize;
_14.1 = 126_i8 & 66_i8;
_16 = [62_u8,184_u8,234_u8,193_u8];
_19 = RET as u64;
_11 = 51622934417784096819449866437702995095_u128 & 19737394764237034630908058565444548792_u128;
_2 = false & true;
_4 = _14.2 as f32;
_14.0 = _14.2 as i128;
_17 = _2 ^ _2;
_10 = _1 << _14.1;
_1 = !_10;
_1 = _10 & _12.0;
_2 = _3[RET] == _3[RET];
RET = !0_usize;
_17 = _12.0 > _1;
_14.3 = core::ptr::addr_of!(_19);
_8 = '\u{3cc56}';
_14.0 = 56726_u16 as i128;
_12.1 = core::ptr::addr_of!(_11);
_12.1 = core::ptr::addr_of!(_11);
Goto(bb10)
}
bb10 = {
_14.2 = 242133911_i32;
_20 = _8;
_1 = _10 - _10;
_2 = _17 | _17;
_12.0 = _11 as isize;
_20 = _8;
_20 = _8;
_22 = (_10, Move(_12.1));
_12.1 = Move(_22.1);
Goto(bb11)
}
bb11 = {
_6 = (-8661_i16) as f64;
_21 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_22.0 = _1 | _1;
_22.1 = core::ptr::addr_of!(_11);
_23.3 = RET;
Goto(bb12)
}
bb12 = {
_23.0.0 = 33665_u16;
_13 = core::ptr::addr_of_mut!(_23.0);
(*_13).1 = 129_u8 >> _11;
(*_13) = (47600_u16, 202_u8);
_16 = [(*_13).1,(*_13).1,(*_13).1,(*_13).1];
(*_13).0 = 10851_u16 >> (*_13).1;
(*_13).0 = !13611_u16;
_22.1 = Move(_12.1);
(*_13) = (14023_u16, 192_u8);
_12.1 = core::ptr::addr_of!(_11);
(*_13).0 = 63336_u16;
_14.0 = (-137451338147791109203233759364474971112_i128) * (-98352928708188828840276823245565245763_i128);
(*_13).0 = 39338_u16;
(*_13).1 = 146_u8 ^ 2_u8;
(*_13).0 = _4 as u16;
_5 = &_23.3;
(*_13) = (52618_u16, 115_u8);
match (*_13).0 {
0 => bb13,
52618 => bb15,
_ => bb14
}
}
bb13 = {
_10 = 111_u8 as isize;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_8 = '\u{3d0f4}';
_14.2 = -1687048471_i32;
RET = 5_usize;
_14.1 = 126_i8 & 66_i8;
_16 = [62_u8,184_u8,234_u8,193_u8];
_19 = RET as u64;
_11 = 51622934417784096819449866437702995095_u128 & 19737394764237034630908058565444548792_u128;
_2 = false & true;
_4 = _14.2 as f32;
_14.0 = _14.2 as i128;
_17 = _2 ^ _2;
_10 = _1 << _14.1;
_1 = !_10;
_1 = _10 & _12.0;
_2 = _3[RET] == _3[RET];
RET = !0_usize;
_17 = _12.0 > _1;
_14.3 = core::ptr::addr_of!(_19);
_8 = '\u{3cc56}';
_14.0 = 56726_u16 as i128;
_12.1 = core::ptr::addr_of!(_11);
_12.1 = core::ptr::addr_of!(_11);
Goto(bb10)
}
bb14 = {
Return()
}
bb15 = {
_1 = _12.0 - _10;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
(*_13).1 = 147_u8 | 210_u8;
_21 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
(*_13).1 = !71_u8;
(*_13).1 = !12_u8;
_23.3 = RET | RET;
(*_13).1 = !152_u8;
(*_13).0 = 41368_u16;
_21 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_22.0 = _1 | _1;
match (*_13).0 {
0 => bb13,
1 => bb7,
2 => bb9,
3 => bb4,
41368 => bb17,
_ => bb16
}
}
bb16 = {
Return()
}
bb17 = {
_16 = [(*_13).1,(*_13).1,(*_13).1,(*_13).1];
(*_13).1 = 49_u8 << (*_13).0;
(*_13).1 = !97_u8;
(*_13).1 = !40_u8;
_14.2 = (-244422827_i32) & (-1696821457_i32);
Goto(bb18)
}
bb18 = {
(*_13).0 = 3025830751_u32 as u16;
(*_13).0 = 6856_u16 | 22152_u16;
(*_13) = (17035_u16, 208_u8);
(*_13).1 = !140_u8;
_4 = 156670216_u32 as f32;
(*_13) = (63753_u16, 200_u8);
(*_13) = (49894_u16, 254_u8);
_25.1 = &RET;
(*_13).1 = 244_u8;
RET = 20427_i16 as usize;
match (*_13).0 {
0 => bb19,
1 => bb20,
2 => bb21,
3 => bb22,
4 => bb23,
5 => bb24,
6 => bb25,
49894 => bb27,
_ => bb26
}
}
bb19 = {
_16 = [(*_13).1,(*_13).1,(*_13).1,(*_13).1];
(*_13).1 = 49_u8 << (*_13).0;
(*_13).1 = !97_u8;
(*_13).1 = !40_u8;
_14.2 = (-244422827_i32) & (-1696821457_i32);
Goto(bb18)
}
bb20 = {
Return()
}
bb21 = {
Return()
}
bb22 = {
_4 = 6064767575036419070_u64 as f32;
_3 = [(-32067838553624216771009506983120643781_i128),(-42540616428238598478585254596222739609_i128),12722177699968119923289903207855228722_i128,103778600283296390428042221215875624963_i128,(-164611554405763978007105501521791400301_i128),105902807587176782594106180936543616455_i128];
_3 = [(-41738088963917090345791517901226037082_i128),(-32095280823928715726184159569448871047_i128),168419805767454920182793517869339149295_i128,(-150812571231980135357602474545989740762_i128),169697922250832051993212944459568403951_i128,(-129191955535765554308022960077533510584_i128)];
_6 = (-149565475936428400295358355466864012719_i128) as f64;
_2 = !true;
_4 = (-21600_i16) as f32;
_4 = 6591090624922574088_u64 as f32;
_3 = [111200384285406910268171255516370022419_i128,98883130910100004871730358206935565529_i128,2083325782583776297163385788521049570_i128,(-79727828247734065851335754038871148407_i128),48333338769201918933832430730005138370_i128,(-66794820292428084712817076734960953963_i128)];
_3 = [81426783971359402356690790889083513799_i128,62694929208384689279134519638710097859_i128,(-164877904031713005708272824684973874832_i128),126589712332479879675590958016046277520_i128,51874852062683182246507465268524103302_i128,(-83795266982723602806809228873128244381_i128)];
_4 = (-973036923_i32) as f32;
_3 = [146554455004425479689118856643303816153_i128,(-132141250129273843647798200384650614239_i128),(-33573881727096247799995087796750098377_i128),43105364282466575690125798416186708315_i128,(-46432711228992606311949479559185048376_i128),(-106392844288546766038303866621279257103_i128)];
_3 = [(-36275790975034374752512383380996313232_i128),(-129303644895719077955960922025363250594_i128),97090107179659616704296217360215825751_i128,80172180605177721851727388331972397065_i128,(-162969952825032485645701660863735623692_i128),(-104628885999179375456867410224700765794_i128)];
_1 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_8 = '\u{e235a}';
_8 = '\u{41d89}';
Call(_8 = fn12((*_5), Move(_5), (*_5), _3, (*_5), (*_5), _1, (*_5), (*_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb23 = {
Return()
}
bb24 = {
_10 = 111_u8 as isize;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_8 = '\u{3d0f4}';
_14.2 = -1687048471_i32;
RET = 5_usize;
_14.1 = 126_i8 & 66_i8;
_16 = [62_u8,184_u8,234_u8,193_u8];
_19 = RET as u64;
_11 = 51622934417784096819449866437702995095_u128 & 19737394764237034630908058565444548792_u128;
_2 = false & true;
_4 = _14.2 as f32;
_14.0 = _14.2 as i128;
_17 = _2 ^ _2;
_10 = _1 << _14.1;
_1 = !_10;
_1 = _10 & _12.0;
_2 = _3[RET] == _3[RET];
RET = !0_usize;
_17 = _12.0 > _1;
_14.3 = core::ptr::addr_of!(_19);
_8 = '\u{3cc56}';
_14.0 = 56726_u16 as i128;
_12.1 = core::ptr::addr_of!(_11);
_12.1 = core::ptr::addr_of!(_11);
Goto(bb10)
}
bb25 = {
_6 = (-8661_i16) as f64;
_21 = [_14.1,_14.1,_14.1,_14.1,_14.1,_14.1];
_22.0 = _1 | _1;
_22.1 = core::ptr::addr_of!(_11);
_23.3 = RET;
Goto(bb12)
}
bb26 = {
Return()
}
bb27 = {
(*_13).1 = 153_u8;
(*_13).1 = (-22505_i16) as u8;
(*_13).0 = !9576_u16;
(*_13) = (59289_u16, 176_u8);
(*_13).0 = 3490_u16 * 56895_u16;
(*_13) = (40644_u16, 240_u8);
_28 = &_14.0;
(*_13).0 = 47803_u16 >> (*_28);
_25 = (_20, Move(_5), _14.1);
(*_13).0 = (-4581103749356201690_i64) as u16;
_24 = [2943548733_u32,3182668608_u32];
_25.2 = _14.1 - _14.1;
(*_13).0 = 50801_u16 & 61532_u16;
_14.0 = (-68049176477226922837133027719826254895_i128);
_11 = !81094980536895074762588106192799561713_u128;
_22.0 = _10 + _12.0;
(*_13).1 = 168_u8 * 114_u8;
_5 = &_23.3;
(*_13).0 = 62924_u16 + 854_u16;
(*_13).1 = 103_u8 - 138_u8;
(*_13).0 = 59933_u16;
Goto(bb28)
}
bb28 = {
(*_13).0 = 24797_u16 * 47959_u16;
(*_13) = (32519_u16, 136_u8);
_12.0 = _1 << (*_13).0;
(*_13).1 = 177_u8 ^ 135_u8;
(*_13).0 = !8659_u16;
(*_13).0 = 20564_u16 - 28549_u16;
(*_13).0 = 25777_u16 + 37785_u16;
(*_13).0 = 42217_u16 | 46429_u16;
(*_13).0 = !40908_u16;
_23.0 = (40988_u16, 112_u8);
match (*_13).0 {
0 => bb29,
1 => bb30,
2 => bb31,
3 => bb32,
4 => bb33,
40988 => bb35,
_ => bb34
}
}
bb29 = {
Return()
}
bb30 = {
_23.0.0 = 33665_u16;
_13 = core::ptr::addr_of_mut!(_23.0);
(*_13).1 = 129_u8 >> _11;
(*_13) = (47600_u16, 202_u8);
_16 = [(*_13).1,(*_13).1,(*_13).1,(*_13).1];
(*_13).0 = 10851_u16 >> (*_13).1;
(*_13).0 = !13611_u16;
_22.1 = Move(_12.1);
(*_13) = (14023_u16, 192_u8);
_12.1 = core::ptr::addr_of!(_11);
(*_13).0 = 63336_u16;
_14.0 = (-137451338147791109203233759364474971112_i128) * (-98352928708188828840276823245565245763_i128);
(*_13).0 = 39338_u16;
(*_13).1 = 146_u8 ^ 2_u8;
(*_13).0 = _4 as u16;
_5 = &_23.3;
(*_13) = (52618_u16, 115_u8);
match (*_13).0 {
0 => bb13,
52618 => bb15,
_ => bb14
}
}
bb31 = {
Return()
}
bb32 = {
_10 = 111_u8 as isize;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_8 = '\u{3d0f4}';
_14.2 = -1687048471_i32;
RET = 5_usize;
_14.1 = 126_i8 & 66_i8;
_16 = [62_u8,184_u8,234_u8,193_u8];
_19 = RET as u64;
_11 = 51622934417784096819449866437702995095_u128 & 19737394764237034630908058565444548792_u128;
_2 = false & true;
_4 = _14.2 as f32;
_14.0 = _14.2 as i128;
_17 = _2 ^ _2;
_10 = _1 << _14.1;
_1 = !_10;
_1 = _10 & _12.0;
_2 = _3[RET] == _3[RET];
RET = !0_usize;
_17 = _12.0 > _1;
_14.3 = core::ptr::addr_of!(_19);
_8 = '\u{3cc56}';
_14.0 = 56726_u16 as i128;
_12.1 = core::ptr::addr_of!(_11);
_12.1 = core::ptr::addr_of!(_11);
Goto(bb10)
}
bb33 = {
_4 = 6064767575036419070_u64 as f32;
_3 = [(-32067838553624216771009506983120643781_i128),(-42540616428238598478585254596222739609_i128),12722177699968119923289903207855228722_i128,103778600283296390428042221215875624963_i128,(-164611554405763978007105501521791400301_i128),105902807587176782594106180936543616455_i128];
_3 = [(-41738088963917090345791517901226037082_i128),(-32095280823928715726184159569448871047_i128),168419805767454920182793517869339149295_i128,(-150812571231980135357602474545989740762_i128),169697922250832051993212944459568403951_i128,(-129191955535765554308022960077533510584_i128)];
_6 = (-149565475936428400295358355466864012719_i128) as f64;
_2 = !true;
_4 = (-21600_i16) as f32;
_4 = 6591090624922574088_u64 as f32;
_3 = [111200384285406910268171255516370022419_i128,98883130910100004871730358206935565529_i128,2083325782583776297163385788521049570_i128,(-79727828247734065851335754038871148407_i128),48333338769201918933832430730005138370_i128,(-66794820292428084712817076734960953963_i128)];
_3 = [81426783971359402356690790889083513799_i128,62694929208384689279134519638710097859_i128,(-164877904031713005708272824684973874832_i128),126589712332479879675590958016046277520_i128,51874852062683182246507465268524103302_i128,(-83795266982723602806809228873128244381_i128)];
_4 = (-973036923_i32) as f32;
_3 = [146554455004425479689118856643303816153_i128,(-132141250129273843647798200384650614239_i128),(-33573881727096247799995087796750098377_i128),43105364282466575690125798416186708315_i128,(-46432711228992606311949479559185048376_i128),(-106392844288546766038303866621279257103_i128)];
_3 = [(-36275790975034374752512383380996313232_i128),(-129303644895719077955960922025363250594_i128),97090107179659616704296217360215825751_i128,80172180605177721851727388331972397065_i128,(-162969952825032485645701660863735623692_i128),(-104628885999179375456867410224700765794_i128)];
_1 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_8 = '\u{e235a}';
_8 = '\u{41d89}';
Call(_8 = fn12((*_5), Move(_5), (*_5), _3, (*_5), (*_5), _1, (*_5), (*_5)), ReturnTo(bb2), UnwindUnreachable())
}
bb34 = {
Return()
}
bb35 = {
(*_13).1 = 166_u8 * 1_u8;
_32 = Move(_22.1);
(*_13).0 = 47341_u16 * 3492_u16;
(*_13).1 = 65_u8 >> (*_5);
(*_13) = (59794_u16, 255_u8);
_22.1 = core::ptr::addr_of!(_11);
(*_13).1 = _8 as u8;
(*_13) = (51396_u16, 178_u8);
(*_13).1 = 201_u8;
(*_13).0 = _4 as u16;
(*_13).1 = 245_u8;
_24 = [2562153925_u32,2380346836_u32];
_12 = (_22.0, Move(_22.1));
(*_13).1 = 216_u8 & 49_u8;
(*_13) = (25335_u16, 220_u8);
_17 = _2;
(*_13).0 = 23538_u16;
(*_13).0 = _11 as u16;
_32 = core::ptr::addr_of!(_11);
(*_13) = (63551_u16, 163_u8);
(*_13).1 = 596_i16 as u8;
(*_13) = (51425_u16, 127_u8);
_2 = (*_13).1 != (*_13).1;
_25 = (_8, Move(_5), _14.1);
_6 = _25.2 as f64;
(*_32) = 39008926530109885069840878597049056542_u128;
(*_13).0 = 21441_u16;
_23.1 = core::ptr::addr_of!((*_32));
match (*_13).0 {
0 => bb14,
1 => bb7,
2 => bb29,
21441 => bb36,
_ => bb27
}
}
bb36 = {
_14.0 = (-154729255307298957526622426465216107083_i128) * (-93774976075801557853878311578428629452_i128);
(*_13).1 = !27_u8;
_10 = _1;
(*_32) = _4 as u128;
_14.3 = core::ptr::addr_of!(_19);
(*_13).1 = 255_u8 + 217_u8;
_14.0 = (-70581214073075467856371575397189435381_i128) << (*_13).0;
(*_13).1 = _1 as u8;
_29 = -_6;
_27.2 = _4 + _4;
(*_13).1 = !47_u8;
_33 = -_27.2;
(*_13).1 = 50_u8 * 8_u8;
(*_13) = (58435_u16, 212_u8);
Goto(bb37)
}
bb37 = {
(*_32) = 35546356517306412431718973960361963888_u128 & 298210437159710069480314127319825578020_u128;
_10 = _12.0 ^ _12.0;
(*_13) = (181_u16, 153_u8);
(*_32) = !326782120364681333696387174381020048159_u128;
(*_13).0 = _1 as u16;
_14.2 = (-1112236026_i32);
(*_32) = 147400684249816315050976183431799704745_u128 | 241478649700151653418900930538301902204_u128;
(*_13).0 = 20417_u16;
_25.2 = _29 as i8;
(*_32) = 87406190747029226704812093337380764439_u128;
_23.3 = RET ^ RET;
(*_13).0 = 8137_u16 & 667_u16;
_39 = &mut _19;
(*_32) = 306323895996450672553535528434374611754_u128 + 159155544212240952219006965154840019018_u128;
(*_13).0 = 28650_u16 << (*_32);
_23.0.0 = !49908_u16;
_37 = _27.2 * _27.2;
(*_39) = 7187018277975462871_u64;
_21 = [_25.2,_14.1,_25.2,_25.2,_14.1,_25.2];
(*_13).0 = 13392_u16;
match (*_13).1 {
0 => bb9,
1 => bb12,
2 => bb32,
3 => bb5,
4 => bb38,
153 => bb40,
_ => bb39
}
}
bb38 = {
Return()
}
bb39 = {
Return()
}
bb40 = {
(*_39) = 11082324636733531935_u64 * 17051697782311021993_u64;
(*_13).0 = 45205_u16;
_34 = core::ptr::addr_of!(_27.2);
(*_13).0 = (-6904903640924056477_i64) as u16;
(*_13) = (22453_u16, 167_u8);
(*_13).0 = !7149_u16;
(*_39) = !5156002046443241818_u64;
(*_34) = -_33;
(*_32) = !48022189113946909500729333300660697963_u128;
(*_13).0 = _14.0 as u16;
_14.2 = -(-843349800_i32);
(*_13) = (34544_u16, 104_u8);
(*_13).1 = 8_u8;
(*_34) = -_37;
(*_13).0 = !24379_u16;
(*_13).1 = !111_u8;
(*_32) = 1126092773_u32 as u128;
(*_32) = 256662513675024740904220769483248210533_u128;
_22 = Move(_12);
(*_32) = 49781525591911402697589184730100804132_u128 >> (*_13).1;
(*_34) = _33 - _4;
(*_13).0 = (-7710847267846646867_i64) as u16;
(*_39) = !11510616021992541712_u64;
Goto(bb41)
}
bb41 = {
(*_39) = !17256720539338254558_u64;
_12 = (_1, Move(_32));
RET = _20 as usize;
(*_13).0 = !46400_u16;
(*_13).0 = _12.0 as u16;
(*_13).0 = !8545_u16;
(*_13).1 = 217_u8;
Goto(bb42)
}
bb42 = {
(*_13).0 = 50171_u16 + 588_u16;
_45 = (_14.2,);
(*_34) = _33;
_25.0 = _8;
(*_13) = (53079_u16, 101_u8);
_42 = _22.0;
match _23.0.0 {
0 => bb43,
1 => bb44,
2 => bb45,
3 => bb46,
4 => bb47,
5 => bb48,
53079 => bb50,
_ => bb49
}
}
bb43 = {
Return()
}
bb44 = {
_16 = [(*_13).1,(*_13).1,(*_13).1,(*_13).1];
(*_13).1 = 49_u8 << (*_13).0;
(*_13).1 = !97_u8;
(*_13).1 = !40_u8;
_14.2 = (-244422827_i32) & (-1696821457_i32);
Goto(bb18)
}
bb45 = {
Return()
}
bb46 = {
Return()
}
bb47 = {
(*_32) = 35546356517306412431718973960361963888_u128 & 298210437159710069480314127319825578020_u128;
_10 = _12.0 ^ _12.0;
(*_13) = (181_u16, 153_u8);
(*_32) = !326782120364681333696387174381020048159_u128;
(*_13).0 = _1 as u16;
_14.2 = (-1112236026_i32);
(*_32) = 147400684249816315050976183431799704745_u128 | 241478649700151653418900930538301902204_u128;
(*_13).0 = 20417_u16;
_25.2 = _29 as i8;
(*_32) = 87406190747029226704812093337380764439_u128;
_23.3 = RET ^ RET;
(*_13).0 = 8137_u16 & 667_u16;
_39 = &mut _19;
(*_32) = 306323895996450672553535528434374611754_u128 + 159155544212240952219006965154840019018_u128;
(*_13).0 = 28650_u16 << (*_32);
_23.0.0 = !49908_u16;
_37 = _27.2 * _27.2;
(*_39) = 7187018277975462871_u64;
_21 = [_25.2,_14.1,_25.2,_25.2,_14.1,_25.2];
(*_13).0 = 13392_u16;
match (*_13).1 {
0 => bb9,
1 => bb12,
2 => bb32,
3 => bb5,
4 => bb38,
153 => bb40,
_ => bb39
}
}
bb48 = {
_10 = 111_u8 as isize;
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_3 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_8 = '\u{3d0f4}';
_14.2 = -1687048471_i32;
RET = 5_usize;
_14.1 = 126_i8 & 66_i8;
_16 = [62_u8,184_u8,234_u8,193_u8];
_19 = RET as u64;
_11 = 51622934417784096819449866437702995095_u128 & 19737394764237034630908058565444548792_u128;
_2 = false & true;
_4 = _14.2 as f32;
_14.0 = _14.2 as i128;
_17 = _2 ^ _2;
_10 = _1 << _14.1;
_1 = !_10;
_1 = _10 & _12.0;
_2 = _3[RET] == _3[RET];
RET = !0_usize;
_17 = _12.0 > _1;
_14.3 = core::ptr::addr_of!(_19);
_8 = '\u{3cc56}';
_14.0 = 56726_u16 as i128;
_12.1 = core::ptr::addr_of!(_11);
_12.1 = core::ptr::addr_of!(_11);
Goto(bb10)
}
bb49 = {
Return()
}
bb50 = {
(*_13).1 = _6 as u8;
Goto(bb51)
}
bb51 = {
Call(_47 = dump_var(11_usize, 42_usize, Move(_42), 11_usize, Move(_11), 24_usize, Move(_24), 10_usize, Move(_10)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_47 = dump_var(11_usize, 16_usize, Move(_16), 19_usize, Move(_19), 45_usize, Move(_45), 48_usize, _48), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: usize,mut _2: &'static usize,mut _3: usize,mut _4: [i128; 6],mut _5: usize,mut _6: usize,mut _7: isize,mut _8: usize,mut _9: usize) -> char {
mir! {
type RET = char;
let _10: (isize, *const u128);
let _11: (char, u8, u32, f64);
let _12: Adt72;
let _13: isize;
let _14: &'static *const i16;
let _15: *mut [u16; 2];
let _16: f32;
let _17: *const u64;
let _18: (isize, *const u128);
let _19: ([i32; 5], u64);
let _20: u64;
let _21: bool;
let _22: bool;
let _23: f32;
let _24: isize;
let _25: f64;
let _26: f32;
let _27: isize;
let _28: *const i16;
let _29: char;
let _30: isize;
let _31: (*const u64, i32, (u16, u8), Adt43);
let _32: &'static mut [u16; 2];
let _33: *mut [u16; 2];
let _34: i8;
let _35: bool;
let _36: [i64; 2];
let _37: i64;
let _38: *mut (i32, *mut [u16; 2], bool, f64);
let _39: i8;
let _40: &'static i128;
let _41: i64;
let _42: isize;
let _43: *const f32;
let _44: f32;
let _45: i128;
let _46: f32;
let _47: *mut (u16, u8);
let _48: char;
let _49: isize;
let _50: (*const u64, i32, (u16, u8), Adt43);
let _51: *mut (bool,);
let _52: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _53: &'static *const i16;
let _54: (*mut [u16; 2], [u16; 2], *const u128, u128);
let _55: *const u64;
let _56: [bool; 2];
let _57: &'static [i64; 2];
let _58: f64;
let _59: u64;
let _60: u64;
let _61: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _62: isize;
let _63: i64;
let _64: (char, u8, u32, f64);
let _65: i128;
let _66: ();
let _67: ();
{
RET = '\u{7d27b}';
_2 = &_6;
_7 = 9223372036854775807_isize + 12_isize;
_5 = (*_2) | _6;
_5 = 9896_u16 as usize;
_10.0 = _7 << _1;
_3 = !_8;
_6 = _3;
_7 = (-2113723875_i32) as isize;
_2 = &_3;
RET = '\u{599bb}';
_11.0 = RET;
_7 = _10.0;
RET = _11.0;
_11.0 = RET;
_11.2 = !3701627337_u32;
_9 = _5 << _11.2;
_11.0 = RET;
_1 = (*_2) >> (*_2);
_10.0 = 15667853318187481669_u64 as isize;
_11.3 = _7 as f64;
RET = _11.0;
_7 = _10.0 - _10.0;
_1 = (*_2) * (*_2);
_11.2 = !1093170699_u32;
_3 = _1 - _5;
_1 = !_6;
Call(_10.1 = fn13(_3, Move(_2), _11.2, _4, _10.0, _8, _7, RET, _11.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6 = _3;
_11.0 = RET;
_11.3 = _3 as f64;
_2 = &_6;
_11.2 = !3264458392_u32;
_10.0 = _7 * _7;
Call(_7 = fn15(_1, Move(_10.1), RET, _5, (*_2), Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb3 = {
_9 = _12.fld0 & _5;
_2 = &_3;
_11.3 = 7763752400045875353_i64 as f64;
_12.fld5 = [129_u16,22016_u16,48992_u16];
_12.fld5 = [927_u16,49054_u16,15425_u16];
_12.fld3 = core::ptr::addr_of!(_16);
_13 = _7;
_12.fld1 = (99580711847725579682819013566313071855_u128,);
_5 = _9 + (*_2);
_16 = (-46_i8) as f32;
_12.fld4 = [true,false];
Goto(bb4)
}
bb4 = {
_12.fld2 = -_11.3;
_11.2 = 362614556_u32 ^ 454159642_u32;
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_10.1 = Move(_18.1);
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_2 = &_8;
_16 = (-77_i8) as f32;
_12.fld0 = (-29957_i16) as usize;
_12.fld3 = core::ptr::addr_of!(_16);
_11 = (RET, 147_u8, 2198873162_u32, _12.fld2);
_2 = &_6;
_11 = (RET, 134_u8, 1877084721_u32, _12.fld2);
_12.fld0 = _5;
_10.0 = _13 & _7;
_10.1 = core::ptr::addr_of!(_12.fld1.0);
_10.1 = core::ptr::addr_of!(_12.fld1.0);
_19.1 = 8679539774600394503_u64 & 1141187352023988739_u64;
_19.0 = [(-2061742588_i32),(-838628872_i32),1496673596_i32,124645997_i32,1234627566_i32];
_10 = (_7, Move(_18.1));
_4 = [(-149814731028182484427006736052138724720_i128),161242922851815894432855382978878092564_i128,(-154283056889204327024678054897022740395_i128),159230447049248818636958418998059984635_i128,(-82470562124557949811506888660514394788_i128),(-135302506760309357020033133785669133631_i128)];
_8 = (*_2) - _5;
_12.fld3 = core::ptr::addr_of!(_16);
RET = _11.0;
_17 = core::ptr::addr_of!(_20);
_18.0 = !_10.0;
(*_17) = (-7075056872821346266_i64) as u64;
Goto(bb5)
}
bb5 = {
(*_17) = _19.1 | _19.1;
_10.0 = _7 & _18.0;
_12.fld0 = _8 >> (*_17);
(*_17) = !_19.1;
(*_17) = _19.1 * _19.1;
_18 = (_7, Move(_10.1));
_21 = true ^ true;
(*_17) = _19.1 << _5;
_11.3 = _12.fld1.0 as f64;
(*_17) = _11.3 as u64;
_20 = _19.1 ^ _19.1;
(*_17) = _19.1 ^ _19.1;
_11.2 = 3482709582_u32;
match _11.1 {
134 => bb6,
_ => bb4
}
}
bb6 = {
_19.1 = (*_17) | (*_17);
_19.0 = [1180707355_i32,1966091305_i32,(-1366751769_i32),147806290_i32,559020278_i32];
_18.0 = _13 + _13;
_10 = Move(_18);
(*_17) = _19.1;
_9 = _12.fld0 | _8;
(*_17) = _19.1 + _19.1;
_8 = (-5165621570898559896_i64) as usize;
_23 = _16 - _16;
(*_17) = !_19.1;
_18.0 = _10.0 ^ _10.0;
_13 = _7 | _7;
_12.fld2 = _11.3 - _11.3;
_11.3 = -_12.fld2;
(*_17) = _19.1;
_9 = !_12.fld0;
_10.0 = _18.0;
_20 = !_19.1;
_13 = _18.0 ^ _7;
_18.1 = Move(_10.1);
Goto(bb7)
}
bb7 = {
_20 = !_19.1;
_23 = _16;
_19.0 = [458001381_i32,(-1228861234_i32),(-1579602499_i32),231786053_i32,(-134456265_i32)];
(*_17) = _19.1;
(*_17) = _19.1 + _19.1;
(*_17) = !_19.1;
_11.0 = RET;
_10.1 = core::ptr::addr_of!(_12.fld1.0);
(*_17) = _19.1 - _19.1;
_20 = _19.1;
_11.2 = 1437088813_u32 & 3164618474_u32;
_12.fld1 = (169360325728131308113666071564306536008_u128,);
_3 = (*_17) as usize;
_12.fld3 = core::ptr::addr_of!(_23);
_25 = _11.3 - _12.fld2;
(*_17) = _19.1 + _19.1;
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_4 = [10937728374754330356046683425149544042_i128,(-115967083967677501495190791900127644654_i128),156086271051805817244544335396989004504_i128,74191111377230711284390939789022824130_i128,(-91516065585946198986633893252437841280_i128),166313804503550094311220769676149076993_i128];
(*_17) = _19.1 + _19.1;
match _11.1 {
0 => bb1,
1 => bb5,
2 => bb4,
3 => bb8,
134 => bb10,
_ => bb9
}
}
bb8 = {
_19.1 = (*_17) | (*_17);
_19.0 = [1180707355_i32,1966091305_i32,(-1366751769_i32),147806290_i32,559020278_i32];
_18.0 = _13 + _13;
_10 = Move(_18);
(*_17) = _19.1;
_9 = _12.fld0 | _8;
(*_17) = _19.1 + _19.1;
_8 = (-5165621570898559896_i64) as usize;
_23 = _16 - _16;
(*_17) = !_19.1;
_18.0 = _10.0 ^ _10.0;
_13 = _7 | _7;
_12.fld2 = _11.3 - _11.3;
_11.3 = -_12.fld2;
(*_17) = _19.1;
_9 = !_12.fld0;
_10.0 = _18.0;
_20 = !_19.1;
_13 = _18.0 ^ _7;
_18.1 = Move(_10.1);
Goto(bb7)
}
bb9 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb10 = {
_22 = !_21;
_21 = !_22;
_11.3 = -_12.fld2;
_24 = _7 | _13;
_19.0 = [(-1824074116_i32),(-2047841187_i32),(-486417320_i32),(-429670738_i32),(-1397090241_i32)];
match _11.1 {
0 => bb3,
1 => bb11,
134 => bb13,
_ => bb12
}
}
bb11 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb12 = {
_6 = _3;
_11.0 = RET;
_11.3 = _3 as f64;
_2 = &_6;
_11.2 = !3264458392_u32;
_10.0 = _7 * _7;
Call(_7 = fn15(_1, Move(_10.1), RET, _5, (*_2), Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_8 = (*_2) << _12.fld0;
_19.1 = !(*_17);
_7 = (*_17) as isize;
_11 = (RET, 34_u8, 2419087673_u32, _12.fld2);
_11 = (RET, 17_u8, 1872221636_u32, _25);
(*_17) = _19.1 - _19.1;
_12.fld0 = _5;
_2 = &_9;
(*_17) = _19.1 - _19.1;
(*_17) = !_19.1;
_17 = core::ptr::addr_of!((*_17));
_20 = _19.1 & _19.1;
_19.0 = [(-1074868073_i32),557660626_i32,(-2039450356_i32),(-1919854881_i32),(-1850787760_i32)];
_17 = core::ptr::addr_of!((*_17));
_27 = (-32537_i16) as isize;
Goto(bb14)
}
bb14 = {
(*_17) = _19.1 + _19.1;
_31.3.fld6 = (-51_i8) as i64;
_31.3.fld3.0 = _11.0;
_11.2 = 254232332_u32;
_11.3 = _12.fld2 + _25;
_16 = (*_2) as f32;
_31.1 = !201400684_i32;
(*_17) = _19.1 ^ _19.1;
_31.3.fld7.0 = !_31.1;
_31.3.fld3.1 = _11.1 % _11.1;
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_31.3.fld4.0 = _11.1 >= _31.3.fld3.1;
_16 = _23 * _23;
(*_17) = !_19.1;
_7 = -_24;
(*_17) = _19.1 << (*_2);
_31.3.fld6 = _23 as i64;
match _12.fld1.0 {
0 => bb15,
1 => bb16,
2 => bb17,
169360325728131308113666071564306536008 => bb19,
_ => bb18
}
}
bb15 = {
_6 = _3;
_11.0 = RET;
_11.3 = _3 as f64;
_2 = &_6;
_11.2 = !3264458392_u32;
_10.0 = _7 * _7;
Call(_7 = fn15(_1, Move(_10.1), RET, _5, (*_2), Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb17 = {
_9 = _12.fld0 & _5;
_2 = &_3;
_11.3 = 7763752400045875353_i64 as f64;
_12.fld5 = [129_u16,22016_u16,48992_u16];
_12.fld5 = [927_u16,49054_u16,15425_u16];
_12.fld3 = core::ptr::addr_of!(_16);
_13 = _7;
_12.fld1 = (99580711847725579682819013566313071855_u128,);
_5 = _9 + (*_2);
_16 = (-46_i8) as f32;
_12.fld4 = [true,false];
Goto(bb4)
}
bb18 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb19 = {
_11.0 = RET;
_25 = _11.3 + _11.3;
_12.fld5 = [57657_u16,21634_u16,23918_u16];
_31.3.fld0 = [_11.0,_11.0,_11.0,RET,RET,RET,_11.0];
_30 = _10.0;
_31.3.fld3.0 = _11.0;
_24 = _11.3 as isize;
_31.3.fld2 = _30 + _10.0;
_31.3.fld3.1 = _11.1;
match _11.1 {
17 => bb21,
_ => bb20
}
}
bb20 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb21 = {
_35 = !_31.3.fld4.0;
_29 = _11.0;
_31.3.fld3 = _11;
_9 = _5 & _5;
_18 = (_10.0, Move(_10.1));
_31.3.fld7.0 = _31.1;
_31.3.fld3.0 = _29;
_27 = -_31.3.fld2;
(*_17) = !_19.1;
_5 = !_1;
(*_17) = _19.1 - _19.1;
_30 = -_13;
(*_17) = _16 as u64;
_31.2.1 = _31.3.fld3.1 >> _9;
(*_17) = _30 as u64;
_36 = [_31.3.fld6,_31.3.fld6];
_31.2.1 = _11.1;
Goto(bb22)
}
bb22 = {
_22 = !_35;
_34 = (-99_i8);
_24 = _7;
_25 = _11.3;
(*_17) = _19.1 << _24;
_30 = _10.0 | _10.0;
_37 = _31.3.fld6;
_31.3.fld3 = (_11.0, _11.1, _11.2, _11.3);
(*_17) = _19.1;
match _11.1 {
0 => bb23,
1 => bb24,
2 => bb25,
17 => bb27,
_ => bb26
}
}
bb23 = {
_9 = _12.fld0 & _5;
_2 = &_3;
_11.3 = 7763752400045875353_i64 as f64;
_12.fld5 = [129_u16,22016_u16,48992_u16];
_12.fld5 = [927_u16,49054_u16,15425_u16];
_12.fld3 = core::ptr::addr_of!(_16);
_13 = _7;
_12.fld1 = (99580711847725579682819013566313071855_u128,);
_5 = _9 + (*_2);
_16 = (-46_i8) as f32;
_12.fld4 = [true,false];
Goto(bb4)
}
bb24 = {
_20 = !_19.1;
_23 = _16;
_19.0 = [458001381_i32,(-1228861234_i32),(-1579602499_i32),231786053_i32,(-134456265_i32)];
(*_17) = _19.1;
(*_17) = _19.1 + _19.1;
(*_17) = !_19.1;
_11.0 = RET;
_10.1 = core::ptr::addr_of!(_12.fld1.0);
(*_17) = _19.1 - _19.1;
_20 = _19.1;
_11.2 = 1437088813_u32 & 3164618474_u32;
_12.fld1 = (169360325728131308113666071564306536008_u128,);
_3 = (*_17) as usize;
_12.fld3 = core::ptr::addr_of!(_23);
_25 = _11.3 - _12.fld2;
(*_17) = _19.1 + _19.1;
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_4 = [10937728374754330356046683425149544042_i128,(-115967083967677501495190791900127644654_i128),156086271051805817244544335396989004504_i128,74191111377230711284390939789022824130_i128,(-91516065585946198986633893252437841280_i128),166313804503550094311220769676149076993_i128];
(*_17) = _19.1 + _19.1;
match _11.1 {
0 => bb1,
1 => bb5,
2 => bb4,
3 => bb8,
134 => bb10,
_ => bb9
}
}
bb25 = {
_12.fld2 = -_11.3;
_11.2 = 362614556_u32 ^ 454159642_u32;
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_10.1 = Move(_18.1);
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_2 = &_8;
_16 = (-77_i8) as f32;
_12.fld0 = (-29957_i16) as usize;
_12.fld3 = core::ptr::addr_of!(_16);
_11 = (RET, 147_u8, 2198873162_u32, _12.fld2);
_2 = &_6;
_11 = (RET, 134_u8, 1877084721_u32, _12.fld2);
_12.fld0 = _5;
_10.0 = _13 & _7;
_10.1 = core::ptr::addr_of!(_12.fld1.0);
_10.1 = core::ptr::addr_of!(_12.fld1.0);
_19.1 = 8679539774600394503_u64 & 1141187352023988739_u64;
_19.0 = [(-2061742588_i32),(-838628872_i32),1496673596_i32,124645997_i32,1234627566_i32];
_10 = (_7, Move(_18.1));
_4 = [(-149814731028182484427006736052138724720_i128),161242922851815894432855382978878092564_i128,(-154283056889204327024678054897022740395_i128),159230447049248818636958418998059984635_i128,(-82470562124557949811506888660514394788_i128),(-135302506760309357020033133785669133631_i128)];
_8 = (*_2) - _5;
_12.fld3 = core::ptr::addr_of!(_16);
RET = _11.0;
_17 = core::ptr::addr_of!(_20);
_18.0 = !_10.0;
(*_17) = (-7075056872821346266_i64) as u64;
Goto(bb5)
}
bb26 = {
_8 = (*_2) << _12.fld0;
_19.1 = !(*_17);
_7 = (*_17) as isize;
_11 = (RET, 34_u8, 2419087673_u32, _12.fld2);
_11 = (RET, 17_u8, 1872221636_u32, _25);
(*_17) = _19.1 - _19.1;
_12.fld0 = _5;
_2 = &_9;
(*_17) = _19.1 - _19.1;
(*_17) = !_19.1;
_17 = core::ptr::addr_of!((*_17));
_20 = _19.1 & _19.1;
_19.0 = [(-1074868073_i32),557660626_i32,(-2039450356_i32),(-1919854881_i32),(-1850787760_i32)];
_17 = core::ptr::addr_of!((*_17));
_27 = (-32537_i16) as isize;
Goto(bb14)
}
bb27 = {
_34 = 33_i8;
_17 = core::ptr::addr_of!((*_17));
(*_17) = _19.1 ^ _19.1;
_36 = [_31.3.fld6,_31.3.fld6];
Goto(bb28)
}
bb28 = {
(*_17) = _19.1 + _19.1;
_11.1 = _31.2.1 >> _9;
_34 = -0_i8;
_31.3.fld2 = _18.0 & _27;
_12.fld4 = [_22,_35];
(*_17) = _19.1;
_31.3.fld5 = (*_17) * (*_17);
_10.1 = core::ptr::addr_of!(_12.fld1.0);
(*_17) = _31.3.fld5 & _19.1;
Call(_31.2.1 = core::intrinsics::bswap(_11.1), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_43 = core::ptr::addr_of!(_16);
_36 = [_31.3.fld6,_31.3.fld6];
_3 = !_5;
(*_17) = _29 as u64;
_31.2.1 = !_11.1;
_3 = !_8;
(*_17) = !_31.3.fld5;
_1 = _3 + _12.fld0;
_10.1 = core::ptr::addr_of!(_12.fld1.0);
_11.2 = _12.fld1.0 as u32;
_12.fld4 = [_22,_35];
(*_43) = _23 * _23;
RET = _31.3.fld3.0;
_12.fld0 = 23969_u16 as usize;
_1 = _12.fld1.0 as usize;
(*_43) = _23 + _23;
_10.0 = -_27;
_17 = core::ptr::addr_of!((*_17));
_31.2.0 = 21338_u16 | 11283_u16;
_1 = _9 << _18.0;
_11.3 = _31.3.fld3.3 + _31.3.fld3.3;
_42 = _30 ^ _7;
(*_43) = _23 * _23;
_12.fld4 = [_31.3.fld4.0,_22];
_18.1 = core::ptr::addr_of!(_12.fld1.0);
_3 = _8 - _1;
match _31.3.fld3.1 {
0 => bb24,
17 => bb30,
_ => bb9
}
}
bb30 = {
(*_17) = _31.3.fld5;
_31.3.fld4.0 = _22;
Call(_3 = core::intrinsics::transmute(_37), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
_31.0 = Move(_17);
(*_43) = _23 + _23;
Goto(bb32)
}
bb32 = {
_39 = _34;
_26 = (*_43);
_31.3.fld7.0 = !_31.1;
_25 = -_11.3;
_27 = _24 | _30;
(*_43) = -_26;
_44 = (*_43);
(*_43) = _44;
(*_43) = _26 - _23;
match _31.3.fld3.2 {
0 => bb19,
1 => bb8,
2 => bb5,
254232332 => bb33,
_ => bb27
}
}
bb33 = {
_12.fld0 = _1 + _9;
_23 = -(*_43);
(*_43) = _26 + _26;
_50.3.fld7.0 = _12.fld0 as i32;
(*_43) = _44 + _23;
(*_43) = _23;
_31.2.1 = (*_43) as u8;
(*_43) = _26 - _44;
_10 = (_24, Move(_18.1));
Call((*_43) = fn16(), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_31.3.fld7.0 = _50.3.fld7.0;
_50.3.fld5 = _31.3.fld5 | _31.3.fld5;
_50.3.fld5 = _31.3.fld5 << _18.0;
_24 = -_42;
(*_43) = _23 + _26;
_18 = (_13, Move(_10.1));
_31.3.fld7 = (_50.3.fld7.0,);
_50.3.fld0 = [_29,_29,RET,_31.3.fld3.0,_31.3.fld3.0,_31.3.fld3.0,_29];
match _31.3.fld3.1 {
0 => bb35,
17 => bb37,
_ => bb36
}
}
bb35 = {
_6 = _3;
_11.0 = RET;
_11.3 = _3 as f64;
_2 = &_6;
_11.2 = !3264458392_u32;
_10.0 = _7 * _7;
Call(_7 = fn15(_1, Move(_10.1), RET, _5, (*_2), Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb36 = {
_19.1 = (*_17) | (*_17);
_19.0 = [1180707355_i32,1966091305_i32,(-1366751769_i32),147806290_i32,559020278_i32];
_18.0 = _13 + _13;
_10 = Move(_18);
(*_17) = _19.1;
_9 = _12.fld0 | _8;
(*_17) = _19.1 + _19.1;
_8 = (-5165621570898559896_i64) as usize;
_23 = _16 - _16;
(*_17) = !_19.1;
_18.0 = _10.0 ^ _10.0;
_13 = _7 | _7;
_12.fld2 = _11.3 - _11.3;
_11.3 = -_12.fld2;
(*_17) = _19.1;
_9 = !_12.fld0;
_10.0 = _18.0;
_20 = !_19.1;
_13 = _18.0 ^ _7;
_18.1 = Move(_10.1);
Goto(bb7)
}
bb37 = {
_50.3.fld3.3 = -_31.3.fld3.3;
_47 = core::ptr::addr_of_mut!(_50.2);
(*_47) = _31.2;
_10.1 = Move(_18.1);
(*_47) = _31.2;
_11 = (RET, (*_47).1, _31.3.fld3.2, _25);
(*_47) = _31.2;
(*_47).1 = _31.2.1;
(*_47).0 = _31.2.0 | _31.2.0;
(*_43) = _44;
_50.2.1 = !_11.1;
_50.3.fld4.0 = _22;
_23 = (*_43) - _16;
(*_47) = (_31.2.0, _31.2.1);
_15 = core::ptr::addr_of_mut!(_54.1);
(*_15) = [(*_47).0,(*_47).0];
_11.2 = _31.3.fld3.2;
_50.3.fld3.2 = _11.2;
(*_43) = _31.3.fld3.2 as f32;
_54.2 = core::ptr::addr_of!(_12.fld1.0);
_52 = core::ptr::addr_of_mut!(_54);
(*_43) = _26;
(*_47).1 = !_31.3.fld3.1;
(*_52).3 = !_12.fld1.0;
(*_15) = [(*_47).0,(*_47).0];
(*_52).2 = core::ptr::addr_of!((*_52).3);
_8 = _1 & _12.fld0;
match _11.2 {
0 => bb30,
1 => bb2,
2 => bb38,
3 => bb39,
4 => bb40,
254232332 => bb42,
_ => bb41
}
}
bb38 = {
_19.1 = (*_17) | (*_17);
_19.0 = [1180707355_i32,1966091305_i32,(-1366751769_i32),147806290_i32,559020278_i32];
_18.0 = _13 + _13;
_10 = Move(_18);
(*_17) = _19.1;
_9 = _12.fld0 | _8;
(*_17) = _19.1 + _19.1;
_8 = (-5165621570898559896_i64) as usize;
_23 = _16 - _16;
(*_17) = !_19.1;
_18.0 = _10.0 ^ _10.0;
_13 = _7 | _7;
_12.fld2 = _11.3 - _11.3;
_11.3 = -_12.fld2;
(*_17) = _19.1;
_9 = !_12.fld0;
_10.0 = _18.0;
_20 = !_19.1;
_13 = _18.0 ^ _7;
_18.1 = Move(_10.1);
Goto(bb7)
}
bb39 = {
_6 = _3;
_11.0 = RET;
_11.3 = _3 as f64;
_2 = &_6;
_11.2 = !3264458392_u32;
_10.0 = _7 * _7;
Call(_7 = fn15(_1, Move(_10.1), RET, _5, (*_2), Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb40 = {
_19.1 = (*_17) | (*_17);
_19.0 = [1180707355_i32,1966091305_i32,(-1366751769_i32),147806290_i32,559020278_i32];
_18.0 = _13 + _13;
_10 = Move(_18);
(*_17) = _19.1;
_9 = _12.fld0 | _8;
(*_17) = _19.1 + _19.1;
_8 = (-5165621570898559896_i64) as usize;
_23 = _16 - _16;
(*_17) = !_19.1;
_18.0 = _10.0 ^ _10.0;
_13 = _7 | _7;
_12.fld2 = _11.3 - _11.3;
_11.3 = -_12.fld2;
(*_17) = _19.1;
_9 = !_12.fld0;
_10.0 = _18.0;
_20 = !_19.1;
_13 = _18.0 ^ _7;
_18.1 = Move(_10.1);
Goto(bb7)
}
bb41 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb42 = {
_21 = _50.3.fld7.0 > _31.3.fld7.0;
(*_47) = _31.2;
Goto(bb43)
}
bb43 = {
_10 = (_27, Move((*_52).2));
RET = _31.3.fld3.0;
(*_52).0 = core::ptr::addr_of_mut!((*_15));
(*_15) = [(*_47).0,(*_47).0];
_54.3 = !_12.fld1.0;
Goto(bb44)
}
bb44 = {
(*_47).0 = 23559_i16 as u16;
(*_52).2 = core::ptr::addr_of!((*_52).3);
_50.1 = _31.3.fld7.0;
_55 = core::ptr::addr_of!(_20);
_25 = _50.3.fld3.3;
_36 = [_31.3.fld6,_37];
(*_15) = [(*_47).0,(*_47).0];
(*_52).0 = core::ptr::addr_of_mut!((*_15));
(*_47) = (_31.2.0, _31.3.fld3.1);
(*_52).2 = core::ptr::addr_of!((*_52).3);
_17 = core::ptr::addr_of!((*_55));
_50.3.fld1 = [_11.2,_50.3.fld3.2,_11.2,_50.3.fld3.2,_11.2];
_31.2.0 = (*_47).0 & (*_47).0;
_42 = _10.0 | _18.0;
_1 = _9 * _8;
_31.3.fld7 = _50.3.fld7;
(*_52).0 = core::ptr::addr_of_mut!((*_15));
(*_55) = _50.3.fld5 + _50.3.fld5;
(*_52).0 = core::ptr::addr_of_mut!((*_15));
(*_52).0 = core::ptr::addr_of_mut!((*_15));
(*_15) = [_50.2.0,(*_47).0];
match (*_47).1 {
0 => bb1,
1 => bb31,
2 => bb27,
3 => bb4,
4 => bb5,
5 => bb36,
6 => bb45,
17 => bb47,
_ => bb46
}
}
bb45 = {
_9 = _6 + _3;
_12.fld1.0 = 317675578990783093258324350144677721249_u128;
_9 = _3 | _3;
RET = _11.0;
_13 = _7;
_1 = 12802721482646718576_u64 as usize;
_1 = !_6;
_12.fld5 = [55937_u16,48671_u16,43893_u16];
_1 = _9 | _3;
_11.1 = 97_u8 * 163_u8;
_5 = !_1;
_12.fld4 = [true,false];
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld3 = core::ptr::addr_of!(_16);
_12.fld1 = (258507573691906778940997723599299652902_u128,);
_11.0 = RET;
_13 = _7;
_9 = _1 >> _7;
RET = _11.0;
_10.0 = _13;
_7 = _13 | _13;
_5 = _9 | _9;
_16 = (-104_i8) as f32;
_12.fld0 = _9;
_5 = _1 << _9;
_11.3 = (-109_i8) as f64;
Goto(bb3)
}
bb46 = {
_35 = !_31.3.fld4.0;
_29 = _11.0;
_31.3.fld3 = _11;
_9 = _5 & _5;
_18 = (_10.0, Move(_10.1));
_31.3.fld7.0 = _31.1;
_31.3.fld3.0 = _29;
_27 = -_31.3.fld2;
(*_17) = !_19.1;
_5 = !_1;
(*_17) = _19.1 - _19.1;
_30 = -_13;
(*_17) = _16 as u64;
_31.2.1 = _31.3.fld3.1 >> _9;
(*_17) = _30 as u64;
_36 = [_31.3.fld6,_31.3.fld6];
_31.2.1 = _11.1;
Goto(bb22)
}
bb47 = {
(*_52).0 = core::ptr::addr_of_mut!((*_15));
_17 = core::ptr::addr_of!((*_55));
(*_52).3 = _12.fld1.0;
(*_43) = _44 * _44;
(*_47).0 = (*_55) as u16;
_23 = (*_43);
_25 = -_31.3.fld3.3;
(*_47) = _31.2;
(*_52).2 = core::ptr::addr_of!((*_52).3);
(*_47) = _31.2;
(*_47).1 = _11.1 << (*_17);
Goto(bb48)
}
bb48 = {
(*_47).1 = _22 as u8;
(*_52).2 = core::ptr::addr_of!((*_52).3);
Goto(bb49)
}
bb49 = {
_12.fld2 = _50.3.fld3.3 - _31.3.fld3.3;
_50.3.fld3.0 = RET;
(*_47).0 = _31.2.0 * _31.2.0;
(*_17) = _31.3.fld7.0 as u64;
_4 = [106100332978490473147231526420889615203_i128,(-82706839084502526160038054396865922857_i128),64480332796560302656289655502047776446_i128,115310750193465523450408526174860813676_i128,118301752055159228556074271088701895391_i128,127109302578717326083624303423031797034_i128];
_33 = core::ptr::addr_of_mut!((*_15));
(*_52).3 = !_12.fld1.0;
(*_43) = 13610_i16 as f32;
(*_52).2 = core::ptr::addr_of!((*_52).3);
(*_52).2 = core::ptr::addr_of!((*_52).3);
_31.0 = core::ptr::addr_of!((*_55));
(*_43) = -_44;
(*_43) = _26 - _26;
_57 = &_36;
_64.3 = _25;
_26 = _31.3.fld2 as f32;
Goto(bb50)
}
bb50 = {
Call(_66 = dump_var(12_usize, 13_usize, Move(_13), 7_usize, Move(_7), 8_usize, Move(_8), 9_usize, Move(_9)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_66 = dump_var(12_usize, 19_usize, Move(_19), 5_usize, Move(_5), 34_usize, Move(_34), 27_usize, Move(_27)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_66 = dump_var(12_usize, 3_usize, Move(_3), 21_usize, Move(_21), 22_usize, Move(_22), 67_usize, _67), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: usize,mut _2: &'static usize,mut _3: u32,mut _4: [i128; 6],mut _5: isize,mut _6: usize,mut _7: isize,mut _8: char,mut _9: u32) -> *const u128 {
mir! {
type RET = *const u128;
let _10: bool;
let _11: i32;
let _12: (char, &'static usize, i8);
let _13: *const u128;
let _14: *const f32;
let _15: u16;
let _16: *mut (bool,);
let _17: f32;
let _18: i64;
let _19: u16;
let _20: isize;
let _21: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _22: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _23: *const (char, u8, u32, f64);
let _24: u16;
let _25: f64;
let _26: &'static *const i16;
let _27: *mut (u16, u8);
let _28: i8;
let _29: *const u128;
let _30: f64;
let _31: [i8; 8];
let _32: f64;
let _33: u128;
let _34: [u16; 8];
let _35: *const i16;
let _36: bool;
let _37: &'static &'static mut u64;
let _38: isize;
let _39: [i128; 6];
let _40: isize;
let _41: u16;
let _42: f64;
let _43: &'static &'static mut u64;
let _44: i128;
let _45: [u32; 7];
let _46: bool;
let _47: char;
let _48: f64;
let _49: u32;
let _50: isize;
let _51: [i8; 8];
let _52: [i8; 4];
let _53: *const *const u128;
let _54: f32;
let _55: &'static (i32, *mut [u16; 2], bool, f64);
let _56: u128;
let _57: bool;
let _58: [u8; 4];
let _59: ();
let _60: ();
{
_5 = _7 | _7;
_9 = _3 + _3;
_6 = !_1;
_4 = [60534274065149791063311356693164477722_i128,99618512050241359033930527995045030719_i128,92518137174236854719694995772752422164_i128,114622975437698858588198640643997283759_i128,(-137628077772363133615926090965504569187_i128),(-86803174570319646555987719504335874642_i128)];
_2 = &_1;
_1 = !_6;
_7 = _5 & _5;
_10 = false | true;
_10 = _1 > _6;
_8 = '\u{31766}';
_7 = -_5;
_6 = _1 << _7;
_6 = _1 - _1;
_1 = _6 >> _6;
_6 = _1;
Goto(bb1)
}
bb1 = {
_4 = [(-118340016169966242230026919876207250886_i128),10066750634794316888466868784668309041_i128,(-53279912310659056145486465203287463541_i128),(-107754639559645924798639992133341427308_i128),(-101511553652134685091009940858596139696_i128),(-87694945640166571358822223744575134793_i128)];
_3 = _9 | _9;
_4 = [133248124338040546058823038878886725378_i128,(-146580630682005655443981139914347880532_i128),(-55364388804603811939826055926982645700_i128),(-3167709152314747933263615483951498391_i128),(-117673291620324224942546868099700128662_i128),(-2776905925925650328773926347183573912_i128)];
_12.0 = _8;
_12.2 = -87_i8;
_1 = 125_u8 as usize;
_7 = _5 - _5;
_8 = _12.0;
_2 = &_6;
_3 = !_9;
_10 = true;
_11 = 1992679683_i32 | (-1357097441_i32);
Goto(bb2)
}
bb2 = {
_12 = (_8, Move(_2), (-52_i8));
_12.2 = 15305911228254828484_u64 as i8;
_12.1 = &_6;
_5 = _7 - _7;
_9 = _8 as u32;
Goto(bb3)
}
bb3 = {
_2 = &_6;
_4 = [110132146976853280889555200088844002637_i128,(-53149017607938307800560091593326406024_i128),(-151374914353208330322745781140049277862_i128),(-1928068226175886575400273406043813886_i128),(-115900212472470502958810675220894108077_i128),(-14306122478982308928780610254195388556_i128)];
_12.0 = _8;
_5 = _7;
_7 = _5 * _5;
_12.2 = (-9_i8) + 64_i8;
_12.1 = Move(_2);
_3 = _9 + _9;
_10 = !true;
_2 = &_6;
_4 = [136430861696110774682900362101148703158_i128,(-45385498562355999918636380513746190722_i128),(-82611083325634906934601019016847980303_i128),(-145590054615221492478997617438019322667_i128),(-131499831232760772743428650553288713865_i128),(-131488378930549334221064224107199982183_i128)];
_4 = [(-77777002266441057877748914466018116916_i128),(-154826056766124745517396495033755345155_i128),(-1719077027191414003345286540529060946_i128),(-82137862649047878793802930486456615763_i128),(-158583326565010155608449394168241152192_i128),(-87376514862362299813043142237856540429_i128)];
_15 = 26544_u16 - 46654_u16;
_12 = (_8, Move(_2), (-44_i8));
_2 = &_1;
_11 = 155901708_i32 + 1399476048_i32;
_2 = &_6;
_6 = !_1;
_12.0 = _8;
_1 = _3 as usize;
_12.2 = 55_i8;
Goto(bb4)
}
bb4 = {
_17 = _11 as f32;
_2 = &_1;
_17 = (-4050056771144980891_i64) as f32;
_14 = core::ptr::addr_of!(_17);
_12.1 = &(*_2);
(*_14) = 10468849958008301218_u64 as f32;
(*_14) = 10127955932894707768_u64 as f32;
_12.2 = 14_i8 | 4_i8;
_7 = _12.2 as isize;
(*_14) = _5 as f32;
(*_14) = 248_u8 as f32;
_15 = 48698_u16;
_7 = _5;
(*_14) = 116653718444854462855583129743046162205_u128 as f32;
(*_14) = 43652918803616062707933239813800218126_u128 as f32;
(*_14) = (-11134_i16) as f32;
_8 = _12.0;
_3 = _9;
_6 = _12.2 as usize;
_11 = (-1499418172_i32) << (*_2);
_6 = (-8698_i16) as usize;
_6 = !_1;
match _15 {
0 => bb1,
1 => bb3,
48698 => bb6,
_ => bb5
}
}
bb5 = {
_2 = &_6;
_4 = [110132146976853280889555200088844002637_i128,(-53149017607938307800560091593326406024_i128),(-151374914353208330322745781140049277862_i128),(-1928068226175886575400273406043813886_i128),(-115900212472470502958810675220894108077_i128),(-14306122478982308928780610254195388556_i128)];
_12.0 = _8;
_5 = _7;
_7 = _5 * _5;
_12.2 = (-9_i8) + 64_i8;
_12.1 = Move(_2);
_3 = _9 + _9;
_10 = !true;
_2 = &_6;
_4 = [136430861696110774682900362101148703158_i128,(-45385498562355999918636380513746190722_i128),(-82611083325634906934601019016847980303_i128),(-145590054615221492478997617438019322667_i128),(-131499831232760772743428650553288713865_i128),(-131488378930549334221064224107199982183_i128)];
_4 = [(-77777002266441057877748914466018116916_i128),(-154826056766124745517396495033755345155_i128),(-1719077027191414003345286540529060946_i128),(-82137862649047878793802930486456615763_i128),(-158583326565010155608449394168241152192_i128),(-87376514862362299813043142237856540429_i128)];
_15 = 26544_u16 - 46654_u16;
_12 = (_8, Move(_2), (-44_i8));
_2 = &_1;
_11 = 155901708_i32 + 1399476048_i32;
_2 = &_6;
_6 = !_1;
_12.0 = _8;
_1 = _3 as usize;
_12.2 = 55_i8;
Goto(bb4)
}
bb6 = {
(*_14) = 7903136510457891790213553017888268077_i128 as f32;
(*_14) = _12.2 as f32;
(*_14) = 2631207014426585831_u64 as f32;
(*_14) = (-4855_i16) as f32;
(*_14) = 117433332515445547434857472412080483896_u128 as f32;
(*_14) = 318378532476540835_u64 as f32;
(*_14) = 202491892041443132236595873892192657461_u128 as f32;
_8 = _12.0;
_3 = !_9;
(*_14) = _5 as f32;
_11 = 1028304560_i32 | 300022743_i32;
(*_14) = 36385223160539480070218218302010045968_u128 as f32;
(*_14) = (-29859_i16) as f32;
(*_14) = 6789_i16 as f32;
_17 = 4234368239684271704_u64 as f32;
(*_14) = 112743154434287070505977807219361377336_i128 as f32;
(*_14) = _12.2 as f32;
(*_14) = 11980219751139611394_u64 as f32;
(*_14) = 8705996176105820959_i64 as f32;
_18 = (-2573359972813319138_i64) * 7345605364224264088_i64;
_12 = (_8, Move(_2), (-93_i8));
(*_14) = 167346890688852695246702029129235337822_i128 as f32;
(*_14) = _18 as f32;
_9 = !_3;
(*_14) = _18 as f32;
match _12.2 {
0 => bb3,
1 => bb7,
340282366920938463463374607431768211363 => bb9,
_ => bb8
}
}
bb7 = {
_4 = [(-118340016169966242230026919876207250886_i128),10066750634794316888466868784668309041_i128,(-53279912310659056145486465203287463541_i128),(-107754639559645924798639992133341427308_i128),(-101511553652134685091009940858596139696_i128),(-87694945640166571358822223744575134793_i128)];
_3 = _9 | _9;
_4 = [133248124338040546058823038878886725378_i128,(-146580630682005655443981139914347880532_i128),(-55364388804603811939826055926982645700_i128),(-3167709152314747933263615483951498391_i128),(-117673291620324224942546868099700128662_i128),(-2776905925925650328773926347183573912_i128)];
_12.0 = _8;
_12.2 = -87_i8;
_1 = 125_u8 as usize;
_7 = _5 - _5;
_8 = _12.0;
_2 = &_6;
_3 = !_9;
_10 = true;
_11 = 1992679683_i32 | (-1357097441_i32);
Goto(bb2)
}
bb8 = {
_17 = _11 as f32;
_2 = &_1;
_17 = (-4050056771144980891_i64) as f32;
_14 = core::ptr::addr_of!(_17);
_12.1 = &(*_2);
(*_14) = 10468849958008301218_u64 as f32;
(*_14) = 10127955932894707768_u64 as f32;
_12.2 = 14_i8 | 4_i8;
_7 = _12.2 as isize;
(*_14) = _5 as f32;
(*_14) = 248_u8 as f32;
_15 = 48698_u16;
_7 = _5;
(*_14) = 116653718444854462855583129743046162205_u128 as f32;
(*_14) = 43652918803616062707933239813800218126_u128 as f32;
(*_14) = (-11134_i16) as f32;
_8 = _12.0;
_3 = _9;
_6 = _12.2 as usize;
_11 = (-1499418172_i32) << (*_2);
_6 = (-8698_i16) as usize;
_6 = !_1;
match _15 {
0 => bb1,
1 => bb3,
48698 => bb6,
_ => bb5
}
}
bb9 = {
_12.0 = _8;
_19 = _15 - _15;
(*_14) = _12.2 as f32;
_14 = core::ptr::addr_of!(_17);
(*_14) = _18 as f32;
_19 = !_15;
_2 = &_1;
_14 = core::ptr::addr_of!(_17);
_18 = 8401722275245660767_i64;
(*_14) = _11 as f32;
_11 = (-369492347_i32) + 928272389_i32;
Call((*_14) = fn14((*_2), (*_2), Move(_14), _11, (*_2), (*_2)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
(*_13) = !196934941264460541816286409172445343538_u128;
(*_13) = 9158_i16 as u128;
(*_14) = 9250999570770907763_u64 as f32;
RET = Move(_29);
(*_13) = (*_2) as u128;
(*_14) = (*_2) as f32;
(*_14) = _28 as f32;
_30 = _18 as f64;
_11 = (-323817263_i32);
(*_13) = _19 as u128;
_36 = !_10;
_12.1 = Move(_2);
(*_13) = 122562651721656217863757199321527603008_u128;
_1 = _6 - _6;
_17 = _9 as f32;
_2 = &_1;
(*_13) = 219419241868642637327298483082731327889_u128 >> _7;
match _18 {
0 => bb12,
1 => bb13,
8401722275245660767 => bb15,
_ => bb14
}
}
bb12 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb13 = {
_4 = [(-118340016169966242230026919876207250886_i128),10066750634794316888466868784668309041_i128,(-53279912310659056145486465203287463541_i128),(-107754639559645924798639992133341427308_i128),(-101511553652134685091009940858596139696_i128),(-87694945640166571358822223744575134793_i128)];
_3 = _9 | _9;
_4 = [133248124338040546058823038878886725378_i128,(-146580630682005655443981139914347880532_i128),(-55364388804603811939826055926982645700_i128),(-3167709152314747933263615483951498391_i128),(-117673291620324224942546868099700128662_i128),(-2776905925925650328773926347183573912_i128)];
_12.0 = _8;
_12.2 = -87_i8;
_1 = 125_u8 as usize;
_7 = _5 - _5;
_8 = _12.0;
_2 = &_6;
_3 = !_9;
_10 = true;
_11 = 1992679683_i32 | (-1357097441_i32);
Goto(bb2)
}
bb14 = {
_17 = _11 as f32;
_2 = &_1;
_17 = (-4050056771144980891_i64) as f32;
_14 = core::ptr::addr_of!(_17);
_12.1 = &(*_2);
(*_14) = 10468849958008301218_u64 as f32;
(*_14) = 10127955932894707768_u64 as f32;
_12.2 = 14_i8 | 4_i8;
_7 = _12.2 as isize;
(*_14) = _5 as f32;
(*_14) = 248_u8 as f32;
_15 = 48698_u16;
_7 = _5;
(*_14) = 116653718444854462855583129743046162205_u128 as f32;
(*_14) = 43652918803616062707933239813800218126_u128 as f32;
(*_14) = (-11134_i16) as f32;
_8 = _12.0;
_3 = _9;
_6 = _12.2 as usize;
_11 = (-1499418172_i32) << (*_2);
_6 = (-8698_i16) as usize;
_6 = !_1;
match _15 {
0 => bb1,
1 => bb3,
48698 => bb6,
_ => bb5
}
}
bb15 = {
(*_14) = _24 as f32;
_29 = core::ptr::addr_of!((*_13));
(*_13) = 216913934271145672592580075811815366505_u128 * 324706654408115755278087477450271804039_u128;
(*_14) = _12.2 as f32;
_31 = [_12.2,_28,_12.2,_28,_12.2,_28,_28,_12.2];
_15 = 65_u8 as u16;
_18 = (*_13) as i64;
_31 = [_12.2,_12.2,_12.2,_12.2,_28,_12.2,_28,_12.2];
(*_13) = 312417698506238306099634201946024706805_u128 | 95065941778826809155180759927306781356_u128;
_17 = 134_u8 as f32;
(*_13) = 75987359081916627800658310693621318568_u128;
(*_13) = 17448015725832485062_u64 as u128;
_13 = core::ptr::addr_of!((*_13));
_28 = -_12.2;
(*_13) = _12.2 as u128;
(*_14) = 6036_i16 as f32;
_32 = _30 + _30;
Goto(bb16)
}
bb16 = {
_25 = _32 - _30;
(*_14) = (*_13) as f32;
(*_13) = 171688937310733031275867818724682471583_u128;
_12.1 = &(*_2);
(*_14) = _5 as f32;
(*_14) = (*_13) as f32;
RET = core::ptr::addr_of!((*_13));
match (*RET) {
0 => bb14,
171688937310733031275867818724682471583 => bb17,
_ => bb6
}
}
bb17 = {
_8 = _12.0;
(*_14) = _3 as f32;
_25 = -_32;
_2 = &_6;
(*RET) = 87725709128739688762620809461348822883_u128;
_38 = -_20;
Goto(bb18)
}
bb18 = {
(*_13) = _7 as u128;
_42 = _32;
_40 = _7 + _7;
(*_14) = (*_13) as f32;
(*_14) = _12.2 as f32;
match _11 {
0 => bb14,
1 => bb19,
2 => bb20,
3 => bb21,
340282366920938463463374607431444394193 => bb23,
_ => bb22
}
}
bb19 = {
_2 = &_6;
_4 = [110132146976853280889555200088844002637_i128,(-53149017607938307800560091593326406024_i128),(-151374914353208330322745781140049277862_i128),(-1928068226175886575400273406043813886_i128),(-115900212472470502958810675220894108077_i128),(-14306122478982308928780610254195388556_i128)];
_12.0 = _8;
_5 = _7;
_7 = _5 * _5;
_12.2 = (-9_i8) + 64_i8;
_12.1 = Move(_2);
_3 = _9 + _9;
_10 = !true;
_2 = &_6;
_4 = [136430861696110774682900362101148703158_i128,(-45385498562355999918636380513746190722_i128),(-82611083325634906934601019016847980303_i128),(-145590054615221492478997617438019322667_i128),(-131499831232760772743428650553288713865_i128),(-131488378930549334221064224107199982183_i128)];
_4 = [(-77777002266441057877748914466018116916_i128),(-154826056766124745517396495033755345155_i128),(-1719077027191414003345286540529060946_i128),(-82137862649047878793802930486456615763_i128),(-158583326565010155608449394168241152192_i128),(-87376514862362299813043142237856540429_i128)];
_15 = 26544_u16 - 46654_u16;
_12 = (_8, Move(_2), (-44_i8));
_2 = &_1;
_11 = 155901708_i32 + 1399476048_i32;
_2 = &_6;
_6 = !_1;
_12.0 = _8;
_1 = _3 as usize;
_12.2 = 55_i8;
Goto(bb4)
}
bb20 = {
_12 = (_8, Move(_2), (-52_i8));
_12.2 = 15305911228254828484_u64 as i8;
_12.1 = &_6;
_5 = _7 - _7;
_9 = _8 as u32;
Goto(bb3)
}
bb21 = {
(*_14) = _24 as f32;
_29 = core::ptr::addr_of!((*_13));
(*_13) = 216913934271145672592580075811815366505_u128 * 324706654408115755278087477450271804039_u128;
(*_14) = _12.2 as f32;
_31 = [_12.2,_28,_12.2,_28,_12.2,_28,_28,_12.2];
_15 = 65_u8 as u16;
_18 = (*_13) as i64;
_31 = [_12.2,_12.2,_12.2,_12.2,_28,_12.2,_28,_12.2];
(*_13) = 312417698506238306099634201946024706805_u128 | 95065941778826809155180759927306781356_u128;
_17 = 134_u8 as f32;
(*_13) = 75987359081916627800658310693621318568_u128;
(*_13) = 17448015725832485062_u64 as u128;
_13 = core::ptr::addr_of!((*_13));
_28 = -_12.2;
(*_13) = _12.2 as u128;
(*_14) = 6036_i16 as f32;
_32 = _30 + _30;
Goto(bb16)
}
bb22 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb23 = {
_36 = _10;
(*_13) = 153096852555741102656329017834390801763_u128 & 211786345586761961957831954105021652663_u128;
(*_13) = !260574978209000349720169523878579334600_u128;
(*_13) = 98_u8 as u128;
_38 = _40 >> (*_2);
(*_14) = 16497787425019808596_u64 as f32;
(*_14) = _9 as f32;
_24 = _8 as u16;
_28 = _12.2;
(*_14) = 11717503872098635245_u64 as f32;
(*_14) = (*_2) as f32;
_19 = _15 ^ _15;
_11 = 1275851401_i32;
_39 = [(-106681992776369286431731060451687049156_i128),61976306132920410650338925823490129856_i128,90230673353856918400867699067927591446_i128,8888690184984842240102726210922945607_i128,37583392810860340781072698053168543421_i128,16100212455995514582181758145868710611_i128];
_40 = _7;
_14 = core::ptr::addr_of!(_17);
(*_14) = 90_u8 as f32;
_7 = _40 << (*_2);
_30 = -_25;
_33 = 33782168365237037332785066593561992044_u128;
_33 = 20816004944983202718139413254976714998_u128 & 311400499632138961553738315183765989889_u128;
(*_13) = 82889183308146458804646773207672292531_u128 & 161104632300099194591883321523485940105_u128;
_44 = 145943184547178566590123874370681499833_i128;
Goto(bb24)
}
bb24 = {
_18 = !8717122168933640299_i64;
_24 = _19 << _1;
_32 = -_30;
_18 = 934937459697932564_i64 << (*_13);
_15 = _24 | _24;
Goto(bb25)
}
bb25 = {
_29 = core::ptr::addr_of!((*_13));
_42 = _25;
(*_14) = (*_2) as f32;
(*_29) = 25110197874691071535683211459309902515_u128 << (*_2);
(*_13) = 85030752130040640525233184922130204924_u128 - 230550116909872123127575959926259521342_u128;
_14 = core::ptr::addr_of!((*_14));
(*_14) = _44 as f32;
_41 = _15 << _1;
_48 = _32;
(*_14) = _3 as f32;
(*_14) = 119738754289123467_u64 as f32;
_11 = (-1241692512_i32) ^ 793635553_i32;
match _44 {
0 => bb26,
1 => bb27,
2 => bb28,
3 => bb29,
4 => bb30,
145943184547178566590123874370681499833 => bb32,
_ => bb31
}
}
bb26 = {
_4 = [(-118340016169966242230026919876207250886_i128),10066750634794316888466868784668309041_i128,(-53279912310659056145486465203287463541_i128),(-107754639559645924798639992133341427308_i128),(-101511553652134685091009940858596139696_i128),(-87694945640166571358822223744575134793_i128)];
_3 = _9 | _9;
_4 = [133248124338040546058823038878886725378_i128,(-146580630682005655443981139914347880532_i128),(-55364388804603811939826055926982645700_i128),(-3167709152314747933263615483951498391_i128),(-117673291620324224942546868099700128662_i128),(-2776905925925650328773926347183573912_i128)];
_12.0 = _8;
_12.2 = -87_i8;
_1 = 125_u8 as usize;
_7 = _5 - _5;
_8 = _12.0;
_2 = &_6;
_3 = !_9;
_10 = true;
_11 = 1992679683_i32 | (-1357097441_i32);
Goto(bb2)
}
bb27 = {
_4 = [(-118340016169966242230026919876207250886_i128),10066750634794316888466868784668309041_i128,(-53279912310659056145486465203287463541_i128),(-107754639559645924798639992133341427308_i128),(-101511553652134685091009940858596139696_i128),(-87694945640166571358822223744575134793_i128)];
_3 = _9 | _9;
_4 = [133248124338040546058823038878886725378_i128,(-146580630682005655443981139914347880532_i128),(-55364388804603811939826055926982645700_i128),(-3167709152314747933263615483951498391_i128),(-117673291620324224942546868099700128662_i128),(-2776905925925650328773926347183573912_i128)];
_12.0 = _8;
_12.2 = -87_i8;
_1 = 125_u8 as usize;
_7 = _5 - _5;
_8 = _12.0;
_2 = &_6;
_3 = !_9;
_10 = true;
_11 = 1992679683_i32 | (-1357097441_i32);
Goto(bb2)
}
bb28 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb29 = {
(*_14) = _24 as f32;
_29 = core::ptr::addr_of!((*_13));
(*_13) = 216913934271145672592580075811815366505_u128 * 324706654408115755278087477450271804039_u128;
(*_14) = _12.2 as f32;
_31 = [_12.2,_28,_12.2,_28,_12.2,_28,_28,_12.2];
_15 = 65_u8 as u16;
_18 = (*_13) as i64;
_31 = [_12.2,_12.2,_12.2,_12.2,_28,_12.2,_28,_12.2];
(*_13) = 312417698506238306099634201946024706805_u128 | 95065941778826809155180759927306781356_u128;
_17 = 134_u8 as f32;
(*_13) = 75987359081916627800658310693621318568_u128;
(*_13) = 17448015725832485062_u64 as u128;
_13 = core::ptr::addr_of!((*_13));
_28 = -_12.2;
(*_13) = _12.2 as u128;
(*_14) = 6036_i16 as f32;
_32 = _30 + _30;
Goto(bb16)
}
bb30 = {
(*_13) = _7 as u128;
_42 = _32;
_40 = _7 + _7;
(*_14) = (*_13) as f32;
(*_14) = _12.2 as f32;
match _11 {
0 => bb14,
1 => bb19,
2 => bb20,
3 => bb21,
340282366920938463463374607431444394193 => bb23,
_ => bb22
}
}
bb31 = {
_25 = _32 - _30;
(*_14) = (*_13) as f32;
(*_13) = 171688937310733031275867818724682471583_u128;
_12.1 = &(*_2);
(*_14) = _5 as f32;
(*_14) = (*_13) as f32;
RET = core::ptr::addr_of!((*_13));
match (*RET) {
0 => bb14,
171688937310733031275867818724682471583 => bb17,
_ => bb6
}
}
bb32 = {
(*_14) = _42 as f32;
(*_14) = _11 as f32;
_2 = &_1;
_47 = _8;
(*_14) = (*_13) as f32;
_25 = _40 as f64;
_3 = _44 as u32;
_8 = _12.0;
_14 = core::ptr::addr_of!((*_14));
(*_13) = _38 as u128;
_17 = _41 as f32;
(*_13) = 63951482385447720191262007273269307000_u128 & 103775058288949442208938957396960660600_u128;
_30 = -_25;
(*_14) = _18 as f32;
(*_14) = _11 as f32;
_11 = _9 as i32;
_49 = _3;
(*_14) = 107_u8 as f32;
_51 = [_28,_12.2,_12.2,_12.2,_28,_12.2,_28,_12.2];
_49 = _9 >> (*_13);
_40 = _44 as isize;
(*_14) = _9 as f32;
_50 = _38 * _38;
_6 = _18 as usize;
_3 = _49 | _49;
Goto(bb33)
}
bb33 = {
(*_14) = (*_13) as f32;
(*_14) = (*_13) as f32;
(*_14) = _44 as f32;
_47 = _8;
match _44 {
0 => bb20,
1 => bb5,
2 => bb9,
145943184547178566590123874370681499833 => bb35,
_ => bb34
}
}
bb34 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb35 = {
_6 = !(*_2);
_13 = core::ptr::addr_of!((*_13));
(*_14) = _50 as f32;
_53 = core::ptr::addr_of!(_13);
_53 = core::ptr::addr_of!((*_53));
(*_53) = Move(RET);
(*_53) = core::ptr::addr_of!(_33);
(*_53) = core::ptr::addr_of!((*_13));
(*_14) = _1 as f32;
_7 = _50 >> (*_2);
_17 = 4191_i16 as f32;
(*_13) = 325909397720081595693614395744800117911_u128 * 94114892396054096652568771995632881978_u128;
_1 = _6 << _38;
_12 = (_8, Move(_2), _28);
(*_53) = core::ptr::addr_of!((*_13));
(*_53) = core::ptr::addr_of!((*_13));
(*_53) = Move(_29);
_33 = 17545621524073832369658334717728442325_u128 << _50;
_31 = _51;
_31 = [_12.2,_28,_28,_12.2,_28,_28,_28,_28];
_25 = _11 as f64;
_19 = _15 | _41;
Goto(bb36)
}
bb36 = {
(*_53) = core::ptr::addr_of!(_33);
_18 = 1189400672482269860_i64 | 4026624047480448130_i64;
(*_13) = 290094590510567770716360443486912733226_u128 ^ 247352779819461533817978727228001960917_u128;
_52 = [_28,_12.2,_12.2,_28];
(*_53) = core::ptr::addr_of!((*_13));
(*_13) = !2900628886965481092947686057302688342_u128;
RET = Move((*_53));
_25 = 4124702405929769790_u64 as f64;
match _44 {
0 => bb20,
1 => bb30,
2 => bb9,
3 => bb16,
4 => bb37,
145943184547178566590123874370681499833 => bb39,
_ => bb38
}
}
bb37 = {
_28 = _12.2;
_4 = [(-51240158092805094481941922467145003320_i128),63031216714701728611125547577064573129_i128,(-117202636598148986748237848538971240642_i128),(-146821372377813420634387995373427105431_i128),155892189357355755474726336903761963655_i128,(-21512173538407411166409152052792852267_i128)];
_1 = _6 * _6;
_24 = _19 + _19;
_12.1 = &_6;
_4 = [(-95691444703127123888234794456635654766_i128),47651877004935238223027302784098168834_i128,(-90164974003044549561933965128597051597_i128),(-60914489340035660153337561999801668824_i128),(-51433508213635242268180693988100764603_i128),(-157707673745316241618148161632949987470_i128)];
_2 = &_6;
_20 = !_5;
_12.0 = _8;
_7 = _20 & _5;
_24 = _15 * _19;
_14 = core::ptr::addr_of!(_17);
_31 = [_12.2,_28,_28,_28,_28,_28,_28,_12.2];
_14 = core::ptr::addr_of!((*_14));
_29 = core::ptr::addr_of!(_33);
(*_14) = 87148740510540690021588871009459535127_u128 as f32;
_12.0 = _8;
_13 = core::ptr::addr_of!((*_29));
Call(_12.2 = core::intrinsics::bswap(_28), ReturnTo(bb11), UnwindUnreachable())
}
bb38 = {
(*_14) = 7903136510457891790213553017888268077_i128 as f32;
(*_14) = _12.2 as f32;
(*_14) = 2631207014426585831_u64 as f32;
(*_14) = (-4855_i16) as f32;
(*_14) = 117433332515445547434857472412080483896_u128 as f32;
(*_14) = 318378532476540835_u64 as f32;
(*_14) = 202491892041443132236595873892192657461_u128 as f32;
_8 = _12.0;
_3 = !_9;
(*_14) = _5 as f32;
_11 = 1028304560_i32 | 300022743_i32;
(*_14) = 36385223160539480070218218302010045968_u128 as f32;
(*_14) = (-29859_i16) as f32;
(*_14) = 6789_i16 as f32;
_17 = 4234368239684271704_u64 as f32;
(*_14) = 112743154434287070505977807219361377336_i128 as f32;
(*_14) = _12.2 as f32;
(*_14) = 11980219751139611394_u64 as f32;
(*_14) = 8705996176105820959_i64 as f32;
_18 = (-2573359972813319138_i64) * 7345605364224264088_i64;
_12 = (_8, Move(_2), (-93_i8));
(*_14) = 167346890688852695246702029129235337822_i128 as f32;
(*_14) = _18 as f32;
_9 = !_3;
(*_14) = _18 as f32;
match _12.2 {
0 => bb3,
1 => bb7,
340282366920938463463374607431768211363 => bb9,
_ => bb8
}
}
bb39 = {
_25 = _44 as f64;
_4 = [_44,_44,_44,_44,_44,_44];
(*_53) = Move(RET);
(*_14) = 9136270362768161291_u64 as f32;
_45 = [_3,_3,_3,_3,_49,_3,_3];
_2 = &_1;
(*_14) = _30 as f32;
_29 = core::ptr::addr_of!(_33);
_34 = [_19,_24,_41,_19,_19,_19,_19,_15];
_32 = -_30;
(*_29) = !160239820432401827565611683159839566319_u128;
(*_53) = core::ptr::addr_of!((*_29));
(*_53) = core::ptr::addr_of!((*_13));
(*_29) = !232968695478167174906258419513029448592_u128;
(*_14) = (*_29) as f32;
_11 = (-1507784479_i32);
(*_14) = 74_u8 as f32;
(*_53) = core::ptr::addr_of!((*_29));
(*_13) = 176782450070858330930145755130230049040_u128 - 185910427321763242160045679782592331897_u128;
(*_13) = (*_2) as u128;
(*_53) = Move(_29);
match _44 {
0 => bb22,
1 => bb7,
145943184547178566590123874370681499833 => bb41,
_ => bb40
}
}
bb40 = {
(*_14) = _24 as f32;
_29 = core::ptr::addr_of!((*_13));
(*_13) = 216913934271145672592580075811815366505_u128 * 324706654408115755278087477450271804039_u128;
(*_14) = _12.2 as f32;
_31 = [_12.2,_28,_12.2,_28,_12.2,_28,_28,_12.2];
_15 = 65_u8 as u16;
_18 = (*_13) as i64;
_31 = [_12.2,_12.2,_12.2,_12.2,_28,_12.2,_28,_12.2];
(*_13) = 312417698506238306099634201946024706805_u128 | 95065941778826809155180759927306781356_u128;
_17 = 134_u8 as f32;
(*_13) = 75987359081916627800658310693621318568_u128;
(*_13) = 17448015725832485062_u64 as u128;
_13 = core::ptr::addr_of!((*_13));
_28 = -_12.2;
(*_13) = _12.2 as u128;
(*_14) = 6036_i16 as f32;
_32 = _30 + _30;
Goto(bb16)
}
bb41 = {
_12.1 = &(*_2);
(*_53) = core::ptr::addr_of!(_56);
(*_13) = _10 as u128;
(*_53) = core::ptr::addr_of!((*_13));
(*_14) = _30 as f32;
(*_13) = !_33;
_12 = (_47, Move(_2), _28);
(*_14) = _7 as f32;
(*_53) = core::ptr::addr_of!((*_13));
(*_13) = _19 as u128;
_14 = core::ptr::addr_of!((*_14));
_12.2 = _28;
(*_14) = _6 as f32;
(*_14) = _28 as f32;
_57 = !_36;
_14 = core::ptr::addr_of!((*_14));
_12.0 = _47;
(*_13) = _33 ^ _33;
_12.2 = _18 as i8;
(*_53) = core::ptr::addr_of!((*_13));
_46 = !_36;
(*_13) = _33 | _33;
_44 = -(-114369942404804569524248300823694275352_i128);
(*_53) = core::ptr::addr_of!((*_13));
RET = core::ptr::addr_of!(_33);
Goto(bb42)
}
bb42 = {
Call(_59 = dump_var(13_usize, 45_usize, Move(_45), 36_usize, Move(_36), 18_usize, Move(_18), 57_usize, Move(_57)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
Call(_59 = dump_var(13_usize, 56_usize, Move(_56), 41_usize, Move(_41), 34_usize, Move(_34), 52_usize, Move(_52)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_59 = dump_var(13_usize, 39_usize, Move(_39), 19_usize, Move(_19), 49_usize, Move(_49), 8_usize, Move(_8)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_59 = dump_var(13_usize, 3_usize, Move(_3), 50_usize, Move(_50), 44_usize, Move(_44), 9_usize, Move(_9)), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Call(_59 = dump_var(13_usize, 5_usize, Move(_5), 60_usize, _60, 60_usize, _60, 60_usize, _60), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: usize,mut _2: usize,mut _3: *const f32,mut _4: i32,mut _5: usize,mut _6: usize) -> f32 {
mir! {
type RET = f32;
let _7: (char, &'static usize, i8);
let _8: [u32; 2];
let _9: (char, &'static usize, i8);
let _10: *mut (i32, *mut [u16; 2], bool, f64);
let _11: *mut (i32, *mut [u16; 2], bool, f64);
let _12: &'static mut Adt35;
let _13: isize;
let _14: (*const u64, i32, (u16, u8), Adt43);
let _15: (bool,);
let _16: [i32; 5];
let _17: (i32,);
let _18: *mut [u16; 2];
let _19: &'static mut u64;
let _20: Adt72;
let _21: [u32; 5];
let _22: bool;
let _23: [bool; 2];
let _24: isize;
let _25: f64;
let _26: u64;
let _27: [u32; 2];
let _28: *const i16;
let _29: &'static *const i16;
let _30: isize;
let _31: bool;
let _32: *const f32;
let _33: &'static (i32, *mut [u16; 2], bool, f64);
let _34: *const (char, u8, u32, f64);
let _35: char;
let _36: &'static mut (bool,);
let _37: [char; 7];
let _38: *mut [u16; 2];
let _39: Adt35;
let _40: (*mut [u16; 2], [u16; 2], *const u128, u128);
let _41: [isize; 5];
let _42: u128;
let _43: isize;
let _44: isize;
let _45: f32;
let _46: usize;
let _47: ();
let _48: ();
{
_6 = !_2;
_6 = _1 ^ _1;
RET = 3490408903065985622_u64 as f32;
_6 = _1 - _2;
RET = 1029_u16 as f32;
_1 = _6 - _6;
_4 = 131423713619587103954747287318510131044_u128 as i32;
_5 = _2;
_7.0 = '\u{71348}';
RET = _4 as f32;
_7.1 = &_2;
_2 = _1 & _1;
_9.0 = _7.0;
RET = 9670075019212812222_u64 as f32;
_9 = (_7.0, Move(_7.1), (-24_i8));
_5 = _2 * _2;
_5 = !_2;
_7.1 = &_2;
_7.1 = &_1;
_8 = [2139788277_u32,1641461902_u32];
_9.0 = _7.0;
_9 = (_7.0, Move(_7.1), (-21_i8));
_7.1 = &_2;
match _9.2 {
340282366920938463463374607431768211435 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_9 = (_7.0, Move(_7.1), 60_i8);
_7.1 = &_5;
_9.1 = &_2;
_13 = !(-9223372036854775808_isize);
_7.2 = _9.2;
_14.3.fld7 = (_4,);
RET = 2038199519_u32 as f32;
_14.2.1 = 163_u8 + 62_u8;
_14.3.fld3.0 = _7.0;
_4 = _14.3.fld7.0;
_14.3.fld7.0 = !_4;
_7.2 = _9.2 * _9.2;
_14.3.fld7.0 = _4;
_6 = !_5;
_14.3.fld3.2 = 2411403566_u32 * 2477077189_u32;
_14.2.1 = !42_u8;
_14.3.fld5 = 16239700922641019162_u64 >> _7.2;
_14.3.fld7 = (_4,);
Goto(bb3)
}
bb3 = {
_17 = _14.3.fld7;
_14.3.fld3.1 = _14.2.1;
_14.2.0 = _7.2 as u16;
_14.3.fld5 = !1703341969633845633_u64;
match _9.2 {
0 => bb1,
1 => bb2,
60 => bb5,
_ => bb4
}
}
bb4 = {
Return()
}
bb5 = {
_14.3.fld7 = (_17.0,);
_20.fld4 = [true,false];
_1 = _2;
_14.3.fld7.0 = -_4;
_9.0 = _14.3.fld3.0;
_7 = (_14.3.fld3.0, Move(_9.1), _9.2);
_9.1 = &_1;
_20.fld1 = (193203130213170066869373172600105419666_u128,);
_14.3.fld6 = (-8221175833196650437_i64) + (-3156818276709506263_i64);
_20.fld3 = Move(_3);
_20.fld5 = [_14.2.0,_14.2.0,_14.2.0];
_20.fld0 = (-94541754404498596999615551471522862288_i128) as usize;
_22 = true & false;
_14.0 = core::ptr::addr_of!(_26);
_14.3.fld4.0 = _14.2.0 > _14.2.0;
_19 = &mut _14.3.fld5;
_26 = (*_19) & (*_19);
(*_19) = _26 * _26;
_20.fld2 = 2792463420_u32 as f64;
(*_19) = _26 + _26;
(*_19) = _26;
_15.0 = _1 <= _2;
match _7.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
60 => bb10,
_ => bb9
}
}
bb6 = {
Return()
}
bb7 = {
_17 = _14.3.fld7;
_14.3.fld3.1 = _14.2.1;
_14.2.0 = _7.2 as u16;
_14.3.fld5 = !1703341969633845633_u64;
match _9.2 {
0 => bb1,
1 => bb2,
60 => bb5,
_ => bb4
}
}
bb8 = {
_9 = (_7.0, Move(_7.1), 60_i8);
_7.1 = &_5;
_9.1 = &_2;
_13 = !(-9223372036854775808_isize);
_7.2 = _9.2;
_14.3.fld7 = (_4,);
RET = 2038199519_u32 as f32;
_14.2.1 = 163_u8 + 62_u8;
_14.3.fld3.0 = _7.0;
_4 = _14.3.fld7.0;
_14.3.fld7.0 = !_4;
_7.2 = _9.2 * _9.2;
_14.3.fld7.0 = _4;
_6 = !_5;
_14.3.fld3.2 = 2411403566_u32 * 2477077189_u32;
_14.2.1 = !42_u8;
_14.3.fld5 = 16239700922641019162_u64 >> _7.2;
_14.3.fld7 = (_4,);
Goto(bb3)
}
bb9 = {
Return()
}
bb10 = {
_2 = _1 + _1;
_7.1 = Move(_9.1);
(*_19) = _26;
(*_19) = _26 * _26;
_20.fld1 = (228732612240530160945196487976710373960_u128,);
_24 = _13 ^ _13;
(*_19) = _26;
_25 = _20.fld2;
RET = _25 as f32;
(*_19) = _26;
_20.fld1 = (29752044874295570188151125840122688454_u128,);
_3 = core::ptr::addr_of!(RET);
_15.0 = _22 | _22;
_1 = _6 & _2;
(*_3) = _25 as f32;
_24 = _13;
match _9.2 {
0 => bb5,
1 => bb2,
2 => bb7,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
60 => bb16,
_ => bb15
}
}
bb11 = {
Return()
}
bb12 = {
_9 = (_7.0, Move(_7.1), 60_i8);
_7.1 = &_5;
_9.1 = &_2;
_13 = !(-9223372036854775808_isize);
_7.2 = _9.2;
_14.3.fld7 = (_4,);
RET = 2038199519_u32 as f32;
_14.2.1 = 163_u8 + 62_u8;
_14.3.fld3.0 = _7.0;
_4 = _14.3.fld7.0;
_14.3.fld7.0 = !_4;
_7.2 = _9.2 * _9.2;
_14.3.fld7.0 = _4;
_6 = !_5;
_14.3.fld3.2 = 2411403566_u32 * 2477077189_u32;
_14.2.1 = !42_u8;
_14.3.fld5 = 16239700922641019162_u64 >> _7.2;
_14.3.fld7 = (_4,);
Goto(bb3)
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_17 = _14.3.fld7;
_14.3.fld3.1 = _14.2.1;
_14.2.0 = _7.2 as u16;
_14.3.fld5 = !1703341969633845633_u64;
match _9.2 {
0 => bb1,
1 => bb2,
60 => bb5,
_ => bb4
}
}
bb16 = {
(*_19) = !_26;
(*_19) = _26;
_16 = [_4,_17.0,_17.0,_17.0,_4];
_7.0 = _9.0;
RET = _20.fld1.0 as f32;
(*_19) = !_26;
(*_3) = 33085_u16 as f32;
(*_19) = _1 as u64;
(*_19) = !_26;
_27 = [1903175759_u32,2552992292_u32];
(*_19) = _26;
_27 = [2686983860_u32,7093605_u32];
_27 = [3877725267_u32,3053270629_u32];
(*_19) = _26 << _9.2;
(*_3) = _20.fld2 as f32;
(*_19) = _26 ^ _26;
(*_19) = !_26;
_23 = [_22,_15.0];
(*_3) = 24592_u16 as f32;
Goto(bb17)
}
bb17 = {
RET = _20.fld1.0 as f32;
(*_3) = _7.2 as f32;
_15.0 = (*_3) <= (*_3);
_40.1 = [39786_u16,3378_u16];
_20.fld0 = _5 * _1;
(*_19) = _9.0 as u64;
(*_19) = !_26;
_8 = [911971545_u32,465265430_u32];
(*_3) = 2413231140_u32 as f32;
_20.fld1 = (47499316594092338823246789218478492749_u128,);
(*_3) = 15500_u16 as f32;
(*_19) = !_26;
(*_19) = _26;
(*_3) = _9.2 as f32;
(*_3) = 145_u8 as f32;
(*_19) = _26 << _20.fld0;
(*_3) = _24 as f32;
_9.2 = _7.2 & _7.2;
(*_3) = (*_19) as f32;
Goto(bb18)
}
bb18 = {
Call(_47 = dump_var(14_usize, 13_usize, Move(_13), 23_usize, Move(_23), 15_usize, Move(_15), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_47 = dump_var(14_usize, 27_usize, Move(_27), 8_usize, Move(_8), 1_usize, Move(_1), 48_usize, _48), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: usize,mut _2: *const u128,mut _3: char,mut _4: usize,mut _5: usize,mut _6: &'static usize) -> isize {
mir! {
type RET = isize;
let _7: &'static usize;
let _8: [i32; 5];
let _9: &'static &'static mut u64;
let _10: &'static mut [u16; 2];
let _11: bool;
let _12: *const u64;
let _13: &'static *const i16;
let _14: *const *const u128;
let _15: *mut (u16, u8);
let _16: *const (char, u8, u32, f64);
let _17: i32;
let _18: isize;
let _19: u8;
let _20: (u16, u8);
let _21: &'static usize;
let _22: &'static mut [u16; 2];
let _23: isize;
let _24: isize;
let _25: *const (char, u8, u32, f64);
let _26: *mut [u16; 2];
let _27: &'static mut Adt35;
let _28: [u16; 3];
let _29: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _30: char;
let _31: [i32; 5];
let _32: u128;
let _33: i16;
let _34: [bool; 2];
let _35: *const (i128, i64);
let _36: Adt43;
let _37: &'static usize;
let _38: f64;
let _39: f64;
let _40: &'static mut (bool,);
let _41: *mut (bool,);
let _42: bool;
let _43: isize;
let _44: &'static (i32, *mut [u16; 2], bool, f64);
let _45: &'static mut Adt35;
let _46: isize;
let _47: bool;
let _48: f64;
let _49: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _50: Adt69;
let _51: &'static (i32, *mut [u16; 2], bool, f64);
let _52: char;
let _53: f64;
let _54: Adt35;
let _55: [i16; 5];
let _56: f64;
let _57: ((u16, u8), *const u128, &'static (i32, *mut [u16; 2], bool, f64), usize);
let _58: &'static usize;
let _59: i128;
let _60: Adt69;
let _61: *const *const u128;
let _62: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _63: [u16; 8];
let _64: u16;
let _65: Adt45;
let _66: &'static *const i16;
let _67: Adt35;
let _68: (i128, i64);
let _69: Adt35;
let _70: &'static *const i16;
let _71: usize;
let _72: ();
let _73: ();
{
RET = (-33_isize);
_7 = &_1;
_4 = _1 * (*_7);
_5 = 252_u8 as usize;
_5 = !(*_7);
_8 = [1857467495_i32,1252059678_i32,111214655_i32,(-273978307_i32),499738664_i32];
_3 = '\u{32281}';
_8 = [(-1114750492_i32),(-1468629847_i32),1608876453_i32,(-2036084808_i32),869452382_i32];
_7 = &_4;
_5 = 21205_i16 as usize;
RET = (-9223372036854775808_isize) | 9223372036854775807_isize;
_11 = !true;
Goto(bb1)
}
bb1 = {
_1 = !(*_7);
_5 = !_4;
_11 = false & false;
_7 = &_5;
_8 = [1953449491_i32,(-1253838329_i32),(-464891764_i32),1438229098_i32,1463027334_i32];
_1 = (*_7) ^ (*_7);
_8 = [546772975_i32,1159961064_i32,(-1888504892_i32),(-572992382_i32),(-1092642699_i32)];
_14 = core::ptr::addr_of!(_2);
_8 = [614269974_i32,686946269_i32,(-1505681385_i32),(-36474730_i32),(-1604651057_i32)];
_4 = (*_7) << (*_7);
_8 = [374365029_i32,875948035_i32,1189475536_i32,40805959_i32,(-766456608_i32)];
_1 = _11 as usize;
_11 = false;
_6 = Move(_7);
Goto(bb2)
}
bb2 = {
_8 = [(-178343074_i32),(-908385262_i32),611686506_i32,(-443690902_i32),1065581397_i32];
_7 = &_4;
RET = 82_isize >> (*_7);
_3 = '\u{c7039}';
RET = !9223372036854775807_isize;
_7 = &_1;
_14 = core::ptr::addr_of!((*_14));
_17 = (-182331290_i32);
_11 = !false;
match _17 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431585880166 => bb9,
_ => bb8
}
}
bb3 = {
_1 = !(*_7);
_5 = !_4;
_11 = false & false;
_7 = &_5;
_8 = [1953449491_i32,(-1253838329_i32),(-464891764_i32),1438229098_i32,1463027334_i32];
_1 = (*_7) ^ (*_7);
_8 = [546772975_i32,1159961064_i32,(-1888504892_i32),(-572992382_i32),(-1092642699_i32)];
_14 = core::ptr::addr_of!(_2);
_8 = [614269974_i32,686946269_i32,(-1505681385_i32),(-36474730_i32),(-1604651057_i32)];
_4 = (*_7) << (*_7);
_8 = [374365029_i32,875948035_i32,1189475536_i32,40805959_i32,(-766456608_i32)];
_1 = _11 as usize;
_11 = false;
_6 = Move(_7);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = '\u{b070e}';
_19 = 179_u8 ^ 41_u8;
RET = 9223372036854775807_isize >> (*_7);
_20 = (6029_u16, _19);
_8 = [_17,_17,_17,_17,_17];
_5 = (*_7);
_5 = _4 | (*_7);
_20.1 = _19 | _19;
_18 = _17 as isize;
_11 = false | true;
_20.1 = 16544059491161883510128016097106861739_i128 as u8;
_8 = [_17,_17,_17,_17,_17];
_15 = core::ptr::addr_of_mut!(_20);
match (*_15).0 {
6029 => bb10,
_ => bb8
}
}
bb10 = {
_24 = RET | _18;
(*_15) = (9375_u16, _19);
(*_15).0 = 8802_u16 * 36350_u16;
(*_15).1 = _19;
(*_15).0 = !48147_u16;
(*_15).0 = !24874_u16;
(*_15) = (3511_u16, _19);
(*_15).1 = _19 & _19;
_23 = RET - _24;
(*_15).0 = !67_u16;
(*_15).0 = 61895_u16 ^ 34442_u16;
(*_15).0 = 55507_u16;
(*_15).0 = 45490_u16 | 45069_u16;
_14 = core::ptr::addr_of!((*_14));
(*_15).0 = 45853_u16 - 10298_u16;
(*_15).1 = !_19;
(*_15).0 = 9662_u16;
_3 = '\u{35a42}';
_20.1 = _19 << (*_7);
(*_15) = (18871_u16, _19);
(*_15).1 = _19 | _19;
(*_15).0 = !60509_u16;
(*_15).0 = !55537_u16;
_18 = RET;
_18 = _23;
(*_15) = (57289_u16, _19);
(*_15).1 = _17 as u8;
Goto(bb11)
}
bb11 = {
(*_15) = (63023_u16, _19);
(*_15) = (15427_u16, _19);
(*_15).1 = (*_7) as u8;
(*_15).0 = (-83752837558113069399765131358725914431_i128) as u16;
(*_15).1 = _19;
(*_15) = (19908_u16, _19);
(*_15).1 = !_19;
(*_15) = (5514_u16, _19);
(*_15).0 = 29310_u16;
(*_15).0 = 48526_u16;
(*_15).0 = 10031_u16;
_15 = core::ptr::addr_of_mut!((*_15));
RET = 1590608667_u32 as isize;
_19 = (*_15).1 & (*_15).1;
_18 = !_23;
(*_15).1 = _24 as u8;
_8 = [_17,_17,_17,_17,_17];
_4 = 1335221792_u32 as usize;
_18 = _24;
(*_14) = core::ptr::addr_of!(_32);
(*_2) = !58907591835275705796906716737909266392_u128;
(*_15).0 = (*_2) as u16;
(*_15).1 = _19 - _19;
(*_15).1 = _19;
(*_15).1 = _19;
_33 = !(-7926_i16);
match _17 {
0 => bb3,
1 => bb2,
2 => bb12,
340282366920938463463374607431585880166 => bb14,
_ => bb13
}
}
bb12 = {
Return()
}
bb13 = {
_8 = [(-178343074_i32),(-908385262_i32),611686506_i32,(-443690902_i32),1065581397_i32];
_7 = &_4;
RET = 82_isize >> (*_7);
_3 = '\u{c7039}';
RET = !9223372036854775807_isize;
_7 = &_1;
_14 = core::ptr::addr_of!((*_14));
_17 = (-182331290_i32);
_11 = !false;
match _17 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431585880166 => bb9,
_ => bb8
}
}
bb14 = {
(*_2) = 172368245616075120237481285766759123015_u128 & 334731522083622565093353268918670613418_u128;
(*_2) = (*_7) as u128;
(*_15).1 = !_19;
(*_15).1 = _32 as u8;
Goto(bb15)
}
bb15 = {
(*_15).0 = 46293_u16;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15).1 = _19 | _19;
(*_15) = (55041_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15) = (10237_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_15).0 = 20171_u16 & 61407_u16;
_36.fld7.0 = _17 ^ _17;
(*_2) = _11 as u128;
_20 = (31857_u16, _19);
_36.fld4 = (_11,);
(*_15).0 = !42914_u16;
match _17 {
0 => bb13,
340282366920938463463374607431585880166 => bb16,
_ => bb12
}
}
bb16 = {
(*_15) = (27697_u16, _19);
(*_15).1 = !_19;
(*_2) = 187511932131875267898263409964183047498_u128 & 334382189686324755690231576184799749231_u128;
(*_15).0 = _11 as u16;
(*_2) = 97847505355120663719453095303713316704_u128 * 14931229300692570844977724436579267012_u128;
(*_15) = (27139_u16, _19);
_12 = core::ptr::addr_of!(_36.fld5);
_32 = 188830366048250509281389349278329638021_u128 - 83756949027127649013490014051920906048_u128;
(*_14) = core::ptr::addr_of!((*_2));
(*_12) = !12848079723663892456_u64;
(*_15) = (29237_u16, _19);
_2 = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
_30 = _3;
(*_15).1 = _19;
_36.fld0 = [_3,_30,_3,_30,_30,_3,_30];
(*_2) = _23 as u128;
_36.fld3.1 = (*_15).1 * (*_15).1;
_38 = (-5659423582742084973_i64) as f64;
_5 = (*_7) >> (*_15).1;
_36.fld3 = (_30, (*_15).1, 2098892626_u32, _38);
(*_14) = core::ptr::addr_of!((*_2));
_36.fld3.2 = 1270823564_u32;
(*_15).1 = _36.fld3.1 << (*_15).0;
(*_12) = 14729461545771533090_u64 ^ 10022737467800579435_u64;
(*_15).1 = _36.fld3.1 | _36.fld3.1;
(*_12) = 16897505288180480021_u64 ^ 731018703055544101_u64;
_16 = core::ptr::addr_of!(_36.fld3);
(*_16).3 = -_38;
match (*_15).0 {
0 => bb1,
1 => bb15,
2 => bb12,
3 => bb6,
4 => bb17,
29237 => bb19,
_ => bb18
}
}
bb17 = {
_1 = !(*_7);
_5 = !_4;
_11 = false & false;
_7 = &_5;
_8 = [1953449491_i32,(-1253838329_i32),(-464891764_i32),1438229098_i32,1463027334_i32];
_1 = (*_7) ^ (*_7);
_8 = [546772975_i32,1159961064_i32,(-1888504892_i32),(-572992382_i32),(-1092642699_i32)];
_14 = core::ptr::addr_of!(_2);
_8 = [614269974_i32,686946269_i32,(-1505681385_i32),(-36474730_i32),(-1604651057_i32)];
_4 = (*_7) << (*_7);
_8 = [374365029_i32,875948035_i32,1189475536_i32,40805959_i32,(-766456608_i32)];
_1 = _11 as usize;
_11 = false;
_6 = Move(_7);
Goto(bb2)
}
bb18 = {
_8 = [(-178343074_i32),(-908385262_i32),611686506_i32,(-443690902_i32),1065581397_i32];
_7 = &_4;
RET = 82_isize >> (*_7);
_3 = '\u{c7039}';
RET = !9223372036854775807_isize;
_7 = &_1;
_14 = core::ptr::addr_of!((*_14));
_17 = (-182331290_i32);
_11 = !false;
match _17 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431585880166 => bb9,
_ => bb8
}
}
bb19 = {
(*_15).1 = !_36.fld3.1;
(*_15).1 = (*_16).1 >> _23;
_41 = core::ptr::addr_of_mut!(_36.fld4);
(*_12) = 3525193536488155353_u64 * 7648416803164123103_u64;
(*_12) = !12987313877065951053_u64;
(*_15).0 = 59493_u16;
(*_41).0 = (*_15).1 != (*_15).1;
(*_41) = (_11,);
(*_16).3 = _33 as f64;
(*_15) = (23229_u16, (*_16).1);
(*_12) = 137424013850802976164318226383930306206_i128 as u64;
_6 = &(*_7);
(*_16).1 = (*_15).1;
(*_16).3 = _38 + _38;
(*_16).2 = 2937704721_u32 | 2381641082_u32;
(*_16).3 = _38;
(*_14) = core::ptr::addr_of!((*_2));
Goto(bb20)
}
bb20 = {
(*_14) = core::ptr::addr_of!((*_2));
(*_41) = (_11,);
(*_16) = (_30, (*_15).1, 810543827_u32, _38);
(*_16) = (_3, (*_15).1, 1094279474_u32, _38);
(*_41).0 = !_11;
(*_12) = !3373649925074337643_u64;
(*_16).1 = (*_15).1 >> (*_15).0;
(*_41).0 = (*_15).1 < (*_16).1;
(*_16) = (_30, (*_15).1, 1512266389_u32, _38);
(*_15) = (49419_u16, (*_16).1);
(*_16).1 = (*_15).1 | (*_15).1;
(*_15).1 = !(*_16).1;
(*_16).2 = 696040582_u32 - 2242433303_u32;
_34 = [(*_41).0,(*_41).0];
_17 = _36.fld7.0 | _36.fld7.0;
(*_16) = (_30, (*_15).1, 4173497325_u32, _38);
(*_2) = 245418533922181099553905228138222916150_u128;
(*_14) = core::ptr::addr_of!((*_2));
(*_16) = (_3, (*_15).1, 2980405111_u32, _38);
(*_15).0 = _17 as u16;
(*_2) = 78349542491746486525232322090361679414_u128 >> (*_16).2;
match (*_16).2 {
0 => bb3,
1 => bb13,
2 => bb21,
3 => bb22,
4 => bb23,
5 => bb24,
6 => bb25,
2980405111 => bb27,
_ => bb26
}
}
bb21 = {
Return()
}
bb22 = {
_8 = [(-178343074_i32),(-908385262_i32),611686506_i32,(-443690902_i32),1065581397_i32];
_7 = &_4;
RET = 82_isize >> (*_7);
_3 = '\u{c7039}';
RET = !9223372036854775807_isize;
_7 = &_1;
_14 = core::ptr::addr_of!((*_14));
_17 = (-182331290_i32);
_11 = !false;
match _17 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
340282366920938463463374607431585880166 => bb9,
_ => bb8
}
}
bb23 = {
_1 = !(*_7);
_5 = !_4;
_11 = false & false;
_7 = &_5;
_8 = [1953449491_i32,(-1253838329_i32),(-464891764_i32),1438229098_i32,1463027334_i32];
_1 = (*_7) ^ (*_7);
_8 = [546772975_i32,1159961064_i32,(-1888504892_i32),(-572992382_i32),(-1092642699_i32)];
_14 = core::ptr::addr_of!(_2);
_8 = [614269974_i32,686946269_i32,(-1505681385_i32),(-36474730_i32),(-1604651057_i32)];
_4 = (*_7) << (*_7);
_8 = [374365029_i32,875948035_i32,1189475536_i32,40805959_i32,(-766456608_i32)];
_1 = _11 as usize;
_11 = false;
_6 = Move(_7);
Goto(bb2)
}
bb24 = {
Return()
}
bb25 = {
(*_15).0 = 46293_u16;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15).1 = _19 | _19;
(*_15) = (55041_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15) = (10237_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_15).0 = 20171_u16 & 61407_u16;
_36.fld7.0 = _17 ^ _17;
(*_2) = _11 as u128;
_20 = (31857_u16, _19);
_36.fld4 = (_11,);
(*_15).0 = !42914_u16;
match _17 {
0 => bb13,
340282366920938463463374607431585880166 => bb16,
_ => bb12
}
}
bb26 = {
_3 = '\u{b070e}';
_19 = 179_u8 ^ 41_u8;
RET = 9223372036854775807_isize >> (*_7);
_20 = (6029_u16, _19);
_8 = [_17,_17,_17,_17,_17];
_5 = (*_7);
_5 = _4 | (*_7);
_20.1 = _19 | _19;
_18 = _17 as isize;
_11 = false | true;
_20.1 = 16544059491161883510128016097106861739_i128 as u8;
_8 = [_17,_17,_17,_17,_17];
_15 = core::ptr::addr_of_mut!(_20);
match (*_15).0 {
6029 => bb10,
_ => bb8
}
}
bb27 = {
_34 = [(*_41).0,(*_41).0];
(*_2) = 277123571294265341155556229141557139216_u128 | 37605935074283419017798238322323133562_u128;
_21 = Move(_7);
(*_12) = 11743198361301913966_u64 | 15429890162445399472_u64;
(*_15).1 = !(*_16).1;
(*_16) = (_30, _20.1, 3686554946_u32, _38);
(*_15).1 = !(*_16).1;
(*_15).1 = (*_16).1;
(*_2) = 159875277991498133740561059934559805642_u128 + 316022049643756025966026012958625747824_u128;
match (*_16).2 {
0 => bb16,
1 => bb20,
2 => bb11,
3 => bb9,
4 => bb28,
5 => bb29,
3686554946 => bb31,
_ => bb30
}
}
bb28 = {
_24 = RET | _18;
(*_15) = (9375_u16, _19);
(*_15).0 = 8802_u16 * 36350_u16;
(*_15).1 = _19;
(*_15).0 = !48147_u16;
(*_15).0 = !24874_u16;
(*_15) = (3511_u16, _19);
(*_15).1 = _19 & _19;
_23 = RET - _24;
(*_15).0 = !67_u16;
(*_15).0 = 61895_u16 ^ 34442_u16;
(*_15).0 = 55507_u16;
(*_15).0 = 45490_u16 | 45069_u16;
_14 = core::ptr::addr_of!((*_14));
(*_15).0 = 45853_u16 - 10298_u16;
(*_15).1 = !_19;
(*_15).0 = 9662_u16;
_3 = '\u{35a42}';
_20.1 = _19 << (*_7);
(*_15) = (18871_u16, _19);
(*_15).1 = _19 | _19;
(*_15).0 = !60509_u16;
(*_15).0 = !55537_u16;
_18 = RET;
_18 = _23;
(*_15) = (57289_u16, _19);
(*_15).1 = _17 as u8;
Goto(bb11)
}
bb29 = {
(*_15).0 = 46293_u16;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15).1 = _19 | _19;
(*_15) = (55041_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15) = (10237_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_15).0 = 20171_u16 & 61407_u16;
_36.fld7.0 = _17 ^ _17;
(*_2) = _11 as u128;
_20 = (31857_u16, _19);
_36.fld4 = (_11,);
(*_15).0 = !42914_u16;
match _17 {
0 => bb13,
340282366920938463463374607431585880166 => bb16,
_ => bb12
}
}
bb30 = {
(*_15).0 = 46293_u16;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15).1 = _19 | _19;
(*_15) = (55041_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15) = (10237_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_15).0 = 20171_u16 & 61407_u16;
_36.fld7.0 = _17 ^ _17;
(*_2) = _11 as u128;
_20 = (31857_u16, _19);
_36.fld4 = (_11,);
(*_15).0 = !42914_u16;
match _17 {
0 => bb13,
340282366920938463463374607431585880166 => bb16,
_ => bb12
}
}
bb31 = {
(*_16).3 = _38;
(*_16).2 = 324977204_u32 + 3463191458_u32;
_19 = (*_12) as u8;
(*_16).0 = _30;
(*_15) = (61116_u16, (*_16).1);
(*_15) = (50413_u16, (*_16).1);
(*_16).0 = _3;
(*_15) = (7809_u16, (*_16).1);
(*_16).0 = _3;
_36.fld3.3 = _38;
_36.fld4.0 = !_11;
(*_41) = (_11,);
(*_2) = (*_41).0 as u128;
_36.fld3.0 = _30;
(*_16).2 = 3123517325_u32;
(*_16).3 = _38 + _38;
_3 = (*_16).0;
(*_15) = (31140_u16, (*_16).1);
(*_16).0 = _30;
_33 = 10965_i16 - 4406_i16;
(*_2) = (-4936550054375494417_i64) as u128;
(*_15).0 = (*_16).0 as u16;
_3 = (*_16).0;
(*_16).0 = _30;
_36.fld4.0 = _11;
Goto(bb32)
}
bb32 = {
_20.0 = 31561_u16 ^ 44357_u16;
(*_16) = (_3, (*_15).1, 383707540_u32, _38);
(*_2) = _17 as u128;
(*_2) = 27973862714637119917904721104590775853_u128;
_31 = _8;
(*_16).0 = _30;
(*_16) = (_3, _19, 2991792225_u32, _38);
(*_14) = core::ptr::addr_of!((*_2));
_57.0.1 = (*_16).3 as u8;
_5 = !(*_6);
_36.fld2 = _24 ^ _24;
(*_16).3 = -_38;
(*_16) = (_30, (*_15).1, 2187835287_u32, _38);
(*_15).0 = 1494_u16;
(*_41) = (_11,);
(*_16).0 = _30;
(*_16) = (_3, (*_15).1, 457144994_u32, _38);
(*_16).2 = !3486618549_u32;
(*_15) = (29888_u16, (*_16).1);
(*_15).1 = (*_16).1 * (*_16).1;
(*_16).1 = !(*_15).1;
(*_41) = (_11,);
Goto(bb33)
}
bb33 = {
_36.fld7 = (_17,);
(*_41).0 = (*_15).1 < (*_16).1;
_57.0.1 = (*_16).1 ^ (*_16).1;
(*_41) = (_11,);
(*_15) = (50852_u16, (*_16).1);
(*_2) = 113293462577796764568937070737366640239_i128 as u128;
_57.0 = (*_15);
(*_16).3 = (*_16).2 as f64;
_36.fld3.1 = (*_15).1 + _57.0.1;
(*_15) = (_57.0.0, (*_16).1);
(*_16) = (_3, (*_15).1, 855552881_u32, _38);
(*_15).1 = _57.0.0 as u8;
(*_16).0 = _30;
(*_14) = core::ptr::addr_of!((*_2));
(*_16).0 = _3;
_42 = (*_41).0 ^ _36.fld4.0;
match (*_15).0 {
50852 => bb34,
_ => bb26
}
}
bb34 = {
(*_16).2 = 548111630_u32;
match (*_15).0 {
0 => bb35,
50852 => bb37,
_ => bb36
}
}
bb35 = {
_24 = RET | _18;
(*_15) = (9375_u16, _19);
(*_15).0 = 8802_u16 * 36350_u16;
(*_15).1 = _19;
(*_15).0 = !48147_u16;
(*_15).0 = !24874_u16;
(*_15) = (3511_u16, _19);
(*_15).1 = _19 & _19;
_23 = RET - _24;
(*_15).0 = !67_u16;
(*_15).0 = 61895_u16 ^ 34442_u16;
(*_15).0 = 55507_u16;
(*_15).0 = 45490_u16 | 45069_u16;
_14 = core::ptr::addr_of!((*_14));
(*_15).0 = 45853_u16 - 10298_u16;
(*_15).1 = !_19;
(*_15).0 = 9662_u16;
_3 = '\u{35a42}';
_20.1 = _19 << (*_7);
(*_15) = (18871_u16, _19);
(*_15).1 = _19 | _19;
(*_15).0 = !60509_u16;
(*_15).0 = !55537_u16;
_18 = RET;
_18 = _23;
(*_15) = (57289_u16, _19);
(*_15).1 = _17 as u8;
Goto(bb11)
}
bb36 = {
_3 = '\u{b070e}';
_19 = 179_u8 ^ 41_u8;
RET = 9223372036854775807_isize >> (*_7);
_20 = (6029_u16, _19);
_8 = [_17,_17,_17,_17,_17];
_5 = (*_7);
_5 = _4 | (*_7);
_20.1 = _19 | _19;
_18 = _17 as isize;
_11 = false | true;
_20.1 = 16544059491161883510128016097106861739_i128 as u8;
_8 = [_17,_17,_17,_17,_17];
_15 = core::ptr::addr_of_mut!(_20);
match (*_15).0 {
6029 => bb10,
_ => bb8
}
}
bb37 = {
(*_15).0 = _57.0.0 | _57.0.0;
match _57.0.0 {
0 => bb17,
1 => bb7,
2 => bb13,
3 => bb38,
4 => bb39,
50852 => bb41,
_ => bb40
}
}
bb38 = {
(*_16).3 = _38;
(*_16).2 = 324977204_u32 + 3463191458_u32;
_19 = (*_12) as u8;
(*_16).0 = _30;
(*_15) = (61116_u16, (*_16).1);
(*_15) = (50413_u16, (*_16).1);
(*_16).0 = _3;
(*_15) = (7809_u16, (*_16).1);
(*_16).0 = _3;
_36.fld3.3 = _38;
_36.fld4.0 = !_11;
(*_41) = (_11,);
(*_2) = (*_41).0 as u128;
_36.fld3.0 = _30;
(*_16).2 = 3123517325_u32;
(*_16).3 = _38 + _38;
_3 = (*_16).0;
(*_15) = (31140_u16, (*_16).1);
(*_16).0 = _30;
_33 = 10965_i16 - 4406_i16;
(*_2) = (-4936550054375494417_i64) as u128;
(*_15).0 = (*_16).0 as u16;
_3 = (*_16).0;
(*_16).0 = _30;
_36.fld4.0 = _11;
Goto(bb32)
}
bb39 = {
(*_15).0 = 46293_u16;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15).1 = _19 | _19;
(*_15) = (55041_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_15) = (10237_u16, _19);
(*_14) = core::ptr::addr_of!((*_2));
(*_15).0 = 20171_u16 & 61407_u16;
_36.fld7.0 = _17 ^ _17;
(*_2) = _11 as u128;
_20 = (31857_u16, _19);
_36.fld4 = (_11,);
(*_15).0 = !42914_u16;
match _17 {
0 => bb13,
340282366920938463463374607431585880166 => bb16,
_ => bb12
}
}
bb40 = {
(*_15) = (27697_u16, _19);
(*_15).1 = !_19;
(*_2) = 187511932131875267898263409964183047498_u128 & 334382189686324755690231576184799749231_u128;
(*_15).0 = _11 as u16;
(*_2) = 97847505355120663719453095303713316704_u128 * 14931229300692570844977724436579267012_u128;
(*_15) = (27139_u16, _19);
_12 = core::ptr::addr_of!(_36.fld5);
_32 = 188830366048250509281389349278329638021_u128 - 83756949027127649013490014051920906048_u128;
(*_14) = core::ptr::addr_of!((*_2));
(*_12) = !12848079723663892456_u64;
(*_15) = (29237_u16, _19);
_2 = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
_30 = _3;
(*_15).1 = _19;
_36.fld0 = [_3,_30,_3,_30,_30,_3,_30];
(*_2) = _23 as u128;
_36.fld3.1 = (*_15).1 * (*_15).1;
_38 = (-5659423582742084973_i64) as f64;
_5 = (*_7) >> (*_15).1;
_36.fld3 = (_30, (*_15).1, 2098892626_u32, _38);
(*_14) = core::ptr::addr_of!((*_2));
_36.fld3.2 = 1270823564_u32;
(*_15).1 = _36.fld3.1 << (*_15).0;
(*_12) = 14729461545771533090_u64 ^ 10022737467800579435_u64;
(*_15).1 = _36.fld3.1 | _36.fld3.1;
(*_12) = 16897505288180480021_u64 ^ 731018703055544101_u64;
_16 = core::ptr::addr_of!(_36.fld3);
(*_16).3 = -_38;
match (*_15).0 {
0 => bb1,
1 => bb15,
2 => bb12,
3 => bb6,
4 => bb17,
29237 => bb19,
_ => bb18
}
}
bb41 = {
(*_2) = 322537116405257788142430096271256317391_u128;
_33 = !(-6906_i16);
(*_12) = 8120304724667180200_u64 & 14907880316377748280_u64;
(*_2) = !83578174215698757735143792750031937045_u128;
(*_41) = (_11,);
(*_16).3 = (-538982579029186744624449988639897477_i128) as f64;
(*_15).0 = 7306056963521445181_i64 as u16;
(*_12) = 6422953230840735531_u64;
(*_15).1 = (*_16).1;
(*_41).0 = (*_15).1 > _20.1;
(*_14) = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
(*_16).2 = _36.fld2 as u32;
(*_16).0 = _30;
match _57.0.0 {
0 => bb42,
1 => bb43,
50852 => bb45,
_ => bb44
}
}
bb42 = {
(*_15) = (27697_u16, _19);
(*_15).1 = !_19;
(*_2) = 187511932131875267898263409964183047498_u128 & 334382189686324755690231576184799749231_u128;
(*_15).0 = _11 as u16;
(*_2) = 97847505355120663719453095303713316704_u128 * 14931229300692570844977724436579267012_u128;
(*_15) = (27139_u16, _19);
_12 = core::ptr::addr_of!(_36.fld5);
_32 = 188830366048250509281389349278329638021_u128 - 83756949027127649013490014051920906048_u128;
(*_14) = core::ptr::addr_of!((*_2));
(*_12) = !12848079723663892456_u64;
(*_15) = (29237_u16, _19);
_2 = core::ptr::addr_of!((*_2));
(*_14) = core::ptr::addr_of!((*_2));
_30 = _3;
(*_15).1 = _19;
_36.fld0 = [_3,_30,_3,_30,_30,_3,_30];
(*_2) = _23 as u128;
_36.fld3.1 = (*_15).1 * (*_15).1;
_38 = (-5659423582742084973_i64) as f64;
_5 = (*_7) >> (*_15).1;
_36.fld3 = (_30, (*_15).1, 2098892626_u32, _38);
(*_14) = core::ptr::addr_of!((*_2));
_36.fld3.2 = 1270823564_u32;
(*_15).1 = _36.fld3.1 << (*_15).0;
(*_12) = 14729461545771533090_u64 ^ 10022737467800579435_u64;
(*_15).1 = _36.fld3.1 | _36.fld3.1;
(*_12) = 16897505288180480021_u64 ^ 731018703055544101_u64;
_16 = core::ptr::addr_of!(_36.fld3);
(*_16).3 = -_38;
match (*_15).0 {
0 => bb1,
1 => bb15,
2 => bb12,
3 => bb6,
4 => bb17,
29237 => bb19,
_ => bb18
}
}
bb43 = {
_24 = RET | _18;
(*_15) = (9375_u16, _19);
(*_15).0 = 8802_u16 * 36350_u16;
(*_15).1 = _19;
(*_15).0 = !48147_u16;
(*_15).0 = !24874_u16;
(*_15) = (3511_u16, _19);
(*_15).1 = _19 & _19;
_23 = RET - _24;
(*_15).0 = !67_u16;
(*_15).0 = 61895_u16 ^ 34442_u16;
(*_15).0 = 55507_u16;
(*_15).0 = 45490_u16 | 45069_u16;
_14 = core::ptr::addr_of!((*_14));
(*_15).0 = 45853_u16 - 10298_u16;
(*_15).1 = !_19;
(*_15).0 = 9662_u16;
_3 = '\u{35a42}';
_20.1 = _19 << (*_7);
(*_15) = (18871_u16, _19);
(*_15).1 = _19 | _19;
(*_15).0 = !60509_u16;
(*_15).0 = !55537_u16;
_18 = RET;
_18 = _23;
(*_15) = (57289_u16, _19);
(*_15).1 = _17 as u8;
Goto(bb11)
}
bb44 = {
_1 = !(*_7);
_5 = !_4;
_11 = false & false;
_7 = &_5;
_8 = [1953449491_i32,(-1253838329_i32),(-464891764_i32),1438229098_i32,1463027334_i32];
_1 = (*_7) ^ (*_7);
_8 = [546772975_i32,1159961064_i32,(-1888504892_i32),(-572992382_i32),(-1092642699_i32)];
_14 = core::ptr::addr_of!(_2);
_8 = [614269974_i32,686946269_i32,(-1505681385_i32),(-36474730_i32),(-1604651057_i32)];
_4 = (*_7) << (*_7);
_8 = [374365029_i32,875948035_i32,1189475536_i32,40805959_i32,(-766456608_i32)];
_1 = _11 as usize;
_11 = false;
_6 = Move(_7);
Goto(bb2)
}
bb45 = {
(*_16).3 = (-2988931856853122153_i64) as f64;
(*_15).1 = (*_16).1 & (*_16).1;
_7 = &(*_6);
(*_15).0 = _57.0.0 >> (*_15).1;
(*_41) = (_42,);
_36.fld6 = 3005429858189182283_i64 * 5262479338461506436_i64;
(*_41).0 = !_42;
(*_16).1 = (*_15).1 >> _20.1;
(*_16).0 = _3;
_68.0 = -(-160721128867478645946995422233879451271_i128);
RET = _36.fld2 << (*_15).0;
_15 = core::ptr::addr_of_mut!((*_15));
(*_12) = 11477159455340103406_u64 ^ 263945757300997338_u64;
_68.1 = _36.fld6 << (*_15).1;
(*_15).0 = _57.0.0;
(*_15) = (_57.0.0, _36.fld3.1);
Goto(bb46)
}
bb46 = {
Call(_72 = dump_var(15_usize, 20_usize, Move(_20), 18_usize, Move(_18), 23_usize, Move(_23), 33_usize, Move(_33)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_72 = dump_var(15_usize, 19_usize, Move(_19), 34_usize, Move(_34), 5_usize, Move(_5), 17_usize, Move(_17)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Call(_72 = dump_var(15_usize, 1_usize, Move(_1), 73_usize, _73, 73_usize, _73, 73_usize, _73), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16() -> f32 {
mir! {
type RET = f32;
let _1: isize;
let _2: f64;
let _3: &'static mut [u16; 2];
let _4: &'static i128;
let _5: (bool,);
let _6: [isize; 5];
let _7: [i128; 6];
let _8: *const (char, u8, u32, f64);
let _9: (*const u128, [u32; 5], Adt58);
let _10: bool;
let _11: u16;
let _12: bool;
let _13: f64;
let _14: f64;
let _15: char;
let _16: &'static mut (bool,);
let _17: i16;
let _18: bool;
let _19: f32;
let _20: (isize, *const u128);
let _21: u32;
let _22: (u8,);
let _23: f32;
let _24: bool;
let _25: f64;
let _26: u8;
let _27: char;
let _28: i128;
let _29: &'static mut u64;
let _30: (i128, i64);
let _31: *const (i128, i64);
let _32: f64;
let _33: &'static (i32, *mut [u16; 2], bool, f64);
let _34: *mut [u16; 2];
let _35: f32;
let _36: char;
let _37: *const u64;
let _38: *const i16;
let _39: [char; 7];
let _40: isize;
let _41: &'static &'static mut u64;
let _42: u8;
let _43: &'static [i64; 2];
let _44: bool;
let _45: *mut (u16, u8);
let _46: u128;
let _47: [u16; 3];
let _48: *const (i128, i64);
let _49: Adt43;
let _50: bool;
let _51: [i8; 4];
let _52: u16;
let _53: i128;
let _54: i64;
let _55: i128;
let _56: usize;
let _57: &'static (i32, *mut [u16; 2], bool, f64);
let _58: char;
let _59: i32;
let _60: (i32, *mut [u16; 2], bool, f64);
let _61: *const *const u128;
let _62: i128;
let _63: char;
let _64: f64;
let _65: &'static mut (bool,);
let _66: bool;
let _67: [u32; 5];
let _68: u32;
let _69: [i8; 4];
let _70: [isize; 5];
let _71: [i64; 2];
let _72: ((u16, u8), *const u128, &'static (i32, *mut [u16; 2], bool, f64), usize);
let _73: *mut (i32, *mut [u16; 2], bool, f64);
let _74: u64;
let _75: (char, u8, u32, f64);
let _76: i32;
let _77: *mut (u16, u8);
let _78: [u32; 2];
let _79: ();
let _80: ();
{
RET = 124_i8 as f32;
RET = 2336535965095594869_i64 as f32;
RET = 34882_u16 as f32;
RET = 14210150068320330530_u64 as f32;
RET = 238_u8 as f32;
Goto(bb1)
}
bb1 = {
_1 = 12_isize * 87_isize;
_1 = 109804811010700969417730810744095343411_i128 as isize;
RET = 633889308625587385_i64 as f32;
RET = 320115956985092001933712764324417685849_u128 as f32;
_1 = 9223372036854775807_isize - 9223372036854775807_isize;
_1 = -(-9223372036854775808_isize);
RET = 10124491877321153275892587486918393533_i128 as f32;
_2 = 814167167821056655_usize as f64;
RET = 9199106509008161012_u64 as f32;
_2 = 325219339663478902182997109018775403056_u128 as f64;
_1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_1 = (-9223372036854775808_isize) * (-9223372036854775808_isize);
_2 = 6929848679867989232_u64 as f64;
_2 = _1 as f64;
RET = 2769116547830136564_i64 as f32;
_1 = (-9223372036854775808_isize) * 9223372036854775807_isize;
RET = 469518307_u32 as f32;
_1 = 9223372036854775807_isize + 26_isize;
_2 = RET as f64;
RET = 213_u8 as f32;
RET = 17393330397453005364_u64 as f32;
_5 = (true,);
_5.0 = _1 != _1;
_1 = (-9223372036854775808_isize) << 2884646140_u32;
Call(_6 = fn17(_5, RET, _1, _5, _5, _1, _2, _1, _1, _5, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = (true,);
_1 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = 776790755_i32 as f64;
_5.0 = false;
_1 = 49_isize;
_1 = 20_isize & 9223372036854775807_isize;
_5.0 = true;
_5 = (true,);
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = 9223372036854775807_isize;
_1 = (-9223372036854775808_isize) | 9223372036854775807_isize;
_1 = -(-9223372036854775808_isize);
RET = 48991_u16 as f32;
_6 = [_1,_1,_1,_1,_1];
_2 = 6120785630457169052_i64 as f64;
_5 = (true,);
_5.0 = !true;
_5 = (true,);
_6 = [_1,_1,_1,_1,_1];
RET = 12800716104635066276_usize as f32;
_5.0 = RET > RET;
RET = 136_u8 as f32;
Goto(bb3)
}
bb3 = {
_5 = (false,);
RET = 127285948586308516350108537340621137921_i128 as f32;
RET = 512142991_u32 as f32;
_2 = 95177357767994915614871319201739424876_u128 as f64;
_5 = (false,);
_6 = [_1,_1,_1,_1,_1];
_1 = (-77_isize);
_5 = (false,);
RET = _1 as f32;
_9.1 = [262493315_u32,4084287272_u32,2607243891_u32,4268884714_u32,4006588874_u32];
_9.1 = [4079615347_u32,2336311881_u32,390927152_u32,4253841458_u32,4026288788_u32];
_2 = 601876395_u32 as f64;
_7 = [96468464279645630855769066546371645944_i128,86642054856658084999967748369387678749_i128,73855506991452057933409599663315871741_i128,119597618759330861671375175363164274_i128,(-29683873707518479082413549313079939228_i128),(-123700485156456648523842876457902984683_i128)];
RET = 272847068152754228351544630171001948811_u128 as f32;
_7 = [(-110101064320958890945920970812734900359_i128),(-107299698657884508502577721744920004560_i128),100817221962246413838492666421217534700_i128,155105684103504957040293039625833403453_i128,154584311605747334249467393096553015847_i128,161055882674700217445699195770909377955_i128];
_10 = _1 < _1;
_9.1 = [473693183_u32,628546883_u32,535774818_u32,492841034_u32,2245482442_u32];
RET = (-111_i8) as f32;
Goto(bb4)
}
bb4 = {
_6 = [_1,_1,_1,_1,_1];
_2 = _1 as f64;
_5.0 = _10 | _10;
RET = 4231116845_u32 as f32;
_6 = [_1,_1,_1,_1,_1];
_5.0 = _10;
_11 = !2569_u16;
_12 = !_5.0;
_9.1 = [819220086_u32,299630228_u32,1853654871_u32,2713404011_u32,3671288818_u32];
_1 = -9223372036854775807_isize;
_13 = _2 + _2;
_6 = [_1,_1,_1,_1,_1];
_9.1 = [3446940613_u32,1635420602_u32,517833296_u32,1220288265_u32,1574093133_u32];
_1 = 9223372036854775807_isize + (-9223372036854775808_isize);
_5.0 = _10;
_12 = _10;
_7 = [63221262982292530900993362027417607967_i128,110312106436793101693830657975047050260_i128,103138293241647341522856352306718210372_i128,(-34745429745175624802286851649742764098_i128),65676042516685039312822663889983589342_i128,(-157577446824007573813373400868905114019_i128)];
Goto(bb5)
}
bb5 = {
RET = 674222261_u32 as f32;
_10 = !_12;
_14 = -_13;
_5 = (_12,);
_15 = '\u{75e1f}';
_6 = [_1,_1,_1,_1,_1];
_17 = (-2015389161_i32) as i16;
_14 = _13 + _2;
_1 = 9223372036854775807_isize >> _11;
_16 = &mut _5;
(*_16) = (_12,);
(*_16).0 = _12;
(*_16) = (_10,);
(*_16) = (_12,);
_7 = [918104167099489755396930131240707427_i128,(-48545483919765227583118324662354589089_i128),121871639209263455283190119888301254372_i128,(-49701825016058031649900024882287883289_i128),119322354332029177963058215041432745287_i128,(-107559009979719016713118134102351801419_i128)];
_13 = _2 * _14;
(*_16) = (_10,);
_9.1 = [3635206940_u32,2089538555_u32,2553063870_u32,1940054539_u32,1007952139_u32];
(*_16).0 = !_12;
(*_16) = (_12,);
(*_16) = (_12,);
_19 = -RET;
(*_16) = (_10,);
(*_16).0 = _12;
_17 = (-23324_i16) & 5189_i16;
(*_16) = (_12,);
Goto(bb6)
}
bb6 = {
_14 = _13 - _2;
(*_16).0 = _12 | _12;
Goto(bb7)
}
bb7 = {
(*_16).0 = _10 | _10;
(*_16).0 = _14 >= _14;
_7 = [52805347456379485493805136986394064675_i128,(-97631614535655388954450166467238729009_i128),(-54072005366458972993340039287122200710_i128),(-148515942999352526061801950632799438846_i128),(-98475835342661750624367304397525267558_i128),(-150101941777879455836676220592851531637_i128)];
(*_16).0 = _11 > _11;
_15 = '\u{52674}';
(*_16).0 = _12 ^ _12;
(*_16) = (_10,);
_21 = 795664232_u32;
(*_16) = (_10,);
(*_16).0 = _2 <= _13;
(*_16).0 = _10;
_17 = (-12347_i16) - 13668_i16;
(*_16) = (_12,);
(*_16).0 = _12 & _10;
(*_16).0 = _10 ^ _10;
match _21 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
795664232 => bb8,
_ => bb5
}
}
bb8 = {
(*_16) = (_12,);
(*_16) = (_12,);
_17 = (-24844_i16) + (-9708_i16);
(*_16).0 = _14 < _14;
_12 = !(*_16).0;
(*_16) = (_12,);
(*_16).0 = _12;
(*_16).0 = !_10;
(*_16).0 = _12 == _12;
_13 = -_14;
(*_16) = (_12,);
_1 = (-9223372036854775808_isize) | 9223372036854775807_isize;
(*_16) = (_12,);
_9.1 = [_21,_21,_21,_21,_21];
_24 = !(*_16).0;
_22.0 = 197_u8 & 37_u8;
_23 = RET + _19;
(*_16).0 = _12 != _24;
(*_16) = (_24,);
(*_16) = (_12,);
(*_16).0 = !_24;
_13 = _2;
(*_16) = (_24,);
match _21 {
0 => bb2,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
6 => bb14,
795664232 => bb16,
_ => bb15
}
}
bb9 = {
(*_16).0 = _10 | _10;
(*_16).0 = _14 >= _14;
_7 = [52805347456379485493805136986394064675_i128,(-97631614535655388954450166467238729009_i128),(-54072005366458972993340039287122200710_i128),(-148515942999352526061801950632799438846_i128),(-98475835342661750624367304397525267558_i128),(-150101941777879455836676220592851531637_i128)];
(*_16).0 = _11 > _11;
_15 = '\u{52674}';
(*_16).0 = _12 ^ _12;
(*_16) = (_10,);
_21 = 795664232_u32;
(*_16) = (_10,);
(*_16).0 = _2 <= _13;
(*_16).0 = _10;
_17 = (-12347_i16) - 13668_i16;
(*_16) = (_12,);
(*_16).0 = _12 & _10;
(*_16).0 = _10 ^ _10;
match _21 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
795664232 => bb8,
_ => bb5
}
}
bb10 = {
_14 = _13 - _2;
(*_16).0 = _12 | _12;
Goto(bb7)
}
bb11 = {
RET = 674222261_u32 as f32;
_10 = !_12;
_14 = -_13;
_5 = (_12,);
_15 = '\u{75e1f}';
_6 = [_1,_1,_1,_1,_1];
_17 = (-2015389161_i32) as i16;
_14 = _13 + _2;
_1 = 9223372036854775807_isize >> _11;
_16 = &mut _5;
(*_16) = (_12,);
(*_16).0 = _12;
(*_16) = (_10,);
(*_16) = (_12,);
_7 = [918104167099489755396930131240707427_i128,(-48545483919765227583118324662354589089_i128),121871639209263455283190119888301254372_i128,(-49701825016058031649900024882287883289_i128),119322354332029177963058215041432745287_i128,(-107559009979719016713118134102351801419_i128)];
_13 = _2 * _14;
(*_16) = (_10,);
_9.1 = [3635206940_u32,2089538555_u32,2553063870_u32,1940054539_u32,1007952139_u32];
(*_16).0 = !_12;
(*_16) = (_12,);
(*_16) = (_12,);
_19 = -RET;
(*_16) = (_10,);
(*_16).0 = _12;
_17 = (-23324_i16) & 5189_i16;
(*_16) = (_12,);
Goto(bb6)
}
bb12 = {
_6 = [_1,_1,_1,_1,_1];
_2 = _1 as f64;
_5.0 = _10 | _10;
RET = 4231116845_u32 as f32;
_6 = [_1,_1,_1,_1,_1];
_5.0 = _10;
_11 = !2569_u16;
_12 = !_5.0;
_9.1 = [819220086_u32,299630228_u32,1853654871_u32,2713404011_u32,3671288818_u32];
_1 = -9223372036854775807_isize;
_13 = _2 + _2;
_6 = [_1,_1,_1,_1,_1];
_9.1 = [3446940613_u32,1635420602_u32,517833296_u32,1220288265_u32,1574093133_u32];
_1 = 9223372036854775807_isize + (-9223372036854775808_isize);
_5.0 = _10;
_12 = _10;
_7 = [63221262982292530900993362027417607967_i128,110312106436793101693830657975047050260_i128,103138293241647341522856352306718210372_i128,(-34745429745175624802286851649742764098_i128),65676042516685039312822663889983589342_i128,(-157577446824007573813373400868905114019_i128)];
Goto(bb5)
}
bb13 = {
_5 = (false,);
RET = 127285948586308516350108537340621137921_i128 as f32;
RET = 512142991_u32 as f32;
_2 = 95177357767994915614871319201739424876_u128 as f64;
_5 = (false,);
_6 = [_1,_1,_1,_1,_1];
_1 = (-77_isize);
_5 = (false,);
RET = _1 as f32;
_9.1 = [262493315_u32,4084287272_u32,2607243891_u32,4268884714_u32,4006588874_u32];
_9.1 = [4079615347_u32,2336311881_u32,390927152_u32,4253841458_u32,4026288788_u32];
_2 = 601876395_u32 as f64;
_7 = [96468464279645630855769066546371645944_i128,86642054856658084999967748369387678749_i128,73855506991452057933409599663315871741_i128,119597618759330861671375175363164274_i128,(-29683873707518479082413549313079939228_i128),(-123700485156456648523842876457902984683_i128)];
RET = 272847068152754228351544630171001948811_u128 as f32;
_7 = [(-110101064320958890945920970812734900359_i128),(-107299698657884508502577721744920004560_i128),100817221962246413838492666421217534700_i128,155105684103504957040293039625833403453_i128,154584311605747334249467393096553015847_i128,161055882674700217445699195770909377955_i128];
_10 = _1 < _1;
_9.1 = [473693183_u32,628546883_u32,535774818_u32,492841034_u32,2245482442_u32];
RET = (-111_i8) as f32;
Goto(bb4)
}
bb14 = {
_5 = (true,);
_1 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = 776790755_i32 as f64;
_5.0 = false;
_1 = 49_isize;
_1 = 20_isize & 9223372036854775807_isize;
_5.0 = true;
_5 = (true,);
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1 = 9223372036854775807_isize;
_1 = (-9223372036854775808_isize) | 9223372036854775807_isize;
_1 = -(-9223372036854775808_isize);
RET = 48991_u16 as f32;
_6 = [_1,_1,_1,_1,_1];
_2 = 6120785630457169052_i64 as f64;
_5 = (true,);
_5.0 = !true;
_5 = (true,);
_6 = [_1,_1,_1,_1,_1];
RET = 12800716104635066276_usize as f32;
_5.0 = RET > RET;
RET = 136_u8 as f32;
Goto(bb3)
}
bb15 = {
_1 = 12_isize * 87_isize;
_1 = 109804811010700969417730810744095343411_i128 as isize;
RET = 633889308625587385_i64 as f32;
RET = 320115956985092001933712764324417685849_u128 as f32;
_1 = 9223372036854775807_isize - 9223372036854775807_isize;
_1 = -(-9223372036854775808_isize);
RET = 10124491877321153275892587486918393533_i128 as f32;
_2 = 814167167821056655_usize as f64;
RET = 9199106509008161012_u64 as f32;
_2 = 325219339663478902182997109018775403056_u128 as f64;
_1 = 9223372036854775807_isize ^ 9223372036854775807_isize;
_1 = (-9223372036854775808_isize) * (-9223372036854775808_isize);
_2 = 6929848679867989232_u64 as f64;
_2 = _1 as f64;
RET = 2769116547830136564_i64 as f32;
_1 = (-9223372036854775808_isize) * 9223372036854775807_isize;
RET = 469518307_u32 as f32;
_1 = 9223372036854775807_isize + 26_isize;
_2 = RET as f64;
RET = 213_u8 as f32;
RET = 17393330397453005364_u64 as f32;
_5 = (true,);
_5.0 = _1 != _1;
_1 = (-9223372036854775808_isize) << 2884646140_u32;
Call(_6 = fn17(_5, RET, _1, _5, _5, _1, _2, _1, _1, _5, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
(*_16) = (_12,);
(*_16) = (_24,);
(*_16) = (_24,);
_26 = !_22.0;
(*_16) = (_10,);
_14 = _2;
(*_16) = (_24,);
(*_16) = (_12,);
(*_16) = (_24,);
_30.0 = _14 as i128;
(*_16) = (_12,);
_30 = (18755339269555872432338938894293083860_i128, 7280222271401487819_i64);
(*_16) = (_24,);
Goto(bb17)
}
bb17 = {
_31 = core::ptr::addr_of!(_30);
(*_16) = (_12,);
_12 = (*_16).0;
(*_31).1 = 3598573361696490475_i64;
(*_31).0 = 129249748594987047414915330524168333489_i128 + 123207696500310655916311828240534125306_i128;
match (*_31).1 {
0 => bb1,
1 => bb12,
2 => bb11,
3598573361696490475 => bb19,
_ => bb18
}
}
bb18 = {
_6 = [_1,_1,_1,_1,_1];
_2 = _1 as f64;
_5.0 = _10 | _10;
RET = 4231116845_u32 as f32;
_6 = [_1,_1,_1,_1,_1];
_5.0 = _10;
_11 = !2569_u16;
_12 = !_5.0;
_9.1 = [819220086_u32,299630228_u32,1853654871_u32,2713404011_u32,3671288818_u32];
_1 = -9223372036854775807_isize;
_13 = _2 + _2;
_6 = [_1,_1,_1,_1,_1];
_9.1 = [3446940613_u32,1635420602_u32,517833296_u32,1220288265_u32,1574093133_u32];
_1 = 9223372036854775807_isize + (-9223372036854775808_isize);
_5.0 = _10;
_12 = _10;
_7 = [63221262982292530900993362027417607967_i128,110312106436793101693830657975047050260_i128,103138293241647341522856352306718210372_i128,(-34745429745175624802286851649742764098_i128),65676042516685039312822663889983589342_i128,(-157577446824007573813373400868905114019_i128)];
Goto(bb5)
}
bb19 = {
_32 = _13 + _13;
(*_31).0 = (-58266679449334376419198168364174743392_i128) | (-49734078798056475123575115552263075512_i128);
(*_31) = (161456705732928410366898971643095612938_i128, (-1293172870604012339_i64));
(*_16) = (_24,);
(*_31).1 = !(-6658902739340622829_i64);
_10 = (*_16).0 | (*_16).0;
(*_31).0 = -(-79546223871948714951174275713564887776_i128);
(*_31).1 = 2515763055515276532_i64;
(*_16).0 = !_10;
(*_31).0 = (-88066577730443066648594336198777264204_i128) * 69117067660795720072278031755128466625_i128;
(*_16) = (_10,);
(*_31).1 = _15 as i64;
_1 = !9223372036854775807_isize;
(*_16).0 = _24;
(*_31).1 = _15 as i64;
(*_16).0 = !_10;
Goto(bb20)
}
bb20 = {
(*_16) = (_24,);
(*_31).1 = (-7989508032603875689_i64);
(*_16).0 = _10;
_28 = _22.0 as i128;
(*_16).0 = _24 ^ _10;
_25 = _14 - _32;
_30.0 = !_28;
(*_16).0 = (*_31).1 >= (*_31).1;
(*_16) = (_12,);
_28 = -(*_31).0;
(*_16).0 = !_24;
(*_16).0 = (*_31).0 < _28;
(*_16).0 = _10;
_32 = _25 - _2;
(*_31).0 = _28 >> (*_31).1;
Call(_1 = core::intrinsics::bswap(17_isize), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
(*_16) = (_12,);
(*_16) = (_12,);
_11 = !28180_u16;
_39 = [_15,_15,_15,_15,_15,_15,_15];
(*_16).0 = (*_31).1 > (*_31).1;
_38 = core::ptr::addr_of!(_17);
(*_31) = (_28, 2250927825532133057_i64);
_10 = _12 & _12;
(*_16).0 = _24 >= _12;
Goto(bb22)
}
bb22 = {
(*_31).1 = 7511623070187911552_u64 as i64;
(*_38) = (-5209_i16) + 25111_i16;
(*_31) = (_28, (-68067626999654050_i64));
(*_16).0 = _10;
(*_38) = 332_i16 << (*_31).1;
_10 = (*_16).0 | (*_16).0;
(*_31).1 = -6764767692656199419_i64;
(*_31).1 = -5020856272213201134_i64;
(*_16).0 = (*_38) > (*_38);
_12 = (*_16).0;
(*_31) = (_28, (-6693639919066303362_i64));
(*_38) = (-1415_i16) - (-18489_i16);
_36 = _15;
_35 = _23;
(*_16).0 = !_24;
(*_16).0 = _10;
(*_16) = (_10,);
(*_31).0 = _28 * _28;
(*_31) = (_28, 8217636135392007111_i64);
(*_38) = (-5342_i16) - (-9146_i16);
match (*_31).1 {
0 => bb4,
8217636135392007111 => bb24,
_ => bb23
}
}
bb23 = {
(*_16) = (_12,);
(*_16) = (_12,);
_11 = !28180_u16;
_39 = [_15,_15,_15,_15,_15,_15,_15];
(*_16).0 = (*_31).1 > (*_31).1;
_38 = core::ptr::addr_of!(_17);
(*_31) = (_28, 2250927825532133057_i64);
_10 = _12 & _12;
(*_16).0 = _24 >= _12;
Goto(bb22)
}
bb24 = {
_11 = 34523_u16;
(*_31) = (_28, (-8129269504324948057_i64));
(*_31).0 = _30.1 as i128;
(*_16).0 = !_10;
(*_16).0 = !_10;
(*_31).1 = -(-3121790213516386423_i64);
(*_16).0 = (*_31).0 != (*_31).0;
(*_16) = (_12,);
_4 = &(*_31).0;
(*_16).0 = _10 | _10;
(*_31) = (_28, 8065436562773491951_i64);
(*_31).0 = _28 + _28;
match (*_31).1 {
0 => bb7,
1 => bb15,
2 => bb18,
3 => bb14,
4 => bb25,
8065436562773491951 => bb27,
_ => bb26
}
}
bb25 = {
(*_16) = (_12,);
(*_16) = (_12,);
_11 = !28180_u16;
_39 = [_15,_15,_15,_15,_15,_15,_15];
(*_16).0 = (*_31).1 > (*_31).1;
_38 = core::ptr::addr_of!(_17);
(*_31) = (_28, 2250927825532133057_i64);
_10 = _12 & _12;
(*_16).0 = _24 >= _12;
Goto(bb22)
}
bb26 = {
(*_16) = (_12,);
(*_16) = (_24,);
(*_16) = (_24,);
_26 = !_22.0;
(*_16) = (_10,);
_14 = _2;
(*_16) = (_24,);
(*_16) = (_12,);
(*_16) = (_24,);
_30.0 = _14 as i128;
(*_16) = (_12,);
_30 = (18755339269555872432338938894293083860_i128, 7280222271401487819_i64);
(*_16) = (_24,);
Goto(bb17)
}
bb27 = {
_19 = _23;
_18 = (*_16).0 > (*_16).0;
Goto(bb28)
}
bb28 = {
(*_31).1 = (-8744433705965739806_i64) >> (*_31).0;
(*_31) = (_28, 4768504148981250662_i64);
(*_38) = _32 as i16;
(*_38) = _21 as i16;
(*_31) = (_28, (-8744911428203543839_i64));
(*_38) = (-2354_i16) * (-16242_i16);
(*_16).0 = !_18;
(*_38) = (-6923_i16);
(*_16).0 = (*_31).0 == (*_31).0;
(*_38) = !(-3042_i16);
(*_16) = (_18,);
(*_31) = (_28, (-8794624622754963808_i64));
(*_16).0 = _18;
(*_31) = (_28, 380493861172105581_i64);
(*_31) = (_28, (-5638048627959629461_i64));
_42 = _22.0 ^ _22.0;
(*_16) = (_24,);
(*_31) = (_28, (-3297477100763179309_i64));
match (*_31).1 {
0 => bb18,
1 => bb23,
2 => bb15,
3 => bb7,
4 => bb8,
5 => bb29,
340282366920938463460077130331005032147 => bb31,
_ => bb30
}
}
bb29 = {
(*_16) = (_24,);
(*_31).1 = (-7989508032603875689_i64);
(*_16).0 = _10;
_28 = _22.0 as i128;
(*_16).0 = _24 ^ _10;
_25 = _14 - _32;
_30.0 = !_28;
(*_16).0 = (*_31).1 >= (*_31).1;
(*_16) = (_12,);
_28 = -(*_31).0;
(*_16).0 = !_24;
(*_16).0 = (*_31).0 < _28;
(*_16).0 = _10;
_32 = _25 - _2;
(*_31).0 = _28 >> (*_31).1;
Call(_1 = core::intrinsics::bswap(17_isize), ReturnTo(bb21), UnwindUnreachable())
}
bb30 = {
(*_16) = (_12,);
(*_16) = (_12,);
_11 = !28180_u16;
_39 = [_15,_15,_15,_15,_15,_15,_15];
(*_16).0 = (*_31).1 > (*_31).1;
_38 = core::ptr::addr_of!(_17);
(*_31) = (_28, 2250927825532133057_i64);
_10 = _12 & _12;
(*_16).0 = _24 >= _12;
Goto(bb22)
}
bb31 = {
(*_16) = (_10,);
(*_16).0 = !_18;
_14 = RET as f64;
(*_31).0 = _28;
(*_16).0 = _10 | _10;
(*_16) = (_18,);
(*_38) = (-23653_i16) | 7358_i16;
_49.fld3.0 = _15;
_49.fld7 = (819032700_i32,);
Goto(bb32)
}
bb32 = {
_25 = _32 + _32;
_15 = _36;
(*_31).0 = _28;
(*_31).0 = _28;
(*_31).1 = (-1366603675485387348_i64) << (*_31).0;
_40 = _1 * _1;
(*_16) = (_10,);
_51 = [(-104_i8),39_i8,(-56_i8),103_i8];
_54 = -(*_31).1;
(*_31) = (_28, _54);
(*_31) = (_28, _54);
(*_31).0 = -_28;
_39 = [_49.fld3.0,_36,_36,_36,_15,_49.fld3.0,_15];
_12 = (*_16).0;
(*_31) = (_28, _54);
(*_38) = 6046_i16;
_25 = _2;
match (*_38) {
0 => bb9,
1 => bb4,
6046 => bb33,
_ => bb18
}
}
bb33 = {
_21 = 1030173352_u32 * 813374474_u32;
(*_38) = (-5963_i16) * (-5652_i16);
_37 = core::ptr::addr_of!(_49.fld5);
(*_38) = (-19802_i16) | (-1684_i16);
(*_31) = (_28, _54);
(*_38) = -23687_i16;
(*_16).0 = _18 == _10;
_4 = &_28;
(*_37) = 18057892018481544642_u64 | 2458763786515784912_u64;
(*_31).0 = _49.fld7.0 as i128;
(*_16).0 = _10 > _12;
_49.fld6 = (*_31).1;
_20.1 = core::ptr::addr_of!(_46);
(*_31) = ((*_4), _49.fld6);
(*_38) = 26610_i16;
_49.fld3.0 = _15;
(*_31) = ((*_4), _54);
(*_38) = (-23783_i16) >> (*_4);
(*_31) = ((*_4), _49.fld6);
(*_37) = (*_31).1 as u64;
Goto(bb34)
}
bb34 = {
(*_16).0 = (*_37) == (*_37);
(*_16) = (_12,);
(*_16).0 = (*_31).0 <= (*_4);
(*_16).0 = _26 < _42;
(*_31).1 = _11 as i64;
(*_31).1 = _54 - _49.fld6;
(*_16).0 = _10 | _18;
_49.fld3.0 = _15;
_4 = &_30.0;
(*_38) = -2397_i16;
_24 = (*_16).0 <= (*_16).0;
(*_16) = (_24,);
_24 = (*_16).0 < (*_16).0;
(*_31).1 = _49.fld6;
match _49.fld7.0 {
0 => bb35,
1 => bb36,
2 => bb37,
3 => bb38,
4 => bb39,
819032700 => bb41,
_ => bb40
}
}
bb35 = {
(*_16) = (_12,);
(*_16) = (_24,);
(*_16) = (_24,);
_26 = !_22.0;
(*_16) = (_10,);
_14 = _2;
(*_16) = (_24,);
(*_16) = (_12,);
(*_16) = (_24,);
_30.0 = _14 as i128;
(*_16) = (_12,);
_30 = (18755339269555872432338938894293083860_i128, 7280222271401487819_i64);
(*_16) = (_24,);
Goto(bb17)
}
bb36 = {
_6 = [_1,_1,_1,_1,_1];
_2 = _1 as f64;
_5.0 = _10 | _10;
RET = 4231116845_u32 as f32;
_6 = [_1,_1,_1,_1,_1];
_5.0 = _10;
_11 = !2569_u16;
_12 = !_5.0;
_9.1 = [819220086_u32,299630228_u32,1853654871_u32,2713404011_u32,3671288818_u32];
_1 = -9223372036854775807_isize;
_13 = _2 + _2;
_6 = [_1,_1,_1,_1,_1];
_9.1 = [3446940613_u32,1635420602_u32,517833296_u32,1220288265_u32,1574093133_u32];
_1 = 9223372036854775807_isize + (-9223372036854775808_isize);
_5.0 = _10;
_12 = _10;
_7 = [63221262982292530900993362027417607967_i128,110312106436793101693830657975047050260_i128,103138293241647341522856352306718210372_i128,(-34745429745175624802286851649742764098_i128),65676042516685039312822663889983589342_i128,(-157577446824007573813373400868905114019_i128)];
Goto(bb5)
}
bb37 = {
_14 = _13 - _2;
(*_16).0 = _12 | _12;
Goto(bb7)
}
bb38 = {
(*_16).0 = _10 | _10;
(*_16).0 = _14 >= _14;
_7 = [52805347456379485493805136986394064675_i128,(-97631614535655388954450166467238729009_i128),(-54072005366458972993340039287122200710_i128),(-148515942999352526061801950632799438846_i128),(-98475835342661750624367304397525267558_i128),(-150101941777879455836676220592851531637_i128)];
(*_16).0 = _11 > _11;
_15 = '\u{52674}';
(*_16).0 = _12 ^ _12;
(*_16) = (_10,);
_21 = 795664232_u32;
(*_16) = (_10,);
(*_16).0 = _2 <= _13;
(*_16).0 = _10;
_17 = (-12347_i16) - 13668_i16;
(*_16) = (_12,);
(*_16).0 = _12 & _10;
(*_16).0 = _10 ^ _10;
match _21 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
795664232 => bb8,
_ => bb5
}
}
bb39 = {
(*_16) = (_24,);
(*_31).1 = (-7989508032603875689_i64);
(*_16).0 = _10;
_28 = _22.0 as i128;
(*_16).0 = _24 ^ _10;
_25 = _14 - _32;
_30.0 = !_28;
(*_16).0 = (*_31).1 >= (*_31).1;
(*_16) = (_12,);
_28 = -(*_31).0;
(*_16).0 = !_24;
(*_16).0 = (*_31).0 < _28;
(*_16).0 = _10;
_32 = _25 - _2;
(*_31).0 = _28 >> (*_31).1;
Call(_1 = core::intrinsics::bswap(17_isize), ReturnTo(bb21), UnwindUnreachable())
}
bb40 = {
(*_16) = (_12,);
(*_16) = (_12,);
_11 = !28180_u16;
_39 = [_15,_15,_15,_15,_15,_15,_15];
(*_16).0 = (*_31).1 > (*_31).1;
_38 = core::ptr::addr_of!(_17);
(*_31) = (_28, 2250927825532133057_i64);
_10 = _12 & _12;
(*_16).0 = _24 >= _12;
Goto(bb22)
}
bb41 = {
_49.fld3.3 = _32 + _13;
(*_16).0 = _18 <= _24;
(*_31).0 = !_28;
(*_16).0 = _12 ^ _24;
(*_31).1 = _54;
_1 = _40;
(*_16).0 = _18;
_59 = _49.fld7.0 | _49.fld7.0;
(*_31) = (_28, _49.fld6);
(*_31) = (_28, _54);
(*_31).0 = (*_37) as i128;
_28 = (*_31).0 & (*_31).0;
(*_37) = _21 as u64;
(*_38) = !4204_i16;
(*_31).0 = _26 as i128;
_60.3 = 62_i8 as f64;
(*_31).1 = -_49.fld6;
_53 = -(*_31).0;
_25 = -_32;
_49.fld3.1 = _42 + _42;
_49.fld3.2 = _36 as u32;
Goto(bb42)
}
bb42 = {
(*_31).1 = (*_16).0 as i64;
_20.0 = _40 ^ _1;
(*_37) = 9794488097344234788_u64 & 15790878005626619993_u64;
(*_37) = !5698462751857630481_u64;
_47 = [_11,_11,_11];
(*_31) = (_28, _54);
(*_37) = 14752471165898975200_u64 - 12946847116248497647_u64;
_29 = &mut (*_37);
(*_31).0 = 7_usize as i128;
(*_16).0 = _18 & _18;
_38 = core::ptr::addr_of!((*_38));
Call((*_31).1 = core::intrinsics::transmute((*_29)), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
(*_29) = 11952933576780629865_u64 | 12841532358885193390_u64;
_65 = &mut (*_16);
(*_31).0 = _28 | _28;
(*_31).1 = _20.0 as i64;
(*_29) = 14403679201952597468_u64;
(*_31) = (_53, _54);
(*_65) = (_18,);
(*_38) = 18378_i16 + (-4397_i16);
(*_31).0 = _28 | _53;
(*_31).0 = _28;
_42 = _22.0 & _26;
(*_31).0 = !_28;
(*_31).1 = _54;
(*_65).0 = _24;
(*_29) = 13396152873546557847_u64;
(*_65).0 = !_24;
_52 = _20.0 as u16;
_64 = _32 - _32;
(*_31).1 = -_54;
Goto(bb44)
}
bb44 = {
(*_31).0 = _28;
(*_29) = 1473680734921360458_u64 >> (*_31).0;
_47 = [_52,_52,_52];
(*_65).0 = _18;
(*_31).1 = _54 + _54;
_50 = (*_65).0;
(*_31).0 = _28 & _28;
(*_38) = !(-1245_i16);
(*_31).1 = _20.0 as i64;
(*_31) = (_28, _54);
(*_31).1 = _28 as i64;
_71 = [(*_31).1,(*_31).1];
_27 = _36;
_32 = _25;
(*_31).0 = _28 ^ _53;
match _11 {
34523 => bb46,
_ => bb45
}
}
bb45 = {
(*_16).0 = _10 | _10;
(*_16).0 = _14 >= _14;
_7 = [52805347456379485493805136986394064675_i128,(-97631614535655388954450166467238729009_i128),(-54072005366458972993340039287122200710_i128),(-148515942999352526061801950632799438846_i128),(-98475835342661750624367304397525267558_i128),(-150101941777879455836676220592851531637_i128)];
(*_16).0 = _11 > _11;
_15 = '\u{52674}';
(*_16).0 = _12 ^ _12;
(*_16) = (_10,);
_21 = 795664232_u32;
(*_16) = (_10,);
(*_16).0 = _2 <= _13;
(*_16).0 = _10;
_17 = (-12347_i16) - 13668_i16;
(*_16) = (_12,);
(*_16).0 = _12 & _10;
(*_16).0 = _10 ^ _10;
match _21 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
795664232 => bb8,
_ => bb5
}
}
bb46 = {
(*_65).0 = !_24;
(*_38) = 26543_i16;
(*_31).0 = -_28;
(*_29) = 17329462981069550995_u64;
(*_31).0 = !_53;
(*_29) = 3531184077116217359_u64 << (*_31).1;
(*_38) = _27 as i16;
(*_29) = 5626381169680090780_u64 | 5933729519862969893_u64;
match _11 {
0 => bb47,
1 => bb48,
34523 => bb50,
_ => bb49
}
}
bb47 = {
(*_16) = (_10,);
(*_16).0 = !_18;
_14 = RET as f64;
(*_31).0 = _28;
(*_16).0 = _10 | _10;
(*_16) = (_18,);
(*_38) = (-23653_i16) | 7358_i16;
_49.fld3.0 = _15;
_49.fld7 = (819032700_i32,);
Goto(bb32)
}
bb48 = {
(*_16).0 = _10 | _10;
(*_16).0 = _14 >= _14;
_7 = [52805347456379485493805136986394064675_i128,(-97631614535655388954450166467238729009_i128),(-54072005366458972993340039287122200710_i128),(-148515942999352526061801950632799438846_i128),(-98475835342661750624367304397525267558_i128),(-150101941777879455836676220592851531637_i128)];
(*_16).0 = _11 > _11;
_15 = '\u{52674}';
(*_16).0 = _12 ^ _12;
(*_16) = (_10,);
_21 = 795664232_u32;
(*_16) = (_10,);
(*_16).0 = _2 <= _13;
(*_16).0 = _10;
_17 = (-12347_i16) - 13668_i16;
(*_16) = (_12,);
(*_16).0 = _12 & _10;
(*_16).0 = _10 ^ _10;
match _21 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
795664232 => bb8,
_ => bb5
}
}
bb49 = {
(*_31).1 = (-8744433705965739806_i64) >> (*_31).0;
(*_31) = (_28, 4768504148981250662_i64);
(*_38) = _32 as i16;
(*_38) = _21 as i16;
(*_31) = (_28, (-8744911428203543839_i64));
(*_38) = (-2354_i16) * (-16242_i16);
(*_16).0 = !_18;
(*_38) = (-6923_i16);
(*_16).0 = (*_31).0 == (*_31).0;
(*_38) = !(-3042_i16);
(*_16) = (_18,);
(*_31) = (_28, (-8794624622754963808_i64));
(*_16).0 = _18;
(*_31) = (_28, 380493861172105581_i64);
(*_31) = (_28, (-5638048627959629461_i64));
_42 = _22.0 ^ _22.0;
(*_16) = (_24,);
(*_31) = (_28, (-3297477100763179309_i64));
match (*_31).1 {
0 => bb18,
1 => bb23,
2 => bb15,
3 => bb7,
4 => bb8,
5 => bb29,
340282366920938463460077130331005032147 => bb31,
_ => bb30
}
}
bb50 = {
_66 = (*_65).0 < (*_65).0;
(*_29) = 41975653598500393605162159391644877416_u128 as u64;
_22.0 = _42 + _26;
(*_31).1 = _64 as i64;
_27 = _15;
_31 = core::ptr::addr_of!(_30);
(*_65).0 = !_66;
Goto(bb51)
}
bb51 = {
Call(_79 = dump_var(16_usize, 5_usize, Move(_5), 51_usize, Move(_51), 40_usize, Move(_40), 50_usize, Move(_50)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_79 = dump_var(16_usize, 71_usize, Move(_71), 52_usize, Move(_52), 24_usize, Move(_24), 30_usize, Move(_30)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_79 = dump_var(16_usize, 26_usize, Move(_26), 10_usize, Move(_10), 59_usize, Move(_59), 53_usize, Move(_53)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_79 = dump_var(16_usize, 18_usize, Move(_18), 11_usize, Move(_11), 1_usize, Move(_1), 80_usize, _80), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: (bool,),mut _2: f32,mut _3: isize,mut _4: (bool,),mut _5: (bool,),mut _6: isize,mut _7: f64,mut _8: isize,mut _9: isize,mut _10: (bool,),mut _11: f64) -> [isize; 5] {
mir! {
type RET = [isize; 5];
let _12: &'static (i32, *mut [u16; 2], bool, f64);
let _13: isize;
let _14: isize;
let _15: (Adt45,);
let _16: u32;
let _17: bool;
let _18: f32;
let _19: *const u64;
let _20: (i32, *mut [u16; 2], bool, f64);
let _21: f64;
let _22: f32;
let _23: [i16; 5];
let _24: (u128,);
let _25: (u128,);
let _26: (*const u64, i32, (u16, u8), Adt43);
let _27: [i16; 5];
let _28: isize;
let _29: char;
let _30: [u16; 3];
let _31: *const (char, u8, u32, f64);
let _32: *mut (bool,);
let _33: f64;
let _34: char;
let _35: isize;
let _36: Adt72;
let _37: f32;
let _38: i16;
let _39: char;
let _40: isize;
let _41: char;
let _42: *const (char, u8, u32, f64);
let _43: isize;
let _44: [u32; 7];
let _45: &'static mut (bool,);
let _46: u16;
let _47: *const u64;
let _48: *const i16;
let _49: i16;
let _50: u8;
let _51: &'static mut [u16; 2];
let _52: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _53: &'static mut (bool,);
let _54: &'static usize;
let _55: isize;
let _56: u8;
let _57: u8;
let _58: u64;
let _59: f32;
let _60: u32;
let _61: i8;
let _62: &'static mut Adt35;
let _63: bool;
let _64: usize;
let _65: char;
let _66: i32;
let _67: i16;
let _68: ();
let _69: ();
{
_2 = 1727185238_i32 as f32;
_11 = _7;
_1 = (_5.0,);
_4 = (_1.0,);
_9 = _8 & _6;
_11 = _7 - _7;
_10.0 = _1.0 >= _1.0;
_6 = _9 * _3;
_8 = _3;
_11 = _7 - _7;
_1.0 = _4.0 != _4.0;
_11 = _7 - _7;
_7 = _11 - _11;
_3 = 106_u8 as isize;
Goto(bb1)
}
bb1 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb2 = {
_8 = _6;
_18 = _2 - _2;
_7 = _11 * _11;
_20.2 = _1.0;
_7 = (-132866936718670131186793114944984328991_i128) as f64;
_6 = !_3;
_10 = (_20.2,);
_14 = -_6;
RET = [_6,_6,_3,_8,_14];
_3 = -_14;
_1.0 = _4.0 | _4.0;
_4.0 = _1.0;
_2 = _18 + _18;
_1 = _4;
_22 = _18 * _2;
_20.3 = -_11;
_22 = (-12925_i16) as f32;
_23 = [15725_i16,6437_i16,24059_i16,17250_i16,24116_i16];
_20.0 = -(-157700711_i32);
_7 = 2765091638940471905_u64 as f64;
_22 = -_18;
_13 = 38732_u16 as isize;
_8 = -_9;
_24 = (170715615831436408038729398668625096274_u128,);
_21 = -_20.3;
Goto(bb3)
}
bb3 = {
_25.0 = _24.0;
_23 = [(-18833_i16),(-659_i16),(-23830_i16),(-11573_i16),2034_i16];
_2 = _18 - _18;
_22 = _2;
_26.3.fld3.3 = (-6825418619357550490_i64) as f64;
_20.3 = -_21;
_4.0 = _1.0 ^ _1.0;
_26.3.fld7 = (_20.0,);
_26.2.1 = 217_u8 << _6;
_4.0 = _10.0 ^ _1.0;
_27 = [(-12664_i16),(-16127_i16),29990_i16,8184_i16,(-32366_i16)];
_24 = (_25.0,);
_20.0 = _26.3.fld7.0;
_26.2.0 = !6252_u16;
_26.0 = core::ptr::addr_of!(_26.3.fld5);
match _25.0 {
0 => bb1,
170715615831436408038729398668625096274 => bb5,
_ => bb4
}
}
bb4 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb5 = {
_3 = _14 - _9;
_26.3.fld6 = '\u{278f6}' as i64;
_5 = _1;
_26.3.fld4 = _5;
_26.3.fld7 = (_20.0,);
_26.2 = (21313_u16, 60_u8);
_4 = (_26.3.fld4.0,);
_25 = (_24.0,);
_3 = _6;
_26.3.fld3 = ('\u{c7839}', _26.2.1, 1896561479_u32, _7);
_17 = !_1.0;
_26.3.fld5 = 12711694025961118713_u64 & 3915767956814212156_u64;
_11 = -_7;
_3 = _26.2.0 as isize;
_26.3.fld3 = ('\u{45b0}', _26.2.1, 3934119397_u32, _21);
_9 = _8;
_22 = -_2;
_26.3.fld2 = _3 - _6;
_31 = core::ptr::addr_of!(_26.3.fld3);
(*_31).3 = _21 - _20.3;
Goto(bb6)
}
bb6 = {
(*_31).1 = _26.2.1 - _26.2.1;
_8 = _26.3.fld2;
(*_31).2 = 3280819266_u32 * 4256302598_u32;
(*_31).2 = !3419387310_u32;
_7 = (*_31).3 + _20.3;
(*_31).3 = _11 - _21;
(*_31) = ('\u{eb098}', _26.2.1, 676018366_u32, _7);
(*_31) = ('\u{4ad25}', _26.2.1, 1898593479_u32, _7);
(*_31).2 = 3761605817_u32;
(*_31).3 = _25.0 as f64;
_4 = (_17,);
(*_31) = ('\u{37485}', _26.2.1, 2820483729_u32, _21);
_14 = 101317298193799939970938734289478587311_i128 as isize;
_10 = (_5.0,);
_26.3.fld3.2 = !255110552_u32;
(*_31).0 = '\u{5e00f}';
(*_31).1 = (*_31).0 as u8;
match _26.2.0 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
21313 => bb14,
_ => bb13
}
}
bb7 = {
_3 = _14 - _9;
_26.3.fld6 = '\u{278f6}' as i64;
_5 = _1;
_26.3.fld4 = _5;
_26.3.fld7 = (_20.0,);
_26.2 = (21313_u16, 60_u8);
_4 = (_26.3.fld4.0,);
_25 = (_24.0,);
_3 = _6;
_26.3.fld3 = ('\u{c7839}', _26.2.1, 1896561479_u32, _7);
_17 = !_1.0;
_26.3.fld5 = 12711694025961118713_u64 & 3915767956814212156_u64;
_11 = -_7;
_3 = _26.2.0 as isize;
_26.3.fld3 = ('\u{45b0}', _26.2.1, 3934119397_u32, _21);
_9 = _8;
_22 = -_2;
_26.3.fld2 = _3 - _6;
_31 = core::ptr::addr_of!(_26.3.fld3);
(*_31).3 = _21 - _20.3;
Goto(bb6)
}
bb8 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb9 = {
_25.0 = _24.0;
_23 = [(-18833_i16),(-659_i16),(-23830_i16),(-11573_i16),2034_i16];
_2 = _18 - _18;
_22 = _2;
_26.3.fld3.3 = (-6825418619357550490_i64) as f64;
_20.3 = -_21;
_4.0 = _1.0 ^ _1.0;
_26.3.fld7 = (_20.0,);
_26.2.1 = 217_u8 << _6;
_4.0 = _10.0 ^ _1.0;
_27 = [(-12664_i16),(-16127_i16),29990_i16,8184_i16,(-32366_i16)];
_24 = (_25.0,);
_20.0 = _26.3.fld7.0;
_26.2.0 = !6252_u16;
_26.0 = core::ptr::addr_of!(_26.3.fld5);
match _25.0 {
0 => bb1,
170715615831436408038729398668625096274 => bb5,
_ => bb4
}
}
bb10 = {
_8 = _6;
_18 = _2 - _2;
_7 = _11 * _11;
_20.2 = _1.0;
_7 = (-132866936718670131186793114944984328991_i128) as f64;
_6 = !_3;
_10 = (_20.2,);
_14 = -_6;
RET = [_6,_6,_3,_8,_14];
_3 = -_14;
_1.0 = _4.0 | _4.0;
_4.0 = _1.0;
_2 = _18 + _18;
_1 = _4;
_22 = _18 * _2;
_20.3 = -_11;
_22 = (-12925_i16) as f32;
_23 = [15725_i16,6437_i16,24059_i16,17250_i16,24116_i16];
_20.0 = -(-157700711_i32);
_7 = 2765091638940471905_u64 as f64;
_22 = -_18;
_13 = 38732_u16 as isize;
_8 = -_9;
_24 = (170715615831436408038729398668625096274_u128,);
_21 = -_20.3;
Goto(bb3)
}
bb11 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_9 = _24.0 as isize;
(*_31) = ('\u{104cd}', _26.2.1, 713314596_u32, _7);
_30 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).0 = '\u{dfafa}';
_29 = (*_31).0;
_26.2.0 = 62263_u16 | 53642_u16;
(*_31).2 = 2009862901_u32;
_26.3.fld3 = (_29, _26.2.1, 4229084277_u32, _21);
_26.3.fld0 = [(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0];
Goto(bb15)
}
bb15 = {
(*_31).3 = _7 * _7;
Call((*_31).3 = fn18(_26.3.fld6, Move(_26.0), (*_31).1, (*_31).2, (*_31).2, (*_31).1, (*_31).0, Move(_31), (*_31).2, _25.0, _26.3.fld2, (*_31).2), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_26.0 = core::ptr::addr_of!(_26.3.fld5);
_11 = _26.3.fld3.3 * _26.3.fld3.3;
_2 = _26.3.fld3.2 as f32;
_31 = core::ptr::addr_of!(_26.3.fld3);
(*_31).0 = _29;
_4 = (_20.2,);
(*_31) = (_29, _26.2.1, 3431858170_u32, _11);
(*_31).3 = _11;
(*_31) = (_29, _26.2.1, 402672699_u32, _11);
_26.1 = _20.0 ^ _26.3.fld7.0;
(*_31).1 = _26.2.1 & _26.2.1;
(*_31).2 = !1562572553_u32;
_18 = _2 - _2;
(*_31).3 = -_11;
(*_31).3 = _20.3;
_9 = _26.3.fld2 >> (*_31).1;
_2 = (*_31).3 as f32;
(*_31).3 = _24.0 as f64;
(*_31).2 = (*_31).1 as u32;
(*_31).0 = _29;
_3 = _9 * _8;
(*_31).3 = -_11;
(*_31).1 = _26.2.1 - _26.2.1;
(*_31).0 = _29;
(*_31).1 = _26.2.1 << (*_31).2;
match _26.2.1 {
0 => bb1,
1 => bb2,
2 => bb15,
3 => bb4,
4 => bb10,
60 => bb17,
_ => bb12
}
}
bb17 = {
_3 = _26.3.fld2 * _8;
(*_31).2 = 1934945467_u32 | 1395013072_u32;
_35 = _9;
_26.3.fld7.0 = _26.1 + _26.1;
(*_31).2 = 1639424907_u32 >> (*_31).1;
_26.3.fld3.3 = _11;
_37 = _26.3.fld7.0 as f32;
(*_31).3 = _7 - _7;
_14 = _26.3.fld6 as isize;
(*_31).2 = 1141537239_u32 | 3313525188_u32;
(*_31).3 = _26.2.0 as f64;
(*_31).0 = _29;
_23 = [(-14540_i16),(-4275_i16),20536_i16,1870_i16,(-31476_i16)];
_33 = (*_31).3 * _11;
_19 = core::ptr::addr_of!(_26.3.fld5);
(*_31).0 = _29;
_41 = (*_31).0;
_36.fld5 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).3 = _24.0 as f64;
match _25.0 {
0 => bb11,
1 => bb9,
2 => bb7,
3 => bb18,
4 => bb19,
170715615831436408038729398668625096274 => bb21,
_ => bb20
}
}
bb18 = {
_26.0 = core::ptr::addr_of!(_26.3.fld5);
_11 = _26.3.fld3.3 * _26.3.fld3.3;
_2 = _26.3.fld3.2 as f32;
_31 = core::ptr::addr_of!(_26.3.fld3);
(*_31).0 = _29;
_4 = (_20.2,);
(*_31) = (_29, _26.2.1, 3431858170_u32, _11);
(*_31).3 = _11;
(*_31) = (_29, _26.2.1, 402672699_u32, _11);
_26.1 = _20.0 ^ _26.3.fld7.0;
(*_31).1 = _26.2.1 & _26.2.1;
(*_31).2 = !1562572553_u32;
_18 = _2 - _2;
(*_31).3 = -_11;
(*_31).3 = _20.3;
_9 = _26.3.fld2 >> (*_31).1;
_2 = (*_31).3 as f32;
(*_31).3 = _24.0 as f64;
(*_31).2 = (*_31).1 as u32;
(*_31).0 = _29;
_3 = _9 * _8;
(*_31).3 = -_11;
(*_31).1 = _26.2.1 - _26.2.1;
(*_31).0 = _29;
(*_31).1 = _26.2.1 << (*_31).2;
match _26.2.1 {
0 => bb1,
1 => bb2,
2 => bb15,
3 => bb4,
4 => bb10,
60 => bb17,
_ => bb12
}
}
bb19 = {
_8 = _6;
_18 = _2 - _2;
_7 = _11 * _11;
_20.2 = _1.0;
_7 = (-132866936718670131186793114944984328991_i128) as f64;
_6 = !_3;
_10 = (_20.2,);
_14 = -_6;
RET = [_6,_6,_3,_8,_14];
_3 = -_14;
_1.0 = _4.0 | _4.0;
_4.0 = _1.0;
_2 = _18 + _18;
_1 = _4;
_22 = _18 * _2;
_20.3 = -_11;
_22 = (-12925_i16) as f32;
_23 = [15725_i16,6437_i16,24059_i16,17250_i16,24116_i16];
_20.0 = -(-157700711_i32);
_7 = 2765091638940471905_u64 as f64;
_22 = -_18;
_13 = 38732_u16 as isize;
_8 = -_9;
_24 = (170715615831436408038729398668625096274_u128,);
_21 = -_20.3;
Goto(bb3)
}
bb20 = {
Return()
}
bb21 = {
(*_31).0 = _29;
(*_31).1 = _26.2.1 - _26.2.1;
_40 = _26.3.fld7.0 as isize;
_32 = core::ptr::addr_of_mut!(_5);
match _24.0 {
0 => bb22,
1 => bb23,
2 => bb24,
3 => bb25,
4 => bb26,
5 => bb27,
6 => bb28,
170715615831436408038729398668625096274 => bb30,
_ => bb29
}
}
bb22 = {
_8 = _6;
_18 = _2 - _2;
_7 = _11 * _11;
_20.2 = _1.0;
_7 = (-132866936718670131186793114944984328991_i128) as f64;
_6 = !_3;
_10 = (_20.2,);
_14 = -_6;
RET = [_6,_6,_3,_8,_14];
_3 = -_14;
_1.0 = _4.0 | _4.0;
_4.0 = _1.0;
_2 = _18 + _18;
_1 = _4;
_22 = _18 * _2;
_20.3 = -_11;
_22 = (-12925_i16) as f32;
_23 = [15725_i16,6437_i16,24059_i16,17250_i16,24116_i16];
_20.0 = -(-157700711_i32);
_7 = 2765091638940471905_u64 as f64;
_22 = -_18;
_13 = 38732_u16 as isize;
_8 = -_9;
_24 = (170715615831436408038729398668625096274_u128,);
_21 = -_20.3;
Goto(bb3)
}
bb23 = {
_8 = _6;
_18 = _2 - _2;
_7 = _11 * _11;
_20.2 = _1.0;
_7 = (-132866936718670131186793114944984328991_i128) as f64;
_6 = !_3;
_10 = (_20.2,);
_14 = -_6;
RET = [_6,_6,_3,_8,_14];
_3 = -_14;
_1.0 = _4.0 | _4.0;
_4.0 = _1.0;
_2 = _18 + _18;
_1 = _4;
_22 = _18 * _2;
_20.3 = -_11;
_22 = (-12925_i16) as f32;
_23 = [15725_i16,6437_i16,24059_i16,17250_i16,24116_i16];
_20.0 = -(-157700711_i32);
_7 = 2765091638940471905_u64 as f64;
_22 = -_18;
_13 = 38732_u16 as isize;
_8 = -_9;
_24 = (170715615831436408038729398668625096274_u128,);
_21 = -_20.3;
Goto(bb3)
}
bb24 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb25 = {
_25.0 = _24.0;
_23 = [(-18833_i16),(-659_i16),(-23830_i16),(-11573_i16),2034_i16];
_2 = _18 - _18;
_22 = _2;
_26.3.fld3.3 = (-6825418619357550490_i64) as f64;
_20.3 = -_21;
_4.0 = _1.0 ^ _1.0;
_26.3.fld7 = (_20.0,);
_26.2.1 = 217_u8 << _6;
_4.0 = _10.0 ^ _1.0;
_27 = [(-12664_i16),(-16127_i16),29990_i16,8184_i16,(-32366_i16)];
_24 = (_25.0,);
_20.0 = _26.3.fld7.0;
_26.2.0 = !6252_u16;
_26.0 = core::ptr::addr_of!(_26.3.fld5);
match _25.0 {
0 => bb1,
170715615831436408038729398668625096274 => bb5,
_ => bb4
}
}
bb26 = {
_3 = _14 - _9;
_26.3.fld6 = '\u{278f6}' as i64;
_5 = _1;
_26.3.fld4 = _5;
_26.3.fld7 = (_20.0,);
_26.2 = (21313_u16, 60_u8);
_4 = (_26.3.fld4.0,);
_25 = (_24.0,);
_3 = _6;
_26.3.fld3 = ('\u{c7839}', _26.2.1, 1896561479_u32, _7);
_17 = !_1.0;
_26.3.fld5 = 12711694025961118713_u64 & 3915767956814212156_u64;
_11 = -_7;
_3 = _26.2.0 as isize;
_26.3.fld3 = ('\u{45b0}', _26.2.1, 3934119397_u32, _21);
_9 = _8;
_22 = -_2;
_26.3.fld2 = _3 - _6;
_31 = core::ptr::addr_of!(_26.3.fld3);
(*_31).3 = _21 - _20.3;
Goto(bb6)
}
bb27 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb28 = {
_9 = _24.0 as isize;
(*_31) = ('\u{104cd}', _26.2.1, 713314596_u32, _7);
_30 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).0 = '\u{dfafa}';
_29 = (*_31).0;
_26.2.0 = 62263_u16 | 53642_u16;
(*_31).2 = 2009862901_u32;
_26.3.fld3 = (_29, _26.2.1, 4229084277_u32, _21);
_26.3.fld0 = [(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0,(*_31).0];
Goto(bb15)
}
bb29 = {
Return()
}
bb30 = {
(*_31).1 = _26.2.1 | _26.2.1;
(*_31).3 = -_33;
_26.3.fld7 = (_20.0,);
_39 = (*_31).0;
_32 = core::ptr::addr_of_mut!((*_32));
(*_31).2 = !3505914569_u32;
_33 = -(*_31).3;
(*_19) = 4755813561529385993_u64 * 1016330440719049428_u64;
_28 = _35;
_36.fld3 = core::ptr::addr_of!(_18);
(*_19) = 4709538950069203158_u64 | 6266773345927424928_u64;
(*_31).3 = _11 - _33;
(*_32).0 = _1.0;
_36.fld0 = _35 as usize;
_16 = !(*_31).2;
(*_31).1 = _26.2.1 - _26.2.1;
_36.fld5 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).2 = _16 ^ _16;
(*_32) = _10;
_26.3.fld6 = -(-5377716186415187992_i64);
(*_31).3 = _11 - _7;
_47 = Move(_19);
(*_31).3 = _7 * _20.3;
(*_31).3 = _26.3.fld6 as f64;
Goto(bb31)
}
bb31 = {
_32 = core::ptr::addr_of_mut!(_5);
(*_31).0 = _41;
_17 = (*_32).0;
Goto(bb32)
}
bb32 = {
_26.0 = core::ptr::addr_of!(_26.3.fld5);
(*_32) = (_1.0,);
(*_31).2 = !_16;
(*_31).0 = _39;
_41 = (*_31).0;
_13 = -_35;
_29 = (*_31).0;
(*_32).0 = !_26.3.fld4.0;
(*_31).0 = _41;
(*_32).0 = _33 < (*_31).3;
(*_31).1 = _26.2.1;
_26.3.fld0 = [(*_31).0,(*_31).0,(*_31).0,(*_31).0,_29,_26.3.fld3.0,(*_31).0];
(*_32).0 = _20.2;
(*_31) = (_29, _26.2.1, _16, _7);
(*_31).3 = 63_i8 as f64;
_40 = _13;
(*_31).1 = !_26.2.1;
(*_31).2 = (*_31).1 as u32;
(*_31).3 = -_11;
_27 = [(-7832_i16),(-5762_i16),(-22259_i16),4342_i16,20842_i16];
_21 = (*_31).2 as f64;
(*_32) = (_4.0,);
(*_32) = (_26.3.fld4.0,);
_19 = core::ptr::addr_of!(_26.3.fld5);
Goto(bb33)
}
bb33 = {
(*_31).2 = _16 << _6;
(*_31).0 = _29;
_42 = core::ptr::addr_of!((*_31));
(*_31).3 = _22 as f64;
(*_31).3 = 10628_i16 as f64;
Goto(bb34)
}
bb34 = {
(*_32).0 = !_10.0;
(*_31) = (_29, _26.2.1, _16, _21);
_25 = (_24.0,);
_34 = _41;
(*_31).2 = _16 * _16;
(*_31).2 = (*_19) as u32;
match (*_31).1 {
0 => bb35,
1 => bb36,
2 => bb37,
3 => bb38,
60 => bb40,
_ => bb39
}
}
bb35 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb36 = {
_26.0 = core::ptr::addr_of!(_26.3.fld5);
(*_32) = (_1.0,);
(*_31).2 = !_16;
(*_31).0 = _39;
_41 = (*_31).0;
_13 = -_35;
_29 = (*_31).0;
(*_32).0 = !_26.3.fld4.0;
(*_31).0 = _41;
(*_32).0 = _33 < (*_31).3;
(*_31).1 = _26.2.1;
_26.3.fld0 = [(*_31).0,(*_31).0,(*_31).0,(*_31).0,_29,_26.3.fld3.0,(*_31).0];
(*_32).0 = _20.2;
(*_31) = (_29, _26.2.1, _16, _7);
(*_31).3 = 63_i8 as f64;
_40 = _13;
(*_31).1 = !_26.2.1;
(*_31).2 = (*_31).1 as u32;
(*_31).3 = -_11;
_27 = [(-7832_i16),(-5762_i16),(-22259_i16),4342_i16,20842_i16];
_21 = (*_31).2 as f64;
(*_32) = (_4.0,);
(*_32) = (_26.3.fld4.0,);
_19 = core::ptr::addr_of!(_26.3.fld5);
Goto(bb33)
}
bb37 = {
Return()
}
bb38 = {
(*_31).1 = _26.2.1 | _26.2.1;
(*_31).3 = -_33;
_26.3.fld7 = (_20.0,);
_39 = (*_31).0;
_32 = core::ptr::addr_of_mut!((*_32));
(*_31).2 = !3505914569_u32;
_33 = -(*_31).3;
(*_19) = 4755813561529385993_u64 * 1016330440719049428_u64;
_28 = _35;
_36.fld3 = core::ptr::addr_of!(_18);
(*_19) = 4709538950069203158_u64 | 6266773345927424928_u64;
(*_31).3 = _11 - _33;
(*_32).0 = _1.0;
_36.fld0 = _35 as usize;
_16 = !(*_31).2;
(*_31).1 = _26.2.1 - _26.2.1;
_36.fld5 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).2 = _16 ^ _16;
(*_32) = _10;
_26.3.fld6 = -(-5377716186415187992_i64);
(*_31).3 = _11 - _7;
_47 = Move(_19);
(*_31).3 = _7 * _20.3;
(*_31).3 = _26.3.fld6 as f64;
Goto(bb31)
}
bb39 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb40 = {
_26.3.fld3.3 = -_21;
(*_31).1 = _26.2.1 | _26.2.1;
(*_31).0 = _34;
(*_31).1 = _26.2.1 & _26.2.1;
(*_32).0 = !_4.0;
_50 = (*_31).1;
(*_31) = (_29, _26.2.1, _16, _7);
(*_31).2 = _16 & _16;
(*_32).0 = _10.0 | _26.3.fld4.0;
(*_32) = _26.3.fld4;
(*_31).0 = _41;
(*_19) = 14467964843876708972_u64;
(*_31).0 = _41;
(*_31).3 = _11;
_30 = [_26.2.0,_26.2.0,_26.2.0];
(*_31) = (_29, _50, _16, _11);
match (*_19) {
0 => bb14,
1 => bb19,
2 => bb41,
3 => bb42,
14467964843876708972 => bb44,
_ => bb43
}
}
bb41 = {
(*_31).1 = _26.2.1 | _26.2.1;
(*_31).3 = -_33;
_26.3.fld7 = (_20.0,);
_39 = (*_31).0;
_32 = core::ptr::addr_of_mut!((*_32));
(*_31).2 = !3505914569_u32;
_33 = -(*_31).3;
(*_19) = 4755813561529385993_u64 * 1016330440719049428_u64;
_28 = _35;
_36.fld3 = core::ptr::addr_of!(_18);
(*_19) = 4709538950069203158_u64 | 6266773345927424928_u64;
(*_31).3 = _11 - _33;
(*_32).0 = _1.0;
_36.fld0 = _35 as usize;
_16 = !(*_31).2;
(*_31).1 = _26.2.1 - _26.2.1;
_36.fld5 = [_26.2.0,_26.2.0,_26.2.0];
(*_31).2 = _16 ^ _16;
(*_32) = _10;
_26.3.fld6 = -(-5377716186415187992_i64);
(*_31).3 = _11 - _7;
_47 = Move(_19);
(*_31).3 = _7 * _20.3;
(*_31).3 = _26.3.fld6 as f64;
Goto(bb31)
}
bb42 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb43 = {
_32 = core::ptr::addr_of_mut!(_5);
(*_31).0 = _41;
_17 = (*_32).0;
Goto(bb32)
}
bb44 = {
(*_19) = 15276076449860009748_u64;
(*_31).1 = _26.2.1;
(*_32) = _10;
(*_31).1 = _50 * _50;
_40 = -_8;
_45 = &mut (*_32);
(*_45) = (_17,);
(*_31).3 = _33;
(*_19) = 15668454300679966011_u64 - 805291081514742181_u64;
(*_31).0 = _41;
(*_45).0 = (*_31).1 != (*_31).1;
(*_31).2 = _24.0 as u32;
(*_31).2 = _16 | _16;
(*_31).3 = _11 * _33;
(*_31) = (_39, _50, _16, _33);
(*_31).0 = _41;
(*_31) = (_41, _50, _16, _7);
_63 = !(*_45).0;
(*_45).0 = (*_31).1 == (*_31).1;
(*_45).0 = _20.2;
(*_31).2 = _36.fld0 as u32;
(*_19) = !7604677671068107642_u64;
(*_19) = 15168698499205783964_u64 - 1982685996309839759_u64;
(*_19) = 8533358202811077406_u64 | 693064511941267847_u64;
(*_31).0 = _29;
Goto(bb45)
}
bb45 = {
(*_31).1 = _9 as u8;
(*_31) = (_39, _26.2.1, _16, _11);
_56 = (*_31).1 & (*_31).1;
_24.0 = (*_31).0 as u128;
(*_45).0 = (*_31).3 >= (*_31).3;
(*_31).2 = _16 | _16;
(*_45) = (_26.3.fld4.0,);
(*_45).0 = (*_31).3 > _11;
(*_31).3 = _11 + _33;
(*_19) = (*_31).1 as u64;
_13 = _36.fld0 as isize;
(*_31) = (_41, _50, _16, _33);
(*_31).0 = _34;
match _26.2.1 {
0 => bb46,
60 => bb48,
_ => bb47
}
}
bb46 = {
_25.0 = _24.0;
_23 = [(-18833_i16),(-659_i16),(-23830_i16),(-11573_i16),2034_i16];
_2 = _18 - _18;
_22 = _2;
_26.3.fld3.3 = (-6825418619357550490_i64) as f64;
_20.3 = -_21;
_4.0 = _1.0 ^ _1.0;
_26.3.fld7 = (_20.0,);
_26.2.1 = 217_u8 << _6;
_4.0 = _10.0 ^ _1.0;
_27 = [(-12664_i16),(-16127_i16),29990_i16,8184_i16,(-32366_i16)];
_24 = (_25.0,);
_20.0 = _26.3.fld7.0;
_26.2.0 = !6252_u16;
_26.0 = core::ptr::addr_of!(_26.3.fld5);
match _25.0 {
0 => bb1,
170715615831436408038729398668625096274 => bb5,
_ => bb4
}
}
bb47 = {
_32 = core::ptr::addr_of_mut!(_5);
(*_31).0 = _41;
_17 = (*_32).0;
Goto(bb32)
}
bb48 = {
_19 = Move(_47);
match _26.2.1 {
0 => bb35,
1 => bb17,
2 => bb27,
60 => bb50,
_ => bb49
}
}
bb49 = {
_1.0 = _9 <= _9;
_10.0 = _8 >= _8;
_1.0 = _10.0;
_17 = _1.0;
_10 = _5;
_3 = _9 >> _9;
Goto(bb2)
}
bb50 = {
_66 = (*_31).0 as i32;
_26.3.fld6 = _66 as i64;
_59 = _36.fld0 as f32;
(*_31).0 = _34;
_61 = !(-10_i8);
(*_45) = (_17,);
Goto(bb51)
}
bb51 = {
Call(_68 = dump_var(17_usize, 16_usize, Move(_16), 30_usize, Move(_30), 34_usize, Move(_34), 35_usize, Move(_35)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_68 = dump_var(17_usize, 40_usize, Move(_40), 13_usize, Move(_13), 5_usize, Move(_5), 29_usize, Move(_29)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_68 = dump_var(17_usize, 28_usize, Move(_28), 56_usize, Move(_56), 25_usize, Move(_25), 10_usize, Move(_10)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_68 = dump_var(17_usize, 8_usize, Move(_8), 3_usize, Move(_3), 69_usize, _69, 69_usize, _69), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: i64,mut _2: *const u64,mut _3: u8,mut _4: u32,mut _5: u32,mut _6: u8,mut _7: char,mut _8: *const (char, u8, u32, f64),mut _9: u32,mut _10: u128,mut _11: isize,mut _12: u32) -> f64 {
mir! {
type RET = f64;
let _13: u128;
let _14: usize;
let _15: &'static i128;
let _16: isize;
let _17: i32;
let _18: isize;
let _19: [u32; 7];
let _20: [u32; 5];
let _21: Adt45;
let _22: &'static usize;
let _23: *mut (u16, u8);
let _24: Adt35;
let _25: Adt58;
let _26: isize;
let _27: isize;
let _28: f32;
let _29: (i32,);
let _30: f64;
let _31: *mut (i32, *mut [u16; 2], bool, f64);
let _32: *mut (u16, u8);
let _33: bool;
let _34: *const *const u128;
let _35: &'static (i32, *mut [u16; 2], bool, f64);
let _36: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _37: i128;
let _38: bool;
let _39: f64;
let _40: isize;
let _41: (Adt45,);
let _42: *mut (bool,);
let _43: *const i16;
let _44: f64;
let _45: (u16, u8);
let _46: bool;
let _47: (Adt45,);
let _48: *mut (bool,);
let _49: isize;
let _50: char;
let _51: &'static *const i16;
let _52: &'static [i64; 2];
let _53: char;
let _54: bool;
let _55: isize;
let _56: isize;
let _57: bool;
let _58: f64;
let _59: char;
let _60: f64;
let _61: (&'static mut (bool,), &'static (i32, *mut [u16; 2], bool, f64), f32);
let _62: (i32, *mut [u16; 2], bool, f64);
let _63: i8;
let _64: &'static (i32, *mut [u16; 2], bool, f64);
let _65: *mut (i32, *mut [u16; 2], bool, f64);
let _66: u128;
let _67: isize;
let _68: u64;
let _69: char;
let _70: [u16; 3];
let _71: usize;
let _72: &'static mut [u16; 2];
let _73: *mut [u16; 2];
let _74: *const (char, u8, u32, f64);
let _75: u64;
let _76: [u32; 7];
let _77: u16;
let _78: bool;
let _79: f64;
let _80: isize;
let _81: &'static *const i16;
let _82: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _83: Adt35;
let _84: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _85: &'static *const i16;
let _86: isize;
let _87: isize;
let _88: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _89: usize;
let _90: &'static &'static mut u64;
let _91: f64;
let _92: f32;
let _93: &'static [i64; 2];
let _94: bool;
let _95: isize;
let _96: i128;
let _97: char;
let _98: &'static i128;
let _99: *const (char, u8, u32, f64);
let _100: isize;
let _101: isize;
let _102: (&'static mut (bool,), &'static (i32, *mut [u16; 2], bool, f64), f32);
let _103: isize;
let _104: [i16; 5];
let _105: (*const u64, i32, (u16, u8), Adt43);
let _106: bool;
let _107: f32;
let _108: *const u128;
let _109: f64;
let _110: *const u64;
let _111: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _112: ((u16, u8), *const u128, &'static (i32, *mut [u16; 2], bool, f64), usize);
let _113: f32;
let _114: *const u64;
let _115: char;
let _116: char;
let _117: &'static &'static mut u64;
let _118: [u32; 7];
let _119: *const (char, u8, u32, f64);
let _120: *mut [u16; 2];
let _121: (u16, u8);
let _122: (bool,);
let _123: f32;
let _124: isize;
let _125: [i128; 6];
let _126: char;
let _127: &'static &'static (i32, *mut [u16; 2], bool, f64);
let _128: f64;
let _129: *const (char, u8, u32, f64);
let _130: ();
let _131: ();
{
_6 = _3;
_12 = !_4;
_13 = _10;
_6 = !_3;
_4 = 110575691300026716665365297874885959828_i128 as u32;
_9 = _5 + _4;
_13 = _10 >> _9;
Goto(bb1)
}
bb1 = {
_12 = !_9;
_7 = '\u{38904}';
_9 = !_12;
_6 = !_3;
_3 = 1384938092_i32 as u8;
_7 = '\u{e5e7b}';
_9 = _5 * _12;
RET = _11 as f64;
_6 = _3;
_5 = _9;
_1 = 2329_i16 as i64;
_4 = _12;
_9 = !_5;
_16 = 4285328953155701931_u64 as isize;
Goto(bb2)
}
bb2 = {
_3 = _6 ^ _6;
_14 = 8389862865199669203_usize;
_5 = _9 - _9;
Call(_10 = core::intrinsics::bswap(_13), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_18 = _11 + _11;
_5 = _4;
_19 = [_5,_5,_9,_9,_9,_12,_9];
_10 = _18 as u128;
_11 = _18 + _18;
_5 = _9 - _12;
_3 = _6 - _6;
_12 = !_9;
_20 = [_4,_12,_9,_9,_9];
Call(_9 = fn19(Move(_2), Move(_8)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_12 = _5;
_19 = [_12,_12,_12,_12,_12,_4,_5];
RET = 466653805_i32 as f64;
_1 = 5008081842795469736_i64;
_3 = !_6;
_17 = _6 as i32;
_6 = !_3;
_22 = &_14;
_20 = [_4,_12,_5,_12,_4];
_20 = [_4,_4,_5,_12,_12];
_5 = !_9;
_5 = _12;
_11 = _18;
_9 = _18 as u32;
_6 = _17 as u8;
_1 = _17 as i64;
_20 = [_9,_12,_5,_12,_12];
_19 = [_12,_9,_9,_12,_12,_4,_9];
_20 = [_9,_9,_12,_9,_9];
Goto(bb5)
}
bb5 = {
_12 = _5;
_1 = (-1573193957838214300_i64) >> _10;
_6 = _3 + _3;
match (*_22) {
8389862865199669203 => bb6,
_ => bb2
}
}
bb6 = {
_26 = 33517120450010053829673308145203837080_i128 as isize;
_6 = !_3;
_17 = 20993_i16 as i32;
_9 = _12 & _4;
Goto(bb7)
}
bb7 = {
_30 = RET + RET;
_17 = (-396779798_i32);
_16 = -_11;
_26 = _16 * _16;
_14 = !3_usize;
_5 = _12 + _4;
_6 = 606215730016886989_u64 as u8;
Goto(bb8)
}
bb8 = {
_29.0 = _17 << _12;
_27 = _26;
_24 = Adt35::Variant1 { fld0: _20 };
_13 = _10;
_26 = !_27;
Call(_1 = core::intrinsics::transmute(_14), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_16 = -_27;
_30 = RET;
_1 = -(-7919470564994406499_i64);
_11 = _26 >> _10;
_13 = _5 as u128;
_12 = _5 >> _27;
_14 = !6_usize;
_33 = !true;
_7 = '\u{aebe9}';
RET = -_30;
_29 = (_17,);
_28 = 5343341306630500082_u64 as f32;
_19 = [_4,_5,_12,_4,_12,_12,_4];
_14 = 132399615926123818272317450522347848317_i128 as usize;
_37 = _33 as i128;
_14 = 3_usize | 5536616344018392922_usize;
_7 = '\u{b5d8}';
_4 = 58931_u16 as u32;
_15 = &_37;
Goto(bb10)
}
bb10 = {
_39 = _30 - _30;
_4 = _5 | _5;
_39 = -_30;
_10 = _13;
_26 = _27 - _18;
_29 = (_17,);
_12 = _4 >> _26;
_19 = [_12,_12,_5,_4,_4,_12,_4];
_29.0 = _17 - _17;
_40 = _3 as isize;
Call(_30 = core::intrinsics::fmaf64(_39, RET, RET), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_9 = _12 | _4;
_3 = _28 as u8;
_33 = !true;
_37 = _7 as i128;
_4 = _5 ^ _9;
_1 = -(-861979836429338602_i64);
place!(Field::<[u32; 5]>(Variant(_24, 1), 0)) = [_12,_9,_5,_4,_4];
_20 = [_5,_9,_4,_5,_12];
_9 = (-60_i8) as u32;
_18 = _27 >> _26;
_30 = RET * _39;
place!(Field::<[u32; 5]>(Variant(_24, 1), 0)) = [_4,_5,_5,_12,_12];
_6 = !_3;
_13 = _10 - _10;
_26 = (-120_i8) as isize;
_37 = 150904914041104661626949463937022352971_i128 & 64665788785103438365710161926528265944_i128;
_30 = RET - _39;
_5 = 10979355090100703870_u64 as u32;
_1 = _14 as i64;
_13 = _10 + _10;
_5 = !_4;
_40 = -_16;
_9 = !_5;
match _17 {
0 => bb1,
1 => bb8,
2 => bb6,
340282366920938463463374607431371431658 => bb13,
_ => bb12
}
}
bb12 = {
_16 = -_27;
_30 = RET;
_1 = -(-7919470564994406499_i64);
_11 = _26 >> _10;
_13 = _5 as u128;
_12 = _5 >> _27;
_14 = !6_usize;
_33 = !true;
_7 = '\u{aebe9}';
RET = -_30;
_29 = (_17,);
_28 = 5343341306630500082_u64 as f32;
_19 = [_4,_5,_12,_4,_12,_12,_4];
_14 = 132399615926123818272317450522347848317_i128 as usize;
_37 = _33 as i128;
_14 = 3_usize | 5536616344018392922_usize;
_7 = '\u{b5d8}';
_4 = 58931_u16 as u32;
_15 = &_37;
Goto(bb10)
}
bb13 = {
_17 = !_29.0;
_4 = _5 << _40;
_11 = (-11149_i16) as isize;
_27 = _12 as isize;
_12 = _5;
_33 = _18 > _18;
_9 = !_4;
_5 = 44597_u16 as u32;
_44 = _30 - _30;
_18 = !_27;
_7 = '\u{f002c}';
_13 = _10 - _10;
Goto(bb14)
}
bb14 = {
_10 = !_13;
place!(Field::<[u32; 5]>(Variant(_24, 1), 0)) = [_4,_12,_4,_9,_9];
_45.0 = 25577_u16 + 15414_u16;
_45 = (20066_u16, _3);
_29.0 = 32741_i16 as i32;
RET = _44 * _44;
_50 = _7;
_3 = _6 & _6;
_9 = _4 * _12;
_40 = _18 << _18;
_11 = _3 as isize;
_33 = false;
_46 = _13 <= _10;
Goto(bb15)
}
bb15 = {
_9 = _4 ^ _4;
_7 = _50;
_38 = _46 | _46;
_24 = Adt35::Variant1 { fld0: _20 };
_30 = RET;
_11 = -_27;
_54 = _13 == _10;
_45 = (56615_u16, _3);
_18 = !_11;
_4 = !_12;
match _45.0 {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
56615 => bb21,
_ => bb20
}
}
bb16 = {
_12 = _5;
_1 = (-1573193957838214300_i64) >> _10;
_6 = _3 + _3;
match (*_22) {
8389862865199669203 => bb6,
_ => bb2
}
}
bb17 = {
_12 = _5;
_19 = [_12,_12,_12,_12,_12,_4,_5];
RET = 466653805_i32 as f64;
_1 = 5008081842795469736_i64;
_3 = !_6;
_17 = _6 as i32;
_6 = !_3;
_22 = &_14;
_20 = [_4,_12,_5,_12,_4];
_20 = [_4,_4,_5,_12,_12];
_5 = !_9;
_5 = _12;
_11 = _18;
_9 = _18 as u32;
_6 = _17 as u8;
_1 = _17 as i64;
_20 = [_9,_12,_5,_12,_12];
_19 = [_12,_9,_9,_12,_12,_4,_9];
_20 = [_9,_9,_12,_9,_9];
Goto(bb5)
}
bb18 = {
_3 = _6 ^ _6;
_14 = 8389862865199669203_usize;
_5 = _9 - _9;
Call(_10 = core::intrinsics::bswap(_13), ReturnTo(bb3), UnwindUnreachable())
}
bb19 = {
_26 = 33517120450010053829673308145203837080_i128 as isize;
_6 = !_3;
_17 = 20993_i16 as i32;
_9 = _12 & _4;
Goto(bb7)
}
bb20 = {
_18 = _11 + _11;
_5 = _4;
_19 = [_5,_5,_9,_9,_9,_12,_9];
_10 = _18 as u128;
_11 = _18 + _18;
_5 = _9 - _12;
_3 = _6 - _6;
_12 = !_9;
_20 = [_4,_12,_9,_9,_9];
Call(_9 = fn19(Move(_2), Move(_8)), ReturnTo(bb4), UnwindUnreachable())
}
bb21 = {
_49 = _27;
_5 = _7 as u32;
_3 = _37 as u8;
_39 = _44 - _44;
_54 = _38 | _46;
_38 = !_46;
_11 = _40;
_55 = !_18;
_14 = 9296286793354670286_usize;
_28 = _18 as f32;
_29 = (_17,);
_7 = _50;
_58 = _44;
_12 = _4 << _18;
_54 = !_38;
_59 = _50;
_53 = _7;
Goto(bb22)
}
bb22 = {
_50 = _59;
_26 = _3 as isize;
_45 = (7944_u16, _6);
_18 = !_11;
_27 = -_11;
_61.2 = _28 * _28;
_33 = _38 > _46;
_49 = _18 << _27;
_45 = (36295_u16, _3);
_18 = _11 | _27;
_10 = !_13;
_65 = core::ptr::addr_of_mut!(_62);
match _45.0 {
36295 => bb24,
_ => bb23
}
}
bb23 = {
_18 = _11 + _11;
_5 = _4;
_19 = [_5,_5,_9,_9,_9,_12,_9];
_10 = _18 as u128;
_11 = _18 + _18;
_5 = _9 - _12;
_3 = _6 - _6;
_12 = !_9;
_20 = [_4,_12,_9,_9,_9];
Call(_9 = fn19(Move(_2), Move(_8)), ReturnTo(bb4), UnwindUnreachable())
}
bb24 = {
(*_65).0 = -_29.0;
_16 = _49;
(*_65).2 = _46 ^ _54;
_59 = _7;
(*_65).2 = _33 > _33;
(*_65).3 = _44 * _30;
_57 = (*_65).2 | (*_65).2;
(*_65).3 = -RET;
(*_65).3 = _39;
_26 = !_27;
_55 = _27 ^ _27;
_57 = !(*_65).2;
_57 = (*_65).2 < (*_65).2;
(*_65).3 = _30 * _30;
_2 = core::ptr::addr_of!(_68);
_37 = !(-94176269759129584779966370887996152134_i128);
(*_65).3 = _44;
(*_2) = 6197984080851451353_u64 << _27;
_37 = 126321195764646985419152698191409252922_i128 + 44448198052928257955832462940740867056_i128;
(*_2) = 17376385987628796162_u64;
(*_65).2 = !_46;
_7 = _53;
(*_2) = !7896075994248609192_u64;
_9 = (*_65).3 as u32;
_28 = _61.2 + _61.2;
_29 = ((*_65).0,);
_31 = core::ptr::addr_of_mut!((*_65));
match _45.0 {
36295 => bb25,
_ => bb9
}
}
bb25 = {
(*_31).3 = _30 * _39;
(*_65).0 = _29.0 >> _55;
Goto(bb26)
}
bb26 = {
(*_65).3 = _30;
(*_65).0 = _29.0 & _17;
_13 = _10 + _10;
_14 = 4533404811299301469_usize & 17409486000251405587_usize;
(*_65).2 = !_46;
_67 = _26 & _27;
_23 = core::ptr::addr_of_mut!(_45);
match (*_23).0 {
36295 => bb27,
_ => bb6
}
}
bb27 = {
(*_65).0 = _17 + _17;
(*_23).1 = _61.2 as u8;
match (*_23).0 {
0 => bb15,
1 => bb2,
2 => bb22,
3 => bb25,
4 => bb28,
5 => bb29,
36295 => bb31,
_ => bb30
}
}
bb28 = {
_26 = 33517120450010053829673308145203837080_i128 as isize;
_6 = !_3;
_17 = 20993_i16 as i32;
_9 = _12 & _4;
Goto(bb7)
}
bb29 = {
_9 = _4 ^ _4;
_7 = _50;
_38 = _46 | _46;
_24 = Adt35::Variant1 { fld0: _20 };
_30 = RET;
_11 = -_27;
_54 = _13 == _10;
_45 = (56615_u16, _3);
_18 = !_11;
_4 = !_12;
match _45.0 {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
56615 => bb21,
_ => bb20
}
}
bb30 = {
_12 = _5;
_1 = (-1573193957838214300_i64) >> _10;
_6 = _3 + _3;
match (*_22) {
8389862865199669203 => bb6,
_ => bb2
}
}
bb31 = {
_45.1 = _3 << _12;
(*_65).0 = _17 - _29.0;
(*_65).3 = _61.2 as f64;
(*_23) = (31073_u16, _6);
(*_65).2 = _16 < _11;
_12 = _61.2 as u32;
(*_2) = 7102140394087480045_u64 << _49;
(*_23) = (11559_u16, _3);
(*_23) = (30270_u16, _6);
(*_65).2 = _62.3 <= (*_65).3;
_67 = !_16;
_32 = core::ptr::addr_of_mut!((*_23));
(*_32).0 = 63173_u16 ^ 14273_u16;
_46 = (*_65).2;
_60 = (*_65).3 - (*_65).3;
(*_23).0 = _14 as u16;
(*_23).1 = _50 as u8;
_45 = (20334_u16, _3);
_66 = _10 + _13;
(*_2) = 10015174399037478692_u64 & 16227142391194902387_u64;
(*_23).1 = (*_23).0 as u8;
_56 = _18 >> _40;
(*_23).1 = !_3;
_56 = _61.2 as isize;
(*_23).0 = (*_2) as u16;
_55 = 127_i8 as isize;
(*_2) = 7149906867370659551_u64 ^ 15041676874774097279_u64;
Goto(bb32)
}
bb32 = {
_3 = !(*_23).1;
_69 = _50;
_58 = -(*_65).3;
(*_65).2 = _33 ^ _38;
(*_23) = (52153_u16, _3);
_9 = _4 * _4;
(*_65).0 = _29.0 << _27;
(*_65).2 = _33 ^ _33;
_38 = _57 & (*_65).2;
(*_65).0 = _17 * _17;
_67 = _10 as isize;
(*_23).0 = 52321_u16;
(*_23) = (18302_u16, _3);
(*_2) = 7060290842703359234_u64;
(*_2) = 1410936125599167170_u64;
(*_65).3 = _58 + _58;
_80 = -_16;
_54 = (*_65).2 ^ _38;
Goto(bb33)
}
bb33 = {
_16 = _26 | _40;
_28 = -_61.2;
_40 = _56;
(*_65).2 = _54;
(*_65).3 = -_60;
_76 = [_4,_9,_12,_9,_12,_9,_12];
(*_23) = (41533_u16, _3);
(*_2) = 16821827380791625806_u64 + 12349967979426083782_u64;
(*_65).2 = _57 >= _33;
(*_23) = (35954_u16, _3);
(*_65).2 = !_54;
(*_2) = 15277950603237827354_u64 - 18404084027000487574_u64;
_4 = _12 ^ _12;
_68 = !17268010034520471172_u64;
place!(Field::<[u32; 5]>(Variant(_24, 1), 0)) = [_9,_9,_9,_4,_12];
(*_23).0 = 50239_u16;
(*_23).0 = 43993_u16 ^ 57900_u16;
_63 = (-80_i8) ^ 74_i8;
(*_2) = 18359178452243841980_u64;
(*_65).3 = RET;
(*_2) = !11960268395661285701_u64;
(*_23).0 = _1 as u16;
(*_65).0 = _29.0 & _17;
Call((*_65).0 = core::intrinsics::transmute(_53), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_66 = !_13;
(*_23).0 = _14 as u16;
Goto(bb35)
}
bb35 = {
place!(Field::<[u32; 5]>(Variant(_24, 1), 0)) = [_4,_9,_4,_12,_9];
(*_65).2 = !_38;
(*_23).1 = _6 << _26;
(*_65).2 = _4 > _12;
(*_65).0 = !_17;
(*_23).0 = _37 as u16;
(*_23).1 = (*_65).2 as u8;
_18 = !_67;
(*_65).0 = _14 as i32;
_18 = _16 * _27;
(*_23).0 = 637_u16;
_59 = _7;
_10 = _1 as u128;
(*_65).3 = _44 - _60;
(*_65).0 = (-8928_i16) as i32;
(*_2) = !4201145477934885301_u64;
match (*_23).0 {
637 => bb37,
_ => bb36
}
}
bb36 = {
_12 = _5;
_1 = (-1573193957838214300_i64) >> _10;
_6 = _3 + _3;
match (*_22) {
8389862865199669203 => bb6,
_ => bb2
}
}
bb37 = {
(*_23) = (1008_u16, _3);
(*_65).3 = _60 * _58;
(*_65).3 = _58;
(*_65).3 = _60 - _60;
(*_23).1 = _6 & _3;
_77 = (*_23).0 ^ (*_23).0;
_50 = _53;
_89 = !_14;
(*_23).0 = _77;
_32 = core::ptr::addr_of_mut!((*_23));
_76 = [_4,_12,_9,_9,_12,_4,_4];
(*_32) = (_77, _3);
(*_65).0 = _29.0 << _40;
_46 = !(*_65).2;
(*_23).0 = _77;
_29.0 = (*_65).0;
_37 = (-131811718560900520250154496440294316754_i128) >> (*_65).0;
(*_65).0 = !_29.0;
(*_2) = 15869532490326840268_u64;
_62.3 = -_58;
(*_65).2 = _37 == _37;
match (*_2) {
0 => bb8,
1 => bb38,
15869532490326840268 => bb40,
_ => bb39
}
}
bb38 = {
_9 = _4 ^ _4;
_7 = _50;
_38 = _46 | _46;
_24 = Adt35::Variant1 { fld0: _20 };
_30 = RET;
_11 = -_27;
_54 = _13 == _10;
_45 = (56615_u16, _3);
_18 = !_11;
_4 = !_12;
match _45.0 {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
56615 => bb21,
_ => bb20
}
}
bb39 = {
_26 = 33517120450010053829673308145203837080_i128 as isize;
_6 = !_3;
_17 = 20993_i16 as i32;
_9 = _12 & _4;
Goto(bb7)
}
bb40 = {
(*_23).0 = !_77;
(*_65).2 = _33 | _33;
(*_23).0 = _37 as u16;
_100 = -_18;
(*_23) = (_77, _3);
_10 = _66 ^ _66;
(*_23) = (_77, _3);
_106 = !(*_65).2;
_105.1 = (*_65).0 | (*_65).0;
_98 = Move(_15);
(*_65).0 = _53 as i32;
_94 = !(*_65).2;
_86 = _80 & _18;
(*_2) = 7173665838359608929_u64;
_54 = (*_65).2;
(*_23).0 = _77 << _4;
_99 = core::ptr::addr_of!(_105.3.fld3);
(*_23).1 = _3;
(*_65).0 = _105.1 | _105.1;
(*_65).3 = _4 as f64;
(*_99).3 = (*_65).3 * (*_65).3;
(*_99).1 = (*_23).1 << (*_65).0;
Goto(bb41)
}
bb41 = {
_34 = core::ptr::addr_of!(_108);
_103 = _100 << (*_23).0;
_18 = _103 | _27;
_9 = _37 as u32;
(*_99) = (_53, _45.1, _9, (*_65).3);
(*_2) = 9616726515298827164_u64;
(*_99).0 = _50;
(*_23) = (_77, (*_99).1);
_69 = (*_99).0;
_108 = core::ptr::addr_of!(_66);
_83 = Move(_24);
_67 = !_80;
(*_108) = _10 ^ _13;
_75 = _11 as u64;
Call(_11 = core::intrinsics::transmute((*_2)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
(*_23).1 = _61.2 as u8;
(*_99).0 = _69;
_63 = 99_i8 + (-111_i8);
(*_99).2 = _12 & _4;
_39 = (*_99).3 + (*_99).3;
_105.3.fld3.2 = !_4;
(*_65).0 = (*_65).3 as i32;
(*_65).3 = (*_99).3 - (*_99).3;
_105.3.fld3 = (_50, (*_23).1, _12, _58);
_103 = -_49;
(*_99).0 = _53;
(*_34) = core::ptr::addr_of!((*_108));
(*_99).1 = _45.1 >> _105.3.fld3.2;
_112.0 = (*_23);
(*_99) = (_69, _45.1, _12, _62.3);
_105.3.fld5 = _75;
(*_2) = (*_99).0 as u64;
(*_65).3 = (*_99).3 * (*_99).3;
(*_99).2 = !_12;
_105.3.fld6 = _1 & _1;
(*_108) = _13 << (*_99).1;
_7 = _50;
_105.3.fld3.1 = !(*_23).1;
Goto(bb43)
}
bb43 = {
(*_99).3 = 8147_i16 as f64;
_23 = core::ptr::addr_of_mut!((*_23));
(*_65).2 = _100 == _86;
_118 = _76;
_71 = !_14;
(*_99) = (_50, (*_23).1, _4, (*_65).3);
Goto(bb44)
}
bb44 = {
(*_23).1 = !(*_99).1;
_8 = Move(_99);
(*_65).3 = _105.3.fld3.3 + _60;
(*_108) = !_13;
(*_34) = core::ptr::addr_of!((*_108));
(*_65).3 = _105.3.fld6 as f64;
(*_23) = _112.0;
(*_65).0 = _105.1 - _105.1;
_105.3.fld0 = [_105.3.fld3.0,_105.3.fld3.0,_105.3.fld3.0,_50,_69,_50,_59];
(*_23).1 = 29995_i16 as u8;
_70 = [(*_23).0,(*_23).0,(*_23).0];
_79 = _58 * _105.3.fld3.3;
(*_23).1 = _4 as u8;
_57 = (*_65).2;
_87 = _56 & _80;
_34 = core::ptr::addr_of!((*_34));
(*_108) = _94 as u128;
_60 = _105.3.fld3.3 + _58;
Call(_119 = core::intrinsics::arith_offset(_8, 9223372036854775807_isize), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
(*_23) = (_77, _112.0.1);
(*_65).2 = (*_23).0 > (*_23).0;
(*_65).3 = _60 - _60;
(*_34) = core::ptr::addr_of!(_66);
_24 = Adt35::Variant1 { fld0: Field::<[u32; 5]>(Variant(_83, 1), 0) };
_20 = [_9,_9,_105.3.fld3.2,_12,_12];
(*_23) = _112.0;
_66 = _28 as u128;
(*_23).0 = _77 + _77;
(*_65).0 = _105.1 + _105.1;
Goto(bb46)
}
bb46 = {
(*_65).0 = _105.1 & _105.1;
(*_65).2 = !_94;
_105.3.fld3.2 = _28 as u32;
_105.3.fld7 = ((*_65).0,);
_19 = [_12,_12,_9,_4,_4,_105.3.fld3.2,_12];
_77 = (*_23).0 ^ (*_23).0;
(*_108) = _13 * _10;
_116 = _7;
_105.3.fld5 = (*_2) << _40;
_8 = core::ptr::addr_of!(_105.3.fld3);
_92 = _28 * _61.2;
place!(Field::<[u32; 5]>(Variant(_83, 1), 0)) = [(*_8).2,(*_8).2,(*_8).2,_9,_4];
(*_8) = (_50, (*_23).1, _9, _58);
(*_8).0 = _59;
_91 = (*_65).3 + (*_8).3;
(*_8).3 = (*_65).3;
(*_8).1 = (*_23).1;
(*_65).3 = -_39;
_48 = core::ptr::addr_of_mut!(_105.3.fld4);
_105.3.fld3.3 = (*_65).3 + (*_65).3;
(*_8).2 = _9;
(*_8) = (_50, (*_23).1, _4, (*_65).3);
_1 = _105.3.fld6 | _105.3.fld6;
Goto(bb47)
}
bb47 = {
(*_48) = ((*_65).2,);
Goto(bb48)
}
bb48 = {
_105.2.0 = (*_23).0;
_123 = _28 + _28;
(*_8).3 = (*_65).3 + (*_65).3;
_42 = Move(_48);
_6 = (*_23).1 ^ (*_8).1;
(*_23) = _112.0;
(*_8).3 = (*_65).3;
_125 = [_37,_37,_37,_37,_37,_37];
(*_34) = core::ptr::addr_of!((*_108));
_53 = _116;
_15 = &_37;
Goto(bb49)
}
bb49 = {
(*_23) = (_112.0.0, (*_8).1);
(*_65).2 = !_33;
(*_23).0 = !_105.2.0;
(*_8).1 = !(*_23).1;
(*_65).0 = -_29.0;
(*_23) = (_77, (*_8).1);
(*_8).3 = _58 + (*_65).3;
(*_23).0 = _77 & _105.2.0;
(*_23).0 = !_112.0.0;
(*_34) = core::ptr::addr_of!((*_108));
(*_108) = _13;
(*_23) = _112.0;
(*_8).2 = _12 + _4;
Goto(bb50)
}
bb50 = {
Call(_130 = dump_var(18_usize, 94_usize, Move(_94), 40_usize, Move(_40), 13_usize, Move(_13), 103_usize, Move(_103)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_130 = dump_var(18_usize, 20_usize, Move(_20), 125_usize, Move(_125), 89_usize, Move(_89), 69_usize, Move(_69)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_130 = dump_var(18_usize, 6_usize, Move(_6), 38_usize, Move(_38), 50_usize, Move(_50), 5_usize, Move(_5)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_130 = dump_var(18_usize, 37_usize, Move(_37), 76_usize, Move(_76), 14_usize, Move(_14), 116_usize, Move(_116)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_130 = dump_var(18_usize, 63_usize, Move(_63), 53_usize, Move(_53), 12_usize, Move(_12), 26_usize, Move(_26)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_130 = dump_var(18_usize, 27_usize, Move(_27), 16_usize, Move(_16), 3_usize, Move(_3), 57_usize, Move(_57)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_130 = dump_var(18_usize, 18_usize, Move(_18), 1_usize, Move(_1), 77_usize, Move(_77), 131_usize, _131), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: *const u64,mut _2: *const (char, u8, u32, f64)) -> u32 {
mir! {
type RET = u32;
let _3: [i128; 6];
let _4: [u32; 5];
let _5: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _6: &'static usize;
let _7: f64;
let _8: [i32; 5];
let _9: &'static i128;
let _10: &'static (i32, *mut [u16; 2], bool, f64);
let _11: *const f32;
let _12: i32;
let _13: [bool; 2];
let _14: u64;
let _15: bool;
let _16: isize;
let _17: f32;
let _18: &'static mut [u16; 2];
let _19: i32;
let _20: u64;
let _21: &'static &'static mut u64;
let _22: usize;
let _23: char;
let _24: (Adt45,);
let _25: *mut (i32, *mut [u16; 2], bool, f64);
let _26: *const u128;
let _27: &'static usize;
let _28: *mut (bool,);
let _29: *const u128;
let _30: Adt58;
let _31: f32;
let _32: [u8; 4];
let _33: &'static mut (bool,);
let _34: (char, &'static usize, i8);
let _35: isize;
let _36: *const u64;
let _37: &'static (i32, *mut [u16; 2], bool, f64);
let _38: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _39: char;
let _40: *const (char, u8, u32, f64);
let _41: f32;
let _42: Adt66;
let _43: isize;
let _44: &'static mut Adt35;
let _45: *mut (*mut [u16; 2], [u16; 2], *const u128, u128);
let _46: *mut [u16; 2];
let _47: (u8,);
let _48: f64;
let _49: f64;
let _50: char;
let _51: i32;
let _52: [char; 7];
let _53: f32;
let _54: &'static mut Adt35;
let _55: isize;
let _56: isize;
let _57: isize;
let _58: *mut (u16, u8);
let _59: isize;
let _60: isize;
let _61: [i128; 6];
let _62: f32;
let _63: &'static i128;
let _64: i32;
let _65: &'static i128;
let _66: i128;
let _67: char;
let _68: isize;
let _69: [i64; 2];
let _70: i16;
let _71: bool;
let _72: u8;
let _73: &'static &'static mut u64;
let _74: *const u128;
let _75: i64;
let _76: [u32; 2];
let _77: f64;
let _78: ();
let _79: ();
{
RET = 1702373355_u32 >> 17812167957010666121_usize;
RET = 3856765679_u32 - 2384963874_u32;
_3 = [14444668624806169259923402948782733565_i128,13736654763347289465741416274161017106_i128,105254486742216740424938209692611949366_i128,(-83777681514389402143013887844987407090_i128),(-19525658825055387239118205219166397693_i128),(-41775039956288922741942328569939664785_i128)];
_3 = [31019937791947793167687390107202584522_i128,(-40557272536026786905144930780428424160_i128),117115895060926726013696007251151742738_i128,(-54588708939018462885771990853811808141_i128),(-34553464961367238149959965464025123246_i128),60066496116356970133480173425357168231_i128];
_4 = [RET,RET,RET,RET,RET];
RET = 3751436013_u32 - 3907821621_u32;
RET = 1343314483_u32 * 1479814475_u32;
_4 = [RET,RET,RET,RET,RET];
_3 = [(-133317646148782418625659951242493549025_i128),(-91705151222033608491668492353117563472_i128),(-135183980414870050534481905085096484388_i128),(-104182840206208857151067384797892232251_i128),71652977601905021686466702329210063597_i128,(-131595522321030323853173804786073097586_i128)];
_3 = [(-22016660011478925598634502787518722348_i128),(-8053840463479000236208942785852241708_i128),(-169215323471800281184828218901583947626_i128),(-31379690368621647668791710704380651144_i128),143278106726147741244786548846541975539_i128,(-108467798939012175489256937409528178208_i128)];
_4 = [RET,RET,RET,RET,RET];
RET = 1787782474_u32 >> (-77_i8);
_3 = [86429313690083276576863697148890471997_i128,148780254327784361179121472813251925453_i128,(-91661069234310495615541260555741717411_i128),(-161251557014951888240637294013963505879_i128),(-37473162847872984883245369607498164076_i128),3212890507852727384792500840485612519_i128];
_4 = [RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET];
_3 = [93159397249324869047334377320862481924_i128,(-86757168904742675770589587198403918698_i128),(-137660882844099991177580670343861911385_i128),116447034413079216624642235561751106139_i128,124135614086487140367152942796559210600_i128,(-150964505085616219642586826806237023842_i128)];
_3 = [(-33648423965675407380002008705312877349_i128),39997137114709125541149254494286617737_i128,(-66370590325802165392267626378381109661_i128),(-25372841255436818352942104974165654739_i128),53733108366307434618531426677877410137_i128,3843074299731740907166381028531285216_i128];
RET = !405803662_u32;
RET = 1973886560_u32 >> 9223372036854775807_isize;
RET = !1512055847_u32;
_3 = [(-1576016501111361093057918870541041537_i128),100172168522139241692152700104017883584_i128,(-41836784609014626122174304795158739285_i128),18131123631386372678136123252805747225_i128,(-127235308515378793748930447706512023902_i128),2266061112263274776410606463653735024_i128];
_3 = [(-169507066184081520048550294477786936970_i128),155116626603927871219235878624707754108_i128,(-109309976351234697661518438903843919203_i128),(-160105831803602433169417331189475037373_i128),92344475563061543291530802901519890192_i128,60907370096258584440295823673296124922_i128];
_3 = [(-87703236849821195086498121740578015358_i128),45958890015910007591905994651775545664_i128,156229171482274733018507152515613517053_i128,(-119926950359098384587988589021398191540_i128),(-233463383604809423107667090534612065_i128),(-90255784918235793213442991387229148101_i128)];
_3 = [156454795833046896810557393581341132765_i128,19554462956967208594600493166100723061_i128,23686710108693695759148576673230034263_i128,116264222170778756192950031469864444785_i128,72150896071778626475244670495609563365_i128,167398750111712234054378956881124056044_i128];
_4 = [RET,RET,RET,RET,RET];
_3 = [66909352702626676252862630216641461929_i128,62374048369805097996041706389868075283_i128,39595311007267533941071829216231568989_i128,33182723225845154182277453047545349826_i128,48982571377531061125268050473508607692_i128,125273380064187435018621104298219859488_i128];
RET = (-88_i8) as u32;
_4 = [RET,RET,RET,RET,RET];
Goto(bb1)
}
bb1 = {
_3 = [(-113854372001195094132905208339884950659_i128),(-100447852391847524678444672963271340766_i128),(-81403927562845222954903986405180390708_i128),62718284386366319447555520846562124392_i128,145661319471027274961314411802492792306_i128,(-58138011362321539883201136608585633820_i128)];
_4 = [RET,RET,RET,RET,RET];
_7 = 81_isize as f64;
_7 = 4431588015443852884_u64 as f64;
_7 = 42863_u16 as f64;
RET = 517504731_u32 | 1940983567_u32;
RET = 5085600927817434015_u64 as u32;
_4 = [RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET];
_8 = [407743331_i32,1673107605_i32,(-132469479_i32),(-1097726090_i32),2068630138_i32];
_4 = [RET,RET,RET,RET,RET];
_12 = 948589491_i32 << RET;
_3 = [(-69283536043401995680820009025194156051_i128),99871391699081029547746776254160013614_i128,61337455515729413301875233237884797413_i128,(-15160758928190123683683007790902740188_i128),(-54524687172570494252307475420840019187_i128),(-42539445937162193308708185576335057673_i128)];
_8 = [_12,_12,_12,_12,_12];
_13 = [false,true];
_12 = (-881335553_i32);
_3 = [(-50428969557155858223110992067437543638_i128),(-125512038694024629643653491743160874367_i128),(-75092848662489783299101931984368107942_i128),6858149097924912108164264984988229571_i128,(-72386558695567102964351503893509171989_i128),(-115549300544013469367000749823620199740_i128)];
_14 = !2775417697947556712_u64;
_4 = [RET,RET,RET,RET,RET];
_3 = [(-4872464639673984754313152323912492807_i128),(-49295428664313370442378903831663205469_i128),49734995105112949726512817739274023342_i128,(-65822134046083258728831991754617867992_i128),64951596701358368295022382100850554955_i128,21642456473657267067415448527450838388_i128];
match _12 {
0 => bb2,
1 => bb3,
340282366920938463463374607430886875903 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_12 = (-2083433348_i32) - (-1417443026_i32);
_14 = 1541434601129108015_u64 & 4521448141949350928_u64;
_3 = [158218201533749093201461142168095409733_i128,(-49119879010544634803177965722496360510_i128),(-48982097355467004942244327149485828412_i128),(-14837484985083989697532374659782919109_i128),138231630301070853143475829671174603871_i128,40998466477619338428101271440059617424_i128];
RET = _7 as u32;
_12 = (-1509729826_i32);
_13 = [true,false];
_1 = core::ptr::addr_of!(_14);
_1 = core::ptr::addr_of!((*_1));
(*_1) = !12321676088028693456_u64;
Call((*_1) = core::intrinsics::bswap(3422461653755325686_u64), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_12 = (-573208922_i32);
(*_1) = 7586820558136325677_u64 | 5739598191304072394_u64;
(*_1) = 15392879466126586209_u64;
_4 = [RET,RET,RET,RET,RET];
(*_1) = 6331240681165392260_u64 * 5055262187303474006_u64;
(*_1) = 6103573985180985507_u64 << _12;
(*_1) = 18293150540979991746_u64 + 567091757210417660_u64;
(*_1) = 8861774312989460821_u64 + 10857484919030517395_u64;
_12 = (-1960300433_i32) >> (*_1);
_11 = core::ptr::addr_of!(_17);
(*_11) = 48_u8 as f32;
(*_1) = !7040727889460814020_u64;
_17 = 12_i8 as f32;
Goto(bb7)
}
bb7 = {
_7 = (-119_i8) as f64;
_3 = [(-51318540776302200921925490620571784208_i128),(-4452386085547169402096169332498642989_i128),43344066721878261462139891559947064056_i128,8579197972224927967232110832534371820_i128,(-8533250096767690700733326676352245417_i128),137864674359487873754698274486788592800_i128];
_19 = _12 + _12;
_15 = !false;
_8 = [_19,_19,_19,_19,_19];
(*_11) = 217091301739539817031311676903673332505_u128 as f32;
(*_11) = 111_u8 as f32;
_16 = 9223372036854775807_isize >> _12;
(*_11) = 82_i8 as f32;
(*_1) = !6290532840307733188_u64;
_8 = [_12,_19,_12,_19,_19];
(*_11) = 2790157185305100937_usize as f32;
(*_1) = 9569528138775012977_u64;
(*_11) = 7767427671839103255_usize as f32;
_19 = _12 >> (*_1);
(*_11) = _16 as f32;
RET = 2835709488_u32 | 932126855_u32;
_19 = _12 * _12;
(*_1) = 1063416339719070861_u64;
_14 = 4053454437675559659_u64 & 15898921123377043468_u64;
RET = 766229643_u32 - 3804802733_u32;
(*_11) = 240_u8 as f32;
Call((*_1) = core::intrinsics::bswap(8481382309917101096_u64), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_17 = 2_usize as f32;
(*_1) = (*_11) as u64;
(*_11) = (*_1) as f32;
(*_11) = 187_u8 as f32;
(*_1) = 12031359868028381961_u64 - 12494380881773705984_u64;
_15 = !true;
(*_1) = 13855821951231330527_u64 & 6837208462975041917_u64;
(*_1) = 7286516671556061756_u64;
(*_11) = 2934750919042200023_i64 as f32;
(*_1) = 314356833742228190486434267394137221876_u128 as u64;
_3 = [82297861190718965468799755787156055668_i128,(-144750449299349461493839118381233527631_i128),(-104453215939349162517919504996943900077_i128),(-38803409814652853461451455005914861742_i128),(-96922354846329329917646425560498936373_i128),(-128021016223360535266502468058010448706_i128)];
_17 = (-5118677069664633965_i64) as f32;
(*_11) = 40_u8 as f32;
Goto(bb9)
}
bb9 = {
(*_11) = (*_1) as f32;
_23 = '\u{7d696}';
_12 = _19 ^ _19;
(*_1) = 193341450798617905_u64;
(*_11) = 92422231807929423261698801474045520890_u128 as f32;
(*_11) = _19 as f32;
_22 = 59864279727293862544444062117149716550_i128 as usize;
(*_1) = 10031545207430064601_u64 * 16411501059883130743_u64;
_4 = [RET,RET,RET,RET,RET];
(*_11) = (-18891_i16) as f32;
_19 = _12;
(*_1) = 8844873741441357844_u64 * 13951737451587575711_u64;
(*_1) = 11472947897812019208_u64;
(*_1) = 6376207842556306508_u64 & 1270014931884912753_u64;
RET = 473831985_u32 + 1612741016_u32;
_23 = '\u{cb0}';
(*_1) = 4274144567892960812_u64;
(*_1) = 7479241348636506685_u64 ^ 16766819373901644323_u64;
_27 = &_22;
(*_1) = !6571328274560014686_u64;
(*_1) = 5992_i16 as u64;
_11 = core::ptr::addr_of!((*_11));
(*_1) = 14121200580391266094_u64 >> _12;
(*_11) = (*_27) as f32;
Call((*_11) = core::intrinsics::transmute(_23), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_1 = core::ptr::addr_of!((*_1));
_23 = '\u{e0ab8}';
RET = 3637763939_u32 + 1134705594_u32;
_12 = _19;
(*_11) = (*_1) as f32;
(*_1) = 6690042646148356346_u64;
(*_11) = (-3243055853268540758_i64) as f32;
Goto(bb11)
}
bb11 = {
(*_11) = 47_u8 as f32;
(*_1) = 18346272629622055866_u64;
_7 = (*_1) as f64;
_31 = (*_1) as f32;
(*_11) = _31 + _31;
_17 = _16 as f32;
(*_1) = 18406097365994806474_u64 - 5486660523256442255_u64;
Goto(bb12)
}
bb12 = {
(*_1) = 1741210257270718197_u64 + 1456470529416668514_u64;
(*_11) = _31 * _31;
(*_1) = 1926899069643756154_u64 << (*_27);
(*_11) = (*_27) as f32;
(*_1) = 6639393195064482007_u64 << _19;
_31 = _16 as f32;
_16 = (-23_isize);
(*_1) = !3869378514081687598_u64;
(*_11) = _31;
_6 = &(*_27);
(*_11) = _31 * _31;
(*_1) = !1257757962184265680_u64;
match _16 {
0 => bb5,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463463374607431768211433 => bb20,
_ => bb19
}
}
bb13 = {
(*_11) = 47_u8 as f32;
(*_1) = 18346272629622055866_u64;
_7 = (*_1) as f64;
_31 = (*_1) as f32;
(*_11) = _31 + _31;
_17 = _16 as f32;
(*_1) = 18406097365994806474_u64 - 5486660523256442255_u64;
Goto(bb12)
}
bb14 = {
_3 = [(-113854372001195094132905208339884950659_i128),(-100447852391847524678444672963271340766_i128),(-81403927562845222954903986405180390708_i128),62718284386366319447555520846562124392_i128,145661319471027274961314411802492792306_i128,(-58138011362321539883201136608585633820_i128)];
_4 = [RET,RET,RET,RET,RET];
_7 = 81_isize as f64;
_7 = 4431588015443852884_u64 as f64;
_7 = 42863_u16 as f64;
RET = 517504731_u32 | 1940983567_u32;
RET = 5085600927817434015_u64 as u32;
_4 = [RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET];
_8 = [407743331_i32,1673107605_i32,(-132469479_i32),(-1097726090_i32),2068630138_i32];
_4 = [RET,RET,RET,RET,RET];
_12 = 948589491_i32 << RET;
_3 = [(-69283536043401995680820009025194156051_i128),99871391699081029547746776254160013614_i128,61337455515729413301875233237884797413_i128,(-15160758928190123683683007790902740188_i128),(-54524687172570494252307475420840019187_i128),(-42539445937162193308708185576335057673_i128)];
_8 = [_12,_12,_12,_12,_12];
_13 = [false,true];
_12 = (-881335553_i32);
_3 = [(-50428969557155858223110992067437543638_i128),(-125512038694024629643653491743160874367_i128),(-75092848662489783299101931984368107942_i128),6858149097924912108164264984988229571_i128,(-72386558695567102964351503893509171989_i128),(-115549300544013469367000749823620199740_i128)];
_14 = !2775417697947556712_u64;
_4 = [RET,RET,RET,RET,RET];
_3 = [(-4872464639673984754313152323912492807_i128),(-49295428664313370442378903831663205469_i128),49734995105112949726512817739274023342_i128,(-65822134046083258728831991754617867992_i128),64951596701358368295022382100850554955_i128,21642456473657267067415448527450838388_i128];
match _12 {
0 => bb2,
1 => bb3,
340282366920938463463374607430886875903 => bb5,
_ => bb4
}
}
bb15 = {
Return()
}
bb16 = {
_17 = 2_usize as f32;
(*_1) = (*_11) as u64;
(*_11) = (*_1) as f32;
(*_11) = 187_u8 as f32;
(*_1) = 12031359868028381961_u64 - 12494380881773705984_u64;
_15 = !true;
(*_1) = 13855821951231330527_u64 & 6837208462975041917_u64;
(*_1) = 7286516671556061756_u64;
(*_11) = 2934750919042200023_i64 as f32;
(*_1) = 314356833742228190486434267394137221876_u128 as u64;
_3 = [82297861190718965468799755787156055668_i128,(-144750449299349461493839118381233527631_i128),(-104453215939349162517919504996943900077_i128),(-38803409814652853461451455005914861742_i128),(-96922354846329329917646425560498936373_i128),(-128021016223360535266502468058010448706_i128)];
_17 = (-5118677069664633965_i64) as f32;
(*_11) = 40_u8 as f32;
Goto(bb9)
}
bb17 = {
_7 = (-119_i8) as f64;
_3 = [(-51318540776302200921925490620571784208_i128),(-4452386085547169402096169332498642989_i128),43344066721878261462139891559947064056_i128,8579197972224927967232110832534371820_i128,(-8533250096767690700733326676352245417_i128),137864674359487873754698274486788592800_i128];
_19 = _12 + _12;
_15 = !false;
_8 = [_19,_19,_19,_19,_19];
(*_11) = 217091301739539817031311676903673332505_u128 as f32;
(*_11) = 111_u8 as f32;
_16 = 9223372036854775807_isize >> _12;
(*_11) = 82_i8 as f32;
(*_1) = !6290532840307733188_u64;
_8 = [_12,_19,_12,_19,_19];
(*_11) = 2790157185305100937_usize as f32;
(*_1) = 9569528138775012977_u64;
(*_11) = 7767427671839103255_usize as f32;
_19 = _12 >> (*_1);
(*_11) = _16 as f32;
RET = 2835709488_u32 | 932126855_u32;
_19 = _12 * _12;
(*_1) = 1063416339719070861_u64;
_14 = 4053454437675559659_u64 & 15898921123377043468_u64;
RET = 766229643_u32 - 3804802733_u32;
(*_11) = 240_u8 as f32;
Call((*_1) = core::intrinsics::bswap(8481382309917101096_u64), ReturnTo(bb8), UnwindUnreachable())
}
bb18 = {
_12 = (-573208922_i32);
(*_1) = 7586820558136325677_u64 | 5739598191304072394_u64;
(*_1) = 15392879466126586209_u64;
_4 = [RET,RET,RET,RET,RET];
(*_1) = 6331240681165392260_u64 * 5055262187303474006_u64;
(*_1) = 6103573985180985507_u64 << _12;
(*_1) = 18293150540979991746_u64 + 567091757210417660_u64;
(*_1) = 8861774312989460821_u64 + 10857484919030517395_u64;
_12 = (-1960300433_i32) >> (*_1);
_11 = core::ptr::addr_of!(_17);
(*_11) = 48_u8 as f32;
(*_1) = !7040727889460814020_u64;
_17 = 12_i8 as f32;
Goto(bb7)
}
bb19 = {
Return()
}
bb20 = {
(*_1) = 16171440929109510227_u64 + 7035331123606369617_u64;
(*_11) = -_31;
(*_11) = _31 + _31;
(*_1) = 16162341023756088864_u64 + 5789106756052708011_u64;
(*_11) = _31 + _31;
(*_11) = _31;
(*_11) = _31;
_19 = -_12;
(*_11) = _31 + _31;
_3 = [152078949532950717420652911050352858888_i128,169598197039343805444710753866915221152_i128,(-129854869441728019420281930417595070202_i128),(-140881093984637383322932792824441651325_i128),92385744110539442173186702605640515797_i128,(-128875611021928171368154989506447855731_i128)];
Goto(bb21)
}
bb21 = {
_12 = _19;
(*_11) = _31;
(*_1) = 11689586425794229920_u64 + 8711175031935383078_u64;
(*_1) = 16355697479140533404_u64;
_6 = Move(_27);
_34.0 = _23;
_22 = 2_usize;
(*_1) = !10534115386090828386_u64;
_7 = (*_1) as f64;
match _16 {
0 => bb17,
1 => bb22,
340282366920938463463374607431768211433 => bb24,
_ => bb23
}
}
bb22 = {
_7 = (-119_i8) as f64;
_3 = [(-51318540776302200921925490620571784208_i128),(-4452386085547169402096169332498642989_i128),43344066721878261462139891559947064056_i128,8579197972224927967232110832534371820_i128,(-8533250096767690700733326676352245417_i128),137864674359487873754698274486788592800_i128];
_19 = _12 + _12;
_15 = !false;
_8 = [_19,_19,_19,_19,_19];
(*_11) = 217091301739539817031311676903673332505_u128 as f32;
(*_11) = 111_u8 as f32;
_16 = 9223372036854775807_isize >> _12;
(*_11) = 82_i8 as f32;
(*_1) = !6290532840307733188_u64;
_8 = [_12,_19,_12,_19,_19];
(*_11) = 2790157185305100937_usize as f32;
(*_1) = 9569528138775012977_u64;
(*_11) = 7767427671839103255_usize as f32;
_19 = _12 >> (*_1);
(*_11) = _16 as f32;
RET = 2835709488_u32 | 932126855_u32;
_19 = _12 * _12;
(*_1) = 1063416339719070861_u64;
_14 = 4053454437675559659_u64 & 15898921123377043468_u64;
RET = 766229643_u32 - 3804802733_u32;
(*_11) = 240_u8 as f32;
Call((*_1) = core::intrinsics::bswap(8481382309917101096_u64), ReturnTo(bb8), UnwindUnreachable())
}
bb23 = {
Return()
}
bb24 = {
(*_11) = _31 + _31;
(*_1) = 9430235375473896285_u64;
match (*_1) {
0 => bb10,
1 => bb2,
2 => bb25,
3 => bb26,
4 => bb27,
5 => bb28,
9430235375473896285 => bb30,
_ => bb29
}
}
bb25 = {
_12 = (-573208922_i32);
(*_1) = 7586820558136325677_u64 | 5739598191304072394_u64;
(*_1) = 15392879466126586209_u64;
_4 = [RET,RET,RET,RET,RET];
(*_1) = 6331240681165392260_u64 * 5055262187303474006_u64;
(*_1) = 6103573985180985507_u64 << _12;
(*_1) = 18293150540979991746_u64 + 567091757210417660_u64;
(*_1) = 8861774312989460821_u64 + 10857484919030517395_u64;
_12 = (-1960300433_i32) >> (*_1);
_11 = core::ptr::addr_of!(_17);
(*_11) = 48_u8 as f32;
(*_1) = !7040727889460814020_u64;
_17 = 12_i8 as f32;
Goto(bb7)
}
bb26 = {
_12 = (-2083433348_i32) - (-1417443026_i32);
_14 = 1541434601129108015_u64 & 4521448141949350928_u64;
_3 = [158218201533749093201461142168095409733_i128,(-49119879010544634803177965722496360510_i128),(-48982097355467004942244327149485828412_i128),(-14837484985083989697532374659782919109_i128),138231630301070853143475829671174603871_i128,40998466477619338428101271440059617424_i128];
RET = _7 as u32;
_12 = (-1509729826_i32);
_13 = [true,false];
_1 = core::ptr::addr_of!(_14);
_1 = core::ptr::addr_of!((*_1));
(*_1) = !12321676088028693456_u64;
Call((*_1) = core::intrinsics::bswap(3422461653755325686_u64), ReturnTo(bb6), UnwindUnreachable())
}
bb27 = {
(*_1) = 1741210257270718197_u64 + 1456470529416668514_u64;
(*_11) = _31 * _31;
(*_1) = 1926899069643756154_u64 << (*_27);
(*_11) = (*_27) as f32;
(*_1) = 6639393195064482007_u64 << _19;
_31 = _16 as f32;
_16 = (-23_isize);
(*_1) = !3869378514081687598_u64;
(*_11) = _31;
_6 = &(*_27);
(*_11) = _31 * _31;
(*_1) = !1257757962184265680_u64;
match _16 {
0 => bb5,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463463374607431768211433 => bb20,
_ => bb19
}
}
bb28 = {
_7 = (-119_i8) as f64;
_3 = [(-51318540776302200921925490620571784208_i128),(-4452386085547169402096169332498642989_i128),43344066721878261462139891559947064056_i128,8579197972224927967232110832534371820_i128,(-8533250096767690700733326676352245417_i128),137864674359487873754698274486788592800_i128];
_19 = _12 + _12;
_15 = !false;
_8 = [_19,_19,_19,_19,_19];
(*_11) = 217091301739539817031311676903673332505_u128 as f32;
(*_11) = 111_u8 as f32;
_16 = 9223372036854775807_isize >> _12;
(*_11) = 82_i8 as f32;
(*_1) = !6290532840307733188_u64;
_8 = [_12,_19,_12,_19,_19];
(*_11) = 2790157185305100937_usize as f32;
(*_1) = 9569528138775012977_u64;
(*_11) = 7767427671839103255_usize as f32;
_19 = _12 >> (*_1);
(*_11) = _16 as f32;
RET = 2835709488_u32 | 932126855_u32;
_19 = _12 * _12;
(*_1) = 1063416339719070861_u64;
_14 = 4053454437675559659_u64 & 15898921123377043468_u64;
RET = 766229643_u32 - 3804802733_u32;
(*_11) = 240_u8 as f32;
Call((*_1) = core::intrinsics::bswap(8481382309917101096_u64), ReturnTo(bb8), UnwindUnreachable())
}
bb29 = {
Return()
}
bb30 = {
_34.2 = 92_i8 & 51_i8;
(*_11) = _31;
_19 = _8[_22] ^ _12;
_11 = core::ptr::addr_of!((*_11));
(*_1) = 41520_u16 as u64;
(*_11) = _31 - _31;
_20 = !(*_1);
(*_11) = -_31;
(*_11) = _31 - _31;
(*_11) = _31 - _31;
_13 = [_15,_15];
_34.1 = &_22;
(*_1) = _20 >> _3[_22];
_36 = core::ptr::addr_of!((*_1));
(*_36) = _20 + _20;
_9 = &_3[_22];
(*_11) = _7 as f32;
(*_36) = _20 ^ _20;
_12 = _19 & _19;
_31 = (*_11) - (*_11);
_19 = _12 << (*_36);
_19 = _12 >> (*_9);
(*_1) = _20 + _20;
Goto(bb31)
}
bb31 = {
_20 = (*_1);
_4 = [RET,RET,RET,RET,RET];
(*_1) = !_20;
match (*_9) {
0 => bb13,
1 => bb9,
2 => bb20,
3 => bb10,
4 => bb12,
5 => bb11,
6 => bb22,
210427497479210444043092677014173141254 => bb33,
_ => bb32
}
}
bb32 = {
Return()
}
bb33 = {
(*_1) = _20;
_19 = _34.0 as i32;
_35 = -_16;
(*_1) = _12 as u64;
(*_1) = _20 ^ _20;
_4[_22] = _16 as u32;
(*_11) = _31 + _31;
(*_11) = RET as f32;
(*_11) = _31;
(*_1) = _20 | _20;
_32[_22] = 193_u8;
(*_1) = _20 & _20;
_7 = 196341963112566525783256179966135939510_u128 as f64;
(*_1) = !_20;
(*_1) = !_20;
_32[_22] = 18_u8 + 110_u8;
match (*_9) {
0 => bb31,
1 => bb2,
2 => bb8,
3 => bb17,
4 => bb22,
5 => bb30,
6 => bb29,
210427497479210444043092677014173141254 => bb35,
_ => bb34
}
}
bb34 = {
_1 = core::ptr::addr_of!((*_1));
_23 = '\u{e0ab8}';
RET = 3637763939_u32 + 1134705594_u32;
_12 = _19;
(*_11) = (*_1) as f32;
(*_1) = 6690042646148356346_u64;
(*_11) = (-3243055853268540758_i64) as f32;
Goto(bb11)
}
bb35 = {
_20 = (*_1);
_14 = !_20;
(*_1) = _12 as u64;
(*_11) = _31 - _31;
_23 = _34.0;
_39 = _23;
(*_11) = -_31;
(*_11) = _31 - _31;
(*_11) = _31 * _31;
_32 = [124_u8,136_u8,9_u8,16_u8];
(*_11) = _31;
_34.2 = _15 as i8;
_8 = [_12,_12,_12,_12,_12];
(*_1) = _20 + _20;
(*_1) = _20 + _20;
(*_11) = _31 * _31;
_27 = &_22;
_32 = [21_u8,63_u8,143_u8,229_u8];
_7 = _8[_22] as f64;
_34.0 = _23;
_34.2 = (-87_i8);
_34.2 = (*_1) as i8;
_13 = [_15,_15];
(*_11) = _31 + _31;
Goto(bb36)
}
bb36 = {
(*_1) = (*_9) as u64;
_41 = -_17;
(*_11) = -_31;
_43 = _16;
(*_11) = _31 + _31;
_6 = &(*_27);
_19 = _12 + _12;
_39 = _23;
_6 = Move(_27);
(*_11) = _31 * _41;
(*_1) = _20 ^ _20;
(*_11) = _41;
_27 = &_22;
_39 = _23;
_15 = !true;
(*_11) = (-9982_i16) as f32;
(*_1) = _20;
_35 = !_43;
_14 = _20 >> _34.2;
(*_1) = _20 + _20;
_42 = Adt66::Variant0 { fld0: RET };
(*_11) = -_31;
(*_1) = _20;
_4[_22] = !RET;
_34.2 = 4216624774240294595_i64 as i8;
_1 = Move(_36);
_32[_22] = !205_u8;
Goto(bb37)
}
bb37 = {
(*_11) = -_31;
(*_11) = 286125701157615181198137871525054055087_u128 as f32;
(*_11) = _41 - _41;
(*_11) = _41 - _41;
_4 = [RET,RET,Field::<u32>(Variant(_42, 0), 0),RET,Field::<u32>(Variant(_42, 0), 0)];
_47.0 = _32[_22];
_13 = [_15,_15];
_52[_22] = _23;
_8[_22] = _19;
(*_11) = _31 - _41;
_50 = _52[_22];
_6 = &(*_27);
(*_11) = _20 as f32;
_52 = [_39,_23,_39,_34.0,_39,_39,_34.0];
place!(Field::<u32>(Variant(_42, 0), 0)) = !RET;
_41 = -(*_11);
Goto(bb38)
}
bb38 = {
_35 = 107353610235151314218735913449379907081_u128 as isize;
_52 = [_50,_23,_23,_50,_23,_39,_50];
(*_11) = -_31;
_35 = -_43;
_31 = (*_11) + _41;
RET = _15 as u32;
(*_11) = 54211_u16 as f32;
_50 = _23;
(*_11) = _31 * _31;
_51 = _19 >> _12;
(*_11) = -_41;
_4 = [RET,Field::<u32>(Variant(_42, 0), 0),Field::<u32>(Variant(_42, 0), 0),RET,Field::<u32>(Variant(_42, 0), 0)];
(*_11) = 12791_i16 as f32;
_36 = core::ptr::addr_of!(_14);
Goto(bb39)
}
bb39 = {
_4[_22] = RET;
_49 = _7 + _7;
_27 = Move(_6);
(*_11) = _41;
(*_36) = _20 - _20;
_4[_22] = _22 as u32;
place!(Field::<u32>(Variant(_42, 0), 0)) = (*_36) as u32;
(*_11) = _31;
_32[_22] = _47.0 + _47.0;
match _3[_22] {
0 => bb28,
1 => bb2,
2 => bb15,
210427497479210444043092677014173141254 => bb41,
_ => bb40
}
}
bb40 = {
Return()
}
bb41 = {
(*_36) = _20 ^ _20;
(*_36) = _20 ^ _20;
_20 = (*_36);
(*_36) = _52[_22] as u64;
_52 = [_50,_34.0,_39,_39,_23,_39,_50];
(*_36) = _20;
_11 = core::ptr::addr_of!((*_11));
(*_36) = !_20;
_11 = core::ptr::addr_of!((*_11));
(*_36) = _20 - _20;
_13 = [_15,_15];
RET = _4[_22];
_36 = core::ptr::addr_of!((*_36));
_23 = _39;
_55 = 294750926270450640500670333762267395331_u128 as isize;
(*_11) = -_41;
(*_36) = _20 ^ _20;
(*_11) = _31;
_47.0 = _32[_22] * _32[_22];
_23 = _52[_22];
_14 = 7505164073318493509_i64 as u64;
_43 = _15 as isize;
(*_36) = !_20;
(*_36) = _34.2 as u64;
_56 = _55 + _43;
_52 = [_39,_50,_50,_39,_39,_39,_23];
match (*_9) {
0 => bb42,
210427497479210444043092677014173141254 => bb44,
_ => bb43
}
}
bb42 = {
_3 = [(-113854372001195094132905208339884950659_i128),(-100447852391847524678444672963271340766_i128),(-81403927562845222954903986405180390708_i128),62718284386366319447555520846562124392_i128,145661319471027274961314411802492792306_i128,(-58138011362321539883201136608585633820_i128)];
_4 = [RET,RET,RET,RET,RET];
_7 = 81_isize as f64;
_7 = 4431588015443852884_u64 as f64;
_7 = 42863_u16 as f64;
RET = 517504731_u32 | 1940983567_u32;
RET = 5085600927817434015_u64 as u32;
_4 = [RET,RET,RET,RET,RET];
_4 = [RET,RET,RET,RET,RET];
_8 = [407743331_i32,1673107605_i32,(-132469479_i32),(-1097726090_i32),2068630138_i32];
_4 = [RET,RET,RET,RET,RET];
_12 = 948589491_i32 << RET;
_3 = [(-69283536043401995680820009025194156051_i128),99871391699081029547746776254160013614_i128,61337455515729413301875233237884797413_i128,(-15160758928190123683683007790902740188_i128),(-54524687172570494252307475420840019187_i128),(-42539445937162193308708185576335057673_i128)];
_8 = [_12,_12,_12,_12,_12];
_13 = [false,true];
_12 = (-881335553_i32);
_3 = [(-50428969557155858223110992067437543638_i128),(-125512038694024629643653491743160874367_i128),(-75092848662489783299101931984368107942_i128),6858149097924912108164264984988229571_i128,(-72386558695567102964351503893509171989_i128),(-115549300544013469367000749823620199740_i128)];
_14 = !2775417697947556712_u64;
_4 = [RET,RET,RET,RET,RET];
_3 = [(-4872464639673984754313152323912492807_i128),(-49295428664313370442378903831663205469_i128),49734995105112949726512817739274023342_i128,(-65822134046083258728831991754617867992_i128),64951596701358368295022382100850554955_i128,21642456473657267067415448527450838388_i128];
match _12 {
0 => bb2,
1 => bb3,
340282366920938463463374607430886875903 => bb5,
_ => bb4
}
}
bb43 = {
_20 = (*_1);
_4 = [RET,RET,RET,RET,RET];
(*_1) = !_20;
match (*_9) {
0 => bb13,
1 => bb9,
2 => bb20,
3 => bb10,
4 => bb12,
5 => bb11,
6 => bb22,
210427497479210444043092677014173141254 => bb33,
_ => bb32
}
}
bb44 = {
_8[_22] = _51 << _51;
_36 = core::ptr::addr_of!((*_36));
(*_36) = _20;
(*_36) = !_20;
Goto(bb45)
}
bb45 = {
place!(Field::<u32>(Variant(_42, 0), 0)) = RET << _8[_22];
_8[_22] = _12;
(*_11) = _31 - _31;
_1 = core::ptr::addr_of!((*_36));
(*_1) = _20;
_1 = Move(_36);
_61 = [(*_9),(*_9),(*_9),(*_9),(*_9),(*_9)];
place!(Field::<u32>(Variant(_42, 0), 0)) = 5435061032371279874_i64 as u32;
RET = _14 as u32;
_32[_22] = _47.0 + _47.0;
match (*_9) {
210427497479210444043092677014173141254 => bb47,
_ => bb46
}
}
bb46 = {
Return()
}
bb47 = {
_1 = core::ptr::addr_of!(_20);
_60 = _56 | _35;
_65 = &(*_9);
_17 = _31;
_6 = &_22;
_65 = Move(_9);
_63 = &_61[_22];
_53 = (*_11) - (*_11);
(*_11) = _34.2 as f32;
(*_11) = RET as f32;
_59 = (*_6) as isize;
_47.0 = (*_1) as u8;
_65 = &(*_63);
_67 = _50;
_64 = _51 * _51;
_47.0 = _32[_22] >> _14;
(*_11) = -_31;
_4[_22] = Field::<u32>(Variant(_42, 0), 0);
(*_11) = _53 * _31;
(*_11) = _41 + _41;
_14 = !(*_1);
_62 = (*_6) as f32;
_15 = (*_65) >= (*_63);
_32 = [_47.0,_47.0,_47.0,_47.0];
(*_11) = _41 * _53;
(*_1) = _52[_22] as u64;
(*_1) = _14 & _14;
_23 = _67;
Call((*_1) = core::intrinsics::transmute((*_6)), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
(*_1) = !_14;
(*_1) = (*_11) as u64;
_56 = _60 >> _19;
(*_1) = _14 * _14;
(*_11) = -_31;
_9 = &(*_63);
(*_11) = _53;
(*_1) = !_14;
(*_11) = _41 - _62;
(*_11) = _53 * _53;
(*_1) = _14 ^ _14;
_43 = Field::<u32>(Variant(_42, 0), 0) as isize;
(*_1) = _14;
(*_11) = _34.2 as f32;
(*_11) = _53;
_27 = &(*_6);
_60 = _64 as isize;
_70 = (-1148_i16) >> _51;
(*_1) = _14;
_17 = _53 + _31;
_36 = core::ptr::addr_of!((*_1));
(*_1) = _15 as u64;
_22 = 3_usize;
Goto(bb49)
}
bb49 = {
_22 = (*_63) as usize;
_66 = (*_65);
(*_11) = -_53;
_50 = _67;
Goto(bb50)
}
bb50 = {
Call(_78 = dump_var(19_usize, 20_usize, Move(_20), 70_usize, Move(_70), 35_usize, Move(_35), 50_usize, Move(_50)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_78 = dump_var(19_usize, 56_usize, Move(_56), 23_usize, Move(_23), 13_usize, Move(_13), 43_usize, Move(_43)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_78 = dump_var(19_usize, 66_usize, Move(_66), 12_usize, Move(_12), 15_usize, Move(_15), 61_usize, Move(_61)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_78 = dump_var(19_usize, 47_usize, Move(_47), 67_usize, Move(_67), 79_usize, _79, 79_usize, _79), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(18118320433834193244_u64), std::hint::black_box(1748168537_u32), std::hint::black_box(79172942319155893137111020830122395411_u128), std::hint::black_box((-14775_i16)), std::hint::black_box(870710566_i32), std::hint::black_box(55801_u16), std::hint::black_box((-138874438391874597257939363883967441309_i128)), std::hint::black_box(18160027783732407291_usize));
                
            }
#[derive(Debug)]
pub enum Adt35 {
Variant0{
fld0: *mut [u16; 2],
fld1: char,
fld2: u32,
fld3: *const u64,
fld4: i16,
fld5: u8,

},
Variant1{
fld0: [u32; 5],

},
Variant2{
fld0: (u128,),
fld1: [i64; 2],
fld2: u16,
fld3: [char; 7],
fld4: *const u128,
fld5: [i32; 5],
fld6: (i128, i64),
fld7: usize,

}}
#[derive(Debug)]
pub struct Adt43 {
fld0: [char; 7],
fld1: [u32; 5],
fld2: isize,
fld3: (char, u8, u32, f64),
fld4: (bool,),
fld5: u64,
fld6: i64,
fld7: (i32,),
}
#[derive(Debug)]
pub enum Adt45 {
Variant0{
fld0: u16,
fld1: char,
fld2: i128,
fld3: [char; 7],
fld4: i16,
fld5: [i64; 2],

},
Variant1{
fld0: [u32; 5],
fld1: [bool; 2],
fld2: Adt35,
fld3: i32,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: u16,
fld1: [u32; 5],
fld2: f64,
fld3: *const f32,
fld4: [i16; 5],
fld5: i32,
fld6: [u8; 4],

},
Variant1{
fld0: *const *const u128,
fld1: (isize, *const u128),
fld2: i32,

}}
#[derive(Debug)]
pub enum Adt66 {
Variant0{
fld0: u32,

},
Variant1{
fld0: [i32; 5],
fld1: *const u64,
fld2: [i16; 5],
fld3: Adt58,
fld4: Adt43,
fld5: (i32, *mut [u16; 2], bool, f64),

}}
#[derive(Debug)]
pub enum Adt69 {
Variant0{
fld0: [u32; 7],
fld1: (i128, i8, i32, *const u64),
fld2: ([i32; 5], u64),
fld3: f32,
fld4: [char; 7],

},
Variant1{
fld0: [u32; 5],
fld1: [u16; 2],
fld2: [char; 7],
fld3: Adt66,
fld4: i16,
fld5: i64,

}}
#[derive(Debug)]
pub struct Adt72 {
fld0: usize,
fld1: (u128,),
fld2: f64,
fld3: *const f32,
fld4: [bool; 2],
fld5: [u16; 3],
}
#[derive(Debug)]
pub enum Adt79 {
Variant0{
fld0: (*const u64, i32, (u16, u8), Adt43),
fld1: [isize; 5],
fld2: [u16; 8],

},
Variant1{
fld0: ([i32; 5], u64),
fld1: i32,
fld2: f32,
fld3: Adt66,
fld4: Adt72,

}}

