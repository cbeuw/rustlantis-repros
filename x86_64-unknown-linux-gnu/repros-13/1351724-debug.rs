#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char) -> ((i64, [bool; 5]), ([bool; 5],)) {
mir! {
type RET = ((i64, [bool; 5]), ([bool; 5],));
let _3: *const [i64; 5];
let _4: [i128; 1];
let _5: i16;
let _6: i16;
let _7: ([bool; 5], usize, [u8; 8]);
let _8: i64;
let _9: [u64; 4];
let _10: Adt64;
let _11: u8;
let _12: ((u8, usize, i16, u32),);
let _13: ();
let _14: ();
{
RET.0.0 = -(-1107225894764034385_i64);
RET.0.0 = -(-1229302447310213726_i64);
_1 = !false;
RET.1.0 = [_1,_1,_1,_1,_1];
RET.0 = ((-7075983938073860860_i64), RET.1.0);
RET.0 = (3434186102703669966_i64, RET.1.0);
RET.1.0 = RET.0.1;
RET.0.0 = (-188266389_i32) as i64;
_2 = '\u{10884e}';
RET.0.1 = RET.1.0;
_4 = [(-75539988437125563729743942375943397741_i128)];
RET.1 = (RET.0.1,);
_2 = '\u{1d7ff}';
_2 = '\u{100da9}';
RET.0 = ((-2791894698871108272_i64), RET.1.0);
RET.0 = ((-7845539049876546081_i64), RET.1.0);
RET.0.1 = [_1,_1,_1,_1,_1];
RET.0.1 = [_1,_1,_1,_1,_1];
match RET.0.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463455529068381891665375 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET.0 = (7451968477894779162_i64, RET.1.0);
_5 = !32124_i16;
RET.1.0 = RET.0.1;
_5 = 103495313903702500801803123630025572831_i128 as i16;
_1 = true;
Goto(bb8)
}
bb8 = {
_2 = '\u{fc4f6}';
RET.0 = (5082326408338137412_i64, RET.1.0);
RET.1 = (RET.0.1,);
_5 = (-12561_i16);
RET.0.0 = (-60592553381990012_i64) ^ 8128197037249566796_i64;
_2 = '\u{805be}';
RET.0.0 = 55555_u16 as i64;
RET.1.0 = RET.0.1;
_4 = [23184322038503202339705954301721342274_i128];
_4 = [118103852342265994113719284666248116036_i128];
RET.0.1 = [_1,_1,_1,_1,_1];
_5 = -(-26569_i16);
RET.1 = (RET.0.1,);
_1 = false;
_5 = 55625685_u32 as i16;
_4 = [(-35440043061440176206745979282532024122_i128)];
RET.0 = ((-5554548122251349082_i64), RET.1.0);
RET.1 = (RET.0.1,);
RET.1 = (RET.0.1,);
RET.0.1 = [_1,_1,_1,_1,_1];
Goto(bb9)
}
bb9 = {
RET.0.0 = 2091932255309355641_i64;
_9 = [1944232544373846270_u64,8955548419246436167_u64,17939778732052983322_u64,10228548882615155089_u64];
_6 = _5 << _5;
_2 = '\u{c3b63}';
_1 = !false;
RET.0 = (7634405813585890966_i64, RET.1.0);
_2 = '\u{d5721}';
match RET.0.0 {
0 => bb8,
1 => bb7,
2 => bb6,
3 => bb5,
4 => bb10,
7634405813585890966 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_7.2 = [92_u8,189_u8,5_u8,13_u8,233_u8,33_u8,52_u8,98_u8];
RET.1.0 = RET.0.1;
_6 = !_5;
RET.1.0 = [_1,_1,_1,_1,_1];
_7.1 = _2 as usize;
Call(_6 = fn1(RET.0.1, RET.1.0, RET.0, _7.2, _2, RET.0.0, _7.2, _2, _7.2, _2, _2, _7.2, _4), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_5 = _6 << RET.0.0;
_7.0 = [_1,_1,_1,_1,_1];
RET.0.1 = RET.1.0;
_12.0.1 = 61307_u16 as usize;
RET.1.0 = [_1,_1,_1,_1,_1];
_6 = 9183411743119406769_u64 as i16;
RET.0.0 = 1815136408_i32 as i64;
_12.0.3 = 2890006194_u32;
_12.0 = (178_u8, _7.1, _5, 296812832_u32);
RET.1 = (RET.0.1,);
RET.1 = (_7.0,);
_1 = false;
_11 = !_12.0.0;
RET.0 = (2833295415679287280_i64, RET.1.0);
_7.2 = [_12.0.0,_12.0.0,_11,_11,_12.0.0,_12.0.0,_12.0.0,_12.0.0];
_9 = [9914767732591005040_u64,5530583594962584084_u64,6512956057971214895_u64,15662574112053280301_u64];
_12.0.1 = !_7.1;
RET.1 = (_7.0,);
_7.2 = [_11,_12.0.0,_11,_11,_11,_12.0.0,_12.0.0,_11];
_12.0.1 = 13307181701495426643_u64 as usize;
_11 = _12.0.0 % _12.0.0;
RET.0.0 = 8853899681066343948_i64 & (-3747629883484314691_i64);
_8 = _5 as i64;
RET.1.0 = [_1,_1,_1,_1,_1];
RET.0 = (_8, RET.1.0);
RET.1 = (RET.0.1,);
_12.0.1 = _7.1;
Goto(bb14)
}
bb14 = {
RET.0.0 = _8;
RET.0 = (_8, _7.0);
RET.1 = (RET.0.1,);
RET.0 = (_8, RET.1.0);
Goto(bb15)
}
bb15 = {
Call(_13 = dump_var(0_usize, 12_usize, Move(_12), 5_usize, Move(_5), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_13 = dump_var(0_usize, 7_usize, Move(_7), 14_usize, _14, 14_usize, _14, 14_usize, _14), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: [bool; 5],mut _2: [bool; 5],mut _3: (i64, [bool; 5]),mut _4: [u8; 8],mut _5: char,mut _6: i64,mut _7: [u8; 8],mut _8: char,mut _9: [u8; 8],mut _10: char,mut _11: char,mut _12: [u8; 8],mut _13: [i128; 1]) -> i16 {
mir! {
type RET = i16;
let _14: f32;
let _15: *const i8;
let _16: char;
let _17: Adt55;
let _18: Adt57;
let _19: f32;
let _20: f32;
let _21: char;
let _22: f32;
let _23: f32;
let _24: Adt58;
let _25: i8;
let _26: u128;
let _27: char;
let _28: ([bool; 5],);
let _29: Adt56;
let _30: char;
let _31: *mut ([bool; 5],);
let _32: (usize, char, u16, usize);
let _33: Adt49;
let _34: [u64; 4];
let _35: u8;
let _36: f32;
let _37: bool;
let _38: i128;
let _39: isize;
let _40: Adt49;
let _41: usize;
let _42: (i32, bool, f64, u16, isize);
let _43: bool;
let _44: isize;
let _45: (u8, *const (u8, usize, i16, u32), usize, i16);
let _46: isize;
let _47: i16;
let _48: ();
let _49: ();
{
_4 = [156_u8,175_u8,209_u8,133_u8,42_u8,243_u8,222_u8,38_u8];
_3 = (_6, _2);
RET = -(-17593_i16);
_8 = _11;
_1 = [false,true,true,true,true];
Goto(bb1)
}
bb1 = {
RET = -30025_i16;
RET = _6 as i16;
_6 = _3.0 << RET;
_5 = _8;
_14 = 168532652961217183990696962274687395228_i128 as f32;
_1 = [true,true,false,false,true];
_7 = [217_u8,121_u8,161_u8,192_u8,163_u8,246_u8,234_u8,212_u8];
_12 = _4;
RET = (-13720_i16);
_17 = Adt55::Variant0 { fld0: 267396943_u32 };
_5 = _11;
_7 = [194_u8,4_u8,189_u8,81_u8,151_u8,151_u8,80_u8,54_u8];
Goto(bb2)
}
bb2 = {
_3.0 = !_6;
_5 = _10;
_11 = _10;
_13 = [127208420198521798767787998346904727718_i128];
_3.1 = [false,true,true,true,false];
_17 = Adt55::Variant0 { fld0: 657901629_u32 };
RET = (-1682_i16);
_6 = _3.0;
_16 = _5;
_2 = [true,false,false,false,false];
Call(_17 = fn2(_10, _3, _4, _11, _2, _3.1, _4, _11, _4, _12, _6, _3.0, _12, _3.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3.1 = [false,true,false,false,false];
_16 = _11;
_11 = _5;
_7 = [154_u8,213_u8,70_u8,247_u8,245_u8,28_u8,175_u8,17_u8];
_2 = _1;
_19 = -_14;
_19 = _14 * _14;
place!(Field::<u32>(Variant(_17, 0), 0)) = !2606873434_u32;
RET = 26791_i16;
RET = (-76091535963511167131646792100785707142_i128) as i16;
_1 = [true,false,true,false,true];
_8 = _10;
RET = 6127_i16 - 29043_i16;
_19 = 68_u8 as f32;
_20 = _19 - _19;
_20 = 12044447218040608618_u64 as f32;
_21 = _5;
RET = (-28742_i16) - (-6227_i16);
_16 = _21;
_25 = (-7_i8) & 13_i8;
Call(_6 = core::intrinsics::bswap(_3.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_23 = 219536144273824679951671189776524062601_u128 as f32;
_27 = _21;
_13 = [48134925660129002854677481879603613123_i128];
_1 = [false,true,true,false,false];
Goto(bb5)
}
bb5 = {
_8 = _16;
place!(Field::<u32>(Variant(_17, 0), 0)) = 693218330_u32;
_9 = [121_u8,55_u8,104_u8,49_u8,21_u8,248_u8,42_u8,221_u8];
_30 = _11;
RET = !12884_i16;
_3.1 = _2;
_15 = core::ptr::addr_of!(_25);
_28.0 = _2;
_17 = Adt55::Variant0 { fld0: 195767199_u32 };
_28 = (_3.1,);
_32.3 = 15361542637883065926_usize;
_21 = _10;
RET = !29270_i16;
Goto(bb6)
}
bb6 = {
_11 = _16;
_32.2 = 46924_u16 ^ 14193_u16;
_32.2 = 62660_u16;
_11 = _30;
_34 = [15927423575444970471_u64,12415701454202318408_u64,18149748784272373284_u64,2440848615606887103_u64];
_11 = _21;
_6 = _3.0 << (*_15);
_22 = _19 - _19;
_6 = _3.0;
_32 = (3747992467347707346_usize, _8, 7467_u16, 8597248984168477047_usize);
_30 = _21;
_25 = -97_i8;
_21 = _32.1;
Goto(bb7)
}
bb7 = {
_32.0 = _32.3 >> _32.3;
_10 = _32.1;
_5 = _27;
_32.2 = 53654_u16;
Goto(bb8)
}
bb8 = {
place!(Field::<u32>(Variant(_17, 0), 0)) = 1751115305_u32 - 2487935105_u32;
_5 = _8;
_19 = _22;
_10 = _8;
_25 = (-122_i8);
_28.0 = [true,false,true,false,false];
_25 = (-83_i8) << _32.0;
_20 = _22;
_32 = (13619478365349553116_usize, _10, 18506_u16, 2757420303176695775_usize);
_22 = _20 * _20;
(*_15) = 29_i8;
_32.3 = _32.0;
_3 = (_6, _1);
_3.0 = _6;
_15 = core::ptr::addr_of!(_25);
place!(Field::<u32>(Variant(_17, 0), 0)) = 1863279403_u32 >> _3.0;
_3 = (_6, _1);
(*_15) = _22 as i8;
_11 = _8;
_10 = _27;
Goto(bb9)
}
bb9 = {
_3.0 = _6 | _6;
RET = 12607_i16;
_3.0 = _6 + _6;
SetDiscriminant(_17, 2);
_28 = (_1,);
_26 = !148320918269487362986052499026582780774_u128;
_25 = 35_u8 as i8;
_28 = (_1,);
_31 = core::ptr::addr_of_mut!(_28);
(*_31) = (_3.1,);
_19 = _22;
_25 = _3.0 as i8;
place!(Field::<[bool; 4]>(Variant(_17, 2), 0)) = [true,false,false,false];
_20 = 173_u8 as f32;
_5 = _16;
_35 = 94_u8;
(*_31) = (_2,);
(*_31) = (_2,);
_12 = [_35,_35,_35,_35,_35,_35,_35,_35];
Goto(bb10)
}
bb10 = {
_22 = _19 * _19;
_32.1 = _10;
_8 = _21;
_37 = _19 != _23;
_4 = [_35,_35,_35,_35,_35,_35,_35,_35];
_34 = [15118314539572567811_u64,17734135454026638973_u64,14522171220935677442_u64,13070177375414277759_u64];
_23 = _22 + _19;
_10 = _27;
_32 = (0_usize, _11, 45819_u16, 8546124335028488305_usize);
_3.1 = [_37,_37,_37,_37,_37];
_23 = _22;
Goto(bb11)
}
bb11 = {
_13 = [48693225592040738886292582275600028621_i128];
_23 = _19 + _14;
_27 = _5;
(*_31).0 = [_37,_37,_37,_37,_37];
_19 = _32.2 as f32;
Goto(bb12)
}
bb12 = {
_7 = _9;
_34 = [13372878766186490753_u64,18281597341577477584_u64,9043732925101932328_u64,16206951325582489854_u64];
_33 = Adt49::Variant0 { fld0: 9223372036854775807_isize };
_15 = core::ptr::addr_of!(place!(Field::<i8>(Variant(_17, 2), 1)));
(*_15) = 103_isize as i8;
SetDiscriminant(_17, 0);
_25 = !(-3_i8);
_3 = (_6, (*_31).0);
_32.2 = (-394369877_i32) as u16;
_36 = _22 - _22;
_32.1 = _10;
_44 = (-9223372036854775808_isize) << _32.3;
_2 = [_37,_37,_37,_37,_37];
_43 = _3.0 == _6;
match _32.3 {
0 => bb6,
1 => bb10,
2 => bb3,
8546124335028488305 => bb14,
_ => bb13
}
}
bb13 = {
_11 = _16;
_32.2 = 46924_u16 ^ 14193_u16;
_32.2 = 62660_u16;
_11 = _30;
_34 = [15927423575444970471_u64,12415701454202318408_u64,18149748784272373284_u64,2440848615606887103_u64];
_11 = _21;
_6 = _3.0 << (*_15);
_22 = _19 - _19;
_6 = _3.0;
_32 = (3747992467347707346_usize, _8, 7467_u16, 8597248984168477047_usize);
_30 = _21;
_25 = -97_i8;
_21 = _32.1;
Goto(bb7)
}
bb14 = {
_33 = Adt49::Variant2 { fld0: _13,fld1: _27,fld2: _32.3,fld3: _25,fld4: _34,fld5: 3560562274_u32 };
_10 = _27;
_40 = Adt49::Variant0 { fld0: _44 };
_15 = core::ptr::addr_of!(_25);
_42.1 = _37;
place!(Field::<u32>(Variant(_17, 0), 0)) = 3998486176_u32;
_3 = (_6, _2);
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(1_usize, 12_usize, Move(_12), 21_usize, Move(_21), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(1_usize, 37_usize, Move(_37), 26_usize, Move(_26), 35_usize, Move(_35), 27_usize, Move(_27)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(1_usize, 32_usize, Move(_32), 9_usize, Move(_9), 4_usize, Move(_4), 34_usize, Move(_34)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(1_usize, 8_usize, Move(_8), 49_usize, _49, 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: char,mut _2: (i64, [bool; 5]),mut _3: [u8; 8],mut _4: char,mut _5: [bool; 5],mut _6: [bool; 5],mut _7: [u8; 8],mut _8: char,mut _9: [u8; 8],mut _10: [u8; 8],mut _11: i64,mut _12: i64,mut _13: [u8; 8],mut _14: i64) -> Adt55 {
mir! {
type RET = Adt55;
let _15: f32;
let _16: f64;
let _17: (usize, char, u16, usize);
let _18: bool;
let _19: isize;
let _20: [bool; 4];
let _21: f64;
let _22: f64;
let _23: Adt62;
let _24: (i32, bool, f64, u16, isize);
let _25: ();
let _26: ();
{
_11 = !_14;
_11 = _12 | _2.0;
_6 = _5;
Goto(bb1)
}
bb1 = {
_11 = true as i64;
_10 = [82_u8,2_u8,157_u8,106_u8,171_u8,238_u8,157_u8,79_u8];
Goto(bb2)
}
bb2 = {
_5 = [true,false,false,false,false];
_8 = _4;
_7 = [44_u8,108_u8,246_u8,8_u8,131_u8,88_u8,52_u8,175_u8];
_12 = -_2.0;
_5 = _2.1;
_8 = _4;
_6 = _5;
_7 = [12_u8,235_u8,234_u8,218_u8,207_u8,135_u8,9_u8,128_u8];
_1 = _8;
_2 = (_14, _6);
_14 = _12 >> _2.0;
_2.0 = (-103_isize) as i64;
Call(_6 = fn3(_9, _10, _4, _14, _12, _2.1, _14, _7, _10, _11, _14, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = _8;
_7 = [18_u8,148_u8,252_u8,47_u8,178_u8,49_u8,42_u8,90_u8];
RET = Adt55::Variant0 { fld0: 1995997642_u32 };
_7 = [142_u8,177_u8,40_u8,132_u8,91_u8,202_u8,119_u8,84_u8];
place!(Field::<u32>(Variant(RET, 0), 0)) = !528180052_u32;
_7 = _3;
_1 = _8;
SetDiscriminant(RET, 2);
place!(Field::<i8>(Variant(RET, 2), 1)) = -(-59_i8);
_6 = [false,true,true,true,false];
_6 = _2.1;
_17.0 = !7_usize;
Goto(bb4)
}
bb4 = {
_2.1 = [false,true,true,true,true];
_15 = 64694341560873646125871923547661111187_u128 as f32;
_5 = [true,false,false,true,false];
_17.3 = (-15070_i16) as usize;
_17.2 = 35778_u16;
place!(Field::<i8>(Variant(RET, 2), 1)) = 78_i8;
place!(Field::<[bool; 4]>(Variant(RET, 2), 0)) = [false,true,false,false];
SetDiscriminant(RET, 0);
place!(Field::<u32>(Variant(RET, 0), 0)) = 1037581658_u32;
match _17.2 {
0 => bb5,
1 => bb6,
35778 => bb8,
_ => bb7
}
}
bb5 = {
_4 = _8;
_7 = [18_u8,148_u8,252_u8,47_u8,178_u8,49_u8,42_u8,90_u8];
RET = Adt55::Variant0 { fld0: 1995997642_u32 };
_7 = [142_u8,177_u8,40_u8,132_u8,91_u8,202_u8,119_u8,84_u8];
place!(Field::<u32>(Variant(RET, 0), 0)) = !528180052_u32;
_7 = _3;
_1 = _8;
SetDiscriminant(RET, 2);
place!(Field::<i8>(Variant(RET, 2), 1)) = -(-59_i8);
_6 = [false,true,true,true,false];
_6 = _2.1;
_17.0 = !7_usize;
Goto(bb4)
}
bb6 = {
_5 = [true,false,false,false,false];
_8 = _4;
_7 = [44_u8,108_u8,246_u8,8_u8,131_u8,88_u8,52_u8,175_u8];
_12 = -_2.0;
_5 = _2.1;
_8 = _4;
_6 = _5;
_7 = [12_u8,235_u8,234_u8,218_u8,207_u8,135_u8,9_u8,128_u8];
_1 = _8;
_2 = (_14, _6);
_14 = _12 >> _2.0;
_2.0 = (-103_isize) as i64;
Call(_6 = fn3(_9, _10, _4, _14, _12, _2.1, _14, _7, _10, _11, _14, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb7 = {
_11 = true as i64;
_10 = [82_u8,2_u8,157_u8,106_u8,171_u8,238_u8,157_u8,79_u8];
Goto(bb2)
}
bb8 = {
place!(Field::<u32>(Variant(RET, 0), 0)) = !668460725_u32;
_14 = _12;
_15 = _17.0 as f32;
_17 = (11596025822301685080_usize, _8, 20117_u16, 18156222051762134327_usize);
place!(Field::<u32>(Variant(RET, 0), 0)) = 274007577_u32;
place!(Field::<u32>(Variant(RET, 0), 0)) = 54902865_u32 >> _17.0;
place!(Field::<u32>(Variant(RET, 0), 0)) = 1805127458_u32;
_17 = (4_usize, _4, 39301_u16, 0_usize);
_15 = 142595732528124003094138652326899409358_u128 as f32;
_17.3 = _17.0 % _17.0;
_17.3 = _17.0 << _12;
_8 = _4;
_6 = _2.1;
place!(Field::<u32>(Variant(RET, 0), 0)) = !1675295103_u32;
RET = Adt55::Variant0 { fld0: 909393392_u32 };
_9 = _7;
_17 = (18044708399386053904_usize, _4, 63176_u16, 3210754563488888668_usize);
place!(Field::<u32>(Variant(RET, 0), 0)) = 53_u8 as u32;
_5 = [false,true,false,false,true];
_3 = [93_u8,151_u8,93_u8,201_u8,22_u8,73_u8,126_u8,139_u8];
_2.1 = [false,true,true,false,false];
_9 = [71_u8,85_u8,101_u8,88_u8,233_u8,8_u8,142_u8,202_u8];
_19 = 79_isize;
_10 = [121_u8,164_u8,168_u8,190_u8,7_u8,191_u8,238_u8,107_u8];
_20 = [false,true,false,true];
_4 = _1;
match _17.3 {
0 => bb4,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
3210754563488888668 => bb15,
_ => bb14
}
}
bb9 = {
_11 = true as i64;
_10 = [82_u8,2_u8,157_u8,106_u8,171_u8,238_u8,157_u8,79_u8];
Goto(bb2)
}
bb10 = {
_5 = [true,false,false,false,false];
_8 = _4;
_7 = [44_u8,108_u8,246_u8,8_u8,131_u8,88_u8,52_u8,175_u8];
_12 = -_2.0;
_5 = _2.1;
_8 = _4;
_6 = _5;
_7 = [12_u8,235_u8,234_u8,218_u8,207_u8,135_u8,9_u8,128_u8];
_1 = _8;
_2 = (_14, _6);
_14 = _12 >> _2.0;
_2.0 = (-103_isize) as i64;
Call(_6 = fn3(_9, _10, _4, _14, _12, _2.1, _14, _7, _10, _11, _14, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
_4 = _8;
_7 = [18_u8,148_u8,252_u8,47_u8,178_u8,49_u8,42_u8,90_u8];
RET = Adt55::Variant0 { fld0: 1995997642_u32 };
_7 = [142_u8,177_u8,40_u8,132_u8,91_u8,202_u8,119_u8,84_u8];
place!(Field::<u32>(Variant(RET, 0), 0)) = !528180052_u32;
_7 = _3;
_1 = _8;
SetDiscriminant(RET, 2);
place!(Field::<i8>(Variant(RET, 2), 1)) = -(-59_i8);
_6 = [false,true,true,true,false];
_6 = _2.1;
_17.0 = !7_usize;
Goto(bb4)
}
bb12 = {
_2.1 = [false,true,true,true,true];
_15 = 64694341560873646125871923547661111187_u128 as f32;
_5 = [true,false,false,true,false];
_17.3 = (-15070_i16) as usize;
_17.2 = 35778_u16;
place!(Field::<i8>(Variant(RET, 2), 1)) = 78_i8;
place!(Field::<[bool; 4]>(Variant(RET, 2), 0)) = [false,true,false,false];
SetDiscriminant(RET, 0);
place!(Field::<u32>(Variant(RET, 0), 0)) = 1037581658_u32;
match _17.2 {
0 => bb5,
1 => bb6,
35778 => bb8,
_ => bb7
}
}
bb13 = {
_11 = true as i64;
_10 = [82_u8,2_u8,157_u8,106_u8,171_u8,238_u8,157_u8,79_u8];
Goto(bb2)
}
bb14 = {
_5 = [true,false,false,false,false];
_8 = _4;
_7 = [44_u8,108_u8,246_u8,8_u8,131_u8,88_u8,52_u8,175_u8];
_12 = -_2.0;
_5 = _2.1;
_8 = _4;
_6 = _5;
_7 = [12_u8,235_u8,234_u8,218_u8,207_u8,135_u8,9_u8,128_u8];
_1 = _8;
_2 = (_14, _6);
_14 = _12 >> _2.0;
_2.0 = (-103_isize) as i64;
Call(_6 = fn3(_9, _10, _4, _14, _12, _2.1, _14, _7, _10, _11, _14, _4), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
place!(Field::<u32>(Variant(RET, 0), 0)) = 4158150196_u32;
SetDiscriminant(RET, 2);
_17.2 = _19 as u16;
_8 = _4;
_2 = (_12, _5);
_17.1 = _8;
place!(Field::<[bool; 4]>(Variant(RET, 2), 0)) = _20;
_11 = 85_i8 as i64;
_16 = _17.0 as f64;
_21 = -_16;
_17.3 = _17.0 - _17.0;
_14 = -_2.0;
_18 = !true;
_12 = _17.2 as i64;
_17 = (6_usize, _8, 17441_u16, 10714376404287701800_usize);
_13 = [122_u8,230_u8,202_u8,23_u8,129_u8,0_u8,202_u8,12_u8];
_17 = (9408237631922947789_usize, _1, 24747_u16, 2_usize);
RET = Adt55::Variant0 { fld0: 4279634093_u32 };
_12 = _2.0 >> _17.3;
_17.2 = 59284_u16;
_2 = (_12, _6);
_5 = [_18,_18,_18,_18,_18];
_24 = (1313100653_i32, _18, _21, _17.2, _19);
_2.1 = [_24.1,_24.1,_24.1,_24.1,_18];
_3 = [28_u8,169_u8,101_u8,218_u8,67_u8,6_u8,9_u8,244_u8];
_17.0 = !_17.3;
place!(Field::<u32>(Variant(RET, 0), 0)) = _1 as u32;
Goto(bb16)
}
bb16 = {
Call(_25 = dump_var(2_usize, 18_usize, Move(_18), 9_usize, Move(_9), 2_usize, Move(_2), 5_usize, Move(_5)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_25 = dump_var(2_usize, 11_usize, Move(_11), 14_usize, Move(_14), 8_usize, Move(_8), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_25 = dump_var(2_usize, 3_usize, Move(_3), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [u8; 8],mut _2: [u8; 8],mut _3: char,mut _4: i64,mut _5: i64,mut _6: [bool; 5],mut _7: i64,mut _8: [u8; 8],mut _9: [u8; 8],mut _10: i64,mut _11: i64,mut _12: char) -> [bool; 5] {
mir! {
type RET = [bool; 5];
let _13: [i8; 8];
let _14: f32;
let _15: [bool; 4];
let _16: Adt52;
let _17: ((i64, [bool; 5]), ([bool; 5],));
let _18: f64;
let _19: u32;
let _20: Adt63;
let _21: f32;
let _22: [u32; 4];
let _23: i16;
let _24: char;
let _25: i64;
let _26: isize;
let _27: *mut [u32; 4];
let _28: f32;
let _29: ((i64, [bool; 5]), ([bool; 5],));
let _30: isize;
let _31: bool;
let _32: i128;
let _33: (usize, char, u16, usize);
let _34: f64;
let _35: u16;
let _36: *mut *mut [usize; 3];
let _37: ();
let _38: ();
{
_5 = _7 | _11;
_1 = _9;
_3 = _12;
RET = _6;
_12 = _3;
_1 = _9;
RET = _6;
_10 = _11;
_11 = -_5;
_4 = _11 >> _5;
_13 = [(-37_i8),20_i8,(-82_i8),44_i8,119_i8,(-8_i8),(-9_i8),16_i8];
_6 = [false,true,false,true,true];
_12 = _3;
_13 = [62_i8,77_i8,(-88_i8),(-128_i8),99_i8,12_i8,108_i8,91_i8];
_6 = [false,true,false,false,true];
_4 = _11 >> _11;
Call(_8 = fn4(_10, _12, _9, _4, _6, _10, _6, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = !_10;
_6 = [true,true,true,false,false];
_15 = [false,true,false,false];
RET = [true,true,false,false,false];
RET = _6;
_15 = [false,true,true,true];
_9 = [248_u8,36_u8,200_u8,26_u8,43_u8,20_u8,146_u8,120_u8];
_14 = _5 as f32;
_9 = [177_u8,162_u8,76_u8,238_u8,59_u8,158_u8,98_u8,14_u8];
_6 = [false,false,true,true,false];
_4 = _7;
_4 = !_11;
_3 = _12;
RET = [true,false,true,true,false];
_10 = -_4;
_12 = _3;
_5 = _11 & _4;
Goto(bb2)
}
bb2 = {
_7 = _11;
_3 = _12;
_11 = _5;
_12 = _3;
_8 = [58_u8,146_u8,58_u8,55_u8,188_u8,34_u8,65_u8,233_u8];
_1 = [103_u8,95_u8,247_u8,238_u8,5_u8,120_u8,195_u8,17_u8];
_6 = [false,true,true,false,true];
_14 = (-46_i8) as f32;
_15 = [false,true,false,true];
_16.fld3 = _5 ^ _7;
_16.fld3 = -_10;
_17.0 = (_11, RET);
_16.fld1.2 = !10882_i16;
_5 = _17.0.0;
_16.fld1.3 = 548212222_u32 ^ 2897829070_u32;
_18 = 100_i8 as f64;
_3 = _12;
_16.fld1.0 = _4 as u8;
_17.0.1 = _6;
RET = _17.0.1;
_13 = [(-24_i8),27_i8,113_i8,(-98_i8),47_i8,(-47_i8),(-45_i8),115_i8];
_16.fld1.0 = 152_u8;
_2 = _8;
_19 = _16.fld1.3 - _16.fld1.3;
_13 = [82_i8,116_i8,(-106_i8),127_i8,(-120_i8),78_i8,(-93_i8),(-46_i8)];
Call(_7 = core::intrinsics::bswap(_17.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_16.fld2 = core::ptr::addr_of_mut!(_3);
Goto(bb5)
}
bb5 = {
_18 = _21 as f64;
_10 = _11 + _16.fld3;
_16.fld3 = _10;
RET = [false,true,true,false,true];
_1 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_22 = [_16.fld1.3,_19,_19,_19];
_1 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_1 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_15 = [false,false,false,false];
_16.fld2 = core::ptr::addr_of_mut!(_12);
_16.fld3 = false as i64;
_12 = _3;
_16.fld1.1 = 2_usize;
_17.0.1 = [false,true,false,false,true];
_18 = _16.fld1.2 as f64;
_16.fld2 = core::ptr::addr_of_mut!(_3);
_6 = [true,true,true,false,false];
_19 = _16.fld1.3;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_17.0 = (_10, _6);
_17.1.0 = [false,true,false,true,false];
_24 = _3;
match _16.fld1.1 {
2 => bb7,
_ => bb6
}
}
bb6 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb7 = {
_3 = _24;
RET = _17.0.1;
_13 = [(-99_i8),(-90_i8),18_i8,24_i8,81_i8,(-6_i8),56_i8,(-57_i8)];
_25 = 24745_u16 as i64;
_17.1.0 = _6;
_23 = 15097_u16 as i16;
_28 = -_14;
_17.1 = (_17.0.1,);
_4 = (-81_i8) as i64;
RET = [true,false,false,false,false];
_5 = _10;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_16.fld1.1 = 0_usize * 18387471312206991561_usize;
_13 = [114_i8,(-84_i8),53_i8,100_i8,60_i8,120_i8,11_i8,115_i8];
Goto(bb8)
}
bb8 = {
_4 = _19 as i64;
_28 = _21 - _21;
_29.0 = (_10, _6);
_16.fld2 = core::ptr::addr_of_mut!(_3);
_4 = -_29.0.0;
match _16.fld1.0 {
0 => bb3,
1 => bb9,
2 => bb10,
152 => bb12,
_ => bb11
}
}
bb9 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb10 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb11 = {
_4 = !_10;
_6 = [true,true,true,false,false];
_15 = [false,true,false,false];
RET = [true,true,false,false,false];
RET = _6;
_15 = [false,true,true,true];
_9 = [248_u8,36_u8,200_u8,26_u8,43_u8,20_u8,146_u8,120_u8];
_14 = _5 as f32;
_9 = [177_u8,162_u8,76_u8,238_u8,59_u8,158_u8,98_u8,14_u8];
_6 = [false,false,true,true,false];
_4 = _7;
_4 = !_11;
_3 = _12;
RET = [true,false,true,true,false];
_10 = -_4;
_12 = _3;
_5 = _11 & _4;
Goto(bb2)
}
bb12 = {
_29.0 = _17.0;
_6 = [false,false,false,true,true];
_16.fld1.3 = _19;
_33 = (_16.fld1.1, _3, 20816_u16, _16.fld1.1);
_31 = false;
_29.0 = (_5, RET);
_5 = _7 + _10;
_34 = _18;
match _33.2 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
20816 => bb18,
_ => bb17
}
}
bb13 = {
_4 = !_10;
_6 = [true,true,true,false,false];
_15 = [false,true,false,false];
RET = [true,true,false,false,false];
RET = _6;
_15 = [false,true,true,true];
_9 = [248_u8,36_u8,200_u8,26_u8,43_u8,20_u8,146_u8,120_u8];
_14 = _5 as f32;
_9 = [177_u8,162_u8,76_u8,238_u8,59_u8,158_u8,98_u8,14_u8];
_6 = [false,false,true,true,false];
_4 = _7;
_4 = !_11;
_3 = _12;
RET = [true,false,true,true,false];
_10 = -_4;
_12 = _3;
_5 = _11 & _4;
Goto(bb2)
}
bb14 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_7 = _11;
_3 = _12;
_11 = _5;
_12 = _3;
_8 = [58_u8,146_u8,58_u8,55_u8,188_u8,34_u8,65_u8,233_u8];
_1 = [103_u8,95_u8,247_u8,238_u8,5_u8,120_u8,195_u8,17_u8];
_6 = [false,true,true,false,true];
_14 = (-46_i8) as f32;
_15 = [false,true,false,true];
_16.fld3 = _5 ^ _7;
_16.fld3 = -_10;
_17.0 = (_11, RET);
_16.fld1.2 = !10882_i16;
_5 = _17.0.0;
_16.fld1.3 = 548212222_u32 ^ 2897829070_u32;
_18 = 100_i8 as f64;
_3 = _12;
_16.fld1.0 = _4 as u8;
_17.0.1 = _6;
RET = _17.0.1;
_13 = [(-24_i8),27_i8,113_i8,(-98_i8),47_i8,(-47_i8),(-45_i8),115_i8];
_16.fld1.0 = 152_u8;
_2 = _8;
_19 = _16.fld1.3 - _16.fld1.3;
_13 = [82_i8,116_i8,(-106_i8),127_i8,(-120_i8),78_i8,(-93_i8),(-46_i8)];
Call(_7 = core::intrinsics::bswap(_17.0.0), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_3 = _12;
_15 = [true,false,true,true];
_12 = _3;
RET = [false,false,true,false,true];
_17.0 = (_16.fld3, _6);
_21 = -_14;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
Call(_7 = core::intrinsics::bswap(_4), ReturnTo(bb4), UnwindUnreachable())
}
bb17 = {
_3 = _24;
RET = _17.0.1;
_13 = [(-99_i8),(-90_i8),18_i8,24_i8,81_i8,(-6_i8),56_i8,(-57_i8)];
_25 = 24745_u16 as i64;
_17.1.0 = _6;
_23 = 15097_u16 as i16;
_28 = -_14;
_17.1 = (_17.0.1,);
_4 = (-81_i8) as i64;
RET = [true,false,false,false,false];
_5 = _10;
_8 = [_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0,_16.fld1.0];
_16.fld1.1 = 0_usize * 18387471312206991561_usize;
_13 = [114_i8,(-84_i8),53_i8,100_i8,60_i8,120_i8,11_i8,115_i8];
Goto(bb8)
}
bb18 = {
_7 = _5;
_27 = core::ptr::addr_of_mut!(_22);
_29.0 = (_5, _17.1.0);
_29 = _17;
_21 = _17.0.0 as f32;
_10 = _5;
Goto(bb19)
}
bb19 = {
Call(_37 = dump_var(3_usize, 10_usize, Move(_10), 24_usize, Move(_24), 23_usize, Move(_23), 4_usize, Move(_4)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_37 = dump_var(3_usize, 1_usize, Move(_1), 22_usize, Move(_22), 31_usize, Move(_31), 2_usize, Move(_2)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_37 = dump_var(3_usize, 3_usize, Move(_3), 17_usize, Move(_17), 8_usize, Move(_8), 38_usize, _38), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i64,mut _2: char,mut _3: [u8; 8],mut _4: i64,mut _5: [bool; 5],mut _6: i64,mut _7: [bool; 5],mut _8: i64) -> [u8; 8] {
mir! {
type RET = [u8; 8];
let _9: f32;
let _10: [u32; 4];
let _11: i8;
let _12: [bool; 5];
let _13: f64;
let _14: *const *mut ([bool; 5],);
let _15: *mut *const i128;
let _16: u16;
let _17: *const i128;
let _18: Adt51;
let _19: [u64; 4];
let _20: bool;
let _21: f32;
let _22: *const i8;
let _23: u64;
let _24: (i32, bool, f64, u16, isize);
let _25: ((i64, [bool; 5]), ([bool; 5],));
let _26: *mut [usize; 3];
let _27: i32;
let _28: ([i8; 8], [usize; 3], bool);
let _29: (usize, char, u16, usize);
let _30: i8;
let _31: *const *mut ([bool; 5],);
let _32: [i128; 1];
let _33: f64;
let _34: bool;
let _35: ((u8, usize, i16, u32),);
let _36: u64;
let _37: ((u8, usize, i16, u32),);
let _38: isize;
let _39: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _40: f64;
let _41: u128;
let _42: i16;
let _43: Adt59;
let _44: isize;
let _45: [i8; 8];
let _46: Adt56;
let _47: isize;
let _48: ();
let _49: ();
{
_6 = 74_i8 as i64;
RET = [43_u8,84_u8,253_u8,180_u8,24_u8,20_u8,243_u8,191_u8];
_6 = _8;
_5 = [false,false,false,true,false];
_2 = '\u{777a0}';
_7 = [true,false,false,true,false];
_4 = _8 >> _1;
_9 = 6_usize as f32;
RET = [118_u8,22_u8,12_u8,163_u8,12_u8,0_u8,163_u8,34_u8];
RET = [52_u8,226_u8,85_u8,203_u8,120_u8,86_u8,76_u8,55_u8];
_1 = _9 as i64;
RET = [240_u8,28_u8,109_u8,80_u8,252_u8,22_u8,63_u8,131_u8];
_5 = [true,false,false,true,true];
_1 = !_4;
_6 = !_1;
_12 = [false,false,true,true,false];
_4 = _1;
_2 = '\u{da54f}';
_7 = [false,true,true,false,true];
_5 = [true,false,false,true,false];
_10 = [4115727049_u32,278324988_u32,2805618444_u32,2631348981_u32];
Call(_5 = fn5(_8, _1, _6, _4, _3, _6, _6, RET, _8, _4, _4, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_13 = 1702389597_u32 as f64;
_1 = _4 ^ _8;
_7 = [true,true,false,false,true];
_11 = _13 as i8;
_6 = _1 * _1;
_15 = core::ptr::addr_of_mut!(_17);
_16 = 63095_u16;
_4 = _13 as i64;
_3 = [111_u8,85_u8,233_u8,27_u8,213_u8,62_u8,128_u8,117_u8];
_2 = '\u{98c16}';
_6 = 6_u8 as i64;
_6 = _9 as i64;
_9 = _8 as f32;
_1 = !_8;
_15 = core::ptr::addr_of_mut!((*_15));
_7 = [true,true,false,true,false];
RET = [217_u8,41_u8,151_u8,122_u8,167_u8,155_u8,82_u8,1_u8];
_9 = (-690350143_i32) as f32;
Goto(bb2)
}
bb2 = {
_7 = [true,true,true,true,false];
_21 = _9;
_16 = _11 as u16;
_9 = _21 + _21;
_13 = (-27326481125256167318503619302653901112_i128) as f64;
Goto(bb3)
}
bb3 = {
_5 = _12;
_11 = (-4_i8) | 73_i8;
_19 = [4755251912322791641_u64,2006941870227971189_u64,17963962161626229659_u64,7113687986867659349_u64];
_21 = -_9;
_2 = '\u{b8a80}';
_5 = [false,true,false,true,true];
_23 = 11017451827060020027_u64 & 9467327870717832218_u64;
_20 = _2 == _2;
_20 = _1 != _1;
_20 = true ^ true;
_9 = _21;
_20 = false;
_22 = core::ptr::addr_of!(_11);
_1 = _8 | _8;
(*_22) = (-96_i8);
_24.0 = 1397931069_i32;
RET = [98_u8,194_u8,64_u8,13_u8,62_u8,245_u8,66_u8,124_u8];
Goto(bb4)
}
bb4 = {
_15 = core::ptr::addr_of_mut!((*_15));
_22 = core::ptr::addr_of!((*_22));
_6 = _1 - _1;
_12 = _5;
RET = _3;
_24.4 = (-9223372036854775808_isize);
_7 = [_20,_20,_20,_20,_20];
_25.0.0 = _1;
_25.0.1 = [_20,_20,_20,_20,_20];
(*_22) = (-30_i8);
_13 = 5425498003406372025_usize as f64;
_21 = _9;
_7 = [_20,_20,_20,_20,_20];
_10 = [2911333570_u32,4150389066_u32,155222176_u32,78358244_u32];
Call(_24.3 = core::intrinsics::transmute(_16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_25.0.1 = _7;
_7 = _12;
RET = [95_u8,116_u8,88_u8,8_u8,4_u8,206_u8,39_u8,15_u8];
_6 = !_25.0.0;
_24.1 = !_20;
_21 = -_9;
_25.0 = (_8, _12);
_22 = core::ptr::addr_of!((*_22));
_4 = _24.0 as i64;
match _11 {
340282366920938463463374607431768211426 => bb6,
_ => bb4
}
}
bb6 = {
_25.0 = (_1, _5);
_27 = -_24.0;
_25.0 = (_8, _7);
_25.1 = (_25.0.1,);
(*_22) = _16 as i8;
_24.3 = _16;
_29 = (12019471467038690385_usize, _2, _16, 2_usize);
_29.2 = _24.3;
_24.3 = !_29.2;
_28.2 = _29.3 >= _29.3;
_27 = _11 as i32;
_27 = _24.0;
_12 = _25.0.1;
_25.1.0 = [_28.2,_28.2,_28.2,_28.2,_28.2];
_28.1 = [_29.0,_29.0,_29.0];
_26 = core::ptr::addr_of_mut!(_28.1);
_28.2 = !_24.1;
_9 = _24.4 as f32;
Goto(bb7)
}
bb7 = {
_24.0 = -_27;
_2 = _29.1;
_28.1 = [_29.0,_29.0,_29.3];
_35.0.1 = !_29.3;
_28.2 = _6 == _8;
_16 = !_29.2;
_24.0 = _24.4 as i32;
_28.0 = [(*_22),_11,_11,(*_22),(*_22),(*_22),_11,(*_22)];
_35.0.0 = 254_u8;
_23 = _13 as u64;
_27 = _24.4 as i32;
_29.3 = _29.0;
_37.0.2 = 1600_i16 & (-10640_i16);
_35.0 = (247_u8, _29.3, _37.0.2, 539952591_u32);
_24.2 = _13 + _13;
_21 = _9 * _9;
_32 = [(-68830686469803058625503021301489919238_i128)];
_30 = (*_22);
_28.1 = [_29.3,_29.0,_29.0];
_34 = !_28.2;
_36 = !_23;
_15 = core::ptr::addr_of_mut!((*_15));
_33 = _24.2 + _13;
_24.4 = _35.0.0 as isize;
(*_26) = [_29.0,_35.0.1,_35.0.1];
_37.0.2 = !_35.0.2;
Goto(bb8)
}
bb8 = {
_37.0.1 = _9 as usize;
_29.2 = _24.2 as u16;
_29.2 = _16 << _24.4;
_37.0.1 = _35.0.1 >> _6;
_25.1.0 = _12;
_37.0.3 = !_35.0.3;
_32 = [(-120632339156992372250964883240184378569_i128)];
_26 = core::ptr::addr_of_mut!(_28.1);
_29 = (_37.0.1, _2, _16, _37.0.1);
_3 = RET;
_29.2 = _24.3 ^ _16;
_28.0 = [(*_22),(*_22),(*_22),(*_22),_11,_11,(*_22),(*_22)];
_7 = [_34,_28.2,_28.2,_34,_28.2];
_11 = _30;
_37.0 = (_35.0.0, _29.0, _35.0.2, _35.0.3);
_37.0 = (_35.0.0, _35.0.1, _35.0.2, _35.0.3);
match _35.0.3 {
0 => bb7,
1 => bb2,
2 => bb4,
539952591 => bb10,
_ => bb9
}
}
bb9 = {
_24.0 = -_27;
_2 = _29.1;
_28.1 = [_29.0,_29.0,_29.3];
_35.0.1 = !_29.3;
_28.2 = _6 == _8;
_16 = !_29.2;
_24.0 = _24.4 as i32;
_28.0 = [(*_22),_11,_11,(*_22),(*_22),(*_22),_11,(*_22)];
_35.0.0 = 254_u8;
_23 = _13 as u64;
_27 = _24.4 as i32;
_29.3 = _29.0;
_37.0.2 = 1600_i16 & (-10640_i16);
_35.0 = (247_u8, _29.3, _37.0.2, 539952591_u32);
_24.2 = _13 + _13;
_21 = _9 * _9;
_32 = [(-68830686469803058625503021301489919238_i128)];
_30 = (*_22);
_28.1 = [_29.3,_29.0,_29.0];
_34 = !_28.2;
_36 = !_23;
_15 = core::ptr::addr_of_mut!((*_15));
_33 = _24.2 + _13;
_24.4 = _35.0.0 as isize;
(*_26) = [_29.0,_35.0.1,_35.0.1];
_37.0.2 = !_35.0.2;
Goto(bb8)
}
bb10 = {
_38 = 20462774754155071480483324803915359954_u128 as isize;
_35 = (_37.0,);
_39.2 = core::ptr::addr_of_mut!(_17);
_29.1 = _2;
RET = _3;
_36 = !_23;
RET = _3;
_37.0.0 = !_35.0.0;
_39.0.1 = _7;
_26 = core::ptr::addr_of_mut!((*_26));
_28.1 = [_29.0,_29.3,_35.0.1];
_28.0 = [_30,_30,_11,(*_22),(*_22),_30,_30,(*_22)];
_24.2 = _13 - _33;
_42 = (-68324629751035997896072995846946328944_i128) as i16;
_39.0 = (_6, _12);
_41 = !211093670726321857366371931377463435914_u128;
_28.1 = [_29.0,_29.0,_37.0.1];
_37.0.0 = _35.0.0;
_9 = _21;
_34 = !_28.2;
(*_26) = [_29.3,_29.0,_29.0];
_15 = core::ptr::addr_of_mut!((*_15));
_13 = _6 as f64;
match _37.0.0 {
0 => bb9,
1 => bb7,
2 => bb11,
247 => bb13,
_ => bb12
}
}
bb11 = {
_24.0 = -_27;
_2 = _29.1;
_28.1 = [_29.0,_29.0,_29.3];
_35.0.1 = !_29.3;
_28.2 = _6 == _8;
_16 = !_29.2;
_24.0 = _24.4 as i32;
_28.0 = [(*_22),_11,_11,(*_22),(*_22),(*_22),_11,(*_22)];
_35.0.0 = 254_u8;
_23 = _13 as u64;
_27 = _24.4 as i32;
_29.3 = _29.0;
_37.0.2 = 1600_i16 & (-10640_i16);
_35.0 = (247_u8, _29.3, _37.0.2, 539952591_u32);
_24.2 = _13 + _13;
_21 = _9 * _9;
_32 = [(-68830686469803058625503021301489919238_i128)];
_30 = (*_22);
_28.1 = [_29.3,_29.0,_29.0];
_34 = !_28.2;
_36 = !_23;
_15 = core::ptr::addr_of_mut!((*_15));
_33 = _24.2 + _13;
_24.4 = _35.0.0 as isize;
(*_26) = [_29.0,_35.0.1,_35.0.1];
_37.0.2 = !_35.0.2;
Goto(bb8)
}
bb12 = {
_15 = core::ptr::addr_of_mut!((*_15));
_22 = core::ptr::addr_of!((*_22));
_6 = _1 - _1;
_12 = _5;
RET = _3;
_24.4 = (-9223372036854775808_isize);
_7 = [_20,_20,_20,_20,_20];
_25.0.0 = _1;
_25.0.1 = [_20,_20,_20,_20,_20];
(*_22) = (-30_i8);
_13 = 5425498003406372025_usize as f64;
_21 = _9;
_7 = [_20,_20,_20,_20,_20];
_10 = [2911333570_u32,4150389066_u32,155222176_u32,78358244_u32];
Call(_24.3 = core::intrinsics::transmute(_16), ReturnTo(bb5), UnwindUnreachable())
}
bb13 = {
_39.1 = core::ptr::addr_of!(_37.0);
_24.3 = !_29.2;
_10 = [_37.0.3,_35.0.3,_35.0.3,_35.0.3];
_32 = [87078020691847240589529893055411095179_i128];
_37.0.3 = _35.0.3;
_45 = [(*_22),_11,(*_22),_11,_30,_11,_11,_30];
_6 = _1;
Goto(bb14)
}
bb14 = {
_28.2 = _34;
_21 = _9 * _9;
_9 = -_21;
_16 = _24.3;
_29.0 = !_29.3;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(4_usize, 7_usize, Move(_7), 27_usize, Move(_27), 41_usize, Move(_41), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(4_usize, 34_usize, Move(_34), 42_usize, Move(_42), 19_usize, Move(_19), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(4_usize, 37_usize, Move(_37), 35_usize, Move(_35), 32_usize, Move(_32), 36_usize, Move(_36)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_48 = dump_var(4_usize, 25_usize, Move(_25), 28_usize, Move(_28), 49_usize, _49, 49_usize, _49), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: i64,mut _2: i64,mut _3: i64,mut _4: i64,mut _5: [u8; 8],mut _6: i64,mut _7: i64,mut _8: [u8; 8],mut _9: i64,mut _10: i64,mut _11: i64,mut _12: [u32; 4]) -> [bool; 5] {
mir! {
type RET = [bool; 5];
let _13: ([i8; 8], [usize; 3], bool);
let _14: isize;
let _15: (usize, char, u16, usize);
let _16: f32;
let _17: bool;
let _18: (u8, usize, i16, u32);
let _19: *mut char;
let _20: i8;
let _21: u16;
let _22: isize;
let _23: i32;
let _24: f64;
let _25: u128;
let _26: [i8; 8];
let _27: ([bool; 5],);
let _28: char;
let _29: ();
let _30: ();
{
Goto(bb1)
}
bb1 = {
_5 = [174_u8,163_u8,189_u8,151_u8,184_u8,195_u8,147_u8,2_u8];
RET = [true,false,true,true,false];
_13.2 = true;
_3 = _4;
_10 = 27_u8 as i64;
_3 = _4;
_11 = -_6;
_13.0 = [(-124_i8),3_i8,(-108_i8),53_i8,23_i8,91_i8,(-115_i8),(-79_i8)];
_4 = -_7;
_4 = !_11;
_5 = _8;
_1 = '\u{f60df}' as i64;
_3 = (-681897682_i32) as i64;
Call(_13.1 = fn6(_11, _9, _2, _6, _9, _2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_15 = (1_usize, '\u{cec9}', 41574_u16, 6205796742684615282_usize);
_9 = _15.2 as i64;
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_4 = 1131764269_u32 as i64;
_15.0 = _15.3;
_15.3 = (-1083836028_i32) as usize;
_8 = [5_u8,89_u8,74_u8,46_u8,109_u8,160_u8,0_u8,214_u8];
_1 = _6;
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_13.0 = [(-122_i8),64_i8,(-74_i8),16_i8,13_i8,(-37_i8),78_i8,127_i8];
_12 = [484740061_u32,3502940918_u32,3329539031_u32,3564404168_u32];
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_3 = _1;
_5 = [11_u8,180_u8,11_u8,118_u8,0_u8,216_u8,134_u8,122_u8];
_12 = [3294156196_u32,886700649_u32,2056371359_u32,1717786321_u32];
_10 = -_7;
_15 = (2_usize, '\u{104cba}', 33929_u16, 14544424245362006855_usize);
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_3 = _7;
match _15.0 {
0 => bb1,
1 => bb3,
2 => bb5,
_ => bb4
}
}
bb3 = {
_5 = [174_u8,163_u8,189_u8,151_u8,184_u8,195_u8,147_u8,2_u8];
RET = [true,false,true,true,false];
_13.2 = true;
_3 = _4;
_10 = 27_u8 as i64;
_3 = _4;
_11 = -_6;
_13.0 = [(-124_i8),3_i8,(-108_i8),53_i8,23_i8,91_i8,(-115_i8),(-79_i8)];
_4 = -_7;
_4 = !_11;
_5 = _8;
_1 = '\u{f60df}' as i64;
_3 = (-681897682_i32) as i64;
Call(_13.1 = fn6(_11, _9, _2, _6, _9, _2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
_5 = [141_u8,216_u8,181_u8,59_u8,113_u8,239_u8,133_u8,37_u8];
_15.1 = '\u{f6b82}';
_8 = _5;
_7 = _2 * _1;
_3 = _15.1 as i64;
_10 = -_2;
_15.1 = '\u{4d19d}';
_6 = 17185783574731410403_u64 as i64;
_9 = _15.1 as i64;
_15.1 = '\u{f5a70}';
_13.0 = [39_i8,96_i8,94_i8,(-46_i8),(-89_i8),(-109_i8),(-90_i8),(-26_i8)];
_16 = 208545660563454964612310031908434743320_u128 as f32;
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_13.1 = [_15.3,_15.0,_15.0];
_18 = (111_u8, _15.3, 25580_i16, 3781197656_u32);
_19 = core::ptr::addr_of_mut!(_15.1);
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_15.2 = 35160_u16;
_8 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_17 = _1 != _7;
_18.2 = 9989_i16;
_7 = !_11;
match _18.3 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
3781197656 => bb11,
_ => bb10
}
}
bb6 = {
Return()
}
bb7 = {
_5 = [174_u8,163_u8,189_u8,151_u8,184_u8,195_u8,147_u8,2_u8];
RET = [true,false,true,true,false];
_13.2 = true;
_3 = _4;
_10 = 27_u8 as i64;
_3 = _4;
_11 = -_6;
_13.0 = [(-124_i8),3_i8,(-108_i8),53_i8,23_i8,91_i8,(-115_i8),(-79_i8)];
_4 = -_7;
_4 = !_11;
_5 = _8;
_1 = '\u{f60df}' as i64;
_3 = (-681897682_i32) as i64;
Call(_13.1 = fn6(_11, _9, _2, _6, _9, _2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_15 = (1_usize, '\u{cec9}', 41574_u16, 6205796742684615282_usize);
_9 = _15.2 as i64;
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_4 = 1131764269_u32 as i64;
_15.0 = _15.3;
_15.3 = (-1083836028_i32) as usize;
_8 = [5_u8,89_u8,74_u8,46_u8,109_u8,160_u8,0_u8,214_u8];
_1 = _6;
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_13.0 = [(-122_i8),64_i8,(-74_i8),16_i8,13_i8,(-37_i8),78_i8,127_i8];
_12 = [484740061_u32,3502940918_u32,3329539031_u32,3564404168_u32];
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_3 = _1;
_5 = [11_u8,180_u8,11_u8,118_u8,0_u8,216_u8,134_u8,122_u8];
_12 = [3294156196_u32,886700649_u32,2056371359_u32,1717786321_u32];
_10 = -_7;
_15 = (2_usize, '\u{104cba}', 33929_u16, 14544424245362006855_usize);
RET = [_13.2,_13.2,_13.2,_13.2,_13.2];
_3 = _7;
match _15.0 {
0 => bb1,
1 => bb3,
2 => bb5,
_ => bb4
}
}
bb9 = {
_5 = [174_u8,163_u8,189_u8,151_u8,184_u8,195_u8,147_u8,2_u8];
RET = [true,false,true,true,false];
_13.2 = true;
_3 = _4;
_10 = 27_u8 as i64;
_3 = _4;
_11 = -_6;
_13.0 = [(-124_i8),3_i8,(-108_i8),53_i8,23_i8,91_i8,(-115_i8),(-79_i8)];
_4 = -_7;
_4 = !_11;
_5 = _8;
_1 = '\u{f60df}' as i64;
_3 = (-681897682_i32) as i64;
Call(_13.1 = fn6(_11, _9, _2, _6, _9, _2, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_15.2 = 15032174341460825802_u64 as u16;
_17 = !_13.2;
_13.1 = [_15.3,_15.3,_18.1];
(*_19) = '\u{6605a}';
_12 = [_18.3,_18.3,_18.3,_18.3];
_6 = _2 << _10;
_18.1 = _15.0 / _15.3;
_12 = [_18.3,_18.3,_18.3,_18.3];
_13.2 = _17;
_15 = (_18.1, '\u{de899}', 53766_u16, _18.1);
_11 = _10 & _10;
_21 = 105561924982891148332611799788475726813_i128 as u16;
_5 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_13.2 = _10 != _9;
_20 = -(-72_i8);
_16 = 11578572301281702711926076037064369589_u128 as f32;
_15.0 = _15.3 + _15.3;
_16 = 2307832369467561669_u64 as f32;
_8 = [_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0,_18.0];
_14 = _18.0 as isize;
_3 = _7 << _15.2;
_22 = 17137880948258237556_u64 as isize;
_18.3 = !4275006921_u32;
_17 = _13.2 | _13.2;
Goto(bb12)
}
bb12 = {
_15.1 = '\u{1b65d}';
_22 = _14 & _14;
_15.3 = _18.3 as usize;
_24 = _16 as f64;
RET = [_17,_13.2,_17,_17,_13.2];
_11 = _7;
_10 = _3;
_2 = _7 * _10;
_1 = _6 * _7;
_3 = _7 >> _6;
_15.2 = !_21;
_27 = (RET,);
_12 = [_18.3,_18.3,_18.3,_18.3];
Goto(bb13)
}
bb13 = {
Call(_29 = dump_var(5_usize, 21_usize, Move(_21), 9_usize, Move(_9), 6_usize, Move(_6), 7_usize, Move(_7)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_29 = dump_var(5_usize, 12_usize, Move(_12), 2_usize, Move(_2), 10_usize, Move(_10), 11_usize, Move(_11)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_29 = dump_var(5_usize, 15_usize, Move(_15), 3_usize, Move(_3), 30_usize, _30, 30_usize, _30), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: i64,mut _2: i64,mut _3: i64,mut _4: i64,mut _5: i64,mut _6: i64,mut _7: i64) -> [usize; 3] {
mir! {
type RET = [usize; 3];
let _8: *const i8;
let _9: Adt51;
let _10: [usize; 3];
let _11: char;
let _12: usize;
let _13: *mut *mut [usize; 3];
let _14: (i64, [bool; 5]);
let _15: isize;
let _16: ([bool; 5], usize, [u8; 8]);
let _17: bool;
let _18: *mut char;
let _19: i128;
let _20: i32;
let _21: (usize, char, u16, usize);
let _22: isize;
let _23: (i64, [bool; 5]);
let _24: isize;
let _25: f64;
let _26: f32;
let _27: [i8; 8];
let _28: i64;
let _29: Adt65;
let _30: u64;
let _31: u32;
let _32: u64;
let _33: u16;
let _34: [bool; 4];
let _35: isize;
let _36: ();
let _37: ();
{
_5 = true as i64;
_2 = (-4479_i16) as i64;
RET = [17530313455279687321_usize,16365024032110330041_usize,5_usize];
RET = [0_usize,17445410478592970383_usize,17900356113590684960_usize];
_1 = '\u{28c54}' as i64;
_7 = !_3;
RET = [10251711663006191946_usize,15903744932953830665_usize,16291639457000815261_usize];
RET = [6_usize,8529959937550337523_usize,5_usize];
RET = [6_usize,6_usize,6725086308828094798_usize];
_2 = _4 << _1;
_3 = _7 | _2;
_1 = _7 | _2;
RET = [4_usize,1_usize,9471026682302699651_usize];
_4 = 20818993_u32 as i64;
_3 = 206_u8 as i64;
_10 = [6_usize,16553641078132285776_usize,1_usize];
RET = _10;
_4 = _2;
Goto(bb1)
}
bb1 = {
_3 = _1;
RET = _10;
_11 = '\u{976c1}';
_7 = _6;
_1 = 46231_u16 as i64;
_7 = _6 - _2;
_12 = !14068268398954893959_usize;
_2 = _3 >> _4;
_6 = _2 << _5;
RET = _10;
_12 = !5_usize;
_5 = _3 * _3;
_7 = _3 << _5;
RET = _10;
_7 = _5 | _2;
_6 = _5;
_1 = !_7;
_6 = _1 | _5;
_10 = [_12,_12,_12];
_10 = [_12,_12,_12];
_11 = '\u{9a644}';
_12 = !6620444591572773800_usize;
RET = [_12,_12,_12];
_1 = _6;
_4 = !_1;
_14.0 = false as i64;
RET = [_12,_12,_12];
_6 = !_5;
_7 = 61418_u16 as i64;
Call(_11 = fn7(_4, _1, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_14.0 = _5 + _4;
_1 = -_5;
_5 = -_6;
_4 = -_5;
_3 = _5 - _4;
_12 = _11 as usize;
_15 = 2_isize;
_14.1 = [true,true,true,true,true];
_12 = !10601250754948228924_usize;
_3 = _1 + _5;
_14.0 = _3 | _5;
_11 = '\u{92ceb}';
_16.0 = [false,true,true,true,true];
_5 = _14.0;
_17 = !true;
_10 = RET;
_18 = core::ptr::addr_of_mut!(_11);
_3 = -_1;
_19 = 91933498035159741071163300710849665676_u128 as i128;
_3 = _6;
_14 = (_5, _16.0);
_14.1 = [_17,_17,_17,_17,_17];
_16.2 = [14_u8,80_u8,134_u8,60_u8,254_u8,208_u8,44_u8,20_u8];
_18 = core::ptr::addr_of_mut!((*_18));
_11 = '\u{cdd39}';
_3 = -_1;
_16.1 = !_12;
Call(_10 = fn19(_16, _14, _14, _5, _14, _4, _5, _5, _3, _16.2, _1, _2, _3, _1, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7 = !_1;
_19 = !85830464547674703848588534104920289916_i128;
RET = _10;
RET = _10;
_2 = 1297291046_u32 as i64;
Goto(bb4)
}
bb4 = {
_7 = !_14.0;
_7 = _1;
_20 = !(-2032506877_i32);
_2 = _1;
_21 = (_12, (*_18), 4067_u16, _12);
_15 = _21.2 as isize;
(*_18) = _21.1;
_12 = _21.0;
_19 = !58145356188635836696424782962932475370_i128;
_16.2 = [86_u8,185_u8,108_u8,226_u8,255_u8,14_u8,222_u8,49_u8];
_3 = !_7;
_23.0 = _14.0 & _4;
_21.2 = 4530930087085822093_u64 as u16;
_17 = _4 <= _3;
RET = _10;
_15 = (-9223372036854775808_isize) - (-44_isize);
_6 = (*_18) as i64;
RET = [_21.3,_21.3,_21.0];
_5 = !_2;
_7 = _3 | _14.0;
_15 = (-9223372036854775808_isize);
_23.1 = _16.0;
_5 = _7;
Call(_15 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
(*_18) = _21.1;
_17 = !true;
_24 = _21.2 as isize;
_16.1 = !_21.0;
_21.1 = (*_18);
Goto(bb6)
}
bb6 = {
_14.0 = -_3;
Goto(bb7)
}
bb7 = {
_2 = _1 - _3;
_3 = !_1;
_26 = _20 as f32;
RET = [_21.0,_12,_16.1];
Goto(bb8)
}
bb8 = {
_7 = _23.0;
_20 = -(-899487872_i32);
_22 = _15 & _24;
_14.0 = _2 >> _2;
RET = [_21.3,_21.3,_21.0];
_3 = _4 * _4;
_3 = 62316903551047503293703524870244113434_u128 as i64;
_14.1 = _16.0;
RET = [_21.3,_16.1,_21.3];
_22 = _15 - _15;
_16.2 = [222_u8,219_u8,7_u8,49_u8,109_u8,223_u8,128_u8,173_u8];
(*_18) = _21.1;
_17 = _7 <= _1;
Goto(bb9)
}
bb9 = {
_22 = 113_u8 as isize;
_3 = -_14.0;
_1 = !_5;
_16.2 = [180_u8,252_u8,181_u8,207_u8,212_u8,158_u8,10_u8,237_u8];
_4 = _5 + _5;
_14 = _23;
RET = [_21.0,_21.3,_21.3];
_10 = RET;
_23.0 = _5;
_7 = _5 - _4;
_19 = 31403_i16 as i128;
(*_18) = _21.1;
_27 = [(-59_i8),41_i8,(-48_i8),7_i8,(-84_i8),(-50_i8),(-72_i8),31_i8];
(*_18) = _21.1;
_23 = (_5, _16.0);
_14.0 = _1 * _4;
_11 = _21.1;
_21.2 = 43160_u16 >> _23.0;
_18 = core::ptr::addr_of_mut!(_11);
_25 = _26 as f64;
_18 = core::ptr::addr_of_mut!((*_18));
_25 = 203037652413428341344094170414483006195_u128 as f64;
_14.0 = _4 >> _23.0;
RET = [_16.1,_16.1,_12];
Goto(bb10)
}
bb10 = {
_11 = _21.1;
_23.1 = _16.0;
_3 = _5;
_4 = !_1;
_17 = _5 < _5;
_26 = _21.2 as f32;
_23.0 = _14.0;
_16.1 = _25 as usize;
_12 = _21.0 ^ _16.1;
_2 = _1;
_24 = !_22;
_21.0 = _21.2 as usize;
_14.1 = [_17,_17,_17,_17,_17];
_17 = true | false;
_23.0 = !_3;
_7 = _3 << _14.0;
_18 = core::ptr::addr_of_mut!((*_18));
_14 = (_23.0, _16.0);
_23.1 = _14.1;
_21 = (_16.1, (*_18), 19208_u16, _12);
_18 = core::ptr::addr_of_mut!((*_18));
_16.2 = [157_u8,79_u8,131_u8,239_u8,255_u8,88_u8,77_u8,35_u8];
RET = [_12,_21.0,_21.3];
_16.0 = [_17,_17,_17,_17,_17];
_27 = [72_i8,(-86_i8),72_i8,93_i8,98_i8,94_i8,75_i8,(-88_i8)];
Goto(bb11)
}
bb11 = {
_28 = _3;
_16.1 = !_21.3;
_30 = 17512211115233769321_u64 | 1013685197796841935_u64;
_21.0 = _21.3 * _12;
_19 = _17 as i128;
(*_18) = _21.1;
_24 = _22;
_31 = 1433297139_u32;
_28 = _4 ^ _7;
_6 = _4;
_30 = _11 as u64;
_15 = !_24;
_23 = (_4, _14.1);
_5 = !_6;
_1 = _3 + _5;
_16.2 = [126_u8,204_u8,180_u8,184_u8,188_u8,241_u8,54_u8,17_u8];
Goto(bb12)
}
bb12 = {
_17 = !true;
_17 = false ^ false;
_23.1 = _14.1;
_33 = !_21.2;
RET = _10;
_20 = -2097477208_i32;
_28 = _5;
_3 = 28844_i16 as i64;
_21.3 = _12 | _21.0;
_28 = !_5;
_5 = _1 - _7;
_25 = _20 as f64;
_23.1 = _14.1;
_12 = !_16.1;
match _21.2 {
0 => bb11,
1 => bb6,
2 => bb3,
3 => bb13,
4 => bb14,
19208 => bb16,
_ => bb15
}
}
bb13 = {
_7 = !_14.0;
_7 = _1;
_20 = !(-2032506877_i32);
_2 = _1;
_21 = (_12, (*_18), 4067_u16, _12);
_15 = _21.2 as isize;
(*_18) = _21.1;
_12 = _21.0;
_19 = !58145356188635836696424782962932475370_i128;
_16.2 = [86_u8,185_u8,108_u8,226_u8,255_u8,14_u8,222_u8,49_u8];
_3 = !_7;
_23.0 = _14.0 & _4;
_21.2 = 4530930087085822093_u64 as u16;
_17 = _4 <= _3;
RET = _10;
_15 = (-9223372036854775808_isize) - (-44_isize);
_6 = (*_18) as i64;
RET = [_21.3,_21.3,_21.0];
_5 = !_2;
_7 = _3 | _14.0;
_15 = (-9223372036854775808_isize);
_23.1 = _16.0;
_5 = _7;
Call(_15 = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb5), UnwindUnreachable())
}
bb14 = {
_14.0 = _5 + _4;
_1 = -_5;
_5 = -_6;
_4 = -_5;
_3 = _5 - _4;
_12 = _11 as usize;
_15 = 2_isize;
_14.1 = [true,true,true,true,true];
_12 = !10601250754948228924_usize;
_3 = _1 + _5;
_14.0 = _3 | _5;
_11 = '\u{92ceb}';
_16.0 = [false,true,true,true,true];
_5 = _14.0;
_17 = !true;
_10 = RET;
_18 = core::ptr::addr_of_mut!(_11);
_3 = -_1;
_19 = 91933498035159741071163300710849665676_u128 as i128;
_3 = _6;
_14 = (_5, _16.0);
_14.1 = [_17,_17,_17,_17,_17];
_16.2 = [14_u8,80_u8,134_u8,60_u8,254_u8,208_u8,44_u8,20_u8];
_18 = core::ptr::addr_of_mut!((*_18));
_11 = '\u{cdd39}';
_3 = -_1;
_16.1 = !_12;
Call(_10 = fn19(_16, _14, _14, _5, _14, _4, _5, _5, _3, _16.2, _1, _2, _3, _1, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_22 = 113_u8 as isize;
_3 = -_14.0;
_1 = !_5;
_16.2 = [180_u8,252_u8,181_u8,207_u8,212_u8,158_u8,10_u8,237_u8];
_4 = _5 + _5;
_14 = _23;
RET = [_21.0,_21.3,_21.3];
_10 = RET;
_23.0 = _5;
_7 = _5 - _4;
_19 = 31403_i16 as i128;
(*_18) = _21.1;
_27 = [(-59_i8),41_i8,(-48_i8),7_i8,(-84_i8),(-50_i8),(-72_i8),31_i8];
(*_18) = _21.1;
_23 = (_5, _16.0);
_14.0 = _1 * _4;
_11 = _21.1;
_21.2 = 43160_u16 >> _23.0;
_18 = core::ptr::addr_of_mut!(_11);
_25 = _26 as f64;
_18 = core::ptr::addr_of_mut!((*_18));
_25 = 203037652413428341344094170414483006195_u128 as f64;
_14.0 = _4 >> _23.0;
RET = [_16.1,_16.1,_12];
Goto(bb10)
}
bb16 = {
_33 = _21.2;
_25 = 84_i8 as f64;
_11 = _21.1;
_11 = _21.1;
_31 = 502547754_u32 + 2211980443_u32;
_2 = -_28;
_21.0 = (-330_i16) as usize;
_23.0 = _5 >> _14.0;
Goto(bb17)
}
bb17 = {
Call(_36 = dump_var(6_usize, 14_usize, Move(_14), 23_usize, Move(_23), 11_usize, Move(_11), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(6_usize, 2_usize, Move(_2), 17_usize, Move(_17), 22_usize, Move(_22), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_36 = dump_var(6_usize, 5_usize, Move(_5), 30_usize, Move(_30), 12_usize, Move(_12), 27_usize, Move(_27)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: i64,mut _2: i64,mut _3: i64) -> char {
mir! {
type RET = char;
let _4: Adt61;
let _5: i16;
let _6: i32;
let _7: (usize, char, u16, usize);
let _8: *mut [usize; 3];
let _9: f64;
let _10: char;
let _11: f32;
let _12: (i32, bool, f64, u16, isize);
let _13: [u8; 8];
let _14: u128;
let _15: f64;
let _16: u32;
let _17: isize;
let _18: u128;
let _19: char;
let _20: [u64; 4];
let _21: f32;
let _22: ();
let _23: ();
{
_2 = _3 << _3;
RET = '\u{c78b6}';
RET = '\u{3bae8}';
RET = '\u{cf62a}';
RET = '\u{1189c}';
_1 = !_3;
_1 = _2;
RET = '\u{ad60a}';
_1 = !_2;
_2 = -_1;
RET = '\u{ab4b3}';
RET = '\u{248f4}';
_2 = 52661_u16 as i64;
RET = '\u{a64b5}';
RET = '\u{4d636}';
_2 = _1 + _1;
RET = '\u{69408}';
_1 = _2;
RET = '\u{fd618}';
RET = '\u{1000b7}';
RET = '\u{eec55}';
RET = '\u{2c7d1}';
_1 = _3;
_5 = 21774_i16 | 16668_i16;
_2 = _1 * _1;
RET = '\u{9cfb0}';
_2 = 117_i8 as i64;
RET = '\u{984a7}';
_5 = 514_i16 >> _3;
_2 = (-96_i8) as i64;
Call(_4 = fn8(_3, _3, _1, _5, _5, _5, _5, _1, _3, _3, _1, _3, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = !_1;
_6 = (-1373143245_i32) - (-1100985740_i32);
RET = '\u{8392b}';
_6 = (-287967706_i32);
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [2695865229_u32,3667156221_u32,4155504124_u32,774290539_u32];
_1 = (-109854297773134971880524800403985119662_i128) as i64;
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [1059363547_u32,2215217768_u32,2967878755_u32,1936950037_u32];
_6 = -(-1279018029_i32);
RET = '\u{6c5a5}';
_6 = -(-91881322_i32);
_2 = 2434276539_u32 as i64;
_5 = 32273_i16;
_7 = (1_usize, RET, 58959_u16, 11919235168660998849_usize);
_7.3 = _7.0 * _7.0;
match _7.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
58959 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_7.1 = RET;
_7.3 = _7.0 >> Field::<i64>(Variant(_4, 1), 0);
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [234811298_u32,3569638705_u32,798391041_u32,3167844843_u32];
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [3075095823_u32,1932404282_u32,3326778243_u32,2866716978_u32];
RET = _7.1;
_7 = (15581484666573213293_usize, RET, 9394_u16, 259598206666899614_usize);
_3 = Field::<i64>(Variant(_4, 1), 0);
_3 = Field::<i64>(Variant(_4, 1), 0);
_7.1 = RET;
_7 = (15869511639771010853_usize, RET, 32390_u16, 16605674253294650685_usize);
RET = _7.1;
_7.0 = _7.3;
place!(Field::<i64>(Variant(_4, 1), 0)) = !_3;
_7.1 = RET;
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [2092902449_u32,3302917721_u32,364544154_u32,2092391941_u32];
_3 = _7.3 as i64;
_10 = _7.1;
_7 = (1516485997806860004_usize, _10, 22864_u16, 14346652881825616961_usize);
_7.2 = !10955_u16;
_7.1 = RET;
_2 = _3 * Field::<i64>(Variant(_4, 1), 0);
_5 = 9001_i16 >> _2;
_9 = 9223372036854775807_isize as f64;
match _7.3 {
0 => bb9,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
14346652881825616961 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_9 = _5 as f64;
_11 = 3641775497743607963_u64 as f32;
_12.3 = _7.2;
RET = _7.1;
_14 = 110_u8 as u128;
_12.2 = (-1819061047389966232009405954631282697_i128) as f64;
match _7.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb11,
4 => bb5,
5 => bb9,
6 => bb7,
1516485997806860004 => bb13,
_ => bb8
}
}
bb13 = {
_12 = (_6, true, _9, _7.2, 9223372036854775807_isize);
_15 = 37_i8 as f64;
_13 = [103_u8,48_u8,148_u8,26_u8,117_u8,239_u8,17_u8,177_u8];
RET = _7.1;
_9 = _12.2 + _12.2;
_14 = 17145269992168111892120417326119066049_u128 * 269004790298496295954239970515320948199_u128;
_7.3 = !_7.0;
_12.0 = _6;
_12 = (_6, true, _9, _7.2, 94_isize);
_16 = 1399962425_u32;
_9 = _12.2;
_12.4 = _6 as isize;
_15 = -_12.2;
_15 = _6 as f64;
place!(Field::<[u32; 4]>(Variant(_4, 1), 2)) = [_16,_16,_16,_16];
Call(_14 = core::intrinsics::transmute(Field::<[u32; 4]>(Variant(_4, 1), 2)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_1 = _2 | _2;
_7.1 = RET;
_5 = 26_u8 as i16;
_13 = [83_u8,199_u8,209_u8,49_u8,75_u8,130_u8,30_u8,57_u8];
_16 = !3375466734_u32;
_1 = Field::<i64>(Variant(_4, 1), 0) & _2;
_17 = _12.4;
RET = _10;
_1 = Field::<i64>(Variant(_4, 1), 0);
_6 = _12.0;
_7.1 = _10;
_7.1 = RET;
_11 = _16 as f32;
_6 = _12.0 >> _1;
place!(Field::<i64>(Variant(_4, 1), 0)) = _2;
SetDiscriminant(_4, 2);
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_4, 2), 4)).1 = core::ptr::addr_of!(place!(Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1)).0);
_7 = (6618820424364283707_usize, _10, _12.3, 14804224056899936027_usize);
_12.2 = _12.3 as f64;
_12.1 = !true;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_4, 2), 2)).2 = [241_u8,175_u8,54_u8,249_u8,75_u8,69_u8,222_u8,132_u8];
place!(Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1)).0.0 = 224_u8 + 19_u8;
place!(Field::<*mut char>(Variant(_4, 2), 6)) = core::ptr::addr_of_mut!(_19);
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_4, 2), 2)).2 = [Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0,Field::<((u8, usize, i16, u32),)>(Variant(_4, 2), 1).0.0];
_17 = _12.4;
_17 = _12.4 ^ _12.4;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_4, 2), 4)).0.0 = -_2;
Goto(bb15)
}
bb15 = {
Call(_22 = dump_var(7_usize, 2_usize, Move(_2), 14_usize, Move(_14), 16_usize, Move(_16), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_22 = dump_var(7_usize, 13_usize, Move(_13), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: i64,mut _2: i64,mut _3: i64,mut _4: i16,mut _5: i16,mut _6: i16,mut _7: i16,mut _8: i64,mut _9: i64,mut _10: i64,mut _11: i64,mut _12: i64,mut _13: i64) -> Adt61 {
mir! {
type RET = Adt61;
let _14: f64;
let _15: (u8, *const (u8, usize, i16, u32), usize, i16);
let _16: ((i64, [bool; 5]), ([bool; 5],));
let _17: u32;
let _18: [bool; 5];
let _19: f32;
let _20: bool;
let _21: isize;
let _22: f32;
let _23: f64;
let _24: isize;
let _25: f32;
let _26: i16;
let _27: Adt57;
let _28: Adt64;
let _29: ([i8; 8], [usize; 3], bool);
let _30: Adt57;
let _31: i32;
let _32: f32;
let _33: isize;
let _34: [u32; 4];
let _35: isize;
let _36: bool;
let _37: isize;
let _38: [u64; 4];
let _39: *mut [usize; 3];
let _40: [u64; 4];
let _41: ([bool; 5], usize, [u8; 8]);
let _42: [u32; 4];
let _43: *const *mut ([bool; 5],);
let _44: Adt63;
let _45: *const i128;
let _46: Adt55;
let _47: [bool; 4];
let _48: f64;
let _49: isize;
let _50: Adt54;
let _51: Adt54;
let _52: bool;
let _53: ((i64, [bool; 5]), ([bool; 5],));
let _54: isize;
let _55: Adt53;
let _56: ([i8; 8], [usize; 3], bool);
let _57: (i64, [bool; 5]);
let _58: u16;
let _59: u16;
let _60: isize;
let _61: i8;
let _62: Adt52;
let _63: [i64; 5];
let _64: ((i64, [bool; 5]), ([bool; 5],));
let _65: *mut [usize; 3];
let _66: u64;
let _67: Adt56;
let _68: Adt58;
let _69: Adt63;
let _70: (i64, [bool; 5]);
let _71: [u64; 4];
let _72: Adt52;
let _73: Adt56;
let _74: u8;
let _75: f64;
let _76: f64;
let _77: *mut ([bool; 5],);
let _78: ([bool; 5], usize, [u8; 8]);
let _79: i64;
let _80: *mut *const i128;
let _81: ((i64, [bool; 5]), ([bool; 5],));
let _82: u16;
let _83: u128;
let _84: u32;
let _85: *mut char;
let _86: f64;
let _87: u64;
let _88: usize;
let _89: i32;
let _90: u32;
let _91: f64;
let _92: (u8, *const (u8, usize, i16, u32), usize, i16);
let _93: i128;
let _94: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _95: *mut [u32; 4];
let _96: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _97: f64;
let _98: Adt63;
let _99: Adt61;
let _100: i128;
let _101: f64;
let _102: f64;
let _103: i32;
let _104: i128;
let _105: u32;
let _106: (i32, bool, f64, u16, isize);
let _107: usize;
let _108: [bool; 4];
let _109: ((i64, [bool; 5]), ([bool; 5],));
let _110: Adt57;
let _111: *mut *const i128;
let _112: (u8, usize, i16, u32);
let _113: [u64; 4];
let _114: f32;
let _115: ((i64, [bool; 5]), ([bool; 5],));
let _116: (i32, bool, f64, u16, isize);
let _117: f64;
let _118: ((i64, [bool; 5]), ([bool; 5],));
let _119: isize;
let _120: Adt51;
let _121: [u64; 4];
let _122: char;
let _123: isize;
let _124: ([i8; 8], [usize; 3], bool);
let _125: ((i64, [bool; 5]), ([bool; 5],));
let _126: ([bool; 5], usize, [u8; 8]);
let _127: char;
let _128: (i64, [bool; 5]);
let _129: *const *mut ([bool; 5],);
let _130: isize;
let _131: isize;
let _132: [usize; 3];
let _133: char;
let _134: f64;
let _135: char;
let _136: isize;
let _137: u64;
let _138: ((i64, [bool; 5]), ([bool; 5],));
let _139: Adt54;
let _140: [u32; 4];
let _141: u64;
let _142: [i128; 1];
let _143: [bool; 5];
let _144: *mut char;
let _145: Adt51;
let _146: bool;
let _147: [i128; 1];
let _148: isize;
let _149: u8;
let _150: [i128; 1];
let _151: u16;
let _152: isize;
let _153: Adt55;
let _154: isize;
let _155: ([i8; 8], [usize; 3], bool);
let _156: isize;
let _157: Adt51;
let _158: isize;
let _159: u128;
let _160: (usize, char, u16, usize);
let _161: *const i128;
let _162: u8;
let _163: bool;
let _164: char;
let _165: [usize; 3];
let _166: usize;
let _167: bool;
let _168: isize;
let _169: i8;
let _170: i16;
let _171: ([i8; 8], [usize; 3], bool);
let _172: (usize, char, u16, usize);
let _173: isize;
let _174: i128;
let _175: ([bool; 5],);
let _176: *const (u8, usize, i16, u32);
let _177: *const *mut ([bool; 5],);
let _178: [u32; 4];
let _179: [i64; 5];
let _180: (i32, bool, f64, u16, isize);
let _181: bool;
let _182: f32;
let _183: ([bool; 5], usize, [u8; 8]);
let _184: i64;
let _185: isize;
let _186: *const [i64; 5];
let _187: [usize; 3];
let _188: isize;
let _189: *const [i64; 5];
let _190: bool;
let _191: f64;
let _192: f32;
let _193: ([i8; 8], [usize; 3], bool);
let _194: isize;
let _195: ((u8, usize, i16, u32),);
let _196: f32;
let _197: ([bool; 5],);
let _198: Adt65;
let _199: f32;
let _200: f32;
let _201: usize;
let _202: [bool; 5];
let _203: u8;
let _204: bool;
let _205: Adt49;
let _206: f64;
let _207: [u32; 4];
let _208: [u32; 4];
let _209: [usize; 3];
let _210: u32;
let _211: u64;
let _212: f64;
let _213: f64;
let _214: (u8, usize, i16, u32);
let _215: *mut ([bool; 5],);
let _216: ([i8; 8], [usize; 3], bool);
let _217: Adt59;
let _218: i16;
let _219: i16;
let _220: [u64; 4];
let _221: u128;
let _222: i16;
let _223: isize;
let _224: f64;
let _225: [u32; 4];
let _226: (i32, bool, f64, u16, isize);
let _227: bool;
let _228: ([bool; 5], usize, [u8; 8]);
let _229: i16;
let _230: i16;
let _231: Adt59;
let _232: i128;
let _233: u16;
let _234: i32;
let _235: (i64, [bool; 5]);
let _236: i8;
let _237: (u8, usize, i16, u32);
let _238: f32;
let _239: ([bool; 5],);
let _240: (i32, bool, f64, u16, isize);
let _241: Adt51;
let _242: isize;
let _243: (i32, bool, f64, u16, isize);
let _244: u32;
let _245: (i64, [bool; 5]);
let _246: *const [i64; 5];
let _247: isize;
let _248: (i32, bool, f64, u16, isize);
let _249: Adt62;
let _250: [i8; 8];
let _251: bool;
let _252: Adt50;
let _253: u32;
let _254: i8;
let _255: char;
let _256: i32;
let _257: (i32, bool, f64, u16, isize);
let _258: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _259: u16;
let _260: Adt56;
let _261: ([i8; 8], [usize; 3], bool);
let _262: isize;
let _263: (u8, usize, i16, u32);
let _264: Adt57;
let _265: i32;
let _266: i32;
let _267: bool;
let _268: Adt64;
let _269: (i64, [bool; 5]);
let _270: ([bool; 5],);
let _271: f64;
let _272: [u64; 4];
let _273: Adt58;
let _274: f64;
let _275: char;
let _276: bool;
let _277: (usize, char, u16, usize);
let _278: u128;
let _279: f64;
let _280: *mut char;
let _281: f64;
let _282: isize;
let _283: f64;
let _284: Adt62;
let _285: [usize; 3];
let _286: u32;
let _287: i16;
let _288: ();
let _289: ();
{
_9 = _1 << _12;
_14 = 273400373985316684374085200976908078334_u128 as f64;
_11 = _10;
_1 = _13 >> _5;
_8 = !_3;
_1 = -_10;
_12 = -_9;
_15.3 = -_7;
_1 = 4_usize as i64;
_17 = 3794031371_u32 & 1784972992_u32;
_16.0.1 = [true,true,false,false,true];
_11 = _8;
Call(_16.1 = fn9(_8, _7, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_12 = !_9;
_1 = 330851268764381929281095594112333954701_u128 as i64;
_3 = 34916_u16 as i64;
_16.0.0 = _13;
_15.0 = 98896907953008937102829670474897170459_i128 as u8;
_10 = 13491_u16 as i64;
_13 = 73451272863823613672284850994879578608_i128 as i64;
_14 = 904745177444083467_usize as f64;
_15.3 = _6 ^ _7;
_16.1.0 = [false,true,false,true,true];
_10 = _5 as i64;
_5 = !_15.3;
_5 = !_4;
_6 = _15.3 * _5;
_1 = _16.0.0 * _11;
_18 = [false,false,false,true,true];
_1 = false as i64;
_19 = _14 as f32;
_15.0 = !165_u8;
_16.1 = (_16.0.1,);
_3 = -_16.0.0;
_15.0 = 126_u8 << _15.3;
_9 = _7 as i64;
_13 = 2097715365703969971_usize as i64;
_9 = 12158414324889134446_usize as i64;
_2 = _19 as i64;
_22 = _19;
_15.2 = 1665431932538282753_usize * 5796550985164609876_usize;
_23 = _14 * _14;
Goto(bb2)
}
bb2 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb3 = {
_25 = _22;
_16.0.0 = _11;
_2 = _8;
_9 = -_16.0.0;
_9 = _2;
_29.0 = [55_i8,30_i8,67_i8,118_i8,(-21_i8),18_i8,84_i8,65_i8];
_16.1 = (_16.0.1,);
Goto(bb4)
}
bb4 = {
_29.0 = [(-75_i8),50_i8,(-100_i8),(-9_i8),45_i8,126_i8,(-126_i8),(-103_i8)];
_4 = _6;
_14 = _23 - _23;
_9 = _8 >> _1;
_20 = true;
_8 = !_10;
_15.2 = _17 as usize;
Goto(bb5)
}
bb5 = {
_23 = _14 * _14;
Goto(bb6)
}
bb6 = {
_9 = _1;
_6 = !_26;
_23 = _14;
_19 = _15.2 as f32;
_8 = 32097_u16 as i64;
_20 = _6 < _6;
_25 = _19 - _22;
_33 = _7 as isize;
_31 = 2064702586_i32 & (-1018726305_i32);
_29.2 = _20 | _20;
_25 = _22;
_16.0.1 = _16.1.0;
_29.1 = [_15.2,_15.2,_15.2];
_26 = -_5;
_18 = [_29.2,_20,_29.2,_29.2,_29.2];
_11 = _31 as i64;
_19 = _25;
_22 = _19;
_29.1 = [_15.2,_15.2,_15.2];
Goto(bb7)
}
bb7 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb8 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb9 = {
_17 = 2031045933_u32 + 1501489555_u32;
_7 = _10 as i16;
_4 = _7;
_26 = _15.3;
_22 = -_19;
_32 = -_22;
_20 = _29.2 | _29.2;
_8 = _12 >> _10;
_6 = !_4;
_32 = _25;
_16.0 = (_3, _18);
_22 = -_32;
_13 = 69011827811219696808902659207511894051_i128 as i64;
_1 = -_10;
_38 = [13695027519121621209_u64,14164905703671372818_u64,11609152361950614107_u64,906135869186464140_u64];
_16.1.0 = [_20,_29.2,_20,_20,_29.2];
_15.3 = -_26;
Goto(bb10)
}
bb10 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb11 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_41.1 = !_15.2;
_20 = _29.2;
_42 = [_17,_17,_17,_17];
_20 = _1 >= _3;
_26 = !_15.3;
_4 = (-43196747814981635252651806225178406009_i128) as i16;
_38 = [16105429385032140241_u64,13928356539918771710_u64,7664716995197450115_u64,11566991605610513206_u64];
_15.0 = _31 as u8;
_5 = _7;
_14 = (-92859938993557494357664787530441371774_i128) as f64;
_6 = _5;
_7 = -_15.3;
_31 = (-1694231108_i32);
match _31 {
0 => bb6,
340282366920938463463374607430073980348 => bb12,
_ => bb10
}
}
bb12 = {
_18 = [_20,_20,_20,_29.2,_20];
_1 = _9;
_16.0.1 = _16.1.0;
match _31 {
0 => bb8,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463463374607430073980348 => bb20,
_ => bb19
}
}
bb13 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_41.1 = !_15.2;
_20 = _29.2;
_42 = [_17,_17,_17,_17];
_20 = _1 >= _3;
_26 = !_15.3;
_4 = (-43196747814981635252651806225178406009_i128) as i16;
_38 = [16105429385032140241_u64,13928356539918771710_u64,7664716995197450115_u64,11566991605610513206_u64];
_15.0 = _31 as u8;
_5 = _7;
_14 = (-92859938993557494357664787530441371774_i128) as f64;
_6 = _5;
_7 = -_15.3;
_31 = (-1694231108_i32);
match _31 {
0 => bb6,
340282366920938463463374607430073980348 => bb12,
_ => bb10
}
}
bb14 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb15 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb16 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb17 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb18 = {
_29.0 = [(-75_i8),50_i8,(-100_i8),(-9_i8),45_i8,126_i8,(-126_i8),(-103_i8)];
_4 = _6;
_14 = _23 - _23;
_9 = _8 >> _1;
_20 = true;
_8 = !_10;
_15.2 = _17 as usize;
Goto(bb5)
}
bb19 = {
_23 = _14 * _14;
Goto(bb6)
}
bb20 = {
_15.3 = _26;
_14 = _23;
_39 = core::ptr::addr_of_mut!((*_39));
_8 = -_9;
_20 = _5 >= _7;
_15.0 = !188_u8;
_36 = _29.2 ^ _29.2;
_39 = core::ptr::addr_of_mut!((*_39));
_11 = _8 + _9;
_41.1 = !_15.2;
_41.1 = !_15.2;
_8 = _36 as i64;
_41.0 = _16.1.0;
_39 = core::ptr::addr_of_mut!((*_39));
Goto(bb21)
}
bb21 = {
_8 = _3 | _3;
Goto(bb22)
}
bb22 = {
_29.0 = [96_i8,34_i8,(-34_i8),119_i8,74_i8,10_i8,63_i8,(-50_i8)];
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_11 = _23 as i64;
_36 = _7 == _6;
_26 = _7 >> _12;
_42 = _34;
_26 = !_5;
_6 = !_15.3;
_2 = '\u{59fad}' as i64;
_29.0 = [47_i8,10_i8,124_i8,111_i8,(-94_i8),103_i8,(-126_i8),102_i8];
match _31 {
0 => bb16,
1 => bb5,
2 => bb23,
3 => bb24,
4 => bb25,
340282366920938463463374607430073980348 => bb27,
_ => bb26
}
}
bb23 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb24 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb25 = {
_25 = _22;
_16.0.0 = _11;
_2 = _8;
_9 = -_16.0.0;
_9 = _2;
_29.0 = [55_i8,30_i8,67_i8,118_i8,(-21_i8),18_i8,84_i8,65_i8];
_16.1 = (_16.0.1,);
Goto(bb4)
}
bb26 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb27 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_16.0 = (_12, _41.0);
_40 = _38;
_29.0 = [91_i8,(-107_i8),(-8_i8),(-121_i8),78_i8,(-102_i8),(-22_i8),56_i8];
_16.1 = (_18,);
_5 = _26;
_13 = _8 + _12;
_6 = _15.3;
_21 = _33 - _33;
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
match _31 {
0 => bb20,
1 => bb22,
2 => bb3,
3 => bb28,
4 => bb29,
5 => bb30,
6 => bb31,
340282366920938463463374607430073980348 => bb33,
_ => bb32
}
}
bb28 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb29 = {
_17 = 2031045933_u32 + 1501489555_u32;
_7 = _10 as i16;
_4 = _7;
_26 = _15.3;
_22 = -_19;
_32 = -_22;
_20 = _29.2 | _29.2;
_8 = _12 >> _10;
_6 = !_4;
_32 = _25;
_16.0 = (_3, _18);
_22 = -_32;
_13 = 69011827811219696808902659207511894051_i128 as i64;
_1 = -_10;
_38 = [13695027519121621209_u64,14164905703671372818_u64,11609152361950614107_u64,906135869186464140_u64];
_16.1.0 = [_20,_29.2,_20,_20,_29.2];
_15.3 = -_26;
Goto(bb10)
}
bb30 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb31 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb32 = {
_25 = _22;
_16.0.0 = _11;
_2 = _8;
_9 = -_16.0.0;
_9 = _2;
_29.0 = [55_i8,30_i8,67_i8,118_i8,(-21_i8),18_i8,84_i8,65_i8];
_16.1 = (_16.0.1,);
Goto(bb4)
}
bb33 = {
_49 = _21;
_12 = 12903_u16 as i64;
_44 = Adt63::Variant1 { fld0: _25,fld1: _16.1,fld2: _16,fld3: _29 };
_33 = 91_i8 as isize;
_12 = -_3;
_9 = _6 as i64;
_17 = 1029519878_u32;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)) = (_29.0, _29.1, _29.2);
SetDiscriminant(_44, 0);
_14 = _17 as f64;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_44, 0), 4)).0 = _15.0 ^ _15.0;
_48 = _23;
_14 = _48;
_29.0 = [58_i8,(-83_i8),107_i8,4_i8,(-34_i8),(-74_i8),(-98_i8),(-18_i8)];
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_44, 0), 4)).3 = _26;
_44 = Adt63::Variant1 { fld0: _32,fld1: _16.1,fld2: _16,fld3: _29 };
_29.2 = !_20;
(*_39) = [_41.1,_15.2,_41.1];
_16.1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.1,);
match _31 {
0 => bb15,
1 => bb18,
2 => bb3,
3 => bb13,
4 => bb12,
5 => bb27,
6 => bb7,
340282366920938463463374607430073980348 => bb34,
_ => bb16
}
}
bb34 = {
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)).0 = [_29.2,_36,_29.2,_20,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2];
_53.0.1 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_29.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_36];
_24 = !_49;
_16.0.1 = Field::<([bool; 5],)>(Variant(_44, 1), 1).0;
_14 = _23;
_9 = -_3;
SetDiscriminant(_44, 0);
_32 = -_22;
(*_39) = [_15.2,_41.1,_15.2];
_57.0 = _12;
_44 = Adt63::Variant1 { fld0: _25,fld1: _16.1,fld2: _16,fld3: _29 };
_58 = !54849_u16;
_48 = _23;
_52 = !_20;
_34 = _42;
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)) = (_16.1.0,);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).0.1 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).1.0;
_9 = _1 - _1;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).2 = _20;
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)).0 = [_20,_20,_20,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_52];
SetDiscriminant(_44, 1);
Goto(bb35)
}
bb35 = {
(*_39) = [_41.1,_15.2,_15.2];
_5 = _7 & _26;
_16.0.1 = [_20,_29.2,_52,_52,_20];
_29.2 = _36;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).2 = _20 | _36;
_55 = Adt53::Variant3 { fld0: _15.2 };
_13 = _9;
_62.fld1.0 = 291969803673314192668870703504240059494_u128 as u8;
_53.1 = _16.1;
SetDiscriminant(_55, 2);
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)).0 = [_52,_52,_20,_20,_36];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)) = (_16.0, _53.1);
Call(_62.fld3 = core::intrinsics::bswap(_57.0), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_32 = _3 as f32;
_33 = '\u{72f8}' as isize;
_62.fld1.1 = !_15.2;
_15.2 = _29.2 as usize;
_19 = _32;
_63 = [_13,_1,_16.0.0,_3,_12];
_54 = -_21;
_56.1 = [_15.2,_15.2,_41.1];
_41.0 = _53.1.0;
_61 = 36_i8 | (-115_i8);
_62.fld1.0 = 6822069168931467896_u64 as u8;
_50 = Adt54::Variant0 { fld0: _61,fld1: _41.2 };
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).0 = [Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0),Field::<i8>(Variant(_50, 0), 0)];
_62.fld1.3 = _17 ^ _17;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).1.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.1;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).0 = (_3, _16.1.0);
_57 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).1 = [_15.2,_15.2,_62.fld1.1];
_56.0 = [Field::<i8>(Variant(_50, 0), 0),_61,_61,Field::<i8>(Variant(_50, 0), 0),_61,_61,_61,_61];
place!(Field::<[i8; 8]>(Variant(_55, 2), 1)) = _56.0;
_21 = _24 << _6;
place!(Field::<*mut [u32; 4]>(Variant(_55, 2), 0)) = core::ptr::addr_of_mut!(_42);
_37 = _21;
_38 = [17650440555540240937_u64,11886488603696432312_u64,13730176542137771445_u64,8907298033130783763_u64];
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).0 = Field::<[i8; 8]>(Variant(_55, 2), 1);
place!(Field::<f32>(Variant(_44, 1), 0)) = -_19;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).0 = _57;
Goto(bb37)
}
bb37 = {
_10 = !_13;
_41 = (Field::<([bool; 5],)>(Variant(_44, 1), 1).0, _15.2, Field::<[u8; 8]>(Variant(_50, 0), 1));
_51 = Adt54::Variant0 { fld0: Field::<i8>(Variant(_50, 0), 0),fld1: _41.2 };
_33 = _15.0 as isize;
_15.1 = core::ptr::addr_of!(_62.fld1);
_59 = !_58;
_56 = (Field::<[i8; 8]>(Variant(_55, 2), 1), (*_39), _20);
_25 = -_32;
_4 = _26 ^ _7;
_19 = _25;
_40 = [2263963964875082186_u64,13970064505330569788_u64,5436345367282350630_u64,11991745550587692858_u64];
_17 = _62.fld1.3 << Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.0;
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)).0 = _53.0.1;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).1 = (_53.1.0,);
_23 = _14 * _48;
_62.fld1.0 = 306825404796562941601813216202844517436_u128 as u8;
_46 = Adt55::Variant0 { fld0: _17 };
_56.2 = _29.2 != Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)) = (_29.0, (*_39), _56.2);
_41.0 = [_56.2,_29.2,_29.2,_56.2,_20];
_62.fld1.2 = -_7;
_41.1 = _1 as usize;
_56.1 = [_62.fld1.1,_62.fld1.1,_15.2];
_47 = [_20,_36,_20,_20];
Goto(bb38)
}
bb38 = {
_6 = _15.3;
place!(Field::<[i8; 8]>(Variant(_55, 2), 1)) = Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).0;
_57.1 = [_29.2,_20,_56.2,_36,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2];
_40 = [3628614816670210883_u64,8312029269724900760_u64,14860803312647514979_u64,3788438039831637399_u64];
_53 = (_57, Field::<([bool; 5],)>(Variant(_44, 1), 1));
_64.0 = _16.0;
_2 = _12 | _9;
place!(Field::<[u8; 8]>(Variant(_50, 0), 1)) = [_15.0,_62.fld1.0,_62.fld1.0,_15.0,_62.fld1.0,_62.fld1.0,_62.fld1.0,_15.0];
_53.1.0 = [_36,_20,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_36,_29.2];
Goto(bb39)
}
bb39 = {
_49 = Field::<i8>(Variant(_51, 0), 0) as isize;
_16.1 = (_53.1.0,);
_53.0.1 = [_36,_52,_36,_36,_20];
_15.1 = core::ptr::addr_of!(_62.fld1);
Goto(bb40)
}
bb40 = {
_27 = Adt57::Variant0 { fld0: Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).1,fld1: '\u{437a2}',fld2: _54,fld3: Field::<[i8; 8]>(Variant(_55, 2), 1),fld4: Move(_50) };
_57 = (_1, _53.1.0);
place!(Field::<[i8; 8]>(Variant(_27, 0), 3)) = [Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),_61,_61,Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),_61,Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),Field::<i8>(Variant(_51, 0), 0)];
place!(Field::<[i8; 8]>(Variant(_27, 0), 3)) = [Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),Field::<i8>(Variant(_51, 0), 0),Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),Field::<i8>(Variant(_51, 0), 0),Field::<i8>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 0),Field::<i8>(Variant(_51, 0), 0),_61,_61];
_62.fld1.3 = _31 as u32;
_41.0 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_29.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2];
_50 = Move(Field::<Adt54>(Variant(_27, 0), 4));
_44 = Adt63::Variant1 { fld0: _25,fld1: _53.1,fld2: _53,fld3: _29 };
_15.2 = !_41.1;
_13 = _62.fld1.0 as i64;
SetDiscriminant(_55, 1);
_60 = _54;
_35 = _21 ^ _37;
_27 = Adt57::Variant0 { fld0: (*_39),fld1: '\u{ac9fc}',fld2: _21,fld3: Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).0,fld4: Move(_51) };
_12 = _11 + Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.0;
_56.2 = _52;
_58 = !_59;
(*_39) = _56.1;
_15.3 = _7;
_52 = _32 != Field::<f32>(Variant(_44, 1), 0);
_53.1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).1.0,);
_37 = _21 + _60;
_53.1 = Field::<([bool; 5],)>(Variant(_44, 1), 1);
place!(Field::<*mut *const i128>(Variant(_55, 1), 2)) = core::ptr::addr_of_mut!(_45);
_57.0 = _64.0.0 ^ _12;
_70.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.0;
_32 = _25 + _25;
_4 = _5 - _7;
place!(Field::<f32>(Variant(_44, 1), 0)) = -_19;
Goto(bb41)
}
bb41 = {
_16.0.1 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_29.2,_20,_52,_52];
_64 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2);
place!(Field::<u32>(Variant(_46, 0), 0)) = _17;
place!(Field::<u32>(Variant(_46, 0), 0)) = !_17;
place!(Field::<*mut *const i128>(Variant(_55, 1), 2)) = core::ptr::addr_of_mut!(_45);
_62.fld2 = core::ptr::addr_of_mut!(place!(Field::<char>(Variant(_27, 0), 1)));
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)) = _64;
_29.2 = _52;
_66 = 3517398412216433579_u64 | 4057661568832033026_u64;
_62.fld1.0 = !_15.0;
_64.0.0 = -_16.0.0;
_3 = Field::<u32>(Variant(_46, 0), 0) as i64;
_64.0.1 = [_29.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_29.2,_29.2,_36];
_51 = Move(Field::<Adt54>(Variant(_27, 0), 4));
_76 = -_23;
match _31 {
0 => bb42,
1 => bb43,
2 => bb44,
340282366920938463463374607430073980348 => bb46,
_ => bb45
}
}
bb42 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb43 = {
_12 = !_9;
_1 = 330851268764381929281095594112333954701_u128 as i64;
_3 = 34916_u16 as i64;
_16.0.0 = _13;
_15.0 = 98896907953008937102829670474897170459_i128 as u8;
_10 = 13491_u16 as i64;
_13 = 73451272863823613672284850994879578608_i128 as i64;
_14 = 904745177444083467_usize as f64;
_15.3 = _6 ^ _7;
_16.1.0 = [false,true,false,true,true];
_10 = _5 as i64;
_5 = !_15.3;
_5 = !_4;
_6 = _15.3 * _5;
_1 = _16.0.0 * _11;
_18 = [false,false,false,true,true];
_1 = false as i64;
_19 = _14 as f32;
_15.0 = !165_u8;
_16.1 = (_16.0.1,);
_3 = -_16.0.0;
_15.0 = 126_u8 << _15.3;
_9 = _7 as i64;
_13 = 2097715365703969971_usize as i64;
_9 = 12158414324889134446_usize as i64;
_2 = _19 as i64;
_22 = _19;
_15.2 = 1665431932538282753_usize * 5796550985164609876_usize;
_23 = _14 * _14;
Goto(bb2)
}
bb44 = {
_9 = _1;
_6 = !_26;
_23 = _14;
_19 = _15.2 as f32;
_8 = 32097_u16 as i64;
_20 = _6 < _6;
_25 = _19 - _22;
_33 = _7 as isize;
_31 = 2064702586_i32 & (-1018726305_i32);
_29.2 = _20 | _20;
_25 = _22;
_16.0.1 = _16.1.0;
_29.1 = [_15.2,_15.2,_15.2];
_26 = -_5;
_18 = [_29.2,_20,_29.2,_29.2,_29.2];
_11 = _31 as i64;
_19 = _25;
_22 = _19;
_29.1 = [_15.2,_15.2,_15.2];
Goto(bb7)
}
bb45 = {
_22 = -_25;
_29.0 = [(-128_i8),24_i8,49_i8,10_i8,(-19_i8),(-69_i8),86_i8,121_i8];
_31 = 1196561475_i32 + 915385757_i32;
_12 = _2 * _16.0.0;
_32 = _22;
_16.0 = (_12, _18);
_4 = _15.3;
_6 = -_4;
_25 = _32 - _32;
_3 = _1 << _6;
_34 = [_17,_17,_17,_17];
_31 = 370830266_i32;
_29.2 = !_20;
_35 = _23 as isize;
_13 = !_2;
_1 = -_12;
_16.0.1 = [_20,_29.2,_29.2,_20,_20];
_16.1 = (_16.0.1,);
_16.0.1 = [_29.2,_29.2,_29.2,_20,_20];
_5 = _15.2 as i16;
_2 = 7844_u16 as i64;
_12 = !_1;
_16.1 = (_16.0.1,);
_9 = !_1;
_16.0.1 = _16.1.0;
match _31 {
0 => bb6,
1 => bb5,
2 => bb4,
370830266 => bb9,
_ => bb8
}
}
bb46 = {
_18 = _57.1;
place!(Field::<[i128; 1]>(Variant(_55, 1), 0)) = [51937069270661641579251264909782962705_i128];
_58 = _59 * _59;
_72.fld3 = _66 as i64;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).0.0 = _3 - _12;
_51 = Move(_50);
_53.0.1 = [_29.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3).2,_36,_56.2,_52];
_64 = (_53.0, _53.1);
_27 = Adt57::Variant0 { fld0: (*_39),fld1: '\u{73847}',fld2: _21,fld3: _29.0,fld4: Move(_51) };
_71 = _40;
_32 = -_25;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)).1.0 = [_20,_20,_20,_29.2,_29.2];
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).2 = _52;
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)) = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).1;
_64.1.0 = _16.0.1;
_52 = !_56.2;
_40 = [_66,_66,_66,_66];
Goto(bb47)
}
bb47 = {
_17 = _23 as u32;
SetDiscriminant(_44, 3);
_79 = _15.2 as i64;
_48 = _23;
_78.0 = [_36,_36,_56.2,_20,_56.2];
_15.1 = core::ptr::addr_of!(_62.fld1);
_41 = (_16.1.0, _15.2, Field::<[u8; 8]>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 1));
_58 = !_59;
_64.1.0 = [_36,_29.2,_20,_20,_20];
_38 = [_66,_66,_66,_66];
_20 = _52 ^ _29.2;
_78.2 = Field::<[u8; 8]>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 1);
_72.fld1.3 = _48 as u32;
_83 = 181697045725624666884108434002850942130_u128;
_37 = _54 >> _64.0.0;
_64.1 = (_78.0,);
_15.3 = _10 as i16;
_16.0 = (_53.0.0, _64.0.1);
_36 = _57.0 < _8;
_74 = _62.fld1.0;
_12 = -_1;
_29.2 = _20;
_70.0 = Field::<u32>(Variant(_46, 0), 0) as i64;
_62.fld1.3 = Field::<u32>(Variant(_46, 0), 0);
_74 = _15.0 >> _57.0;
_7 = _15.3;
_65 = _39;
Goto(bb48)
}
bb48 = {
place!(Field::<Adt54>(Variant(_27, 0), 4)) = Adt54::Variant0 { fld0: _61,fld1: _78.2 };
_82 = '\u{4a544}' as u16;
_48 = _59 as f64;
_80 = core::ptr::addr_of_mut!(_45);
(*_65) = [_15.2,_15.2,_15.2];
_70.1 = [_56.2,_56.2,_20,_56.2,_56.2];
_30 = Adt57::Variant1 { fld0: _41,fld1: _47,fld2: _15,fld3: _63,fld4: _4,fld5: _53 };
Goto(bb49)
}
bb49 = {
_32 = _25 + _19;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0)) = _41;
_26 = Field::<i16>(Variant(_30, 1), 4);
_15.0 = _7 as u8;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0)).2 = [_74,_74,_74,_15.0,_74,_15.0,_74,_74];
_35 = _24 << _37;
place!(Field::<i8>(Variant(place!(Field::<Adt54>(Variant(_27, 0), 4)), 0), 0)) = _61;
_90 = !_17;
_57 = _53.0;
match _31 {
340282366920938463463374607430073980348 => bb51,
_ => bb50
}
}
bb50 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_41.1 = !_15.2;
_20 = _29.2;
_42 = [_17,_17,_17,_17];
_20 = _1 >= _3;
_26 = !_15.3;
_4 = (-43196747814981635252651806225178406009_i128) as i16;
_38 = [16105429385032140241_u64,13928356539918771710_u64,7664716995197450115_u64,11566991605610513206_u64];
_15.0 = _31 as u8;
_5 = _7;
_14 = (-92859938993557494357664787530441371774_i128) as f64;
_6 = _5;
_7 = -_15.3;
_31 = (-1694231108_i32);
match _31 {
0 => bb6,
340282366920938463463374607430073980348 => bb12,
_ => bb10
}
}
bb51 = {
place!(Field::<u128>(Variant(_44, 3), 1)) = !_83;
_53.0.1 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0).0;
_29.0 = [_61,_61,_61,_61,_61,_61,_61,_61];
_92.2 = _62.fld1.1 | Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2).2;
place!(Field::<i16>(Variant(_30, 1), 4)) = 79625541749954872719560247390959084446_i128 as i16;
_12 = '\u{66272}' as i64;
_84 = Field::<u32>(Variant(_46, 0), 0) - Field::<u32>(Variant(_46, 0), 0);
place!(Field::<u16>(Variant(_55, 1), 3)) = (-86237639358283735975845965153870188196_i128) as u16;
_25 = -_19;
_1 = -_57.0;
_92.3 = !_6;
_94.2 = core::ptr::addr_of_mut!((*_80));
_62.fld3 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_30, 1), 5).0.0 << _16.0.0;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0)).1 = _52 as usize;
place!(Field::<Adt60>(Variant(_44, 3), 2)) = Adt60::Variant0 { fld0: _59,fld1: _53,fld2: Move(_30) };
_27 = Move(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 2));
_12 = !_57.0;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)).1 = _15.2 ^ _92.2;
_41.2 = [_15.0,_74,_74,_15.0,_15.0,_15.0,_15.0,_15.0];
_94.0.1 = _53.0.1;
_38 = _71;
(*_80) = core::ptr::addr_of!(_93);
_16.1.0 = [_20,_36,_20,_29.2,_29.2];
_15.0 = Field::<u16>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 0) as u8;
match _83 {
0 => bb8,
1 => bb49,
2 => bb7,
3 => bb23,
4 => bb52,
5 => bb53,
6 => bb54,
181697045725624666884108434002850942130 => bb56,
_ => bb55
}
}
bb52 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_41.1 = !_15.2;
_20 = _29.2;
_42 = [_17,_17,_17,_17];
_20 = _1 >= _3;
_26 = !_15.3;
_4 = (-43196747814981635252651806225178406009_i128) as i16;
_38 = [16105429385032140241_u64,13928356539918771710_u64,7664716995197450115_u64,11566991605610513206_u64];
_15.0 = _31 as u8;
_5 = _7;
_14 = (-92859938993557494357664787530441371774_i128) as f64;
_6 = _5;
_7 = -_15.3;
_31 = (-1694231108_i32);
match _31 {
0 => bb6,
340282366920938463463374607430073980348 => bb12,
_ => bb10
}
}
bb53 = {
_49 = _21;
_12 = 12903_u16 as i64;
_44 = Adt63::Variant1 { fld0: _25,fld1: _16.1,fld2: _16,fld3: _29 };
_33 = 91_i8 as isize;
_12 = -_3;
_9 = _6 as i64;
_17 = 1029519878_u32;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)) = (_29.0, _29.1, _29.2);
SetDiscriminant(_44, 0);
_14 = _17 as f64;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_44, 0), 4)).0 = _15.0 ^ _15.0;
_48 = _23;
_14 = _48;
_29.0 = [58_i8,(-83_i8),107_i8,4_i8,(-34_i8),(-74_i8),(-98_i8),(-18_i8)];
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_44, 0), 4)).3 = _26;
_44 = Adt63::Variant1 { fld0: _32,fld1: _16.1,fld2: _16,fld3: _29 };
_29.2 = !_20;
(*_39) = [_41.1,_15.2,_41.1];
_16.1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2).0.1,);
match _31 {
0 => bb15,
1 => bb18,
2 => bb3,
3 => bb13,
4 => bb12,
5 => bb27,
6 => bb7,
340282366920938463463374607430073980348 => bb34,
_ => bb16
}
}
bb54 = {
_25 = (-155638147835707484585027066422375455017_i128) as f32;
_11 = _10;
_10 = -_12;
_16.0.1 = _16.1.0;
_1 = 3219434149457401427_u64 as i64;
_22 = _15.2 as f32;
_20 = !true;
_19 = -_22;
_9 = -_16.0.0;
_18 = [_20,_20,_20,_20,_20];
_1 = _12;
_18 = _16.1.0;
_26 = _15.3;
_2 = _14 as i64;
_24 = 11010591994717305611_u64 as isize;
_23 = _14;
_18 = _16.1.0;
_6 = !_7;
_1 = !_11;
_16.1.0 = [_20,_20,_20,_20,_20];
_12 = _3 | _8;
_26 = _15.3 & _4;
_1 = !_10;
_18 = [_20,_20,_20,_20,_20];
_14 = _23 * _23;
_8 = !_16.0.0;
Goto(bb3)
}
bb55 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb56 = {
SetDiscriminant(_27, 1);
_29 = _56;
_94.0 = (_16.0.0, _64.0.1);
_94.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0;
_72.fld1.1 = _62.fld1.1;
_97 = _23 - _76;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1 = _53.1;
match _31 {
0 => bb32,
1 => bb57,
340282366920938463463374607430073980348 => bb59,
_ => bb58
}
}
bb57 = {
_49 = Field::<i8>(Variant(_51, 0), 0) as isize;
_16.1 = (_53.1.0,);
_53.0.1 = [_36,_52,_36,_36,_20];
_15.1 = core::ptr::addr_of!(_62.fld1);
Goto(bb40)
}
bb58 = {
_9 = _1;
_6 = !_26;
_23 = _14;
_19 = _15.2 as f32;
_8 = 32097_u16 as i64;
_20 = _6 < _6;
_25 = _19 - _22;
_33 = _7 as isize;
_31 = 2064702586_i32 & (-1018726305_i32);
_29.2 = _20 | _20;
_25 = _22;
_16.0.1 = _16.1.0;
_29.1 = [_15.2,_15.2,_15.2];
_26 = -_5;
_18 = [_29.2,_20,_29.2,_29.2,_29.2];
_11 = _31 as i64;
_19 = _25;
_22 = _19;
_29.1 = [_15.2,_15.2,_15.2];
Goto(bb7)
}
bb59 = {
_24 = !_35;
_92.2 = _62.fld1.1 * _41.1;
_89 = _31 | _31;
_72.fld1.2 = _92.3 * _62.fld1.2;
_45 = core::ptr::addr_of!((*_45));
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0.1 = [_29.2,_20,_20,_52,_29.2];
SetDiscriminant(_46, 0);
_78.0 = _70.1;
place!(Field::<u32>(Variant(_46, 0), 0)) = _62.fld1.3 << _60;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.1,);
_6 = _26 - _92.3;
_72.fld1 = _62.fld1;
_100 = !116287945938805406416287622392051526169_i128;
_41 = (_18, _72.fld1.1, _78.2);
_62.fld3 = _97 as i64;
_93 = !_100;
match _31 {
340282366920938463463374607430073980348 => bb60,
_ => bb13
}
}
bb60 = {
place!(Field::<*const i8>(Variant(_55, 1), 1)) = core::ptr::addr_of!(_61);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.1,);
SetDiscriminant(_46, 0);
match _31 {
0 => bb43,
1 => bb25,
2 => bb61,
340282366920938463463374607430073980348 => bb63,
_ => bb62
}
}
bb61 = {
_17 = 2031045933_u32 + 1501489555_u32;
_7 = _10 as i16;
_4 = _7;
_26 = _15.3;
_22 = -_19;
_32 = -_22;
_20 = _29.2 | _29.2;
_8 = _12 >> _10;
_6 = !_4;
_32 = _25;
_16.0 = (_3, _18);
_22 = -_32;
_13 = 69011827811219696808902659207511894051_i128 as i64;
_1 = -_10;
_38 = [13695027519121621209_u64,14164905703671372818_u64,11609152361950614107_u64,906135869186464140_u64];
_16.1.0 = [_20,_29.2,_20,_20,_29.2];
_15.3 = -_26;
Goto(bb10)
}
bb62 = {
_17 = _23 as u32;
SetDiscriminant(_44, 3);
_79 = _15.2 as i64;
_48 = _23;
_78.0 = [_36,_36,_56.2,_20,_56.2];
_15.1 = core::ptr::addr_of!(_62.fld1);
_41 = (_16.1.0, _15.2, Field::<[u8; 8]>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 1));
_58 = !_59;
_64.1.0 = [_36,_29.2,_20,_20,_20];
_38 = [_66,_66,_66,_66];
_20 = _52 ^ _29.2;
_78.2 = Field::<[u8; 8]>(Variant(Field::<Adt54>(Variant(_27, 0), 4), 0), 1);
_72.fld1.3 = _48 as u32;
_83 = 181697045725624666884108434002850942130_u128;
_37 = _54 >> _64.0.0;
_64.1 = (_78.0,);
_15.3 = _10 as i16;
_16.0 = (_53.0.0, _64.0.1);
_36 = _57.0 < _8;
_74 = _62.fld1.0;
_12 = -_1;
_29.2 = _20;
_70.0 = Field::<u32>(Variant(_46, 0), 0) as i64;
_62.fld1.3 = Field::<u32>(Variant(_46, 0), 0);
_74 = _15.0 >> _57.0;
_7 = _15.3;
_65 = _39;
Goto(bb48)
}
bb63 = {
_29.2 = !_56.2;
_83 = !Field::<u128>(Variant(_44, 3), 1);
_42 = [_72.fld1.3,_62.fld1.3,_62.fld1.3,_72.fld1.3];
_96.2 = core::ptr::addr_of_mut!(_45);
_81.1 = _16.1;
_85 = _62.fld2;
SetDiscriminant(_55, 2);
_56.0 = [_61,_61,_61,_61,_61,_61,_61,_61];
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)) = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0.1, _92.2, _78.2);
_72.fld2 = _62.fld2;
_64.0.1 = _94.0.1;
_81.0.0 = !_1;
(*_39) = [_62.fld1.1,Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).1,_72.fld1.1];
_48 = _97 * _76;
_106.3 = !_82;
_62.fld1.1 = _92.2 + _41.1;
_71 = [_66,_66,_66,_66];
_58 = _48 as u16;
_62.fld2 = _72.fld2;
match _31 {
0 => bb33,
1 => bb64,
2 => bb65,
3 => bb66,
340282366920938463463374607430073980348 => bb68,
_ => bb67
}
}
bb64 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb65 = {
_49 = Field::<i8>(Variant(_51, 0), 0) as isize;
_16.1 = (_53.1.0,);
_53.0.1 = [_36,_52,_36,_36,_20];
_15.1 = core::ptr::addr_of!(_62.fld1);
Goto(bb40)
}
bb66 = {
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
_16.0 = (_12, _41.0);
_40 = _38;
_29.0 = [91_i8,(-107_i8),(-8_i8),(-121_i8),78_i8,(-102_i8),(-22_i8),56_i8];
_16.1 = (_18,);
_5 = _26;
_13 = _8 + _12;
_6 = _15.3;
_21 = _33 - _33;
_41.2 = [_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0,_15.0];
match _31 {
0 => bb20,
1 => bb22,
2 => bb3,
3 => bb28,
4 => bb29,
5 => bb30,
6 => bb31,
340282366920938463463374607430073980348 => bb33,
_ => bb32
}
}
bb67 = {
_18 = [_20,_20,_20,_29.2,_20];
_1 = _9;
_16.0.1 = _16.1.0;
match _31 {
0 => bb8,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
6 => bb18,
340282366920938463463374607430073980348 => bb20,
_ => bb19
}
}
bb68 = {
_56 = _29;
_80 = _96.2;
_16.1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0.1,);
_96.0.0 = _53.0.0 ^ Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0;
_109.1 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).1;
_103 = _89;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)) = _41;
_108 = [_29.2,_56.2,_56.2,_20];
_92 = (_74, _15.1, _15.2, _62.fld1.2);
_62.fld1.1 = _41.1;
_13 = -_96.0.0;
place!(Field::<[i64; 5]>(Variant(_27, 1), 3)) = [_12,_2,_81.0.0,_3,_9];
_106.2 = _48;
(*_45) = _58 as i128;
_71 = _38;
_84 = _72.fld1.3 | _62.fld1.3;
match _31 {
0 => bb38,
340282366920938463463374607430073980348 => bb70,
_ => bb69
}
}
bb69 = {
(*_39) = [_41.1,_15.2,_15.2];
_5 = _7 & _26;
_16.0.1 = [_20,_29.2,_52,_52,_20];
_29.2 = _36;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_44, 1), 3)).2 = _20 | _36;
_55 = Adt53::Variant3 { fld0: _15.2 };
_13 = _9;
_62.fld1.0 = 291969803673314192668870703504240059494_u128 as u8;
_53.1 = _16.1;
SetDiscriminant(_55, 2);
place!(Field::<([bool; 5],)>(Variant(_44, 1), 1)).0 = [_52,_52,_20,_20,_36];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_44, 1), 2)) = (_16.0, _53.1);
Call(_62.fld3 = core::intrinsics::bswap(_57.0), ReturnTo(bb36), UnwindUnreachable())
}
bb70 = {
_106.1 = _29.2;
place!(Field::<bool>(Variant(_44, 3), 0)) = _20;
_96.0 = _64.0;
_74 = !_92.0;
_64 = (_53.0, _16.1);
_104 = (*_45) ^ _93;
_78.0 = _16.1.0;
place!(Field::<*mut [u32; 4]>(Variant(_55, 2), 0)) = core::ptr::addr_of_mut!(_34);
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)).1 = _41.1;
_16.1 = (_57.1,);
_33 = _21 ^ _60;
_97 = _76 * _106.2;
_112.0 = !_74;
_71 = [_66,_66,_66,_66];
_115 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1);
_94.2 = core::ptr::addr_of_mut!((*_80));
match _31 {
0 => bb22,
1 => bb10,
340282366920938463463374607430073980348 => bb71,
_ => bb36
}
}
bb71 = {
_116.4 = _60;
_118.0.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0 ^ _2;
_92.3 = _72.fld1.2;
_53.0.1 = _53.1.0;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0 = (_3, _53.0.1);
_76 = _72.fld1.3 as f64;
_96.0.0 = _10;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0 = _64.0;
_106.0 = _89 & _89;
_106 = (_103, _20, _76, _58, _35);
_88 = !_15.2;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)) = (_57.1, _88, _41.2);
_47 = _108;
_41.0 = [_29.2,_20,_56.2,_56.2,_29.2];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1 = (_115.0.1,);
_107 = _62.fld1.1 | _15.2;
_109 = _16;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)) = (_53.0, _16.1);
_56.2 = Field::<bool>(Variant(_44, 3), 0);
_70.1 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).0;
_72.fld2 = _85;
_116.0 = !_106.0;
_92.2 = !_15.2;
_29.1 = [_15.2,_62.fld1.1,_15.2];
_118.1 = _53.1;
_57 = (_10, _109.0.1);
place!(Field::<bool>(Variant(_44, 3), 0)) = _56.2;
match _31 {
0 => bb52,
340282366920938463463374607430073980348 => bb72,
_ => bb30
}
}
bb72 = {
place!(Field::<i16>(Variant(_27, 1), 4)) = _6;
_71 = [_66,_66,_66,_66];
_118.1 = (_41.0,);
match _31 {
0 => bb18,
1 => bb59,
2 => bb10,
3 => bb31,
4 => bb24,
340282366920938463463374607430073980348 => bb73,
_ => bb6
}
}
bb73 = {
_93 = _100;
_75 = _106.3 as f64;
_76 = _97;
_15 = (_112.0, _92.1, _41.1, _5);
_1 = _109.0.0 - _118.0.0;
_82 = _58 * _106.3;
match _31 {
0 => bb6,
1 => bb53,
2 => bb34,
3 => bb69,
4 => bb56,
5 => bb74,
340282366920938463463374607430073980348 => bb76,
_ => bb75
}
}
bb74 = {
place!(Field::<i16>(Variant(_27, 1), 4)) = _6;
_71 = [_66,_66,_66,_66];
_118.1 = (_41.0,);
match _31 {
0 => bb18,
1 => bb59,
2 => bb10,
3 => bb31,
4 => bb24,
340282366920938463463374607430073980348 => bb73,
_ => bb6
}
}
bb75 = {
_116.4 = _60;
_118.0.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0 ^ _2;
_92.3 = _72.fld1.2;
_53.0.1 = _53.1.0;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0 = (_3, _53.0.1);
_76 = _72.fld1.3 as f64;
_96.0.0 = _10;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0 = _64.0;
_106.0 = _89 & _89;
_106 = (_103, _20, _76, _58, _35);
_88 = !_15.2;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)) = (_57.1, _88, _41.2);
_47 = _108;
_41.0 = [_29.2,_20,_56.2,_56.2,_29.2];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1 = (_115.0.1,);
_107 = _62.fld1.1 | _15.2;
_109 = _16;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)) = (_53.0, _16.1);
_56.2 = Field::<bool>(Variant(_44, 3), 0);
_70.1 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).0;
_72.fld2 = _85;
_116.0 = !_106.0;
_92.2 = !_15.2;
_29.1 = [_15.2,_62.fld1.1,_15.2];
_118.1 = _53.1;
_57 = (_10, _109.0.1);
place!(Field::<bool>(Variant(_44, 3), 0)) = _56.2;
match _31 {
0 => bb52,
340282366920938463463374607430073980348 => bb72,
_ => bb30
}
}
bb76 = {
_116 = (_89, _106.1, _106.2, _106.3, _54);
_29.2 = _20;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)).2 = [_74,_74,_112.0,_92.0,_112.0,_92.0,_15.0,_112.0];
_41.2 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).2;
_112.3 = !_72.fld1.3;
_77 = core::ptr::addr_of_mut!(_81.1);
_81.0 = _16.0;
_53.1 = (*_77);
place!(Field::<*mut [u32; 4]>(Variant(_55, 2), 0)) = core::ptr::addr_of_mut!(_42);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2)).3 = _72.fld1.2;
_125 = _53;
_125.0.1 = _70.1;
_42 = [_62.fld1.3,_72.fld1.3,_84,_72.fld1.3];
_36 = !Field::<bool>(Variant(_44, 3), 0);
_112 = (_92.0, _15.2, _72.fld1.2, _62.fld1.3);
_125.1 = (_94.0.1,);
match _31 {
0 => bb5,
1 => bb37,
2 => bb77,
3 => bb78,
4 => bb79,
340282366920938463463374607430073980348 => bb81,
_ => bb80
}
}
bb77 = {
_29.0 = [(-75_i8),50_i8,(-100_i8),(-9_i8),45_i8,126_i8,(-126_i8),(-103_i8)];
_4 = _6;
_14 = _23 - _23;
_9 = _8 >> _1;
_20 = true;
_8 = !_10;
_15.2 = _17 as usize;
Goto(bb5)
}
bb78 = {
_25 = _22;
_16.0.0 = _11;
_2 = _8;
_9 = -_16.0.0;
_9 = _2;
_29.0 = [55_i8,30_i8,67_i8,118_i8,(-21_i8),18_i8,84_i8,65_i8];
_16.1 = (_16.0.1,);
Goto(bb4)
}
bb79 = {
_29.2 = _20;
_39 = core::ptr::addr_of_mut!(_29.1);
_23 = _14;
_15.2 = 17406259817885222871_usize << _9;
_25 = (-2980825663673349347364398784952277676_i128) as f32;
_15.0 = 209_u8;
_25 = _22 + _22;
Goto(bb11)
}
bb80 = {
_17 = 2031045933_u32 + 1501489555_u32;
_7 = _10 as i16;
_4 = _7;
_26 = _15.3;
_22 = -_19;
_32 = -_22;
_20 = _29.2 | _29.2;
_8 = _12 >> _10;
_6 = !_4;
_32 = _25;
_16.0 = (_3, _18);
_22 = -_32;
_13 = 69011827811219696808902659207511894051_i128 as i64;
_1 = -_10;
_38 = [13695027519121621209_u64,14164905703671372818_u64,11609152361950614107_u64,906135869186464140_u64];
_16.1.0 = [_20,_29.2,_20,_20,_29.2];
_15.3 = -_26;
Goto(bb10)
}
bb81 = {
_96.0 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0.0, _64.0.1);
_38 = _40;
place!(Field::<u128>(Variant(_44, 3), 1)) = !_83;
_81 = (_53.0, Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).1);
_103 = _31 >> _6;
_126.0 = [_56.2,_56.2,_20,_36,_116.1];
_62.fld1.1 = _104 as usize;
_100 = -_104;
_102 = _106.2 - _116.2;
_41.0 = _81.1.0;
place!(Field::<u32>(Variant(_46, 0), 0)) = !_72.fld1.3;
_125.0.0 = -_8;
_126 = (_115.0.1, _72.fld1.1, Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).2);
(*_65) = [_92.2,_107,_126.1];
_92.0 = !_74;
_118.0 = _125.0;
_64.0.0 = -Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0;
_116.0 = _103;
place!(Field::<*mut char>(Variant(_44, 3), 4)) = _85;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0.1 = [_20,_29.2,_36,_36,_116.1];
_41.2 = [_74,_74,_112.0,_112.0,_112.0,_112.0,_112.0,_92.0];
_31 = !_116.0;
_81.1.0 = [_52,_106.1,_106.1,_20,_20];
_60 = _37;
_113 = [_66,_66,_66,_66];
_107 = _62.fld1.1;
_74 = Field::<u128>(Variant(_44, 3), 1) as u8;
_78.2 = _126.2;
Goto(bb82)
}
bb82 = {
_72.fld1.0 = !_112.0;
_29 = (_56.0, _56.1, _56.2);
_72.fld3 = _125.0.0;
SetDiscriminant(_46, 2);
_78 = _41;
_124.1 = [_112.1,_41.1,_112.1];
Goto(bb83)
}
bb83 = {
_56.0 = _29.0;
Call(_78.1 = core::intrinsics::bswap(_41.1), ReturnTo(bb84), UnwindUnreachable())
}
bb84 = {
(*_39) = [_126.1,_78.1,_62.fld1.1];
_131 = _54;
_125.1.0 = [_106.1,_36,_29.2,_29.2,_56.2];
_26 = Field::<i16>(Variant(_27, 1), 4);
_87 = _66 >> _12;
_35 = _21 & _116.4;
_91 = _97 - _116.2;
_95 = Field::<*mut [u32; 4]>(Variant(_55, 2), 0);
_118.0.1 = _64.1.0;
_120 = Adt51::Variant1 { fld0: _77 };
_72.fld1.3 = _62.fld1.3 >> _112.0;
Goto(bb85)
}
bb85 = {
_94.1 = core::ptr::addr_of!(_62.fld1);
(*_65) = [_92.2,Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).1,_72.fld1.1];
_119 = _33 | _60;
_15 = (_112.0, _94.1, _72.fld1.1, _4);
_16.1 = _118.1;
_43 = core::ptr::addr_of!(_77);
_96.1 = core::ptr::addr_of!(_62.fld1);
_42 = [_112.3,_84,_72.fld1.3,_84];
_15 = _92;
_124 = _56;
_92.1 = core::ptr::addr_of!(_72.fld1);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2)).0 = !_112.0;
_115.0.0 = _72.fld3 << _33;
_131 = _21;
Goto(bb86)
}
bb86 = {
_9 = _2 | _79;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0.1,);
_72.fld1.1 = _78.1 << _16.0.0;
_138.1 = (_109.1.0,);
_41.0 = [_29.2,_124.2,_29.2,_29.2,Field::<bool>(Variant(_44, 3), 0)];
_29.2 = !_106.1;
_16.0 = _57;
Goto(bb87)
}
bb87 = {
_129 = _43;
(*_45) = !_100;
_27 = Adt57::Variant3 { fld0: _45,fld1: _82,fld2: _129,fld3: _38,fld4: _15,fld5: _15.0,fld6: _126,fld7: (*_45) };
_73 = Adt56::Variant1 { fld0: _120 };
_130 = _119 * _119;
_106.2 = _91;
(*_129) = core::ptr::addr_of_mut!(_81.1);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0 = (_70.0, _115.1.0);
_67 = _73;
_32 = _103 as f32;
_54 = Field::<u128>(Variant(_44, 3), 1) as isize;
place!(Field::<*mut ([bool; 5],)>(Variant(place!(Field::<Adt51>(Variant(_67, 1), 0)), 1), 0)) = core::ptr::addr_of_mut!(_53.1);
_130 = _116.4;
_89 = -_31;
_49 = !_35;
_114 = _32 * _19;
SetDiscriminant(_73, 1);
place!(Field::<[i8; 8]>(Variant(_44, 3), 3)) = [_61,_61,_61,_61,_61,_61,_61,_61];
_46 = Adt55::Variant2 { fld0: _108,fld1: _61 };
_96.2 = core::ptr::addr_of_mut!(place!(Field::<*const i128>(Variant(_27, 3), 0)));
place!(Field::<[i8; 8]>(Variant(_55, 2), 1)) = Field::<[i8; 8]>(Variant(_44, 3), 3);
_72.fld1.0 = _92.0;
_116.0 = _31;
_56.0 = [Field::<i8>(Variant(_46, 2), 1),Field::<i8>(Variant(_46, 2), 1),Field::<i8>(Variant(_46, 2), 1),_61,Field::<i8>(Variant(_46, 2), 1),Field::<i8>(Variant(_46, 2), 1),Field::<i8>(Variant(_46, 2), 1),_61];
_53.1.0 = [_116.1,_20,_29.2,_106.1,_20];
Call(place!(Field::<u128>(Variant(_44, 3), 1)) = core::intrinsics::transmute((*_45)), ReturnTo(bb88), UnwindUnreachable())
}
bb88 = {
_62.fld1.0 = _112.0 | _112.0;
_127 = '\u{63dc4}';
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0.1 = [_56.2,_116.1,_124.2,_116.1,_106.1];
_8 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0 ^ _64.0.0;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 3), 6)).0 = _125.1.0;
_102 = -_106.2;
_142 = [_93];
(*_80) = core::ptr::addr_of!(place!(Field::<i128>(Variant(_27, 3), 7)));
_111 = core::ptr::addr_of_mut!(place!(Field::<*const i128>(Variant(_27, 3), 0)));
_133 = _127;
_116.0 = _89;
Goto(bb89)
}
bb89 = {
_56.1 = [_112.1,_15.2,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 3), 4).2];
_143 = [_52,_36,_116.1,_29.2,_36];
_45 = Field::<*const i128>(Variant(_27, 3), 0);
_21 = _24 << _112.2;
Goto(bb90)
}
bb90 = {
(*_129) = core::ptr::addr_of_mut!(_118.1);
_111 = core::ptr::addr_of_mut!((*_80));
_23 = _106.2;
_72.fld1.3 = !_84;
_26 = _72.fld1.2;
Goto(bb91)
}
bb91 = {
_40 = [_87,_87,_87,_87];
(*_43) = core::ptr::addr_of_mut!(_109.1);
_48 = _23;
_146 = _89 < _89;
(*_45) = _52 as i128;
(*_65) = [_126.1,_107,_72.fld1.1];
_64 = (_96.0, (*_77));
SetDiscriminant(_120, 1);
Call(_93 = core::intrinsics::transmute((*_95)), ReturnTo(bb92), UnwindUnreachable())
}
bb92 = {
_151 = _133 as u16;
_33 = _61 as isize;
_2 = _109.0.0;
_93 = _72.fld1.3 as i128;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).1.0 = [_56.2,_124.2,_116.1,_146,_124.2];
_116.3 = !_82;
_36 = !_116.1;
_124 = _29;
_92 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 3), 4);
_70 = (_79, _143);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 1)).0.1 = [_20,_106.1,_29.2,_20,_36];
_124 = (Field::<[i8; 8]>(Variant(_55, 2), 1), _29.1, _146);
Goto(bb93)
}
bb93 = {
_138.0 = (_2, _125.1.0);
SetDiscriminant(_27, 3);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 3), 4)).2 = _78.1;
_23 = _72.fld1.0 as f64;
_135 = _127;
_16.1.0 = [_106.1,_106.1,_20,_36,_124.2];
_72.fld1.2 = _26 * _112.2;
_35 = _60 + _37;
_73 = Adt56::Variant1 { fld0: Field::<Adt51>(Variant(_67, 1), 0) };
_35 = _49;
_157 = Adt51::Variant1 { fld0: (*_43) };
_53 = (_96.0, _138.1);
_19 = (*_45) as f32;
_144 = core::ptr::addr_of_mut!(_122);
_150 = [(*_45)];
place!(Field::<u16>(Variant(_27, 3), 1)) = _82;
_102 = -_106.2;
_6 = _7;
_57.0 = _64.0.0;
_137 = _87;
Goto(bb94)
}
bb94 = {
_52 = !_56.2;
_66 = _87 & _87;
_58 = !_82;
_117 = _23;
_160.1 = _133;
_117 = -_48;
_23 = _16.0.0 as f64;
_163 = !Field::<bool>(Variant(_44, 3), 0);
_67 = Adt56::Variant1 { fld0: _157 };
(*_65) = [_92.2,_107,_15.2];
(*_80) = core::ptr::addr_of!((*_45));
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 3), 4)).2 = _41.1 >> _131;
(*_43) = Field::<*mut ([bool; 5],)>(Variant(_157, 1), 0);
_139 = Adt54::Variant1 { fld0: _113,fld1: _150,fld2: _37,fld3: (*_43),fld4: _72.fld2,fld5: _89,fld6: Field::<u128>(Variant(_44, 3), 1) };
_53.1 = _118.1;
_41.2 = _78.2;
_118.0.1 = _70.1;
_66 = _87 & _87;
_104 = (*_45);
Goto(bb95)
}
bb95 = {
_84 = _62.fld1.3 << _10;
_109.0 = (_8, _53.0.1);
_57.1 = [_124.2,_56.2,_56.2,_56.2,_106.1];
_125.0.1 = [_52,_20,_20,Field::<bool>(Variant(_44, 3), 0),_116.1];
_22 = -_114;
place!(Field::<u128>(Variant(_44, 3), 1)) = Field::<u128>(Variant(_139, 1), 6) * Field::<u128>(Variant(_139, 1), 6);
_165 = [_88,_15.2,_72.fld1.1];
_153 = Move(_46);
_64.0.1 = [_106.1,_106.1,_56.2,_163,_163];
_125.0 = (_118.0.0, _96.0.1);
_22 = _32 + _25;
_132 = (*_39);
_118.0 = (_3, _41.0);
_97 = _106.2 + _23;
Goto(bb96)
}
bb96 = {
_68 = Adt58::Variant0 { fld0: (*_43),fld1: _165 };
_106.2 = _112.0 as f64;
_128 = _125.0;
_124.2 = _20 != _52;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 3), 6)).1 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 3), 4).2 - _78.1;
_52 = _124.2 | _56.2;
_141 = !_66;
_138.0.0 = _10;
_81.1.0 = _109.0.1;
Call(_159 = core::intrinsics::bswap(Field::<u128>(Variant(_44, 3), 1)), ReturnTo(bb97), UnwindUnreachable())
}
bb97 = {
_57.0 = _106.2 as i64;
_115 = (_81.0, _53.1);
_27 = Adt57::Variant1 { fld0: _41,fld1: Field::<[bool; 4]>(Variant(_153, 2), 0),fld2: _15,fld3: _63,fld4: _6,fld5: _125 };
_10 = _9;
_155.2 = _52 & _52;
(*_45) = Field::<i8>(Variant(_153, 2), 1) as i128;
_78.2 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).2;
_13 = _2 ^ _12;
place!(Field::<i32>(Variant(_139, 1), 5)) = _116.0;
(*_144) = _133;
_131 = _21;
_29.1 = [_126.1,_88,_126.1];
_72.fld1.3 = _62.fld1.3;
_72.fld1.1 = _15.2 & Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).1;
_13 = !_53.0.0;
_30 = Adt57::Variant3 { fld0: _45,fld1: _58,fld2: _129,fld3: _40,fld4: _15,fld5: _15.0,fld6: _41,fld7: _100 };
_150 = [_104];
place!(Field::<*mut ([bool; 5],)>(Variant(_120, 1), 0)) = Field::<*mut ([bool; 5],)>(Variant(Field::<Adt51>(Variant(_67, 1), 0), 1), 0);
_162 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0;
_29 = (_124.0, _124.1, _36);
_163 = Field::<bool>(Variant(_44, 3), 0);
_94 = _96;
_123 = !_60;
_116.1 = _52;
_1 = _10 & Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.0;
_125.0 = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0.0, _16.0.1);
_96.1 = core::ptr::addr_of!(_72.fld1);
(*_77) = (_128.1,);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0 = (_138.0.0, _78.0);
Goto(bb98)
}
bb98 = {
_16.0 = (_72.fld3, _96.0.1);
_76 = Field::<i8>(Variant(_153, 2), 1) as f64;
_93 = _104;
place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 2)) = Move(_30);
_98 = Move(_44);
_15.0 = _62.fld1.0;
place!(Field::<bool>(Variant(_98, 3), 0)) = _1 <= Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_98, 3), 2), 0), 1).0.0;
_32 = -_22;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_98, 3), 2)), 0), 2)), 3), 4)).0 = _25 as u8;
_131 = _130 - _49;
_44 = Move(_98);
place!(Field::<i128>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_44, 3), 2)), 0), 2)), 3), 7)) = !(*_45);
Goto(bb99)
}
bb99 = {
_171 = (Field::<[i8; 8]>(Variant(_44, 3), 3), _132, _20);
_118.0 = (_57.0, Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_44, 3), 2), 0), 1).0.1);
SetDiscriminant(_139, 2);
_69 = Move(_44);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0 = (_12, _96.0.1);
SetDiscriminant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 3);
_79 = _138.0.0 >> _81.0.0;
_35 = _19 as isize;
_146 = !_52;
_41.2 = [Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,_162,_72.fld1.0,_162,_72.fld1.0,_92.0,_112.0];
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).1 = _133;
_147 = [_93];
_14 = _41.1 as f64;
_15.2 = _107 * _112.1;
Goto(bb100)
}
bb100 = {
_160.0 = !_112.1;
_81.0.1 = [_163,_56.2,_52,_124.2,_116.1];
SetDiscriminant(_153, 3);
_23 = _117;
_155 = (Field::<[i8; 8]>(Variant(_55, 2), 1), Field::<[usize; 3]>(Variant(_68, 0), 1), _29.2);
place!(Field::<[u64; 4]>(Variant(_139, 2), 1)) = [_137,_87,_66,_137];
_125.1 = (_126.0,);
_146 = !_56.2;
place!(Field::<[u64; 4]>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 3)) = [_141,_137,_66,_137];
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3)) = (_94.0, _92.1, _80);
SetDiscriminant(_73, 1);
_60 = _116.4;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0)).0 = [_146,_56.2,_106.1,_171.2,_36];
Goto(bb101)
}
bb101 = {
SetDiscriminant(_68, 1);
place!(Field::<*mut ([bool; 5],)>(Variant(place!(Field::<Adt51>(Variant(_67, 1), 0)), 1), 0)) = core::ptr::addr_of_mut!(_16.1);
_64.0.0 = _8 & _79;
SetDiscriminant(Field::<Adt51>(Variant(_67, 1), 0), 1);
_118.0.0 = _72.fld3;
place!(Field::<bool>(Variant(_69, 3), 0)) = _128.0 > _16.0.0;
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).3 = Field::<u128>(Variant(_69, 3), 1) as usize;
_164 = _135;
_78 = (_128.1, _62.fld1.1, _41.2);
_172.2 = _62.fld1.2 as u16;
place!(Field::<u64>(Variant(_139, 2), 4)) = _61 as u64;
_129 = core::ptr::addr_of!((*_129));
_62.fld1.0 = _15.0 - _92.0;
(*_39) = [_88,_160.0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).2];
_92.0 = _162;
_49 = _119;
_126.2 = [_72.fld1.0,_92.0,_92.0,_112.0,_112.0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,_162];
place!(Field::<*mut ([bool; 5],)>(Variant(place!(Field::<Adt51>(Variant(_67, 1), 0)), 1), 0)) = core::ptr::addr_of_mut!(_81.1);
_125.1 = (_70.1,);
_180 = (_31, _106.1, _117, _172.2, _60);
place!(Field::<*const i128>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 0)) = _45;
_53.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5).0;
_15 = (Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3).1, _112.1, _62.fld1.2);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1)).0.1 = [_106.1,_56.2,_56.2,_163,_146];
_56.2 = _163 | _171.2;
place!(Field::<[bool; 4]>(Variant(_27, 1), 1)) = _47;
_70 = _81.0;
Goto(bb102)
}
bb102 = {
_172.0 = _61 as usize;
_75 = _180.2;
_48 = _62.fld1.3 as f64;
_48 = _61 as f64;
_174 = (*_45) | _93;
place!(Field::<[bool; 4]>(Variant(_139, 2), 0)) = _47;
_117 = _75 * _97;
place!(Field::<i128>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 7)) = _93;
_53 = (_70, _118.1);
_126.2 = [_112.0,_62.fld1.0,_72.fld1.0,_92.0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,_62.fld1.0,_92.0,_92.0];
_53.1.0 = [_20,_146,_116.1,_155.2,_36];
_53 = (_125.0, _81.1);
_114 = _19;
_158 = _24;
(*_77).0 = _138.0.1;
place!(Field::<*mut ([bool; 5],)>(Variant(place!(Field::<Adt51>(Variant(_67, 1), 0)), 1), 0)) = (*_129);
_118.1 = (_78.0,);
Goto(bb103)
}
bb103 = {
_150 = [(*_45)];
_116.2 = _180.2 * _117;
_171.2 = !_163;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3)).0 = (_10, _138.1.0);
_106.1 = _180.2 <= _14;
_169 = _61 | _61;
_160.2 = _180.3 & _116.3;
_135 = _160.1;
place!(Field::<Adt57>(Variant(_68, 1), 2)) = Move(_27);
_163 = Field::<bool>(Variant(_69, 3), 0);
_45 = core::ptr::addr_of!(_100);
_124.1 = [_15.2,Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).3,_112.1];
_23 = _112.3 as f64;
_172.0 = _112.1 >> Field::<([bool; 5], usize, [u8; 8])>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 1), 0).1;
_45 = core::ptr::addr_of!(_174);
SetDiscriminant(Field::<Adt57>(Variant(_68, 1), 2), 2);
_51 = Adt54::Variant1 { fld0: Field::<[u64; 4]>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 3), 3),fld1: _150,fld2: _35,fld3: (*_43),fld4: _85,fld5: _31,fld6: Field::<u128>(Variant(_69, 3), 1) };
_78.1 = _72.fld1.1;
_145 = Field::<Adt51>(Variant(_67, 1), 0);
Goto(bb104)
}
bb104 = {
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 4)).3 = _112.2 + _15.3;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld1.2 = _15.0 as u16;
place!(Field::<*mut ([bool; 5],)>(Variant(_157, 1), 0)) = core::ptr::addr_of_mut!((*_77));
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).2 = !_172.2;
_183 = (_16.0.1, _160.0, _126.2);
Call(_172.2 = core::intrinsics::transmute(_72.fld1.2), ReturnTo(bb105), UnwindUnreachable())
}
bb105 = {
_169 = _61 * _61;
_92.1 = core::ptr::addr_of!(_112);
_61 = _169;
_138.1 = (_16.0.1,);
(*_77) = (_143,);
_101 = _169 as f64;
_1 = _112.1 as i64;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 4)).2 = _78.1;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld1.1 = Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).1;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld1.0 = _15.2 - _92.2;
_57.1 = [_124.2,_116.1,_171.2,_52,_146];
_79 = -_1;
_37 = !_180.4;
_171.1 = _132;
_159 = Field::<i32>(Variant(_51, 1), 5) as u128;
_168 = _49 - _106.4;
_37 = _106.4 | _158;
SetDiscriminant(_67, 1);
_64 = (_125.0, _138.1);
_18 = _64.0.1;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld0 = !_162;
_56 = (_29.0, _124.1, _116.1);
_29.1 = _56.1;
_118.1 = (_183.0,);
_131 = -_60;
Call(_1 = core::intrinsics::bswap(_125.0.0), ReturnTo(bb106), UnwindUnreachable())
}
bb106 = {
_42 = [_62.fld1.3,_84,_62.fld1.3,_84];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1)).0.1 = _118.1.0;
_168 = _131;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 4)) = _92;
(*_43) = core::ptr::addr_of_mut!((*_77));
_28 = Adt64::Variant2 { fld0: _63 };
_172.1 = Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).1;
_173 = !_24;
_106.1 = _112.1 == _88;
_126.2 = _78.2;
place!(Field::<i32>(Variant(_68, 1), 5)) = _103;
_138.1 = (*_77);
SetDiscriminant(_145, 0);
_107 = !_41.1;
SetDiscriminant(_157, 0);
_6 = _114 as i16;
_82 = !Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).2;
_78 = (_96.0.1, _183.1, _41.2);
_108 = [_106.1,_124.2,_20,Field::<bool>(Variant(_69, 3), 0)];
Goto(bb107)
}
bb107 = {
_109.0.0 = !_3;
_32 = _19 - _22;
_16 = _64;
_176 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3).1;
_109.0 = (_125.0.0, _109.1.0);
place!(Field::<i32>(Variant(_68, 1), 5)) = _172.0 as i32;
_173 = _168;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld1 = (_172.0, _122, _160.2, _172.0);
place!(Field::<u8>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 3), 5)) = (*_176).0 ^ (*_176).0;
place!(Field::<*mut char>(Variant(_69, 3), 4)) = core::ptr::addr_of_mut!(_164);
_191 = -_75;
_181 = _72.fld1.3 > _112.3;
_159 = Field::<u128>(Variant(_69, 3), 1);
place!(Field::<Adt51>(Variant(_73, 1), 0)) = _120;
_125 = _53;
_138 = _125;
_174 = Field::<i128>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 3), 7) << _13;
_140 = [_17,(*_176).3,(*_176).3,_72.fld1.3];
_56.1 = (*_65);
SetDiscriminant(_28, 0);
_100 = _96.0.0 as i128;
_62.fld1 = (Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld0, _160.0, _26, _84);
_126.0 = [_20,_155.2,_106.1,_52,_171.2];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1)).1 = _16.1;
place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)) = Adt57::Variant3 { fld0: (*_80),fld1: _180.3,fld2: _43,fld3: Field::<[u64; 4]>(Variant(_51, 1), 0),fld4: _15,fld5: _15.0,fld6: _183,fld7: (*_45) };
Goto(bb108)
}
bb108 = {
_24 = -_116.4;
place!(Field::<i32>(Variant(_51, 1), 5)) = _89;
(*_176).1 = !Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.0;
place!(Field::<isize>(Variant(_51, 1), 2)) = _168;
_195.0.1 = !_160.0;
_125.0.0 = _81.0.0 >> _62.fld1.2;
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).3 = _25 as usize;
_100 = -(*_45);
_155.2 = _159 < Field::<u128>(Variant(_51, 1), 6);
_78 = (_53.1.0, _41.1, _41.2);
SetDiscriminant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1);
_125.1.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1).0.1;
SetDiscriminant(_120, 0);
(*_176).1 = Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.0 * Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.0;
_16.0.0 = _112.2 as i64;
_56.1 = [(*_176).1,_172.0,_41.1];
place!(Field::<*mut [u32; 4]>(Variant(_55, 2), 0)) = core::ptr::addr_of_mut!(_42);
_88 = !_62.fld1.1;
_102 = _91 * _14;
_110 = Adt57::Variant1 { fld0: _126,fld1: _47,fld2: _92,fld3: _63,fld4: _62.fld1.2,fld5: _118 };
_93 = !(*_45);
_70 = (_10, _41.0);
_15.3 = _7;
_21 = _60;
place!(Field::<*const [i64; 5]>(Variant(_145, 0), 0)) = core::ptr::addr_of!(_179);
Goto(bb109)
}
bb109 = {
_106.2 = -_116.2;
SetDiscriminant(_51, 2);
_138.0 = (_118.0.0, _183.0);
_203 = !_162;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 2)).1 = _94.1;
_33 = _141 as isize;
Goto(bb110)
}
bb110 = {
place!(Field::<[bool; 4]>(Variant(_51, 2), 0)) = [_29.2,_20,_52,Field::<bool>(Variant(_69, 3), 0)];
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 0)).0 = [_171.2,_181,_146,Field::<bool>(Variant(_69, 3), 0),_146];
_124.1 = [_183.1,_15.2,_126.1];
_116.2 = -_180.2;
_202 = [_180.1,_116.1,_163,_124.2,_146];
(*_65) = _56.1;
_57.1 = [_20,_171.2,_181,_124.2,_180.1];
_140 = _42;
_112.0 = !_162;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).0.0 = _81.0.0;
(*_45) = -_100;
place!(Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2)) = (_195.0.1, _164, _82, _107);
_183.0 = [_56.2,_163,_20,_56.2,_29.2];
(*_176).3 = _112.3;
_182 = _22 * _22;
Goto(bb111)
}
bb111 = {
_126.1 = _160.0;
_187 = [_62.fld1.1,_172.0,Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.0];
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2)).1 = _15.1;
place!(Field::<u128>(Variant(_69, 3), 1)) = _159 - _159;
_151 = !_58;
_180.3 = _172.2 >> _6;
SetDiscriminant(Field::<Adt51>(Variant(_73, 1), 0), 0);
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld3 = -_61;
_193.0 = Field::<[i8; 8]>(Variant(_55, 2), 1);
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld1.1 = Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).1;
Goto(bb112)
}
bb112 = {
place!(Field::<[i8; 8]>(Variant(_28, 0), 4)) = [_169,_169,_169,_61,Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld3,_61,_169,_169];
Goto(bb113)
}
bb113 = {
_56.1 = _132;
place!(Field::<i16>(Variant(_68, 1), 4)) = Field::<i16>(Variant(_110, 1), 4);
_174 = _104 >> _160.0;
Goto(bb114)
}
bb114 = {
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 0)) = (_94.0.1, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2).2, _78.2);
(*_176).3 = !_72.fld1.3;
_112.3 = !_84;
place!(Field::<i16>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 4)) = Field::<i32>(Variant(_68, 1), 5) as i16;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_110, 1), 0)).1 = _116.0 as usize;
(*_95) = _140;
SetDiscriminant(_145, 1);
_162 = (*_176).0 | _112.0;
_203 = _131 as u8;
_62.fld1 = (Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2).0, _183.1, _5, _112.3);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 2)).1 = core::ptr::addr_of!(_62.fld1);
Goto(bb115)
}
bb115 = {
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).3 = _160.0;
_164 = _122;
_16.1 = (_18,);
_16.1.0 = [_36,_106.1,_20,_146,_146];
_179 = [_12,_118.0.0,_138.0.0,_70.0,_1];
_72.fld1.3 = (*_176).3;
_160.2 = !_82;
_118.0.0 = -_70.0;
_53 = (_109.0, _81.1);
_130 = _173;
_137 = _66 + _66;
_175 = (_96.0.1,);
_155.0 = [Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld3,Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld3,_61,_169,_169,Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld3,_169,_61];
_19 = _32 - _22;
_204 = _72.fld1.0 != _112.0;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1)) = (_70, _175);
_195.0.0 = _62.fld1.0 ^ (*_176).0;
place!(Field::<[bool; 4]>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 6)) = [_204,_106.1,_146,_146];
place!(Field::<Adt63>(Variant(_28, 0), 0)) = Adt63::Variant1 { fld0: _32,fld1: _125.1,fld2: _53,fld3: _29 };
_175 = (_109.1.0,);
_131 = !_158;
_104 = _174 >> _131;
_81.0.0 = -_79;
Goto(bb116)
}
bb116 = {
_53.1.0 = [_124.2,_180.1,_180.1,_29.2,_56.2];
_62.fld1.3 = _112.2 as u32;
SetDiscriminant(_110, 2);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).0.0 = _3 * _96.0.0;
Goto(bb117)
}
bb117 = {
_82 = _172.2 + _160.2;
place!(Field::<Adt50>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 2)).fld2 = core::ptr::addr_of!(place!(Field::<[i64; 5]>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 3)));
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)).0.1 = [_124.2,_29.2,_56.2,_180.1,_36];
(*_45) = _100 >> _162;
_94.1 = core::ptr::addr_of!(_62.fld1);
place!(Field::<*const i8>(Variant(_28, 0), 5)) = core::ptr::addr_of!(_169);
_71 = [_87,_141,_66,_66];
_81.0.1 = [_36,_155.2,Field::<bool>(Variant(_69, 3), 0),Field::<bool>(Variant(_69, 3), 0),_146];
_126.1 = !_160.0;
_160 = (_112.1, Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.1, Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).2, _183.1);
_78.1 = Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.3 - (*_176).1;
_96.0.1 = [_124.2,_29.2,Field::<bool>(Variant(_69, 3), 0),_52,_29.2];
_165 = [_112.1,Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).3,_160.3];
_193 = (Field::<[i8; 8]>(Variant(_28, 0), 4), _56.1, _155.2);
_16 = (_57, _64.1);
place!(Field::<*const i8>(Variant(place!(Field::<Adt57>(Variant(_68, 1), 2)), 2), 0)) = core::ptr::addr_of!(place!(Field::<Adt50>(Variant(_110, 2), 2)).fld3);
_45 = core::ptr::addr_of!(_93);
_206 = _117;
(*_39) = _56.1;
SetDiscriminant(Field::<Adt63>(Variant(_28, 0), 0), 1);
_81.1 = _109.1;
place!(Field::<[i64; 5]>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 3)) = [_13,_9,_9,_81.0.0,_9];
Call(_94 = fn18(_124.1, _165, _195.0.0, _62.fld1, _125, Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_68, 1), 1).1, _82, _16.0, _116), ReturnTo(bb118), UnwindUnreachable())
}
bb118 = {
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 3)) = _29;
_175 = _138.1;
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld2 = Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld2;
_112 = (*_176);
_180 = (_103, _171.2, _117, _58, _21);
_149 = _174 as u8;
_172.3 = _180.2 as usize;
_180.2 = _14;
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).0 = _78.1 ^ _172.0;
_32 = -_25;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).1 = _16.1;
_53.0.0 = _8 - _70.0;
_214.1 = !Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.3;
_114 = _89 as f32;
_135 = _133;
_98 = Adt63::Variant0 { fld0: _19,fld1: (*_111),fld2: _31,fld3: Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld2,fld4: _15 };
_180.3 = Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).2 | Field::<Adt50>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 2), 2).fld1.2;
_27 = Adt57::Variant1 { fld0: Field::<([bool; 5], usize, [u8; 8])>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 0),fld1: _47,fld2: _92,fld3: _63,fld4: _92.3,fld5: Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 1) };
Goto(bb119)
}
bb119 = {
_193.0 = Field::<[i8; 8]>(Variant(_55, 2), 1);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 5)).1 = _81.1;
_81 = (_125.0, Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 5).1);
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld1.0 = _89 as usize;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 2)).0 = !Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 0), 4).0;
_81.1.0 = _64.1.0;
(*_45) = -_174;
_15.2 = !_126.1;
_62.fld1.2 = _5 + _15.3;
place!(Field::<Adt57>(Variant(_68, 1), 2)) = Adt57::Variant3 { fld0: (*_111),fld1: Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).2,fld2: _43,fld3: _71,fld4: _92,fld5: _162,fld6: _126,fld7: _100 };
SetDiscriminant(_98, 2);
_43 = core::ptr::addr_of!((*_129));
_79 = !_12;
_209 = [Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).2,_195.0.1];
_195.0.3 = _112.3;
_222 = _61 as i16;
Goto(bb120)
}
bb120 = {
_128.1 = [_181,_146,_180.1,_116.1,_180.1];
place!(Field::<*const i8>(Variant(_28, 0), 5)) = core::ptr::addr_of!(_61);
_105 = (*_176).3;
_214.2 = _92.3 & _4;
_106.4 = _141 as isize;
_100 = _104;
_171.2 = !_29.2;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3)).2 = _80;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 0)).2 = [Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 3), 4).0,_195.0.0,Field::<u8>(Variant(Field::<Adt57>(Variant(_68, 1), 2), 3), 5),_92.0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,_195.0.0,_195.0.0,_92.0];
place!(Field::<*const [i64; 5]>(Variant(_120, 0), 0)) = core::ptr::addr_of!(_63);
place!(Field::<*const i8>(Variant(_28, 0), 5)) = core::ptr::addr_of!(place!(Field::<Adt50>(Variant(_110, 2), 2)).fld3);
_216.0 = [_169,_169,_169,_61,_169,_169,_169,_61];
_112 = _72.fld1;
_109 = (_64.0, _16.1);
place!(Field::<*mut ([bool; 5],)>(Variant(_145, 1), 0)) = core::ptr::addr_of_mut!(_197);
_204 = !_56.2;
Goto(bb121)
}
bb121 = {
_91 = _62.fld1.2 as f64;
_84 = !_62.fld1.3;
_154 = _160.3 as isize;
_140 = (*_95);
place!(Field::<Adt53>(Variant(_98, 2), 0)) = Adt53::Variant2 { fld0: _95,fld1: _155.0 };
(*_43) = core::ptr::addr_of_mut!(_53.1);
_192 = -_182;
_200 = _114;
_192 = Field::<i16>(Variant(_27, 1), 4) as f32;
_77 = core::ptr::addr_of_mut!(place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).1);
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld5 = _140;
_68 = Adt58::Variant2 { fld0: Field::<([bool; 5], usize, [u8; 8])>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 0),fld1: _41.0,fld2: Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 1).0,fld3: Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3),fld4: Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2),fld5: _103,fld6: (*_80) };
_226.0 = !_116.0;
(*_176).1 = !_78.1;
_116 = (Field::<i32>(Variant(_68, 2), 5), _181, _117, _172.2, _49);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0.0 = _169 as i64;
_193 = (_155.0, (*_65), _106.1);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)).0.0 = _138.0.0;
_226.1 = !_52;
_144 = core::ptr::addr_of_mut!(_135);
Goto(bb122)
}
bb122 = {
_3 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3).0.0 - _53.0.0;
_148 = _158 - _180.4;
_188 = !_37;
_224 = Field::<u128>(Variant(_69, 3), 1) as f64;
_109.0.0 = !_10;
place!(Field::<[bool; 4]>(Variant(_139, 2), 0)) = [_146,_171.2,_193.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2];
_112.2 = !Field::<i16>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 4);
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).3 = !Field::<Adt50>(Variant(_110, 2), 2).fld1.0;
_238 = _200 + _22;
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld0 = !_162;
_156 = _21;
_235.0 = -Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3).0.0;
(*_176).0 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 2).0;
_210 = _105 * (*_176).3;
_166 = _62.fld1.3 as usize;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2)).0 = _2 as u8;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 1)).1.0 = [_20,_116.1,_36,_36,_106.1];
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_68, 2), 0)) = (Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).0, Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).0, Field::<([bool; 5], usize, [u8; 8])>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 0).2);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0.0 = !_79;
SetDiscriminant(_139, 2);
_62.fld0 = core::ptr::addr_of!(place!(Field::<*mut *mut [usize; 3]>(Variant(_98, 2), 2)));
_130 = -_21;
_134 = _14;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 5)).0.0 = -_9;
_180.3 = !_172.2;
_204 = !_181;
place!(Field::<[u8; 8]>(Variant(_110, 2), 4)) = [_162,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).0,_162,(*_176).0,_162,_195.0.0,_195.0.0,Field::<Adt50>(Variant(_110, 2), 2).fld0];
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 2), 1)).0 = !_195.0.0;
Goto(bb123)
}
bb123 = {
_201 = _126.1 ^ _41.1;
_138.1 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 5).1;
_138.0.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3).0.0 >> _93;
place!(Field::<i64>(Variant(_28, 0), 1)) = _10;
_112.3 = !_72.fld1.3;
_56.2 = _206 > _14;
_40 = [_141,_137,_137,_87];
place!(Field::<([bool; 5],)>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 1)).0 = _109.0.1;
_168 = _61 as isize;
_115.0 = _118.0;
_228.2 = [(*_176).0,(*_176).0,_162,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 2), 1).0,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4).0,(*_176).0,_149,_149];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0.1 = [_204,_163,_52,_226.1,_193.2];
_72.fld3 = -_79;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)) = _115;
place!(Field::<[bool; 4]>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 1)) = Field::<[bool; 4]>(Variant(_51, 2), 0);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 2), 1)).3 = _25 as i16;
_115.1.0 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_68, 2), 3).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2,_163,_56.2];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_27, 1), 5)).0.1 = [_171.2,_226.1,_52,_146,_163];
_230 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2).3 ^ _6;
_92.0 = _87 as u8;
_96.2 = core::ptr::addr_of_mut!(place!(Field::<*const i128>(Variant(_68, 2), 6)));
Goto(bb124)
}
bb124 = {
_30 = Adt57::Variant1 { fld0: _126,fld1: Field::<[bool; 4]>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 1),fld2: Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_27, 1), 2),fld3: _179,fld4: (*_176).2,fld5: _109 };
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 2)) = (_195.0.0, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4).1, _160.3, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4).3);
_226.4 = _33;
Goto(bb125)
}
bb125 = {
_216.1 = [Field::<(usize, char, u16, usize)>(Variant(_51, 2), 2).3,_172.3,_72.fld1.1];
_246 = Field::<*const [i64; 5]>(Variant(_120, 0), 0);
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_51, 2), 3)) = (_138.0, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4).1, _80);
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).2 = _82 ^ _172.2;
_106.1 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 2), 1).0 > Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 2).0;
place!(Field::<bool>(Variant(_69, 3), 0)) = _226.1;
(*_65) = _165;
place!(Field::<[i8; 8]>(Variant(place!(Field::<Adt53>(Variant(_98, 2), 0)), 2), 1)) = Field::<[i8; 8]>(Variant(_69, 3), 3);
SetDiscriminant(_30, 1);
(*_95) = [_210,(*_176).3,_84,(*_176).3];
_41.0 = [_106.1,_29.2,_146,_106.1,_163];
_125.1.0 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_27, 1), 0).0;
_114 = _22 * _25;
_38 = [_141,_137,_87,_66];
SetDiscriminant(_27, 2);
_252.fld2 = Field::<*const [i64; 5]>(Variant(_120, 0), 0);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 5)).0.0 = _96.0.0;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).0.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 5).0.0 * _81.0.0;
Goto(bb126)
}
bb126 = {
_93 = !_174;
_51 = Adt54::Variant1 { fld0: _71,fld1: _150,fld2: _123,fld3: (*_43),fld4: _85,fld5: _180.0,fld6: _159 };
_124.2 = !Field::<bool>(Variant(_69, 3), 0);
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld2 = core::ptr::addr_of!(_63);
_153 = Adt55::Variant3 { fld0: (*_43) };
_32 = -_200;
_62.fld1.2 = _15.3 >> _195.0.0;
_42 = _140;
_173 = _24;
place!(Field::<Adt50>(Variant(_27, 2), 2)).fld1.2 = _82 << _195.0.3;
_210 = _226.4 as u32;
_144 = core::ptr::addr_of_mut!(place!(Field::<Adt50>(Variant(_110, 2), 2)).fld1.1);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2)).1 = core::ptr::addr_of!(_195.0);
_46 = Adt55::Variant1 { fld0: Move(Field::<Adt53>(Variant(_98, 2), 0)),fld1: _118.0.1,fld2: (*_95),fld3: Field::<*const i8>(Variant(_28, 0), 5),fld4: _39,fld5: _137 };
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)).0.0 = !_70.0;
Goto(bb127)
}
bb127 = {
_244 = _210;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2)).2 = !_112.1;
_245.0 = !Field::<(i64, [bool; 5])>(Variant(_68, 2), 2).0;
_221 = !_159;
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld4 = [_141,_87,Field::<u64>(Variant(_46, 1), 5),_137];
_15.2 = Field::<([bool; 5], usize, [u8; 8])>(Variant(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2), 1), 0).1;
_248.4 = _188 - _148;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt57>(Variant(place!(Field::<Adt60>(Variant(_69, 3), 2)), 0), 2)), 1), 5)).0.1 = [_155.2,_52,_36,_171.2,_116.1];
place!(Field::<Adt53>(Variant(_46, 1), 0)) = Move(_55);
_252.fld1.2 = _106.0 as u16;
place!(Field::<[bool; 5]>(Variant(_68, 2), 1)) = [_193.2,Field::<bool>(Variant(_69, 3), 0),_181,_226.1,_106.1];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_30, 1), 5)).0 = (_115.0.0, _18);
_102 = -_97;
_114 = _32 * _182;
place!(Field::<u64>(Variant(_46, 1), 5)) = _137 - _141;
place!(Field::<(i64, [bool; 5])>(Variant(_68, 2), 2)) = _128;
_61 = _169;
_5 = _214.2;
_207 = _140;
_185 = _24;
(*_95) = [(*_176).3,_210,_62.fld1.3,_195.0.3];
_199 = _182;
place!(Field::<Adt53>(Variant(_98, 2), 0)) = Adt53::Variant2 { fld0: _95,fld1: Field::<[i8; 8]>(Variant(Field::<Adt53>(Variant(_46, 1), 0), 2), 1) };
_88 = !_160.0;
SetDiscriminant(_120, 1);
_124.1 = Field::<([i8; 8], [usize; 3], bool)>(Variant(_68, 2), 3).1;
_218 = -_72.fld1.2;
_80 = core::ptr::addr_of_mut!((*_80));
Goto(bb128)
}
bb128 = {
place!(Field::<*const i128>(Variant(_68, 2), 6)) = core::ptr::addr_of!((*_45));
_258.0.1 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_30, 1), 5).0.1;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)) = (_125.0, _81.1);
place!(Field::<i32>(Variant(_27, 2), 5)) = _226.0;
_27 = Adt57::Variant0 { fld0: _56.1,fld1: _160.1,fld2: _154,fld3: _155.0,fld4: Move(_51) };
(*_176).1 = _210 as usize;
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)) = (Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 1).0, _53.1);
_250 = [_61,_61,_61,_61,_61,_61,_61,_169];
_252.fld0 = _66 as u8;
_252.fld1.2 = _172.2 ^ _160.2;
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld1.1 = _135;
_54 = _180.4;
place!(Field::<i64>(Variant(_28, 0), 1)) = !_109.0.0;
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld3 = -_61;
(*_176) = (_195.0.0, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2).2, _4, _112.3);
_112.1 = _89 as usize;
place!(Field::<[bool; 5]>(Variant(_46, 1), 1)) = [Field::<bool>(Variant(_69, 3), 0),_106.1,_56.2,_155.2,_155.2];
_261.2 = (*_176).2 == _6;
_72 = Move(_62);
_29.1 = [_126.1,_160.3,Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4).2];
_211 = _25 as u64;
_256 = _9 as i32;
_98 = Adt63::Variant0 { fld0: _199,fld1: (*_111),fld2: _226.0,fld3: Field::<Adt50>(Variant(_110, 2), 2).fld2,fld4: Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4) };
_125.0 = (_2, Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3).1.0);
_17 = _84;
Goto(bb129)
}
bb129 = {
place!(Field::<Adt50>(Variant(_110, 2), 2)).fld1 = (_172.3, _164, _252.fld1.2, _201);
_254 = _169;
_19 = _182 + _114;
_110 = Move(Field::<Adt57>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 2));
_62.fld1.2 = _26 | Field::<i16>(Variant(_110, 1), 4);
_214.3 = _14 as u32;
_196 = _118.0.0 as f32;
_184 = _254 as i64;
_248 = _106;
_164 = _127;
_247 = _221 as isize;
SetDiscriminant(Field::<Adt53>(Variant(_46, 1), 0), 1);
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_28, 0), 2)).1 = _248.1 as usize;
_65 = core::ptr::addr_of_mut!((*_39));
_263.1 = Field::<u64>(Variant(_46, 1), 5) as usize;
_154 = _116.4;
_56.0 = [_61,_254,_169,_254,_254,_254,_61,_169];
_127 = _160.1;
SetDiscriminant(_27, 2);
place!(Field::<[i128; 1]>(Variant(place!(Field::<Adt53>(Variant(_46, 1), 0)), 1), 0)) = _150;
_216.1 = (*_65);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_30, 1), 5)).1 = (_16.1.0,);
_259 = _180.3 - _180.3;
_126.0 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_68, 2), 3).2,_20,Field::<bool>(Variant(_69, 3), 0),Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2,Field::<bool>(Variant(_69, 3), 0)];
_226.1 = !_248.1;
_72.fld1 = (Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 0), 4).0, _41.1, _218, _214.3);
place!(Field::<[i128; 1]>(Variant(place!(Field::<Adt53>(Variant(_46, 1), 0)), 1), 0)) = [_174];
_92.2 = !_263.1;
Goto(bb130)
}
bb130 = {
_219 = Field::<i16>(Variant(_110, 1), 4) << Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_98, 0), 4).2;
_244 = _72.fld1.3;
_77 = Field::<*mut ([bool; 5],)>(Variant(_153, 3), 0);
_252.fld1.0 = Field::<([bool; 5], usize, [u8; 8])>(Variant(_28, 0), 2).1 * _88;
_160.0 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2).2 << _151;
Goto(bb131)
}
bb131 = {
_189 = core::ptr::addr_of!(_179);
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3)).0 = _57;
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0)).1 = _192 as usize;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_139, 2), 3)).1 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2).1;
_43 = core::ptr::addr_of!((*_129));
_195.0 = _72.fld1;
_26 = -_219;
_12 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_110, 1), 5).0.0 - _1;
_240.0 = _72.fld1.3 as i32;
_70.0 = -_57.0;
(*_129) = core::ptr::addr_of_mut!(_109.1);
_89 = _106.2 as i32;
_116.2 = -_134;
_155.2 = _72.fld1.3 == _105;
_105 = _226.4 as u32;
(*_77).0 = [_261.2,_36,_181,_146,_106.1];
place!(Field::<([bool; 5], usize, [u8; 8])>(Variant(_28, 0), 2)) = _126;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2)).0 = _221 as u8;
_237.3 = _210 * _84;
_217 = Adt59::Variant1 { fld0: (*_246) };
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)) = (_252.fld1.0, _172.1, _116.3, Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2).2);
Goto(bb132)
}
bb132 = {
place!(Field::<*mut ([bool; 5],)>(Variant(_120, 1), 0)) = core::ptr::addr_of_mut!(place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(place!(Field::<Adt63>(Variant(_28, 0), 0)), 1), 2)).1);
_32 = _141 as f32;
_231 = Adt59::Variant0 { fld0: _138.1,fld1: _96,fld2: _180.4,fld3: _95,fld4: _150 };
_263.1 = _15.2;
place!(Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2)).3 = _160.0 + _160.0;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2)) = (_195.0.0, _15.1, _88, _230);
_2 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 2).0.0;
_248.1 = !_261.2;
Goto(bb133)
}
bb133 = {
_214.2 = Field::<i16>(Variant(_110, 1), 4) | _26;
_237.0 = _114 as u8;
place!(Field::<*const [i64; 5]>(Variant(_98, 0), 3)) = core::ptr::addr_of!((*_246));
place!(Field::<[bool; 4]>(Variant(_27, 2), 6)) = [_20,Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2,_163,_29.2];
_225 = [_210,_105,_195.0.3,_84];
_233 = Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_110, 1), 2).0 as u16;
_243.3 = !_180.3;
_205 = Adt49::Variant1 { fld0: Field::<*const i8>(Variant(_46, 1), 3),fld1: _47,fld2: _174 };
_235 = (_81.0.0, _64.0.1);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_68, 2), 4)).1 = core::ptr::addr_of!(_214);
Goto(bb134)
}
bb134 = {
_214.1 = _92.2;
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_30, 1), 2)) = (_92.0, _15.1, _201, _112.2);
_170 = _62.fld1.2;
_264 = Move(_110);
_64.0.0 = Field::<(usize, char, u16, usize)>(Variant(_139, 2), 2).1 as i64;
_31 = _36 as i32;
Goto(bb135)
}
bb135 = {
place!(Field::<[u64; 4]>(Variant(_139, 2), 1)) = _40;
_266 = -Field::<i32>(Variant(_98, 0), 2);
_51 = Adt54::Variant3 { fld0: _58,fld1: Move(_72) };
_135 = _133;
_267 = Field::<([i8; 8], [usize; 3], bool)>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 3).2;
_124.2 = _155.2;
_270.0 = [Field::<([i8; 8], [usize; 3], bool)>(Variant(_68, 2), 3).2,Field::<bool>(Variant(_69, 3), 0),_20,_226.1,Field::<bool>(Variant(_69, 3), 0)];
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).0.1 = [_181,_106.1,_193.2,_124.2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_68, 2), 3).2];
_54 = _146 as isize;
_70.0 = _233 as i64;
_125.0.0 = _24 as i64;
_172.3 = !Field::<([bool; 5], usize, [u8; 8])>(Variant(_30, 1), 0).1;
_252.fld5 = [_112.3,_244,_17,_17];
_150 = [_93];
Goto(bb136)
}
bb136 = {
RET = Adt61::Variant1 { fld0: _3,fld1: Field::<Adt52>(Variant(_51, 3), 1).fld0,fld2: _207 };
_231 = Adt59::Variant1 { fld0: Field::<[i64; 5]>(Variant(_217, 1), 0) };
_71 = [_211,Field::<u64>(Variant(_46, 1), 5),_211,_87];
_280 = core::ptr::addr_of_mut!(_133);
_252.fld6 = core::ptr::addr_of!(_62.fld1);
_62.fld1 = (Field::<Adt52>(Variant(_51, 3), 1).fld1.0, _172.3, _195.0.2, _237.3);
place!(Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(_28, 0), 3)).0.0 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt60>(Variant(_69, 3), 2), 0), 1).0.0 >> Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_264, 1), 2).3;
place!(Field::<*const i8>(Variant(place!(Field::<Adt53>(Variant(_46, 1), 0)), 1), 1)) = Field::<*const i8>(Variant(_205, 1), 0);
place!(Field::<*const *mut *mut [usize; 3]>(Variant(RET, 1), 1)) = Field::<Adt52>(Variant(_51, 3), 1).fld0;
_258.1 = core::ptr::addr_of!(_72.fld1);
place!(Field::<(u8, *const (u8, usize, i16, u32), usize, i16)>(Variant(_264, 1), 2)).2 = Field::<((i64, [bool; 5]), ([bool; 5],))>(Variant(Field::<Adt63>(Variant(_28, 0), 0), 1), 2).0.0 as usize;
SetDiscriminant(_98, 0);
(*_129) = Field::<*mut ([bool; 5],)>(Variant(_120, 1), 0);
Goto(bb137)
}
bb137 = {
Call(_288 = dump_var(8_usize, 170_usize, Move(_170), 7_usize, Move(_7), 83_usize, Move(_83), 204_usize, Move(_204)), ReturnTo(bb138), UnwindUnreachable())
}
bb138 = {
Call(_288 = dump_var(8_usize, 187_usize, Move(_187), 5_usize, Move(_5), 109_usize, Move(_109), 158_usize, Move(_158)), ReturnTo(bb139), UnwindUnreachable())
}
bb139 = {
Call(_288 = dump_var(8_usize, 8_usize, Move(_8), 163_usize, Move(_163), 115_usize, Move(_115), 36_usize, Move(_36)), ReturnTo(bb140), UnwindUnreachable())
}
bb140 = {
Call(_288 = dump_var(8_usize, 4_usize, Move(_4), 175_usize, Move(_175), 2_usize, Move(_2), 211_usize, Move(_211)), ReturnTo(bb141), UnwindUnreachable())
}
bb141 = {
Call(_288 = dump_var(8_usize, 203_usize, Move(_203), 172_usize, Move(_172), 107_usize, Move(_107), 88_usize, Move(_88)), ReturnTo(bb142), UnwindUnreachable())
}
bb142 = {
Call(_288 = dump_var(8_usize, 250_usize, Move(_250), 254_usize, Move(_254), 60_usize, Move(_60), 49_usize, Move(_49)), ReturnTo(bb143), UnwindUnreachable())
}
bb143 = {
Call(_288 = dump_var(8_usize, 174_usize, Move(_174), 143_usize, Move(_143), 247_usize, Move(_247), 35_usize, Move(_35)), ReturnTo(bb144), UnwindUnreachable())
}
bb144 = {
Call(_288 = dump_var(8_usize, 57_usize, Move(_57), 130_usize, Move(_130), 100_usize, Move(_100), 256_usize, Move(_256)), ReturnTo(bb145), UnwindUnreachable())
}
bb145 = {
Call(_288 = dump_var(8_usize, 108_usize, Move(_108), 58_usize, Move(_58), 156_usize, Move(_156), 218_usize, Move(_218)), ReturnTo(bb146), UnwindUnreachable())
}
bb146 = {
Call(_288 = dump_var(8_usize, 230_usize, Move(_230), 20_usize, Move(_20), 233_usize, Move(_233), 13_usize, Move(_13)), ReturnTo(bb147), UnwindUnreachable())
}
bb147 = {
Call(_288 = dump_var(8_usize, 31_usize, Move(_31), 78_usize, Move(_78), 124_usize, Move(_124), 147_usize, Move(_147)), ReturnTo(bb148), UnwindUnreachable())
}
bb148 = {
Call(_288 = dump_var(8_usize, 137_usize, Move(_137), 235_usize, Move(_235), 162_usize, Move(_162), 52_usize, Move(_52)), ReturnTo(bb149), UnwindUnreachable())
}
bb149 = {
Call(_288 = dump_var(8_usize, 171_usize, Move(_171), 164_usize, Move(_164), 148_usize, Move(_148), 127_usize, Move(_127)), ReturnTo(bb150), UnwindUnreachable())
}
bb150 = {
Call(_288 = dump_var(8_usize, 135_usize, Move(_135), 113_usize, Move(_113), 56_usize, Move(_56), 47_usize, Move(_47)), ReturnTo(bb151), UnwindUnreachable())
}
bb151 = {
Call(_288 = dump_var(8_usize, 184_usize, Move(_184), 66_usize, Move(_66), 225_usize, Move(_225), 63_usize, Move(_63)), ReturnTo(bb152), UnwindUnreachable())
}
bb152 = {
Call(_288 = dump_var(8_usize, 169_usize, Move(_169), 188_usize, Move(_188), 38_usize, Move(_38), 21_usize, Move(_21)), ReturnTo(bb153), UnwindUnreachable())
}
bb153 = {
Call(_288 = dump_var(8_usize, 133_usize, Move(_133), 185_usize, Move(_185), 141_usize, Move(_141), 154_usize, Move(_154)), ReturnTo(bb154), UnwindUnreachable())
}
bb154 = {
Call(_288 = dump_var(8_usize, 128_usize, Move(_128), 195_usize, Move(_195), 59_usize, Move(_59), 17_usize, Move(_17)), ReturnTo(bb155), UnwindUnreachable())
}
bb155 = {
Call(_288 = dump_var(8_usize, 34_usize, Move(_34), 183_usize, Move(_183), 289_usize, _289, 289_usize, _289), ReturnTo(bb156), UnwindUnreachable())
}
bb156 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: i64,mut _2: i16,mut _3: i64) -> ([bool; 5],) {
mir! {
type RET = ([bool; 5],);
let _4: [u32; 4];
let _5: f32;
let _6: isize;
let _7: isize;
let _8: [u8; 8];
let _9: isize;
let _10: *mut char;
let _11: i128;
let _12: [u64; 4];
let _13: ([bool; 5], usize, [u8; 8]);
let _14: isize;
let _15: ([i8; 8], [usize; 3], bool);
let _16: (u8, usize, i16, u32);
let _17: u128;
let _18: u64;
let _19: char;
let _20: [i64; 5];
let _21: *mut *const i128;
let _22: Adt52;
let _23: (usize, char, u16, usize);
let _24: f64;
let _25: ([bool; 5],);
let _26: Adt61;
let _27: u32;
let _28: [u64; 4];
let _29: isize;
let _30: Adt63;
let _31: ([bool; 5], usize, [u8; 8]);
let _32: ((u8, usize, i16, u32),);
let _33: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _34: i16;
let _35: f64;
let _36: usize;
let _37: u32;
let _38: i64;
let _39: (i64, [bool; 5]);
let _40: Adt59;
let _41: (usize, char, u16, usize);
let _42: isize;
let _43: f64;
let _44: ([bool; 5], usize, [u8; 8]);
let _45: Adt61;
let _46: [bool; 5];
let _47: [usize; 3];
let _48: *const *mut ([bool; 5],);
let _49: f64;
let _50: *const i128;
let _51: char;
let _52: Adt61;
let _53: ();
let _54: ();
{
RET.0 = [false,false,true,false,true];
RET.0 = [true,true,false,false,true];
Call(RET.0 = fn10(_1, _2, _1, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = 39030742148202685070867623001862207374_i128 as f32;
_4 = [1176157197_u32,2654532541_u32,2244100827_u32,2723411398_u32];
RET.0 = [true,true,false,true,false];
_6 = 9223372036854775807_isize;
RET.0 = [false,false,false,true,true];
_3 = _1;
_1 = _3 * _3;
_5 = 62_u8 as f32;
RET.0 = [true,true,false,false,false];
match _6 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5 = 52_i8 as f32;
_3 = _1 | _1;
_7 = !_6;
_4 = [3506093709_u32,2451442705_u32,3092948868_u32,3078001342_u32];
_5 = _2 as f32;
_8 = [106_u8,75_u8,60_u8,158_u8,9_u8,241_u8,66_u8,128_u8];
_7 = _1 as isize;
_4 = [1270002776_u32,1729787167_u32,2714196311_u32,4185375868_u32];
_9 = _7;
_11 = (-1087859115_i32) as i128;
_12 = [2599901581021489319_u64,13666997145144102559_u64,17559304043076102199_u64,110729520693915690_u64];
_9 = -_7;
_1 = _2 as i64;
_6 = _7 * _7;
_6 = _7 << _1;
_2 = 32765_i16;
_9 = !_6;
match _2 {
0 => bb1,
1 => bb3,
32765 => bb6,
_ => bb5
}
}
bb5 = {
Return()
}
bb6 = {
RET.0 = [true,false,true,false,true];
RET.0 = [true,false,false,true,false];
_14 = _6;
_2 = (-18960_i16);
_15.1 = [5_usize,16021597507248641219_usize,2_usize];
_13.1 = !2_usize;
_13.0 = [false,false,false,false,true];
_13.1 = !5_usize;
_16.1 = _13.1;
_6 = !_9;
_16.2 = -_2;
_11 = !(-32603200064148557715623296456607280617_i128);
_17 = 212554667730352455601265113594605557727_u128 + 210205718068931621520261873559886685710_u128;
_16.1 = _13.1;
_13.2 = _8;
_9 = _6 + _6;
_16.2 = _2 - _2;
_15.2 = false;
_16.1 = _13.1 - _13.1;
_13 = (RET.0, _16.1, _8);
_8 = [90_u8,202_u8,255_u8,18_u8,118_u8,207_u8,203_u8,174_u8];
_4 = [2083894564_u32,215137326_u32,2608026090_u32,2015351933_u32];
_10 = core::ptr::addr_of_mut!(_19);
Call(_13.1 = fn13(_1, _14, _7, _14, _5, _5, _7, _3, _1, _3, _7, _14, _7), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_22.fld2 = core::ptr::addr_of_mut!((*_10));
_23.2 = _15.2 as u16;
_15.1 = [_13.1,_13.1,_16.1];
_2 = !_16.2;
_3 = -_1;
_22.fld3 = _3 & _3;
_22.fld1.2 = _11 as i16;
_22.fld1.0 = 170_u8 << _14;
_20 = [_22.fld3,_22.fld3,_22.fld3,_22.fld3,_22.fld3];
_7 = !_9;
(*_10) = '\u{ffe38}';
_16 = (_22.fld1.0, _13.1, _2, 2240578099_u32);
_20 = [_1,_1,_22.fld3,_22.fld3,_22.fld3];
_13 = (RET.0, _16.1, _8);
_25 = (RET.0,);
_25.0 = _13.0;
_19 = '\u{d0202}';
_23.3 = !_13.1;
_11 = -23914917934027274344084735099872000266_i128;
_6 = _14 + _7;
_3 = _22.fld3;
match _16.3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
2240578099 => bb9,
_ => bb8
}
}
bb8 = {
_5 = 39030742148202685070867623001862207374_i128 as f32;
_4 = [1176157197_u32,2654532541_u32,2244100827_u32,2723411398_u32];
RET.0 = [true,true,false,true,false];
_6 = 9223372036854775807_isize;
RET.0 = [false,false,false,true,true];
_3 = _1;
_1 = _3 * _3;
_5 = 62_u8 as f32;
RET.0 = [true,true,false,false,false];
match _6 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb9 = {
_18 = 5922305603846017916_u64;
_5 = _14 as f32;
_16.1 = _2 as usize;
_16.1 = (-48_i8) as usize;
_23.1 = _19;
RET = (_13.0,);
_25 = RET;
_22.fld1.3 = _16.3;
_25.0 = RET.0;
_19 = _23.1;
_6 = !_9;
_19 = _23.1;
_22.fld1.1 = _11 as usize;
_22.fld1.1 = _23.3 << _22.fld1.3;
_5 = _23.2 as f32;
_27 = _22.fld1.3 / _16.3;
_16.1 = _22.fld1.1;
_16.0 = !_22.fld1.0;
_23.3 = !_16.1;
_9 = (-73_i8) as isize;
(*_10) = _23.1;
_31 = (RET.0, _16.1, _8);
Goto(bb10)
}
bb10 = {
_18 = !15831593006185180685_u64;
_22.fld1.1 = !_16.1;
_1 = -_3;
_32.0 = _16;
Goto(bb11)
}
bb11 = {
_31 = _13;
_19 = _23.1;
_15.2 = !false;
_15.0 = [(-114_i8),77_i8,(-92_i8),(-14_i8),(-48_i8),(-80_i8),(-38_i8),22_i8];
_23.3 = !_22.fld1.1;
_23.2 = _18 as u16;
_13.1 = _23.3;
(*_10) = _23.1;
_31.1 = _22.fld1.1;
_32.0.1 = _1 as usize;
RET = (_31.0,);
_8 = _13.2;
_23.0 = (-37_i8) as usize;
_34 = _32.0.2 ^ _32.0.2;
_5 = _34 as f32;
_23.1 = (*_10);
_11 = _34 as i128;
_1 = _22.fld1.2 as i64;
_33.0.1 = [_15.2,_15.2,_15.2,_15.2,_15.2];
_2 = _34;
Goto(bb12)
}
bb12 = {
_22.fld3 = -_3;
_23.0 = _18 as usize;
_13.2 = _31.2;
_36 = !_31.1;
RET = (_25.0,);
_6 = _7;
_22.fld1.2 = _32.0.2;
_20 = [_3,_3,_3,_3,_22.fld3];
_32.0.3 = _16.3 * _16.3;
_22.fld1.0 = _16.0 & _32.0.0;
_16.3 = _27;
_22.fld1.1 = _13.1;
_2 = _16.0 as i16;
_15.2 = false;
_10 = core::ptr::addr_of_mut!((*_10));
_13 = (_25.0, _31.1, _8);
_41.1 = _19;
_40 = Adt59::Variant1 { fld0: _20 };
_23.3 = _32.0.1 << _36;
RET.0 = _31.0;
_39 = (_22.fld3, _31.0);
Call(_22 = fn14(Move(_40), _14, _13, _36), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_6 = _14 >> _13.1;
_28 = [_18,_18,_18,_18];
_29 = _14 << _27;
_4 = [_16.3,_27,_32.0.3,_32.0.3];
_16.0 = _18 as u8;
_22.fld3 = _39.0;
_22.fld1.2 = _2 & _2;
_22.fld3 = _3;
(*_10) = _41.1;
RET = (_25.0,);
_15.0 = [(-100_i8),(-59_i8),92_i8,70_i8,(-126_i8),108_i8,69_i8,(-53_i8)];
_38 = -_3;
Goto(bb14)
}
bb14 = {
_22.fld1.0 = _32.0.0;
_31.2 = [_32.0.0,_22.fld1.0,_22.fld1.0,_22.fld1.0,_32.0.0,_32.0.0,_32.0.0,_22.fld1.0];
_44.1 = (*_10) as usize;
_24 = 843684948_i32 as f64;
_41.2 = 92_i8 as u16;
_21 = core::ptr::addr_of_mut!(_50);
_33.0.0 = _22.fld1.0 as i64;
_13.2 = [_22.fld1.0,_22.fld1.0,_22.fld1.0,_32.0.0,_22.fld1.0,_32.0.0,_22.fld1.0,_32.0.0];
_22.fld1.0 = _32.0.0;
_22.fld1.3 = _7 as u32;
_32.0.2 = _22.fld1.2 | _2;
_11 = (-119157570472881439560057369950483428925_i128);
_46 = [_15.2,_15.2,_15.2,_15.2,_15.2];
_44.0 = [_15.2,_15.2,_15.2,_15.2,_15.2];
_32 = (_16,);
_3 = _22.fld3 - _22.fld3;
_21 = core::ptr::addr_of_mut!((*_21));
(*_10) = _23.1;
_8 = _13.2;
_22.fld1.3 = _32.0.3;
Goto(bb15)
}
bb15 = {
Call(_53 = dump_var(9_usize, 23_usize, Move(_23), 15_usize, Move(_15), 17_usize, Move(_17), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_53 = dump_var(9_usize, 8_usize, Move(_8), 14_usize, Move(_14), 18_usize, Move(_18), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_53 = dump_var(9_usize, 9_usize, Move(_9), 2_usize, Move(_2), 31_usize, Move(_31), 34_usize, Move(_34)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_53 = dump_var(9_usize, 12_usize, Move(_12), 36_usize, Move(_36), 1_usize, Move(_1), 54_usize, _54), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: i64,mut _2: i16,mut _3: i64,mut _4: i64) -> [bool; 5] {
mir! {
type RET = [bool; 5];
let _5: u16;
let _6: [u8; 8];
let _7: [i64; 5];
let _8: i64;
let _9: [i128; 1];
let _10: u128;
let _11: usize;
let _12: isize;
let _13: [u8; 8];
let _14: f64;
let _15: f64;
let _16: usize;
let _17: f64;
let _18: usize;
let _19: Adt54;
let _20: *const (u8, usize, i16, u32);
let _21: (usize, char, u16, usize);
let _22: f64;
let _23: [i8; 8];
let _24: u32;
let _25: f64;
let _26: i32;
let _27: i128;
let _28: [u32; 4];
let _29: Adt65;
let _30: i64;
let _31: Adt59;
let _32: Adt60;
let _33: [bool; 5];
let _34: isize;
let _35: [i8; 8];
let _36: char;
let _37: u32;
let _38: isize;
let _39: (u8, usize, i16, u32);
let _40: f32;
let _41: (usize, char, u16, usize);
let _42: [usize; 3];
let _43: Adt52;
let _44: ();
let _45: ();
{
_1 = _3;
RET = [true,false,true,false,true];
_5 = 29687_u16 + 9110_u16;
Call(_5 = core::intrinsics::transmute(_2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _1 + _4;
_4 = _1;
_4 = _3 * _3;
RET = [true,false,false,false,false];
RET = [true,true,false,true,true];
_6 = [139_u8,188_u8,36_u8,134_u8,27_u8,120_u8,64_u8,118_u8];
_2 = (-9407_i16) - (-6561_i16);
RET = [false,false,true,true,false];
_4 = 892131283_i32 as i64;
_1 = _3;
_5 = !60942_u16;
_4 = _3;
_1 = !_4;
_7 = [_4,_4,_4,_3,_4];
_2 = (-9583_i16) >> _4;
_4 = 684990919_u32 as i64;
_1 = _3;
Goto(bb2)
}
bb2 = {
_2 = (-18084_i16);
_5 = 62084_u16 ^ 50661_u16;
_7 = [_1,_3,_3,_1,_1];
_7 = [_3,_1,_3,_3,_1];
_3 = !_1;
_1 = !_3;
_2 = (-4256_i16) & 20132_i16;
_2 = 2809678018_u32 as i16;
_6 = [31_u8,206_u8,168_u8,227_u8,46_u8,39_u8,195_u8,123_u8];
RET = [true,true,false,true,true];
_6 = [160_u8,24_u8,63_u8,249_u8,204_u8,16_u8,187_u8,184_u8];
_7 = [_3,_1,_1,_3,_1];
_3 = _5 as i64;
_7 = [_1,_1,_1,_1,_1];
_2 = -8102_i16;
RET = [true,false,true,false,false];
_8 = 12925989842481648960_usize as i64;
_4 = _1;
_6 = [233_u8,161_u8,149_u8,4_u8,105_u8,73_u8,114_u8,108_u8];
RET = [true,false,false,false,false];
RET = [true,false,false,false,false];
Call(_5 = core::intrinsics::transmute(_2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_10 = 332154275511492570066997970711315745282_u128;
_4 = _10 as i64;
_10 = !158345573923541764901302036707392774728_u128;
_4 = -_1;
_9 = [(-128358388038531265282156089309903932405_i128)];
_2 = 173_u8 as i16;
_9 = [98673305748970368647687333995862233113_i128];
_8 = -_4;
_11 = 6363025776792968100_usize << _4;
Call(_8 = core::intrinsics::transmute(_11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = [true,false,true,true,false];
_7 = [_8,_4,_8,_1,_4];
RET = [true,true,true,false,false];
_1 = _4 & _4;
RET = [false,true,false,false,true];
_2 = 26215_i16 - (-11729_i16);
_9 = [(-6781524743526733527225478877829173208_i128)];
_10 = true as u128;
_6 = [155_u8,240_u8,166_u8,71_u8,43_u8,41_u8,158_u8,235_u8];
_1 = _8;
_7 = [_4,_8,_8,_8,_1];
_1 = _2 as i64;
_4 = !_8;
RET = [true,false,true,false,true];
_13 = [210_u8,94_u8,120_u8,163_u8,114_u8,31_u8,2_u8,200_u8];
_14 = 3948765416_u32 as f64;
_15 = -_14;
_13 = _6;
_8 = _4 << _11;
_7 = [_4,_8,_4,_4,_4];
Call(_3 = core::intrinsics::transmute(_8), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
RET = [false,false,false,false,false];
_8 = _3 & _4;
_13 = [218_u8,202_u8,129_u8,30_u8,217_u8,249_u8,170_u8,0_u8];
RET = [false,false,true,true,true];
_16 = _15 as usize;
_17 = _14 - _14;
Goto(bb6)
}
bb6 = {
_15 = -_17;
_8 = _4 ^ _4;
_21.1 = '\u{b90e3}';
_4 = _8 | _8;
_5 = 45215_u16;
_13 = [26_u8,10_u8,29_u8,218_u8,8_u8,180_u8,98_u8,214_u8];
_15 = -_17;
_22 = _15 - _17;
_22 = -_17;
Call(_7 = fn11(_11, _11, _8, _4, _3, _3, _4, _11, _11), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_21 = (_11, '\u{d1e2c}', _5, _11);
_10 = _21.2 as u128;
_21.2 = _5;
_15 = _17 + _22;
_6 = [47_u8,76_u8,39_u8,88_u8,6_u8,35_u8,238_u8,81_u8];
_21.1 = '\u{beb6a}';
_23 = [(-23_i8),68_i8,(-11_i8),(-59_i8),(-58_i8),(-62_i8),(-128_i8),106_i8];
RET = [true,false,true,true,false];
_8 = _4;
_6 = _13;
_9 = [(-9398993488106157363396163430288753952_i128)];
_14 = _22 + _15;
_23 = [(-92_i8),23_i8,14_i8,126_i8,34_i8,60_i8,(-111_i8),39_i8];
_18 = _21.3 ^ _11;
_4 = _3 + _8;
_22 = -_15;
_13 = [202_u8,117_u8,15_u8,203_u8,36_u8,219_u8,111_u8,86_u8];
_5 = !_21.2;
_12 = 71_isize;
_21.3 = !_18;
_25 = _22;
_12 = !9223372036854775807_isize;
_12 = _18 as isize;
_18 = _11;
_26 = 178_u8 as i32;
match _21.2 {
0 => bb6,
1 => bb5,
2 => bb3,
45215 => bb8,
_ => bb4
}
}
bb8 = {
_22 = 3642191243_u32 as f64;
_12 = !9223372036854775807_isize;
_9 = [(-151255842784732656600319963401187437560_i128)];
_27 = 12295664765471797930_u64 as i128;
_3 = _8;
_8 = !_3;
_23 = [65_i8,80_i8,(-120_i8),(-39_i8),(-114_i8),(-51_i8),36_i8,77_i8];
_7 = [_3,_4,_8,_3,_4];
_16 = !_21.3;
_21.0 = _27 as usize;
RET = [false,true,false,true,false];
Call(_10 = core::intrinsics::bswap(202386088801511815403748469001049024774_u128), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_24 = 4264521317_u32 ^ 3636068774_u32;
_16 = !_21.3;
_9 = [_27];
_14 = -_15;
_13 = _6;
_21 = (_16, '\u{b5624}', _5, _18);
_21.2 = _5 + _5;
_4 = 10290268805376091233_u64 as i64;
Goto(bb10)
}
bb10 = {
_9 = [_27];
_1 = -_8;
_17 = _25 - _25;
_9 = [_27];
_21.0 = 38_u8 as usize;
_14 = _17 - _15;
_19 = Adt54::Variant0 { fld0: (-29_i8),fld1: _13 };
_1 = _8 - _3;
_14 = -_17;
_12 = (-9223372036854775808_isize);
place!(Field::<[u8; 8]>(Variant(_19, 0), 1)) = [104_u8,173_u8,120_u8,198_u8,62_u8,153_u8,213_u8,13_u8];
_17 = -_14;
place!(Field::<[u8; 8]>(Variant(_19, 0), 1)) = [92_u8,196_u8,38_u8,99_u8,234_u8,204_u8,179_u8,211_u8];
Call(_27 = fn12(_21.3, _21.1, _1, _16, _11, _1, _16, _3, _8, _21.1, _7, _18, _21.1, _21, _11, _8), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_21.2 = _21.1 as u16;
_24 = _2 as u32;
RET = [true,true,true,false,true];
_21.3 = !_18;
_16 = _11;
_23 = [(-75_i8),38_i8,(-46_i8),(-49_i8),127_i8,(-60_i8),(-80_i8),(-62_i8)];
RET = [false,true,false,true,false];
_34 = _12 | _12;
_13 = _6;
match _12 {
0 => bb9,
1 => bb7,
2 => bb3,
340282366920938463454151235394913435648 => bb12,
_ => bb8
}
}
bb12 = {
_35 = _23;
Goto(bb13)
}
bb13 = {
_30 = _3;
_22 = -_25;
_11 = _10 as usize;
_16 = _18 | _21.3;
_20 = core::ptr::addr_of!(_39);
_21.3 = _16 | _18;
_41.1 = _21.1;
_3 = _30 | _30;
_37 = _24;
_41.2 = !_21.2;
_25 = (-29_i8) as f64;
(*_20).2 = _2 ^ _2;
match _12 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
340282366920938463454151235394913435648 => bb20,
_ => bb19
}
}
bb14 = {
_15 = -_17;
_8 = _4 ^ _4;
_21.1 = '\u{b90e3}';
_4 = _8 | _8;
_5 = 45215_u16;
_13 = [26_u8,10_u8,29_u8,218_u8,8_u8,180_u8,98_u8,214_u8];
_15 = -_17;
_22 = _15 - _17;
_22 = -_17;
Call(_7 = fn11(_11, _11, _8, _4, _3, _3, _4, _11, _11), ReturnTo(bb7), UnwindUnreachable())
}
bb15 = {
_21.2 = _21.1 as u16;
_24 = _2 as u32;
RET = [true,true,true,false,true];
_21.3 = !_18;
_16 = _11;
_23 = [(-75_i8),38_i8,(-46_i8),(-49_i8),127_i8,(-60_i8),(-80_i8),(-62_i8)];
RET = [false,true,false,true,false];
_34 = _12 | _12;
_13 = _6;
match _12 {
0 => bb9,
1 => bb7,
2 => bb3,
340282366920938463454151235394913435648 => bb12,
_ => bb8
}
}
bb16 = {
_10 = 332154275511492570066997970711315745282_u128;
_4 = _10 as i64;
_10 = !158345573923541764901302036707392774728_u128;
_4 = -_1;
_9 = [(-128358388038531265282156089309903932405_i128)];
_2 = 173_u8 as i16;
_9 = [98673305748970368647687333995862233113_i128];
_8 = -_4;
_11 = 6363025776792968100_usize << _4;
Call(_8 = core::intrinsics::transmute(_11), ReturnTo(bb4), UnwindUnreachable())
}
bb17 = {
_24 = 4264521317_u32 ^ 3636068774_u32;
_16 = !_21.3;
_9 = [_27];
_14 = -_15;
_13 = _6;
_21 = (_16, '\u{b5624}', _5, _18);
_21.2 = _5 + _5;
_4 = 10290268805376091233_u64 as i64;
Goto(bb10)
}
bb18 = {
RET = [true,false,true,true,false];
_7 = [_8,_4,_8,_1,_4];
RET = [true,true,true,false,false];
_1 = _4 & _4;
RET = [false,true,false,false,true];
_2 = 26215_i16 - (-11729_i16);
_9 = [(-6781524743526733527225478877829173208_i128)];
_10 = true as u128;
_6 = [155_u8,240_u8,166_u8,71_u8,43_u8,41_u8,158_u8,235_u8];
_1 = _8;
_7 = [_4,_8,_8,_8,_1];
_1 = _2 as i64;
_4 = !_8;
RET = [true,false,true,false,true];
_13 = [210_u8,94_u8,120_u8,163_u8,114_u8,31_u8,2_u8,200_u8];
_14 = 3948765416_u32 as f64;
_15 = -_14;
_13 = _6;
_8 = _4 << _11;
_7 = [_4,_8,_4,_4,_4];
Call(_3 = core::intrinsics::transmute(_8), ReturnTo(bb5), UnwindUnreachable())
}
bb19 = {
_21 = (_11, '\u{d1e2c}', _5, _11);
_10 = _21.2 as u128;
_21.2 = _5;
_15 = _17 + _22;
_6 = [47_u8,76_u8,39_u8,88_u8,6_u8,35_u8,238_u8,81_u8];
_21.1 = '\u{beb6a}';
_23 = [(-23_i8),68_i8,(-11_i8),(-59_i8),(-58_i8),(-62_i8),(-128_i8),106_i8];
RET = [true,false,true,true,false];
_8 = _4;
_6 = _13;
_9 = [(-9398993488106157363396163430288753952_i128)];
_14 = _22 + _15;
_23 = [(-92_i8),23_i8,14_i8,126_i8,34_i8,60_i8,(-111_i8),39_i8];
_18 = _21.3 ^ _11;
_4 = _3 + _8;
_22 = -_15;
_13 = [202_u8,117_u8,15_u8,203_u8,36_u8,219_u8,111_u8,86_u8];
_5 = !_21.2;
_12 = 71_isize;
_21.3 = !_18;
_25 = _22;
_12 = !9223372036854775807_isize;
_12 = _18 as isize;
_18 = _11;
_26 = 178_u8 as i32;
match _21.2 {
0 => bb6,
1 => bb5,
2 => bb3,
45215 => bb8,
_ => bb4
}
}
bb20 = {
_40 = _1 as f32;
RET = [false,true,false,false,true];
_43.fld1.3 = !_24;
_41 = (_16, _21.1, _21.2, _16);
_20 = core::ptr::addr_of!(_43.fld1);
_41.1 = _21.1;
_38 = _12 >> _3;
_43.fld1 = (253_u8, _18, _39.2, _24);
_39 = (_43.fld1.0, _43.fld1.1, _43.fld1.2, (*_20).3);
_43.fld2 = core::ptr::addr_of_mut!(_36);
_21.1 = _41.1;
_23 = [(-56_i8),24_i8,36_i8,(-7_i8),97_i8,101_i8,123_i8,95_i8];
(*_20).3 = _39.3;
_15 = _17 * _17;
(*_20).1 = _40 as usize;
_4 = _41.1 as i64;
_43.fld1.0 = _4 as u8;
Goto(bb21)
}
bb21 = {
Call(_44 = dump_var(10_usize, 12_usize, Move(_12), 30_usize, Move(_30), 5_usize, Move(_5), 9_usize, Move(_9)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_44 = dump_var(10_usize, 16_usize, Move(_16), 26_usize, Move(_26), 21_usize, Move(_21), 41_usize, Move(_41)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_44 = dump_var(10_usize, 11_usize, Move(_11), 24_usize, Move(_24), 2_usize, Move(_2), 37_usize, Move(_37)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_44 = dump_var(10_usize, 10_usize, Move(_10), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: usize,mut _2: usize,mut _3: i64,mut _4: i64,mut _5: i64,mut _6: i64,mut _7: i64,mut _8: usize,mut _9: usize) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _10: [u8; 8];
let _11: f64;
let _12: isize;
let _13: bool;
let _14: ();
let _15: ();
{
RET = [_3,_3,_5,_3,_3];
RET = [_4,_5,_5,_6,_5];
_10 = [204_u8,158_u8,11_u8,124_u8,178_u8,185_u8,228_u8,230_u8];
_4 = '\u{391ef}' as i64;
_1 = _2;
RET = [_7,_6,_6,_7,_5];
_3 = _8 as i64;
_1 = (-43_i8) as usize;
_7 = 3_u8 as i64;
_1 = _2;
_9 = _6 as usize;
_3 = 25340_u16 as i64;
_8 = _1;
_6 = _5 + _5;
_2 = _1;
_1 = 13852477110828048288_u64 as usize;
_4 = -_5;
_12 = (-118_isize);
_9 = _2 & _8;
_8 = _2 - _9;
_6 = _5;
_4 = _6;
_8 = 10159982661877536846990027768188768366_u128 as usize;
_12 = 160_u8 as isize;
_7 = _5 - _5;
_13 = !false;
_11 = 273192391015611895963425716730345810413_u128 as f64;
RET = [_7,_5,_4,_4,_4];
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(11_usize, 3_usize, Move(_3), 12_usize, Move(_12), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_14 = dump_var(11_usize, 8_usize, Move(_8), 5_usize, Move(_5), 15_usize, _15, 15_usize, _15), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: usize,mut _2: char,mut _3: i64,mut _4: usize,mut _5: usize,mut _6: i64,mut _7: usize,mut _8: i64,mut _9: i64,mut _10: char,mut _11: [i64; 5],mut _12: usize,mut _13: char,mut _14: (usize, char, u16, usize),mut _15: usize,mut _16: i64) -> i128 {
mir! {
type RET = i128;
let _17: Adt64;
let _18: *mut [u32; 4];
let _19: bool;
let _20: *mut char;
let _21: (i32, bool, f64, u16, isize);
let _22: ();
let _23: ();
{
RET = (-70293861427813016924329729734914836335_i128);
_11 = [_16,_9,_16,_16,_16];
_1 = !_14.3;
_15 = _5 << _1;
_7 = _8 as usize;
_14.2 = 57189_u16;
RET = -70692713012925163666542618512428494475_i128;
_1 = _12;
_4 = 47_isize as usize;
_7 = _14.3;
_14.3 = !_1;
_14.3 = !_1;
_13 = _2;
_16 = !_6;
_14.2 = 58813_u16 & 30697_u16;
_11 = [_3,_9,_8,_6,_6];
_11 = [_8,_9,_6,_8,_3];
_17 = Adt64::Variant2 { fld0: _11 };
_5 = !_1;
RET = 216083866087590825907373216477221067747_u128 as i128;
_8 = _3;
Goto(bb1)
}
bb1 = {
_14.3 = _7;
_5 = _12;
_7 = _14.2 as usize;
RET = _2 as i128;
_14.3 = (-119_i8) as usize;
_20 = core::ptr::addr_of_mut!(_13);
_16 = (-58_i8) as i64;
_14.1 = (*_20);
_12 = _9 as usize;
_14.3 = _5 - _15;
_10 = (*_20);
_14.1 = _2;
place!(Field::<[i64; 5]>(Variant(_17, 2), 0)) = [_8,_3,_6,_6,_6];
_5 = !_1;
_14.0 = _5;
_7 = _15;
_7 = _15;
Goto(bb2)
}
bb2 = {
Call(_22 = dump_var(12_usize, 1_usize, Move(_1), 15_usize, Move(_15), 4_usize, Move(_4), 5_usize, Move(_5)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_22 = dump_var(12_usize, 14_usize, Move(_14), 2_usize, Move(_2), 10_usize, Move(_10), 11_usize, Move(_11)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i64,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: f32,mut _6: f32,mut _7: isize,mut _8: i64,mut _9: i64,mut _10: i64,mut _11: isize,mut _12: isize,mut _13: isize) -> usize {
mir! {
type RET = usize;
let _14: *const (u8, usize, i16, u32);
let _15: f64;
let _16: i128;
let _17: u64;
let _18: u32;
let _19: u64;
let _20: f32;
let _21: i128;
let _22: *const *mut *mut [usize; 3];
let _23: *const *mut ([bool; 5],);
let _24: f32;
let _25: Adt56;
let _26: bool;
let _27: ();
let _28: ();
{
_7 = _13;
_13 = _7;
_5 = _6;
_12 = '\u{1aa69}' as isize;
RET = 1647589737768753817_usize;
_13 = _4;
_2 = '\u{10eef4}' as isize;
_8 = _9;
_8 = '\u{2224e}' as i64;
RET = !1_usize;
_2 = !_4;
RET = (-22_i8) as usize;
_3 = _4;
_16 = 90516447726899930909570165827754151302_i128 & (-104340428639037040465336605916110905933_i128);
_3 = _4;
_13 = _8 as isize;
_8 = _1 & _9;
RET = 11990639037257608492_usize;
_16 = (-35939384961336351531535796828902986551_i128) >> _3;
_13 = -_3;
_10 = _9;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
11990639037257608492 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_3 = -_11;
_17 = 2968824199912473751_u64 >> _1;
_1 = 31345_i16 as i64;
_1 = -_9;
_20 = -_5;
_13 = !_11;
_13 = !_11;
_19 = _17 - _17;
_11 = _2;
_21 = _16 + _16;
_17 = _19;
_10 = -_9;
_6 = -_5;
_18 = 257504622_u32 - 4149906575_u32;
_5 = _20;
_15 = _19 as f64;
_11 = true as isize;
_16 = !_21;
match RET {
11990639037257608492 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_20 = _6;
_19 = !_17;
_7 = -_2;
_13 = _8 as isize;
_5 = -_20;
match RET {
0 => bb1,
1 => bb7,
2 => bb5,
3 => bb10,
4 => bb11,
5 => bb12,
11990639037257608492 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_24 = -_6;
_1 = -_9;
_7 = _18 as isize;
_2 = _13;
_4 = _13 + _3;
_5 = RET as f32;
_5 = _20 * _6;
RET = 4432540101539308235_usize * 6_usize;
_21 = _16;
_19 = _17 << _17;
_13 = _4;
_8 = _1 | _9;
_17 = !_19;
_1 = -_10;
_10 = _8;
_1 = _9 | _9;
_2 = _4 + _4;
_12 = !_3;
_18 = 2558774739_u32;
_5 = -_20;
_24 = _5;
_20 = _5 - _6;
Goto(bb15)
}
bb15 = {
Call(_27 = dump_var(13_usize, 8_usize, Move(_8), 18_usize, Move(_18), 3_usize, Move(_3), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_27 = dump_var(13_usize, 11_usize, Move(_11), 16_usize, Move(_16), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: Adt59,mut _2: isize,mut _3: ([bool; 5], usize, [u8; 8]),mut _4: usize) -> Adt52 {
mir! {
type RET = Adt52;
let _5: f32;
let _6: [i128; 1];
let _7: [usize; 3];
let _8: Adt52;
let _9: ([bool; 5],);
let _10: i16;
let _11: (i64, [bool; 5]);
let _12: bool;
let _13: [i8; 8];
let _14: u16;
let _15: ([i8; 8], [usize; 3], bool);
let _16: [i8; 8];
let _17: (u8, *const (u8, usize, i16, u32), usize, i16);
let _18: isize;
let _19: [u32; 4];
let _20: *mut *const i128;
let _21: u128;
let _22: (u8, usize, i16, u32);
let _23: isize;
let _24: *const i8;
let _25: [u64; 4];
let _26: u8;
let _27: (u8, usize, i16, u32);
let _28: char;
let _29: (usize, char, u16, usize);
let _30: [bool; 4];
let _31: i8;
let _32: Adt52;
let _33: *const (u8, usize, i16, u32);
let _34: *mut [usize; 3];
let _35: bool;
let _36: f64;
let _37: [usize; 3];
let _38: ();
let _39: ();
{
RET.fld1.3 = 180697422_u32;
RET.fld1.0 = 202_u8 & 109_u8;
RET.fld1.2 = 62996_u16 as i16;
RET.fld1.1 = (-1404374706738039035_i64) as usize;
RET.fld3 = (-3040074097324018019_i64) ^ (-9059825997552225371_i64);
RET.fld1.3 = 1107450656_u32 * 3422353407_u32;
RET.fld1.3 = 2102247964_u32 | 3762648219_u32;
_7 = [_3.1,_4,_3.1];
RET.fld3 = _2 as i64;
RET.fld1.2 = 47257555457141744760396591111338364738_u128 as i16;
_3.1 = _4;
_4 = _3.1 ^ _3.1;
RET.fld1.3 = !176824727_u32;
_6 = [167136600055749212286882109332378748823_i128];
RET.fld1.3 = 2719935092_u32;
_4 = !_3.1;
_7 = [_4,_4,_3.1];
match RET.fld1.3 {
0 => bb1,
1 => bb2,
2719935092 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET.fld3 = (-2335254513668738657_i64) << _2;
_8.fld1.0 = RET.fld1.0 >> RET.fld1.3;
_3.2 = [_8.fld1.0,RET.fld1.0,RET.fld1.0,_8.fld1.0,RET.fld1.0,RET.fld1.0,RET.fld1.0,RET.fld1.0];
SetDiscriminant(_1, 0);
RET.fld1 = (_8.fld1.0, _4, (-28527_i16), 108550678_u32);
place!(Field::<isize>(Variant(_1, 0), 2)) = 6338351352596139260_u64 as isize;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.1 = [true,true,false,false,false];
match RET.fld1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
340282366920938463463374607431768182929 => bb7,
_ => bb6
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET.fld1.3 = 2378245616_u32 | 2015823290_u32;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).1 = core::ptr::addr_of!(RET.fld1);
_8.fld1 = RET.fld1;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.1 = [false,false,true,false,true];
_3.0 = [false,true,false,false,true];
_8.fld3 = 1242781319_i32 as i64;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.0 = true as i64;
_2 = !Field::<isize>(Variant(_1, 0), 2);
_2 = Field::<isize>(Variant(_1, 0), 2) << _8.fld1.2;
RET.fld1.0 = !_8.fld1.0;
_8.fld1 = (RET.fld1.0, _3.1, RET.fld1.2, RET.fld1.3);
Call(RET.fld0 = fn15(RET.fld1.2, _8.fld1.2, RET.fld1.2, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _8.fld1, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _8.fld1.2, _2, _7, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET.fld1.1 = _4 + _8.fld1.1;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).1 = core::ptr::addr_of!(_8.fld1);
RET.fld3 = -_8.fld3;
RET.fld1.1 = _4 & _8.fld1.1;
_10 = RET.fld1.2;
_11.0 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).0.0;
_8.fld1.3 = RET.fld1.3;
_11.0 = !_8.fld3;
RET.fld1 = (_8.fld1.0, _4, _10, _8.fld1.3);
_11.1 = [false,true,false,true,true];
_16 = [37_i8,38_i8,33_i8,(-66_i8),(-11_i8),125_i8,(-3_i8),49_i8];
_12 = _8.fld1.2 <= _10;
place!(Field::<[i128; 1]>(Variant(_1, 0), 4)) = _6;
RET.fld3 = _8.fld3 << _2;
_5 = _8.fld1.1 as f32;
_11 = (RET.fld3, _3.0);
_3.2 = [_8.fld1.0,_8.fld1.0,RET.fld1.0,RET.fld1.0,RET.fld1.0,_8.fld1.0,RET.fld1.0,RET.fld1.0];
_17.1 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1;
RET.fld1.0 = !_8.fld1.0;
_17.1 = core::ptr::addr_of!(_8.fld1);
_16 = [21_i8,(-66_i8),(-45_i8),68_i8,(-118_i8),(-105_i8),(-56_i8),(-37_i8)];
_14 = _12 as u16;
_15.2 = _2 == _2;
match _8.fld1.2 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
340282366920938463463374607431768182929 => bb17,
_ => bb16
}
}
bb9 = {
RET.fld1.3 = 2378245616_u32 | 2015823290_u32;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).1 = core::ptr::addr_of!(RET.fld1);
_8.fld1 = RET.fld1;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.1 = [false,false,true,false,true];
_3.0 = [false,true,false,false,true];
_8.fld3 = 1242781319_i32 as i64;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.0 = true as i64;
_2 = !Field::<isize>(Variant(_1, 0), 2);
_2 = Field::<isize>(Variant(_1, 0), 2) << _8.fld1.2;
RET.fld1.0 = !_8.fld1.0;
_8.fld1 = (RET.fld1.0, _3.1, RET.fld1.2, RET.fld1.3);
Call(RET.fld0 = fn15(RET.fld1.2, _8.fld1.2, RET.fld1.2, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _8.fld1, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _8.fld1.2, _2, _7, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
RET.fld3 = (-2335254513668738657_i64) << _2;
_8.fld1.0 = RET.fld1.0 >> RET.fld1.3;
_3.2 = [_8.fld1.0,RET.fld1.0,RET.fld1.0,_8.fld1.0,RET.fld1.0,RET.fld1.0,RET.fld1.0,RET.fld1.0];
SetDiscriminant(_1, 0);
RET.fld1 = (_8.fld1.0, _4, (-28527_i16), 108550678_u32);
place!(Field::<isize>(Variant(_1, 0), 2)) = 6338351352596139260_u64 as isize;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.1 = [true,true,false,false,false];
match RET.fld1.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
340282366920938463463374607431768182929 => bb7,
_ => bb6
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_17.3 = RET.fld1.2;
_16 = [(-49_i8),100_i8,69_i8,63_i8,(-123_i8),16_i8,68_i8,59_i8];
_13 = [58_i8,16_i8,(-18_i8),(-102_i8),83_i8,(-54_i8),(-70_i8),112_i8];
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0.0 = _11.0 + _11.0;
match _8.fld1.2 {
0 => bb13,
1 => bb2,
2 => bb15,
3 => bb6,
340282366920938463463374607431768182929 => bb18,
_ => bb10
}
}
bb18 = {
_5 = 459556883_i32 as f32;
_5 = _17.3 as f32;
_18 = !_2;
place!(Field::<([bool; 5],)>(Variant(_1, 0), 0)).0 = [_12,_12,_15.2,_15.2,_12];
_8.fld1.1 = RET.fld1.1;
_17.3 = _8.fld1.2 & _8.fld1.2;
_15.2 = _12;
RET.fld1 = (_8.fld1.0, _8.fld1.1, _17.3, _8.fld1.3);
RET.fld1.1 = !_4;
_17.2 = _4;
_22.3 = RET.fld1.3;
_22.0 = _8.fld1.0;
_22.2 = _17.3;
_17.1 = core::ptr::addr_of!(_22);
_9.0 = Field::<([bool; 5],)>(Variant(_1, 0), 0).0;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0 = (_11.0, _9.0);
RET.fld1.0 = _8.fld1.0 << _11.0;
RET.fld1 = _8.fld1;
place!(Field::<[i128; 1]>(Variant(_1, 0), 4)) = [(-58505617340726108227195766871366759334_i128)];
_25 = [3688385542626102567_u64,12072923662438436216_u64,7545969971833176709_u64,2386013638978331709_u64];
_8.fld1.1 = !_3.1;
_8.fld3 = -Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).0.0;
Goto(bb19)
}
bb19 = {
_16 = _13;
_15.2 = _12;
_25 = [3474105877494045126_u64,11267797139756775072_u64,1002451781021375518_u64,519915427188335431_u64];
_23 = -_18;
_8.fld1.0 = !_22.0;
_22 = RET.fld1;
_22.3 = !_8.fld1.3;
_27.3 = _22.3 << _2;
_25 = [7568849927751855849_u64,4004557571342554904_u64,8539930600684842671_u64,4286851135135814417_u64];
_11 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).0;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).1 = core::ptr::addr_of!(_22);
_17 = (_8.fld1.0, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _8.fld1.1, RET.fld1.2);
_9 = Field::<([bool; 5],)>(Variant(_1, 0), 0);
_10 = -_17.3;
_15.0 = [22_i8,51_i8,(-10_i8),13_i8,11_i8,122_i8,8_i8,73_i8];
_17 = (_8.fld1.0, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1, _3.1, RET.fld1.2);
_28 = '\u{6e3fe}';
Goto(bb20)
}
bb20 = {
_22.0 = RET.fld1.0;
_15.0 = [(-16_i8),98_i8,(-34_i8),(-104_i8),108_i8,(-110_i8),(-30_i8),72_i8];
_27 = (_8.fld1.0, _22.1, _22.2, _22.3);
_15 = (_13, _7, _12);
_21 = 237723452136257993365040876788662755651_u128 ^ 100694845712861441098945638420453742214_u128;
place!(Field::<*mut [u32; 4]>(Variant(_1, 0), 3)) = core::ptr::addr_of_mut!(_19);
_12 = _3.1 > _4;
RET.fld1.0 = _17.0;
_26 = _22.0;
_15.0 = _16;
RET.fld1 = _27;
_17.3 = !_8.fld1.2;
_3.0 = _9.0;
_16 = [51_i8,74_i8,(-78_i8),21_i8,28_i8,16_i8,(-74_i8),29_i8];
place!(Field::<([bool; 5],)>(Variant(_1, 0), 0)) = (Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).0.1,);
_23 = _18 | _2;
_21 = 277440619617928218518886543761310322723_u128 * 22084103698035096146083670383377040182_u128;
_15.0 = _16;
_17.0 = _8.fld1.0 >> _27.1;
_19 = [_22.3,_8.fld1.3,_27.3,_22.3];
_7 = _15.1;
_30 = [_12,_12,_12,_12];
_11.1 = [_12,_15.2,_12,_15.2,_15.2];
Goto(bb21)
}
bb21 = {
_29.3 = !_22.1;
_8.fld1.0 = !_17.0;
_22.3 = !RET.fld1.3;
_11.0 = RET.fld3;
RET.fld1.2 = !_10;
_32.fld1 = RET.fld1;
_17.1 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).1;
match _22.2 {
0 => bb1,
1 => bb20,
2 => bb18,
3 => bb16,
4 => bb14,
340282366920938463463374607431768182929 => bb22,
_ => bb6
}
}
bb22 = {
_8.fld3 = _11.0 & RET.fld3;
_4 = _22.1 * RET.fld1.1;
_9.0 = [_12,_15.2,_15.2,_12,_15.2];
_21 = !337818819814180637040870583869977896370_u128;
_21 = 4587176834038201447771848043921060753_u128 << _22.1;
place!(Field::<[i128; 1]>(Variant(_1, 0), 4)) = [(-130723134628772264179566206913534679620_i128)];
_27.0 = !_8.fld1.0;
_32.fld3 = _14 as i64;
_8.fld1.0 = _27.0 >> _32.fld1.1;
_32.fld1.3 = _22.3 << _8.fld1.0;
_22.2 = _8.fld1.2;
_29.1 = _28;
_13 = _15.0;
Goto(bb23)
}
bb23 = {
_32.fld1.0 = _27.0 - _27.0;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1)).0 = (_32.fld3, _3.0);
_32.fld3 = _21 as i64;
_17.0 = !_32.fld1.0;
Goto(bb24)
}
bb24 = {
RET.fld1.1 = _14 as usize;
_29.2 = _27.2 as u16;
_29 = (_17.2, _28, _14, _4);
_28 = _29.1;
RET.fld3 = Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_1, 0), 1).0.0 ^ _11.0;
RET.fld2 = core::ptr::addr_of_mut!(_28);
_32.fld2 = RET.fld2;
Goto(bb25)
}
bb25 = {
Call(_38 = dump_var(14_usize, 30_usize, Move(_30), 7_usize, Move(_7), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_38 = dump_var(14_usize, 18_usize, Move(_18), 23_usize, Move(_23), 16_usize, Move(_16), 25_usize, Move(_25)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_38 = dump_var(14_usize, 10_usize, Move(_10), 14_usize, Move(_14), 19_usize, Move(_19), 27_usize, Move(_27)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: i16,mut _2: i16,mut _3: i16,mut _4: *const (u8, usize, i16, u32),mut _5: (u8, usize, i16, u32),mut _6: *const (u8, usize, i16, u32),mut _7: i16,mut _8: isize,mut _9: [usize; 3],mut _10: [usize; 3]) -> *const *mut *mut [usize; 3] {
mir! {
type RET = *const *mut *mut [usize; 3];
let _11: [u8; 8];
let _12: Adt65;
let _13: isize;
let _14: *mut *mut [usize; 3];
let _15: (u8, usize, i16, u32);
let _16: [u8; 8];
let _17: (i32, bool, f64, u16, isize);
let _18: [bool; 4];
let _19: [u8; 8];
let _20: [i128; 1];
let _21: (usize, char, u16, usize);
let _22: f64;
let _23: f64;
let _24: *mut char;
let _25: bool;
let _26: *const [i64; 5];
let _27: *mut *const i128;
let _28: f64;
let _29: f64;
let _30: [i8; 8];
let _31: [u64; 4];
let _32: u8;
let _33: f32;
let _34: char;
let _35: Adt63;
let _36: *mut *mut [usize; 3];
let _37: [bool; 4];
let _38: i32;
let _39: *const *mut *mut [usize; 3];
let _40: *mut ([bool; 5],);
let _41: f64;
let _42: [i8; 8];
let _43: [bool; 5];
let _44: [i8; 8];
let _45: [u8; 8];
let _46: *mut ([bool; 5],);
let _47: u64;
let _48: *const i128;
let _49: f64;
let _50: i8;
let _51: char;
let _52: char;
let _53: isize;
let _54: i16;
let _55: isize;
let _56: ([bool; 5], usize, [u8; 8]);
let _57: ();
let _58: ();
{
_8 = -(-9223372036854775808_isize);
_5.1 = true as usize;
(*_6).0 = _5.0 ^ _5.0;
Goto(bb1)
}
bb1 = {
(*_4).1 = _5.1 >> (*_4).2;
_5.2 = (*_4).2 + _1;
_9 = [(*_6).1,(*_4).1,(*_6).1];
_5.0 = (*_6).0;
match _2 {
0 => bb2,
340282366920938463463374607431768182929 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5.0 = !(*_6).0;
(*_6).2 = _7;
(*_6).1 = !_5.1;
_4 = _6;
_8 = !9223372036854775807_isize;
(*_6).1 = _5.1;
(*_6).0 = _5.0 ^ _5.0;
_5.1 = (*_4).1 * (*_6).1;
_11 = [(*_6).0,(*_6).0,(*_4).0,(*_6).0,(*_6).0,(*_6).0,(*_6).0,(*_6).0];
(*_6) = _5;
_5.0 = !(*_6).0;
(*_4).0 = _5.0 << (*_4).2;
Goto(bb5)
}
bb5 = {
_5.3 = 50238832003055181840455000792709598088_u128 as u32;
(*_6).0 = '\u{5a89b}' as u8;
_1 = (-1920113686_i32) as i16;
(*_6).2 = _5.2;
(*_4) = (_5.0, _5.1, _7, _5.3);
_17.3 = 17402_u16 >> (*_4).2;
(*_4) = (_5.0, _5.1, _3, _5.3);
(*_6).2 = _3;
(*_6) = (_5.0, _5.1, _7, _5.3);
_9 = _10;
_17.4 = -_8;
(*_4).2 = _7;
_5.3 = (*_6).3 | (*_4).3;
_15.3 = _5.3;
_15 = ((*_4).0, _5.1, (*_6).2, (*_6).3);
(*_6).0 = _15.0 + _15.0;
_1 = _2 - _15.2;
_16 = [(*_6).0,(*_4).0,(*_4).0,(*_4).0,_5.0,(*_6).0,(*_6).0,_15.0];
(*_4).3 = _15.3 - _5.3;
(*_4).3 = _5.3 + _5.3;
_13 = _17.4 << _5.2;
_17.1 = false;
_18 = [_17.1,_17.1,_17.1,_17.1];
(*_4).3 = !_5.3;
Call(_17.3 = core::intrinsics::transmute((*_6).2), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
(*_4).2 = _15.2 - _1;
_7 = _1 - _15.2;
(*_6).1 = '\u{13963}' as usize;
_16 = _11;
(*_6).2 = _3;
RET = core::ptr::addr_of!(_14);
(*_4) = (_15.0, _5.1, _1, _15.3);
_17.1 = false;
_17.2 = 195998708605768584486288048406509443062_u128 as f64;
_10 = [_5.1,(*_6).1,(*_4).1];
_17.0 = !561563732_i32;
_15.1 = (*_4).1;
_15.1 = _5.1 + _5.1;
(*_6) = (_15.0, _5.1, _7, _5.3);
_13 = _17.4;
(*_6).2 = _17.3 as i16;
_15 = _5;
(*_4).3 = _5.3 & _5.3;
(*_6) = _5;
(*_6).0 = !_5.0;
(*_6).0 = _17.1 as u8;
_5.1 = (*_4).1 | (*_6).1;
_17.0 = 1081726171_i32 | (-1997744367_i32);
(*_6).2 = 7357645096050996153_u64 as i16;
_4 = core::ptr::addr_of!((*_6));
(*_4).1 = _15.1 | _5.1;
_5.3 = !(*_6).3;
Goto(bb7)
}
bb7 = {
_6 = _4;
_15 = ((*_4).0, (*_6).1, _1, (*_4).3);
_5.3 = !(*_4).3;
_21.3 = (*_6).1 << _1;
(*_4).1 = _21.3;
(*_6).0 = !_15.0;
_21 = ((*_4).1, '\u{109180}', _17.3, (*_4).1);
_20 = [127958857678406443797771652462045507466_i128];
(*_6).0 = _5.0 ^ _5.0;
(*_4).0 = _17.1 as u8;
(*_6) = (_5.0, _21.0, _15.2, _5.3);
(*_6).0 = (-125_i8) as u8;
Call(_5.0 = fn16(_4, (*_6).1, _17), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_13 = _8;
_22 = _17.2;
_15.0 = _5.0 - (*_4).0;
_15 = ((*_4).0, (*_4).1, _1, (*_4).3);
_17.3 = _21.2;
_9 = _10;
RET = core::ptr::addr_of!(_14);
_4 = core::ptr::addr_of!(_5);
_15 = ((*_6).0, _21.3, _7, (*_6).3);
_21.2 = _15.2 as u16;
_10 = [_21.3,_21.3,(*_6).1];
(*_4) = ((*_6).0, _15.1, _2, (*_6).3);
_16 = [_15.0,(*_4).0,_15.0,_15.0,(*_6).0,(*_6).0,_5.0,(*_6).0];
_15.0 = !_5.0;
_29 = _17.2 - _17.2;
_5.3 = _15.3;
(*_4).0 = 126049158416812959802904028030865797108_u128 as u8;
_19 = _11;
_5 = (*_6);
_18 = [_17.1,_17.1,_17.1,_17.1];
_5.1 = !_15.1;
_30 = [116_i8,57_i8,(-16_i8),15_i8,(-125_i8),(-41_i8),(-41_i8),(-48_i8)];
_31 = [2897398752134677361_u64,15741122693561372141_u64,8692592370368308677_u64,8364794701396498514_u64];
RET = core::ptr::addr_of!(_14);
match (*_4).3 {
3847739155 => bb10,
_ => bb9
}
}
bb9 = {
(*_4).2 = _15.2 - _1;
_7 = _1 - _15.2;
(*_6).1 = '\u{13963}' as usize;
_16 = _11;
(*_6).2 = _3;
RET = core::ptr::addr_of!(_14);
(*_4) = (_15.0, _5.1, _1, _15.3);
_17.1 = false;
_17.2 = 195998708605768584486288048406509443062_u128 as f64;
_10 = [_5.1,(*_6).1,(*_4).1];
_17.0 = !561563732_i32;
_15.1 = (*_4).1;
_15.1 = _5.1 + _5.1;
(*_6) = (_15.0, _5.1, _7, _5.3);
_13 = _17.4;
(*_6).2 = _17.3 as i16;
_15 = _5;
(*_4).3 = _5.3 & _5.3;
(*_6) = _5;
(*_6).0 = !_5.0;
(*_6).0 = _17.1 as u8;
_5.1 = (*_4).1 | (*_6).1;
_17.0 = 1081726171_i32 | (-1997744367_i32);
(*_6).2 = 7357645096050996153_u64 as i16;
_4 = core::ptr::addr_of!((*_6));
(*_4).1 = _15.1 | _5.1;
_5.3 = !(*_6).3;
Goto(bb7)
}
bb10 = {
(*_6).3 = _15.3;
(*_6).3 = _5.3 - (*_4).3;
_9 = [_21.0,_21.0,(*_4).1];
(*_4).0 = _15.0;
_32 = _15.0;
_29 = _17.2;
_5.0 = !_15.0;
(*_6).1 = !_21.3;
_3 = -_7;
(*_6).2 = _7;
_37 = [_17.1,_17.1,_17.1,_17.1];
RET = core::ptr::addr_of!(_14);
_38 = _17.0;
_20 = [47343743298787946078090906403272966527_i128];
(*_6).0 = !_5.0;
_16 = [_32,_32,(*_4).0,_5.0,(*_4).0,_5.0,_15.0,_32];
(*_4) = (_32, _15.1, (*_6).2, _15.3);
RET = core::ptr::addr_of!((*RET));
_15.3 = (*_6).3 << _15.1;
_5.2 = _17.1 as i16;
(*_4).3 = !(*_6).3;
RET = core::ptr::addr_of!((*RET));
(*_4).2 = (*_6).2 ^ _1;
_30 = [82_i8,(-41_i8),(-93_i8),106_i8,(-66_i8),(-45_i8),47_i8,60_i8];
(*_6).3 = _15.3;
Goto(bb11)
}
bb11 = {
_19 = _11;
_5 = ((*_6).0, _21.3, (*_6).2, _15.3);
(*_4).0 = (*_4).1 as u8;
_8 = _13;
_28 = _22 * _22;
_15.1 = (*_4).0 as usize;
(*_6).0 = _5.0;
_28 = _17.2;
(*_6).3 = !_5.3;
_21.2 = _5.0 as u16;
(*_4).0 = (*_6).0;
_17.0 = _38;
_5 = ((*_6).0, (*_6).1, (*_6).2, (*_6).3);
_8 = _5.3 as isize;
_41 = (-66_i8) as f64;
_12 = Adt65::Variant3 { fld0: _15,fld1: _31 };
Call((*_6).3 = core::intrinsics::bswap(_15.3), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_25 = !_17.1;
_5.2 = Field::<(u8, usize, i16, u32)>(Variant(_12, 3), 0).2;
(*_6) = (_5.0, _21.3, _3, (*_4).3);
(*_4).0 = 34_i8 as u8;
_17.2 = _41 * _41;
_21.0 = 184119183718334008386500550270234010529_u128 as usize;
_13 = !_8;
_19 = [(*_6).0,(*_6).0,(*_6).0,(*_6).0,(*_4).0,(*_6).0,(*_6).0,(*_6).0];
(*_4) = ((*_6).0, _21.3, Field::<(u8, usize, i16, u32)>(Variant(_12, 3), 0).2, (*_6).3);
place!(Field::<(u8, usize, i16, u32)>(Variant(_12, 3), 0)).3 = 182174737970319373098267378389201302614_u128 as u32;
(*_4).3 = _15.3 >> (*_4).2;
_30 = [(-6_i8),(-35_i8),90_i8,87_i8,(-86_i8),(-18_i8),(-60_i8),(-29_i8)];
_19 = [(*_6).0,(*_4).0,_5.0,(*_4).0,Field::<(u8, usize, i16, u32)>(Variant(_12, 3), 0).0,_5.0,(*_6).0,_5.0];
_29 = (-123358009812500859_i64) as f64;
_41 = -_28;
SetDiscriminant(_12, 0);
Goto(bb13)
}
bb13 = {
(*_4).1 = !(*_6).1;
(*_6).3 = _17.0 as u32;
_34 = _21.1;
_28 = _29;
_5.1 = (*_6).1 * _21.3;
_17.2 = 16839088978385030620_u64 as f64;
_30 = [28_i8,89_i8,77_i8,57_i8,(-41_i8),(-83_i8),(-38_i8),(-63_i8)];
(*_6).1 = (-97_i8) as usize;
_2 = _5.2;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld1.0 = (*_4).2 as usize;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld3 = 14903869875044262789_u64 as i8;
(*_4).0 = !(*_6).0;
_13 = -_8;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld3 = (-60_i8);
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld0 = !_5.0;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld1.3 = (*_4).1;
(*_4).3 = !_15.3;
_23 = Field::<Adt50>(Variant(_12, 0), 0).fld3 as f64;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld5 = [_15.3,_15.3,(*_4).3,_5.3];
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld4 = _31;
_42 = [Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3];
_27 = core::ptr::addr_of_mut!(_48);
_45 = _19;
_5 = (Field::<Adt50>(Variant(_12, 0), 0).fld0, Field::<Adt50>(Variant(_12, 0), 0).fld1.3, _2, _15.3);
Call(_1 = core::intrinsics::transmute((*_6).2), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld6 = core::ptr::addr_of!(_15);
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld3 = _13 as i8;
_1 = _7;
_10 = _9;
_28 = -_29;
place!(Field::<Adt50>(Variant(_12, 0), 0)).fld1 = ((*_4).1, _21.1, _17.3, _15.1);
_21.3 = !(*_4).1;
_27 = core::ptr::addr_of_mut!((*_27));
(*_6).3 = !(*_4).3;
_21.0 = (*_4).1;
_11 = [(*_4).0,(*_6).0,Field::<Adt50>(Variant(_12, 0), 0).fld0,(*_4).0,(*_4).0,(*_4).0,(*_6).0,_5.0];
_11 = _19;
(*_4).3 = (*_6).3 * (*_6).3;
(*_4).2 = !(*_6).2;
_30 = [Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3,Field::<Adt50>(Variant(_12, 0), 0).fld3];
(*_6).0 = (-94678426145878666991753357457245128074_i128) as u8;
_1 = !_5.2;
(*_4).3 = _38 as u32;
(*_4).0 = Field::<Adt50>(Variant(_12, 0), 0).fld0;
_33 = Field::<Adt50>(Variant(_12, 0), 0).fld3 as f32;
_17.0 = _38 + _38;
_17 = (_38, _25, _22, _21.2, _13);
Goto(bb15)
}
bb15 = {
Call(_57 = dump_var(15_usize, 32_usize, Move(_32), 5_usize, Move(_5), 16_usize, Move(_16), 2_usize, Move(_2)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_57 = dump_var(15_usize, 1_usize, Move(_1), 34_usize, Move(_34), 20_usize, Move(_20), 31_usize, Move(_31)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_57 = dump_var(15_usize, 7_usize, Move(_7), 3_usize, Move(_3), 9_usize, Move(_9), 10_usize, Move(_10)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: *const (u8, usize, i16, u32),mut _2: usize,mut _3: (i32, bool, f64, u16, isize)) -> u8 {
mir! {
type RET = u8;
let _4: char;
let _5: bool;
let _6: i32;
let _7: isize;
let _8: [u64; 4];
let _9: i16;
let _10: ([bool; 5], usize, [u8; 8]);
let _11: f32;
let _12: f32;
let _13: bool;
let _14: u64;
let _15: (i64, [bool; 5]);
let _16: (usize, char, u16, usize);
let _17: Adt51;
let _18: char;
let _19: u8;
let _20: (i64, [bool; 5]);
let _21: bool;
let _22: char;
let _23: char;
let _24: isize;
let _25: ();
let _26: ();
{
(*_1).3 = _3.4 as u32;
(*_1).3 = !338782669_u32;
RET = 331478374706011129183399312963306648188_u128 as u8;
_6 = 2619842734142745764_u64 as i32;
(*_1).3 = !3798214123_u32;
_5 = _3.1 | _3.1;
(*_1) = (RET, _2, (-152_i16), 4281071829_u32);
(*_1).0 = !RET;
(*_1) = (RET, _2, (-6092_i16), 2136414693_u32);
_2 = (*_1).0 as usize;
_2 = !(*_1).1;
_5 = !_3.1;
(*_1).1 = 27842080781228130138505447756868245814_i128 as usize;
match (*_1).2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768205364 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
(*_1).3 = _3.2 as u32;
(*_1).0 = RET;
(*_1).2 = _6 as i16;
_3.3 = 57545_u16 ^ 27582_u16;
(*_1).2 = -5992_i16;
_3.4 = 93_i8 as isize;
_5 = !_3.1;
_3.4 = 2_isize >> _2;
_3.0 = !_6;
Goto(bb10)
}
bb10 = {
_5 = !_3.1;
Call((*_1).3 = fn17(_3, _2, _2, _3, _3, _2, _3, _3.4, _2, _3, _3, _3, _3), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_3.4 = -(-9223372036854775808_isize);
_3.1 = _5 ^ _5;
_3.0 = 31667737158804360829847175365430308279_i128 as i32;
RET = (*_1).0;
_3.3 = !14144_u16;
(*_1).1 = _2;
_3.2 = 118538318903530749733971958646828925207_u128 as f64;
_9 = _3.4 as i16;
(*_1).2 = _9 - _9;
_10.2 = [(*_1).0,RET,(*_1).0,(*_1).0,RET,(*_1).0,(*_1).0,(*_1).0];
(*_1).0 = !RET;
_2 = (*_1).1 | (*_1).1;
Goto(bb12)
}
bb12 = {
_10.0 = [_3.1,_3.1,_3.1,_3.1,_3.1];
_3.2 = _3.4 as f64;
_13 = _5 & _3.1;
(*_1).0 = !RET;
_11 = 412383349011048022_u64 as f32;
_1 = core::ptr::addr_of!((*_1));
_3.4 = '\u{87ebd}' as isize;
_10.0 = [_3.1,_13,_3.1,_3.1,_13];
_8 = [8559886157684467580_u64,13525757100752087515_u64,12463446708551994982_u64,9063850076615880817_u64];
_4 = '\u{70fef}';
(*_1).1 = 2636358467274438869_u64 as usize;
_3.0 = _6;
_6 = !_3.0;
_4 = '\u{d8cf7}';
_3.4 = _4 as isize;
(*_1).2 = _9 & _9;
_3.1 = !_13;
_14 = (-7491697270314807546_i64) as u64;
(*_1).3 = 3058203853_u32;
(*_1).0 = RET ^ RET;
_7 = 54644399443128160258079847296959036996_u128 as isize;
(*_1) = (RET, _2, _9, 2159657463_u32);
RET = (*_1).0 ^ (*_1).0;
(*_1) = (RET, _2, _9, 812640295_u32);
_3.1 = !_13;
Goto(bb13)
}
bb13 = {
_5 = !_13;
(*_1).2 = _9;
_12 = _11 + _11;
RET = (*_1).3 as u8;
_15.0 = 7548145556130297837_i64;
_10.1 = !_2;
_11 = (-95_i8) as f32;
_4 = '\u{10a3bb}';
_2 = _9 as usize;
_16.1 = _4;
(*_1).1 = _10.1;
_5 = (*_1).1 == (*_1).1;
_8 = [_14,_14,_14,_14];
_7 = -_3.4;
_16.2 = _10.1 as u16;
_16.2 = _3.3 >> (*_1).0;
_16 = (_10.1, _4, _3.3, (*_1).1);
_3.3 = _16.2 | _16.2;
(*_1).3 = 943820061_u32;
_15.0 = -6954075569004286715_i64;
_1 = core::ptr::addr_of!((*_1));
_20.0 = _3.2 as i64;
RET = !(*_1).0;
RET = (*_1).0 ^ (*_1).0;
(*_1) = (RET, _10.1, _9, 2835961545_u32);
_16.3 = _16.0;
_20.1 = [_5,_5,_5,_5,_5];
match (*_1).3 {
0 => bb14,
1 => bb15,
2 => bb16,
2835961545 => bb18,
_ => bb17
}
}
bb14 = {
_10.0 = [_3.1,_3.1,_3.1,_3.1,_3.1];
_3.2 = _3.4 as f64;
_13 = _5 & _3.1;
(*_1).0 = !RET;
_11 = 412383349011048022_u64 as f32;
_1 = core::ptr::addr_of!((*_1));
_3.4 = '\u{87ebd}' as isize;
_10.0 = [_3.1,_13,_3.1,_3.1,_13];
_8 = [8559886157684467580_u64,13525757100752087515_u64,12463446708551994982_u64,9063850076615880817_u64];
_4 = '\u{70fef}';
(*_1).1 = 2636358467274438869_u64 as usize;
_3.0 = _6;
_6 = !_3.0;
_4 = '\u{d8cf7}';
_3.4 = _4 as isize;
(*_1).2 = _9 & _9;
_3.1 = !_13;
_14 = (-7491697270314807546_i64) as u64;
(*_1).3 = 3058203853_u32;
(*_1).0 = RET ^ RET;
_7 = 54644399443128160258079847296959036996_u128 as isize;
(*_1) = (RET, _2, _9, 2159657463_u32);
RET = (*_1).0 ^ (*_1).0;
(*_1) = (RET, _2, _9, 812640295_u32);
_3.1 = !_13;
Goto(bb13)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_16.1 = _4;
_2 = _16.3 * _10.1;
_13 = _5;
_20.0 = !_15.0;
_3.4 = _7 | _7;
_11 = _12;
_3.3 = _16.2;
_8 = [_14,_14,_14,_14];
_16.2 = !_3.3;
_16.0 = _2;
(*_1) = (RET, _16.0, _9, 3768881270_u32);
(*_1) = (RET, _16.0, _9, 3847739155_u32);
(*_1).0 = RET;
_16.0 = !(*_1).1;
_16.1 = _4;
_14 = !2327440446700588851_u64;
_2 = _16.2 as usize;
_13 = _5;
_4 = _16.1;
(*_1).0 = !RET;
Goto(bb19)
}
bb19 = {
Call(_25 = dump_var(16_usize, 6_usize, Move(_6), 4_usize, Move(_4), 20_usize, Move(_20), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_25 = dump_var(16_usize, 14_usize, Move(_14), 10_usize, Move(_10), 26_usize, _26, 26_usize, _26), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: (i32, bool, f64, u16, isize),mut _2: usize,mut _3: usize,mut _4: (i32, bool, f64, u16, isize),mut _5: (i32, bool, f64, u16, isize),mut _6: usize,mut _7: (i32, bool, f64, u16, isize),mut _8: isize,mut _9: usize,mut _10: (i32, bool, f64, u16, isize),mut _11: (i32, bool, f64, u16, isize),mut _12: (i32, bool, f64, u16, isize),mut _13: (i32, bool, f64, u16, isize)) -> u32 {
mir! {
type RET = u32;
let _14: u32;
let _15: f32;
let _16: f32;
let _17: ();
let _18: ();
{
_7.1 = _5.1 ^ _11.1;
_1.0 = _12.0 * _4.0;
_11.4 = -_1.4;
_13.0 = _1.0 << _13.4;
_11.1 = _1.1 | _10.1;
_4.1 = _13.4 != _13.4;
RET = !2310585321_u32;
_11.3 = RET as u16;
_4.3 = _13.0 as u16;
_13.3 = _4.3;
_4 = (_13.0, _1.1, _12.2, _13.3, _5.4);
_12 = (_4.0, _7.1, _4.2, _4.3, _11.4);
_10.0 = _4.0 ^ _4.0;
_5 = (_13.0, _4.1, _12.2, _4.3, _10.4);
_2 = !_9;
RET = 805931757_u32 ^ 292331022_u32;
RET = _8 as u32;
_1.3 = _13.3;
_8 = _4.4 + _11.4;
_5.1 = _12.1;
_1 = (_4.0, _4.1, _4.2, _4.3, _7.4);
_5.0 = -_10.0;
_12.2 = _7.2;
_5.0 = !_12.0;
_11.2 = RET as f64;
_1.1 = !_7.1;
_7.1 = _1.1;
_15 = _6 as f32;
Goto(bb1)
}
bb1 = {
Call(_17 = dump_var(17_usize, 3_usize, Move(_3), 6_usize, Move(_6), 18_usize, _18, 18_usize, _18), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [usize; 3],mut _2: [usize; 3],mut _3: u8,mut _4: (u8, usize, i16, u32),mut _5: ((i64, [bool; 5]), ([bool; 5],)),mut _6: ([bool; 5],),mut _7: u16,mut _8: (i64, [bool; 5]),mut _9: (i32, bool, f64, u16, isize)) -> ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128) {
mir! {
type RET = ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128);
let _10: *mut [u32; 4];
let _11: f64;
let _12: i8;
let _13: u128;
let _14: *const *mut *mut [usize; 3];
let _15: isize;
let _16: f64;
let _17: f64;
let _18: i8;
let _19: *const [i64; 5];
let _20: isize;
let _21: u16;
let _22: bool;
let _23: isize;
let _24: u128;
let _25: char;
let _26: f64;
let _27: isize;
let _28: u64;
let _29: isize;
let _30: Adt54;
let _31: f64;
let _32: Adt50;
let _33: i16;
let _34: f32;
let _35: [u32; 4];
let _36: *mut *mut [usize; 3];
let _37: f32;
let _38: char;
let _39: u8;
let _40: [u64; 4];
let _41: (u8, usize, i16, u32);
let _42: Adt65;
let _43: (u8, usize, i16, u32);
let _44: u32;
let _45: ((i64, [bool; 5]), ([bool; 5],));
let _46: isize;
let _47: char;
let _48: [i128; 1];
let _49: *mut *mut [usize; 3];
let _50: Adt53;
let _51: [u32; 4];
let _52: f32;
let _53: (usize, char, u16, usize);
let _54: *const i8;
let _55: i16;
let _56: f32;
let _57: char;
let _58: [usize; 3];
let _59: Adt59;
let _60: char;
let _61: (usize, char, u16, usize);
let _62: [u64; 4];
let _63: i8;
let _64: f64;
let _65: (i32, bool, f64, u16, isize);
let _66: i8;
let _67: f64;
let _68: Adt60;
let _69: [u64; 4];
let _70: ([bool; 5],);
let _71: f64;
let _72: Adt50;
let _73: u16;
let _74: [bool; 5];
let _75: char;
let _76: i16;
let _77: i16;
let _78: isize;
let _79: [bool; 5];
let _80: (i32, bool, f64, u16, isize);
let _81: i16;
let _82: *const i128;
let _83: [usize; 3];
let _84: [usize; 3];
let _85: [u8; 8];
let _86: *const i8;
let _87: u128;
let _88: i64;
let _89: isize;
let _90: ();
let _91: ();
{
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0.0 = _8.0 << _3;
_5.1 = (_6.0,);
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_9.3 = _7;
_11 = -_9.2;
_4.0 = !_3;
RET.0 = (_8.0, _8.1);
_2 = [_4.1,_4.1,_4.1];
Goto(bb1)
}
bb1 = {
_9 = ((-866055403_i32), true, _11, _7, (-9223372036854775808_isize));
_5.1.0 = _6.0;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb2 = {
_5.0 = (_8.0, RET.0.1);
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
Goto(bb3)
}
bb3 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb4 = {
_4.2 = (-9169_i16);
_8 = RET.0;
_4.0 = 10406681450929760083_u64 as u8;
_5.0 = (_8.0, _8.1);
_5.0.0 = !_8.0;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_9.0 = 37619764_i32 | (-1890837301_i32);
_5.0 = (RET.0.0, RET.0.1);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = -30092_i16;
_5.0 = (RET.0.0, _6.0);
_4.2 = -(-3661_i16);
Goto(bb5)
}
bb5 = {
RET.0 = (_8.0, _6.0);
_1 = [_4.1,_4.1,_4.1];
_6 = (_5.0.1,);
_6.0 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_2 = [_4.1,_4.1,_4.1];
_2 = [_4.1,_4.1,_4.1];
_8 = _5.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.1 = _9.4 as usize;
_3 = _4.0 & _4.0;
_6.0 = [_9.1,_9.1,_9.1,_9.1,_9.1];
Goto(bb6)
}
bb6 = {
_18 = !_12;
_9 = ((-1040320095_i32), true, _11, _7, _15);
_1 = [_4.1,_4.1,_4.1];
_4.3 = !2514618593_u32;
RET.0 = (_8.0, _5.0.1);
_9.2 = _11 * _11;
RET.0.0 = _9.4 as i64;
_9.2 = _11;
_18 = _12 << _8.0;
_5 = (_8, _6);
_4.0 = _3;
_4.2 = 17132_i16 << _7;
_20 = _9.4;
RET.1 = core::ptr::addr_of!(_4);
_16 = -_9.2;
_3 = '\u{fa8f}' as u8;
_9.0 = 1897336968_i32 & (-1179855571_i32);
RET.1 = core::ptr::addr_of!(_4);
match _13 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb7,
4 => bb8,
5 => bb9,
258088430735857118366736802667903221388 => bb11,
_ => bb10
}
}
bb7 = {
_9 = ((-866055403_i32), true, _11, _7, (-9223372036854775808_isize));
_5.1.0 = _6.0;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb8 = {
_4.2 = (-9169_i16);
_8 = RET.0;
_4.0 = 10406681450929760083_u64 as u8;
_5.0 = (_8.0, _8.1);
_5.0.0 = !_8.0;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_9.0 = 37619764_i32 | (-1890837301_i32);
_5.0 = (RET.0.0, RET.0.1);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = -30092_i16;
_5.0 = (RET.0.0, _6.0);
_4.2 = -(-3661_i16);
Goto(bb5)
}
bb9 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb10 = {
_5.0 = (_8.0, RET.0.1);
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
Goto(bb3)
}
bb11 = {
_18 = _12 - _12;
_5 = (RET.0, _6);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = 17772997263189677645_u64 as i16;
RET.0 = _5.0;
_13 = !274125459797900908785936633739733252441_u128;
_6.0 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0.0 = _12 as i64;
RET.0.0 = -_8.0;
_24 = _13 << _8.0;
_4.2 = 2238269528334044000_u64 as i16;
_17 = -_11;
Goto(bb12)
}
bb12 = {
_6 = (RET.0.1,);
_6.0 = _8.1;
_21 = !_7;
RET.0 = (_8.0, _6.0);
_7 = _9.3;
_18 = -_12;
_4.2 = _4.1 as i16;
_9 = (1795146932_i32, true, _11, _21, _15);
_9.4 = '\u{c9e62}' as isize;
_13 = !_24;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_8.0 = _4.3 as i64;
RET.0.1 = _8.1;
_11 = _9.2;
_21 = _9.3 - _9.3;
_26 = -_17;
_8.1 = _5.1.0;
_27 = _15 >> RET.0.0;
_23 = _4.3 as isize;
RET.0.0 = _5.0.0 + _8.0;
_11 = -_17;
Goto(bb13)
}
bb13 = {
_20 = _27;
_1 = [_4.1,_4.1,_4.1];
_9.4 = _20;
_11 = _4.1 as f64;
_9.2 = _9.0 as f64;
_4.1 = !15748693850337668728_usize;
_9.3 = !_7;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_1 = [_4.1,_4.1,_4.1];
match _9.0 {
0 => bb12,
1795146932 => bb15,
_ => bb14
}
}
bb14 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb15 = {
_28 = _24 as u64;
_22 = _9.1;
_26 = -_17;
_22 = _27 < _9.4;
_32.fld4 = [_28,_28,_28,_28];
_32.fld5 = [_4.3,_4.3,_4.3,_4.3];
_25 = '\u{d1ea6}';
_5.0.1 = _6.0;
Goto(bb16)
}
bb16 = {
_27 = !_9.4;
_31 = _9.2;
_32.fld1.1 = _25;
Call(RET.0.0 = core::intrinsics::bswap(_5.0.0), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_20 = !_9.4;
_32.fld1.2 = (-70976668177771425844949570819002129696_i128) as u16;
_5.1 = (_8.1,);
_32.fld3 = _18 << _20;
_29 = _9.4;
_17 = _16;
_32.fld1.2 = _4.3 as u16;
_5.0.1 = _8.1;
RET.0.0 = _5.0.0 * _5.0.0;
_20 = _4.1 as isize;
_6.0 = [_9.1,_9.1,_22,_9.1,_9.1];
_1 = _2;
RET.0 = _8;
_15 = _29 - _27;
_32.fld1.3 = _4.2 as usize;
_16 = -_9.2;
_5.0.0 = _3 as i64;
_9.3 = _4.2 as u16;
_10 = core::ptr::addr_of_mut!(_32.fld5);
_34 = _32.fld3 as f32;
_8 = _5.0;
_32.fld1.0 = _32.fld1.3 - _32.fld1.3;
Goto(bb18)
}
bb18 = {
_8 = (RET.0.0, _5.0.1);
_32.fld0 = _3 + _4.0;
_2 = [_32.fld1.0,_32.fld1.3,_32.fld1.3];
_4.2 = 24283_i16 & 16439_i16;
RET.0.0 = _5.0.0;
_23 = RET.0.0 as isize;
_7 = _9.3;
_6.0 = [_22,_22,_9.1,_9.1,_22];
_21 = !_9.3;
(*_10) = [_4.3,_4.3,_4.3,_4.3];
_9 = (694432988_i32, _22, _16, _21, _29);
_4 = (_3, _32.fld1.3, 6084_i16, 285922597_u32);
RET.0.0 = _8.0;
_7 = !_9.3;
_32.fld4 = [_28,_28,_28,_28];
_20 = _15 ^ _9.4;
_32.fld3 = _34 as i8;
(*_10) = [_4.3,_4.3,_4.3,_4.3];
_25 = _32.fld1.1;
RET.0 = _8;
_32.fld1.2 = _7;
_3 = _4.3 as u8;
_34 = _9.4 as f32;
Goto(bb19)
}
bb19 = {
_7 = _21 ^ _21;
RET.1 = core::ptr::addr_of!(_4);
(*_10) = [_4.3,_4.3,_4.3,_4.3];
_7 = _32.fld1.2 << _27;
_35 = _32.fld5;
_1 = [_32.fld1.3,_32.fld1.3,_4.1];
_17 = _16 * _31;
match _9.0 {
0 => bb6,
1 => bb11,
2 => bb18,
694432988 => bb21,
_ => bb20
}
}
bb20 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb21 = {
_17 = -_16;
_8.1 = [_22,_22,_9.1,_22,_22];
_38 = _25;
_20 = _29 << _9.0;
_3 = _9.0 as u8;
_44 = _4.3;
_45.1 = _5.1;
_14 = core::ptr::addr_of!(_36);
_32.fld6 = RET.1;
(*_10) = [_44,_4.3,_44,_4.3];
_46 = _29 + _20;
_6.0 = _45.1.0;
_43.1 = _3 as usize;
(*_10) = [_44,_44,_4.3,_4.3];
_4.1 = _32.fld1.3;
_4.2 = _32.fld1.0 as i16;
_43 = (_3, _32.fld1.0, _4.2, _4.3);
_18 = -_32.fld3;
_9 = (51067666_i32, _22, _11, _21, _29);
_5.0.1 = [_22,_9.1,_9.1,_9.1,_9.1];
_32.fld4 = [_28,_28,_28,_28];
_15 = _29 * _9.4;
_45.0.0 = _31 as i64;
_8.1 = [_9.1,_22,_9.1,_22,_9.1];
_3 = _31 as u8;
match _9.0 {
0 => bb4,
1 => bb22,
2 => bb23,
3 => bb24,
51067666 => bb26,
_ => bb25
}
}
bb22 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb23 = {
_27 = !_9.4;
_31 = _9.2;
_32.fld1.1 = _25;
Call(RET.0.0 = core::intrinsics::bswap(_5.0.0), ReturnTo(bb17), UnwindUnreachable())
}
bb24 = {
_5.0 = (_8.0, RET.0.1);
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
Goto(bb3)
}
bb25 = {
_9 = ((-866055403_i32), true, _11, _7, (-9223372036854775808_isize));
_5.1.0 = _6.0;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb26 = {
_9.0 = (-573725679_i32) << _43.3;
_45 = (_5.0, _5.1);
_15 = _9.0 as isize;
_1 = _2;
RET.0 = (_8.0, _5.0.1);
_34 = _45.0.0 as f32;
_34 = _8.0 as f32;
_46 = _34 as isize;
_43.0 = _3 >> _20;
_42 = Adt65::Variant3 { fld0: _43,fld1: _32.fld4 };
_28 = 4419300057064860425_u64;
_32.fld1.0 = !Field::<(u8, usize, i16, u32)>(Variant(_42, 3), 0).1;
_41.2 = -_43.2;
_47 = _32.fld1.1;
match _43.3 {
0 => bb12,
1 => bb7,
2 => bb23,
3 => bb27,
4 => bb28,
5 => bb29,
6 => bb30,
285922597 => bb32,
_ => bb31
}
}
bb27 = {
_20 = _27;
_1 = [_4.1,_4.1,_4.1];
_9.4 = _20;
_11 = _4.1 as f64;
_9.2 = _9.0 as f64;
_4.1 = !15748693850337668728_usize;
_9.3 = !_7;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_1 = [_4.1,_4.1,_4.1];
match _9.0 {
0 => bb12,
1795146932 => bb15,
_ => bb14
}
}
bb28 = {
_18 = _12 - _12;
_5 = (RET.0, _6);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = 17772997263189677645_u64 as i16;
RET.0 = _5.0;
_13 = !274125459797900908785936633739733252441_u128;
_6.0 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0.0 = _12 as i64;
RET.0.0 = -_8.0;
_24 = _13 << _8.0;
_4.2 = 2238269528334044000_u64 as i16;
_17 = -_11;
Goto(bb12)
}
bb29 = {
_27 = !_9.4;
_31 = _9.2;
_32.fld1.1 = _25;
Call(RET.0.0 = core::intrinsics::bswap(_5.0.0), ReturnTo(bb17), UnwindUnreachable())
}
bb30 = {
_4.2 = (-9169_i16);
_8 = RET.0;
_4.0 = 10406681450929760083_u64 as u8;
_5.0 = (_8.0, _8.1);
_5.0.0 = !_8.0;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_9.0 = 37619764_i32 | (-1890837301_i32);
_5.0 = (RET.0.0, RET.0.1);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = -30092_i16;
_5.0 = (RET.0.0, _6.0);
_4.2 = -(-3661_i16);
Goto(bb5)
}
bb31 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb32 = {
_41.3 = _43.3;
place!(Field::<(u8, usize, i16, u32)>(Variant(_42, 3), 0)).2 = -_41.2;
Goto(bb33)
}
bb33 = {
RET.1 = core::ptr::addr_of!(_43);
_9 = (1210197407_i32, _22, _17, _21, _27);
_8.1 = [_9.1,_9.1,_22,_22,_9.1];
_41.2 = -Field::<(u8, usize, i16, u32)>(Variant(_42, 3), 0).2;
_16 = _9.0 as f64;
SetDiscriminant(_42, 1);
_32.fld4 = [_28,_28,_28,_28];
_26 = _16 * _11;
RET.0.1 = [_22,_9.1,_9.1,_9.1,_9.1];
_32.fld1.3 = _4.1;
_53.3 = !_32.fld1.0;
_9.0 = (-1172243983_i32) - (-727830421_i32);
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).0.1 = [_9.1,_9.1,_9.1,_22,_9.1];
RET.0.0 = !_5.0.0;
Goto(bb34)
}
bb34 = {
_32.fld1.0 = _32.fld1.3 * _43.1;
_35 = (*_10);
Call(_48 = core::intrinsics::transmute(_24), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
_55 = _4.2;
_4 = _43;
_53.2 = _21;
_41.2 = _55;
_37 = -_34;
_45.0.1 = [_9.1,_9.1,_22,_22,_9.1];
_56 = _34;
_28 = _20 as u64;
place!(Field::<isize>(Variant(_42, 1), 2)) = _29;
_41.0 = _43.0;
_45.1.0 = [_9.1,_9.1,_9.1,_22,_9.1];
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).2 = _22;
_32.fld1.2 = _21;
_25 = _32.fld1.1;
_41.3 = _4.3;
_8.1 = RET.0.1;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).1 = [_43.1,_53.3,_4.1];
_45.1 = _6;
_32.fld6 = RET.1;
match _4.3 {
0 => bb12,
285922597 => bb37,
_ => bb36
}
}
bb36 = {
_7 = _21 ^ _21;
RET.1 = core::ptr::addr_of!(_4);
(*_10) = [_4.3,_4.3,_4.3,_4.3];
_7 = _32.fld1.2 << _27;
_35 = _32.fld5;
_1 = [_32.fld1.3,_32.fld1.3,_4.1];
_17 = _16 * _31;
match _9.0 {
0 => bb6,
1 => bb11,
2 => bb18,
694432988 => bb21,
_ => bb20
}
}
bb37 = {
_53.1 = _32.fld1.1;
_22 = _9.1;
_61 = _32.fld1;
RET.0 = (_5.0.0, Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0).0.1);
_41 = (_3, _61.3, _4.2, _44);
_39 = !_3;
_57 = _61.1;
_56 = -_34;
_21 = _32.fld1.2;
_53 = (_4.1, _47, _7, _32.fld1.0);
_12 = !_32.fld3;
_6.0 = _45.0.1;
Goto(bb38)
}
bb38 = {
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).0 = [_12,_18,_32.fld3,_12,_32.fld3,_12,_12,_32.fld3];
_65.3 = !_9.3;
_53.3 = !_61.3;
_3 = !_41.0;
match _41.3 {
285922597 => bb40,
_ => bb39
}
}
bb39 = {
_7 = _21 ^ _21;
RET.1 = core::ptr::addr_of!(_4);
(*_10) = [_4.3,_4.3,_4.3,_4.3];
_7 = _32.fld1.2 << _27;
_35 = _32.fld5;
_1 = [_32.fld1.3,_32.fld1.3,_4.1];
_17 = _16 * _31;
match _9.0 {
0 => bb6,
1 => bb11,
2 => bb18,
694432988 => bb21,
_ => bb20
}
}
bb40 = {
_51 = _35;
(*_10) = [_44,_43.3,_43.3,_43.3];
_65.1 = _22;
_65.4 = _27 << _15;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).0 = (_5.0.0, _5.0.1);
_6 = _5.1;
_12 = -_18;
_39 = _43.0 & _41.0;
_5.0 = _45.0;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).1 = _32.fld6;
RET.0 = (Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0).0.0, _8.1);
_53.0 = !_32.fld1.3;
_7 = !_32.fld1.2;
_2 = Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).1;
_73 = _13 as u16;
_8.0 = _24 as i64;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).1 = RET.1;
_71 = _9.2 + _9.2;
_58 = [_53.0,_61.0,_61.3];
match _44 {
0 => bb38,
1 => bb10,
2 => bb11,
3 => bb41,
285922597 => bb43,
_ => bb42
}
}
bb41 = {
RET.1 = core::ptr::addr_of!(_43);
_9 = (1210197407_i32, _22, _17, _21, _27);
_8.1 = [_9.1,_9.1,_22,_22,_9.1];
_41.2 = -Field::<(u8, usize, i16, u32)>(Variant(_42, 3), 0).2;
_16 = _9.0 as f64;
SetDiscriminant(_42, 1);
_32.fld4 = [_28,_28,_28,_28];
_26 = _16 * _11;
RET.0.1 = [_22,_9.1,_9.1,_9.1,_9.1];
_32.fld1.3 = _4.1;
_53.3 = !_32.fld1.0;
_9.0 = (-1172243983_i32) - (-727830421_i32);
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).0.1 = [_9.1,_9.1,_9.1,_22,_9.1];
RET.0.0 = !_5.0.0;
Goto(bb34)
}
bb42 = {
_4.2 = (-9169_i16);
_8 = RET.0;
_4.0 = 10406681450929760083_u64 as u8;
_5.0 = (_8.0, _8.1);
_5.0.0 = !_8.0;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_9.0 = 37619764_i32 | (-1890837301_i32);
_5.0 = (RET.0.0, RET.0.1);
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_4.2 = -30092_i16;
_5.0 = (RET.0.0, _6.0);
_4.2 = -(-3661_i16);
Goto(bb5)
}
bb43 = {
_38 = _32.fld1.1;
_9 = (1343201650_i32, Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).2, _17, _7, _29);
_12 = (-121854328400821169831223327073508181768_i128) as i8;
_56 = _41.0 as f32;
_61.0 = _41.1 * _53.0;
_7 = _9.3 + _32.fld1.2;
_60 = _57;
_72.fld1.0 = 164910956751493534243713380444364725879_i128 as usize;
_77 = !_4.2;
_37 = -_56;
_63 = _32.fld3;
_72.fld4 = [_28,_28,_28,_28];
_9.0 = 763468915_i32;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).1 = core::ptr::addr_of!(_4);
_27 = _65.4;
_79 = [_9.1,Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).2,_65.1,_9.1,_65.1];
_45.0 = (_8.0, _8.1);
_4.1 = _61.3 & _53.3;
_72.fld1.1 = _60;
_71 = _16;
_44 = !_4.3;
_5.1.0 = [_9.1,_9.1,_65.1,_65.1,_65.1];
_32.fld5 = _35;
_72.fld3 = !_32.fld3;
_43.3 = _45.0.0 as u32;
_31 = -_9.2;
_54 = core::ptr::addr_of!(_66);
_66 = _72.fld3 & _18;
Goto(bb44)
}
bb44 = {
_23 = _27;
_57 = _53.1;
Goto(bb45)
}
bb45 = {
_34 = _56 * _37;
_6 = _45.1;
_9.4 = _25 as isize;
_69 = _72.fld4;
_10 = core::ptr::addr_of_mut!(_35);
_53 = (_61.0, _57, _61.2, _61.0);
_27 = Field::<isize>(Variant(_42, 1), 2);
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).1 = _1;
_45.0.0 = -_8.0;
_65.2 = _71 * _16;
_41.1 = _37 as usize;
(*_10) = [_4.3,_44,_41.3,_43.3];
_2 = _1;
_45.1 = _5.1;
_73 = _53.2;
Goto(bb46)
}
bb46 = {
_65.2 = -_16;
_73 = _29 as u16;
_32.fld1 = (_53.0, _61.1, _21, _61.0);
_72.fld6 = core::ptr::addr_of!(_43);
_4 = (_3, _43.1, _41.2, _44);
_70.0 = [_65.1,Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).2,_65.1,_9.1,_9.1];
_25 = _32.fld1.1;
_37 = -_56;
_61.2 = _23 as u16;
(*_10) = [_4.3,_43.3,_41.3,_4.3];
_32.fld1.2 = _61.2;
_22 = _65.3 > _9.3;
_72.fld1.3 = _53.0 >> _45.0.0;
_4.2 = _9.0 as i16;
_74 = [_9.1,Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).2,Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1).2,_65.1,_65.1];
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).0.0 = !_8.0;
(*_10) = _51;
_64 = _65.2;
_57 = _72.fld1.1;
_55 = _43.2 ^ _41.2;
_28 = !3294271915163118072_u64;
place!(Field::<((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128)>(Variant(_42, 1), 0)).0.1 = [_22,_65.1,_22,_65.1,_22];
_21 = !_32.fld1.2;
_72.fld1 = _53;
match _41.3 {
0 => bb14,
1 => bb11,
2 => bb37,
285922597 => bb48,
_ => bb47
}
}
bb47 = {
_55 = _4.2;
_4 = _43;
_53.2 = _21;
_41.2 = _55;
_37 = -_34;
_45.0.1 = [_9.1,_9.1,_22,_22,_9.1];
_56 = _34;
_28 = _20 as u64;
place!(Field::<isize>(Variant(_42, 1), 2)) = _29;
_41.0 = _43.0;
_45.1.0 = [_9.1,_9.1,_9.1,_22,_9.1];
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).2 = _22;
_32.fld1.2 = _21;
_25 = _32.fld1.1;
_41.3 = _4.3;
_8.1 = RET.0.1;
place!(Field::<([i8; 8], [usize; 3], bool)>(Variant(_42, 1), 1)).1 = [_43.1,_53.3,_4.1];
_45.1 = _6;
_32.fld6 = RET.1;
match _4.3 {
0 => bb12,
285922597 => bb37,
_ => bb36
}
}
bb48 = {
_72.fld4 = [_28,_28,_28,_28];
RET.0 = (_8.0, _74);
RET.1 = _32.fld6;
_51 = (*_10);
_40 = _69;
_72.fld1.2 = _53.2;
_46 = _27 << _32.fld1.0;
_8.0 = RET.0.0;
_65.4 = _71 as isize;
_9.1 = _65.1 & _22;
_22 = _43.1 > _61.0;
_41.2 = _34 as i16;
match _41.3 {
0 => bb13,
1 => bb38,
2 => bb49,
285922597 => bb51,
_ => bb50
}
}
bb49 = {
RET.0 = _8;
_11 = _9.2 * _9.2;
RET.0 = (_5.0.0, _5.1.0);
RET.0.0 = _11 as i64;
_9.2 = _11;
RET.1 = core::ptr::addr_of!(_4);
_5 = (_8, _6);
_13 = 258088430735857118366736802667903221388_u128;
_9 = (1598483066_i32, true, _11, _7, 81_isize);
_2 = [_4.1,_4.1,_4.1];
RET.0.0 = _8.0;
RET.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_15 = 7912598992066670746_u64 as isize;
_12 = -118_i8;
_4.3 = 1774091047_u32;
_3 = (-142447533289745403067941212801402395906_i128) as u8;
_5.0.1 = [_9.1,_9.1,_9.1,_9.1,_9.1];
_5.0 = (RET.0.0, RET.0.1);
_6 = (RET.0.1,);
_9.4 = -_15;
_9 = (713699227_i32, true, _11, _7, _15);
_9.2 = _4.0 as f64;
_5.1.0 = _8.1;
_9.4 = _15 << _4.1;
_5.1 = (_6.0,);
_9.0 = (-841848358_i32);
Goto(bb4)
}
bb50 = {
_41.3 = _43.3;
place!(Field::<(u8, usize, i16, u32)>(Variant(_42, 3), 0)).2 = -_41.2;
Goto(bb33)
}
bb51 = {
_65.0 = _9.0 * _9.0;
_80 = _9;
_1 = [_32.fld1.3,_72.fld1.0,_43.1];
_12 = _72.fld3;
RET.2 = core::ptr::addr_of_mut!(_82);
_58 = _1;
_32.fld1.0 = _53.3 | _41.1;
_77 = _55 << _43.2;
_43.2 = -_55;
_24 = _13;
Goto(bb52)
}
bb52 = {
Call(_90 = dump_var(18_usize, 4_usize, Move(_4), 7_usize, Move(_7), 5_usize, Move(_5), 12_usize, Move(_12)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_90 = dump_var(18_usize, 21_usize, Move(_21), 53_usize, Move(_53), 23_usize, Move(_23), 22_usize, Move(_22)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_90 = dump_var(18_usize, 3_usize, Move(_3), 46_usize, Move(_46), 57_usize, Move(_57), 77_usize, Move(_77)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_90 = dump_var(18_usize, 40_usize, Move(_40), 15_usize, Move(_15), 18_usize, Move(_18), 70_usize, Move(_70)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_90 = dump_var(18_usize, 73_usize, Move(_73), 8_usize, Move(_8), 74_usize, Move(_74), 58_usize, Move(_58)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_90 = dump_var(18_usize, 61_usize, Move(_61), 60_usize, Move(_60), 48_usize, Move(_48), 91_usize, _91), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: ([bool; 5], usize, [u8; 8]),mut _2: (i64, [bool; 5]),mut _3: (i64, [bool; 5]),mut _4: i64,mut _5: (i64, [bool; 5]),mut _6: i64,mut _7: i64,mut _8: i64,mut _9: i64,mut _10: [u8; 8],mut _11: i64,mut _12: i64,mut _13: i64,mut _14: i64,mut _15: i64) -> [usize; 3] {
mir! {
type RET = [usize; 3];
let _16: ([i8; 8], [usize; 3], bool);
let _17: Adt60;
let _18: *mut *const i128;
let _19: ([bool; 5],);
let _20: bool;
let _21: isize;
let _22: u32;
let _23: bool;
let _24: f64;
let _25: [usize; 3];
let _26: [i128; 1];
let _27: ([i8; 8], [usize; 3], bool);
let _28: isize;
let _29: Adt51;
let _30: (u8, usize, i16, u32);
let _31: [bool; 5];
let _32: ((i64, [bool; 5]), ([bool; 5],));
let _33: ([bool; 5],);
let _34: f32;
let _35: isize;
let _36: i32;
let _37: usize;
let _38: char;
let _39: isize;
let _40: Adt60;
let _41: char;
let _42: *const *mut ([bool; 5],);
let _43: Adt62;
let _44: isize;
let _45: (i64, [bool; 5]);
let _46: Adt56;
let _47: bool;
let _48: Adt65;
let _49: f32;
let _50: *mut *const i128;
let _51: isize;
let _52: Adt49;
let _53: Adt50;
let _54: *mut [usize; 3];
let _55: f32;
let _56: isize;
let _57: isize;
let _58: isize;
let _59: isize;
let _60: *mut [u32; 4];
let _61: [usize; 3];
let _62: *const (u8, usize, i16, u32);
let _63: ();
let _64: ();
{
_14 = _1.1 as i64;
_9 = _8 >> _5.0;
_1.0 = _2.1;
_5 = (_15, _2.1);
_5.1 = [false,true,true,true,true];
_2.0 = !_9;
_5 = (_7, _2.1);
_14 = 115385652924980658616365827961164418096_i128 as i64;
_4 = _5.0 * _13;
_16.0 = [(-56_i8),(-71_i8),59_i8,74_i8,(-9_i8),(-114_i8),54_i8,(-71_i8)];
_15 = -_4;
RET = [_1.1,_1.1,_1.1];
_13 = -_7;
RET = [_1.1,_1.1,_1.1];
_16.2 = !false;
_3 = _5;
_3.0 = _5.0;
Goto(bb1)
}
bb1 = {
_5.0 = _13;
_3.1 = _2.1;
_16.1 = [_1.1,_1.1,_1.1];
_4 = _6 >> _9;
_13 = 1_u8 as i64;
_10 = [8_u8,130_u8,206_u8,123_u8,144_u8,240_u8,207_u8,55_u8];
_2.1 = [_16.2,_16.2,_16.2,_16.2,_16.2];
_3.1 = [_16.2,_16.2,_16.2,_16.2,_16.2];
_21 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3.0 = _5.0 * _9;
_1.2 = _10;
_6 = -_2.0;
Goto(bb2)
}
bb2 = {
_22 = 223628299_u32 << _5.0;
_24 = 4252062875741634334_u64 as f64;
_20 = _16.2 & _16.2;
_2.1 = _3.1;
_3.0 = !_5.0;
_11 = _4 * _6;
_16.2 = _5.0 <= _5.0;
_6 = _5.0 | _8;
_2 = (_12, _5.1);
_10 = _1.2;
_27 = (_16.0, RET, _16.2);
_3.0 = -_12;
_22 = !2350404579_u32;
_16.2 = _27.2;
_26 = [(-77525697829939413875264139286754548658_i128)];
Goto(bb3)
}
bb3 = {
RET = [_1.1,_1.1,_1.1];
_12 = -_6;
_15 = _7 << _5.0;
_7 = 165716856551227485369959395682527416038_u128 as i64;
_28 = -_21;
_27.1 = [_1.1,_1.1,_1.1];
_19 = (_3.1,);
_23 = !_16.2;
_8 = 307495313754585059670403932108321619796_u128 as i64;
_31 = _3.1;
_6 = _3.0;
Goto(bb4)
}
bb4 = {
_15 = !_12;
_12 = _15;
_30.2 = -(-28135_i16);
_19 = (_5.1,);
_21 = !_28;
_21 = _28;
_16.0 = _27.0;
_35 = _28 >> _2.0;
_5 = (_6, _19.0);
_5 = (_4, _19.0);
_28 = -_35;
_19 = (_31,);
_24 = _1.1 as f64;
_32.0.1 = _1.0;
_5.0 = -_12;
_12 = _4;
_37 = _22 as usize;
Goto(bb5)
}
bb5 = {
_30 = (169_u8, _1.1, (-26760_i16), _22);
_36 = 615912533_i32 - (-1861571415_i32);
_32.0.1 = _19.0;
_32.0 = _3;
match _30.2 {
0 => bb4,
1 => bb2,
340282366920938463463374607431768184696 => bb7,
_ => bb6
}
}
bb6 = {
RET = [_1.1,_1.1,_1.1];
_12 = -_6;
_15 = _7 << _5.0;
_7 = 165716856551227485369959395682527416038_u128 as i64;
_28 = -_21;
_27.1 = [_1.1,_1.1,_1.1];
_19 = (_3.1,);
_23 = !_16.2;
_8 = 307495313754585059670403932108321619796_u128 as i64;
_31 = _3.1;
_6 = _3.0;
Goto(bb4)
}
bb7 = {
_32.0.0 = _2.0;
_37 = _30.1 ^ _30.1;
_2 = _3;
_32.1.0 = [_23,_23,_23,_16.2,_23];
_8 = _3.0 - _9;
_23 = _27.2;
_32.0.0 = _3.0 | _12;
_15 = 2614300230608575081_u64 as i64;
_30.0 = 58_u8 << _35;
_1 = (_32.1.0, _37, _10);
Goto(bb8)
}
bb8 = {
_34 = _24 as f32;
_14 = _30.3 as i64;
_9 = _13 | _5.0;
_23 = _27.2 & _27.2;
_16.1 = RET;
_39 = _35 - _35;
_27 = (_16.0, _16.1, _16.2);
_26 = [39573229142639934975822654077788726055_i128];
_6 = 136748585028307232639942020370916728607_i128 as i64;
_31 = _1.0;
_38 = '\u{a5a21}';
_16.2 = _27.2;
_35 = _28;
_14 = 15105030679115546751_u64 as i64;
_45 = (_32.0.0, _32.1.0);
_9 = -_5.0;
_25 = [_1.1,_1.1,_30.1];
_34 = 3740_u16 as f32;
_28 = _39 << _45.0;
_32 = (_5, _19);
match _30.2 {
340282366920938463463374607431768184696 => bb9,
_ => bb7
}
}
bb9 = {
_39 = _35 * _35;
_45.1 = _31;
_5.1 = [_23,_27.2,_23,_27.2,_23];
_27.1 = [_30.1,_1.1,_30.1];
_2.0 = -_9;
_45.0 = _11 >> _35;
_34 = 81821935315312159910463142603461874851_i128 as f32;
_8 = (-111_i8) as i64;
_26 = [138406672028849770856694327893226835402_i128];
_30.2 = 17613_i16 << _30.0;
_21 = -_28;
_32.0.0 = _3.0 + _4;
_44 = _39;
_32.0 = (_5.0, _5.1);
Goto(bb10)
}
bb10 = {
_19.0 = _1.0;
_2.0 = _24 as i64;
_5.0 = _35 as i64;
_47 = _12 >= _45.0;
_33 = (_19.0,);
_4 = _11 << _9;
_51 = _35 ^ _39;
_45.1 = [_47,_23,_16.2,_27.2,_47];
RET = [_1.1,_30.1,_1.1];
Goto(bb11)
}
bb11 = {
_44 = -_39;
_45.1 = [_27.2,_27.2,_23,_27.2,_47];
_53.fld1.2 = 59986_u16 + 18940_u16;
_53.fld4 = [3784188252424452427_u64,18354186893126086344_u64,13443436600926669665_u64,9115545214108959823_u64];
_51 = _39 ^ _44;
_16.0 = _27.0;
_53.fld1.0 = _37;
_8 = _3.0 ^ _11;
_56 = _21 << _32.0.0;
_20 = _27.2;
_32.0.0 = (-26394582630080042405507955256998350314_i128) as i64;
_57 = _28 << _8;
_28 = _21;
_49 = _34;
_16.0 = [(-57_i8),(-68_i8),(-37_i8),(-73_i8),39_i8,(-99_i8),(-60_i8),19_i8];
_55 = -_49;
_3.0 = -_8;
_27.1 = [_1.1,_1.1,_37];
_1.2 = [_30.0,_30.0,_30.0,_30.0,_30.0,_30.0,_30.0,_30.0];
_32.0.1 = [_23,_47,_20,_23,_47];
_1.2 = [_30.0,_30.0,_30.0,_30.0,_30.0,_30.0,_30.0,_30.0];
Goto(bb12)
}
bb12 = {
_35 = _28 | _56;
_23 = _12 >= _3.0;
_1.1 = 39348559075355921943925080569502714578_i128 as usize;
_59 = -_57;
_7 = 8963525685647491074_u64 as i64;
Goto(bb13)
}
bb13 = {
_56 = _12 as isize;
_35 = _44 & _28;
Goto(bb14)
}
bb14 = {
_1.2 = _10;
_61 = [_37,_1.1,_37];
_7 = _38 as i64;
Goto(bb15)
}
bb15 = {
Call(_63 = dump_var(19_usize, 26_usize, Move(_26), 23_usize, Move(_23), 27_usize, Move(_27), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_63 = dump_var(19_usize, 38_usize, Move(_38), 16_usize, Move(_16), 6_usize, Move(_6), 56_usize, Move(_56)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_63 = dump_var(19_usize, 2_usize, Move(_2), 22_usize, Move(_22), 47_usize, Move(_47), 9_usize, Move(_9)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_63 = dump_var(19_usize, 15_usize, Move(_15), 28_usize, Move(_28), 5_usize, Move(_5), 51_usize, Move(_51)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_63 = dump_var(19_usize, 20_usize, Move(_20), 59_usize, Move(_59), 3_usize, Move(_3), 19_usize, Move(_19)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_63 = dump_var(19_usize, 12_usize, Move(_12), 64_usize, _64, 64_usize, _64, 64_usize, _64), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{fbcab}'));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: isize,

},
Variant1{
fld0: *const i8,
fld1: [bool; 4],
fld2: i128,

},
Variant2{
fld0: [i128; 1],
fld1: char,
fld2: usize,
fld3: i8,
fld4: [u64; 4],
fld5: u32,

},
Variant3{
fld0: [bool; 4],
fld1: *mut ([bool; 5],),
fld2: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128),
fld3: ([i8; 8], [usize; 3], bool),
fld4: *mut [u32; 4],
fld5: *mut char,
fld6: u32,
fld7: *mut *const i128,

}}
#[derive(Debug)]
pub struct Adt50 {
fld0: u8,
fld1: (usize, char, u16, usize),
fld2: *const [i64; 5],
fld3: i8,
fld4: [u64; 4],
fld5: [u32; 4],
fld6: *const (u8, usize, i16, u32),
}
#[derive(Debug,Copy,Clone)]
pub enum Adt51 {
Variant0{
fld0: *const [i64; 5],

},
Variant1{
fld0: *mut ([bool; 5],),

}}
#[derive(Debug)]
pub struct Adt52 {
fld0: *const *mut *mut [usize; 3],
fld1: (u8, usize, i16, u32),
fld2: *mut char,
fld3: i64,
}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: f32,
fld1: *const (u8, usize, i16, u32),
fld2: Adt52,
fld3: *mut [usize; 3],

},
Variant1{
fld0: [i128; 1],
fld1: *const i8,
fld2: *mut *const i128,
fld3: u16,

},
Variant2{
fld0: *mut [u32; 4],
fld1: [i8; 8],

},
Variant3{
fld0: usize,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: i8,
fld1: [u8; 8],

},
Variant1{
fld0: [u64; 4],
fld1: [i128; 1],
fld2: isize,
fld3: *mut ([bool; 5],),
fld4: *mut char,
fld5: i32,
fld6: u128,

},
Variant2{
fld0: [bool; 4],
fld1: [u64; 4],
fld2: (usize, char, u16, usize),
fld3: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128),
fld4: u64,

},
Variant3{
fld0: u16,
fld1: Adt52,

}}
#[derive(Debug)]
pub enum Adt55 {
Variant0{
fld0: u32,

},
Variant1{
fld0: Adt53,
fld1: [bool; 5],
fld2: [u32; 4],
fld3: *const i8,
fld4: *mut [usize; 3],
fld5: u64,

},
Variant2{
fld0: [bool; 4],
fld1: i8,

},
Variant3{
fld0: *mut ([bool; 5],),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt56 {
Variant0{
fld0: *const *mut ([bool; 5],),
fld1: u16,
fld2: Adt49,
fld3: f32,
fld4: [u8; 8],

},
Variant1{
fld0: Adt51,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: [usize; 3],
fld1: char,
fld2: isize,
fld3: [i8; 8],
fld4: Adt54,

},
Variant1{
fld0: ([bool; 5], usize, [u8; 8]),
fld1: [bool; 4],
fld2: (u8, *const (u8, usize, i16, u32), usize, i16),
fld3: [i64; 5],
fld4: i16,
fld5: ((i64, [bool; 5]), ([bool; 5],)),

},
Variant2{
fld0: *const i8,
fld1: [u64; 4],
fld2: Adt50,
fld3: i128,
fld4: [u8; 8],
fld5: i32,
fld6: [bool; 4],

},
Variant3{
fld0: *const i128,
fld1: u16,
fld2: *const *mut ([bool; 5],),
fld3: [u64; 4],
fld4: (u8, *const (u8, usize, i16, u32), usize, i16),
fld5: u8,
fld6: ([bool; 5], usize, [u8; 8]),
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: *mut ([bool; 5],),
fld1: [usize; 3],

},
Variant1{
fld0: i128,
fld1: ((i64, [bool; 5]), ([bool; 5],)),
fld2: Adt57,
fld3: *mut char,
fld4: i16,
fld5: i32,

},
Variant2{
fld0: ([bool; 5], usize, [u8; 8]),
fld1: [bool; 5],
fld2: (i64, [bool; 5]),
fld3: ([i8; 8], [usize; 3], bool),
fld4: (u8, *const (u8, usize, i16, u32), usize, i16),
fld5: i32,
fld6: *const i128,

},
Variant3{
fld0: [usize; 3],
fld1: *const i8,
fld2: Adt55,
fld3: *mut [usize; 3],
fld4: *mut [u32; 4],
fld5: [i128; 1],

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: ([bool; 5],),
fld1: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128),
fld2: isize,
fld3: *mut [u32; 4],
fld4: [i128; 1],

},
Variant1{
fld0: [i64; 5],

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: u16,
fld1: ((i64, [bool; 5]), ([bool; 5],)),
fld2: Adt57,

},
Variant1{
fld0: *const i128,
fld1: Adt55,
fld2: isize,
fld3: ([bool; 5], usize, [u8; 8]),
fld4: Adt50,
fld5: [u64; 4],
fld6: Adt49,

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: [u64; 4],
fld1: *mut *const i128,
fld2: u128,
fld3: *const *mut *mut [usize; 3],
fld4: [bool; 5],
fld5: *mut *mut [usize; 3],

},
Variant1{
fld0: i64,
fld1: *const *mut *mut [usize; 3],
fld2: [u32; 4],

},
Variant2{
fld0: [u32; 4],
fld1: ((u8, usize, i16, u32),),
fld2: ([bool; 5], usize, [u8; 8]),
fld3: Adt59,
fld4: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128),
fld5: *const [i64; 5],
fld6: *mut char,
fld7: u16,

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: Adt58,
fld1: (u8, *const (u8, usize, i16, u32), usize, i16),
fld2: *mut char,
fld3: *const i8,

},
Variant1{
fld0: ((u8, usize, i16, u32),),
fld1: Adt50,
fld2: u64,
fld3: *mut char,
fld4: i16,

},
Variant2{
fld0: i128,
fld1: Adt55,
fld2: Adt61,
fld3: *mut *mut [usize; 3],

}}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: f32,
fld1: *const i128,
fld2: i32,
fld3: *const [i64; 5],
fld4: (u8, *const (u8, usize, i16, u32), usize, i16),

},
Variant1{
fld0: f32,
fld1: ([bool; 5],),
fld2: ((i64, [bool; 5]), ([bool; 5],)),
fld3: ([i8; 8], [usize; 3], bool),

},
Variant2{
fld0: Adt53,
fld1: (u8, *const (u8, usize, i16, u32), usize, i16),
fld2: *mut *mut [usize; 3],
fld3: u16,

},
Variant3{
fld0: bool,
fld1: u128,
fld2: Adt60,
fld3: [i8; 8],
fld4: *mut char,

}}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: Adt63,
fld1: i64,
fld2: ([bool; 5], usize, [u8; 8]),
fld3: ((i64, [bool; 5]), ([bool; 5],)),
fld4: [i8; 8],
fld5: *const i8,

},
Variant1{
fld0: [i64; 5],
fld1: f64,
fld2: Adt50,
fld3: ([i8; 8], [usize; 3], bool),
fld4: [u32; 4],
fld5: Adt62,
fld6: *mut ([bool; 5],),

},
Variant2{
fld0: [i64; 5],

},
Variant3{
fld0: Adt49,

}}
#[derive(Debug)]
pub enum Adt65 {
Variant0{
fld0: Adt50,

},
Variant1{
fld0: ((i64, [bool; 5]), *const (u8, usize, i16, u32), *mut *const i128),
fld1: ([i8; 8], [usize; 3], bool),
fld2: isize,
fld3: Adt55,

},
Variant2{
fld0: *const [i64; 5],
fld1: ([bool; 5],),
fld2: Adt54,
fld3: i8,
fld4: [u32; 4],
fld5: [bool; 5],
fld6: Adt61,
fld7: *const *mut *mut [usize; 3],

},
Variant3{
fld0: (u8, usize, i16, u32),
fld1: [u64; 4],

}}

