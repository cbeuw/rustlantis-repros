#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i128,mut _2: u32,mut _3: isize,mut _4: i8,mut _5: u64,mut _6: i32,mut _7: i64) -> isize {
mir! {
type RET = isize;
let _8: ([i32; 4], u8);
let _9: [bool; 5];
let _10: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _11: f64;
let _12: [u32; 7];
let _13: Adt49;
let _14: ([i32; 2], i16, [i32; 4]);
let _15: Adt59;
let _16: Adt52;
let _17: ([i32; 4], u8);
let _18: *const *const isize;
let _19: [usize; 6];
let _20: i128;
let _21: f32;
let _22: f32;
let _23: bool;
let _24: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _25: u64;
let _26: isize;
let _27: f64;
let _28: ([i64; 4], (i32, f64), u32);
let _29: isize;
let _30: i64;
let _31: u32;
let _32: Adt54;
let _33: isize;
let _34: [isize; 1];
let _35: [i16; 2];
let _36: [i16; 2];
let _37: i128;
let _38: isize;
let _39: i32;
let _40: Adt56;
let _41: [u32; 7];
let _42: f64;
let _43: char;
let _44: Adt60;
let _45: u32;
let _46: isize;
let _47: f32;
let _48: ();
let _49: ();
{
_7 = 5408709928692166182_i64;
_4 = (-72_i8) - (-16_i8);
_6 = (-1615585718_i32);
_6 = -1248152185_i32;
RET = (-9223372036854775808_isize);
_1 = (-67002455499935425473585414726264497171_i128);
_3 = _7 as isize;
_2 = !849125123_u32;
RET = _3 << _3;
RET = '\u{2ce9b}' as isize;
_2 = !3114487499_u32;
_9 = [false,true,false,true,true];
_8.0 = [_6,_6,_6,_6];
_10.0.0 = [_6,_6,_6,_6];
_10.1 = '\u{9b22a}';
_5 = !15289595187422138355_u64;
Goto(bb1)
}
bb1 = {
_10.1 = '\u{961ec}';
RET = _3;
_13.fld4.2.1 = 5_usize as f64;
_3 = 55_u8 as isize;
_13.fld4.1.1 = _4 | _4;
_13.fld4.1.0 = _10.1;
_13.fld4.1.1 = _4;
_4 = _13.fld4.1.1;
_13.fld4.3 = [7_usize,3_usize,6_usize,2664834126263109554_usize,1_usize,18119389418092673924_usize];
_14.1 = false as i16;
_5 = 6095002812637288657_u64 - 14975124784992009267_u64;
_11 = _13.fld4.2.1 + _13.fld4.2.1;
_7 = (-2157748668149545607_i64) * 3185967091737377551_i64;
_10.3 = [_4,_13.fld4.1.1];
_13.fld4.4 = (_8.0, 113_u8);
_13.fld4.1.1 = _4 << _2;
_13.fld0 = [_5,_5];
_13.fld4.4.0 = [_6,_6,_6,_6];
_13.fld5 = _9;
RET = _7 as isize;
Goto(bb2)
}
bb2 = {
_13.fld2 = Adt48::Variant1 { fld0: true };
_8.0 = [_6,_6,_6,_6];
_13.fld4.1 = (_10.1, _4, _13.fld4.4.1);
_5 = 14338829759626961209_u64;
_12 = [_2,_2,_2,_2,_2,_2,_2];
_13.fld4.4 = (_10.0.0, _13.fld4.1.2);
_14.1 = 2217_i16;
_7 = _2 as i64;
_13.fld1 = !14725225447860375809_usize;
_14.2 = [_6,_6,_6,_6];
_15.fld3 = -_4;
_15.fld2 = !9318_u16;
_15.fld1 = _6;
_2 = 1825165008_u32 & 2277170417_u32;
_13.fld4.0 = [_14.1,_14.1,_14.1,_14.1];
_14.0 = [_6,_6];
_14.2 = [_6,_6,_15.fld1,_6];
_10.0.0 = _8.0;
_3 = RET - RET;
_8.1 = _13.fld4.1.2;
_15.fld3 = _13.fld4.1.1;
Goto(bb3)
}
bb3 = {
_1 = -50735824629811050822024909808401089435_i128;
place!(Field::<bool>(Variant(_13.fld2, 1), 0)) = true;
_11 = _13.fld4.2.1 * _13.fld4.2.1;
_13.fld4.1.2 = !_8.1;
Call(_17 = fn1(_2, _7, _13.fld4.4, _3, _13.fld4.1.0, _2, _2, _10.0.0, _13.fld4.3, _1, _13.fld4.1.2, _8.0, Move(_13.fld2), _6), bb4, UnwindUnreachable())
}
bb4 = {
_7 = 8580142169202687565_i64;
_13.fld6 = !_8.1;
_13.fld4.2.1 = _17.1 as f64;
_13.fld4.2.0 = -_15.fld1;
_13.fld4.1 = (_10.1, _4, _13.fld4.4.1);
_2 = 2839890322_u32 + 3668318372_u32;
_10.2 = [_14.1,_14.1,_14.1,_14.1];
_15.fld1 = -_6;
_14.0 = [_6,_6];
_7 = _15.fld3 as i64;
_10.0 = _8;
_13.fld4.2.0 = _13.fld4.1.0 as i32;
_15.fld2 = !18766_u16;
_14.1 = -(-25480_i16);
_14.2 = _17.0;
_13.fld4.2 = (_15.fld1, _11);
_15.fld3 = _4;
_12 = [_2,_2,_2,_2,_2,_2,_2];
_14.2 = _17.0;
_15.fld3 = _4 * _4;
_10.0.1 = _13.fld6 ^ _17.1;
_17 = (_8.0, _13.fld4.1.2);
_8.0 = [_13.fld4.2.0,_6,_6,_13.fld4.2.0];
_2 = !2558785136_u32;
Goto(bb5)
}
bb5 = {
_13.fld0 = [_5,_5];
_15.fld0 = Adt48::Variant1 { fld0: false };
_14.2 = [_6,_13.fld4.2.0,_13.fld4.2.0,_6];
_4 = _15.fld3 >> _17.1;
_13.fld0 = [_5,_5];
_20 = _15.fld3 as i128;
_5 = _3 as u64;
_11 = -_13.fld4.2.1;
_4 = _13.fld4.4.1 as i8;
_13.fld3 = core::ptr::addr_of!(_15.fld2);
place!(Field::<bool>(Variant(_15.fld0, 1), 0)) = false;
_13.fld4.2.1 = _2 as f64;
_14.2 = _13.fld4.4.0;
_13.fld6 = !_17.1;
_1 = _20;
_11 = _13.fld4.2.1;
_20 = _7 as i128;
_13.fld2 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_15.fld0, 1), 0) };
_17.1 = _3 as u8;
_14.0 = [_15.fld1,_6];
RET = _3 * _3;
match _8.1 {
0 => bb3,
113 => bb7,
_ => bb6
}
}
bb6 = {
_10.1 = '\u{961ec}';
RET = _3;
_13.fld4.2.1 = 5_usize as f64;
_3 = 55_u8 as isize;
_13.fld4.1.1 = _4 | _4;
_13.fld4.1.0 = _10.1;
_13.fld4.1.1 = _4;
_4 = _13.fld4.1.1;
_13.fld4.3 = [7_usize,3_usize,6_usize,2664834126263109554_usize,1_usize,18119389418092673924_usize];
_14.1 = false as i16;
_5 = 6095002812637288657_u64 - 14975124784992009267_u64;
_11 = _13.fld4.2.1 + _13.fld4.2.1;
_7 = (-2157748668149545607_i64) * 3185967091737377551_i64;
_10.3 = [_4,_13.fld4.1.1];
_13.fld4.4 = (_8.0, 113_u8);
_13.fld4.1.1 = _4 << _2;
_13.fld0 = [_5,_5];
_13.fld4.4.0 = [_6,_6,_6,_6];
_13.fld5 = _9;
RET = _7 as isize;
Goto(bb2)
}
bb7 = {
_15 = Adt59 { fld0: Move(_13.fld2),fld1: _6,fld2: 39159_u16,fld3: _13.fld4.1.1 };
_5 = 9349082419721451704_u64 * 10327064806215429740_u64;
_4 = _15.fld3;
_13.fld4.2 = (_15.fld1, _11);
_1 = _20 - _20;
_13.fld5 = [Field::<bool>(Variant(_15.fld0, 1), 0),Field::<bool>(Variant(_15.fld0, 1), 0),Field::<bool>(Variant(_15.fld0, 1), 0),Field::<bool>(Variant(_15.fld0, 1), 0),Field::<bool>(Variant(_15.fld0, 1), 0)];
_24.0 = _17;
_20 = _15.fld2 as i128;
_13.fld4.1.1 = _15.fld3 ^ _4;
_13.fld3 = core::ptr::addr_of!(_15.fld2);
RET = _3 >> _1;
_26 = RET & _3;
_13.fld4.0 = _10.2;
_28.2 = _2 & _2;
_28.0 = [_7,_7,_7,_7];
Goto(bb8)
}
bb8 = {
_29 = !_26;
_17.0 = [_15.fld1,_15.fld1,_15.fld1,_6];
_17.1 = !_10.0.1;
_13.fld4.2 = (_15.fld1, _11);
_24.0.1 = _13.fld4.4.1;
_14.1 = _15.fld1 as i16;
_10.1 = _13.fld4.1.0;
_15.fld2 = !4571_u16;
_30 = !_7;
_23 = RET == _26;
_25 = _5 | _5;
_5 = 244476509822660903649444284896767447294_u128 as u64;
_24.3 = [_13.fld4.1.1,_4];
SetDiscriminant(_15.fld0, 2);
_13.fld2 = Adt48::Variant1 { fld0: _23 };
_13.fld4.2 = (_6, _11);
_5 = RET as u64;
_14.2 = _24.0.0;
match _8.1 {
0 => bb5,
1 => bb2,
2 => bb3,
113 => bb9,
_ => bb7
}
}
bb9 = {
_27 = -_11;
_24.3 = [_13.fld4.1.1,_13.fld4.1.1];
_10.3 = [_13.fld4.1.1,_15.fld3];
_10.1 = _13.fld4.1.0;
_28.2 = _15.fld1 as u32;
_36 = [_14.1,_14.1];
_10.3 = [_4,_13.fld4.1.1];
_13.fld4.1 = (_10.1, _15.fld3, _13.fld6);
_13.fld4.1.1 = -_4;
_9 = [_23,_23,Field::<bool>(Variant(_13.fld2, 1), 0),Field::<bool>(Variant(_13.fld2, 1), 0),_23];
_31 = _28.2;
_28.1 = (_13.fld4.2.0, _11);
Call(_14.1 = core::intrinsics::bswap((-2522_i16)), bb10, UnwindUnreachable())
}
bb10 = {
_20 = _1 >> _13.fld4.4.1;
_10.1 = _13.fld4.1.0;
_7 = _30;
SetDiscriminant(_13.fld2, 1);
_29 = _26 ^ _26;
_3 = _29 * _29;
_24.2 = [_14.1,_14.1,_14.1,_14.1];
_14.0 = [_6,_28.1.0];
_13.fld3 = core::ptr::addr_of!(_15.fld2);
_10.0.1 = !_8.1;
_14.1 = 13432_i16 ^ (-12424_i16);
_35 = [_14.1,_14.1];
place!(Field::<*const u16>(Variant(_15.fld0, 2), 0)) = core::ptr::addr_of!(_15.fld2);
_13.fld1 = !5_usize;
_10.3 = [_13.fld4.1.1,_13.fld4.1.1];
_43 = _13.fld4.1.0;
_13.fld4.2.0 = _6 >> _25;
match _24.0.1 {
0 => bb6,
1 => bb7,
2 => bb3,
3 => bb9,
4 => bb11,
5 => bb12,
113 => bb14,
_ => bb13
}
}
bb11 = {
_27 = -_11;
_24.3 = [_13.fld4.1.1,_13.fld4.1.1];
_10.3 = [_13.fld4.1.1,_15.fld3];
_10.1 = _13.fld4.1.0;
_28.2 = _15.fld1 as u32;
_36 = [_14.1,_14.1];
_10.3 = [_4,_13.fld4.1.1];
_13.fld4.1 = (_10.1, _15.fld3, _13.fld6);
_13.fld4.1.1 = -_4;
_9 = [_23,_23,Field::<bool>(Variant(_13.fld2, 1), 0),Field::<bool>(Variant(_13.fld2, 1), 0),_23];
_31 = _28.2;
_28.1 = (_13.fld4.2.0, _11);
Call(_14.1 = core::intrinsics::bswap((-2522_i16)), bb10, UnwindUnreachable())
}
bb12 = {
_13.fld0 = [_5,_5];
_15.fld0 = Adt48::Variant1 { fld0: false };
_14.2 = [_6,_13.fld4.2.0,_13.fld4.2.0,_6];
_4 = _15.fld3 >> _17.1;
_13.fld0 = [_5,_5];
_20 = _15.fld3 as i128;
_5 = _3 as u64;
_11 = -_13.fld4.2.1;
_4 = _13.fld4.4.1 as i8;
_13.fld3 = core::ptr::addr_of!(_15.fld2);
place!(Field::<bool>(Variant(_15.fld0, 1), 0)) = false;
_13.fld4.2.1 = _2 as f64;
_14.2 = _13.fld4.4.0;
_13.fld6 = !_17.1;
_1 = _20;
_11 = _13.fld4.2.1;
_20 = _7 as i128;
_13.fld2 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_15.fld0, 1), 0) };
_17.1 = _3 as u8;
_14.0 = [_15.fld1,_6];
RET = _3 * _3;
match _8.1 {
0 => bb3,
113 => bb7,
_ => bb6
}
}
bb13 = {
_7 = 8580142169202687565_i64;
_13.fld6 = !_8.1;
_13.fld4.2.1 = _17.1 as f64;
_13.fld4.2.0 = -_15.fld1;
_13.fld4.1 = (_10.1, _4, _13.fld4.4.1);
_2 = 2839890322_u32 + 3668318372_u32;
_10.2 = [_14.1,_14.1,_14.1,_14.1];
_15.fld1 = -_6;
_14.0 = [_6,_6];
_7 = _15.fld3 as i64;
_10.0 = _8;
_13.fld4.2.0 = _13.fld4.1.0 as i32;
_15.fld2 = !18766_u16;
_14.1 = -(-25480_i16);
_14.2 = _17.0;
_13.fld4.2 = (_15.fld1, _11);
_15.fld3 = _4;
_12 = [_2,_2,_2,_2,_2,_2,_2];
_14.2 = _17.0;
_15.fld3 = _4 * _4;
_10.0.1 = _13.fld6 ^ _17.1;
_17 = (_8.0, _13.fld4.1.2);
_8.0 = [_13.fld4.2.0,_6,_6,_13.fld4.2.0];
_2 = !2558785136_u32;
Goto(bb5)
}
bb14 = {
_13.fld4.3 = [_13.fld1,_13.fld1,_13.fld1,_13.fld1,_13.fld1,_13.fld1];
_13.fld1 = !8488375838777560338_usize;
_45 = _20 as u32;
_13.fld4.4 = (_24.0.0, _17.1);
_25 = _5;
_12 = [_31,_45,_45,_45,_28.2,_45,_45];
_13.fld0 = [_5,_5];
_43 = _10.1;
_6 = _15.fld1;
_27 = _25 as f64;
Goto(bb15)
}
bb15 = {
Call(_48 = dump_var(0_usize, 14_usize, Move(_14), 31_usize, Move(_31), 1_usize, Move(_1), 29_usize, Move(_29)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_48 = dump_var(0_usize, 2_usize, Move(_2), 26_usize, Move(_26), 8_usize, Move(_8), 43_usize, Move(_43)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_48 = dump_var(0_usize, 20_usize, Move(_20), 25_usize, Move(_25), 12_usize, Move(_12), 7_usize, Move(_7)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u32,mut _2: i64,mut _3: ([i32; 4], u8),mut _4: isize,mut _5: char,mut _6: u32,mut _7: u32,mut _8: [i32; 4],mut _9: [usize; 6],mut _10: i128,mut _11: u8,mut _12: [i32; 4],mut _13: Adt48,mut _14: i32) -> ([i32; 4], u8) {
mir! {
type RET = ([i32; 4], u8);
let _15: char;
let _16: Adt51;
let _17: [u64; 4];
let _18: u8;
let _19: usize;
let _20: f32;
let _21: Adt53;
let _22: isize;
let _23: i32;
let _24: f64;
let _25: f64;
let _26: u16;
let _27: Adt53;
let _28: f32;
let _29: char;
let _30: usize;
let _31: [u32; 7];
let _32: isize;
let _33: Adt57;
let _34: [u64; 4];
let _35: Adt62;
let _36: ();
let _37: ();
{
RET = (_3.0, _3.1);
match _3.1 {
0 => bb1,
1 => bb2,
113 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET.1 = _3.1;
_10 = 2444596989395841503264877150673752897_i128 | (-162373759012468276471732368634931784224_i128);
_2 = !(-890446749999930851_i64);
_6 = _1;
_9 = [1_usize,2_usize,4_usize,11675150418553048321_usize,3_usize,5_usize];
RET = (_12, _3.1);
_3.0 = _8;
_9 = [10913292463855526476_usize,705334929580921481_usize,4121346313534825147_usize,5_usize,7709521977421545074_usize,3444708199693690313_usize];
_3 = (_8, RET.1);
_4 = 9223372036854775807_isize;
_2 = 608573413449761055_i64 << _3.1;
_8 = [_14,_14,_14,_14];
RET = (_12, _3.1);
_1 = _6;
RET = (_3.0, _11);
_3 = (_8, _11);
SetDiscriminant(_13, 0);
_4 = !123_isize;
_13 = Adt48::Variant1 { fld0: false };
_18 = RET.1;
_8 = _3.0;
_14 = _5 as i32;
_9 = [3_usize,1_usize,16535047699641153926_usize,5_usize,0_usize,9256197334398623323_usize];
_1 = !_7;
Call(_3 = fn2(RET.0, RET.1, _9, _9, _9, _4, _8, _9, _10, _18, _2, _18, _6, _9), bb5, UnwindUnreachable())
}
bb5 = {
_17 = [10803733226945922159_u64,13690475852645352887_u64,18039393823277602368_u64,10448665205261878561_u64];
_15 = _5;
RET.0 = [_14,_14,_14,_14];
_1 = 3621352177497588549_u64 as u32;
_19 = !2_usize;
_6 = _19 as u32;
RET.0 = [_14,_14,_14,_14];
_14 = true as i32;
RET = _3;
_18 = RET.1;
RET.0 = [_14,_14,_14,_14];
_18 = 3984_i16 as u8;
_4 = 104_isize;
RET.1 = _11;
_17 = [17841447519677221534_u64,10286023453214713971_u64,283422154232556144_u64,13096451584863249065_u64];
_20 = _6 as f32;
_3 = (RET.0, _11);
_3.1 = !_11;
_22 = _4 | _4;
place!(Field::<bool>(Variant(_13, 1), 0)) = !false;
RET = (_8, _11);
_6 = 56798_u16 as u32;
_8 = _3.0;
RET = _3;
_25 = 16212290407218069570_u64 as f64;
Goto(bb6)
}
bb6 = {
SetDiscriminant(_13, 2);
_3.0 = [_14,_14,_14,_14];
_10 = 74579631459581111959118427809861676013_i128;
_2 = -5432908940113723441_i64;
_8 = _12;
_17 = [3417485407578091962_u64,6195185083884159159_u64,13575339517657537423_u64,17512874982997336863_u64];
RET.0 = _3.0;
_12 = [_14,_14,_14,_14];
Goto(bb7)
}
bb7 = {
RET = (_12, _3.1);
RET.0 = [_14,_14,_14,_14];
place!(Field::<*const u16>(Variant(_13, 2), 0)) = core::ptr::addr_of!(_26);
Goto(bb8)
}
bb8 = {
place!(Field::<*const u16>(Variant(_13, 2), 0)) = core::ptr::addr_of!(_26);
RET.0 = [_14,_14,_14,_14];
_23 = 61836_u16 as i32;
_24 = _25;
_13 = Adt48::Variant1 { fld0: false };
place!(Field::<bool>(Variant(_13, 1), 0)) = !true;
_1 = _7 ^ _7;
SetDiscriminant(_13, 2);
_3.0 = RET.0;
_17 = [15219015444384507258_u64,9306809685002846096_u64,8427746247645310954_u64,14335949976763016794_u64];
_3 = (_12, RET.1);
_28 = _20;
_3 = RET;
RET.0 = _12;
_12 = _8;
RET.1 = false as u8;
_28 = _20 - _20;
_4 = 54_i8 as isize;
_4 = _7 as isize;
_25 = _24 + _24;
place!(Field::<*const u16>(Variant(_13, 2), 0)) = core::ptr::addr_of!(_26);
match _10 {
74579631459581111959118427809861676013 => bb9,
_ => bb5
}
}
bb9 = {
_26 = !1391_u16;
RET.1 = _3.1 << _23;
_26 = 25273_u16;
_29 = _5;
place!(Field::<[isize; 1]>(Variant(_13, 2), 1)) = [_4];
_4 = -_22;
_14 = _23;
_18 = 265356189135827201210457604820290681629_u128 as u8;
_14 = _23;
_9 = [_19,_19,_19,_19,_19,_19];
_22 = _4 - _4;
SetDiscriminant(_13, 0);
RET = _3;
place!(Field::<([i32; 4], u8)>(Variant(_13, 0), 0)) = (_8, _18);
_3.0 = [_14,_14,_23,_14];
_30 = 105_i8 as usize;
match _26 {
0 => bb10,
1 => bb11,
2 => bb12,
25273 => bb14,
_ => bb13
}
}
bb10 = {
Return()
}
bb11 = {
RET.1 = _3.1;
_10 = 2444596989395841503264877150673752897_i128 | (-162373759012468276471732368634931784224_i128);
_2 = !(-890446749999930851_i64);
_6 = _1;
_9 = [1_usize,2_usize,4_usize,11675150418553048321_usize,3_usize,5_usize];
RET = (_12, _3.1);
_3.0 = _8;
_9 = [10913292463855526476_usize,705334929580921481_usize,4121346313534825147_usize,5_usize,7709521977421545074_usize,3444708199693690313_usize];
_3 = (_8, RET.1);
_4 = 9223372036854775807_isize;
_2 = 608573413449761055_i64 << _3.1;
_8 = [_14,_14,_14,_14];
RET = (_12, _3.1);
_1 = _6;
RET = (_3.0, _11);
_3 = (_8, _11);
SetDiscriminant(_13, 0);
_4 = !123_isize;
_13 = Adt48::Variant1 { fld0: false };
_18 = RET.1;
_8 = _3.0;
_14 = _5 as i32;
_9 = [3_usize,1_usize,16535047699641153926_usize,5_usize,0_usize,9256197334398623323_usize];
_1 = !_7;
Call(_3 = fn2(RET.0, RET.1, _9, _9, _9, _4, _8, _9, _10, _18, _2, _18, _6, _9), bb5, UnwindUnreachable())
}
bb12 = {
SetDiscriminant(_13, 2);
_3.0 = [_14,_14,_14,_14];
_10 = 74579631459581111959118427809861676013_i128;
_2 = -5432908940113723441_i64;
_8 = _12;
_17 = [3417485407578091962_u64,6195185083884159159_u64,13575339517657537423_u64,17512874982997336863_u64];
RET.0 = _3.0;
_12 = [_14,_14,_14,_14];
Goto(bb7)
}
bb13 = {
_17 = [10803733226945922159_u64,13690475852645352887_u64,18039393823277602368_u64,10448665205261878561_u64];
_15 = _5;
RET.0 = [_14,_14,_14,_14];
_1 = 3621352177497588549_u64 as u32;
_19 = !2_usize;
_6 = _19 as u32;
RET.0 = [_14,_14,_14,_14];
_14 = true as i32;
RET = _3;
_18 = RET.1;
RET.0 = [_14,_14,_14,_14];
_18 = 3984_i16 as u8;
_4 = 104_isize;
RET.1 = _11;
_17 = [17841447519677221534_u64,10286023453214713971_u64,283422154232556144_u64,13096451584863249065_u64];
_20 = _6 as f32;
_3 = (RET.0, _11);
_3.1 = !_11;
_22 = _4 | _4;
place!(Field::<bool>(Variant(_13, 1), 0)) = !false;
RET = (_8, _11);
_6 = 56798_u16 as u32;
_8 = _3.0;
RET = _3;
_25 = 16212290407218069570_u64 as f64;
Goto(bb6)
}
bb14 = {
_32 = !_4;
_22 = -_4;
_31 = [_1,_1,_1,_7,_6,_1,_1];
_7 = !_1;
RET = _3;
_6 = _7;
_35.fld0 = [8144121831036436432_u64,6748860042671330571_u64];
_22 = (-102_i8) as isize;
_24 = _25 + _25;
place!(Field::<([i32; 4], u8)>(Variant(_13, 0), 0)).1 = _18 - RET.1;
_31 = [_6,_1,_6,_6,_1,_6,_6];
_25 = _30 as f64;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(1_usize, 1_usize, Move(_1), 32_usize, Move(_32), 30_usize, Move(_30), 2_usize, Move(_2)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(1_usize, 11_usize, Move(_11), 15_usize, Move(_15), 6_usize, Move(_6), 3_usize, Move(_3)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(1_usize, 7_usize, Move(_7), 17_usize, Move(_17), 10_usize, Move(_10), 4_usize, Move(_4)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [i32; 4],mut _2: u8,mut _3: [usize; 6],mut _4: [usize; 6],mut _5: [usize; 6],mut _6: isize,mut _7: [i32; 4],mut _8: [usize; 6],mut _9: i128,mut _10: u8,mut _11: i64,mut _12: u8,mut _13: u32,mut _14: [usize; 6]) -> ([i32; 4], u8) {
mir! {
type RET = ([i32; 4], u8);
let _15: isize;
let _16: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _17: (f32, [u32; 7], i128);
let _18: bool;
let _19: f64;
let _20: [i32; 2];
let _21: [i16; 3];
let _22: u16;
let _23: [usize; 6];
let _24: i128;
let _25: Adt60;
let _26: [i64; 7];
let _27: (char, i8, u8);
let _28: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _29: f64;
let _30: Adt49;
let _31: isize;
let _32: [i8; 2];
let _33: Adt57;
let _34: [i16; 2];
let _35: Adt51;
let _36: u16;
let _37: i8;
let _38: Adt61;
let _39: [bool; 6];
let _40: u16;
let _41: f32;
let _42: i64;
let _43: Adt52;
let _44: u64;
let _45: isize;
let _46: ();
let _47: ();
{
RET.1 = _2 ^ _10;
RET.0 = _7;
_16.2.0 = -(-1357556935_i32);
_16.1.1 = (-75_i8);
_4 = [18392712072743169195_usize,5_usize,5804588833888715674_usize,3_usize,1717867333692966005_usize,16498350571469804294_usize];
_16.1.1 = 20_i8;
_5 = _4;
_8 = _3;
_16.4 = (_1, _12);
_16.2.1 = 186740649817826028266497727335262405017_u128 as f64;
_16.1.2 = _16.2.1 as u8;
_7 = [_16.2.0,_16.2.0,_16.2.0,_16.2.0];
_17.1 = [_13,_13,_13,_13,_13,_13,_13];
RET = _16.4;
_17.2 = _9 ^ _9;
RET = _16.4;
_6 = _2 as isize;
match _16.1.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
20 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_9 = _17.2 >> _13;
RET = (_1, _16.4.1);
_16.1.2 = _16.4.1 ^ RET.1;
_10 = _16.1.2 ^ _12;
_4 = _5;
_24 = !_9;
_18 = !true;
_17.2 = _24;
_17.0 = 154750703956731050132818004152673881531_u128 as f32;
_25.fld2 = core::ptr::addr_of!(_15);
_4 = [4608392861335847418_usize,5_usize,3_usize,2_usize,10863777034352917691_usize,6_usize];
Call(_11 = core::intrinsics::transmute(_6), bb7, UnwindUnreachable())
}
bb7 = {
_8 = [7_usize,3_usize,5153911215332141230_usize,3307985194225190773_usize,4614177985453004763_usize,14262942936397072822_usize];
Goto(bb8)
}
bb8 = {
_14 = [7616314142449543536_usize,7841375171337240409_usize,7306995357721208584_usize,2_usize,18166869921721471301_usize,0_usize];
RET.1 = _6 as u8;
_27.0 = '\u{3103f}';
_16.1.0 = _27.0;
_28.1.2 = _16.1.2;
_25.fld5 = [_16.1.1,_16.1.1];
_17.0 = _16.2.1 as f32;
_28.1.1 = !_16.1.1;
Goto(bb9)
}
bb9 = {
_25.fld0 = [9976_u16,50933_u16,19850_u16];
_23 = [2_usize,14655987010623976883_usize,3_usize,6_usize,4_usize,12396622742466942634_usize];
_13 = !1261227241_u32;
_25.fld1.0 = !_16.2.0;
Call(_21 = core::intrinsics::transmute(_25.fld0), bb10, UnwindUnreachable())
}
bb10 = {
_16.1.1 = _16.2.1 as i8;
_16.0 = [(-21752_i16),(-9276_i16),12647_i16,(-13463_i16)];
_30.fld4.3 = _8;
_28.1.0 = _16.1.0;
_28.0 = _16.0;
_30.fld0 = [4321747356406219711_u64,12390817442708239442_u64];
_30.fld4.4.0 = [_25.fld1.0,_25.fld1.0,_16.2.0,_25.fld1.0];
_10 = _17.0 as u8;
_28.3 = _23;
_16.2.1 = _11 as f64;
_30.fld4.2.1 = _16.2.1 * _16.2.1;
_20 = [_16.2.0,_25.fld1.0];
_25.fld3 = (_20, (-9038_i16), _16.4.0);
_28.1.2 = RET.1 + _2;
_16.1.1 = _28.1.1;
_16.3 = _3;
_4 = _23;
_26 = [_11,_11,_11,_11,_11,_11,_11];
match _25.fld3.1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb5,
5 => bb8,
340282366920938463463374607431768202418 => bb11,
_ => bb7
}
}
bb11 = {
_11 = _9 as i64;
_30.fld1 = 1_usize | 12809672555150310511_usize;
_16.3 = _14;
Goto(bb12)
}
bb12 = {
_28.1.1 = _30.fld4.2.1 as i8;
_16.4.1 = _2 >> _30.fld1;
_13 = 12414505796571104137_u64 as u32;
_30.fld4.1.0 = _16.1.0;
_16.4 = (_30.fld4.4.0, _12);
_30.fld6 = _12;
_23 = [_30.fld1,_30.fld1,_30.fld1,_30.fld1,_30.fld1,_30.fld1];
Call(_25.fld3.0 = fn3(_28.1, _24, _30.fld4.2.1, RET, _24, _25.fld3.1, _16.4, _30.fld4.3, _30.fld0), bb13, UnwindUnreachable())
}
bb13 = {
_31 = _30.fld4.1.0 as isize;
_13 = !322528714_u32;
_28.2 = (_25.fld1.0, _30.fld4.2.1);
_8 = _14;
_28.4.1 = !RET.1;
_29 = -_28.2.1;
_26 = [_11,_11,_11,_11,_11,_11,_11];
_16.4.1 = _28.4.1 ^ RET.1;
_27.2 = !_16.1.2;
_32 = [_16.1.1,_16.1.1];
_6 = _18 as isize;
_28.2.0 = _16.2.0 - _25.fld1.0;
_26 = [_11,_11,_11,_11,_11,_11,_11];
_16.3 = _14;
Goto(bb14)
}
bb14 = {
_30.fld4.2.0 = _11 as i32;
_10 = _2 >> _25.fld3.1;
_30.fld4.1.1 = 3470265780161520186_u64 as i8;
_16.3 = [_30.fld1,_30.fld1,_30.fld1,_30.fld1,_30.fld1,_30.fld1];
_24 = -_9;
_16.2.0 = _30.fld4.2.0 >> _10;
_30.fld4.2.0 = _28.2.0 << _10;
_17.1 = [_13,_13,_13,_13,_13,_13,_13];
_30.fld3 = core::ptr::addr_of!(_36);
Goto(bb15)
}
bb15 = {
Call(_46 = dump_var(2_usize, 9_usize, Move(_9), 1_usize, Move(_1), 5_usize, Move(_5), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_46 = dump_var(2_usize, 7_usize, Move(_7), 26_usize, Move(_26), 11_usize, Move(_11), 2_usize, Move(_2)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_46 = dump_var(2_usize, 13_usize, Move(_13), 14_usize, Move(_14), 18_usize, Move(_18), 47_usize, _47), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: (char, i8, u8),mut _2: i128,mut _3: f64,mut _4: ([i32; 4], u8),mut _5: i128,mut _6: i16,mut _7: ([i32; 4], u8),mut _8: [usize; 6],mut _9: [u64; 2]) -> [i32; 2] {
mir! {
type RET = [i32; 2];
let _10: f32;
let _11: Adt62;
let _12: [bool; 5];
let _13: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _14: [u32; 7];
let _15: [bool; 5];
let _16: (i32, f64);
let _17: (char, i8, u8);
let _18: *const bool;
let _19: [bool; 6];
let _20: bool;
let _21: [i32; 2];
let _22: [u64; 4];
let _23: i128;
let _24: [i16; 2];
let _25: i128;
let _26: (char, i8, u8);
let _27: [u64; 2];
let _28: char;
let _29: *mut [i8; 2];
let _30: i128;
let _31: i128;
let _32: f32;
let _33: [i32; 4];
let _34: Adt50;
let _35: u128;
let _36: i128;
let _37: [usize; 6];
let _38: Adt54;
let _39: ();
let _40: ();
{
_1.1 = 19_i8 | 16_i8;
_1.0 = '\u{2267b}';
_2 = !_5;
Call(_6 = fn4(_5, _4.1, _4.1, _5, _5, _2, _3, _1.1, _5, _3, _5, _2, _8, _4, _1, _7), bb1, UnwindUnreachable())
}
bb1 = {
RET = [412300431_i32,485515902_i32];
_7.0 = _4.0;
_7 = (_4.0, _1.2);
_8 = [0_usize,14195190135187813138_usize,5973404849636908567_usize,8460907474836633377_usize,8317365198873179510_usize,15169653839420972598_usize];
_6 = 5107261736948005140_usize as i16;
_3 = 9223372036854775807_isize as f64;
Goto(bb2)
}
bb2 = {
_2 = _5 | _5;
_7.0 = _4.0;
Call(_5 = core::intrinsics::transmute(_2), bb3, UnwindUnreachable())
}
bb3 = {
_4.1 = true as u8;
_1.1 = _1.0 as i8;
_1.0 = '\u{47d59}';
_3 = 64966872_u32 as f64;
_2 = _5;
_4 = (_7.0, _7.1);
RET = [(-1740015802_i32),1878871806_i32];
_7 = (_4.0, _1.2);
_9 = [13592849435351264431_u64,12848295748803651323_u64];
_6 = (-16013_i16) ^ (-732_i16);
_7.0 = [(-1565417146_i32),(-214770943_i32),2057242646_i32,(-327966863_i32)];
RET = [(-997591293_i32),1505927347_i32];
_10 = 312314696958163466648567377549343454487_u128 as f32;
_5 = _2;
_1.0 = '\u{1d9a0}';
_11.fld0 = [6826789894166011785_u64,16946954444526100495_u64];
_13.3 = _8;
Goto(bb4)
}
bb4 = {
_13.4.1 = !_7.1;
_13.4.0 = [(-602024819_i32),(-1015275057_i32),1845699171_i32,761704338_i32];
_1 = ('\u{1b4dc}', 41_i8, _13.4.1);
_7 = (_13.4.0, _1.2);
_12 = [false,false,true,true,true];
_10 = 9223372036854775807_isize as f32;
_1.1 = (-106_i8) | 37_i8;
_11 = Adt62 { fld0: _9 };
Goto(bb5)
}
bb5 = {
_13.2.1 = _3;
_4.0 = [(-1776639358_i32),(-1970709019_i32),349853588_i32,(-854165619_i32)];
_8 = _13.3;
_10 = 1331235735_u32 as f32;
_4 = (_7.0, _13.4.1);
RET = [(-787517562_i32),1970030031_i32];
_1.1 = !66_i8;
RET = [1153969867_i32,(-578743427_i32)];
_14 = [3590602142_u32,2636098324_u32,300788584_u32,3580467755_u32,987851419_u32,309041472_u32,4293948226_u32];
_13.4.1 = _1.2 << _5;
_13.4 = (_7.0, _4.1);
_13.4.0 = [(-1437012252_i32),(-158158899_i32),1955194821_i32,1167145559_i32];
_7.0 = [1140933326_i32,1677629039_i32,(-350300755_i32),743014706_i32];
_13.0 = [_6,_6,_6,_6];
_5 = _2 ^ _2;
_13.1 = _1;
_11 = Adt62 { fld0: _9 };
_13.3 = _8;
_17 = _13.1;
_13.1.2 = 6921902748538122337_i64 as u8;
_13.2 = (636257108_i32, _3);
_3 = _13.2.1 + _13.2.1;
Call(_17.2 = fn9(_17.0, _13, _10, _5, _11, _14, _13.1.0, _13.3, _4, _1.0, _17.0, _1.0, _7, _13.4, _13), bb6, UnwindUnreachable())
}
bb6 = {
_11.fld0 = [16927508715955060107_u64,4363216278139575425_u64];
_7.0 = [_13.2.0,_13.2.0,_13.2.0,_13.2.0];
_13.0 = [_6,_6,_6,_6];
_7.0 = [_13.2.0,_13.2.0,_13.2.0,_13.2.0];
RET = [_13.2.0,_13.2.0];
_16.1 = _3;
_15 = [false,true,true,true,true];
_13.2.0 = _17.0 as i32;
_11 = Adt62 { fld0: _9 };
_17.0 = _1.0;
_3 = _13.2.1;
_13.2.1 = _16.1 - _3;
_17.0 = _13.1.0;
Goto(bb7)
}
bb7 = {
_18 = core::ptr::addr_of!(_20);
_18 = core::ptr::addr_of!(_20);
(*_18) = !true;
_6 = !15802_i16;
RET = [_13.2.0,_13.2.0];
_13.2 = (653295516_i32, _16.1);
_16.0 = !_13.2.0;
_14 = [3761939198_u32,437428377_u32,4036297459_u32,2113386294_u32,3790659032_u32,3265040531_u32,3965746491_u32];
_4 = (_13.4.0, _17.2);
_6 = -(-20239_i16);
Call(_13.2.0 = core::intrinsics::bswap(_16.0), bb8, UnwindUnreachable())
}
bb8 = {
_21 = [_16.0,_16.0];
RET = _21;
_5 = _2 & _2;
RET = [_16.0,_13.2.0];
_13.2 = (_16.0, _16.1);
_1 = (_13.1.0, _17.1, _4.1);
_5 = -_2;
_9 = [5051735257321020160_u64,214155682321413794_u64];
_23 = _2 & _5;
_13.2 = (_16.0, _16.1);
_2 = _5 << _5;
(*_18) = true ^ false;
_8 = _13.3;
_17.2 = _4.1 ^ _4.1;
_13.4.0 = _4.0;
RET = _21;
_19 = [(*_18),(*_18),(*_18),_20,_20,(*_18)];
_16 = _13.2;
_6 = 9844_i16 - 27950_i16;
_13.4.0 = [_13.2.0,_16.0,_16.0,_16.0];
_13.2.0 = (-17_isize) as i32;
_24 = [_6,_6];
_13.2 = _16;
_13.4 = (_4.0, _1.2);
_16.1 = _13.2.0 as f64;
_5 = _2;
Goto(bb9)
}
bb9 = {
_16.1 = _13.2.1 * _3;
_7.0 = _13.4.0;
_13.1.1 = _17.1 | _1.1;
_17.0 = _1.0;
_16.1 = -_3;
_7 = (_4.0, _13.4.1);
_13.4.1 = !_17.2;
_11.fld0 = [3585144891625832336_u64,16332749235752223524_u64];
RET = [_13.2.0,_16.0];
_24 = [_6,_6];
_13.4 = (_4.0, _17.2);
_20 = _13.4.1 > _1.2;
_16.0 = -_13.2.0;
_7.1 = _17.2;
_4.0 = _7.0;
_7.0 = [_16.0,_13.2.0,_13.2.0,_13.2.0];
RET = [_16.0,_13.2.0];
_12 = _15;
_16 = (_13.2.0, _13.2.1);
_12 = [(*_18),_20,_20,_20,_20];
Goto(bb10)
}
bb10 = {
_20 = !false;
RET = [_13.2.0,_13.2.0];
_17.1 = _13.1.1 << _1.2;
_22 = [771510577761512424_u64,17898493872670047664_u64,3343589634542624095_u64,632955942607056887_u64];
_4 = (_7.0, _1.2);
Goto(bb11)
}
bb11 = {
_6 = -(-1665_i16);
_6 = -(-20569_i16);
_13.1.0 = _17.0;
_19 = [(*_18),(*_18),(*_18),(*_18),_20,(*_18)];
_13.4 = (_7.0, _1.2);
_24 = [_6,_6];
_7.0 = [_13.2.0,_16.0,_13.2.0,_16.0];
_12 = [_20,(*_18),(*_18),_20,_20];
_14 = [4101122937_u32,3879693688_u32,3051844357_u32,789547415_u32,3136979750_u32,717283592_u32,1243905434_u32];
_16 = _13.2;
_14 = [940180093_u32,923289246_u32,3680382568_u32,4074972456_u32,2065746399_u32,3330530727_u32,3944761890_u32];
_10 = _13.2.0 as f32;
_7 = (_13.4.0, _4.1);
_12 = [(*_18),(*_18),(*_18),_20,(*_18)];
_11 = Adt62 { fld0: _9 };
_13.4 = (_4.0, _1.2);
_16.0 = _13.2.0 & _13.2.0;
_2 = _23;
_17.0 = _1.0;
_5 = !_2;
_1 = (_17.0, _17.1, _17.2);
_11.fld0 = _9;
Goto(bb12)
}
bb12 = {
_1 = _17;
_7.1 = _17.2;
_13.2.1 = _16.1 - _16.1;
_25 = !_23;
_7.1 = _4.1;
_26.0 = _13.1.0;
_27 = _9;
_13.2 = (_16.0, _16.1);
_14 = [1349461895_u32,1651373996_u32,1496078073_u32,3116811896_u32,2696139665_u32,2570247741_u32,4028542608_u32];
_13.1.0 = _1.0;
_13.0 = [_6,_6,_6,_6];
_14 = [1517125351_u32,3886476916_u32,2102967242_u32,2043408300_u32,714572800_u32,2312231352_u32,3205831779_u32];
(*_18) = false;
_7 = _4;
_17.2 = _1.2 | _7.1;
_26.1 = -_17.1;
_13.3 = [8855846348187408089_usize,7_usize,0_usize,7_usize,1_usize,3_usize];
_26.2 = _17.2 * _4.1;
Goto(bb13)
}
bb13 = {
_13.2.0 = -_16.0;
_13.1.0 = _26.0;
_10 = _16.0 as f32;
_13.1.1 = _1.2 as i8;
_1.2 = _26.2;
_21 = [_16.0,_13.2.0];
_12 = [(*_18),_20,_20,(*_18),_20];
_3 = _16.1 * _13.2.1;
_22 = [10374638381788801514_u64,4159081514083352919_u64,8724163036833887850_u64,17977496120012245764_u64];
_7.1 = !_4.1;
_7 = _4;
_1 = _26;
_13.4.0 = [_16.0,_16.0,_16.0,_13.2.0];
_18 = core::ptr::addr_of!((*_18));
_17.2 = _26.2;
_13.1 = (_26.0, _26.1, _13.4.1);
_8 = [5_usize,4_usize,15242155310834395059_usize,1833202396233235250_usize,15557536717818248901_usize,14792502345834689779_usize];
Goto(bb14)
}
bb14 = {
_24 = [_6,_6];
RET = [_13.2.0,_16.0];
_23 = _25 >> _13.4.1;
_13.1.1 = _26.1 ^ _17.1;
_33 = [_16.0,_16.0,_13.2.0,_16.0];
_13.4.0 = [_13.2.0,_13.2.0,_16.0,_16.0];
_1 = _17;
_31 = !_23;
_13.3 = [12034238800777607764_usize,2_usize,7_usize,11050762724373175232_usize,15587860774727314387_usize,2_usize];
_7.0 = _13.4.0;
_22 = [11233854834959029823_u64,16089514380891226381_u64,14559407213329533067_u64,683466261000294169_u64];
_4 = _7;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(3_usize, 4_usize, Move(_4), 26_usize, Move(_26), 31_usize, Move(_31), 25_usize, Move(_25)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(3_usize, 1_usize, Move(_1), 5_usize, Move(_5), 20_usize, Move(_20), 12_usize, Move(_12)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(3_usize, 19_usize, Move(_19), 6_usize, Move(_6), 15_usize, Move(_15), 40_usize, _40), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: i128,mut _2: u8,mut _3: u8,mut _4: i128,mut _5: i128,mut _6: i128,mut _7: f64,mut _8: i8,mut _9: i128,mut _10: f64,mut _11: i128,mut _12: i128,mut _13: [usize; 6],mut _14: ([i32; 4], u8),mut _15: (char, i8, u8),mut _16: ([i32; 4], u8)) -> i16 {
mir! {
type RET = i16;
let _17: f32;
let _18: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _19: [isize; 1];
let _20: Adt48;
let _21: i64;
let _22: f32;
let _23: u64;
let _24: ([i64; 4], (i32, f64), u32);
let _25: f64;
let _26: i32;
let _27: u32;
let _28: Adt51;
let _29: Adt57;
let _30: [isize; 1];
let _31: bool;
let _32: Adt57;
let _33: Adt62;
let _34: isize;
let _35: [i32; 4];
let _36: isize;
let _37: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _38: f64;
let _39: Adt50;
let _40: isize;
let _41: *mut bool;
let _42: char;
let _43: (char, i8, u8);
let _44: f64;
let _45: isize;
let _46: [u16; 3];
let _47: [i8; 2];
let _48: u64;
let _49: Adt51;
let _50: f32;
let _51: ();
let _52: ();
{
_14.0 = _16.0;
_2 = _15.0 as u8;
RET = -(-13301_i16);
_16 = (_14.0, _14.1);
_5 = 9223372036854775807_isize as i128;
_16 = (_14.0, _15.2);
_9 = 3_usize as i128;
_4 = !_6;
_9 = _12 + _12;
_16.1 = _3 * _14.1;
_15.2 = _14.1 & _16.1;
_18.2.1 = RET as f64;
_5 = _9 ^ _1;
_18.2 = (976635805_i32, _10);
Goto(bb1)
}
bb1 = {
_12 = _9 >> _9;
_18.4.1 = !_16.1;
_15 = ('\u{9ceef}', _8, _18.4.1);
_18.1.2 = !_16.1;
_18.4.1 = _3 - _15.2;
_14 = (_16.0, _16.1);
_18.4.0 = [_18.2.0,_18.2.0,_18.2.0,_18.2.0];
_18.3 = _13;
_18.4.0 = [_18.2.0,_18.2.0,_18.2.0,_18.2.0];
_24.2 = 4255471492_u32 << _12;
_1 = (-6953590123041156043_i64) as i128;
_15 = ('\u{40f51}', _8, _14.1);
_8 = _15.1;
_15.0 = '\u{9412d}';
_19 = [(-59_isize)];
_15.0 = '\u{d0955}';
_21 = (-1198564177028399906_i64) << _5;
_16.0 = [_18.2.0,_18.2.0,_18.2.0,_18.2.0];
_18.3 = [1_usize,3_usize,4_usize,5930105319564610367_usize,7_usize,7_usize];
_26 = (-9223372036854775808_isize) as i32;
_18.3 = [49787092094802975_usize,7_usize,7_usize,1_usize,3_usize,7_usize];
_16.1 = _21 as u8;
match _18.2.0 {
0 => bb2,
976635805 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_16.1 = (-1_isize) as u8;
_24.1.1 = _18.2.1;
_22 = RET as f32;
_3 = _15.2 ^ _18.4.1;
_18.2.0 = -_26;
_27 = _24.2 | _24.2;
_25 = _18.2.0 as f64;
Goto(bb5)
}
bb5 = {
_24.2 = !_27;
_18.4.0 = [_18.2.0,_26,_26,_18.2.0];
_20 = Adt48::Variant1 { fld0: true };
_9 = _6 * _12;
_23 = 9223372036854775807_isize as u64;
_18.2 = (_26, _10);
_18.1 = (_15.0, _15.1, _3);
_18.1.1 = _8;
_24.0 = [_21,_21,_21,_21];
_13 = [7_usize,6_usize,695149206080631014_usize,10511327473407310888_usize,2_usize,0_usize];
_18.1.1 = -_8;
_26 = _23 as i32;
_24.1 = (_18.2.0, _10);
_18.0 = [RET,RET,RET,RET];
_26 = true as i32;
_18.2.1 = _27 as f64;
_30 = [(-9223372036854775808_isize)];
_25 = _24.1.0 as f64;
_22 = 244827032149734271535456021651345396946_u128 as f32;
_12 = -_4;
_10 = _18.2.1 * _18.2.1;
_24.0 = [_21,_21,_21,_21];
_14.1 = _18.1.1 as u8;
_19 = [(-9223372036854775808_isize)];
_14.1 = _3 & _15.2;
_18.1.2 = !_18.4.1;
Call(_18.0 = fn5(_18.2, _9, _18.2.1, _19, _24.2), bb6, UnwindUnreachable())
}
bb6 = {
_31 = true;
_14.1 = 9223372036854775807_isize as u8;
_18.1 = (_15.0, _15.1, _3);
_18.2.0 = _24.1.0 >> _9;
_20 = Adt48::Variant1 { fld0: _31 };
_17 = _18.1.1 as f32;
_15.1 = _8 << _27;
RET = _3 as i16;
_30 = _19;
_23 = 15000671118643899847_u64 ^ 10926401992418050717_u64;
_30 = _19;
_23 = _10 as u64;
_14 = (_18.4.0, _3);
_12 = _4 ^ _9;
Call(_9 = fn7(_12, _23, _5, _18, _15.2), bb7, UnwindUnreachable())
}
bb7 = {
_20 = Adt48::Variant1 { fld0: _31 };
_18.4.0 = _16.0;
_26 = _24.1.0;
_24.1 = (_18.2.0, _18.2.1);
_8 = 282769545511631322587606593582146976913_u128 as i8;
_18.1.2 = _15.2 * _16.1;
_13 = [190134348884976623_usize,15029378104558765745_usize,7_usize,5095850550724075485_usize,6145679628585383144_usize,3422622740675357842_usize];
_30 = _19;
_18.2.1 = -_10;
_1 = _31 as i128;
_17 = -_22;
RET = 22333_i16;
_21 = 6121913731374993926_i64 * 4195401502750619104_i64;
_16.0 = [_18.2.0,_24.1.0,_18.2.0,_24.1.0];
_3 = _15.2 >> _23;
_34 = (-67_isize) >> _18.2.0;
_31 = Field::<bool>(Variant(_20, 1), 0);
_24.0 = [_21,_21,_21,_21];
_19 = [_34];
_16 = (_18.4.0, _3);
_18.4 = (_16.0, _16.1);
_28 = Adt51::Variant0 { fld0: _24.0,fld1: 4_usize,fld2: _18.4.0 };
Goto(bb8)
}
bb8 = {
_14.1 = !_3;
_35 = [_24.1.0,_24.1.0,_18.2.0,_24.1.0];
_6 = _31 as i128;
_36 = -_34;
_36 = !_34;
_2 = !_14.1;
_23 = !7002247674086264150_u64;
_28 = Adt51::Variant0 { fld0: _24.0,fld1: 4937694527935450802_usize,fld2: _35 };
_2 = _14.1 ^ _14.1;
_27 = !_24.2;
SetDiscriminant(_20, 3);
_14.1 = _18.4.1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).1 = _18.1.0;
_5 = _9;
_18.1.1 = -_15.1;
_18.2.0 = _24.1.0 * _24.1.0;
_18.0 = [RET,RET,RET,RET];
_19 = [_34];
_38 = -_18.2.1;
_41 = core::ptr::addr_of_mut!(_31);
_18.1.1 = _15.1;
_37.0.0 = _16.0;
_26 = _18.2.0 - _24.1.0;
_33.fld0 = [_23,_23];
Goto(bb9)
}
bb9 = {
_30 = [_36];
_15.1 = _18.1.1;
_35 = [_18.2.0,_26,_18.2.0,_18.2.0];
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).2 = [RET,RET,RET,RET];
_18.2 = (_26, _10);
_28 = Adt51::Variant0 { fld0: _24.0,fld1: 0_usize,fld2: _35 };
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).2 = [RET,RET,RET,RET];
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).3 = [_15.1,_15.1];
_44 = _34 as f64;
_15.1 = _18.1.1;
_37.0.0 = [_26,_26,_18.2.0,_18.2.0];
match RET {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb10,
22333 => bb12,
_ => bb11
}
}
bb10 = {
_14.1 = !_3;
_35 = [_24.1.0,_24.1.0,_18.2.0,_24.1.0];
_6 = _31 as i128;
_36 = -_34;
_36 = !_34;
_2 = !_14.1;
_23 = !7002247674086264150_u64;
_28 = Adt51::Variant0 { fld0: _24.0,fld1: 4937694527935450802_usize,fld2: _35 };
_2 = _14.1 ^ _14.1;
_27 = !_24.2;
SetDiscriminant(_20, 3);
_14.1 = _18.4.1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).1 = _18.1.0;
_5 = _9;
_18.1.1 = -_15.1;
_18.2.0 = _24.1.0 * _24.1.0;
_18.0 = [RET,RET,RET,RET];
_19 = [_34];
_38 = -_18.2.1;
_41 = core::ptr::addr_of_mut!(_31);
_18.1.1 = _15.1;
_37.0.0 = _16.0;
_26 = _18.2.0 - _24.1.0;
_33.fld0 = [_23,_23];
Goto(bb9)
}
bb11 = {
_31 = true;
_14.1 = 9223372036854775807_isize as u8;
_18.1 = (_15.0, _15.1, _3);
_18.2.0 = _24.1.0 >> _9;
_20 = Adt48::Variant1 { fld0: _31 };
_17 = _18.1.1 as f32;
_15.1 = _8 << _27;
RET = _3 as i16;
_30 = _19;
_23 = 15000671118643899847_u64 ^ 10926401992418050717_u64;
_30 = _19;
_23 = _10 as u64;
_14 = (_18.4.0, _3);
_12 = _4 ^ _9;
Call(_9 = fn7(_12, _23, _5, _18, _15.2), bb7, UnwindUnreachable())
}
bb12 = {
_18.2.0 = !_26;
place!(Field::<*const bool>(Variant(_20, 3), 3)) = core::ptr::addr_of!((*_41));
_24.0 = Field::<[i64; 4]>(Variant(_28, 0), 0);
Goto(bb13)
}
bb13 = {
_18.4.1 = _16.1;
_15.2 = _14.1 << _2;
_37.3 = [_15.1,_15.1];
_37.2 = [RET,RET,RET,RET];
_14 = (_37.0.0, _18.4.1);
place!(Field::<[isize; 1]>(Variant(_20, 3), 6)) = _30;
_18.4 = _16;
place!(Field::<usize>(Variant(_28, 0), 1)) = _36 as usize;
_43.2 = _18.4.1 >> Field::<usize>(Variant(_28, 0), 1);
_18.2 = (_26, _38);
_37.0.1 = _15.2 << _15.1;
_24.1 = (_26, _18.2.1);
_18.1.1 = _5 as i8;
place!(Field::<u32>(Variant(_20, 3), 4)) = !_27;
_10 = Field::<u32>(Variant(_20, 3), 4) as f64;
_36 = _34 + _34;
RET = (-8822_i16) | (-10193_i16);
place!(Field::<u32>(Variant(_20, 3), 4)) = !_24.2;
_47 = [_15.1,_15.1];
_5 = _12;
Call(place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)) = fn8(_37.0.1, _28, _18.2.0, _44, Field::<[isize; 1]>(Variant(_20, 3), 6), _15.2, _18, _28, Field::<u32>(Variant(_20, 3), 4), _16.0, _18.2.1, Field::<usize>(Variant(_28, 0), 1), _16, _16.1, _34), bb14, UnwindUnreachable())
}
bb14 = {
_43 = (Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2).1, _18.1.1, _18.4.1);
_18.1.1 = _15.1 >> Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2).0.1;
_42 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2).1;
_24.1 = _18.2;
_33.fld0 = [_23,_23];
_22 = _17;
_3 = _24.2 as u8;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).3 = _47;
SetDiscriminant(_28, 0);
_3 = RET as u8;
_14.0 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2).0.0;
_18.4.1 = _37.0.1 & _2;
_43 = _18.1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2)).1 = _43.0;
_37.3 = [_18.1.1,_15.1];
_27 = 16288262949738958899_usize as u32;
place!(Field::<char>(Variant(_20, 3), 1)) = _18.1.0;
_18 = (_37.2, _15, _24.1, _13, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_20, 3), 2).0);
_28 = Adt51::Variant0 { fld0: _24.0,fld1: 3771881197270136572_usize,fld2: _18.4.0 };
_43 = _15;
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(4_usize, 35_usize, Move(_35), 30_usize, Move(_30), 42_usize, Move(_42), 4_usize, Move(_4)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(4_usize, 13_usize, Move(_13), 43_usize, Move(_43), 14_usize, Move(_14), 36_usize, Move(_36)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(4_usize, 15_usize, Move(_15), 5_usize, Move(_5), 9_usize, Move(_9), 12_usize, Move(_12)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_51 = dump_var(4_usize, 23_usize, Move(_23), 52_usize, _52, 52_usize, _52, 52_usize, _52), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: (i32, f64),mut _2: i128,mut _3: f64,mut _4: [isize; 1],mut _5: u32) -> [i16; 4] {
mir! {
type RET = [i16; 4];
let _6: f32;
let _7: i32;
let _8: i32;
let _9: Adt63;
let _10: Adt59;
let _11: [i64; 7];
let _12: *const u16;
let _13: isize;
let _14: Adt57;
let _15: *const u16;
let _16: Adt62;
let _17: [bool; 6];
let _18: [isize; 1];
let _19: f64;
let _20: isize;
let _21: ();
let _22: ();
{
RET = [4164_i16,(-19278_i16),20835_i16,2786_i16];
_2 = _3 as i128;
Call(_1 = fn6(_2, _5, _2, _3, _3, _5, _3, _2, _3, _5, _4), bb1, UnwindUnreachable())
}
bb1 = {
_5 = 1746209647_u32;
_1.0 = -141550187_i32;
RET = [21478_i16,1882_i16,(-32740_i16),(-23334_i16)];
_1.0 = (-1439742397_i32);
_6 = 16_i8 as f32;
_2 = '\u{cced5}' as i128;
_2 = _3 as i128;
match _1.0 {
340282366920938463463374607430328469059 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_1.1 = (-71_isize) as f64;
_5 = 2131124330_u32 >> _2;
_1.1 = (-1_isize) as f64;
RET = [(-930_i16),7919_i16,(-18762_i16),32665_i16];
_3 = -_1.1;
RET = [25728_i16,(-1183_i16),22135_i16,(-30933_i16)];
_4 = [(-9223372036854775808_isize)];
_1.1 = _3;
_7 = -_1.0;
_6 = 7987869604575277244_i64 as f32;
_4 = [(-3_isize)];
_7 = _1.0 - _1.0;
_3 = 1_usize as f64;
_4 = [(-9223372036854775808_isize)];
RET = [13698_i16,(-13822_i16),(-4494_i16),15561_i16];
_6 = _2 as f32;
_1.1 = _3;
_6 = 5191770469232331960_u64 as f32;
RET = [8205_i16,12491_i16,(-5296_i16),23330_i16];
_2 = (-59149777233718480775487329505825996069_i128) * 154083924587469475651354349721481482118_i128;
RET = [11539_i16,30436_i16,(-19979_i16),10292_i16];
_2 = -7545495214918898507119545118114008011_i128;
_5 = 1761757643_u32 ^ 3315158676_u32;
RET = [27776_i16,(-5374_i16),(-18104_i16),5249_i16];
Goto(bb4)
}
bb4 = {
_2 = !130466312168245957209309971379853166770_i128;
_7 = !_1.0;
_7 = _1.0;
_10.fld2 = !57376_u16;
_10.fld1 = '\u{bab71}' as i32;
_3 = -_1.1;
_7 = _2 as i32;
RET = [(-9975_i16),(-32389_i16),17161_i16,(-23677_i16)];
_4 = [9223372036854775807_isize];
_1 = (_10.fld1, _3);
_15 = core::ptr::addr_of!(_10.fld2);
_3 = -_1.1;
RET = [(-18552_i16),(-14110_i16),17486_i16,(-31340_i16)];
_10.fld0 = Adt48::Variant2 { fld0: _15,fld1: _4 };
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [9223372036854775807_isize];
Goto(bb5)
}
bb5 = {
_7 = _10.fld1 << _2;
_13 = _2 as isize;
_16.fld0 = [17865649532381639288_u64,16266135590365730494_u64];
SetDiscriminant(_10.fld0, 2);
_4 = [_13];
_16.fld0 = [631867021920325929_u64,5217668702051969831_u64];
_7 = _1.0 << _5;
_6 = 50_u8 as f32;
_1 = (_7, _3);
_5 = !3345525761_u32;
_17 = [true,true,false,true,true,true];
(*_15) = 64139_u16 >> _7;
(*_15) = !21789_u16;
_2 = 85816612903450517048872418310174128778_i128;
_1.0 = 82102641375847871983032454849802688956_u128 as i32;
_5 = 198_u8 as u32;
place!(Field::<*const u16>(Variant(_10.fld0, 2), 0)) = core::ptr::addr_of!((*_15));
_18 = _4;
_11 = [(-7757599858915161004_i64),9014066185271299898_i64,(-2843781419606296589_i64),1729789055710527294_i64,(-7572871605324089579_i64),(-5750951859225392772_i64),(-1274031177573172572_i64)];
_5 = 13239450244639542032_u64 as u32;
_12 = core::ptr::addr_of!((*_15));
_10.fld2 = 55392_u16 - 49965_u16;
(*_12) = 41611_u16;
_17 = [false,true,true,false,false,false];
_10.fld2 = 51798_u16 & 56813_u16;
Call(_3 = core::intrinsics::transmute(RET), bb6, UnwindUnreachable())
}
bb6 = {
_10.fld1 = _1.0 | _7;
_5 = _3 as u32;
_17 = [true,false,true,true,true,true];
(*_12) = !24265_u16;
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [_13];
_17 = [false,false,true,false,false,false];
_1.1 = _3;
_12 = Field::<*const u16>(Variant(_10.fld0, 2), 0);
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [_13];
_11 = [(-1439103149373589888_i64),(-1675589681361760968_i64),8948534137203215287_i64,4970781252552912432_i64,(-8854926189112380083_i64),4984928960962370776_i64,6642030001229821218_i64];
_20 = _13;
_15 = _12;
_10.fld1 = _5 as i32;
(*_12) = 3460_u16 ^ 55081_u16;
(*_12) = 30228_u16;
_8 = _10.fld1;
_5 = !1875745927_u32;
(*_12) = 30532_u16 | 16730_u16;
_1.1 = 16342803636077613450_u64 as f64;
(*_12) = _6 as u16;
_10.fld3 = 260150639603759918661957916332407857550_u128 as i8;
_1 = (_8, _3);
_8 = _10.fld1 * _7;
Goto(bb7)
}
bb7 = {
_10.fld1 = !_7;
_6 = 122_u8 as f32;
_2 = 143072811027049543511681049864011512882_i128;
_8 = _10.fld1 * _7;
_10.fld2 = 3708374671734854749_usize as u16;
_2 = 21554359283213599629284739909032080638_i128;
(*_15) = 9228_u16 * 52715_u16;
SetDiscriminant(_10.fld0, 2);
_10.fld0 = Adt48::Variant1 { fld0: false };
_19 = -_1.1;
(*_15) = 17887_u16;
_18 = [_20];
_6 = (-31979_i16) as f32;
_4 = [_20];
_19 = 8561_i16 as f64;
RET = [19892_i16,(-13519_i16),22486_i16,25345_i16];
_16.fld0 = [7939015688588562763_u64,7798938921783109592_u64];
_20 = _13 & _13;
_15 = core::ptr::addr_of!((*_12));
_17 = [false,false,true,true,true,false];
match (*_15) {
0 => bb2,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
17887 => bb15,
_ => bb14
}
}
bb8 = {
_10.fld1 = _1.0 | _7;
_5 = _3 as u32;
_17 = [true,false,true,true,true,true];
(*_12) = !24265_u16;
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [_13];
_17 = [false,false,true,false,false,false];
_1.1 = _3;
_12 = Field::<*const u16>(Variant(_10.fld0, 2), 0);
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [_13];
_11 = [(-1439103149373589888_i64),(-1675589681361760968_i64),8948534137203215287_i64,4970781252552912432_i64,(-8854926189112380083_i64),4984928960962370776_i64,6642030001229821218_i64];
_20 = _13;
_15 = _12;
_10.fld1 = _5 as i32;
(*_12) = 3460_u16 ^ 55081_u16;
(*_12) = 30228_u16;
_8 = _10.fld1;
_5 = !1875745927_u32;
(*_12) = 30532_u16 | 16730_u16;
_1.1 = 16342803636077613450_u64 as f64;
(*_12) = _6 as u16;
_10.fld3 = 260150639603759918661957916332407857550_u128 as i8;
_1 = (_8, _3);
_8 = _10.fld1 * _7;
Goto(bb7)
}
bb9 = {
_7 = _10.fld1 << _2;
_13 = _2 as isize;
_16.fld0 = [17865649532381639288_u64,16266135590365730494_u64];
SetDiscriminant(_10.fld0, 2);
_4 = [_13];
_16.fld0 = [631867021920325929_u64,5217668702051969831_u64];
_7 = _1.0 << _5;
_6 = 50_u8 as f32;
_1 = (_7, _3);
_5 = !3345525761_u32;
_17 = [true,true,false,true,true,true];
(*_15) = 64139_u16 >> _7;
(*_15) = !21789_u16;
_2 = 85816612903450517048872418310174128778_i128;
_1.0 = 82102641375847871983032454849802688956_u128 as i32;
_5 = 198_u8 as u32;
place!(Field::<*const u16>(Variant(_10.fld0, 2), 0)) = core::ptr::addr_of!((*_15));
_18 = _4;
_11 = [(-7757599858915161004_i64),9014066185271299898_i64,(-2843781419606296589_i64),1729789055710527294_i64,(-7572871605324089579_i64),(-5750951859225392772_i64),(-1274031177573172572_i64)];
_5 = 13239450244639542032_u64 as u32;
_12 = core::ptr::addr_of!((*_15));
_10.fld2 = 55392_u16 - 49965_u16;
(*_12) = 41611_u16;
_17 = [false,true,true,false,false,false];
_10.fld2 = 51798_u16 & 56813_u16;
Call(_3 = core::intrinsics::transmute(RET), bb6, UnwindUnreachable())
}
bb10 = {
_2 = !130466312168245957209309971379853166770_i128;
_7 = !_1.0;
_7 = _1.0;
_10.fld2 = !57376_u16;
_10.fld1 = '\u{bab71}' as i32;
_3 = -_1.1;
_7 = _2 as i32;
RET = [(-9975_i16),(-32389_i16),17161_i16,(-23677_i16)];
_4 = [9223372036854775807_isize];
_1 = (_10.fld1, _3);
_15 = core::ptr::addr_of!(_10.fld2);
_3 = -_1.1;
RET = [(-18552_i16),(-14110_i16),17486_i16,(-31340_i16)];
_10.fld0 = Adt48::Variant2 { fld0: _15,fld1: _4 };
place!(Field::<[isize; 1]>(Variant(_10.fld0, 2), 1)) = [9223372036854775807_isize];
Goto(bb5)
}
bb11 = {
_1.1 = (-71_isize) as f64;
_5 = 2131124330_u32 >> _2;
_1.1 = (-1_isize) as f64;
RET = [(-930_i16),7919_i16,(-18762_i16),32665_i16];
_3 = -_1.1;
RET = [25728_i16,(-1183_i16),22135_i16,(-30933_i16)];
_4 = [(-9223372036854775808_isize)];
_1.1 = _3;
_7 = -_1.0;
_6 = 7987869604575277244_i64 as f32;
_4 = [(-3_isize)];
_7 = _1.0 - _1.0;
_3 = 1_usize as f64;
_4 = [(-9223372036854775808_isize)];
RET = [13698_i16,(-13822_i16),(-4494_i16),15561_i16];
_6 = _2 as f32;
_1.1 = _3;
_6 = 5191770469232331960_u64 as f32;
RET = [8205_i16,12491_i16,(-5296_i16),23330_i16];
_2 = (-59149777233718480775487329505825996069_i128) * 154083924587469475651354349721481482118_i128;
RET = [11539_i16,30436_i16,(-19979_i16),10292_i16];
_2 = -7545495214918898507119545118114008011_i128;
_5 = 1761757643_u32 ^ 3315158676_u32;
RET = [27776_i16,(-5374_i16),(-18104_i16),5249_i16];
Goto(bb4)
}
bb12 = {
Return()
}
bb13 = {
_5 = 1746209647_u32;
_1.0 = -141550187_i32;
RET = [21478_i16,1882_i16,(-32740_i16),(-23334_i16)];
_1.0 = (-1439742397_i32);
_6 = 16_i8 as f32;
_2 = '\u{cced5}' as i128;
_2 = _3 as i128;
match _1.0 {
340282366920938463463374607430328469059 => bb3,
_ => bb2
}
}
bb14 = {
Return()
}
bb15 = {
_10.fld2 = 40700_u16 | 8915_u16;
_13 = _20 << (*_15);
_10.fld2 = 21001_u16;
(*_15) = (-32001_i16) as u16;
_1 = (_8, _3);
_15 = core::ptr::addr_of!((*_12));
_6 = _3 as f32;
Goto(bb16)
}
bb16 = {
Call(_21 = dump_var(5_usize, 20_usize, Move(_20), 18_usize, Move(_18), 2_usize, Move(_2), 17_usize, Move(_17)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_21 = dump_var(5_usize, 13_usize, Move(_13), 22_usize, _22, 22_usize, _22, 22_usize, _22), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: i128,mut _2: u32,mut _3: i128,mut _4: f64,mut _5: f64,mut _6: u32,mut _7: f64,mut _8: i128,mut _9: f64,mut _10: u32,mut _11: [isize; 1]) -> (i32, f64) {
mir! {
type RET = (i32, f64);
let _12: f64;
let _13: i16;
let _14: ();
let _15: ();
{
_3 = _1;
RET.1 = _5;
RET.1 = _7;
_11 = [54_isize];
RET = (201479040_i32, _5);
_2 = (-6360376993827114438_i64) as u32;
_13 = 19829_i16;
Goto(bb1)
}
bb1 = {
Call(_14 = dump_var(6_usize, 6_usize, Move(_6), 10_usize, Move(_10), 13_usize, Move(_13), 8_usize, Move(_8)), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: i128,mut _2: u64,mut _3: i128,mut _4: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),mut _5: u8) -> i128 {
mir! {
type RET = i128;
let _6: ();
let _7: ();
{
_4.1.0 = '\u{cf37f}';
_4.4.1 = _4.1.1 as u8;
_4.1 = ('\u{10853b}', (-12_i8), _5);
_3 = _1 - _1;
RET = !_1;
_4.1 = ('\u{f565f}', 22_i8, _5);
_4.3 = [2_usize,1_usize,6_usize,6_usize,13242936759100328588_usize,7743810043349853536_usize];
Goto(bb1)
}
bb1 = {
Call(_6 = dump_var(7_usize, 5_usize, Move(_5), 3_usize, Move(_3), 7_usize, _7, 7_usize, _7), bb2, UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: u8,mut _2: Adt51,mut _3: i32,mut _4: f64,mut _5: [isize; 1],mut _6: u8,mut _7: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),mut _8: Adt51,mut _9: u32,mut _10: [i32; 4],mut _11: f64,mut _12: usize,mut _13: ([i32; 4], u8),mut _14: u8,mut _15: isize) -> (([i32; 4], u8), char, [i16; 4], [i8; 2]) {
mir! {
type RET = (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _16: ([i32; 4], u8);
let _17: char;
let _18: ();
let _19: ();
{
_7.1.0 = '\u{2ae33}';
_7.4.0 = Field::<[i32; 4]>(Variant(_8, 0), 2);
RET.0 = (Field::<[i32; 4]>(Variant(_2, 0), 2), _6);
Goto(bb1)
}
bb1 = {
RET.1 = _7.1.0;
_15 = (-9223372036854775808_isize) ^ (-67_isize);
_16.1 = RET.0.1 * _13.1;
_1 = _7.2.1 as u8;
_4 = _11 + _11;
_12 = Field::<usize>(Variant(_2, 0), 1);
_14 = (-78372034050141278630980666184622831294_i128) as u8;
RET.0.0 = _7.4.0;
_7.2.0 = -_3;
SetDiscriminant(_8, 1);
place!(Field::<[i32; 2]>(Variant(_8, 1), 7)) = [_7.2.0,_7.2.0];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_8, 1), 4)).2 = !_9;
_14 = _16.1 & _16.1;
_7.2.1 = _11 + _11;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_8, 1), 1)).2 = 94951832447814439418460597365199907680_i128;
RET.3 = [_7.1.1,_7.1.1];
place!(Field::<[bool; 5]>(Variant(_8, 1), 6)) = [true,false,false,false,false];
_14 = !RET.0.1;
place!(Field::<bool>(Variant(_8, 1), 0)) = !true;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_8, 1), 4)).1.0 = Field::<(f32, [u32; 7], i128)>(Variant(_8, 1), 1).2 as i32;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_8, 1), 4)).1 = _7.2;
RET.2 = [(-22309_i16),(-15888_i16),(-25457_i16),10521_i16];
_13 = (Field::<[i32; 4]>(Variant(_2, 0), 2), RET.0.1);
place!(Field::<[i64; 4]>(Variant(_8, 1), 5)) = [6608226557746838077_i64,(-1209603772924179672_i64),6495066875743020626_i64,(-4398716218450254307_i64)];
_7.0 = RET.2;
Goto(bb2)
}
bb2 = {
Call(_18 = dump_var(8_usize, 13_usize, Move(_13), 14_usize, Move(_14), 10_usize, Move(_10), 3_usize, Move(_3)), bb3, UnwindUnreachable())
}
bb3 = {
Call(_18 = dump_var(8_usize, 6_usize, Move(_6), 19_usize, _19, 19_usize, _19, 19_usize, _19), bb4, UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: char,mut _2: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),mut _3: f32,mut _4: i128,mut _5: Adt62,mut _6: [u32; 7],mut _7: char,mut _8: [usize; 6],mut _9: ([i32; 4], u8),mut _10: char,mut _11: char,mut _12: char,mut _13: ([i32; 4], u8),mut _14: ([i32; 4], u8),mut _15: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))) -> u8 {
mir! {
type RET = u8;
let _16: bool;
let _17: i32;
let _18: Adt61;
let _19: usize;
let _20: [i64; 4];
let _21: [i32; 4];
let _22: (i32, f64);
let _23: [i16; 2];
let _24: char;
let _25: f64;
let _26: *mut [i8; 2];
let _27: ();
let _28: ();
{
_8 = [6653360379106947796_usize,2_usize,6222298118128039975_usize,12119289755704059619_usize,3_usize,4508457624313056113_usize];
_15.4.0 = [_2.2.0,_15.2.0,_15.2.0,_15.2.0];
_2.4.0 = [_15.2.0,_2.2.0,_2.2.0,_15.2.0];
_1 = _10;
_15.4.1 = _13.1 << _4;
_2.1.0 = _10;
_13 = (_9.0, _9.1);
_2.1 = (_15.1.0, _15.1.1, _9.1);
_10 = _2.1.0;
_2.1.0 = _12;
_11 = _7;
_2.4 = (_9.0, _15.4.1);
_13 = (_14.0, _9.1);
_7 = _1;
_15.1.2 = 45707_u16 as u8;
_18.fld2 = _2.1.0 as i64;
_15.1 = (_10, _2.1.1, _13.1);
_8 = [0_usize,3_usize,8297952126783378561_usize,7_usize,6_usize,3_usize];
_15.4.1 = !_2.4.1;
_18.fld4 = _2.2.1 as i32;
Call(_18.fld1 = fn10(_4, _15, _12, _2.2.0, _13, _2.1.1, _12, _11, _15, _15.1.0, _11, _15.4, _15.1.1, _15.3, _13, _1), bb1, UnwindUnreachable())
}
bb1 = {
_10 = _15.1.0;
_5.fld0 = [Field::<u64>(Variant(_18.fld1, 1), 2),Field::<u64>(Variant(_18.fld1, 1), 2)];
_12 = _2.1.0;
_15 = (_2.0, _2.1, _2.2, _8, _2.4);
_2.1.1 = Field::<u128>(Variant(_18.fld1, 1), 1) as i8;
_15 = (_2.0, _2.1, _2.2, _2.3, _13);
_7 = _12;
_2.2 = _15.2;
_2 = _15;
_14.1 = _10 as u8;
_9.1 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).1 as u8;
_20 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_15.2.1 = _2.2.1 * _2.2.1;
_15.3 = [6_usize,0_usize,3_usize,13057661861273837217_usize,7_usize,2040274950675603383_usize];
_17 = _15.2.0 - _2.2.0;
_3 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).1 as f32;
_2.1.1 = _4 as i8;
_14 = _9;
_12 = _2.1.0;
_18.fld4 = -_17;
_2.3 = _15.3;
Goto(bb2)
}
bb2 = {
place!(Field::<u64>(Variant(_18.fld1, 1), 2)) = 11403524707508539660_u64 << _15.1.1;
_22.1 = _15.2.1;
_2.4 = _13;
_1 = _11;
_22 = (_2.2.0, _15.2.1);
_15.1 = (_7, _2.1.1, _2.4.1);
_12 = _11;
_20 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_2.4 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2, _9.1);
place!(Field::<u64>(Variant(_18.fld1, 1), 2)) = 8790455196232756392_u64;
_15.4 = _9;
_14.1 = true as u8;
_2.4 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2, _15.4.1);
_9 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2, _15.4.1);
_2.4.0 = [_17,_15.2.0,_22.0,_18.fld4];
_22 = _15.2;
_9 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2, _15.4.1);
_2.3 = [9881096517533015676_usize,12362271638364769029_usize,4639800296633453509_usize,3_usize,1_usize,10974506581381231576_usize];
match _15.2.0 {
0 => bb1,
1 => bb3,
636257108 => bb5,
_ => bb4
}
}
bb3 = {
_10 = _15.1.0;
_5.fld0 = [Field::<u64>(Variant(_18.fld1, 1), 2),Field::<u64>(Variant(_18.fld1, 1), 2)];
_12 = _2.1.0;
_15 = (_2.0, _2.1, _2.2, _8, _2.4);
_2.1.1 = Field::<u128>(Variant(_18.fld1, 1), 1) as i8;
_15 = (_2.0, _2.1, _2.2, _2.3, _13);
_7 = _12;
_2.2 = _15.2;
_2 = _15;
_14.1 = _10 as u8;
_9.1 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).1 as u8;
_20 = [_18.fld2,_18.fld2,_18.fld2,_18.fld2];
_15.2.1 = _2.2.1 * _2.2.1;
_15.3 = [6_usize,0_usize,3_usize,13057661861273837217_usize,7_usize,2040274950675603383_usize];
_17 = _15.2.0 - _2.2.0;
_3 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).1 as f32;
_2.1.1 = _4 as i8;
_14 = _9;
_12 = _2.1.0;
_18.fld4 = -_17;
_2.3 = _15.3;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
_16 = _2.4.1 <= _2.4.1;
_9.0 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2;
SetDiscriminant(_18.fld1, 1);
place!(Field::<u64>(Variant(_18.fld1, 1), 2)) = 15389125254454162384_u64;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0)).2 = _9.0;
_5.fld0 = [Field::<u64>(Variant(_18.fld1, 1), 2),Field::<u64>(Variant(_18.fld1, 1), 2)];
_2.2.1 = _22.1 * _15.2.1;
_15.4.1 = _2.4.1;
RET = _9.1 - _2.4.1;
_2.1.2 = _15.4.1;
_23 = [(-7996_i16),30041_i16];
place!(Field::<u64>(Variant(_18.fld1, 1), 2)) = _2.4.1 as u64;
_9.0 = [_18.fld4,_17,_17,_17];
_15.1.0 = _10;
_2.1.2 = (-41_isize) as u8;
_2.1.2 = _15.1.1 as u8;
_13 = _9;
place!(Field::<u128>(Variant(_18.fld1, 1), 1)) = _15.4.1 as u128;
_13.1 = RET | _15.4.1;
_5.fld0 = [Field::<u64>(Variant(_18.fld1, 1), 2),Field::<u64>(Variant(_18.fld1, 1), 2)];
_21 = [_18.fld4,_22.0,_15.2.0,_18.fld4];
_14.1 = 2_usize as u8;
_2.0 = [(-1685_i16),4001_i16,(-5230_i16),(-22141_i16)];
_2.4 = (_21, _9.1);
_15.4 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_18.fld1, 1), 0).2, _13.1);
Goto(bb6)
}
bb6 = {
Call(_27 = dump_var(9_usize, 1_usize, Move(_1), 7_usize, Move(_7), 14_usize, Move(_14), 17_usize, Move(_17)), bb7, UnwindUnreachable())
}
bb7 = {
Call(_27 = dump_var(9_usize, 13_usize, Move(_13), 6_usize, Move(_6), 23_usize, Move(_23), 16_usize, Move(_16)), bb8, UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: i128,mut _2: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),mut _3: char,mut _4: i32,mut _5: ([i32; 4], u8),mut _6: i8,mut _7: char,mut _8: char,mut _9: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),mut _10: char,mut _11: char,mut _12: ([i32; 4], u8),mut _13: i8,mut _14: [usize; 6],mut _15: ([i32; 4], u8),mut _16: char) -> Adt53 {
mir! {
type RET = Adt53;
let _17: f64;
let _18: isize;
let _19: Adt63;
let _20: [usize; 6];
let _21: f32;
let _22: Adt62;
let _23: char;
let _24: (char, i8, u8);
let _25: [u32; 7];
let _26: isize;
let _27: [i64; 4];
let _28: Adt62;
let _29: u64;
let _30: Adt51;
let _31: Adt62;
let _32: (f32, [u32; 7], i128);
let _33: f64;
let _34: isize;
let _35: Adt56;
let _36: u128;
let _37: bool;
let _38: u64;
let _39: f64;
let _40: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _41: isize;
let _42: u128;
let _43: char;
let _44: Adt55;
let _45: [i64; 7];
let _46: [i8; 2];
let _47: isize;
let _48: Adt51;
let _49: Adt63;
let _50: i16;
let _51: Adt52;
let _52: u32;
let _53: f32;
let _54: Adt61;
let _55: Adt57;
let _56: *const u16;
let _57: (i32, f64);
let _58: bool;
let _59: f32;
let _60: ([i64; 4], (i32, f64), u32);
let _61: i32;
let _62: Adt48;
let _63: u128;
let _64: u16;
let _65: Adt64;
let _66: i8;
let _67: i128;
let _68: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _69: f64;
let _70: *const *const isize;
let _71: *mut [i8; 2];
let _72: [isize; 1];
let _73: [i16; 3];
let _74: char;
let _75: u16;
let _76: isize;
let _77: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _78: [u32; 7];
let _79: f64;
let _80: *mut [i8; 2];
let _81: [i8; 2];
let _82: Adt61;
let _83: isize;
let _84: i32;
let _85: f64;
let _86: isize;
let _87: [isize; 1];
let _88: [i32; 4];
let _89: bool;
let _90: i128;
let _91: [u64; 2];
let _92: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _93: isize;
let _94: *const bool;
let _95: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _96: u128;
let _97: isize;
let _98: i128;
let _99: Adt50;
let _100: Adt49;
let _101: Adt54;
let _102: char;
let _103: f64;
let _104: i8;
let _105: Adt52;
let _106: i8;
let _107: isize;
let _108: *mut [i8; 2];
let _109: Adt52;
let _110: isize;
let _111: f32;
let _112: u128;
let _113: *mut [usize; 6];
let _114: char;
let _115: *mut [usize; 6];
let _116: Adt63;
let _117: *mut bool;
let _118: bool;
let _119: i32;
let _120: f32;
let _121: Adt63;
let _122: usize;
let _123: f64;
let _124: bool;
let _125: i64;
let _126: [i8; 2];
let _127: *mut bool;
let _128: i16;
let _129: *mut [i8; 2];
let _130: [i32; 2];
let _131: [u16; 3];
let _132: bool;
let _133: f32;
let _134: *const u16;
let _135: Adt59;
let _136: [i16; 3];
let _137: [i8; 2];
let _138: f32;
let _139: isize;
let _140: [i8; 2];
let _141: [u32; 7];
let _142: *const bool;
let _143: isize;
let _144: [i32; 4];
let _145: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _146: Adt59;
let _147: Adt57;
let _148: char;
let _149: f32;
let _150: isize;
let _151: isize;
let _152: bool;
let _153: [usize; 6];
let _154: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _155: f32;
let _156: isize;
let _157: [u16; 3];
let _158: *const bool;
let _159: u128;
let _160: [u64; 4];
let _161: bool;
let _162: isize;
let _163: isize;
let _164: u32;
let _165: f64;
let _166: u16;
let _167: ([i32; 4], u8);
let _168: Adt57;
let _169: char;
let _170: Adt64;
let _171: ([i64; 4], (i32, f64), u32);
let _172: *const bool;
let _173: char;
let _174: bool;
let _175: f32;
let _176: i8;
let _177: i64;
let _178: i128;
let _179: i8;
let _180: *const *const isize;
let _181: [i8; 2];
let _182: f64;
let _183: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _184: isize;
let _185: u32;
let _186: *const isize;
let _187: u128;
let _188: Adt61;
let _189: ([i32; 4], u8);
let _190: [u32; 7];
let _191: f64;
let _192: u64;
let _193: [bool; 6];
let _194: Adt55;
let _195: *mut [i8; 2];
let _196: *mut [usize; 6];
let _197: u64;
let _198: isize;
let _199: [bool; 6];
let _200: Adt59;
let _201: i128;
let _202: f32;
let _203: Adt52;
let _204: u16;
let _205: Adt60;
let _206: f64;
let _207: *mut bool;
let _208: char;
let _209: (i32, f64);
let _210: (i32, f64);
let _211: usize;
let _212: isize;
let _213: char;
let _214: [isize; 1];
let _215: u32;
let _216: Adt54;
let _217: [u64; 4];
let _218: Adt50;
let _219: ([i32; 2], i16, [i32; 4]);
let _220: [bool; 5];
let _221: i16;
let _222: *const isize;
let _223: u32;
let _224: f32;
let _225: Adt63;
let _226: Adt50;
let _227: isize;
let _228: u8;
let _229: usize;
let _230: ([i64; 4], (i32, f64), u32);
let _231: isize;
let _232: [i16; 4];
let _233: bool;
let _234: isize;
let _235: [bool; 5];
let _236: char;
let _237: Adt60;
let _238: f64;
let _239: u8;
let _240: [bool; 6];
let _241: Adt63;
let _242: i64;
let _243: ([i64; 4], (i32, f64), u32);
let _244: ([i64; 4], (i32, f64), u32);
let _245: isize;
let _246: u16;
let _247: [i8; 2];
let _248: u8;
let _249: *mut bool;
let _250: [isize; 1];
let _251: isize;
let _252: [i16; 2];
let _253: f64;
let _254: Adt55;
let _255: char;
let _256: isize;
let _257: Adt52;
let _258: i32;
let _259: *mut bool;
let _260: f32;
let _261: i16;
let _262: (char, i8, u8);
let _263: [i32; 2];
let _264: bool;
let _265: isize;
let _266: ();
let _267: ();
{
_2.1.2 = _2.4.1 - _9.4.1;
_9.1.2 = 9223372036854775807_isize as u8;
_16 = _8;
_9.3 = [7575548439358039052_usize,10499500457511704523_usize,17884314461543421162_usize,2270961487731556170_usize,7317225511333460909_usize,6662162440230947999_usize];
_2 = (_9.0, _9.1, _9.2, _14, _9.4);
_2.4.1 = _12.1;
_5.0 = [_4,_9.2.0,_4,_4];
_9.1 = (_8, _2.1.1, _9.4.1);
_2.4 = (_12.0, _12.1);
_12.0 = [_9.2.0,_4,_4,_9.2.0];
_5.0 = _15.0;
_2.4 = (_9.4.0, _9.4.1);
_2.2 = (_9.2.0, _9.2.1);
_9.2.0 = _2.2.0;
Call(_15.0 = fn11(_2.1.0, _12), bb1, UnwindUnreachable())
}
bb1 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb2 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb3 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb4 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb5 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb6 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb7 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb8 = {
_11 = _23;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _4;
_5.0 = _2.4.0;
_32.1 = _25;
SetDiscriminant(_19, 0);
_27 = [7504132259997704560_i64,431001919994132878_i64,2613792496129191282_i64,2569800313725399223_i64];
place!(Field::<[isize; 1]>(Variant(_19, 0), 5)) = [_18];
_9.1.0 = _8;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).0 = _21;
_2.1.1 = _6 | _6;
_28.fld0 = [_29,_29];
_31.fld0 = _28.fld0;
_20 = [5303968915974271927_usize,14378644425513073946_usize,1209178328805296874_usize,3_usize,14941735083312823343_usize,11197872147279953061_usize];
_2.2.1 = 992814542933338728_i64 as f64;
_9.4 = (_15.0, _2.4.1);
_18 = !_34;
_25 = _32.1;
_5.1 = _2.4.1 | _2.4.1;
_9.3 = [14805143797397509253_usize,5_usize,18046977049379648769_usize,6933804625634702543_usize,3_usize,8924806977659024530_usize];
_9.3 = [7_usize,5336159485910619506_usize,7_usize,4768439656650078982_usize,1540404538973101332_usize,3148639331607438458_usize];
_40.3 = [3_usize,10317727707489782203_usize,7_usize,4_usize,1_usize,5032079528460268814_usize];
_1 = 108857908413066299128084124758191108557_i128;
_32.2 = _9.2.1 as i128;
_2.1.2 = _9.4.1;
_4 = _2.1.1 as i32;
_2.4 = (_5.0, _9.1.2);
_40.2.1 = _17 + _9.2.1;
match _9.2.0 {
0 => bb6,
1 => bb9,
636257108 => bb11,
_ => bb10
}
}
bb9 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb10 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb11 = {
_5 = (_9.4.0, _12.1);
_20 = _40.3;
_18 = _34;
_9.0 = _2.0;
_43 = _24.0;
_21 = -Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_26 = _18;
_40.1 = (_9.1.0, _13, _2.1.2);
_40.4.1 = _40.1.2 ^ _9.4.1;
_18 = _34;
_6 = -_24.1;
_40.1.2 = !_5.1;
_9.2.1 = -_17;
_44.fld1 = _32.2 + _1;
_34 = _26 & _18;
_40.2.0 = _9.2.0;
_40.4.1 = _9.4.1 - _2.1.2;
_27 = [7929507291479708008_i64,(-8956396241828731814_i64),8424917537204490728_i64,4272283729307025560_i64];
_10 = _23;
_40.4.1 = !_5.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _9.2, 1959216203_u32);
_32 = (_21, _25, _44.fld1);
Call(_47 = core::intrinsics::bswap(_34), bb12, UnwindUnreachable())
}
bb12 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb13 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb14 = {
_2.1.0 = _10;
_31.fld0 = [_29,_29];
_9.2.1 = _40.2.1;
_7 = _24.0;
_3 = _7;
_12.0 = [_9.2.0,_9.2.0,_9.2.0,_2.2.0];
_26 = -_34;
_15.0 = [_2.2.0,_9.2.0,_2.2.0,_9.2.0];
_9.4.1 = _3 as u8;
_6 = _9.1.1 << _2.4.1;
_2.1.0 = _10;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = _5.1 as f64;
_2.0 = _9.0;
_9.4.1 = _42 as u8;
_28.fld0 = _22.fld0;
_33 = 19390_i16 as f64;
_45 = [(-3652506685902748077_i64),(-5977002760926613149_i64),393975211916331214_i64,(-6518302622494239342_i64),(-3906855903639452678_i64),481978437295409314_i64,(-4939844840781832257_i64)];
_31 = _22;
_44.fld0 = [_4,_2.2.0,_2.2.0,_40.2.0];
_54.fld4 = _4 + _9.2.0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).1 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2];
_9.4 = (_40.4.0, _12.1);
place!(Field::<[isize; 1]>(Variant(_19, 0), 5)) = [_18];
_5.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_54.fld4,_4];
_2 = (_9.0, _24, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1, _40.3, _12);
_31.fld0 = _22.fld0;
Call(_2.3 = core::intrinsics::transmute(_20), bb15, UnwindUnreachable())
}
bb15 = {
_44.fld0 = _9.4.0;
_2.4.0 = [_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_4,_9.2.0];
_24.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_21 = -_32.0;
_54.fld2 = _29 as i64;
_23 = _11;
_32.2 = !_1;
_40.3 = _20;
_39 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
Goto(bb16)
}
bb16 = {
_40.1 = (_3, _6, _24.2);
_22 = Adt62 { fld0: _31.fld0 };
_28 = Adt62 { fld0: _22.fld0 };
_40.2 = _2.2;
_9.1 = (_10, _40.1.1, _2.4.1);
_26 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 as isize;
_58 = _24.2 > _40.1.2;
_32 = (_21, Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).1, _1);
_21 = _32.0;
_23 = _11;
_41 = (-2064_i16) as isize;
_14 = [10346803299960971052_usize,5592226895436271175_usize,6_usize,2_usize,0_usize,3_usize];
_9.4.1 = _40.1.1 as u8;
_57 = (_2.2.0, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_9.1 = (_23, _40.1.1, _12.1);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)) = (_21, _25, _44.fld1);
_36 = _42 - _42;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _40.2, 2477215976_u32);
_44.fld2 = [(-1799_i16),8544_i16,(-24310_i16),(-13813_i16)];
_53 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 as f32;
_58 = _39 == Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_15.0 = [_4,_54.fld4,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_9.2.0];
_11 = _2.1.0;
_22.fld0 = [_29,_29];
_40.0 = _9.0;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _21 as u32;
_18 = _41;
match _32.2 {
0 => bb14,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
108857908413066299128084124758191108557 => bb17,
_ => bb13
}
}
bb17 = {
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_57.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 >> _12.1;
_40.2 = _2.2;
_2.1 = (_24.0, _40.1.1, _2.4.1);
_2.4 = (_15.0, _5.1);
_52 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2;
_60.1.1 = -_39;
match _9.2.0 {
0 => bb8,
1 => bb2,
636257108 => bb18,
_ => bb15
}
}
bb18 = {
_29 = 2266422573016976570_u64;
_60.1.1 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as f64;
_44 = Adt55 { fld0: _40.4.0,fld1: _1,fld2: _2.0,fld3: Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).0 };
_47 = _41 >> _40.4.1;
_10 = _3;
_43 = _24.0;
_32 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1);
_2.3 = [5_usize,15494213088917347255_usize,5_usize,11446595349425279385_usize,4_usize,17400618555944127892_usize];
_39 = _2.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.0 = _57.0 << _40.1.1;
_12 = (_9.4.0, _9.1.2);
_60.2 = _52 | Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2;
_37 = _58;
_44 = Adt55 { fld0: _2.4.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _2.0,fld3: _27 };
_60.1.1 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
Call(_61 = core::intrinsics::bswap(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0), bb19, UnwindUnreachable())
}
bb19 = {
_40.4.1 = _29 as u8;
Goto(bb20)
}
bb20 = {
_9.2.1 = _33 + _39;
_48 = Adt51::Variant0 { fld0: _44.fld3,fld1: 5221253219348815303_usize,fld2: _40.4.0 };
_9.4.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0];
_24.2 = !_5.1;
_21 = _32.0;
_30 = Adt51::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).0,fld1: 5505674512839300980_usize,fld2: _9.4.0 };
_40.2 = _2.2;
match _9.2.0 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
5 => bb26,
6 => bb27,
636257108 => bb29,
_ => bb28
}
}
bb21 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb22 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb23 = {
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_57.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 >> _12.1;
_40.2 = _2.2;
_2.1 = (_24.0, _40.1.1, _2.4.1);
_2.4 = (_15.0, _5.1);
_52 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2;
_60.1.1 = -_39;
match _9.2.0 {
0 => bb8,
1 => bb2,
636257108 => bb18,
_ => bb15
}
}
bb24 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb25 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb26 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb27 = {
_11 = _23;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _4;
_5.0 = _2.4.0;
_32.1 = _25;
SetDiscriminant(_19, 0);
_27 = [7504132259997704560_i64,431001919994132878_i64,2613792496129191282_i64,2569800313725399223_i64];
place!(Field::<[isize; 1]>(Variant(_19, 0), 5)) = [_18];
_9.1.0 = _8;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).0 = _21;
_2.1.1 = _6 | _6;
_28.fld0 = [_29,_29];
_31.fld0 = _28.fld0;
_20 = [5303968915974271927_usize,14378644425513073946_usize,1209178328805296874_usize,3_usize,14941735083312823343_usize,11197872147279953061_usize];
_2.2.1 = 992814542933338728_i64 as f64;
_9.4 = (_15.0, _2.4.1);
_18 = !_34;
_25 = _32.1;
_5.1 = _2.4.1 | _2.4.1;
_9.3 = [14805143797397509253_usize,5_usize,18046977049379648769_usize,6933804625634702543_usize,3_usize,8924806977659024530_usize];
_9.3 = [7_usize,5336159485910619506_usize,7_usize,4768439656650078982_usize,1540404538973101332_usize,3148639331607438458_usize];
_40.3 = [3_usize,10317727707489782203_usize,7_usize,4_usize,1_usize,5032079528460268814_usize];
_1 = 108857908413066299128084124758191108557_i128;
_32.2 = _9.2.1 as i128;
_2.1.2 = _9.4.1;
_4 = _2.1.1 as i32;
_2.4 = (_5.0, _9.1.2);
_40.2.1 = _17 + _9.2.1;
match _9.2.0 {
0 => bb6,
1 => bb9,
636257108 => bb11,
_ => bb10
}
}
bb28 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb29 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb30 = {
_15 = _5;
_2 = (_9.0, _40.1, _57, _40.3, _5);
_9.1 = _2.1;
_20 = [4_usize,5_usize,3_usize,12276688081033868228_usize,6_usize,12317996147629421130_usize];
_71 = core::ptr::addr_of_mut!(_46);
_40.4.1 = _9.1.2 * _15.1;
_8 = _11;
(*_71) = [_6,_9.1.1];
_41 = _47;
_33 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_57.0, _33);
_60.0 = Field::<[i64; 4]>(Variant(_48, 0), 0);
_66 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_36 = !_42;
_2.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _60.1.1;
_18 = _41 + _41;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_54.fld4, _33);
_2.4 = (Field::<[i32; 4]>(Variant(_30, 0), 2), _5.1);
place!(Field::<usize>(Variant(_30, 0), 1)) = 4_usize + 0_usize;
_9.1.0 = _7;
_31 = _22;
_2.0 = [12650_i16,9219_i16,21330_i16,(-27259_i16)];
_68.1.2 = !_12.1;
_9.1.1 = -_2.1.1;
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: _46 };
_44.fld2 = _9.0;
SetDiscriminant(_30, 0);
_32.2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2;
_10 = _68.1.0;
Goto(bb31)
}
bb31 = {
_2 = _9;
_32.2 = !_1;
_13 = _6;
_68.4.1 = _40.4.1;
place!(Field::<usize>(Variant(_48, 0), 1)) = _18 as usize;
_68.2 = _40.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
SetDiscriminant(_48, 2);
_64 = _36 as u16;
_50 = !(-4356_i16);
_9.2.0 = _54.fld4;
_56 = core::ptr::addr_of!(_64);
_72 = [_41];
_68.1.1 = _2.1.1 * _9.1.1;
Goto(bb32)
}
bb32 = {
_57.1 = -_60.1.1;
Goto(bb33)
}
bb33 = {
_36 = !_42;
_2 = (_40.0, _40.1, _40.2, _40.3, _5);
_24.2 = _36 as u8;
_54.fld2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as i64;
_40 = _9;
_2.3 = [1_usize,6_usize,5_usize,1_usize,4_usize,14458646079569058938_usize];
Goto(bb34)
}
bb34 = {
_3 = _7;
_9.2.0 = _57.0;
Goto(bb35)
}
bb35 = {
place!(Field::<Adt54>(Variant(_19, 0), 2)) = Adt54::Variant0 { fld0: _68.2 };
_77.0.0 = _44.fld0;
_37 = _9.1.1 == _6;
_68.2.1 = _53 as f64;
_35 = Move(Field::<Adt56>(Variant(_19, 0), 3));
match _68.2.0 {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
636257108 => bb41,
_ => bb40
}
}
bb36 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb37 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb38 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb39 = {
_11 = _23;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _4;
_5.0 = _2.4.0;
_32.1 = _25;
SetDiscriminant(_19, 0);
_27 = [7504132259997704560_i64,431001919994132878_i64,2613792496129191282_i64,2569800313725399223_i64];
place!(Field::<[isize; 1]>(Variant(_19, 0), 5)) = [_18];
_9.1.0 = _8;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).0 = _21;
_2.1.1 = _6 | _6;
_28.fld0 = [_29,_29];
_31.fld0 = _28.fld0;
_20 = [5303968915974271927_usize,14378644425513073946_usize,1209178328805296874_usize,3_usize,14941735083312823343_usize,11197872147279953061_usize];
_2.2.1 = 992814542933338728_i64 as f64;
_9.4 = (_15.0, _2.4.1);
_18 = !_34;
_25 = _32.1;
_5.1 = _2.4.1 | _2.4.1;
_9.3 = [14805143797397509253_usize,5_usize,18046977049379648769_usize,6933804625634702543_usize,3_usize,8924806977659024530_usize];
_9.3 = [7_usize,5336159485910619506_usize,7_usize,4768439656650078982_usize,1540404538973101332_usize,3148639331607438458_usize];
_40.3 = [3_usize,10317727707489782203_usize,7_usize,4_usize,1_usize,5032079528460268814_usize];
_1 = 108857908413066299128084124758191108557_i128;
_32.2 = _9.2.1 as i128;
_2.1.2 = _9.4.1;
_4 = _2.1.1 as i32;
_2.4 = (_5.0, _9.1.2);
_40.2.1 = _17 + _9.2.1;
match _9.2.0 {
0 => bb6,
1 => bb9,
636257108 => bb11,
_ => bb10
}
}
bb40 = {
_15 = _5;
_2 = (_9.0, _40.1, _57, _40.3, _5);
_9.1 = _2.1;
_20 = [4_usize,5_usize,3_usize,12276688081033868228_usize,6_usize,12317996147629421130_usize];
_71 = core::ptr::addr_of_mut!(_46);
_40.4.1 = _9.1.2 * _15.1;
_8 = _11;
(*_71) = [_6,_9.1.1];
_41 = _47;
_33 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_57.0, _33);
_60.0 = Field::<[i64; 4]>(Variant(_48, 0), 0);
_66 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_36 = !_42;
_2.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _60.1.1;
_18 = _41 + _41;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_54.fld4, _33);
_2.4 = (Field::<[i32; 4]>(Variant(_30, 0), 2), _5.1);
place!(Field::<usize>(Variant(_30, 0), 1)) = 4_usize + 0_usize;
_9.1.0 = _7;
_31 = _22;
_2.0 = [12650_i16,9219_i16,21330_i16,(-27259_i16)];
_68.1.2 = !_12.1;
_9.1.1 = -_2.1.1;
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: _46 };
_44.fld2 = _9.0;
SetDiscriminant(_30, 0);
_32.2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2;
_10 = _68.1.0;
Goto(bb31)
}
bb41 = {
_38 = _29;
_2.1.2 = _29 as u8;
_68.0 = _2.0;
_14 = _40.3;
_17 = _54.fld4 as f64;
_5.1 = 7_usize as u8;
_68.1.0 = _8;
_24.1 = 16829470367499579960_usize as i8;
_9.0 = [_50,_50,_50,_50];
SetDiscriminant(_35, 0);
_68.1.0 = _8;
place!(Field::<usize>(Variant(_30, 0), 1)) = _60.2 as usize;
SetDiscriminant(Field::<Adt54>(Variant(_19, 0), 2), 1);
_31.fld0 = [_29,_38];
_68.2 = _40.2;
_58 = _18 == _18;
Goto(bb42)
}
bb42 = {
_31.fld0 = _22.fld0;
(*_56) = 30445_u16;
_41 = _60.2 as isize;
_75 = (*_56) << _15.1;
_77.1 = _7;
(*_56) = _52 as u16;
_22 = Adt62 { fld0: _28.fld0 };
_67 = !_44.fld1;
_85 = _42 as f64;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_19, 0), 2)), 1), 0)).1 = _9.1.2 as i8;
_76 = _58 as isize;
_78 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_67 = -_44.fld1;
place!(Field::<[i32; 4]>(Variant(_30, 0), 2)) = [_57.0,_40.2.0,_40.2.0,_54.fld4];
_79 = _57.1;
_61 = -Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_44.fld2 = [_50,_50,_50,_50];
_52 = !_60.2;
_60 = (_44.fld3, _2.2, _52);
_36 = _42;
_68.1.2 = _21 as u8;
_57.1 = _60.2 as f64;
_84 = _54.fld4;
_77.3 = [_68.1.1,_2.1.1];
_61 = _2.1.1 as i32;
Goto(bb43)
}
bb43 = {
_50 = 19731_i16 - (-32290_i16);
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_19, 0), 2)), 1), 0)) = _9.1;
_44 = Adt55 { fld0: Field::<[i32; 4]>(Variant(_30, 0), 2),fld1: _1,fld2: _68.0,fld3: _60.0 };
_62 = Adt48::Variant1 { fld0: _37 };
_40.2 = (_84, _33);
place!(Field::<[u16; 3]>(Variant(place!(Field::<Adt54>(Variant(_19, 0), 2)), 1), 1)) = [_75,_75,_75];
_39 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _9.2.1;
_77.0.0 = _44.fld0;
_50 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as i16;
_9.0 = [_50,_50,_50,_50];
_8 = _3;
_2.1.1 = _53 as i8;
_9.2.0 = !_61;
_60 = (_27, _40.2, _52);
_37 = !_58;
_9.2.0 = _61;
_53 = _15.1 as f32;
Goto(bb44)
}
bb44 = {
place!(Field::<[i8; 2]>(Variant(_35, 0), 0)) = (*_71);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).1 = [_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52,_52,_60.2,_60.2];
_57.1 = _50 as f64;
_21 = _53;
_49 = Adt63::Variant3 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1,fld1: _75 };
place!(Field::<usize>(Variant(_30, 0), 1)) = !2686131889924455713_usize;
_88 = Field::<[i32; 4]>(Variant(_30, 0), 2);
_40.4 = (_88, _12.1);
_73 = [_50,_50,_50];
Goto(bb45)
}
bb45 = {
_52 = _60.2;
_43 = _40.1.0;
_92.2.1 = Field::<usize>(Variant(_30, 0), 1) as f64;
_32.0 = _53;
_92.4.0 = [_60.1.0,_40.2.0,_40.2.0,_84];
_41 = _76 & _47;
_92.3 = [Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1)];
_68.4.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_54.fld4,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_84];
_40.3 = _9.3;
_91 = _28.fld0;
_68.4.1 = Field::<(i32, f64)>(Variant(_49, 3), 0).0 as u8;
_83 = _54.fld2 as isize;
_41 = _75 as isize;
_79 = -_40.2.1;
Goto(bb46)
}
bb46 = {
_92 = (_2.0, _68.1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1, _20, _68.4);
_91 = _28.fld0;
_77.3 = [_40.1.1,_68.1.1];
_54.fld2 = (-4119707644696749769_i64) << _47;
_57.0 = !_84;
_2.1.1 = _23 as i8;
_22 = Adt62 { fld0: _28.fld0 };
_9.1.1 = !_6;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.0 = !_57.0;
_95.1 = (_2.1.0, _13, _15.1);
_37 = Field::<bool>(Variant(_62, 1), 0) ^ Field::<bool>(Variant(_62, 1), 0);
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: (*_71) };
_68.3 = [Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1)];
_5.0 = [_54.fld4,_61,_84,_92.2.0];
_2.4.1 = _15.1;
(*_56) = _60.2 as u16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_68.4 = _15;
_25 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_9.4.0 = [_61,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_61,_92.2.0];
(*_56) = !Field::<u16>(Variant(_49, 3), 1);
_47 = _41;
_31.fld0 = [_38,_29];
Goto(bb47)
}
bb47 = {
place!(Field::<[i64; 4]>(Variant(_30, 0), 0)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_5.1 = _15.1;
_9.4.0 = _5.0;
_68.1 = (_10, Field::<(char, i8, u8)>(Variant(Field::<Adt54>(Variant(_19, 0), 2), 1), 0).1, _40.4.1);
_43 = _68.1.0;
_31.fld0 = _28.fld0;
_19 = Move(_49);
_46 = _77.3;
_27 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_98 = -_67;
_94 = core::ptr::addr_of!(_37);
_92.2.1 = _17 * _2.2.1;
SetDiscriminant(_30, 1);
_86 = _41;
_93 = -_41;
_77.0.1 = _92.4.1;
_32.1 = [_52,_52,_60.2,_52,_60.2,_60.2,_52];
_2.2.0 = _54.fld2 as i32;
_101 = Adt54::Variant0 { fld0: _2.2 };
_100.fld2 = Adt48::Variant0 { fld0: _15,fld1: _9.0,fld2: _42,fld3: _94,fld4: _60.2 };
(*_71) = _77.3;
_10 = _11;
_85 = _38 as f64;
_77 = (_2.4, _23, _68.0, Field::<[i8; 2]>(Variant(_35, 0), 0));
_68.1.1 = _54.fld2 as i8;
_39 = Field::<(i32, f64)>(Variant(_101, 0), 0).1 + _33;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)) = _32;
match _1 {
108857908413066299128084124758191108557 => bb48,
_ => bb26
}
}
bb48 = {
_24.1 = !_95.1.1;
_83 = !_93;
_40.1 = (_3, _24.1, _95.1.2);
_77.0 = Field::<([i32; 4], u8)>(Variant(_100.fld2, 0), 0);
_77.2 = [_50,_50,_50,_50];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4)).1 = _57;
_100.fld4.2 = (_60.1.0, _40.2.1);
_100.fld0 = [_38,_38];
_44.fld0 = [_54.fld4,Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0,_92.2.0,_60.1.0];
_95.3 = [5591111585303300101_usize,4_usize,15439866743059080099_usize,7_usize,2_usize,3_usize];
_100.fld5 = [_37,(*_94),(*_94),Field::<bool>(Variant(_62, 1), 0),Field::<bool>(Variant(_62, 1), 0)];
SetDiscriminant(_62, 1);
_95.2.1 = _39;
_5.1 = _68.1.1 as u8;
_77.0.1 = Field::<([i32; 4], u8)>(Variant(_100.fld2, 0), 0).1 + _5.1;
_82.fld4 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0;
_9.0 = _2.0;
_95.1.0 = _77.1;
_57 = (_68.2.0, _100.fld4.2.1);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4)).1.1 = _100.fld4.2.1;
_92.1 = _9.1;
Goto(bb49)
}
bb49 = {
place!(Field::<[bool; 5]>(Variant(_30, 1), 6)) = _100.fld5;
_95.2 = (_54.fld4, _79);
_100.fld4.0 = [_50,_50,_50,_50];
_100.fld2 = Adt48::Variant3 { fld0: Field::<[bool; 5]>(Variant(_30, 1), 6),fld1: _77.1,fld2: _77,fld3: _94,fld4: _60.2,fld5: _95.2.0,fld6: _72 };
_75 = !_64;
_52 = _36 as u32;
_71 = core::ptr::addr_of_mut!(_46);
place!(Field::<(i32, f64)>(Variant(_101, 0), 0)) = (_60.1.0, _2.2.1);
_108 = core::ptr::addr_of_mut!(_81);
_77.1 = _7;
_100.fld4.2.1 = _54.fld2 as f64;
_77.2 = [_50,_50,_50,_50];
_18 = _76;
place!(Field::<[i8; 2]>(Variant(_35, 0), 0)) = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_100.fld2, 3), 2).3;
match _29 {
2266422573016976570 => bb50,
_ => bb22
}
}
bb50 = {
_108 = core::ptr::addr_of_mut!(place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_100.fld2, 3), 2)).3);
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)) = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0, _92.2.1);
_92.1.2 = _1 as u8;
_87 = [_41];
_95.0 = [_50,_50,_50,_50];
match _29 {
0 => bb5,
1 => bb22,
2 => bb51,
3 => bb52,
2266422573016976570 => bb54,
_ => bb53
}
}
bb51 = {
_9.2.1 = _33 + _39;
_48 = Adt51::Variant0 { fld0: _44.fld3,fld1: 5221253219348815303_usize,fld2: _40.4.0 };
_9.4.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0];
_24.2 = !_5.1;
_21 = _32.0;
_30 = Adt51::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).0,fld1: 5505674512839300980_usize,fld2: _9.4.0 };
_40.2 = _2.2;
match _9.2.0 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
5 => bb26,
6 => bb27,
636257108 => bb29,
_ => bb28
}
}
bb52 = {
_57.1 = -_60.1.1;
Goto(bb33)
}
bb53 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb54 = {
_92.3 = [0_usize,1_usize,6_usize,0_usize,11218119698934565436_usize,1_usize];
_92.1.1 = _50 as i8;
_9.1.2 = _77.0.1 | _2.4.1;
_60.1.1 = _40.1.1 as f64;
_18 = _2.4.1 as isize;
match _38 {
0 => bb34,
2266422573016976570 => bb56,
_ => bb55
}
}
bb55 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb56 = {
_100.fld4.2.0 = _37 as i32;
SetDiscriminant(_100.fld2, 0);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)).1 = _32.1;
_68.1.0 = _8;
_5.0 = _44.fld0;
_92 = _9;
_99 = Adt50::Variant0 { fld0: _92.2.1,fld1: _12,fld2: _38,fld3: _9.1.1,fld4: _9.3,fld5: _84,fld6: _100.fld5 };
_21 = _53 * Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1).0;
_69 = _40.1.1 as f64;
_27 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
place!(Field::<([i32; 4], u8)>(Variant(_100.fld2, 0), 0)).0 = _77.0.0;
_100.fld1 = Field::<(i32, f64)>(Variant(_101, 0), 0).1 as usize;
_69 = _53 as f64;
_82.fld4 = !Field::<(i32, f64)>(Variant(_19, 3), 0).0;
place!(Field::<*const bool>(Variant(_100.fld2, 0), 3)) = core::ptr::addr_of!(_37);
place!(Field::<u32>(Variant(_100.fld2, 0), 4)) = _2.4.1 as u32;
_95.1.0 = _10;
_2.0 = [_50,_50,_50,_50];
_110 = _83;
_16 = _68.1.0;
_111 = -_32.0;
_96 = _36 * _42;
_33 = Field::<(i32, f64)>(Variant(_19, 3), 0).1 * _100.fld4.2.1;
_44.fld0 = [_2.2.0,Field::<i32>(Variant(_99, 0), 5),_95.2.0,_84];
match Field::<u64>(Variant(_99, 0), 2) {
0 => bb57,
1 => bb58,
2266422573016976570 => bb60,
_ => bb59
}
}
bb57 = {
place!(Field::<[i64; 4]>(Variant(_30, 0), 0)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_5.1 = _15.1;
_9.4.0 = _5.0;
_68.1 = (_10, Field::<(char, i8, u8)>(Variant(Field::<Adt54>(Variant(_19, 0), 2), 1), 0).1, _40.4.1);
_43 = _68.1.0;
_31.fld0 = _28.fld0;
_19 = Move(_49);
_46 = _77.3;
_27 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_98 = -_67;
_94 = core::ptr::addr_of!(_37);
_92.2.1 = _17 * _2.2.1;
SetDiscriminant(_30, 1);
_86 = _41;
_93 = -_41;
_77.0.1 = _92.4.1;
_32.1 = [_52,_52,_60.2,_52,_60.2,_60.2,_52];
_2.2.0 = _54.fld2 as i32;
_101 = Adt54::Variant0 { fld0: _2.2 };
_100.fld2 = Adt48::Variant0 { fld0: _15,fld1: _9.0,fld2: _42,fld3: _94,fld4: _60.2 };
(*_71) = _77.3;
_10 = _11;
_85 = _38 as f64;
_77 = (_2.4, _23, _68.0, Field::<[i8; 2]>(Variant(_35, 0), 0));
_68.1.1 = _54.fld2 as i8;
_39 = Field::<(i32, f64)>(Variant(_101, 0), 0).1 + _33;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)) = _32;
match _1 {
108857908413066299128084124758191108557 => bb48,
_ => bb26
}
}
bb58 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb59 = {
place!(Field::<[bool; 5]>(Variant(_30, 1), 6)) = _100.fld5;
_95.2 = (_54.fld4, _79);
_100.fld4.0 = [_50,_50,_50,_50];
_100.fld2 = Adt48::Variant3 { fld0: Field::<[bool; 5]>(Variant(_30, 1), 6),fld1: _77.1,fld2: _77,fld3: _94,fld4: _60.2,fld5: _95.2.0,fld6: _72 };
_75 = !_64;
_52 = _36 as u32;
_71 = core::ptr::addr_of_mut!(_46);
place!(Field::<(i32, f64)>(Variant(_101, 0), 0)) = (_60.1.0, _2.2.1);
_108 = core::ptr::addr_of_mut!(_81);
_77.1 = _7;
_100.fld4.2.1 = _54.fld2 as f64;
_77.2 = [_50,_50,_50,_50];
_18 = _76;
place!(Field::<[i8; 2]>(Variant(_35, 0), 0)) = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_100.fld2, 3), 2).3;
match _29 {
2266422573016976570 => bb50,
_ => bb22
}
}
bb60 = {
_100.fld4.1.0 = _10;
_24.0 = _68.1.0;
_29 = Field::<u64>(Variant(_99, 0), 2);
_19 = Adt63::Variant3 { fld0: _60.1,fld1: _75 };
_40.1.2 = Field::<u16>(Variant(_19, 3), 1) as u8;
place!(Field::<[i32; 2]>(Variant(_30, 1), 7)) = [_54.fld4,_82.fld4];
_29 = !_38;
place!(Field::<i8>(Variant(_99, 0), 3)) = Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0 as i8;
_53 = _13 as f32;
place!(Field::<u32>(Variant(_100.fld2, 0), 4)) = _32.0 as u32;
SetDiscriminant(_99, 0);
(*_94) = _82.fld4 == _95.2.0;
(*_71) = [_9.1.1,_95.1.1];
_28.fld0 = [_38,_29];
_87 = _72;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = (_100.fld4.0, _40.1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1, _14, _15);
_40.1 = (_8, _6, _77.0.1);
_69 = -_57.1;
Goto(bb61)
}
bb61 = {
_101 = Adt54::Variant0 { fld0: _57 };
_24.1 = Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1).2 as i8;
_63 = _36;
place!(Field::<([i32; 4], u8)>(Variant(_100.fld2, 0), 0)).1 = _9.1.2 << _9.1.2;
match _38 {
0 => bb32,
1 => bb62,
2 => bb63,
3 => bb64,
4 => bb65,
5 => bb66,
6 => bb67,
2266422573016976570 => bb69,
_ => bb68
}
}
bb62 = {
_108 = core::ptr::addr_of_mut!(place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_100.fld2, 3), 2)).3);
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)) = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0, _92.2.1);
_92.1.2 = _1 as u8;
_87 = [_41];
_95.0 = [_50,_50,_50,_50];
match _29 {
0 => bb5,
1 => bb22,
2 => bb51,
3 => bb52,
2266422573016976570 => bb54,
_ => bb53
}
}
bb63 = {
_40.4.1 = _29 as u8;
Goto(bb20)
}
bb64 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb65 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb66 = {
_36 = !_42;
_2 = (_40.0, _40.1, _40.2, _40.3, _5);
_24.2 = _36 as u8;
_54.fld2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as i64;
_40 = _9;
_2.3 = [1_usize,6_usize,5_usize,1_usize,4_usize,14458646079569058938_usize];
Goto(bb34)
}
bb67 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb68 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb69 = {
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_2.2.0 = _68.2.0 >> _68.1.2;
place!(Field::<i8>(Variant(_99, 0), 3)) = _6 ^ _68.1.1;
_92 = (_40.0, _95.1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1, _40.3, _9.4);
_100.fld4 = (_44.fld2, _68.1, _2.2, _95.3, _2.4);
_68.2.1 = _92.2.1 * _95.2.1;
_100.fld3 = _56;
_99 = Adt50::Variant0 { fld0: _68.2.1,fld1: _2.4,fld2: _38,fld3: _95.1.1,fld4: _100.fld4.3,fld5: Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0,fld6: Field::<[bool; 5]>(Variant(_30, 1), 6) };
_2.2 = Field::<(i32, f64)>(Variant(_19, 3), 0);
_108 = _71;
match Field::<u64>(Variant(_99, 0), 2) {
0 => bb23,
1 => bb17,
2 => bb70,
3 => bb71,
4 => bb72,
5 => bb73,
2266422573016976570 => bb75,
_ => bb74
}
}
bb70 = {
place!(Field::<[i64; 4]>(Variant(_30, 0), 0)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_5.1 = _15.1;
_9.4.0 = _5.0;
_68.1 = (_10, Field::<(char, i8, u8)>(Variant(Field::<Adt54>(Variant(_19, 0), 2), 1), 0).1, _40.4.1);
_43 = _68.1.0;
_31.fld0 = _28.fld0;
_19 = Move(_49);
_46 = _77.3;
_27 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_98 = -_67;
_94 = core::ptr::addr_of!(_37);
_92.2.1 = _17 * _2.2.1;
SetDiscriminant(_30, 1);
_86 = _41;
_93 = -_41;
_77.0.1 = _92.4.1;
_32.1 = [_52,_52,_60.2,_52,_60.2,_60.2,_52];
_2.2.0 = _54.fld2 as i32;
_101 = Adt54::Variant0 { fld0: _2.2 };
_100.fld2 = Adt48::Variant0 { fld0: _15,fld1: _9.0,fld2: _42,fld3: _94,fld4: _60.2 };
(*_71) = _77.3;
_10 = _11;
_85 = _38 as f64;
_77 = (_2.4, _23, _68.0, Field::<[i8; 2]>(Variant(_35, 0), 0));
_68.1.1 = _54.fld2 as i8;
_39 = Field::<(i32, f64)>(Variant(_101, 0), 0).1 + _33;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)) = _32;
match _1 {
108857908413066299128084124758191108557 => bb48,
_ => bb26
}
}
bb71 = {
_15 = _5;
_2 = (_9.0, _40.1, _57, _40.3, _5);
_9.1 = _2.1;
_20 = [4_usize,5_usize,3_usize,12276688081033868228_usize,6_usize,12317996147629421130_usize];
_71 = core::ptr::addr_of_mut!(_46);
_40.4.1 = _9.1.2 * _15.1;
_8 = _11;
(*_71) = [_6,_9.1.1];
_41 = _47;
_33 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_57.0, _33);
_60.0 = Field::<[i64; 4]>(Variant(_48, 0), 0);
_66 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_36 = !_42;
_2.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _60.1.1;
_18 = _41 + _41;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_54.fld4, _33);
_2.4 = (Field::<[i32; 4]>(Variant(_30, 0), 2), _5.1);
place!(Field::<usize>(Variant(_30, 0), 1)) = 4_usize + 0_usize;
_9.1.0 = _7;
_31 = _22;
_2.0 = [12650_i16,9219_i16,21330_i16,(-27259_i16)];
_68.1.2 = !_12.1;
_9.1.1 = -_2.1.1;
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: _46 };
_44.fld2 = _9.0;
SetDiscriminant(_30, 0);
_32.2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2;
_10 = _68.1.0;
Goto(bb31)
}
bb72 = {
_36 = !_42;
_2 = (_40.0, _40.1, _40.2, _40.3, _5);
_24.2 = _36 as u8;
_54.fld2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as i64;
_40 = _9;
_2.3 = [1_usize,6_usize,5_usize,1_usize,4_usize,14458646079569058938_usize];
Goto(bb34)
}
bb73 = {
_101 = Adt54::Variant0 { fld0: _57 };
_24.1 = Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1).2 as i8;
_63 = _36;
place!(Field::<([i32; 4], u8)>(Variant(_100.fld2, 0), 0)).1 = _9.1.2 << _9.1.2;
match _38 {
0 => bb32,
1 => bb62,
2 => bb63,
3 => bb64,
4 => bb65,
5 => bb66,
6 => bb67,
2266422573016976570 => bb69,
_ => bb68
}
}
bb74 = {
_57.1 = -_60.1.1;
Goto(bb33)
}
bb75 = {
_106 = _50 as i8;
_57.1 = _33 * Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.1;
_100.fld4.1 = (_8, _6, _12.1);
_86 = -_110;
SetDiscriminant(_35, 1);
_93 = -_83;
_108 = core::ptr::addr_of_mut!(_81);
(*_108) = [_40.1.1,_68.1.1];
place!(Field::<([i32; 4], u8)>(Variant(_99, 0), 1)).0 = _88;
_5 = _9.4;
place!(Field::<i8>(Variant(_99, 0), 3)) = -_100.fld4.1.1;
_95.2.0 = _84;
_30 = Adt51::Variant0 { fld0: _27,fld1: _100.fld1,fld2: _88 };
_100.fld4.1.1 = _92.1.1;
_46 = [_92.1.1,_68.1.1];
_100.fld2 = Adt48::Variant2 { fld0: _100.fld3,fld1: _87 };
Goto(bb76)
}
bb76 = {
_29 = !_38;
_100.fld3 = core::ptr::addr_of!(_75);
SetDiscriminant(_19, 0);
(*_94) = _58;
_40.2.0 = _100.fld1 as i32;
_100.fld4.1.0 = _40.1.0;
_60.1.0 = _75 as i32;
_97 = _86 + _83;
_60 = (_27, _9.2, _52);
_111 = _9.1.1 as f32;
_60.0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_116 = Adt63::Variant3 { fld0: _92.2,fld1: _75 };
_89 = _37;
_100.fld4.0 = _68.0;
_100.fld4.2 = _60.1;
_103 = _1 as f64;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).2 = _63 as i128;
_54.fld2 = !(-9034495230544625631_i64);
_109 = Adt52::Variant0 { fld0: _37,fld1: _63,fld2: _30,fld3: _100.fld5,fld4: _32.0,fld5: Field::<usize>(Variant(_30, 0), 1),fld6: _72 };
_92.0 = _9.0;
_92.1 = (_24.0, _68.1.1, _40.1.2);
_92 = _68;
_60.1.0 = Field::<(i32, f64)>(Variant(_116, 3), 0).0;
place!(Field::<Adt51>(Variant(_109, 0), 2)) = _30;
_75 = _64;
_123 = -_2.2.1;
match Field::<u64>(Variant(_99, 0), 2) {
0 => bb53,
1 => bb51,
2 => bb52,
2266422573016976570 => bb77,
_ => bb43
}
}
bb77 = {
_23 = _92.1.0;
_9 = (_68.0, _92.1, _95.2, _95.3, _12);
_32 = (Field::<f32>(Variant(_109, 0), 4), _25, _67);
_21 = _111;
_75 = !_64;
_60.1 = _100.fld4.2;
_40.2.0 = Field::<(i32, f64)>(Variant(_116, 3), 0).0 & _68.2.0;
SetDiscriminant(_30, 0);
_100.fld4.2.1 = _69;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_68.2.0, _9.2.1);
SetDiscriminant(_116, 1);
_26 = _41;
_60 = (Field::<[i64; 4]>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 0), 0), _68.2, _52);
_103 = _9.2.1 * _95.2.1;
_90 = _33 as i128;
_68.3 = _100.fld4.3;
_47 = _50 as isize;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3)).3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 0), 1),Field::<usize>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 0), 1),_100.fld1,_100.fld1];
(*_94) = _89;
_118 = Field::<bool>(Variant(_109, 0), 0) ^ _37;
_95.2.0 = _61;
SetDiscriminant(Field::<Adt51>(Variant(_109, 0), 2), 1);
_81 = [_100.fld4.1.1,_6];
match _1 {
0 => bb4,
108857908413066299128084124758191108557 => bb79,
_ => bb78
}
}
bb78 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb79 = {
_9.2.1 = -Field::<(i32, f64)>(Variant(_101, 0), 0).1;
_2.0 = _68.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3)).2 = (_9.2.0, _123);
_92.2.0 = _36 as i32;
_26 = _86;
Goto(bb80)
}
bb80 = {
place!(Field::<u64>(Variant(_99, 0), 2)) = (*_56) as u64;
_92 = _68;
_3 = _16;
_100.fld6 = _77.1 as u8;
_98 = -_90;
(*_94) = _92.1.1 >= _92.1.1;
_89 = (*_94);
_97 = _26;
Goto(bb81)
}
bb81 = {
SetDiscriminant(_100.fld2, 1);
_48 = Adt51::Variant0 { fld0: _60.0,fld1: Field::<usize>(Variant(_109, 0), 5),fld2: _12.0 };
SetDiscriminant(_48, 0);
_133 = _53;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1.0 = !_54.fld4;
(*_56) = _75;
_104 = _92.1.1 & Field::<i8>(Variant(_99, 0), 3);
_100.fld4.1 = (_7, _40.1.1, _77.0.1);
place!(Field::<Adt54>(Variant(_19, 0), 2)) = _101;
_26 = _97 & _97;
_40.2 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).2.0, _95.2.1);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).2 = _52;
_102 = _24.0;
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 1)) = (_21, _25, _90);
_73 = [_50,_50,_50];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).2 = !_100.fld4.4.1;
place!(Field::<bool>(Variant(_62, 1), 0)) = !_58;
_95.1 = (_40.1.0, Field::<i8>(Variant(_99, 0), 3), _40.4.1);
_2.1.1 = -_95.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_95.1.1 = _100.fld4.1.1 | _9.1.1;
_20 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5),_100.fld1,Field::<usize>(Variant(_109, 0), 5),_100.fld1];
match _1 {
0 => bb27,
1 => bb28,
2 => bb20,
3 => bb75,
4 => bb67,
108857908413066299128084124758191108557 => bb83,
_ => bb82
}
}
bb82 = {
_40.4.1 = _29 as u8;
Goto(bb20)
}
bb83 = {
place!(Field::<[i64; 4]>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 5)) = _27;
_15 = (_40.4.0, _9.4.1);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1 = (_100.fld4.2.0, _39);
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _27;
_41 = _86 & _93;
place!(Field::<[bool; 5]>(Variant(_99, 0), 6)) = [Field::<bool>(Variant(_109, 0), 0),_58,_89,_58,(*_94)];
SetDiscriminant(_62, 3);
_92.1.2 = !_12.1;
Goto(bb84)
}
bb84 = {
_79 = -_103;
SetDiscriminant(Field::<Adt54>(Variant(_19, 0), 2), 1);
_138 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 1).0;
_9 = (_100.fld4.0, _40.1, _60.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).3, _15);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = _50 * _50;
_135.fld3 = !_13;
_138 = Field::<f32>(Variant(_109, 0), 4);
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).2 = _40.2.0 as u8;
match _38 {
0 => bb85,
1 => bb86,
2 => bb87,
2266422573016976570 => bb89,
_ => bb88
}
}
bb85 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb86 = {
_31.fld0 = _22.fld0;
(*_56) = 30445_u16;
_41 = _60.2 as isize;
_75 = (*_56) << _15.1;
_77.1 = _7;
(*_56) = _52 as u16;
_22 = Adt62 { fld0: _28.fld0 };
_67 = !_44.fld1;
_85 = _42 as f64;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_19, 0), 2)), 1), 0)).1 = _9.1.2 as i8;
_76 = _58 as isize;
_78 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_67 = -_44.fld1;
place!(Field::<[i32; 4]>(Variant(_30, 0), 2)) = [_57.0,_40.2.0,_40.2.0,_54.fld4];
_79 = _57.1;
_61 = -Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_44.fld2 = [_50,_50,_50,_50];
_52 = !_60.2;
_60 = (_44.fld3, _2.2, _52);
_36 = _42;
_68.1.2 = _21 as u8;
_57.1 = _60.2 as f64;
_84 = _54.fld4;
_77.3 = [_68.1.1,_2.1.1];
_61 = _2.1.1 as i32;
Goto(bb43)
}
bb87 = {
_40.4.1 = _29 as u8;
Goto(bb20)
}
bb88 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb89 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3)).1 = (_16, _9.1.1, _95.1.2);
place!(Field::<*const *const isize>(Variant(_19, 0), 4)) = core::ptr::addr_of!(place!(Field::<*const isize>(Variant(_116, 1), 1)));
_119 = (*_94) as i32;
_2.2.1 = _12.1 as f64;
_9.2.1 = -_100.fld4.2.1;
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).1 = _100.fld4.1.1;
place!(Field::<i32>(Variant(_62, 3), 5)) = _92.2.0;
_130 = [_2.2.0,_40.2.0];
_136 = _73;
SetDiscriminant(_99, 1);
_95.1 = (_7, _135.fld3, _68.4.1);
_54.fld3 = Adt58::Variant1 { fld0: Field::<*const *const isize>(Variant(_19, 0), 4) };
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).0 = _10;
place!(Field::<u64>(Variant(_99, 1), 2)) = _29 | _38;
_8 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).1.0;
place!(Field::<*const bool>(Variant(_62, 3), 3)) = core::ptr::addr_of!(place!(Field::<bool>(Variant(_100.fld2, 1), 0)));
place!(Field::<*const *const isize>(Variant(_35, 1), 1)) = core::ptr::addr_of!(place!(Field::<*const isize>(Variant(_116, 1), 1)));
_9.1.2 = _64 as u8;
_139 = _26;
(*_71) = [_68.1.1,_95.1.1];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.0 = _9.4.0;
_115 = core::ptr::addr_of_mut!(_92.3);
match _44.fld1 {
0 => bb90,
108857908413066299128084124758191108557 => bb92,
_ => bb91
}
}
bb90 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb91 = {
_92 = (_2.0, _68.1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1, _20, _68.4);
_91 = _28.fld0;
_77.3 = [_40.1.1,_68.1.1];
_54.fld2 = (-4119707644696749769_i64) << _47;
_57.0 = !_84;
_2.1.1 = _23 as i8;
_22 = Adt62 { fld0: _28.fld0 };
_9.1.1 = !_6;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.0 = !_57.0;
_95.1 = (_2.1.0, _13, _15.1);
_37 = Field::<bool>(Variant(_62, 1), 0) ^ Field::<bool>(Variant(_62, 1), 0);
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: (*_71) };
_68.3 = [Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1)];
_5.0 = [_54.fld4,_61,_84,_92.2.0];
_2.4.1 = _15.1;
(*_56) = _60.2 as u16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_68.4 = _15;
_25 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_9.4.0 = [_61,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_61,_92.2.0];
(*_56) = !Field::<u16>(Variant(_49, 3), 1);
_47 = _41;
_31.fld0 = [_38,_29];
Goto(bb47)
}
bb92 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3)).1 = (_68.1.0, Field::<(char, i8, u8)>(Variant(_116, 1), 6).1, _100.fld4.1.2);
_100.fld4.2.0 = _2.2.0 + Field::<(i32, f64)>(Variant(_101, 0), 0).0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).2 = _92.1.2 as i128;
place!(Field::<usize>(Variant(_99, 1), 7)) = _89 as usize;
place!(Field::<u32>(Variant(_62, 3), 4)) = _52;
_135.fld0 = Adt48::Variant0 { fld0: _2.4,fld1: _100.fld4.0,fld2: _42,fld3: _94,fld4: Field::<u32>(Variant(_62, 3), 4) };
_56 = _100.fld3;
match _1 {
0 => bb78,
1 => bb74,
108857908413066299128084124758191108557 => bb94,
_ => bb93
}
}
bb93 = {
_36 = !_42;
_2 = (_40.0, _40.1, _40.2, _40.3, _5);
_24.2 = _36 as u8;
_54.fld2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2 as i64;
_40 = _9;
_2.3 = [1_usize,6_usize,5_usize,1_usize,4_usize,14458646079569058938_usize];
Goto(bb34)
}
bb94 = {
_60.1.1 = -_57.1;
_112 = !Field::<u128>(Variant(_135.fld0, 0), 2);
_95.4.0 = _88;
_40.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).1.2);
place!(Field::<[i16; 3]>(Variant(_99, 1), 5)) = [_50,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_9.4.0 = [_100.fld4.2.0,_95.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_84];
_5.1 = Field::<([i32; 4], u8)>(Variant(_135.fld0, 0), 0).1 & _40.4.1;
_87 = [_139];
_92.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),_100.fld1];
_9.4.1 = _95.1.2 | _68.1.2;
_100.fld2 = Adt48::Variant0 { fld0: _40.4,fld1: _40.0,fld2: _63,fld3: Field::<*const bool>(Variant(_135.fld0, 0), 3),fld4: _52 };
Goto(bb95)
}
bb95 = {
place!(Field::<char>(Variant(_62, 3), 1)) = _8;
_17 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).2.1;
Goto(bb96)
}
bb96 = {
place!(Field::<Adt54>(Variant(_19, 0), 2)) = _101;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = [_61,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<(i32, f64)>(Variant(_101, 0), 0).0,Field::<(i32, f64)>(Variant(Field::<Adt54>(Variant(_19, 0), 2), 0), 0).0];
_32 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 1);
Goto(bb97)
}
bb97 = {
place!(Field::<usize>(Variant(_30, 0), 1)) = Field::<usize>(Variant(_109, 0), 5);
_100.fld4.4 = _9.4;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).1.1 = _13 ^ _100.fld4.1.1;
_135.fld1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).1.0;
place!(Field::<(i32, f64)>(Variant(_99, 1), 1)).1 = _83 as f64;
SetDiscriminant(_135.fld0, 0);
place!(Field::<[i16; 4]>(Variant(_135.fld0, 0), 1)) = [_50,_50,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_12.1 = _68.1.2;
_54.fld3 = Adt58::Variant1 { fld0: Field::<*const *const isize>(Variant(_19, 0), 4) };
_116 = Adt63::Variant2 { fld0: _37,fld1: Move(_100.fld2),fld2: _92.3,fld3: _32,fld4: Move(_54.fld3),fld5: _87,fld6: Field::<[i64; 4]>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 5) };
_54.fld2 = !(-70280148655911987_i64);
_92.2 = (_135.fld1, _39);
place!(Field::<Adt51>(Variant(_109, 0), 2)) = Adt51::Variant1 { fld0: _118,fld1: _32,fld2: _9.0,fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).1.1,fld4: _60,fld5: _60.0,fld6: _100.fld5,fld7: _130 };
_40.4.0 = [_9.2.0,_119,_2.2.0,_95.2.0];
_88 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.0;
_84 = !_92.2.0;
_100.fld4.4 = (Field::<[i32; 4]>(Variant(_48, 0), 2), _68.4.1);
place!(Field::<[isize; 1]>(Variant(_62, 3), 6)) = [_76];
_54.fld3 = Move(Field::<Adt58>(Variant(_116, 2), 4));
place!(Field::<[i64; 4]>(Variant(_30, 0), 0)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9.4.1 = !_100.fld4.4.1;
_142 = _94;
Goto(bb98)
}
bb98 = {
_82.fld4 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_80 = _71;
_82.fld3 = Move(_54.fld3);
place!(Field::<i8>(Variant(_99, 1), 3)) = -_68.1.1;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).1 = _78;
_99 = Adt50::Variant1 { fld0: (*_142),fld1: _95.2,fld2: _38,fld3: _40.1.1,fld4: _92,fld5: _136,fld6: _68.4,fld7: Field::<usize>(Variant(_109, 0), 5) };
_60 = (Field::<[i64; 4]>(Variant(_116, 2), 6), _68.2, Field::<u32>(Variant(Field::<Adt48>(Variant(_116, 2), 1), 0), 4));
place!(Field::<u128>(Variant(_135.fld0, 0), 2)) = _42 | _36;
(*_80) = [_92.1.1,_9.1.1];
_146 = Adt59 { fld0: Move(Field::<Adt48>(Variant(_116, 2), 1)),fld1: _2.2.0,fld2: (*_56),fld3: _9.1.1 };
_19 = Adt63::Variant2 { fld0: Field::<bool>(Variant(_109, 0), 0),fld1: Move(_146.fld0),fld2: Field::<[usize; 6]>(Variant(_116, 2), 2),fld3: Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 1),fld4: Move(_82.fld3),fld5: _87,fld6: Field::<[i64; 4]>(Variant(_48, 0), 0) };
place!(Field::<(i32, f64)>(Variant(_99, 1), 1)).0 = _61 << _95.1.1;
_32.0 = -Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3).0;
Goto(bb99)
}
bb99 = {
_145.0.0 = [Field::<(i32, f64)>(Variant(_99, 1), 1).0,_61,_92.2.0,_146.fld1];
_107 = _2.1.1 as isize;
_151 = !_107;
place!(Field::<usize>(Variant(_48, 0), 1)) = Field::<usize>(Variant(_99, 1), 7) * _100.fld1;
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 1)).2 = _98;
_124 = !(*_142);
(*_115) = [Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(_48, 0), 1),_100.fld1,Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_99, 1), 7)];
_40.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),_100.fld1,Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_48, 0), 1)];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).1 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<u32>(Variant(Field::<Adt48>(Variant(_19, 2), 1), 0), 4),_52,Field::<u32>(Variant(Field::<Adt48>(Variant(_19, 2), 1), 0), 4),Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,_52];
_147 = Adt57::Variant1 { fld0: _56,fld1: _109,fld2: _94 };
place!(Field::<Adt48>(Variant(_19, 2), 1)) = Adt48::Variant2 { fld0: Field::<*const u16>(Variant(_147, 1), 0),fld1: Field::<[isize; 1]>(Variant(_109, 0), 6) };
_66 = Field::<i8>(Variant(_99, 1), 3) << _97;
_84 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).1.0;
_134 = core::ptr::addr_of!((*_56));
_73 = [_50,_50,_50];
_28 = Adt62 { fld0: _22.fld0 };
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)).2 = _98;
SetDiscriminant(Field::<Adt51>(Variant(_109, 0), 2), 2);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).0 = _53 * _53;
_154.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.1 = _50 as u8;
place!(Field::<u128>(Variant(place!(Field::<Adt52>(Variant(_147, 1), 1)), 0), 1)) = !_96;
match _38 {
0 => bb10,
1 => bb41,
2 => bb8,
3 => bb96,
4 => bb83,
5 => bb100,
2266422573016976570 => bb102,
_ => bb101
}
}
bb100 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb101 = {
_57.1 = -_60.1.1;
Goto(bb33)
}
bb102 = {
_95.2.1 = -_39;
Goto(bb103)
}
bb103 = {
_56 = core::ptr::addr_of!((*_134));
_88 = [_100.fld4.2.0,_92.2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0,_61];
_128 = _50;
Call(_97 = core::intrinsics::transmute(_110), bb104, UnwindUnreachable())
}
bb104 = {
Goto(bb105)
}
bb105 = {
_132 = !Field::<bool>(Variant(_19, 2), 0);
_31 = Adt62 { fld0: _91 };
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2)).0 = Field::<([i32; 4], u8)>(Variant(_99, 1), 6);
_70 = Field::<*const *const isize>(Variant(_35, 1), 1);
place!(Field::<u128>(Variant(_109, 0), 1)) = Field::<u128>(Variant(Field::<Adt52>(Variant(_147, 1), 1), 0), 1);
_50 = _128;
_10 = _100.fld4.1.0;
Goto(bb106)
}
bb106 = {
_95.1.1 = _2.1.1 * _135.fld3;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)) = (_133, _32.1, _90);
_68.1.2 = Field::<([i32; 4], u8)>(Variant(_99, 1), 6).1;
_133 = _100.fld1 as f32;
_115 = core::ptr::addr_of_mut!(place!(Field::<[usize; 6]>(Variant(_19, 2), 2)));
_3 = _16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_147, 1), 1)), 0), 2)), 1), 4)).1.0 = !_61;
_55 = Adt57::Variant1 { fld0: _56,fld1: Field::<Adt52>(Variant(_147, 1), 1),fld2: _142 };
_100.fld4.1.1 = Field::<bool>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 0) as i8;
(*_71) = (*_108);
_92.0 = _68.0;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_55, 1), 1)), 0), 2)), 1), 4)) = (Field::<[i64; 4]>(Variant(_116, 2), 6), _9.2, _52);
_9.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 2), 1), 4).1.1;
_77 = (_12, _43, _9.0, _46);
_100.fld4.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 2), 1), 4).1.1;
place!(Field::<*const *const isize>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 2), 0)) = _70;
_51 = Field::<Adt52>(Variant(_55, 1), 1);
SetDiscriminant(Field::<Adt58>(Variant(_19, 2), 4), 0);
_63 = Field::<u128>(Variant(Field::<Adt52>(Variant(_147, 1), 1), 0), 1) ^ Field::<u128>(Variant(_51, 0), 1);
_155 = _40.1.2 as f32;
_54.fld0 = Adt57::Variant1 { fld0: Field::<*const u16>(Variant(Field::<Adt48>(Variant(_19, 2), 1), 2), 0),fld1: _51,fld2: Field::<*const bool>(Variant(_147, 1), 2) };
_136 = Field::<[i16; 3]>(Variant(_99, 1), 5);
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt58>(Variant(_19, 2), 4)), 0), 0)) = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3);
Goto(bb107)
}
bb107 = {
(*_134) = _64;
_92 = _40;
place!(Field::<[isize; 1]>(Variant(_51, 0), 6)) = Field::<[isize; 1]>(Variant(_109, 0), 6);
SetDiscriminant(_147, 1);
_67 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt58>(Variant(_19, 2), 4), 0), 0).2;
_32.0 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1 as f32;
place!(Field::<[i16; 4]>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_55, 1), 1)), 0), 2)), 1), 2)) = [_128,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_2.1.2 = _9.1.2;
_135 = Adt59 { fld0: Move(Field::<Adt48>(Variant(_19, 2), 1)),fld1: _119,fld2: (*_56),fld3: _13 };
_2.0 = _100.fld4.0;
_154.1.0 = _77.1;
_68.2 = (_9.2.0, Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 2), 1), 4).1.1);
_20 = [_100.fld1,Field::<usize>(Variant(Field::<Adt52>(Variant(_54.fld0, 1), 1), 0), 5),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 5)];
_23 = _10;
_22.fld0 = [Field::<u64>(Variant(_99, 1), 2),Field::<u64>(Variant(_99, 1), 2)];
match _38 {
0 => bb108,
1 => bb109,
2 => bb110,
2266422573016976570 => bb112,
_ => bb111
}
}
bb108 = {
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_57.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 >> _12.1;
_40.2 = _2.2;
_2.1 = (_24.0, _40.1.1, _2.4.1);
_2.4 = (_15.0, _5.1);
_52 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2;
_60.1.1 = -_39;
match _9.2.0 {
0 => bb8,
1 => bb2,
636257108 => bb18,
_ => bb15
}
}
bb109 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb110 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb111 = {
_40.4.1 = _29 as u8;
Goto(bb20)
}
bb112 = {
_43 = _3;
place!(Field::<(i32, f64)>(Variant(_99, 1), 1)).1 = -_68.2.1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2)).1 = _23;
_68.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).1;
_145.0.0 = [Field::<(i32, f64)>(Variant(_101, 0), 0).0,_61,_92.2.0,_68.2.0];
_83 = Field::<usize>(Variant(_30, 0), 1) as isize;
_68.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_50,_128];
place!(Field::<[i64; 4]>(Variant(_116, 2), 6)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
SetDiscriminant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 2), 0);
_149 = _146.fld3 as f32;
place!(Field::<[i16; 3]>(Variant(_99, 1), 5)) = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_50];
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).0 = [_57.0,_61];
_171.0 = Field::<[i64; 4]>(Variant(_19, 2), 6);
_88 = _40.4.0;
_108 = _71;
SetDiscriminant(_135.fld0, 3);
_100.fld4.1.2 = Field::<u128>(Variant(_51, 0), 1) as u8;
Call(_100.fld4.1.1 = core::intrinsics::bswap(_13), bb113, UnwindUnreachable())
}
bb113 = {
_79 = _95.2.1;
_44.fld0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_54.fld0, 1), 1), 0), 2), 1), 4).1.0,_84,_82.fld4,_9.2.0];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).1.2 = _128 as u8;
_79 = _57.1 + Field::<(i32, f64)>(Variant(_99, 1), 1).1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2)).0 = (Field::<[i32; 4]>(Variant(_48, 0), 2), _92.1.2);
_60.1.0 = _95.2.0;
_108 = core::ptr::addr_of_mut!((*_108));
_100.fld3 = Field::<*const u16>(Variant(_55, 1), 0);
match _38 {
0 => bb114,
1 => bb115,
2 => bb116,
2266422573016976570 => bb118,
_ => bb117
}
}
bb114 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb115 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb116 = {
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_57.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 >> _12.1;
_40.2 = _2.2;
_2.1 = (_24.0, _40.1.1, _2.4.1);
_2.4 = (_15.0, _5.1);
_52 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2;
_60.1.1 = -_39;
match _9.2.0 {
0 => bb8,
1 => bb2,
636257108 => bb18,
_ => bb15
}
}
bb117 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb118 = {
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)).1 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_54.fld0, 1), 1), 0), 2), 1), 1).1;
_90 = -Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(_51, 0), 2), 1), 1).2;
_60.1.0 = _135.fld1 << _83;
place!(Field::<u128>(Variant(place!(Field::<Adt52>(Variant(_55, 1), 1)), 0), 1)) = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_54.fld0, 1), 1), 0), 2), 1), 4).2 as u128;
_169 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).1.0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).0 = Field::<f32>(Variant(_51, 0), 4) - _155;
_82.fld0 = Move(_54.fld0);
_173 = _43;
_18 = !_86;
_12.0 = _95.4.0;
_82.fld3 = Adt58::Variant1 { fld0: Field::<*const *const isize>(Variant(_35, 1), 1) };
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 1)).0 = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3).0;
_156 = -_110;
_44.fld2 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_50,_128];
_95 = (_9.0, _9.1, _2.2, _40.3, _12);
_183.2 = [_50,_128,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
Goto(bb119)
}
bb119 = {
_36 = !Field::<u128>(Variant(_51, 0), 1);
_66 = _96 as i8;
_59 = Field::<u32>(Variant(_62, 3), 4) as f32;
_78 = [Field::<u32>(Variant(_62, 3), 4),_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2,_60.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_51, 0), 2), 1), 4).2];
_9.0 = _40.0;
_145.2 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_169 = _23;
(*_56) = _61 as u16;
place!(Field::<u128>(Variant(_51, 0), 1)) = !Field::<u128>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 1);
_12 = (_15.0, _100.fld4.4.1);
_169 = _102;
place!(Field::<[isize; 1]>(Variant(_19, 2), 5)) = [_86];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).1.2 = _156 as u8;
match _44.fld1 {
0 => bb46,
1 => bb83,
2 => bb3,
3 => bb89,
4 => bb120,
108857908413066299128084124758191108557 => bb122,
_ => bb121
}
}
bb120 = {
_56 = core::ptr::addr_of!((*_134));
_88 = [_100.fld4.2.0,_92.2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0,_61];
_128 = _50;
Call(_97 = core::intrinsics::transmute(_110), bb104, UnwindUnreachable())
}
bb121 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb122 = {
_171.2 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_51, 0), 2), 1), 4).2;
_144 = [_135.fld1,_61,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).1.0,_135.fld1];
_146.fld2 = _171.2 as u16;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = _50;
place!(Field::<usize>(Variant(_109, 0), 5)) = _100.fld1;
_92 = _40;
_131 = [(*_56),(*_134),_75];
_92.1.1 = _146.fld3;
_159 = _36 << _2.1.1;
_127 = core::ptr::addr_of_mut!((*_94));
SetDiscriminant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1);
_5.0 = _44.fld0;
_148 = _92.1.0;
SetDiscriminant(_48, 0);
_180 = core::ptr::addr_of!(_186);
match _1 {
0 => bb93,
1 => bb55,
2 => bb47,
3 => bb75,
4 => bb67,
5 => bb95,
6 => bb32,
108857908413066299128084124758191108557 => bb124,
_ => bb123
}
}
bb123 = {
_5 = (_9.4.0, _12.1);
_20 = _40.3;
_18 = _34;
_9.0 = _2.0;
_43 = _24.0;
_21 = -Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_26 = _18;
_40.1 = (_9.1.0, _13, _2.1.2);
_40.4.1 = _40.1.2 ^ _9.4.1;
_18 = _34;
_6 = -_24.1;
_40.1.2 = !_5.1;
_9.2.1 = -_17;
_44.fld1 = _32.2 + _1;
_34 = _26 & _18;
_40.2.0 = _9.2.0;
_40.4.1 = _9.4.1 - _2.1.2;
_27 = [7929507291479708008_i64,(-8956396241828731814_i64),8424917537204490728_i64,4272283729307025560_i64];
_10 = _23;
_40.4.1 = !_5.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _9.2, 1959216203_u32);
_32 = (_21, _25, _44.fld1);
Call(_47 = core::intrinsics::bswap(_34), bb12, UnwindUnreachable())
}
bb124 = {
_77 = (_2.4, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2).1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).0, (*_71));
_72 = [_93];
_100.fld2 = Adt48::Variant1 { fld0: (*_94) };
place!(Field::<[isize; 1]>(Variant(_135.fld0, 3), 6)) = _72;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_51, 0), 2)), 1), 4)).1.0 = _60.1.0 ^ _95.2.0;
match _44.fld1 {
0 => bb125,
108857908413066299128084124758191108557 => bb127,
_ => bb126
}
}
bb125 = {
_57.1 = -_60.1.1;
Goto(bb33)
}
bb126 = {
_15 = _5;
_2 = (_9.0, _40.1, _57, _40.3, _5);
_9.1 = _2.1;
_20 = [4_usize,5_usize,3_usize,12276688081033868228_usize,6_usize,12317996147629421130_usize];
_71 = core::ptr::addr_of_mut!(_46);
_40.4.1 = _9.1.2 * _15.1;
_8 = _11;
(*_71) = [_6,_9.1.1];
_41 = _47;
_33 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_57.0, _33);
_60.0 = Field::<[i64; 4]>(Variant(_48, 0), 0);
_66 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_36 = !_42;
_2.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _60.1.1;
_18 = _41 + _41;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_54.fld4, _33);
_2.4 = (Field::<[i32; 4]>(Variant(_30, 0), 2), _5.1);
place!(Field::<usize>(Variant(_30, 0), 1)) = 4_usize + 0_usize;
_9.1.0 = _7;
_31 = _22;
_2.0 = [12650_i16,9219_i16,21330_i16,(-27259_i16)];
_68.1.2 = !_12.1;
_9.1.1 = -_2.1.1;
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: _46 };
_44.fld2 = _9.0;
SetDiscriminant(_30, 0);
_32.2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2;
_10 = _68.1.0;
Goto(bb31)
}
bb127 = {
_152 = _103 < Field::<(i32, f64)>(Variant(_99, 1), 1).1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 4)).1.1 = Field::<f32>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 4) as f64;
(*_180) = core::ptr::addr_of!(_139);
place!(Field::<*const *const isize>(Variant(_82.fld3, 1), 0)) = core::ptr::addr_of!(_186);
place!(Field::<bool>(Variant(_19, 2), 0)) = !Field::<bool>(Variant(_109, 0), 0);
_2.4 = (_12.0, _77.0.1);
_100.fld6 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2).0.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 4)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_135.fld1 = !_84;
_146.fld1 = _54.fld4;
match _1 {
0 => bb62,
1 => bb82,
108857908413066299128084124758191108557 => bb128,
_ => bb41
}
}
bb128 = {
place!(Field::<char>(Variant(_62, 3), 1)) = _2.1.0;
match _1 {
0 => bb63,
1 => bb129,
2 => bb130,
3 => bb131,
108857908413066299128084124758191108557 => bb133,
_ => bb132
}
}
bb129 = {
_56 = core::ptr::addr_of!((*_134));
_88 = [_100.fld4.2.0,_92.2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0,_61];
_128 = _50;
Call(_97 = core::intrinsics::transmute(_110), bb104, UnwindUnreachable())
}
bb130 = {
_60.1.1 = -_57.1;
_112 = !Field::<u128>(Variant(_135.fld0, 0), 2);
_95.4.0 = _88;
_40.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).1.2);
place!(Field::<[i16; 3]>(Variant(_99, 1), 5)) = [_50,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_9.4.0 = [_100.fld4.2.0,_95.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_84];
_5.1 = Field::<([i32; 4], u8)>(Variant(_135.fld0, 0), 0).1 & _40.4.1;
_87 = [_139];
_92.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),_100.fld1];
_9.4.1 = _95.1.2 | _68.1.2;
_100.fld2 = Adt48::Variant0 { fld0: _40.4,fld1: _40.0,fld2: _63,fld3: Field::<*const bool>(Variant(_135.fld0, 0), 3),fld4: _52 };
Goto(bb95)
}
bb131 = {
SetDiscriminant(_100.fld2, 1);
_48 = Adt51::Variant0 { fld0: _60.0,fld1: Field::<usize>(Variant(_109, 0), 5),fld2: _12.0 };
SetDiscriminant(_48, 0);
_133 = _53;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1.0 = !_54.fld4;
(*_56) = _75;
_104 = _92.1.1 & Field::<i8>(Variant(_99, 0), 3);
_100.fld4.1 = (_7, _40.1.1, _77.0.1);
place!(Field::<Adt54>(Variant(_19, 0), 2)) = _101;
_26 = _97 & _97;
_40.2 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).2.0, _95.2.1);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).2 = _52;
_102 = _24.0;
_44.fld3 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 1)) = (_21, _25, _90);
_73 = [_50,_50,_50];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).2 = !_100.fld4.4.1;
place!(Field::<bool>(Variant(_62, 1), 0)) = !_58;
_95.1 = (_40.1.0, Field::<i8>(Variant(_99, 0), 3), _40.4.1);
_2.1.1 = -_95.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_95.1.1 = _100.fld4.1.1 | _9.1.1;
_20 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5),_100.fld1,Field::<usize>(Variant(_109, 0), 5),_100.fld1];
match _1 {
0 => bb27,
1 => bb28,
2 => bb20,
3 => bb75,
4 => bb67,
108857908413066299128084124758191108557 => bb83,
_ => bb82
}
}
bb132 = {
_11 = _23;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _4;
_5.0 = _2.4.0;
_32.1 = _25;
SetDiscriminant(_19, 0);
_27 = [7504132259997704560_i64,431001919994132878_i64,2613792496129191282_i64,2569800313725399223_i64];
place!(Field::<[isize; 1]>(Variant(_19, 0), 5)) = [_18];
_9.1.0 = _8;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).0 = _21;
_2.1.1 = _6 | _6;
_28.fld0 = [_29,_29];
_31.fld0 = _28.fld0;
_20 = [5303968915974271927_usize,14378644425513073946_usize,1209178328805296874_usize,3_usize,14941735083312823343_usize,11197872147279953061_usize];
_2.2.1 = 992814542933338728_i64 as f64;
_9.4 = (_15.0, _2.4.1);
_18 = !_34;
_25 = _32.1;
_5.1 = _2.4.1 | _2.4.1;
_9.3 = [14805143797397509253_usize,5_usize,18046977049379648769_usize,6933804625634702543_usize,3_usize,8924806977659024530_usize];
_9.3 = [7_usize,5336159485910619506_usize,7_usize,4768439656650078982_usize,1540404538973101332_usize,3148639331607438458_usize];
_40.3 = [3_usize,10317727707489782203_usize,7_usize,4_usize,1_usize,5032079528460268814_usize];
_1 = 108857908413066299128084124758191108557_i128;
_32.2 = _9.2.1 as i128;
_2.1.2 = _9.4.1;
_4 = _2.1.1 as i32;
_2.4 = (_5.0, _9.1.2);
_40.2.1 = _17 + _9.2.1;
match _9.2.0 {
0 => bb6,
1 => bb9,
636257108 => bb11,
_ => bb10
}
}
bb133 = {
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 4)) = (_171.0, Field::<(i32, f64)>(Variant(_101, 0), 0), Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_51, 0), 2), 1), 4).2);
_22 = Adt62 { fld0: _100.fld0 };
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).3 = (*_115);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.1 = _40.4.1;
_82.fld2 = _54.fld2 << _2.1.2;
place!(Field::<*const bool>(Variant(_135.fld0, 3), 3)) = core::ptr::addr_of!((*_127));
_103 = -_17;
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(_51, 0), 2)), 1), 1)).0 = Field::<u64>(Variant(_99, 1), 2) as f32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).1 = [_171.2,_171.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2,_60.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_51, 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2];
_179 = _95.1.1;
_92.2.0 = _54.fld4;
place!(Field::<u128>(Variant(_109, 0), 1)) = _159;
_10 = _11;
_97 = Field::<f32>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 4) as isize;
_146.fld2 = (*_134);
_77 = (_9.4, _24.0, _44.fld2, _46);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4 = (_88, Field::<([i32; 4], u8)>(Variant(_99, 1), 6).1);
_48 = Adt51::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).0,fld1: _100.fld1,fld2: _145.0.0 };
_24.2 = _68.1.2;
SetDiscriminant(_48, 0);
place!(Field::<Adt48>(Variant(_116, 2), 1)) = Move(_100.fld2);
place!(Field::<usize>(Variant(_109, 0), 5)) = Field::<usize>(Variant(_51, 0), 5) >> _68.4.1;
SetDiscriminant(_51, 2);
Goto(bb134)
}
bb134 = {
_2.0 = [_128,_50,_50,_128];
place!(Field::<*mut bool>(Variant(_51, 2), 5)) = _127;
_57.0 = Field::<i32>(Variant(_62, 3), 5);
place!(Field::<Adt52>(Variant(_55, 1), 1)) = _109;
_1 = _98;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).2 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt58>(Variant(_19, 2), 4), 0), 0).2 | _67;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).3 = [Field::<usize>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_109, 0), 5)];
_141 = [_60.2,_60.2,_60.2,_60.2,Field::<u32>(Variant(_62, 3), 4),_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).2 = (Field::<i32>(Variant(_62, 3), 5), _39);
place!(Field::<([i32; 4], u8)>(Variant(_99, 1), 6)) = (_2.4.0, _24.2);
_12 = (_95.4.0, _92.1.2);
_22 = Adt62 { fld0: _91 };
_171 = (_27, _68.2, Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2);
_135.fld0 = Adt48::Variant1 { fld0: Field::<bool>(Variant(Field::<Adt48>(Variant(_116, 2), 1), 1), 0) };
_43 = _24.0;
_44 = Adt55 { fld0: _9.4.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3).2,fld2: _100.fld4.0,fld3: _27 };
Goto(bb135)
}
bb135 = {
place!(Field::<[i32; 4]>(Variant(_30, 0), 2)) = [_2.2.0,_54.fld4,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).1.0,_9.2.0];
_133 = Field::<u128>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 1) as f32;
_89 = !(*_94);
_184 = _139;
_126 = (*_80);
_30 = Adt51::Variant2 { fld0: Field::<*const *const isize>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_55, 1), 1), 0), 2), 2), 0) };
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = _128 * _128;
_155 = _82.fld2 as f32;
_40.4.0 = [_2.2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0,_9.2.0,_40.2.0];
_161 = _2.2.1 == Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.1;
_135.fld3 = _95.1.1;
_146.fld0 = Adt48::Variant0 { fld0: _2.4,fld1: _154.0,fld2: _159,fld3: _94,fld4: Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2 };
Goto(bb136)
}
bb136 = {
_135.fld2 = _79 as u16;
_67 = _68.2.0 as i128;
_148 = _10;
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = [_82.fld2,_82.fld2,_82.fld2,_82.fld2];
_60.1 = (_40.2.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.1);
_62 = Adt48::Variant1 { fld0: (*_127) };
Goto(bb137)
}
bb137 = {
place!(Field::<usize>(Variant(_99, 1), 7)) = !Field::<usize>(Variant(_109, 0), 5);
_175 = _149;
_135.fld3 = _100.fld4.1.1 << Field::<([i32; 4], u8)>(Variant(_99, 1), 6).1;
_154.1.0 = _9.1.0;
_24.0 = _7;
_166 = !_64;
_21 = _57.1 as f32;
_145.1 = _10;
place!(Field::<bool>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 0)) = (*_94);
Call(_2.4.1 = core::intrinsics::transmute(_2.1.2), bb138, UnwindUnreachable())
}
bb138 = {
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0 as i16;
_60.1 = _68.2;
place!(Field::<Adt58>(Variant(_19, 2), 4)) = Move(_82.fld3);
_24.0 = _9.1.0;
_200.fld1 = _119 & Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).1.0;
_9.1.1 = _146.fld3;
(*_134) = !_64;
_145.1 = _24.0;
_65 = Adt64::Variant1 { fld0: Field::<Adt52>(Variant(_55, 1), 1) };
_154.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.1);
_194 = Adt55 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.0,fld1: _32.2,fld2: _2.0,fld3: _27 };
place!(Field::<usize>(Variant(_109, 0), 5)) = _29 as usize;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 4)) = (_44.fld3, _57, _52);
SetDiscriminant(_55, 0);
_44 = Adt55 { fld0: _154.4.0,fld1: _67,fld2: _183.2,fld3: Field::<[i64; 4]>(Variant(_48, 0), 0) };
_95.2.0 = -_2.2.0;
_170 = Move(_65);
_128 = _44.fld1 as i16;
_2.1.0 = _11;
_174 = !Field::<bool>(Variant(_19, 2), 0);
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 1)) = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3);
_89 = (*_142);
_167.1 = !_9.1.2;
place!(Field::<Adt48>(Variant(_19, 2), 1)) = Move(Field::<Adt48>(Variant(_116, 2), 1));
_66 = _40.1.1;
_134 = core::ptr::addr_of!(_75);
Goto(bb139)
}
bb139 = {
_32.2 = _194.fld1 - _44.fld1;
_203 = _109;
place!(Field::<bool>(Variant(_203, 0), 0)) = !(*_127);
_73 = [_128,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_128];
SetDiscriminant(Field::<Adt52>(Variant(_170, 1), 0), 1);
_68.2.1 = _171.1.1 * _171.1.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4 = (_77.0.0, _95.1.2);
_172 = core::ptr::addr_of!((*_142));
SetDiscriminant(_203, 2);
_58 = !(*_142);
_100.fld4.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_128,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).2 = _5.0;
_113 = _115;
_9 = (_100.fld4.0, _95.1, _95.2, (*_115), _92.4);
_129 = _80;
place!(Field::<u64>(Variant(_55, 0), 2)) = Field::<u64>(Variant(_99, 1), 2);
_161 = !(*_127);
(*_172) = !Field::<bool>(Variant(_116, 2), 0);
_15.0 = _77.0.0;
_200.fld2 = (*_134);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.3 = [_100.fld1,Field::<usize>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 5),_100.fld1,Field::<usize>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 5),Field::<usize>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 5),_100.fld1];
match Field::<u64>(Variant(_99, 1), 2) {
0 => bb68,
1 => bb140,
2 => bb141,
3 => bb142,
4 => bb143,
5 => bb144,
2266422573016976570 => bb146,
_ => bb145
}
}
bb140 = {
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0 as i16;
_60.1 = _68.2;
place!(Field::<Adt58>(Variant(_19, 2), 4)) = Move(_82.fld3);
_24.0 = _9.1.0;
_200.fld1 = _119 & Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).1.0;
_9.1.1 = _146.fld3;
(*_134) = !_64;
_145.1 = _24.0;
_65 = Adt64::Variant1 { fld0: Field::<Adt52>(Variant(_55, 1), 1) };
_154.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.1);
_194 = Adt55 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.0,fld1: _32.2,fld2: _2.0,fld3: _27 };
place!(Field::<usize>(Variant(_109, 0), 5)) = _29 as usize;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 4)) = (_44.fld3, _57, _52);
SetDiscriminant(_55, 0);
_44 = Adt55 { fld0: _154.4.0,fld1: _67,fld2: _183.2,fld3: Field::<[i64; 4]>(Variant(_48, 0), 0) };
_95.2.0 = -_2.2.0;
_170 = Move(_65);
_128 = _44.fld1 as i16;
_2.1.0 = _11;
_174 = !Field::<bool>(Variant(_19, 2), 0);
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)), 1), 1)) = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3);
_89 = (*_142);
_167.1 = !_9.1.2;
place!(Field::<Adt48>(Variant(_19, 2), 1)) = Move(Field::<Adt48>(Variant(_116, 2), 1));
_66 = _40.1.1;
_134 = core::ptr::addr_of!(_75);
Goto(bb139)
}
bb141 = {
_60.1.1 = -_57.1;
_112 = !Field::<u128>(Variant(_135.fld0, 0), 2);
_95.4.0 = _88;
_40.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).1.2);
place!(Field::<[i16; 3]>(Variant(_99, 1), 5)) = [_50,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_9.4.0 = [_100.fld4.2.0,_95.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_84];
_5.1 = Field::<([i32; 4], u8)>(Variant(_135.fld0, 0), 0).1 & _40.4.1;
_87 = [_139];
_92.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),_100.fld1];
_9.4.1 = _95.1.2 | _68.1.2;
_100.fld2 = Adt48::Variant0 { fld0: _40.4,fld1: _40.0,fld2: _63,fld3: Field::<*const bool>(Variant(_135.fld0, 0), 3),fld4: _52 };
Goto(bb95)
}
bb142 = {
_92.3 = [0_usize,1_usize,6_usize,0_usize,11218119698934565436_usize,1_usize];
_92.1.1 = _50 as i8;
_9.1.2 = _77.0.1 | _2.4.1;
_60.1.1 = _40.1.1 as f64;
_18 = _2.4.1 as isize;
match _38 {
0 => bb34,
2266422573016976570 => bb56,
_ => bb55
}
}
bb143 = {
_15 = _5;
_2 = (_9.0, _40.1, _57, _40.3, _5);
_9.1 = _2.1;
_20 = [4_usize,5_usize,3_usize,12276688081033868228_usize,6_usize,12317996147629421130_usize];
_71 = core::ptr::addr_of_mut!(_46);
_40.4.1 = _9.1.2 * _15.1;
_8 = _11;
(*_71) = [_6,_9.1.1];
_41 = _47;
_33 = _40.2.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_57.0, _33);
_60.0 = Field::<[i64; 4]>(Variant(_48, 0), 0);
_66 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2 as i8;
_36 = !_42;
_2.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 - _60.1.1;
_18 = _41 + _41;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1 = (_54.fld4, _33);
_2.4 = (Field::<[i32; 4]>(Variant(_30, 0), 2), _5.1);
place!(Field::<usize>(Variant(_30, 0), 1)) = 4_usize + 0_usize;
_9.1.0 = _7;
_31 = _22;
_2.0 = [12650_i16,9219_i16,21330_i16,(-27259_i16)];
_68.1.2 = !_12.1;
_9.1.1 = -_2.1.1;
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: _46 };
_44.fld2 = _9.0;
SetDiscriminant(_30, 0);
_32.2 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2;
_10 = _68.1.0;
Goto(bb31)
}
bb144 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3)).1 = (_68.1.0, Field::<(char, i8, u8)>(Variant(_116, 1), 6).1, _100.fld4.1.2);
_100.fld4.2.0 = _2.2.0 + Field::<(i32, f64)>(Variant(_101, 0), 0).0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1)).2 = _92.1.2 as i128;
place!(Field::<usize>(Variant(_99, 1), 7)) = _89 as usize;
place!(Field::<u32>(Variant(_62, 3), 4)) = _52;
_135.fld0 = Adt48::Variant0 { fld0: _2.4,fld1: _100.fld4.0,fld2: _42,fld3: _94,fld4: Field::<u32>(Variant(_62, 3), 4) };
_56 = _100.fld3;
match _1 {
0 => bb78,
1 => bb74,
108857908413066299128084124758191108557 => bb94,
_ => bb93
}
}
bb145 = {
place!(Field::<Adt54>(Variant(_19, 0), 2)) = Adt54::Variant0 { fld0: _68.2 };
_77.0.0 = _44.fld0;
_37 = _9.1.1 == _6;
_68.2.1 = _53 as f64;
_35 = Move(Field::<Adt56>(Variant(_19, 0), 3));
match _68.2.0 {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
636257108 => bb41,
_ => bb40
}
}
bb146 = {
_86 = (*_186);
_205.fld1.0 = _95.2.0 * _95.2.0;
_100.fld4.3 = [_100.fld1,_100.fld1,Field::<usize>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 5),Field::<usize>(Variant(_99, 1), 7),_100.fld1,Field::<usize>(Variant(_99, 1), 7)];
_190 = [_171.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).2,_171.2,_60.2,_171.2,_171.2,_60.2];
SetDiscriminant(Field::<Adt51>(Variant(_109, 0), 2), 1);
SetDiscriminant(Field::<Adt48>(Variant(_19, 2), 1), 0);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld6 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 0), 2), 1), 4).1.1 as u8;
_148 = _10;
_187 = !_159;
place!(Field::<Adt51>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 0), 2)) = _30;
_77.3 = [_66,_146.fld3];
_2 = _92;
SetDiscriminant(_30, 1);
_158 = core::ptr::addr_of!((*_127));
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4 = (_77.0.0, _92.4.1);
_100.fld4.2.0 = -_57.0;
SetDiscriminant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 2);
_118 = Field::<(i32, f64)>(Variant(_99, 1), 1).1 <= _171.1.1;
_189.1 = !_15.1;
SetDiscriminant(Field::<Adt58>(Variant(_19, 2), 4), 0);
SetDiscriminant(_62, 2);
place!(Field::<[bool; 5]>(Variant(_30, 1), 6)) = Field::<[bool; 5]>(Variant(_109, 0), 3);
(*_172) = !_174;
SetDiscriminant(_135.fld0, 1);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)).2 = -Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3).2;
place!(Field::<i8>(Variant(_30, 1), 3)) = _100.fld4.1.1 * _9.1.1;
_7 = _154.1.0;
(*_186) = !_26;
Goto(bb147)
}
bb147 = {
place!(Field::<[i16; 4]>(Variant(_30, 1), 2)) = _9.0;
match Field::<u64>(Variant(_99, 1), 2) {
0 => bb78,
1 => bb20,
2 => bb148,
2266422573016976570 => bb150,
_ => bb149
}
}
bb148 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb149 = {
place!(Field::<Adt54>(Variant(_19, 0), 2)) = Adt54::Variant0 { fld0: _68.2 };
_77.0.0 = _44.fld0;
_37 = _9.1.1 == _6;
_68.2.1 = _53 as f64;
_35 = Move(Field::<Adt56>(Variant(_19, 0), 3));
match _68.2.0 {
0 => bb36,
1 => bb37,
2 => bb38,
3 => bb39,
636257108 => bb41,
_ => bb40
}
}
bb150 = {
_95.3 = [_100.fld1,Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),_100.fld1];
_205.fld3.1 = _171.2 as i16;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)) = (_149, Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3).1, _44.fld1);
_218 = Adt50::Variant0 { fld0: _95.2.1,fld1: _40.4,fld2: _38,fld3: _146.fld3,fld4: _100.fld4.3,fld5: _92.2.0,fld6: Field::<[bool; 5]>(Variant(_30, 1), 6) };
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.1.1 = _104;
SetDiscriminant(_146.fld0, 2);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.2.1 = -_79;
_205.fld3.0 = [_84,_119];
_151 = _98 as isize;
_2.4 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).2, Field::<([i32; 4], u8)>(Variant(_218, 0), 1).1);
_68.1.0 = _40.1.0;
_68.4 = _40.4;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4)).1.1 = -_103;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.1 = _95.4.1 >> _40.4.1;
_99 = Move(_218);
place!(Field::<i32>(Variant(_99, 0), 5)) = _57.0 ^ _200.fld1;
_191 = _100.fld1 as f64;
_15.1 = _100.fld6;
place!(Field::<i8>(Variant(_99, 0), 3)) = _179;
match Field::<u64>(Variant(_99, 0), 2) {
0 => bb151,
1 => bb152,
2266422573016976570 => bb154,
_ => bb153
}
}
bb151 = {
_92 = (_2.0, _68.1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1, _20, _68.4);
_91 = _28.fld0;
_77.3 = [_40.1.1,_68.1.1];
_54.fld2 = (-4119707644696749769_i64) << _47;
_57.0 = !_84;
_2.1.1 = _23 as i8;
_22 = Adt62 { fld0: _28.fld0 };
_9.1.1 = !_6;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.0 = !_57.0;
_95.1 = (_2.1.0, _13, _15.1);
_37 = Field::<bool>(Variant(_62, 1), 0) ^ Field::<bool>(Variant(_62, 1), 0);
place!(Field::<Adt56>(Variant(_19, 0), 3)) = Adt56::Variant0 { fld0: (*_71) };
_68.3 = [Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1)];
_5.0 = [_54.fld4,_61,_84,_92.2.0];
_2.4.1 = _15.1;
(*_56) = _60.2 as u16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).0 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_68.4 = _15;
_25 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_9.4.0 = [_61,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_61,_92.2.0];
(*_56) = !Field::<u16>(Variant(_49, 3), 1);
_47 = _41;
_31.fld0 = [_38,_29];
Goto(bb47)
}
bb152 = {
_31.fld0 = _22.fld0;
(*_56) = 30445_u16;
_41 = _60.2 as isize;
_75 = (*_56) << _15.1;
_77.1 = _7;
(*_56) = _52 as u16;
_22 = Adt62 { fld0: _28.fld0 };
_67 = !_44.fld1;
_85 = _42 as f64;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_19, 0), 2)), 1), 0)).1 = _9.1.2 as i8;
_76 = _58 as isize;
_78 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_60.2,_60.2,_52,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).2,_52];
_67 = -_44.fld1;
place!(Field::<[i32; 4]>(Variant(_30, 0), 2)) = [_57.0,_40.2.0,_40.2.0,_54.fld4];
_79 = _57.1;
_61 = -Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_44.fld2 = [_50,_50,_50,_50];
_52 = !_60.2;
_60 = (_44.fld3, _2.2, _52);
_36 = _42;
_68.1.2 = _21 as u8;
_57.1 = _60.2 as f64;
_84 = _54.fld4;
_77.3 = [_68.1.1,_2.1.1];
_61 = _2.1.1 as i32;
Goto(bb43)
}
bb153 = {
place!(Field::<u64>(Variant(_99, 0), 2)) = (*_56) as u64;
_92 = _68;
_3 = _16;
_100.fld6 = _77.1 as u8;
_98 = -_90;
(*_94) = _92.1.1 >= _92.1.1;
_89 = (*_94);
_97 = _26;
Goto(bb81)
}
bb154 = {
_100.fld4.1.2 = _189.1;
_100.fld1 = !Field::<usize>(Variant(_109, 0), 5);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.1.0 = _11;
_95.1.2 = _100.fld4.1.2;
_189.0 = [_171.1.0,_119,Field::<(i32, f64)>(Variant(_101, 0), 0).0,_61];
Goto(bb155)
}
bb155 = {
_70 = core::ptr::addr_of!((*_180));
_154.1.0 = _43;
Goto(bb156)
}
bb156 = {
place!(Field::<bool>(Variant(_116, 2), 0)) = (*_158);
place!(Field::<*const *const isize>(Variant(_35, 1), 1)) = _70;
_219.1 = _54.fld4 as i16;
SetDiscriminant(_101, 1);
_171 = _60;
_171.1.0 = _82.fld2 as i32;
_100.fld0 = _28.fld0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)).1 = [_60.2,_60.2,_60.2,_171.2,_52,_52,_60.2];
_204 = _219.1 as u16;
_2.1.1 = (*_172) as i8;
_183.0.0 = [_171.1.0,_171.1.0,_61,_92.2.0];
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.1 = (_100.fld4.1.0, _92.1.1, _100.fld6);
place!(Field::<i64>(Variant(_51, 2), 1)) = _95.1.2 as i64;
_205.fld1.1 = _39;
(*_108) = _77.3;
_183.1 = _11;
_171.2 = _60.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1.0 = _135.fld2 as i32;
_22 = Adt62 { fld0: _28.fld0 };
_205.fld3 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0);
_146.fld3 = _95.1.1 | Field::<i8>(Variant(_30, 1), 3);
_44.fld1 = _32.2;
_49 = Adt63::Variant3 { fld0: _171.1,fld1: _135.fld2 };
Goto(bb157)
}
bb157 = {
_103 = -_100.fld4.2.1;
_167.1 = _100.fld1 as u8;
SetDiscriminant(_99, 1);
_200.fld3 = _9.1.1 | _6;
_100.fld4.4 = (_88, _68.4.1);
SetDiscriminant(_35, 0);
place!(Field::<(i32, f64)>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 2)).0 = _205.fld1.0;
_205.fld5 = _77.3;
SetDiscriminant(_49, 2);
_77.3 = [_9.1.1,Field::<i8>(Variant(_30, 1), 3)];
_154.1 = _2.1;
match Field::<u64>(Variant(_55, 0), 2) {
0 => bb34,
1 => bb154,
2 => bb110,
3 => bb27,
4 => bb63,
5 => bb24,
2266422573016976570 => bb158,
_ => bb146
}
}
bb158 = {
_154 = _100.fld4;
_9.2 = (_54.fld4, _95.2.1);
place!(Field::<*mut bool>(Variant(_203, 2), 5)) = core::ptr::addr_of_mut!((*_142));
_92.4 = (_144, Field::<Adt49>(Variant(_55, 0), 4).fld6);
_92.0 = Field::<[i16; 4]>(Variant(_30, 1), 2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.1 = !_154.4.1;
_100.fld4 = _40;
_154.2.1 = _100.fld4.2.1 - _205.fld1.1;
place!(Field::<u64>(Variant(_99, 1), 2)) = !_29;
_21 = _52 as f32;
_9.1 = _68.1;
_167 = _77.0;
_43 = _9.1.0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)).2 = Field::<usize>(Variant(_109, 0), 5) as i128;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)).0 = Field::<f32>(Variant(_109, 0), 4);
_206 = _205.fld1.1;
place!(Field::<[i64; 7]>(Variant(_203, 2), 2)) = _45;
_144 = [_2.2.0,Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0,_154.2.0,_100.fld4.2.0];
match Field::<u64>(Variant(_55, 0), 2) {
0 => bb3,
1 => bb159,
2266422573016976570 => bb161,
_ => bb160
}
}
bb159 = {
place!(Field::<[i64; 4]>(Variant(_30, 0), 0)) = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_5.1 = _15.1;
_9.4.0 = _5.0;
_68.1 = (_10, Field::<(char, i8, u8)>(Variant(Field::<Adt54>(Variant(_19, 0), 2), 1), 0).1, _40.4.1);
_43 = _68.1.0;
_31.fld0 = _28.fld0;
_19 = Move(_49);
_46 = _77.3;
_27 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_98 = -_67;
_94 = core::ptr::addr_of!(_37);
_92.2.1 = _17 * _2.2.1;
SetDiscriminant(_30, 1);
_86 = _41;
_93 = -_41;
_77.0.1 = _92.4.1;
_32.1 = [_52,_52,_60.2,_52,_60.2,_60.2,_52];
_2.2.0 = _54.fld2 as i32;
_101 = Adt54::Variant0 { fld0: _2.2 };
_100.fld2 = Adt48::Variant0 { fld0: _15,fld1: _9.0,fld2: _42,fld3: _94,fld4: _60.2 };
(*_71) = _77.3;
_10 = _11;
_85 = _38 as f64;
_77 = (_2.4, _23, _68.0, Field::<[i8; 2]>(Variant(_35, 0), 0));
_68.1.1 = _54.fld2 as i8;
_39 = Field::<(i32, f64)>(Variant(_101, 0), 0).1 + _33;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)) = _32;
match _1 {
108857908413066299128084124758191108557 => bb48,
_ => bb26
}
}
bb160 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb161 = {
_78 = [_171.2,_52,_52,_171.2,_52,_52,_60.2];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1 = _57;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).1.1 = _135.fld3 | _135.fld3;
place!(Field::<[bool; 5]>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 6)) = Field::<[bool; 5]>(Variant(_109, 0), 3);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4)).0 = [Field::<i64>(Variant(_51, 2), 1),Field::<i64>(Variant(_51, 2), 1),Field::<i64>(Variant(_51, 2), 1),_82.fld2];
Goto(bb162)
}
bb162 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).3 = [_100.fld1,_100.fld1,_100.fld1,_100.fld1,Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_109, 0), 5)];
place!(Field::<[bool; 5]>(Variant(_109, 0), 3)) = [_37,(*_158),(*_142),Field::<bool>(Variant(_116, 2), 0),(*_172)];
_146.fld0 = Adt48::Variant3 { fld0: _100.fld5,fld1: _100.fld4.1.0,fld2: _77,fld3: _142,fld4: _52,fld5: _54.fld4,fld6: Field::<[isize; 1]>(Variant(_19, 2), 5) };
_26 = _29 as isize;
_220 = Field::<[bool; 5]>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 6);
SetDiscriminant(_146.fld0, 0);
_114 = _16;
_54.fld3 = Adt58::Variant1 { fld0: _70 };
(*_186) = _200.fld2 as isize;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_49, 2), 3)).1 = [_60.2,_60.2,_171.2,_171.2,_171.2,_52,_60.2];
_52 = Field::<i64>(Variant(_51, 2), 1) as u32;
place!(Field::<[i64; 7]>(Variant(_51, 2), 2)) = [_82.fld2,Field::<i64>(Variant(_51, 2), 1),Field::<i64>(Variant(_51, 2), 1),_82.fld2,_82.fld2,Field::<i64>(Variant(_51, 2), 1),_82.fld2];
Goto(bb163)
}
bb163 = {
_86 = _76;
_92.1.2 = _189.1 + _15.1;
_82.fld3 = Move(_54.fld3);
place!(Field::<[u16; 3]>(Variant(_101, 1), 1)) = _131;
place!(Field::<u64>(Variant(_55, 0), 2)) = _38;
_5.1 = !_24.2;
(*_94) = (*_56) != (*_56);
_161 = (*_56) < _135.fld2;
place!(Field::<bool>(Variant(_109, 0), 0)) = Field::<bool>(Variant(_19, 2), 0);
_171.1.1 = -_123;
place!(Field::<[i32; 2]>(Variant(_30, 1), 7)) = [_61,_205.fld1.0];
_236 = _114;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).0 = _44.fld3;
_174 = Field::<bool>(Variant(_109, 0), 0);
place!(Field::<[i16; 2]>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 2), 3)) = [_205.fld3.1,_128];
place!(Field::<[isize; 1]>(Variant(_49, 2), 5)) = [_139];
_141 = _78;
_196 = core::ptr::addr_of_mut!(place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.3);
place!(Field::<(char, i8, u8)>(Variant(_101, 1), 0)) = _92.1;
_183.0 = (_44.fld0, Field::<(char, i8, u8)>(Variant(_101, 1), 0).2);
place!(Field::<i16>(Variant(_203, 2), 4)) = _219.1;
place!(Field::<[isize; 1]>(Variant(_19, 2), 5)) = _87;
place!(Field::<([i32; 4], u8)>(Variant(_99, 1), 6)).1 = _189.1;
_21 = _154.1.1 as f32;
_229 = Field::<usize>(Variant(_109, 0), 5) - _100.fld1;
match Field::<u64>(Variant(_55, 0), 2) {
0 => bb55,
1 => bb2,
2 => bb142,
3 => bb154,
2266422573016976570 => bb165,
_ => bb164
}
}
bb164 = {
_79 = -_103;
SetDiscriminant(Field::<Adt54>(Variant(_19, 0), 2), 1);
_138 = Field::<(f32, [u32; 7], i128)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 1).0;
_9 = (_100.fld4.0, _40.1, _60.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).3, _15);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0)).1 = _50 * _50;
_135.fld3 = !_13;
_138 = Field::<f32>(Variant(_109, 0), 4);
place!(Field::<(char, i8, u8)>(Variant(_116, 1), 6)).2 = _40.2.0 as u8;
match _38 {
0 => bb85,
1 => bb86,
2 => bb87,
2266422573016976570 => bb89,
_ => bb88
}
}
bb165 = {
_194.fld0 = [_119,_9.2.0,_205.fld1.0,_135.fld1];
place!(Field::<[u16; 3]>(Variant(_101, 1), 1)) = [_146.fld2,(*_56),_166];
_188.fld2 = Field::<i64>(Variant(_51, 2), 1);
_212 = _156 ^ (*_186);
_242 = _188.fld2;
_100.fld4.4.0 = [_95.2.0,_9.2.0,_146.fld1,_9.2.0];
Goto(bb166)
}
bb166 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).1.2 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).4.1;
_114 = _100.fld4.1.0;
_100.fld0 = [_38,_38];
_245 = -_212;
place!(Field::<Adt48>(Variant(_49, 2), 1)) = Adt48::Variant2 { fld0: _100.fld3,fld1: Field::<[isize; 1]>(Variant(_116, 2), 5) };
_92.4 = (_100.fld4.4.0, _183.0.1);
_171.1.0 = !_61;
_2.1.1 = -Field::<(char, i8, u8)>(Variant(_101, 1), 0).1;
place!(Field::<[i16; 4]>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 1)) = [_219.1,_128,Field::<i16>(Variant(_203, 2), 4),_205.fld3.1];
_182 = _57.1 - _206;
match _38 {
0 => bb35,
1 => bb107,
2266422573016976570 => bb168,
_ => bb167
}
}
bb167 = {
_40.2.1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1 + Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1;
_11 = _24.0;
_12.1 = _9.1.2;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).1.1 = -_39;
_12.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,_57.0];
_13 = 5915351492109280588_usize as i8;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)) = (_27, _2.2, _60.2);
_48 = Adt51::Variant0 { fld0: Field::<[i64; 4]>(Variant(_30, 0), 0),fld1: 1_usize,fld2: _5.0 };
_42 = _54.fld2 as u128;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_36 = _42;
place!(Field::<[i32; 4]>(Variant(_48, 0), 2)) = _12.0;
_45 = [_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2,_54.fld2];
_9 = _40;
_44 = Adt55 { fld0: _12.0,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).2,fld2: _9.0,fld3: _27 };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = !_60.2;
_22 = Adt62 { fld0: _31.fld0 };
place!(Field::<[i64; 4]>(Variant(_48, 0), 0)) = _44.fld3;
_60.2 = !_52;
_54.fld4 = _57.0;
_57 = (_54.fld4, Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.1);
_68.1.0 = _43;
_28 = _22;
_2.1.0 = _9.1.0;
Call(_53 = core::intrinsics::transmute(_23), bb30, UnwindUnreachable())
}
bb168 = {
_154.4 = _2.4;
_232 = [_219.1,Field::<i16>(Variant(_203, 2), 4),_219.1,_219.1];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)).0 = Field::<f32>(Variant(_109, 0), 4);
_92.1 = (_95.1.0, _146.fld3, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).1.2);
(*_129) = [_92.1.1,_92.1.1];
_224 = -_155;
place!(Field::<u32>(Variant(_146.fld0, 0), 4)) = !_52;
place!(Field::<Adt58>(Variant(_49, 2), 4)) = Move(_82.fld3);
_33 = Field::<usize>(Variant(_109, 0), 5) as f64;
_160 = [_38,Field::<u64>(Variant(_99, 1), 2),Field::<u64>(Variant(_55, 0), 2),Field::<u64>(Variant(_55, 0), 2)];
_213 = _11;
SetDiscriminant(_101, 0);
_188.fld4 = Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0;
match Field::<u64>(Variant(_55, 0), 2) {
0 => bb68,
1 => bb115,
2 => bb28,
3 => bb81,
4 => bb38,
5 => bb155,
6 => bb9,
2266422573016976570 => bb169,
_ => bb55
}
}
bb169 = {
_82.fld2 = Field::<i64>(Variant(_51, 2), 1) >> _167.1;
_40.1 = _95.1;
_2.2.0 = _61;
_77 = (_12, _11, _232, _81);
place!(Field::<([i32; 4], u8)>(Variant(_99, 1), 6)).0 = [_200.fld1,_68.2.0,_119,_68.2.0];
place!(Field::<usize>(Variant(_48, 0), 1)) = !_229;
_74 = _213;
(*_142) = !_152;
place!(Field::<*const u16>(Variant(_62, 2), 0)) = core::ptr::addr_of!((*_134));
_137 = (*_71);
_68.1.1 = _9.1.1;
place!(Field::<[isize; 1]>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 2), 0)) = [_212];
_237.fld3.0 = [Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0,_57.0];
_230.0 = [Field::<i64>(Variant(_51, 2), 1),_188.fld2,_82.fld2,Field::<i64>(Variant(_51, 2), 1)];
_134 = _56;
_99 = Adt50::Variant0 { fld0: _39,fld1: _12,fld2: Field::<u64>(Variant(_55, 0), 2),fld3: _95.1.1,fld4: (*_196),fld5: _82.fld4,fld6: Field::<[bool; 5]>(Variant(_109, 0), 3) };
_128 = _132 as i16;
place!(Field::<bool>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 0)) = !_89;
_135 = Adt59 { fld0: Move(Field::<Adt48>(Variant(_49, 2), 1)),fld1: _60.1.0,fld2: (*_134),fld3: Field::<i8>(Variant(_99, 0), 3) };
_238 = Field::<u32>(Variant(_146.fld0, 0), 4) as f64;
_100.fld4.4 = _154.4;
_145 = (_95.4, _183.1, _9.0, (*_80));
_205.fld2 = core::ptr::addr_of!(_41);
_233 = !Field::<bool>(Variant(_116, 2), 0);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.0 = [_205.fld3.1,Field::<i16>(Variant(_203, 2), 4),_128,_219.1];
_127 = core::ptr::addr_of_mut!(_174);
_73 = [_219.1,_205.fld3.1,_205.fld3.1];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).2 = Field::<u32>(Variant(_146.fld0, 0), 4) << _171.1.0;
place!(Field::<u64>(Variant(_55, 0), 2)) = _38;
match _38 {
0 => bb104,
1 => bb42,
2 => bb51,
3 => bb170,
4 => bb171,
2266422573016976570 => bb173,
_ => bb172
}
}
bb170 = {
_77 = (_2.4, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_62, 3), 2).1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).0, (*_71));
_72 = [_93];
_100.fld2 = Adt48::Variant1 { fld0: (*_94) };
place!(Field::<[isize; 1]>(Variant(_135.fld0, 3), 6)) = _72;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_51, 0), 2)), 1), 4)).1.0 = _60.1.0 ^ _95.2.0;
match _44.fld1 {
0 => bb125,
108857908413066299128084124758191108557 => bb127,
_ => bb126
}
}
bb171 = {
_22.fld0 = [16234300045098683000_u64,4502880985531335535_u64];
_10 = _11;
_1 = 11502030323401611445519167123157057816_i128 << _24.2;
_9 = (_2.0, _24, _2.2, _20, _15);
_25 = [1057268613_u32,2155635837_u32,1384258457_u32,2148955359_u32,3931181444_u32,2332331068_u32,1036619844_u32];
_10 = _24.0;
_2.0 = [22085_i16,14887_i16,(-862_i16),7793_i16];
_24.1 = _6 * _9.1.1;
_2.4.1 = _9.4.1 << _9.1.2;
_3 = _2.1.0;
_9.4.1 = !_2.4.1;
_2.4.1 = _24.2 | _2.1.2;
_2.1 = (_7, _13, _2.4.1);
_9 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_9.3 = [6_usize,14522518230520421405_usize,16338220724703858896_usize,6105088284464817366_usize,0_usize,0_usize];
_2.1.1 = _9.1.1;
_9.1 = (_11, _24.1, _2.4.1);
_23 = _9.1.0;
_24.1 = -_6;
_27 = [(-5243075016245971582_i64),1286707003630962619_i64,65861502476416621_i64,(-8677072610476484351_i64)];
_23 = _3;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 25670_u16 };
_9 = (_2.0, _2.1, Field::<(i32, f64)>(Variant(_19, 3), 0), _2.3, _2.4);
place!(Field::<u16>(Variant(_19, 3), 1)) = 65342_u16 >> _2.4.1;
_19 = Adt63::Variant3 { fld0: _2.2,fld1: 34873_u16 };
place!(Field::<u16>(Variant(_19, 3), 1)) = 10373380150239676491_usize as u16;
Goto(bb4)
}
bb172 = {
_18 = !(-9223372036854775808_isize);
_12 = (_5.0, _9.1.2);
_17 = _9.2.1;
_12.0 = _5.0;
_2.4 = (_5.0, _2.1.2);
_24.1 = 28977_u16 as i8;
_9.4 = (_2.4.0, _9.1.2);
_20 = _14;
_2 = (_9.0, _9.1, _9.2, _20, _12);
_21 = _18 as f32;
_16 = _11;
_24 = (_2.1.0, _2.1.1, _15.1);
_24.0 = _3;
_24.0 = _10;
_24.2 = _2.4.1 - _2.1.2;
_2.0 = [(-25467_i16),17085_i16,(-13287_i16),24561_i16];
_9 = _2;
_2 = (_9.0, _24, _9.2, _14, _12);
Goto(bb3)
}
bb173 = {
_91 = [Field::<u64>(Variant(_99, 0), 2),Field::<u64>(Variant(_99, 0), 2)];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_49, 2), 3)).1 = [_52,Field::<u32>(Variant(_146.fld0, 0), 4),Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<u32>(Variant(_146.fld0, 0), 4),_52,Field::<u32>(Variant(_146.fld0, 0), 4),_52];
_198 = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3).2 as isize;
_192 = !Field::<u64>(Variant(_55, 0), 2);
_94 = core::ptr::addr_of!((*_94));
_233 = !(*_172);
_92.4.0 = [_92.2.0,_57.0,_154.2.0,_82.fld4];
(*_158) = !Field::<bool>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 0);
_77.3 = [_200.fld3,_68.1.1];
_205.fld3.0 = [_2.2.0,Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0];
_163 = Field::<bool>(Variant(_116, 2), 0) as isize;
_77 = _145;
_153 = [_100.fld1,_100.fld1,_229,_100.fld1,_229,_100.fld1];
SetDiscriminant(_135.fld0, 0);
place!(Field::<i64>(Variant(_203, 2), 1)) = !_82.fld2;
place!(Field::<i16>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 2), 4)) = _219.1 - _128;
_244.2 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2;
_150 = (*_186);
_200.fld0 = Adt48::Variant3 { fld0: Field::<[bool; 5]>(Variant(_99, 0), 6),fld1: _10,fld2: _145,fld3: _94,fld4: _52,fld5: Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0,fld6: Field::<[isize; 1]>(Variant(_49, 2), 5) };
_37 = (*_127);
Goto(bb174)
}
bb174 = {
_159 = !Field::<u128>(Variant(_109, 0), 1);
_191 = _67 as f64;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)) = Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3);
place!(Field::<[i64; 4]>(Variant(_19, 2), 6)) = _60.0;
_118 = _58;
_68.2.0 = _200.fld1 >> Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3).2;
_95.4.1 = _24.2;
_9.1.2 = _229 as u8;
_252 = [_219.1,Field::<i16>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 2), 4)];
place!(Field::<[bool; 5]>(Variant(_30, 1), 6)) = [_37,Field::<bool>(Variant(_116, 2), 0),(*_94),_132,Field::<bool>(Variant(_116, 2), 0)];
_100.fld2 = Move(_200.fld0);
_205.fld4 = (_5.0, _100.fld4.1.2);
_106 = _86 as i8;
_221 = Field::<i16>(Variant(_203, 2), 4) - _128;
Goto(bb175)
}
bb175 = {
place!(Field::<[i64; 7]>(Variant(place!(Field::<Adt52>(Variant(_82.fld0, 1), 1)), 2), 2)) = [Field::<i64>(Variant(_51, 2), 1),_82.fld2,_82.fld2,_242,_188.fld2,Field::<i64>(Variant(_203, 2), 1),_82.fld2];
_243.2 = (*_186) as u32;
_145.3 = [_100.fld4.1.1,_146.fld3];
_154.3 = (*_196);
match Field::<u64>(Variant(_55, 0), 2) {
0 => bb26,
1 => bb176,
2266422573016976570 => bb178,
_ => bb177
}
}
bb176 = {
_56 = core::ptr::addr_of!((*_134));
_88 = [_100.fld4.2.0,_92.2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4).2.0,_61];
_128 = _50;
Call(_97 = core::intrinsics::transmute(_110), bb104, UnwindUnreachable())
}
bb177 = {
SetDiscriminant(_19, 3);
_9.2.0 = true as i32;
_2.4.0 = _12.0;
_17 = -_9.2.1;
_9.1.1 = -_2.1.1;
_6 = _2.1.1;
_20 = [14226246476320265357_usize,13313792084673394216_usize,14760450251804186704_usize,10400766061960970795_usize,4_usize,879788469078840629_usize];
_5.1 = _9.1.2;
_12 = (_5.0, _24.2);
_5.1 = _18 as u8;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).0 = _2.2.0;
place!(Field::<(i32, f64)>(Variant(_19, 3), 0)).1 = -_9.2.1;
_9.4.1 = !_9.1.2;
place!(Field::<u16>(Variant(_19, 3), 1)) = 8287_u16 >> _9.1.2;
_32.0 = -_21;
place!(Field::<u16>(Variant(_19, 3), 1)) = Field::<(i32, f64)>(Variant(_19, 3), 0).0 as u16;
_12.1 = _2.1.1 as u8;
_12.1 = _2.1.2;
_29 = 3099354850211712882_u64;
_15 = _12;
_9 = _2;
_34 = -_18;
_15.1 = (-8113_i16) as u8;
match Field::<(i32, f64)>(Variant(_19, 3), 0).0 {
0 => bb2,
1 => bb5,
2 => bb6,
636257108 => bb8,
_ => bb7
}
}
bb178 = {
place!(Field::<i8>(Variant(_99, 0), 3)) = _205.fld1.0 as i8;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1)) = Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3);
_133 = _224 * Field::<f32>(Variant(_109, 0), 4);
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld2 = Move(_100.fld2);
_215 = _2.1.0 as u32;
place!(Field::<*const bool>(Variant(_146.fld0, 0), 3)) = core::ptr::addr_of!((*_127));
_52 = !Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2;
_19 = Adt63::Variant3 { fld0: _171.1,fld1: (*_56) };
match _38 {
0 => bb166,
1 => bb179,
2266422573016976570 => bb181,
_ => bb180
}
}
bb179 = {
_145.0.0 = [Field::<(i32, f64)>(Variant(_99, 1), 1).0,_61,_92.2.0,_146.fld1];
_107 = _2.1.1 as isize;
_151 = !_107;
place!(Field::<usize>(Variant(_48, 0), 1)) = Field::<usize>(Variant(_99, 1), 7) * _100.fld1;
place!(Field::<(f32, [u32; 7], i128)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 1)).2 = _98;
_124 = !(*_142);
(*_115) = [Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(_48, 0), 1),_100.fld1,Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_99, 1), 7)];
_40.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_30, 0), 1),Field::<usize>(Variant(_30, 0), 1),_100.fld1,Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_48, 0), 1)];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).1 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<u32>(Variant(Field::<Adt48>(Variant(_19, 2), 1), 0), 4),_52,Field::<u32>(Variant(Field::<Adt48>(Variant(_19, 2), 1), 0), 4),Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,_52];
_147 = Adt57::Variant1 { fld0: _56,fld1: _109,fld2: _94 };
place!(Field::<Adt48>(Variant(_19, 2), 1)) = Adt48::Variant2 { fld0: Field::<*const u16>(Variant(_147, 1), 0),fld1: Field::<[isize; 1]>(Variant(_109, 0), 6) };
_66 = Field::<i8>(Variant(_99, 1), 3) << _97;
_84 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).1.0;
_134 = core::ptr::addr_of!((*_56));
_73 = [_50,_50,_50];
_28 = Adt62 { fld0: _22.fld0 };
place!(Field::<(f32, [u32; 7], i128)>(Variant(_116, 2), 3)).2 = _98;
SetDiscriminant(Field::<Adt51>(Variant(_109, 0), 2), 2);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_19, 2), 3)).0 = _53 * _53;
_154.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_99, 1), 4)).4.1 = _50 as u8;
place!(Field::<u128>(Variant(place!(Field::<Adt52>(Variant(_147, 1), 1)), 0), 1)) = !_96;
match _38 {
0 => bb10,
1 => bb41,
2 => bb8,
3 => bb96,
4 => bb83,
5 => bb100,
2266422573016976570 => bb102,
_ => bb101
}
}
bb180 = {
_60.1.1 = -_57.1;
_112 = !Field::<u128>(Variant(_135.fld0, 0), 2);
_95.4.0 = _88;
_40.4 = (_44.fld0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_116, 1), 3).1.2);
place!(Field::<[i16; 3]>(Variant(_99, 1), 5)) = [_50,_50,Field::<([i32; 2], i16, [i32; 4])>(Variant(_35, 1), 0).1];
_9.4.0 = [_100.fld4.2.0,_95.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_84];
_5.1 = Field::<([i32; 4], u8)>(Variant(_135.fld0, 0), 0).1 & _40.4.1;
_87 = [_139];
_92.3 = [Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_99, 1), 7),Field::<usize>(Variant(_109, 0), 5),Field::<usize>(Variant(_99, 1), 7),_100.fld1];
_9.4.1 = _95.1.2 | _68.1.2;
_100.fld2 = Adt48::Variant0 { fld0: _40.4,fld1: _40.0,fld2: _63,fld3: Field::<*const bool>(Variant(_135.fld0, 0), 3),fld4: _52 };
Goto(bb95)
}
bb181 = {
_140 = [_92.1.1,_6];
_116 = Move(_19);
_40.1.1 = (*_56) as i8;
_40.2.0 = _82.fld4;
_203 = Adt52::Variant2 { fld0: Field::<[isize; 1]>(Variant(_49, 2), 5),fld1: _82.fld2,fld2: Field::<[i64; 7]>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 2), 2),fld3: Field::<[i16; 2]>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 2), 3),fld4: _219.1,fld5: Field::<*mut bool>(Variant(_51, 2), 5) };
_30 = Adt51::Variant1 { fld0: _89,fld1: _32,fld2: Field::<[i16; 4]>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 1),fld3: _95.1.1,fld4: _171,fld5: _230.0,fld6: Field::<[bool; 5]>(Variant(_109, 0), 3),fld7: _205.fld3.0 };
place!(Field::<[i64; 4]>(Variant(_30, 1), 5)) = [_188.fld2,_242,_188.fld2,_82.fld2];
_236 = _169;
_188.fld1 = Adt53::Variant1 { fld0: _205.fld3,fld1: _63,fld2: Field::<u64>(Variant(_55, 0), 2) };
_188.fld3 = Adt58::Variant0 { fld0: Field::<(f32, [u32; 7], i128)>(Variant(_30, 1), 1),fld1: Field::<[i16; 2]>(Variant(Field::<Adt52>(Variant(_82.fld0, 1), 1), 2), 3) };
_158 = core::ptr::addr_of!(_233);
_14 = [_229,_229,_229,Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(_109, 0), 5),_229];
_237.fld1 = _92.2;
Goto(bb182)
}
bb182 = {
place!(Field::<([i32; 4], u8)>(Variant(_135.fld0, 0), 0)).0 = _194.fld0;
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld3 = core::ptr::addr_of!(place!(Field::<u16>(Variant(_116, 3), 1)));
place!(Field::<(i32, f64)>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 2)) = (_188.fld4, _60.1.1);
_183.2 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(Field::<Adt49>(Variant(_55, 0), 4).fld2, 3), 2).2;
_230.1.1 = _191;
_68.4.0 = [_57.0,_92.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_30, 1), 4).1.0,Field::<i32>(Variant(Field::<Adt49>(Variant(_55, 0), 4).fld2, 3), 5)];
_256 = _18;
SetDiscriminant(_99, 2);
place!(Field::<u128>(Variant(_109, 0), 1)) = _96 + _159;
_243.1.0 = _229 as i32;
_35 = Adt56::Variant0 { fld0: (*_80) };
match _38 {
0 => bb102,
1 => bb47,
2 => bb146,
3 => bb37,
4 => bb183,
5 => bb184,
2266422573016976570 => bb186,
_ => bb185
}
}
bb183 = {
_9.2.1 = _33 + _39;
_48 = Adt51::Variant0 { fld0: _44.fld3,fld1: 5221253219348815303_usize,fld2: _40.4.0 };
_9.4.0 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0,_57.0];
_24.2 = !_5.1;
_21 = _32.0;
_30 = Adt51::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).0,fld1: 5505674512839300980_usize,fld2: _9.4.0 };
_40.2 = _2.2;
match _9.2.0 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
5 => bb26,
6 => bb27,
636257108 => bb29,
_ => bb28
}
}
bb184 = {
_13 = -_6;
_15.1 = _2.4.1;
_9.2 = (_2.2.0, _2.2.1);
_15 = (_12.0, _2.4.1);
_9.3 = _14;
_9.2.1 = _2.2.1 * _2.2.1;
_9.2.1 = _2.2.1;
_15 = (_2.4.0, _12.1);
Goto(bb2)
}
bb185 = {
_16 = _2.1.0;
_44.fld3 = [(-4076584318965880478_i64),(-336357685478768136_i64),3141364341159485288_i64,5689117873522416275_i64];
_15.1 = _29 as u8;
_9.2.0 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0;
_5.0 = [_4,_4,_9.2.0,_9.2.0];
_10 = _43;
_45 = [7291192857083805560_i64,(-371781280018640287_i64),3838887051141340183_i64,(-201380489826226268_i64),2291852205918049567_i64,(-573123735667929574_i64),(-4928255838172887781_i64)];
_31.fld0 = [_29,_29];
_11 = _8;
_21 = Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0 + Field::<(f32, [u32; 7], i128)>(Variant(_19, 0), 1).0;
_40.4 = (_2.4.0, _9.1.2);
_40.2 = (Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0, _9.2.1);
_15.0 = [_40.2.0,_4,_40.2.0,Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0];
_32.0 = -_21;
_7 = _10;
_32.2 = _44.fld1 | _1;
_32.2 = !_1;
_9.1.0 = _16;
_42 = _34 as u128;
_13 = -_40.1.1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6)).2 = _9.2.0 as u32;
_44.fld3 = _27;
match Field::<([i64; 4], (i32, f64), u32)>(Variant(_19, 0), 6).1.0 {
0 => bb5,
636257108 => bb14,
_ => bb13
}
}
bb186 = {
_243.1 = (Field::<(i32, f64)>(Variant(_116, 3), 0).0, _9.2.1);
_31 = Adt62 { fld0: _100.fld0 };
_146 = Adt59 { fld0: Move(Field::<Adt49>(Variant(_55, 0), 4).fld2),fld1: _61,fld2: _64,fld3: _200.fld3 };
_226 = Adt50::Variant0 { fld0: _182,fld1: _9.4,fld2: _29,fld3: _13,fld4: (*_196),fld5: _40.2.0,fld6: Field::<[bool; 5]>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 6) };
_239 = _24.2 & Field::<Adt49>(Variant(_55, 0), 4).fld4.1.2;
_249 = Field::<*mut bool>(Variant(_51, 2), 5);
SetDiscriminant(_35, 0);
SetDiscriminant(_188.fld1, 0);
_95.1.0 = _3;
_110 = _139;
_199 = [(*_142),_124,_37,(*_249),(*_127),_89];
place!(Field::<Adt49>(Variant(_188.fld1, 0), 3)).fld4.1 = _95.1;
_237.fld6 = Adt58::Variant1 { fld0: _70 };
_9.3 = [Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(_48, 0), 1),Field::<usize>(Variant(_48, 0), 1),_229,Field::<usize>(Variant(_109, 0), 5),_229];
place!(Field::<Adt49>(Variant(_188.fld1, 0), 3)).fld0 = [Field::<u64>(Variant(_226, 0), 2),_38];
Goto(bb187)
}
bb187 = {
_173 = Field::<char>(Variant(_146.fld0, 3), 1);
_31 = _28;
RET = Adt53::Variant1 { fld0: _205.fld3,fld1: _187,fld2: Field::<u64>(Variant(_226, 0), 2) };
_54.fld4 = Field::<i32>(Variant(_146.fld0, 3), 5);
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_146.fld0, 3), 2)).0 = (_145.0.0, _154.4.1);
SetDiscriminant(_237.fld6, 1);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_188.fld3, 0), 0)).1 = [_243.2,_52,Field::<u32>(Variant(_146.fld0, 3), 4),Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2,_244.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2];
place!(Field::<*const u16>(Variant(_62, 2), 0)) = core::ptr::addr_of!(_135.fld2);
_260 = _175;
SetDiscriminant(Field::<Adt58>(Variant(_49, 2), 4), 1);
place!(Field::<[isize; 1]>(Variant(_51, 2), 0)) = [(*_186)];
_212 = _150;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(place!(Field::<Adt51>(Variant(_109, 0), 2)), 1), 4)).1.0 = _146.fld1;
place!(Field::<[bool; 6]>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 7)) = _199;
_254.fld3 = [Field::<i64>(Variant(_51, 2), 1),_82.fld2,_188.fld2,Field::<i64>(Variant(_203, 2), 1)];
(*_172) = !(*_158);
_185 = Field::<([i64; 4], (i32, f64), u32)>(Variant(Field::<Adt51>(Variant(_109, 0), 2), 1), 4).2;
place!(Field::<Adt49>(Variant(_55, 0), 4)).fld4.4.1 = !_95.4.1;
place!(Field::<u32>(Variant(_135.fld0, 0), 4)) = !_244.2;
place!(Field::<[i16; 4]>(Variant(place!(Field::<Adt52>(Variant(_170, 1), 0)), 1), 1)) = _154.0;
(*_127) = _110 <= _110;
place!(Field::<[i8; 2]>(Variant(_35, 0), 0)) = [_6,_106];
_214 = [(*_186)];
_26 = !_184;
_258 = Field::<(i32, f64)>(Variant(Field::<Adt52>(Variant(_170, 1), 0), 1), 2).0 | Field::<(i32, f64)>(Variant(_116, 3), 0).0;
Goto(bb188)
}
bb188 = {
Call(_266 = dump_var(10_usize, 118_usize, Move(_118), 137_usize, Move(_137), 130_usize, Move(_130), 252_usize, Move(_252)), bb189, UnwindUnreachable())
}
bb189 = {
Call(_266 = dump_var(10_usize, 229_usize, Move(_229), 18_usize, Move(_18), 6_usize, Move(_6), 159_usize, Move(_159)), bb190, UnwindUnreachable())
}
bb190 = {
Call(_266 = dump_var(10_usize, 256_usize, Move(_256), 13_usize, Move(_13), 1_usize, Move(_1), 220_usize, Move(_220)), bb191, UnwindUnreachable())
}
bb191 = {
Call(_266 = dump_var(10_usize, 107_usize, Move(_107), 50_usize, Move(_50), 233_usize, Move(_233), 8_usize, Move(_8)), bb192, UnwindUnreachable())
}
bb192 = {
Call(_266 = dump_var(10_usize, 47_usize, Move(_47), 106_usize, Move(_106), 52_usize, Move(_52), 25_usize, Move(_25)), bb193, UnwindUnreachable())
}
bb193 = {
Call(_266 = dump_var(10_usize, 258_usize, Move(_258), 128_usize, Move(_128), 161_usize, Move(_161), 145_usize, Move(_145)), bb194, UnwindUnreachable())
}
bb194 = {
Call(_266 = dump_var(10_usize, 67_usize, Move(_67), 36_usize, Move(_36), 198_usize, Move(_198), 139_usize, Move(_139)), bb195, UnwindUnreachable())
}
bb195 = {
Call(_266 = dump_var(10_usize, 88_usize, Move(_88), 83_usize, Move(_83), 86_usize, Move(_86), 77_usize, Move(_77)), bb196, UnwindUnreachable())
}
bb196 = {
Call(_266 = dump_var(10_usize, 15_usize, Move(_15), 148_usize, Move(_148), 173_usize, Move(_173), 199_usize, Move(_199)), bb197, UnwindUnreachable())
}
bb197 = {
Call(_266 = dump_var(10_usize, 64_usize, Move(_64), 163_usize, Move(_163), 27_usize, Move(_27), 174_usize, Move(_174)), bb198, UnwindUnreachable())
}
bb198 = {
Call(_266 = dump_var(10_usize, 90_usize, Move(_90), 73_usize, Move(_73), 215_usize, Move(_215), 5_usize, Move(_5)), bb199, UnwindUnreachable())
}
bb199 = {
Call(_266 = dump_var(10_usize, 136_usize, Move(_136), 144_usize, Move(_144), 236_usize, Move(_236), 4_usize, Move(_4)), bb200, UnwindUnreachable())
}
bb200 = {
Call(_266 = dump_var(10_usize, 72_usize, Move(_72), 124_usize, Move(_124), 132_usize, Move(_132), 23_usize, Move(_23)), bb201, UnwindUnreachable())
}
bb201 = {
Call(_266 = dump_var(10_usize, 46_usize, Move(_46), 104_usize, Move(_104), 114_usize, Move(_114), 102_usize, Move(_102)), bb202, UnwindUnreachable())
}
bb202 = {
Call(_266 = dump_var(10_usize, 185_usize, Move(_185), 75_usize, Move(_75), 204_usize, Move(_204), 58_usize, Move(_58)), bb203, UnwindUnreachable())
}
bb203 = {
Call(_266 = dump_var(10_usize, 61_usize, Move(_61), 267_usize, _267, 267_usize, _267, 267_usize, _267), bb204, UnwindUnreachable())
}
bb204 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: char,mut _2: ([i32; 4], u8)) -> [i32; 4] {
mir! {
type RET = [i32; 4];
let _3: Adt62;
let _4: isize;
let _5: *mut [usize; 6];
let _6: *const *const isize;
let _7: Adt58;
let _8: char;
let _9: [i16; 2];
let _10: isize;
let _11: i128;
let _12: ([i32; 2], i16, [i32; 4]);
let _13: f64;
let _14: isize;
let _15: ([i64; 4], (i32, f64), u32);
let _16: Adt64;
let _17: i128;
let _18: Adt57;
let _19: u16;
let _20: bool;
let _21: Adt50;
let _22: [i16; 2];
let _23: Adt51;
let _24: [bool; 6];
let _25: u8;
let _26: f64;
let _27: Adt59;
let _28: ();
let _29: ();
{
RET = _2.0;
_2.1 = 218_u8 & 129_u8;
RET = _2.0;
RET = [(-1627294819_i32),(-1564863627_i32),(-202942734_i32),1961071326_i32];
RET = [(-1616034689_i32),486463350_i32,1730041250_i32,(-241959008_i32)];
_2.0 = RET;
_2.1 = 143_u8 >> (-4480937558663015476_i64);
_3.fld0 = [18092291941236576624_u64,3748492815439269036_u64];
_2.0 = RET;
RET = _2.0;
RET = _2.0;
RET = _2.0;
_1 = '\u{1f3f0}';
_2.0 = [594523677_i32,(-501395914_i32),(-758707351_i32),(-1741352974_i32)];
_3.fld0 = [5474913252092888156_u64,13876068204747293663_u64];
_2 = (RET, 235_u8);
RET = _2.0;
_1 = '\u{bc6c4}';
_2 = (RET, 86_u8);
_2.0 = [1520477472_i32,1613005981_i32,(-415704905_i32),(-9331479_i32)];
_4 = 9223372036854775807_isize;
Call(_3 = fn12(_2.0, _4, _4), bb1, UnwindUnreachable())
}
bb1 = {
_4 = _1 as isize;
_2.1 = 179_u8 * 102_u8;
RET = _2.0;
_2.1 = (-118_i8) as u8;
_3.fld0 = [8066317891853679534_u64,2082633339618468362_u64];
RET = _2.0;
RET = _2.0;
RET = [(-1634420287_i32),469827136_i32,137047218_i32,1691885932_i32];
_2.1 = !154_u8;
RET = [(-2074134827_i32),1961874254_i32,(-402109935_i32),1022304292_i32];
_8 = _1;
_1 = _8;
Goto(bb2)
}
bb2 = {
_2 = (RET, 14_u8);
_2.1 = 6_u8 + 206_u8;
_1 = _8;
_2.0 = [(-1140652014_i32),270212556_i32,(-1602676987_i32),(-461951702_i32)];
_4 = !(-9223372036854775808_isize);
_3.fld0 = [10152477397811755975_u64,14663235165545806900_u64];
_8 = _1;
_1 = _8;
Goto(bb3)
}
bb3 = {
_2.0 = [1728766232_i32,1612204999_i32,1272693679_i32,440403369_i32];
Goto(bb4)
}
bb4 = {
_2.0 = [1973427130_i32,(-749839164_i32),(-1310357913_i32),(-733535059_i32)];
_1 = _8;
_2 = (RET, 227_u8);
RET = _2.0;
RET = _2.0;
_2.0 = [(-1355976569_i32),550741104_i32,(-1823407360_i32),829422997_i32];
_2.1 = 214_u8 - 12_u8;
_2.0 = [(-683499122_i32),790312596_i32,(-950266708_i32),728660506_i32];
_12.0 = [(-1671771815_i32),(-265291991_i32)];
_8 = _1;
Goto(bb5)
}
bb5 = {
_2 = (RET, 52_u8);
_4 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_10 = _4;
RET = _2.0;
RET = [(-2087678678_i32),(-1467557628_i32),1453708826_i32,(-644628240_i32)];
_2.1 = 73_u8 | 129_u8;
RET = [1448072348_i32,(-1465217495_i32),(-1381003722_i32),940242648_i32];
_11 = false as i128;
_12.1 = !(-18110_i16);
_13 = 10_i8 as f64;
_14 = _4 ^ _4;
RET = [1149549668_i32,(-115612032_i32),514280478_i32,(-762580735_i32)];
RET = [(-1877487034_i32),726428138_i32,(-896020146_i32),856529499_i32];
_12.0 = [(-1826703202_i32),1828592089_i32];
_2 = (RET, 244_u8);
_4 = !_14;
_3.fld0 = [8120330759779363393_u64,121757123358258519_u64];
_3.fld0 = [7982702101405094281_u64,13362681232957085733_u64];
_4 = _14;
_15.0 = [2351675849536611948_i64,4295709641029260687_i64,(-6734845380860002479_i64),2721701246565088636_i64];
_13 = (-62_i8) as f64;
_12.0 = [(-1660838836_i32),1208682830_i32];
_11 = _2.1 as i128;
match _2.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
244 => bb10,
_ => bb9
}
}
bb6 = {
_2.0 = [1973427130_i32,(-749839164_i32),(-1310357913_i32),(-733535059_i32)];
_1 = _8;
_2 = (RET, 227_u8);
RET = _2.0;
RET = _2.0;
_2.0 = [(-1355976569_i32),550741104_i32,(-1823407360_i32),829422997_i32];
_2.1 = 214_u8 - 12_u8;
_2.0 = [(-683499122_i32),790312596_i32,(-950266708_i32),728660506_i32];
_12.0 = [(-1671771815_i32),(-265291991_i32)];
_8 = _1;
Goto(bb5)
}
bb7 = {
_2.0 = [1728766232_i32,1612204999_i32,1272693679_i32,440403369_i32];
Goto(bb4)
}
bb8 = {
_2 = (RET, 14_u8);
_2.1 = 6_u8 + 206_u8;
_1 = _8;
_2.0 = [(-1140652014_i32),270212556_i32,(-1602676987_i32),(-461951702_i32)];
_4 = !(-9223372036854775808_isize);
_3.fld0 = [10152477397811755975_u64,14663235165545806900_u64];
_8 = _1;
_1 = _8;
Goto(bb3)
}
bb9 = {
_4 = _1 as isize;
_2.1 = 179_u8 * 102_u8;
RET = _2.0;
_2.1 = (-118_i8) as u8;
_3.fld0 = [8066317891853679534_u64,2082633339618468362_u64];
RET = _2.0;
RET = _2.0;
RET = [(-1634420287_i32),469827136_i32,137047218_i32,1691885932_i32];
_2.1 = !154_u8;
RET = [(-2074134827_i32),1961874254_i32,(-402109935_i32),1022304292_i32];
_8 = _1;
_1 = _8;
Goto(bb2)
}
bb10 = {
_4 = _14;
_17 = _11;
_13 = 139917897378204840578075692854788988522_u128 as f64;
RET = [1383406206_i32,(-14441269_i32),938116468_i32,594888002_i32];
_15.1 = ((-167516833_i32), _13);
_13 = -_15.1.1;
_15.0 = [7218584510039953474_i64,(-8714156538792352535_i64),(-114941030322224082_i64),2352658289301740912_i64];
_17 = _11;
_12.2 = _2.0;
_1 = _8;
_4 = _17 as isize;
_19 = !13061_u16;
_11 = _17;
_13 = 194275138714169809_usize as f64;
_17 = _11 - _11;
RET = _12.2;
_10 = -_14;
_10 = _13 as isize;
_4 = !_10;
match _15.1.0 {
0 => bb5,
1 => bb11,
340282366920938463463374607431600694623 => bb13,
_ => bb12
}
}
bb11 = {
_2 = (RET, 52_u8);
_4 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_10 = _4;
RET = _2.0;
RET = [(-2087678678_i32),(-1467557628_i32),1453708826_i32,(-644628240_i32)];
_2.1 = 73_u8 | 129_u8;
RET = [1448072348_i32,(-1465217495_i32),(-1381003722_i32),940242648_i32];
_11 = false as i128;
_12.1 = !(-18110_i16);
_13 = 10_i8 as f64;
_14 = _4 ^ _4;
RET = [1149549668_i32,(-115612032_i32),514280478_i32,(-762580735_i32)];
RET = [(-1877487034_i32),726428138_i32,(-896020146_i32),856529499_i32];
_12.0 = [(-1826703202_i32),1828592089_i32];
_2 = (RET, 244_u8);
_4 = !_14;
_3.fld0 = [8120330759779363393_u64,121757123358258519_u64];
_3.fld0 = [7982702101405094281_u64,13362681232957085733_u64];
_4 = _14;
_15.0 = [2351675849536611948_i64,4295709641029260687_i64,(-6734845380860002479_i64),2721701246565088636_i64];
_13 = (-62_i8) as f64;
_12.0 = [(-1660838836_i32),1208682830_i32];
_11 = _2.1 as i128;
match _2.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
5 => bb8,
244 => bb10,
_ => bb9
}
}
bb12 = {
_2.0 = [1973427130_i32,(-749839164_i32),(-1310357913_i32),(-733535059_i32)];
_1 = _8;
_2 = (RET, 227_u8);
RET = _2.0;
RET = _2.0;
_2.0 = [(-1355976569_i32),550741104_i32,(-1823407360_i32),829422997_i32];
_2.1 = 214_u8 - 12_u8;
_2.0 = [(-683499122_i32),790312596_i32,(-950266708_i32),728660506_i32];
_12.0 = [(-1671771815_i32),(-265291991_i32)];
_8 = _1;
Goto(bb5)
}
bb13 = {
RET = [_15.1.0,_15.1.0,_15.1.0,_15.1.0];
_19 = 57611_u16 >> _11;
_17 = 10881511094970596826_u64 as i128;
_22 = [_12.1,_12.1];
_12.2 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0];
_11 = _12.1 as i128;
_20 = true;
Call(_9 = core::intrinsics::transmute(_15.1.0), bb14, UnwindUnreachable())
}
bb14 = {
RET = _12.2;
_22 = [_12.1,_12.1];
_1 = _8;
_2.0 = [_15.1.0,_15.1.0,_15.1.0,_15.1.0];
RET = _2.0;
_26 = (-87_i8) as f64;
_15.0 = [1941086224498903315_i64,(-1855258755182623027_i64),(-835084126233944158_i64),(-3721157306789189984_i64)];
_12.0 = [_15.1.0,_15.1.0];
_14 = _4;
_15.1.0 = 12757368856549722221_u64 as i32;
_27.fld2 = !_19;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(11_usize, 17_usize, Move(_17), 11_usize, Move(_11), 1_usize, Move(_1), 14_usize, Move(_14)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(11_usize, 2_usize, Move(_2), 4_usize, Move(_4), 29_usize, _29, 29_usize, _29), bb17, UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: [i32; 4],mut _2: isize,mut _3: isize) -> Adt62 {
mir! {
type RET = Adt62;
let _4: [i32; 2];
let _5: usize;
let _6: [bool; 5];
let _7: Adt64;
let _8: Adt54;
let _9: Adt56;
let _10: isize;
let _11: Adt63;
let _12: f32;
let _13: char;
let _14: char;
let _15: isize;
let _16: [u32; 7];
let _17: Adt53;
let _18: u16;
let _19: f64;
let _20: i64;
let _21: char;
let _22: f32;
let _23: char;
let _24: u64;
let _25: u32;
let _26: Adt52;
let _27: *mut [i8; 2];
let _28: [i8; 2];
let _29: Adt61;
let _30: u8;
let _31: u128;
let _32: bool;
let _33: u64;
let _34: Adt50;
let _35: [i8; 2];
let _36: ();
let _37: ();
{
_1 = [(-1788297784_i32),1443499340_i32,874889671_i32,163807953_i32];
_3 = _2;
_1 = [1633199686_i32,1573655454_i32,1375839189_i32,34304647_i32];
_3 = _2;
RET.fld0 = [17900984096595060822_u64,7657503309077120513_u64];
_1 = [1310789329_i32,(-1111652476_i32),(-227544522_i32),(-2001807684_i32)];
RET.fld0 = [14530470659494397789_u64,2507038983491236701_u64];
_2 = (-90_i8) as isize;
_3 = _2 ^ _2;
RET.fld0 = [12468073853448599775_u64,16189316321870039572_u64];
_1 = [635397042_i32,1648633489_i32,1326251635_i32,(-911229683_i32)];
_4 = [2046607530_i32,(-1758617401_i32)];
_1 = [1377585460_i32,2139764233_i32,(-805453527_i32),(-577062403_i32)];
_4 = [(-2108485460_i32),1744008887_i32];
_4 = [(-320900443_i32),(-1610769036_i32)];
RET.fld0 = [2870149556767798217_u64,6391214945470702421_u64];
_4 = [(-1648199835_i32),952320440_i32];
RET.fld0 = [9839154203364471977_u64,7471946243052472480_u64];
RET.fld0 = [6028354152744431343_u64,863759036550619056_u64];
RET.fld0 = [6400664514125949309_u64,17987035361556951656_u64];
RET.fld0 = [17337841465445083722_u64,2713660479395465975_u64];
Goto(bb1)
}
bb1 = {
_4 = [(-1749747368_i32),(-1787591121_i32)];
_1 = [1237301644_i32,752468013_i32,681316692_i32,2067194191_i32];
RET.fld0 = [14521295598558674493_u64,6320716441243218362_u64];
RET.fld0 = [15979497349176556517_u64,17118672749807799128_u64];
_4 = [(-1883328088_i32),(-1390432148_i32)];
RET.fld0 = [15816154360551943018_u64,6433442039435521544_u64];
RET.fld0 = [7010413347833467853_u64,11581795633469669784_u64];
_5 = 1_usize * 6325560798094389239_usize;
Goto(bb2)
}
bb2 = {
_4 = [1080556373_i32,(-369281533_i32)];
RET.fld0 = [8210770538967123941_u64,16010090893390399508_u64];
_1 = [1835009481_i32,823046045_i32,(-2089767232_i32),712246156_i32];
_6 = [false,true,true,true,true];
_1 = [286223624_i32,1788619114_i32,66467993_i32,1116761569_i32];
_1 = [(-906879008_i32),990604059_i32,559443285_i32,402348_i32];
_6 = [true,false,true,false,false];
_5 = 7881615202271601017_usize ^ 7337206612494902844_usize;
_5 = 1600389442351614841_usize - 5732461370349858341_usize;
RET.fld0 = [7173110584246427214_u64,8009784800640121689_u64];
_6 = [true,true,true,false,false];
_2 = _3 >> _5;
_6 = [false,false,true,true,false];
_1 = [751480705_i32,1074216701_i32,(-1180526011_i32),(-258512013_i32)];
_4 = [(-1172203790_i32),1931649192_i32];
Goto(bb3)
}
bb3 = {
_1 = [1246019772_i32,(-834141005_i32),(-1435883792_i32),1524900594_i32];
_1 = [71364817_i32,(-1912154465_i32),(-1862948832_i32),(-400694531_i32)];
_2 = _3;
RET.fld0 = [15668533387626306209_u64,3798195266448424281_u64];
_1 = [426341120_i32,1852511823_i32,419168212_i32,(-809624205_i32)];
_10 = 7_u8 as isize;
_4 = [500413305_i32,1588725451_i32];
_10 = _3 - _3;
_1 = [(-1157245236_i32),(-1369449204_i32),(-889869515_i32),943280481_i32];
_12 = 45724_u16 as f32;
_4 = [691750642_i32,(-286108631_i32)];
_10 = -_3;
_2 = !_10;
_5 = 22370_i16 as usize;
Call(RET = fn13(_10, _12, _3, _1, _4, _6, _4, _1), bb4, UnwindUnreachable())
}
bb4 = {
RET.fld0 = [12914384740504118742_u64,16930538493863574352_u64];
_10 = !_3;
_1 = [(-682011529_i32),2101740805_i32,909489773_i32,(-571635886_i32)];
_1 = [(-1506141647_i32),273610148_i32,(-1306327061_i32),(-64441925_i32)];
_4 = [(-59116483_i32),858048232_i32];
_10 = 3419523660_u32 as isize;
RET.fld0 = [6385784438713617180_u64,5596405860955741938_u64];
_5 = 5_usize | 4_usize;
_12 = 160_u8 as f32;
_12 = (-20797_i16) as f32;
_4 = [(-1246159553_i32),1044830593_i32];
Call(_8 = fn14(_1, RET.fld0, _1, _1, _4), bb5, UnwindUnreachable())
}
bb5 = {
RET.fld0 = [14201175777007996348_u64,2533168037398965513_u64];
_6 = [true,true,true,false,false];
SetDiscriminant(_8, 0);
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = -(-2103207620_i32);
_2 = _3 + _10;
_10 = _2;
_5 = !14195012266223703691_usize;
_2 = _3 * _3;
_3 = _10;
_12 = _5 as f32;
_16 = [277125372_u32,1493205703_u32,3411900319_u32,350150964_u32,4077554597_u32,3375776859_u32,3811337949_u32];
_14 = '\u{c0c59}';
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = 2128075796_i32 << _2;
_10 = !_3;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = (-3546635946018332167_i64) as i32;
RET.fld0 = [18039655095587792828_u64,14133332600409754653_u64];
Goto(bb6)
}
bb6 = {
_12 = (-56_i8) as f32;
_12 = 7012_u16 as f32;
_14 = '\u{d2f54}';
_14 = '\u{a80bd}';
_13 = _14;
_2 = -_3;
_19 = _2 as f64;
_2 = _12 as isize;
_18 = 52071_u16;
_6 = [false,false,true,false,true];
Goto(bb7)
}
bb7 = {
_13 = _14;
_21 = _14;
_12 = 161_u8 as f32;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = !(-1550195930_i32);
_21 = _14;
_5 = !14250540973418791170_usize;
Goto(bb8)
}
bb8 = {
_5 = !7_usize;
_6 = [false,false,false,false,true];
_22 = _3 as f32;
_13 = _14;
_4 = [Field::<(i32, f64)>(Variant(_8, 0), 0).0,Field::<(i32, f64)>(Variant(_8, 0), 0).0];
_22 = 100_u8 as f32;
_3 = _10 + _2;
_5 = !2_usize;
_23 = _21;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).1 = -_19;
_18 = 64301_u16 << _10;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)) = ((-493048992_i32), _19);
_3 = _10;
_5 = true as usize;
_15 = -_2;
_3 = _2 * _10;
_18 = 30615_u16;
_19 = Field::<(i32, f64)>(Variant(_8, 0), 0).1 + Field::<(i32, f64)>(Variant(_8, 0), 0).1;
_18 = _3 as u16;
_23 = _13;
_18 = !34803_u16;
_15 = _3;
_5 = 3_usize ^ 12692193951910450699_usize;
_24 = 10508350960447640916_u64;
_5 = !6_usize;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).1 = _19;
RET.fld0 = [_24,_24];
match Field::<(i32, f64)>(Variant(_8, 0), 0).0 {
0 => bb5,
1 => bb6,
340282366920938463463374607431275162464 => bb10,
_ => bb9
}
}
bb9 = {
_13 = _14;
_21 = _14;
_12 = 161_u8 as f32;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = !(-1550195930_i32);
_21 = _14;
_5 = !14250540973418791170_usize;
Goto(bb8)
}
bb10 = {
_18 = 37462_u16;
_2 = _10;
_3 = -_2;
_12 = _22 + _22;
_25 = _12 as u32;
_11 = Adt63::Variant3 { fld0: Field::<(i32, f64)>(Variant(_8, 0), 0),fld1: _18 };
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)) = (Field::<(i32, f64)>(Variant(_11, 3), 0).0, Field::<(i32, f64)>(Variant(_11, 3), 0).1);
_10 = _18 as isize;
_1 = [Field::<(i32, f64)>(Variant(_11, 3), 0).0,Field::<(i32, f64)>(Variant(_8, 0), 0).0,Field::<(i32, f64)>(Variant(_11, 3), 0).0,Field::<(i32, f64)>(Variant(_8, 0), 0).0];
_2 = _3 - _15;
_14 = _21;
_22 = _12 * _12;
place!(Field::<u16>(Variant(_11, 3), 1)) = _18 * _18;
_3 = Field::<(i32, f64)>(Variant(_11, 3), 0).0 as isize;
_10 = Field::<u16>(Variant(_11, 3), 1) as isize;
_13 = _23;
place!(Field::<(i32, f64)>(Variant(_11, 3), 0)) = (Field::<(i32, f64)>(Variant(_8, 0), 0).0, Field::<(i32, f64)>(Variant(_8, 0), 0).1);
Call(_29.fld3 = fn15(_18, _2, _12, _2, Field::<(i32, f64)>(Variant(_8, 0), 0), _13, Move(_11), _22, _8, _8, Field::<(i32, f64)>(Variant(_8, 0), 0).1, Field::<(i32, f64)>(Variant(_8, 0), 0).0, _13), bb11, UnwindUnreachable())
}
bb11 = {
_5 = (-120_i8) as usize;
_29.fld2 = (-5655436268476338749_i64) - 7586840245725327329_i64;
_2 = _15;
_28 = [25_i8,51_i8];
_27 = core::ptr::addr_of_mut!(_28);
RET.fld0 = [_24,_24];
_2 = !_15;
_14 = _13;
_24 = 11743365504991286704_u64;
_32 = false ^ false;
_14 = _21;
_5 = _18 as usize;
_24 = Field::<(i32, f64)>(Variant(_8, 0), 0).0 as u64;
_25 = !756511095_u32;
match Field::<(i32, f64)>(Variant(_8, 0), 0).0 {
0 => bb1,
1 => bb12,
2 => bb13,
340282366920938463463374607431275162464 => bb15,
_ => bb14
}
}
bb12 = {
RET.fld0 = [14201175777007996348_u64,2533168037398965513_u64];
_6 = [true,true,true,false,false];
SetDiscriminant(_8, 0);
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = -(-2103207620_i32);
_2 = _3 + _10;
_10 = _2;
_5 = !14195012266223703691_usize;
_2 = _3 * _3;
_3 = _10;
_12 = _5 as f32;
_16 = [277125372_u32,1493205703_u32,3411900319_u32,350150964_u32,4077554597_u32,3375776859_u32,3811337949_u32];
_14 = '\u{c0c59}';
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = 2128075796_i32 << _2;
_10 = !_3;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = (-3546635946018332167_i64) as i32;
RET.fld0 = [18039655095587792828_u64,14133332600409754653_u64];
Goto(bb6)
}
bb13 = {
_1 = [1246019772_i32,(-834141005_i32),(-1435883792_i32),1524900594_i32];
_1 = [71364817_i32,(-1912154465_i32),(-1862948832_i32),(-400694531_i32)];
_2 = _3;
RET.fld0 = [15668533387626306209_u64,3798195266448424281_u64];
_1 = [426341120_i32,1852511823_i32,419168212_i32,(-809624205_i32)];
_10 = 7_u8 as isize;
_4 = [500413305_i32,1588725451_i32];
_10 = _3 - _3;
_1 = [(-1157245236_i32),(-1369449204_i32),(-889869515_i32),943280481_i32];
_12 = 45724_u16 as f32;
_4 = [691750642_i32,(-286108631_i32)];
_10 = -_3;
_2 = !_10;
_5 = 22370_i16 as usize;
Call(RET = fn13(_10, _12, _3, _1, _4, _6, _4, _1), bb4, UnwindUnreachable())
}
bb14 = {
_13 = _14;
_21 = _14;
_12 = 161_u8 as f32;
place!(Field::<(i32, f64)>(Variant(_8, 0), 0)).0 = !(-1550195930_i32);
_21 = _14;
_5 = !14250540973418791170_usize;
Goto(bb8)
}
bb15 = {
_6 = [_32,_32,_32,_32,_32];
_10 = !_2;
_30 = 115_u8;
_35 = _28;
_6 = [_32,_32,_32,_32,_32];
_25 = 58_i8 as u32;
_24 = 3840943683772603619_u64 >> _15;
_25 = _5 as u32;
_5 = !5_usize;
_19 = _25 as f64;
Goto(bb16)
}
bb16 = {
Call(_36 = dump_var(12_usize, 6_usize, Move(_6), 2_usize, Move(_2), 24_usize, Move(_24), 28_usize, Move(_28)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(12_usize, 16_usize, Move(_16), 21_usize, Move(_21), 35_usize, Move(_35), 23_usize, Move(_23)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(12_usize, 3_usize, Move(_3), 13_usize, Move(_13), 37_usize, _37, 37_usize, _37), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: isize,mut _2: f32,mut _3: isize,mut _4: [i32; 4],mut _5: [i32; 2],mut _6: [bool; 5],mut _7: [i32; 2],mut _8: [i32; 4]) -> Adt62 {
mir! {
type RET = Adt62;
let _9: [isize; 1];
let _10: (i32, f64);
let _11: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _12: usize;
let _13: [i32; 2];
let _14: char;
let _15: i16;
let _16: [u32; 7];
let _17: [i64; 7];
let _18: (i32, f64);
let _19: isize;
let _20: ();
let _21: ();
{
RET.fld0 = [17166149010757909525_u64,8707510233889196968_u64];
_1 = _3 | _3;
_10.1 = _2 as f64;
_11.0.1 = '\u{b089e}' as u8;
_5 = _7;
_2 = 13233256874932879026_u64 as f32;
_11.0.1 = 85113360236509646425384546698146435684_u128 as u8;
_5 = _7;
_2 = 3_usize as f32;
_11.0.1 = 29968_i16 as u8;
Goto(bb1)
}
bb1 = {
_10.0 = 756801172_i32;
match _10.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
756801172 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12 = _11.0.1 as usize;
_11.2 = [(-17806_i16),(-32074_i16),(-26514_i16),22368_i16];
_11.0 = (_8, 33_u8);
_9 = [_1];
_8 = [_10.0,_10.0,_10.0,_10.0];
match _11.0.1 {
0 => bb11,
1 => bb12,
2 => bb13,
33 => bb15,
_ => bb14
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_10.1 = _11.0.1 as f64;
_10.0 = -309704246_i32;
_11.3 = [(-49_i8),101_i8];
_2 = _10.1 as f32;
_10.1 = 86512592292267900706672421481777732909_u128 as f64;
RET.fld0 = [10842207123129136418_u64,8532613357041707395_u64];
_12 = 6162076926932120170_usize;
_11.1 = '\u{f2144}';
_3 = -_1;
_17 = [7416386460244533056_i64,(-81828267623847287_i64),7417348496061266027_i64,7828318281232319028_i64,8153443304626499359_i64,3605631149567299906_i64,5153416630819889150_i64];
_3 = _1;
_16 = [1071011467_u32,2946108716_u32,3192646244_u32,1152326991_u32,2961560425_u32,282109649_u32,966756618_u32];
_18.0 = -_10.0;
Goto(bb16)
}
bb16 = {
Call(_20 = dump_var(13_usize, 6_usize, Move(_6), 5_usize, Move(_5), 9_usize, Move(_9), 11_usize, Move(_11)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_20 = dump_var(13_usize, 17_usize, Move(_17), 4_usize, Move(_4), 21_usize, _21, 21_usize, _21), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [i32; 4],mut _2: [u64; 2],mut _3: [i32; 4],mut _4: [i32; 4],mut _5: [i32; 2]) -> Adt54 {
mir! {
type RET = Adt54;
let _6: Adt61;
let _7: [i32; 4];
let _8: f64;
let _9: f64;
let _10: isize;
let _11: u32;
let _12: Adt60;
let _13: [i16; 3];
let _14: f32;
let _15: Adt51;
let _16: [i16; 3];
let _17: i128;
let _18: u64;
let _19: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _20: Adt57;
let _21: [isize; 1];
let _22: u64;
let _23: ([i64; 4], (i32, f64), u32);
let _24: [bool; 5];
let _25: f32;
let _26: usize;
let _27: char;
let _28: u16;
let _29: char;
let _30: [u64; 4];
let _31: u64;
let _32: Adt63;
let _33: [bool; 5];
let _34: u32;
let _35: bool;
let _36: Adt57;
let _37: [isize; 1];
let _38: [i16; 4];
let _39: [bool; 5];
let _40: [bool; 5];
let _41: f32;
let _42: [i32; 4];
let _43: isize;
let _44: [u32; 7];
let _45: [i64; 4];
let _46: ([i64; 4], (i32, f64), u32);
let _47: (i32, f64);
let _48: f64;
let _49: ();
let _50: ();
{
_1 = _3;
Goto(bb1)
}
bb1 = {
_6.fld4 = (-1893158005_i32);
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = -(-957337040_i32);
_5 = [_6.fld4,_6.fld4];
_2 = [16083827050945964471_u64,2783870893978274788_u64];
_6.fld2 = -1278121237377952344_i64;
_6.fld2 = 1687373592447701818_i64;
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = 139773724682038053484550029264250588187_u128 as i32;
_4 = _1;
_6.fld2 = -3578870072942384609_i64;
_5 = [_6.fld4,_6.fld4];
_2 = [13991465794013286733_u64,7619859229110510161_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [13742733939333955552_u64,10376227935720006873_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_3 = _4;
_7 = _4;
_2 = [1342280074795868330_u64,4284201644503375179_u64];
_6.fld2 = true as i64;
_5 = [_6.fld4,_6.fld4];
Call(_3 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb2 = {
_6.fld2 = (-274535832049431594_i64);
_6.fld4 = '\u{bdd31}' as i32;
_5 = [_6.fld4,_6.fld4];
_6.fld4 = 12829721103794753552_u64 as i32;
_6.fld4 = 253954555_i32;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [1531757303144089995_u64,18033917164675626844_u64];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_8 = _6.fld2 as f64;
_4 = _7;
_9 = _8 * _8;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_4 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_9 = 3289_u16 as f64;
Goto(bb3)
}
bb3 = {
_9 = -_8;
_6.fld2 = (-6848143541387321894_i64);
_4 = _7;
_6.fld4 = 1552688154_i32 * (-1986638756_i32);
_7 = _1;
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8 * _8;
_6.fld4 = 914696381_i32 - 608316384_i32;
_6.fld4 = (-1703357087_i32) - 584157530_i32;
_9 = -_8;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_12.fld3.0 = [_6.fld4,_6.fld4];
_13 = [(-22588_i16),(-9291_i16),(-13003_i16)];
match _6.fld2 {
0 => bb1,
1 => bb4,
2 => bb5,
340282366920938463456526463890380889562 => bb7,
_ => bb6
}
}
bb4 = {
_6.fld2 = (-274535832049431594_i64);
_6.fld4 = '\u{bdd31}' as i32;
_5 = [_6.fld4,_6.fld4];
_6.fld4 = 12829721103794753552_u64 as i32;
_6.fld4 = 253954555_i32;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [1531757303144089995_u64,18033917164675626844_u64];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_8 = _6.fld2 as f64;
_4 = _7;
_9 = _8 * _8;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_4 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_9 = 3289_u16 as f64;
Goto(bb3)
}
bb5 = {
_6.fld4 = (-1893158005_i32);
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = -(-957337040_i32);
_5 = [_6.fld4,_6.fld4];
_2 = [16083827050945964471_u64,2783870893978274788_u64];
_6.fld2 = -1278121237377952344_i64;
_6.fld2 = 1687373592447701818_i64;
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = 139773724682038053484550029264250588187_u128 as i32;
_4 = _1;
_6.fld2 = -3578870072942384609_i64;
_5 = [_6.fld4,_6.fld4];
_2 = [13991465794013286733_u64,7619859229110510161_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [13742733939333955552_u64,10376227935720006873_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_3 = _4;
_7 = _4;
_2 = [1342280074795868330_u64,4284201644503375179_u64];
_6.fld2 = true as i64;
_5 = [_6.fld4,_6.fld4];
Call(_3 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_12.fld3.2 = _7;
_2 = [8346961879804933186_u64,18356930016834371803_u64];
_8 = (-56_isize) as f64;
_10 = (-68_isize);
_12.fld3.1 = _6.fld4 as i16;
_12.fld4.0 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_12.fld1.0 = _6.fld4 | _6.fld4;
_12.fld2 = core::ptr::addr_of!(_10);
_16 = [_12.fld3.1,_12.fld3.1,_12.fld3.1];
_12.fld5 = [(-97_i8),28_i8];
_12.fld3.2 = _12.fld4.0;
_8 = _9;
_18 = 12345289109210623955_u64;
_12.fld1 = (_6.fld4, _8);
_19.2.1 = _18 as f64;
_12.fld1.1 = _6.fld2 as f64;
_19.3 = [5685310055073166590_usize,4_usize,7_usize,6_usize,7_usize,1838070657140624808_usize];
_12.fld0 = [59255_u16,52248_u16,58704_u16];
match _10 {
0 => bb6,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463463374607431768211388 => bb12,
_ => bb11
}
}
bb8 = {
Return()
}
bb9 = {
_6.fld4 = (-1893158005_i32);
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = -(-957337040_i32);
_5 = [_6.fld4,_6.fld4];
_2 = [16083827050945964471_u64,2783870893978274788_u64];
_6.fld2 = -1278121237377952344_i64;
_6.fld2 = 1687373592447701818_i64;
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = 139773724682038053484550029264250588187_u128 as i32;
_4 = _1;
_6.fld2 = -3578870072942384609_i64;
_5 = [_6.fld4,_6.fld4];
_2 = [13991465794013286733_u64,7619859229110510161_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [13742733939333955552_u64,10376227935720006873_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_3 = _4;
_7 = _4;
_2 = [1342280074795868330_u64,4284201644503375179_u64];
_6.fld2 = true as i64;
_5 = [_6.fld4,_6.fld4];
Call(_3 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb10 = {
_6.fld2 = (-274535832049431594_i64);
_6.fld4 = '\u{bdd31}' as i32;
_5 = [_6.fld4,_6.fld4];
_6.fld4 = 12829721103794753552_u64 as i32;
_6.fld4 = 253954555_i32;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [1531757303144089995_u64,18033917164675626844_u64];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_8 = _6.fld2 as f64;
_4 = _7;
_9 = _8 * _8;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_4 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8;
_9 = 3289_u16 as f64;
Goto(bb3)
}
bb11 = {
_9 = -_8;
_6.fld2 = (-6848143541387321894_i64);
_4 = _7;
_6.fld4 = 1552688154_i32 * (-1986638756_i32);
_7 = _1;
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = _8 * _8;
_6.fld4 = 914696381_i32 - 608316384_i32;
_6.fld4 = (-1703357087_i32) - 584157530_i32;
_9 = -_8;
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_12.fld3.0 = [_6.fld4,_6.fld4];
_13 = [(-22588_i16),(-9291_i16),(-13003_i16)];
match _6.fld2 {
0 => bb1,
1 => bb4,
2 => bb5,
340282366920938463456526463890380889562 => bb7,
_ => bb6
}
}
bb12 = {
_17 = 139676019114618446414288236862271065032_i128;
_5 = [_12.fld1.0,_6.fld4];
_6.fld1 = Adt53::Variant1 { fld0: _12.fld3,fld1: 204270536775205527903042176160127435559_u128,fld2: _18 };
_12.fld0 = [64223_u16,19749_u16,58953_u16];
_19.2.1 = -_12.fld1.1;
_6.fld4 = -_12.fld1.0;
_19.4.1 = 232_u8 * 48_u8;
place!(Field::<u128>(Variant(_6.fld1, 1), 1)) = '\u{b8d03}' as u128;
match _6.fld2 {
0 => bb1,
1 => bb11,
2 => bb3,
340282366920938463456526463890380889562 => bb13,
_ => bb4
}
}
bb13 = {
_9 = _10 as f64;
_19.2 = (_12.fld1.0, _9);
SetDiscriminant(_6.fld1, 0);
_19.4 = (_12.fld4.0, 184_u8);
_12.fld3.1 = -(-1502_i16);
_11 = !607521335_u32;
place!(Field::<Adt49>(Variant(_6.fld1, 0), 3)).fld6 = !_19.4.1;
place!(Field::<[u64; 4]>(Variant(_6.fld1, 0), 2)) = [_18,_18,_18,_18];
place!(Field::<Adt49>(Variant(_6.fld1, 0), 3)).fld4.2.1 = _9;
place!(Field::<Adt49>(Variant(_6.fld1, 0), 3)).fld4.2 = (_6.fld4, _12.fld1.1);
_6.fld1 = Adt53::Variant1 { fld0: _12.fld3,fld1: 178745365692949666993177805799589078976_u128,fld2: _18 };
_19.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,_12.fld3.1,_12.fld3.1,_12.fld3.1];
_1 = [_12.fld1.0,_19.2.0,_6.fld4,_19.2.0];
_19.2.0 = -_12.fld1.0;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0)).0 = [_19.2.0,_6.fld4];
_16 = _13;
_23.0 = [_6.fld2,_6.fld2,_6.fld2,_6.fld2];
Goto(bb14)
}
bb14 = {
_2 = [_18,_18];
_19.1 = ('\u{5075a}', (-106_i8), _19.4.1);
_23.1.1 = _8;
_11 = _10 as u32;
match _19.1.2 {
0 => bb15,
184 => bb17,
_ => bb16
}
}
bb15 = {
Return()
}
bb16 = {
_12.fld3.2 = _7;
_2 = [8346961879804933186_u64,18356930016834371803_u64];
_8 = (-56_isize) as f64;
_10 = (-68_isize);
_12.fld3.1 = _6.fld4 as i16;
_12.fld4.0 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_12.fld1.0 = _6.fld4 | _6.fld4;
_12.fld2 = core::ptr::addr_of!(_10);
_16 = [_12.fld3.1,_12.fld3.1,_12.fld3.1];
_12.fld5 = [(-97_i8),28_i8];
_12.fld3.2 = _12.fld4.0;
_8 = _9;
_18 = 12345289109210623955_u64;
_12.fld1 = (_6.fld4, _8);
_19.2.1 = _18 as f64;
_12.fld1.1 = _6.fld2 as f64;
_19.3 = [5685310055073166590_usize,4_usize,7_usize,6_usize,7_usize,1838070657140624808_usize];
_12.fld0 = [59255_u16,52248_u16,58704_u16];
match _10 {
0 => bb6,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463463374607431768211388 => bb12,
_ => bb11
}
}
bb17 = {
_14 = _19.2.1 as f32;
place!(Field::<u128>(Variant(_6.fld1, 1), 1)) = 93368022627474862837210104081191418792_u128;
_15 = Adt51::Variant0 { fld0: _23.0,fld1: 7_usize,fld2: _3 };
place!(Field::<[i64; 4]>(Variant(_15, 0), 0)) = _23.0;
_12.fld4.1 = !_19.4.1;
_4 = [_19.2.0,_12.fld1.0,_6.fld4,_6.fld4];
SetDiscriminant(_6.fld1, 1);
_19.1 = ('\u{ef4e6}', (-89_i8), _19.4.1);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0)) = _12.fld3;
_6.fld4 = _19.4.1 as i32;
_12.fld4.1 = _19.1.2 ^ _19.1.2;
_8 = _12.fld1.1;
_19.1.2 = _19.4.1 ^ _12.fld4.1;
_9 = _12.fld1.1 + _8;
_5 = [_19.2.0,_12.fld1.0];
_23.2 = _11 << _12.fld4.1;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0)).0 = [_12.fld1.0,_6.fld4];
_22 = _18;
_19.1.2 = _6.fld2 as u8;
_12.fld1 = _19.2;
match _19.1.1 {
0 => bb18,
340282366920938463463374607431768211367 => bb20,
_ => bb19
}
}
bb18 = {
Return()
}
bb19 = {
_6.fld4 = (-1893158005_i32);
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = -(-957337040_i32);
_5 = [_6.fld4,_6.fld4];
_2 = [16083827050945964471_u64,2783870893978274788_u64];
_6.fld2 = -1278121237377952344_i64;
_6.fld2 = 1687373592447701818_i64;
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = 139773724682038053484550029264250588187_u128 as i32;
_4 = _1;
_6.fld2 = -3578870072942384609_i64;
_5 = [_6.fld4,_6.fld4];
_2 = [13991465794013286733_u64,7619859229110510161_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [13742733939333955552_u64,10376227935720006873_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_3 = _4;
_7 = _4;
_2 = [1342280074795868330_u64,4284201644503375179_u64];
_6.fld2 = true as i64;
_5 = [_6.fld4,_6.fld4];
Call(_3 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb20 = {
_19.3 = [1952438568233624871_usize,4_usize,16458774603121318048_usize,16144837622531461432_usize,7035040737048114157_usize,7_usize];
place!(Field::<usize>(Variant(_15, 0), 1)) = !13297357841602475605_usize;
_6.fld2 = !4335940306070850927_i64;
SetDiscriminant(_15, 2);
_19.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,_12.fld3.1];
_19.2 = (_12.fld1.0, _9);
place!(Field::<*const *const isize>(Variant(_15, 2), 0)) = core::ptr::addr_of!(_12.fld2);
_19.0 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1];
_30 = [_22,_18,_22,_18];
_23.1 = _19.2;
_12.fld6 = Adt58::Variant1 { fld0: Field::<*const *const isize>(Variant(_15, 2), 0) };
SetDiscriminant(_12.fld6, 0);
_12.fld4.1 = !_19.4.1;
match _19.1.1 {
0 => bb21,
340282366920938463463374607431768211367 => bb23,
_ => bb22
}
}
bb21 = {
_12.fld3.2 = _7;
_2 = [8346961879804933186_u64,18356930016834371803_u64];
_8 = (-56_isize) as f64;
_10 = (-68_isize);
_12.fld3.1 = _6.fld4 as i16;
_12.fld4.0 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_12.fld1.0 = _6.fld4 | _6.fld4;
_12.fld2 = core::ptr::addr_of!(_10);
_16 = [_12.fld3.1,_12.fld3.1,_12.fld3.1];
_12.fld5 = [(-97_i8),28_i8];
_12.fld3.2 = _12.fld4.0;
_8 = _9;
_18 = 12345289109210623955_u64;
_12.fld1 = (_6.fld4, _8);
_19.2.1 = _18 as f64;
_12.fld1.1 = _6.fld2 as f64;
_19.3 = [5685310055073166590_usize,4_usize,7_usize,6_usize,7_usize,1838070657140624808_usize];
_12.fld0 = [59255_u16,52248_u16,58704_u16];
match _10 {
0 => bb6,
1 => bb8,
2 => bb9,
3 => bb10,
340282366920938463463374607431768211388 => bb12,
_ => bb11
}
}
bb22 = {
_6.fld4 = (-1893158005_i32);
_3 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = -(-957337040_i32);
_5 = [_6.fld4,_6.fld4];
_2 = [16083827050945964471_u64,2783870893978274788_u64];
_6.fld2 = -1278121237377952344_i64;
_6.fld2 = 1687373592447701818_i64;
_1 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_6.fld4 = 139773724682038053484550029264250588187_u128 as i32;
_4 = _1;
_6.fld2 = -3578870072942384609_i64;
_5 = [_6.fld4,_6.fld4];
_2 = [13991465794013286733_u64,7619859229110510161_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_2 = [13742733939333955552_u64,10376227935720006873_u64];
_7 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_3 = _4;
_7 = _4;
_2 = [1342280074795868330_u64,4284201644503375179_u64];
_6.fld2 = true as i64;
_5 = [_6.fld4,_6.fld4];
Call(_3 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb23 = {
place!(Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0)).2 = _17 << _12.fld4.1;
_24 = [true,false,true,false,false];
_7 = _1;
_10 = (-9223372036854775808_isize);
_2 = [_22,_22];
_23.0 = [_6.fld2,_6.fld2,_6.fld2,_6.fld2];
_27 = _19.1.0;
_12.fld4.1 = _19.1.2 | _19.4.1;
_12.fld3.2 = [_23.1.0,_23.1.0,_6.fld4,_6.fld4];
_13 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1];
_14 = _9 as f32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0)).0 = -_14;
_19.3 = [3_usize,5_usize,10285606112260914175_usize,11389677047380406678_usize,6_usize,3_usize];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0)).2 = _17 * _17;
_10 = (-9223372036854775808_isize);
_1 = [_12.fld1.0,_12.fld1.0,_12.fld1.0,_19.2.0];
_18 = _22 + _22;
_7 = [_6.fld4,_23.1.0,_23.1.0,_6.fld4];
_7 = [_23.1.0,_6.fld4,_6.fld4,_6.fld4];
SetDiscriminant(_15, 2);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0)).0 = _12.fld3.0;
_19.4.0 = [_23.1.0,_19.2.0,_12.fld1.0,_19.2.0];
_25 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1 as f32;
_19.2.1 = -_12.fld1.1;
_12.fld3.1 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1;
_6.fld4 = -_12.fld1.0;
_35 = false;
Goto(bb24)
}
bb24 = {
place!(Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0)).1 = [_23.2,_23.2,_23.2,_23.2,_23.2,_23.2,_23.2];
_14 = Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0).0 - Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0).0;
RET = Adt54::Variant0 { fld0: _12.fld1 };
_11 = _10 as u32;
place!(Field::<u64>(Variant(_6.fld1, 1), 2)) = _22 >> _22;
_13 = [_12.fld3.1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,_12.fld3.1];
_6.fld4 = Field::<(i32, f64)>(Variant(RET, 0), 0).0;
_26 = Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0).2 as usize;
_16 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_6.fld1, 1), 0).1];
_19.1 = (_27, (-41_i8), _12.fld4.1);
RET = Adt54::Variant0 { fld0: _19.2 };
place!(Field::<(f32, [u32; 7], i128)>(Variant(_12.fld6, 0), 0)).0 = _14;
_19.3 = [_26,_26,_26,_26,_26,_26];
_19.4.1 = _12.fld4.1 & _12.fld4.1;
_19.1.2 = _19.4.1 << _19.4.1;
_33 = [_35,_35,_35,_35,_35];
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)) = _12.fld1;
_28 = 10431_u16;
_8 = -_23.1.1;
_31 = _18 - Field::<u64>(Variant(_6.fld1, 1), 2);
_19.1.2 = _19.4.1;
_39 = _24;
_1 = [_6.fld4,_12.fld1.0,_23.1.0,_19.2.0];
SetDiscriminant(RET, 0);
Goto(bb25)
}
bb25 = {
place!(Field::<u128>(Variant(_6.fld1, 1), 1)) = 493173600421965766934199135408002051_u128;
_23.1 = (_6.fld4, _8);
_41 = _26 as f32;
match _19.1.1 {
0 => bb13,
340282366920938463463374607431768211415 => bb27,
_ => bb26
}
}
bb26 = {
_17 = 139676019114618446414288236862271065032_i128;
_5 = [_12.fld1.0,_6.fld4];
_6.fld1 = Adt53::Variant1 { fld0: _12.fld3,fld1: 204270536775205527903042176160127435559_u128,fld2: _18 };
_12.fld0 = [64223_u16,19749_u16,58953_u16];
_19.2.1 = -_12.fld1.1;
_6.fld4 = -_12.fld1.0;
_19.4.1 = 232_u8 * 48_u8;
place!(Field::<u128>(Variant(_6.fld1, 1), 1)) = '\u{b8d03}' as u128;
match _6.fld2 {
0 => bb1,
1 => bb11,
2 => bb3,
340282366920938463456526463890380889562 => bb13,
_ => bb4
}
}
bb27 = {
_33 = [_35,_35,_35,_35,_35];
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)).1 = _10 as f64;
_46.1 = (_19.2.0, _23.1.1);
_12.fld2 = core::ptr::addr_of!(_10);
RET = Adt54::Variant1 { fld0: _19.1,fld1: _12.fld0 };
_12.fld1.1 = _9 * _8;
_9 = _23.1.1;
Goto(bb28)
}
bb28 = {
Call(_49 = dump_var(14_usize, 3_usize, Move(_3), 17_usize, Move(_17), 11_usize, Move(_11), 24_usize, Move(_24)), bb29, UnwindUnreachable())
}
bb29 = {
Call(_49 = dump_var(14_usize, 35_usize, Move(_35), 5_usize, Move(_5), 1_usize, Move(_1), 31_usize, Move(_31)), bb30, UnwindUnreachable())
}
bb30 = {
Call(_49 = dump_var(14_usize, 10_usize, Move(_10), 22_usize, Move(_22), 39_usize, Move(_39), 50_usize, _50), bb31, UnwindUnreachable())
}
bb31 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: u16,mut _2: isize,mut _3: f32,mut _4: isize,mut _5: (i32, f64),mut _6: char,mut _7: Adt63,mut _8: f32,mut _9: Adt54,mut _10: Adt54,mut _11: f64,mut _12: i32,mut _13: char) -> Adt58 {
mir! {
type RET = Adt58;
let _14: isize;
let _15: Adt59;
let _16: isize;
let _17: u32;
let _18: bool;
let _19: [usize; 6];
let _20: u32;
let _21: Adt59;
let _22: bool;
let _23: f32;
let _24: char;
let _25: *const bool;
let _26: isize;
let _27: *mut bool;
let _28: usize;
let _29: u128;
let _30: Adt54;
let _31: char;
let _32: isize;
let _33: Adt58;
let _34: u8;
let _35: Adt54;
let _36: isize;
let _37: *mut [usize; 6];
let _38: f32;
let _39: [i64; 4];
let _40: bool;
let _41: [i64; 4];
let _42: Adt49;
let _43: Adt61;
let _44: char;
let _45: i16;
let _46: bool;
let _47: Adt62;
let _48: [i64; 7];
let _49: i8;
let _50: isize;
let _51: [u64; 4];
let _52: [u64; 2];
let _53: i8;
let _54: [u64; 4];
let _55: [i64; 7];
let _56: i8;
let _57: ([i32; 4], u8);
let _58: [i64; 7];
let _59: char;
let _60: [i8; 2];
let _61: i128;
let _62: isize;
let _63: char;
let _64: f32;
let _65: i64;
let _66: isize;
let _67: (i32, f64);
let _68: Adt54;
let _69: ([i32; 2], i16, [i32; 4]);
let _70: f64;
let _71: [i16; 3];
let _72: u8;
let _73: Adt50;
let _74: isize;
let _75: u64;
let _76: *mut bool;
let _77: f64;
let _78: usize;
let _79: Adt57;
let _80: Adt53;
let _81: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _82: [i32; 4];
let _83: isize;
let _84: [i64; 7];
let _85: isize;
let _86: [isize; 1];
let _87: [i8; 2];
let _88: char;
let _89: Adt48;
let _90: bool;
let _91: isize;
let _92: (f32, [u32; 7], i128);
let _93: i32;
let _94: Adt55;
let _95: i16;
let _96: [u64; 2];
let _97: [bool; 6];
let _98: f32;
let _99: i64;
let _100: [i64; 7];
let _101: (f32, [u32; 7], i128);
let _102: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _103: f32;
let _104: Adt64;
let _105: bool;
let _106: u8;
let _107: u32;
let _108: char;
let _109: [i16; 3];
let _110: u16;
let _111: Adt48;
let _112: Adt51;
let _113: (i32, f64);
let _114: [u32; 7];
let _115: Adt61;
let _116: bool;
let _117: ([i64; 4], (i32, f64), u32);
let _118: Adt50;
let _119: ([i64; 4], (i32, f64), u32);
let _120: i32;
let _121: isize;
let _122: [bool; 6];
let _123: (f32, [u32; 7], i128);
let _124: (char, i8, u8);
let _125: u16;
let _126: u16;
let _127: [u16; 3];
let _128: u8;
let _129: [i16; 4];
let _130: i32;
let _131: Adt50;
let _132: bool;
let _133: i128;
let _134: char;
let _135: bool;
let _136: usize;
let _137: f64;
let _138: *const *const isize;
let _139: char;
let _140: *const u16;
let _141: Adt54;
let _142: i16;
let _143: i32;
let _144: isize;
let _145: Adt61;
let _146: Adt62;
let _147: Adt50;
let _148: f64;
let _149: [u32; 7];
let _150: isize;
let _151: f64;
let _152: [bool; 5];
let _153: isize;
let _154: [i64; 4];
let _155: [u64; 4];
let _156: f32;
let _157: isize;
let _158: u16;
let _159: bool;
let _160: Adt50;
let _161: [i16; 3];
let _162: (char, i8, u8);
let _163: Adt62;
let _164: u64;
let _165: Adt61;
let _166: i64;
let _167: isize;
let _168: (char, i8, u8);
let _169: u128;
let _170: u128;
let _171: i32;
let _172: *mut [usize; 6];
let _173: isize;
let _174: u128;
let _175: *mut bool;
let _176: Adt59;
let _177: u8;
let _178: u8;
let _179: *const bool;
let _180: isize;
let _181: Adt59;
let _182: Adt52;
let _183: [i32; 2];
let _184: Adt62;
let _185: *mut bool;
let _186: Adt58;
let _187: isize;
let _188: i8;
let _189: [i32; 2];
let _190: [i64; 4];
let _191: *mut bool;
let _192: i32;
let _193: u32;
let _194: Adt59;
let _195: Adt50;
let _196: i16;
let _197: (char, i8, u8);
let _198: i64;
let _199: u128;
let _200: *const u16;
let _201: Adt58;
let _202: i8;
let _203: f32;
let _204: bool;
let _205: (f32, [u32; 7], i128);
let _206: [u32; 7];
let _207: Adt63;
let _208: i32;
let _209: bool;
let _210: bool;
let _211: f64;
let _212: f32;
let _213: (char, i8, u8);
let _214: f32;
let _215: bool;
let _216: [isize; 1];
let _217: *const isize;
let _218: (char, i8, u8);
let _219: f32;
let _220: (f32, [u32; 7], i128);
let _221: u128;
let _222: [i8; 2];
let _223: u128;
let _224: isize;
let _225: [i32; 2];
let _226: char;
let _227: [i64; 7];
let _228: Adt61;
let _229: Adt50;
let _230: bool;
let _231: f64;
let _232: (i32, f64);
let _233: f64;
let _234: Adt51;
let _235: Adt51;
let _236: Adt60;
let _237: f64;
let _238: [i64; 7];
let _239: *const bool;
let _240: i16;
let _241: i32;
let _242: u32;
let _243: Adt62;
let _244: [i16; 3];
let _245: i8;
let _246: i32;
let _247: isize;
let _248: isize;
let _249: bool;
let _250: isize;
let _251: isize;
let _252: f32;
let _253: [i8; 2];
let _254: isize;
let _255: f32;
let _256: [i16; 3];
let _257: isize;
let _258: Adt57;
let _259: isize;
let _260: isize;
let _261: Adt64;
let _262: f32;
let _263: (i32, f64);
let _264: (f32, [u32; 7], i128);
let _265: (f32, [u32; 7], i128);
let _266: Adt55;
let _267: isize;
let _268: bool;
let _269: [i16; 3];
let _270: isize;
let _271: bool;
let _272: [i64; 4];
let _273: isize;
let _274: [u16; 3];
let _275: bool;
let _276: f64;
let _277: f64;
let _278: u32;
let _279: [isize; 1];
let _280: u16;
let _281: [isize; 1];
let _282: Adt52;
let _283: [i64; 4];
let _284: i8;
let _285: *const isize;
let _286: isize;
let _287: f32;
let _288: f64;
let _289: u8;
let _290: bool;
let _291: Adt63;
let _292: [i32; 4];
let _293: isize;
let _294: Adt54;
let _295: [u64; 4];
let _296: [isize; 1];
let _297: bool;
let _298: *mut [usize; 6];
let _299: u64;
let _300: f32;
let _301: isize;
let _302: Adt64;
let _303: [i32; 2];
let _304: char;
let _305: char;
let _306: i128;
let _307: (i32, f64);
let _308: f32;
let _309: f32;
let _310: [u16; 3];
let _311: Adt64;
let _312: bool;
let _313: [u64; 4];
let _314: *const isize;
let _315: isize;
let _316: f64;
let _317: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _318: f32;
let _319: u32;
let _320: bool;
let _321: ([i32; 4], u8);
let _322: *const bool;
let _323: i32;
let _324: char;
let _325: *mut [i8; 2];
let _326: u32;
let _327: i32;
let _328: (i32, f64);
let _329: f32;
let _330: char;
let _331: isize;
let _332: Adt55;
let _333: [usize; 6];
let _334: Adt58;
let _335: isize;
let _336: isize;
let _337: bool;
let _338: isize;
let _339: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _340: [isize; 1];
let _341: [bool; 6];
let _342: [i16; 3];
let _343: [u16; 3];
let _344: *mut [i8; 2];
let _345: [u64; 4];
let _346: Adt55;
let _347: f32;
let _348: [i16; 3];
let _349: Adt48;
let _350: [usize; 6];
let _351: f32;
let _352: Adt49;
let _353: Adt54;
let _354: f32;
let _355: [i32; 4];
let _356: Adt50;
let _357: [i64; 7];
let _358: Adt58;
let _359: char;
let _360: *mut [usize; 6];
let _361: ([i32; 4], u8);
let _362: (([i32; 4], u8), char, [i16; 4], [i8; 2]);
let _363: isize;
let _364: Adt48;
let _365: Adt52;
let _366: [u16; 3];
let _367: [i8; 2];
let _368: Adt57;
let _369: [i16; 2];
let _370: f64;
let _371: isize;
let _372: *const *const isize;
let _373: f32;
let _374: Adt64;
let _375: isize;
let _376: isize;
let _377: bool;
let _378: [i32; 4];
let _379: Adt50;
let _380: isize;
let _381: [u64; 4];
let _382: u32;
let _383: i16;
let _384: char;
let _385: (f32, [u32; 7], i128);
let _386: i16;
let _387: f32;
let _388: ();
let _389: ();
{
place!(Field::<u16>(Variant(_7, 3), 1)) = _1;
_5 = Field::<(i32, f64)>(Variant(_9, 0), 0);
_2 = _4 + _4;
_5.0 = Field::<(i32, f64)>(Variant(_7, 3), 0).0;
SetDiscriminant(_10, 0);
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = Field::<(i32, f64)>(Variant(_7, 3), 0).0;
place!(Field::<(i32, f64)>(Variant(_7, 3), 0)).0 = Field::<(i32, f64)>(Variant(_9, 0), 0).0;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (Field::<(i32, f64)>(Variant(_10, 0), 0).0, Field::<(i32, f64)>(Variant(_7, 3), 0).1);
Call(place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = core::intrinsics::fmaf64(Field::<(i32, f64)>(Variant(_9, 0), 0).1, Field::<(i32, f64)>(Variant(_7, 3), 0).1, _11), bb1, UnwindUnreachable())
}
bb1 = {
_5.0 = (-2742901214317043398_i64) as i32;
SetDiscriminant(_7, 0);
_11 = -Field::<(i32, f64)>(Variant(_9, 0), 0).1;
_15.fld2 = _1 % _1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = _5;
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_2];
Call(_5.1 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb2 = {
_5.0 = Field::<(i32, f64)>(Variant(_10, 0), 0).0;
_14 = -_2;
_19 = [1_usize,6_usize,6_usize,10189795463560748230_usize,3_usize,15590102060707328483_usize];
_15.fld3 = (-13_i8) * (-43_i8);
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = _8 as f64;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.1 = _5.1;
_15.fld1 = !_5.0;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.0 = _4 as i32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).0 = -_8;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = 50498948227149015794732661337345703898_u128 as i32;
_15.fld1 = -Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0;
match _1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
37462 => bb8,
_ => bb7
}
}
bb3 = {
_5.0 = (-2742901214317043398_i64) as i32;
SetDiscriminant(_7, 0);
_11 = -Field::<(i32, f64)>(Variant(_9, 0), 0).1;
_15.fld2 = _1 % _1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = _5;
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_2];
Call(_5.1 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_16 = 113_u8 as isize;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = -_5.1;
_1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0 as u16;
_15.fld2 = _1 & _1;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).0 = 7959516098150819133_u64 as f32;
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_2];
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = _15.fld1 + _5.0;
_15.fld0 = Adt48::Variant1 { fld0: true };
_14 = !_2;
_21.fld1 = !Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0;
_12 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0 - Field::<(i32, f64)>(Variant(_9, 0), 0).0;
_16 = _14;
_23 = _8 - _8;
_12 = Field::<(i32, f64)>(Variant(_9, 0), 0).0 * Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0;
_21.fld2 = _1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1 = (_12, Field::<(i32, f64)>(Variant(_10, 0), 0).1);
place!(Field::<Adt54>(Variant(_7, 0), 2)) = Adt54::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1 };
_5 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.1 = -Field::<(i32, f64)>(Variant(_10, 0), 0).1;
_24 = _6;
_8 = -Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).0;
place!(Field::<bool>(Variant(_15.fld0, 1), 0)) = true;
_25 = core::ptr::addr_of!(place!(Field::<bool>(Variant(_15.fld0, 1), 0)));
Goto(bb9)
}
bb9 = {
_21.fld1 = _23 as i32;
place!(Field::<(i32, f64)>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 0), 0)).1 = Field::<(i32, f64)>(Variant(_10, 0), 0).1 * Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.1;
_2 = _14 << _16;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).1 = [867790820_u32,2912401402_u32,58907492_u32,3119930568_u32,1031776861_u32,2709582755_u32,1286142607_u32];
_15.fld2 = _1;
_21.fld0 = Move(_15.fld0);
_15.fld1 = _23 as i32;
_24 = _6;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (Field::<(i32, f64)>(Variant(Field::<Adt54>(Variant(_7, 0), 2), 0), 0).0, _5.1);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).1 = [3733341815_u32,3404723952_u32,479535707_u32,3788506846_u32,4069831585_u32,4055460242_u32,3586435829_u32];
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_2];
_25 = core::ptr::addr_of!(_18);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.0 = 333896895438380693322169908403051575747_u128 as i32;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1 = (_12, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
_4 = 1_usize as isize;
_28 = !6_usize;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).0 = [1468185553300718681_i64,(-6643413990272152407_i64),45575481601801577_i64,2441118522210696871_i64];
_7 = Adt63::Variant3 { fld0: _5,fld1: _21.fld2 };
Goto(bb10)
}
bb10 = {
_5 = (_12, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
_21.fld2 = _1 - _1;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (Field::<(i32, f64)>(Variant(_7, 3), 0).0, _5.1);
_21.fld3 = !_15.fld3;
_15.fld2 = Field::<u16>(Variant(_7, 3), 1) * _21.fld2;
_21.fld1 = !Field::<(i32, f64)>(Variant(_7, 3), 0).0;
_15.fld0 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_21.fld0, 1), 0) };
_21.fld1 = Field::<(i32, f64)>(Variant(_7, 3), 0).0;
_21.fld0 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_15.fld0, 1), 0) };
_12 = -_21.fld1;
_29 = !227618297084030940727506769147740821565_u128;
_4 = 42149665088050847400697268225171776752_i128 as isize;
_1 = _21.fld2;
Goto(bb11)
}
bb11 = {
_16 = _2 + _4;
_4 = _2;
Goto(bb12)
}
bb12 = {
place!(Field::<(i32, f64)>(Variant(_7, 3), 0)).1 = _29 as f64;
_21.fld0 = Move(_15.fld0);
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = Field::<(i32, f64)>(Variant(_7, 3), 0).0;
_12 = _21.fld1 - _21.fld1;
_3 = _23;
_15 = Adt59 { fld0: Move(_21.fld0),fld1: Field::<(i32, f64)>(Variant(_9, 0), 0).0,fld2: _1,fld3: _21.fld3 };
_11 = _12 as f64;
(*_25) = !Field::<bool>(Variant(_15.fld0, 1), 0);
SetDiscriminant(_7, 0);
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = -_11;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).1 = [2496833646_u32,527230326_u32,56328529_u32,3716319062_u32,3805540732_u32,2229472584_u32,315939958_u32];
_32 = _2;
place!(Field::<Adt54>(Variant(_7, 0), 2)) = Adt54::Variant0 { fld0: _5 };
_18 = _4 <= _4;
_16 = -_2;
_16 = !_32;
Call(_18 = fn16(Field::<(i32, f64)>(Variant(_9, 0), 0), _12, _12, Field::<(i32, f64)>(Variant(Field::<Adt54>(Variant(_7, 0), 2), 0), 0), _16, _10, Field::<(i32, f64)>(Variant(_9, 0), 0), _5, _32, _25, _16, _5.1), bb13, UnwindUnreachable())
}
bb13 = {
_20 = (*_25) as u32;
_28 = !6160814467614112839_usize;
_25 = core::ptr::addr_of!(place!(Field::<bool>(Variant(_15.fld0, 1), 0)));
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_14];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.0 = _13 as i32;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).2 = _20;
SetDiscriminant(_9, 0);
_30 = _10;
_11 = _5.1 + Field::<(i32, f64)>(Variant(_30, 0), 0).1;
_9 = _30;
(*_25) = !_18;
_26 = _16 & _16;
_21 = Adt59 { fld0: Move(_15.fld0),fld1: _12,fld2: _1,fld3: _15.fld3 };
_34 = 26_u8 ^ 239_u8;
_16 = _5.1 as isize;
_15 = Adt59 { fld0: Move(_21.fld0),fld1: _21.fld1,fld2: _1,fld3: _21.fld3 };
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).2 = !51653855407115224909130095719477269685_i128;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = _12;
SetDiscriminant(_15.fld0, 2);
_16 = _4;
_17 = !Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).2 = _5.0 as i128;
_31 = _24;
_20 = _17;
_21.fld3 = _18 as i8;
Goto(bb14)
}
bb14 = {
place!(Field::<(i32, f64)>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 0), 0)).0 = -_12;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).2 = _17;
_26 = _4 - _14;
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_4];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1 = (Field::<(i32, f64)>(Variant(_10, 0), 0).0, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
place!(Field::<*const u16>(Variant(_15.fld0, 2), 0)) = core::ptr::addr_of!(_1);
Goto(bb15)
}
bb15 = {
_21.fld2 = (-8452122961515747231_i64) as u16;
_1 = _15.fld2 * _15.fld2;
_35 = Adt54::Variant0 { fld0: Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1 };
_34 = 81_u8;
_21.fld0 = Adt48::Variant2 { fld0: Field::<*const u16>(Variant(_15.fld0, 2), 0),fld1: Field::<[isize; 1]>(Variant(_7, 0), 5) };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.0 = _15.fld2 as i32;
_21.fld2 = (-3730_i16) as u16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.1 = Field::<(i32, f64)>(Variant(_35, 0), 0).1;
_19 = [_28,_28,_28,_28,_28,_28];
_22 = _18;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).1 = -Field::<(i32, f64)>(Variant(_10, 0), 0).1;
_15.fld1 = Field::<(i32, f64)>(Variant(_35, 0), 0).0;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).0 = [(-8574432698279963044_i64),5946863367825296046_i64,3313565710787385725_i64,(-7558645797461911730_i64)];
_29 = 155715944092368240292895043199197066143_u128;
_37 = core::ptr::addr_of_mut!(_19);
_38 = _3 - _3;
match _34 {
0 => bb11,
1 => bb14,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
81 => bb16,
_ => bb9
}
}
bb16 = {
_26 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).2 as isize;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = -_21.fld1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = !_12;
_38 = _23;
Call(place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).2 = core::intrinsics::transmute(_29), bb17, UnwindUnreachable())
}
bb17 = {
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).0 = _8 + _38;
_36 = _29 as isize;
_27 = core::ptr::addr_of_mut!(_22);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).2 = _21.fld3 as i128;
_12 = _23 as i32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).1 = [_20,_17,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,_17,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2];
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.1 + _11;
_10 = Field::<Adt54>(Variant(_7, 0), 2);
_15.fld0 = Move(_21.fld0);
SetDiscriminant(Field::<Adt54>(Variant(_7, 0), 2), 0);
_24 = _13;
(*_37) = [_28,_28,_28,_28,_28,_28];
_23 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).0 - Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).0;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).0 = _28 as i32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).0 = _3 + _38;
place!(Field::<Adt54>(Variant(_7, 0), 2)) = _10;
_35 = Adt54::Variant0 { fld0: _5 };
_21.fld2 = _15.fld2 >> Field::<(i32, f64)>(Variant(_9, 0), 0).0;
(*_27) = _18;
Goto(bb18)
}
bb18 = {
_37 = core::ptr::addr_of_mut!((*_37));
SetDiscriminant(_15.fld0, 2);
place!(Field::<[isize; 1]>(Variant(_15.fld0, 2), 1)) = [_16];
_4 = -_16;
(*_37) = [_28,_28,_28,_28,_28,_28];
SetDiscriminant(_9, 0);
_11 = Field::<(i32, f64)>(Variant(_10, 0), 0).1;
_42.fld4.1.1 = _20 as i8;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = Field::<(i32, f64)>(Variant(Field::<Adt54>(Variant(_7, 0), 2), 0), 0).1 - Field::<(i32, f64)>(Variant(_35, 0), 0).1;
_42.fld5 = [(*_27),_22,(*_27),(*_27),_18];
_22 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2 != _20;
_42.fld4.0 = [(-16377_i16),(-206_i16),(-16517_i16),5853_i16];
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = _28 as f64;
_18 = !(*_27);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).1 = [Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,_20,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,_20,_17,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).2];
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1 = Field::<(i32, f64)>(Variant(_35, 0), 0);
_34 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.0 as u8;
_5 = Field::<(i32, f64)>(Variant(Field::<Adt54>(Variant(_7, 0), 2), 0), 0);
_35 = _10;
Call(place!(Field::<Adt54>(Variant(_7, 0), 2)) = fn17(_17, _42.fld5, _17, (*_27), _17, (*_27), _4, _22, _35), bb19, UnwindUnreachable())
}
bb19 = {
_38 = 6860_i16 as f32;
_42.fld4.1 = (_13, _21.fld3, _34);
_42.fld6 = _42.fld4.1.2 ^ _34;
_42.fld4.2.0 = !_21.fld1;
(*_37) = [_28,_28,_28,_28,_28,_28];
_42.fld5 = [_22,(*_27),_18,_18,_18];
_38 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).0;
_42.fld4.4.1 = 3266801836437253641_u64 as u8;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).1 = 20752_i16 as f64;
place!(Field::<(i32, f64)>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 0), 0)).0 = 26055_i16 as i32;
_44 = _6;
match _29 {
0 => bb4,
1 => bb20,
155715944092368240292895043199197066143 => bb22,
_ => bb21
}
}
bb20 = {
_5.0 = (-2742901214317043398_i64) as i32;
SetDiscriminant(_7, 0);
_11 = -Field::<(i32, f64)>(Variant(_9, 0), 0).1;
_15.fld2 = _1 % _1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = _5;
place!(Field::<[isize; 1]>(Variant(_7, 0), 5)) = [_2];
Call(_5.1 = core::intrinsics::transmute(_2), bb2, UnwindUnreachable())
}
bb21 = {
_26 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).2 as isize;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = -_21.fld1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = !_12;
_38 = _23;
Call(place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1)).2 = core::intrinsics::transmute(_29), bb17, UnwindUnreachable())
}
bb22 = {
_19 = [_28,_28,_28,_28,_28,_28];
_35 = Field::<Adt54>(Variant(_7, 0), 2);
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = _11;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = _42.fld6 as f64;
_19 = [_28,_28,_28,_28,_28,_28];
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = _34 as i32;
SetDiscriminant(_10, 1);
_41 = [4521106385145157_i64,(-107798352496622244_i64),4569428927215034779_i64,1372924326018393785_i64];
_31 = _13;
_29 = !231837715044982487325020589635874261537_u128;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).0 = !_15.fld1;
_14 = _42.fld6 as isize;
SetDiscriminant(Field::<Adt54>(Variant(_7, 0), 2), 1);
(*_37) = [_28,_28,_28,_28,_28,_28];
_42.fld3 = core::ptr::addr_of!(_1);
_21.fld2 = _21.fld3 as u16;
_44 = _31;
Goto(bb23)
}
bb23 = {
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (_15.fld1, Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.1);
Goto(bb24)
}
bb24 = {
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.0 = (-9966_i16) as i32;
SetDiscriminant(_9, 0);
place!(Field::<*const u16>(Variant(_15.fld0, 2), 0)) = core::ptr::addr_of!(_1);
place!(Field::<[u16; 3]>(Variant(_10, 1), 1)) = [_21.fld2,_1,_1];
_42.fld0 = [291531743365307789_u64,5632952496401155361_u64];
_5.0 = _20 as i32;
_43.fld2 = -3288491136724065885_i64;
Goto(bb25)
}
bb25 = {
_1 = _21.fld2 | _21.fld2;
_15.fld2 = !_1;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = -Field::<(i32, f64)>(Variant(_35, 0), 0).0;
_42.fld4.4.0 = [_21.fld1,_5.0,_5.0,Field::<(i32, f64)>(Variant(_9, 0), 0).0];
_42.fld4.1.0 = _24;
_43.fld2 = !(-6060699396468325015_i64);
_28 = Field::<(i32, f64)>(Variant(_9, 0), 0).0 as usize;
_42.fld1 = _28;
_8 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 0), 1).0 + _3;
_42.fld4.3 = [_42.fld1,_42.fld1,_42.fld1,_28,_28,_28];
_50 = _32;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 1), 0)).2 = _43.fld2 as u8;
_21.fld3 = _24 as i8;
_15.fld3 = _42.fld4.1.1 + _42.fld4.1.1;
_31 = _42.fld4.1.0;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = _34 as f64;
_42.fld4.2 = (Field::<(i32, f64)>(Variant(_35, 0), 0).0, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
_37 = core::ptr::addr_of_mut!((*_37));
_47 = Adt62 { fld0: _42.fld0 };
_9 = Adt54::Variant1 { fld0: _42.fld4.1,fld1: Field::<[u16; 3]>(Variant(_10, 1), 1) };
_19 = _42.fld4.3;
Goto(bb26)
}
bb26 = {
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).0 = _44;
place!(Field::<(char, i8, u8)>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 1), 0)).0 = _24;
_58 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_43.fld4 = _15.fld1 + _21.fld1;
_59 = _42.fld4.1.0;
SetDiscriminant(_9, 1);
_43.fld2 = _15.fld1 as i64;
(*_37) = _42.fld4.3;
place!(Field::<[u16; 3]>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 1), 1)) = [_15.fld2,_1,_1];
_21.fld1 = Field::<(i32, f64)>(Variant(_35, 0), 0).0 + _43.fld4;
_42.fld0 = [11783303227631779122_u64,5983718912589618643_u64];
_23 = -_38;
_39 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).0;
_36 = 25441_i16 as isize;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = (_43.fld4, _42.fld4.2.1);
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).2 = !_20;
place!(Field::<[u16; 3]>(Variant(place!(Field::<Adt54>(Variant(_7, 0), 2)), 1), 1)) = Field::<[u16; 3]>(Variant(_10, 1), 1);
Call(_56 = core::intrinsics::bswap(_15.fld3), bb27, UnwindUnreachable())
}
bb27 = {
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).2 = _42.fld6;
_9 = Adt54::Variant1 { fld0: _42.fld4.1,fld1: Field::<[u16; 3]>(Variant(_10, 1), 1) };
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6)).1.1 = -Field::<(i32, f64)>(Variant(_35, 0), 0).1;
_27 = core::ptr::addr_of_mut!((*_27));
Goto(bb28)
}
bb28 = {
_25 = core::ptr::addr_of!((*_27));
_15.fld1 = -_21.fld1;
_27 = core::ptr::addr_of_mut!(_18);
_32 = _4;
_42.fld4.2.1 = -Field::<(i32, f64)>(Variant(_35, 0), 0).1;
(*_37) = _42.fld4.3;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).1 = (*_27) as i8;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)) = (_44, Field::<(char, i8, u8)>(Variant(_9, 1), 0).1, _42.fld6);
Call(_31 = fn18(Field::<[u16; 3]>(Variant(_10, 1), 1), Field::<([i64; 4], (i32, f64), u32)>(Variant(_7, 0), 6).1.1, (*_27), _9, _42.fld3, _22, _20, _21.fld1, _35, _10, _5.0, _15.fld1), bb29, UnwindUnreachable())
}
bb29 = {
_8 = -_38;
_5.0 = _17 as i32;
_28 = (-10203_i16) as usize;
_49 = _15.fld3 - Field::<(char, i8, u8)>(Variant(_9, 1), 0).1;
_9 = _30;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).1 = _42.fld4.2.1;
place!(Field::<Adt54>(Variant(_7, 0), 2)) = Adt54::Variant0 { fld0: _5 };
_40 = !_18;
_42.fld1 = _28 ^ _28;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)) = (_44, _49, _42.fld6);
_48 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_7 = Adt63::Variant3 { fld0: _5,fld1: _21.fld2 };
_31 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).0;
_9 = _10;
place!(Field::<[isize; 1]>(Variant(_15.fld0, 2), 1)) = [_50];
_41 = _39;
Goto(bb30)
}
bb30 = {
_27 = core::ptr::addr_of_mut!(_40);
_47 = Adt62 { fld0: _42.fld0 };
_16 = !_32;
_40 = !_22;
_21 = Move(_15);
_42.fld4.1.1 = !Field::<(char, i8, u8)>(Variant(_10, 1), 0).1;
_38 = _3;
_52 = [16282765976646516930_u64,1995465767959737116_u64];
_67 = (Field::<(i32, f64)>(Variant(_35, 0), 0).0, Field::<(i32, f64)>(Variant(_35, 0), 0).1);
_24 = _6;
_15.fld1 = !_67.0;
_8 = -_38;
_20 = _17;
Goto(bb31)
}
bb31 = {
_54 = [631122345221817462_u64,17582338883433372014_u64,5172706999466896567_u64,7375633339443766279_u64];
_67 = Field::<(i32, f64)>(Variant(_35, 0), 0);
_22 = _42.fld4.2.1 >= Field::<(i32, f64)>(Variant(_35, 0), 0).1;
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).0 = _6;
_68 = _9;
place!(Field::<*const u16>(Variant(_21.fld0, 2), 0)) = core::ptr::addr_of!(_1);
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).0 = Field::<(char, i8, u8)>(Variant(_68, 1), 0).0;
SetDiscriminant(_10, 0);
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = (_5.0, _67.1);
_43.fld2 = -(-1998031480793884120_i64);
SetDiscriminant(_7, 2);
_57.0 = [_67.0,_15.fld1,_21.fld1,_5.0];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).0 = -_38;
place!(Field::<[i64; 4]>(Variant(_7, 2), 6)) = [_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_42.fld1 = _28 << _20;
SetDiscriminant(_21.fld0, 1);
_63 = _42.fld4.1.0;
_71 = [(-480_i16),(-11443_i16),17587_i16];
Goto(bb32)
}
bb32 = {
place!(Field::<[i64; 4]>(Variant(_7, 2), 6)) = [_43.fld2,_43.fld2,_43.fld2,_43.fld2];
place!(Field::<bool>(Variant(_21.fld0, 1), 0)) = _40;
_72 = !Field::<(char, i8, u8)>(Variant(_9, 1), 0).2;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).1 = [_17,_20,_17,_20,_17,_20,_20];
_8 = -_23;
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)).2 = !Field::<(char, i8, u8)>(Variant(_9, 1), 0).2;
_42.fld5 = [Field::<bool>(Variant(_21.fld0, 1), 0),_18,Field::<bool>(Variant(_21.fld0, 1), 0),Field::<bool>(Variant(_21.fld0, 1), 0),(*_27)];
_57.1 = _42.fld4.1.2;
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).2 = !_57.1;
_42.fld4.0 = [13554_i16,29368_i16,11790_i16,11727_i16];
_56 = _49;
_15.fld3 = _17 as i8;
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [_21.fld2,_21.fld2,_21.fld2];
_71 = [(-11898_i16),24664_i16,(-30914_i16)];
_75 = !4589378101345933906_u64;
_43.fld2 = (-113911665781366957928814042475939605700_i128) as i64;
_67 = (Field::<(i32, f64)>(Variant(_35, 0), 0).0, _42.fld4.2.1);
SetDiscriminant(_21.fld0, 1);
_42.fld1 = _28 - _28;
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)) = (_42.fld4.1.0, _42.fld4.1.1, _42.fld4.1.2);
Goto(bb33)
}
bb33 = {
_71 = [11178_i16,(-27943_i16),(-2099_i16)];
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_43.fld4, Field::<(i32, f64)>(Variant(_35, 0), 0).1);
(*_37) = [_42.fld1,_42.fld1,_42.fld1,_28,_28,_42.fld1];
_2 = _29 as isize;
_78 = _42.fld1;
place!(Field::<[isize; 1]>(Variant(_7, 2), 5)) = [_4];
_11 = Field::<(i32, f64)>(Variant(_10, 0), 0).1;
_2 = _29 as isize;
_31 = _59;
_42.fld4.0 = [(-1808_i16),21092_i16,16733_i16,16092_i16];
_15.fld0 = Adt48::Variant1 { fld0: _18 };
_46 = Field::<(i32, f64)>(Variant(_10, 0), 0).0 < _42.fld4.2.0;
_2 = -_14;
_69.2 = _42.fld4.4.0;
_29 = 332045334703433558187533460425242076090_u128 * 235974779214370444705500368644769194373_u128;
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)) = Field::<(char, i8, u8)>(Variant(_68, 1), 0);
_11 = _43.fld2 as f64;
_57.1 = _72 + Field::<(char, i8, u8)>(Variant(_68, 1), 0).2;
_38 = _23;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).0 = _23 - _38;
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)).0 = _42.fld4.1.0;
_17 = !_20;
_73 = Adt50::Variant1 { fld0: Field::<bool>(Variant(_15.fld0, 1), 0),fld1: Field::<(i32, f64)>(Variant(_35, 0), 0),fld2: _75,fld3: _56,fld4: _42.fld4,fld5: _71,fld6: _57,fld7: _78 };
Goto(bb34)
}
bb34 = {
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)).1 = _23 as i8;
SetDiscriminant(_68, 0);
_5.1 = -_67.1;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = (_67.0, _5.1);
_60 = [_49,_15.fld3];
_24 = _59;
_58 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_63 = _59;
SetDiscriminant(_73, 1);
_81.0 = _42.fld4.4;
_69.1 = (-5360_i16) * (-9681_i16);
_81.1 = _24;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).2.0 = _43.fld4 ^ _43.fld4;
_21.fld3 = -_56;
_9 = _10;
Goto(bb35)
}
bb35 = {
_57.0 = _42.fld4.4.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).0 = _42.fld4.0;
_42.fld6 = _57.1 ^ _72;
_44 = _81.1;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)) = (_5.0, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
_24 = _31;
_13 = _31;
place!(Field::<([i32; 4], u8)>(Variant(_73, 1), 6)) = (_81.0.0, _42.fld6);
_45 = _69.1 + _69.1;
SetDiscriminant(_15.fld0, 1);
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)) = _5;
_83 = !_16;
Call(_66 = core::intrinsics::bswap(_32), bb36, UnwindUnreachable())
}
bb36 = {
_84 = _48;
_27 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_21.fld0, 1), 0)));
_52 = [_75,_75];
_57 = (_42.fld4.4.0, _72);
_32 = _2;
_42.fld6 = Field::<([i32; 4], u8)>(Variant(_73, 1), 6).1 - Field::<([i32; 4], u8)>(Variant(_73, 1), 6).1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = Field::<(i32, f64)>(Variant(_68, 0), 0).1;
_34 = !_42.fld4.1.2;
Goto(bb37)
}
bb37 = {
SetDiscriminant(_9, 0);
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_43.fld4, _5.1);
Goto(bb38)
}
bb38 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1 = (_63, _56, _72);
(*_25) = !_46;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = Field::<(i32, f64)>(Variant(_73, 1), 1).1;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)).1 = -_42.fld4.2.1;
_41 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2];
place!(Field::<bool>(Variant(_15.fld0, 1), 0)) = (*_25) & _22;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).2 = (Field::<(i32, f64)>(Variant(_35, 0), 0).0, _42.fld4.2.1);
_21.fld1 = _42.fld4.2.0;
_83 = !_50;
_8 = _3 * Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).0;
Call(_87 = core::intrinsics::transmute(_21.fld2), bb39, UnwindUnreachable())
}
bb39 = {
place!(Field::<bool>(Variant(_73, 1), 0)) = _42.fld4.2.1 != Field::<(i32, f64)>(Variant(_73, 1), 1).1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).3 = [_78,_78,_42.fld1,_42.fld1,_42.fld1,_42.fld1];
_63 = _42.fld4.1.0;
SetDiscriminant(_10, 0);
_69.1 = -_45;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.1 - Field::<(i32, f64)>(Variant(_68, 0), 0).1;
_12 = Field::<(i32, f64)>(Variant(_68, 0), 0).0 >> Field::<([i32; 4], u8)>(Variant(_73, 1), 6).1;
_12 = _43.fld2 as i32;
_53 = -_21.fld3;
_81.3 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.1,_15.fld3];
_9 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_68, 0), 0) };
_30 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_73, 1), 1) };
_86 = [_4];
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant2 { fld0: _42.fld3,fld1: Field::<[isize; 1]>(Variant(_7, 2), 5) };
_55 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_54 = [_75,_75,_75,_75];
_17 = _20 >> Field::<(i32, f64)>(Variant(_30, 0), 0).0;
_29 = Field::<(i32, f64)>(Variant(_68, 0), 0).0 as u128;
_81.2 = [_69.1,_45,_69.1,_45];
place!(Field::<[i16; 3]>(Variant(_73, 1), 5)) = [_45,_69.1,_45];
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).0 = Field::<(i32, f64)>(Variant(_73, 1), 1).0;
_26 = _2 & _16;
_42.fld4.1.0 = _81.1;
Goto(bb40)
}
bb40 = {
SetDiscriminant(_68, 1);
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)).1 = _38 as i8;
_26 = _83 + _16;
_20 = _45 as u32;
SetDiscriminant(_15.fld0, 1);
_40 = !_46;
_46 = !_18;
place!(Field::<(char, i8, u8)>(Variant(_68, 1), 0)).0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.0;
_34 = !_72;
_15.fld2 = _83 as u16;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).0 = Field::<(i32, f64)>(Variant(_73, 1), 1).0;
_81.0 = (Field::<([i32; 4], u8)>(Variant(_73, 1), 6).0, _42.fld6);
_68 = Adt54::Variant0 { fld0: _67 };
_57.0 = _69.2;
place!(Field::<bool>(Variant(_7, 2), 0)) = _40;
_21.fld1 = !Field::<(i32, f64)>(Variant(_73, 1), 1).0;
_81 = (_42.fld4.4, _13, _42.fld4.0, _87);
Goto(bb41)
}
bb41 = {
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)) = (Field::<(i32, f64)>(Variant(_68, 0), 0).0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.1);
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.1 + Field::<(i32, f64)>(Variant(_30, 0), 0).1;
_68 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_73, 1), 1) };
_52 = [_75,_75];
_73 = Adt50::Variant1 { fld0: _40,fld1: _42.fld4.2,fld2: _75,fld3: _53,fld4: _42.fld4,fld5: _71,fld6: _57,fld7: _78 };
SetDiscriminant(_68, 0);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).1 = [_17,_17,_17,_17,_17,_17,_17];
SetDiscriminant(_73, 1);
_73 = Adt50::Variant1 { fld0: _46,fld1: Field::<(i32, f64)>(Variant(_9, 0), 0),fld2: _75,fld3: _49,fld4: _42.fld4,fld5: _71,fld6: _57,fld7: _78 };
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = (*_25) as i32;
_42.fld4.2 = (_12, Field::<(i32, f64)>(Variant(_35, 0), 0).1);
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant2 { fld0: _42.fld3,fld1: _86 };
_91 = !_2;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)) = (Field::<(i32, f64)>(Variant(_9, 0), 0).0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.1);
_5 = Field::<(i32, f64)>(Variant(_30, 0), 0);
_50 = _43.fld2 as isize;
_15.fld1 = !_67.0;
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = _42.fld4.3;
Goto(bb42)
}
bb42 = {
_70 = -Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = !Field::<(i32, f64)>(Variant(_9, 0), 0).0;
place!(Field::<([i32; 4], u8)>(Variant(_73, 1), 6)).1 = _42.fld6 * _42.fld6;
Goto(bb43)
}
bb43 = {
_15.fld0 = Adt48::Variant1 { fld0: _22 };
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1 = _42.fld4.1;
_84 = [_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2,_43.fld2];
_49 = _42.fld4.1.1 * _53;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4 = (_81.0.0, _42.fld6);
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)) = (Field::<(i32, f64)>(Variant(_10, 0), 0).0, Field::<(i32, f64)>(Variant(_10, 0), 0).1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)) = (_81.2, _42.fld4.1, Field::<(i32, f64)>(Variant(_10, 0), 0), (*_37), _57);
Goto(bb44)
}
bb44 = {
SetDiscriminant(Field::<Adt48>(Variant(_7, 2), 1), 1);
_96 = [Field::<u64>(Variant(_73, 1), 2),Field::<u64>(Variant(_73, 1), 2)];
_66 = _2;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1.2 = _42.fld6 ^ _34;
Goto(bb45)
}
bb45 = {
_5 = (_15.fld1, Field::<(i32, f64)>(Variant(_68, 0), 0).1);
_21 = Move(_15);
_15.fld0 = Adt48::Variant0 { fld0: _42.fld4.4,fld1: _42.fld4.0,fld2: _29,fld3: _25,fld4: _17 };
_47 = Adt62 { fld0: _42.fld0 };
_48 = _84;
place!(Field::<bool>(Variant(_73, 1), 0)) = _22 | _18;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2;
_15.fld1 = Field::<u128>(Variant(_15.fld0, 0), 2) as i32;
_92.0 = _8 * _8;
_38 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).0;
_7 = Adt63::Variant3 { fld0: Field::<(i32, f64)>(Variant(_9, 0), 0),fld1: _21.fld2 };
_89 = Move(_15.fld0);
_42.fld4.0 = [_69.1,_45,_69.1,_45];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1.0 = _13;
_76 = _27;
_47.fld0 = [_75,Field::<u64>(Variant(_73, 1), 2)];
Goto(bb46)
}
bb46 = {
_93 = _69.1 as i32;
_15 = Move(_21);
_70 = Field::<(i32, f64)>(Variant(_35, 0), 0).1 - Field::<(i32, f64)>(Variant(_10, 0), 0).1;
_94.fld1 = 47822129250459937287685454279148005455_i128 & (-108249482856475030663900265563136370344_i128);
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).1 = Field::<u16>(Variant(_7, 3), 1) as f64;
_21.fld1 = Field::<(i32, f64)>(Variant(_30, 0), 0).0 * Field::<(i32, f64)>(Variant(_73, 1), 1).0;
_65 = _43.fld2 + _43.fld2;
_81.1 = _44;
_42.fld4.2.0 = Field::<(i32, f64)>(Variant(_10, 0), 0).0 ^ Field::<(i32, f64)>(Variant(_73, 1), 1).0;
_61 = _42.fld1 as i128;
Goto(bb47)
}
bb47 = {
_71 = [_45,_45,_69.1];
_59 = _24;
_9 = _35;
_42.fld3 = core::ptr::addr_of!(_21.fld2);
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)).0 = Field::<(i32, f64)>(Variant(_68, 0), 0).0 - _15.fld1;
_40 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.0 == Field::<(i32, f64)>(Variant(_7, 3), 0).0;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)) = (_5.0, _5.1);
_23 = _38;
_15.fld3 = -_56;
place!(Field::<([i32; 4], u8)>(Variant(_89, 0), 0)).1 = _72;
_91 = Field::<u32>(Variant(_89, 0), 4) as isize;
Call(_61 = core::intrinsics::transmute(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).4.0), bb48, UnwindUnreachable())
}
bb48 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)) = (_42.fld4.0, _42.fld4.1, Field::<(i32, f64)>(Variant(_7, 3), 0), _42.fld4.3, _81.0);
_19 = [_28,_28,Field::<usize>(Variant(_73, 1), 7),Field::<usize>(Variant(_73, 1), 7),_78,_42.fld1];
_74 = !_26;
_62 = _4 * _32;
SetDiscriminant(_7, 2);
place!(Field::<([i32; 4], u8)>(Variant(_73, 1), 6)) = (_57.0, _81.0.1);
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = _21.fld1;
_60 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.1,_42.fld4.1.1];
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = [_42.fld1,_78,_78,Field::<usize>(Variant(_73, 1), 7),Field::<usize>(Variant(_73, 1), 7),_42.fld1];
_31 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.0;
_83 = _74;
_46 = (*_25);
_59 = _63;
Goto(bb49)
}
bb49 = {
_102.3 = [_49,_42.fld4.1.1];
_69.0 = [Field::<(i32, f64)>(Variant(_73, 1), 1).0,Field::<(i32, f64)>(Variant(_73, 1), 1).0];
_77 = _49 as f64;
_21.fld0 = Adt48::Variant1 { fld0: Field::<bool>(Variant(_15.fld0, 1), 0) };
_102.0.0 = [Field::<(i32, f64)>(Variant(_35, 0), 0).0,Field::<(i32, f64)>(Variant(_35, 0), 0).0,_67.0,_21.fld1];
_115.fld4 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).2 = _61;
_111 = Adt48::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).4,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).0,fld2: Field::<u128>(Variant(_89, 0), 2),fld3: Field::<*const bool>(Variant(_89, 0), 3),fld4: Field::<u32>(Variant(_89, 0), 4) };
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = Field::<(i32, f64)>(Variant(_73, 1), 1).0;
Goto(bb50)
}
bb50 = {
_42.fld4.3 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3;
_74 = _91 & _91;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).0 = Field::<(i32, f64)>(Variant(_9, 0), 0).0 * _115.fld4;
_57.0 = [Field::<(i32, f64)>(Variant(_35, 0), 0).0,Field::<(i32, f64)>(Variant(_68, 0), 0).0,_115.fld4,Field::<(i32, f64)>(Variant(_9, 0), 0).0];
_92.1 = [Field::<u32>(Variant(_111, 0), 4),Field::<u32>(Variant(_89, 0), 4),Field::<u32>(Variant(_89, 0), 4),_17,_17,Field::<u32>(Variant(_89, 0), 4),Field::<u32>(Variant(_111, 0), 4)];
_103 = _8 - _23;
_77 = -Field::<(i32, f64)>(Variant(_10, 0), 0).1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4 = _42.fld4.4;
_51 = _54;
_38 = _29 as f32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)) = (_8, _92.1, _94.fld1);
place!(Field::<[i64; 4]>(Variant(_7, 2), 6)) = _39;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).1 = -_70;
SetDiscriminant(_111, 2);
_115.fld2 = -_65;
_24 = _44;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = _42.fld4.2.0 << _21.fld1;
_113.0 = Field::<(i32, f64)>(Variant(_73, 1), 1).0;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)).0 = _15.fld3 as i32;
_66 = _74;
_74 = -_66;
_94.fld2 = [_69.1,_69.1,_69.1,_69.1];
_91 = _62;
_35 = _10;
Goto(bb51)
}
bb51 = {
_75 = Field::<u64>(Variant(_73, 1), 2) >> _62;
place!(Field::<(i32, f64)>(Variant(_73, 1), 1)).1 = _70;
_117.1.0 = _16 as i32;
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4.1 = _72;
_84 = [_115.fld2,_43.fld2,_115.fld2,_43.fld2,_65,_115.fld2,_43.fld2];
_27 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_7, 2), 0)));
_106 = _57.1;
_120 = Field::<(i32, f64)>(Variant(_30, 0), 0).0;
_27 = _76;
_69.2 = Field::<([i32; 4], u8)>(Variant(_89, 0), 0).0;
_102.3 = [Field::<i8>(Variant(_73, 1), 3),_49];
_113.0 = Field::<(i32, f64)>(Variant(_9, 0), 0).0;
_94.fld2 = [_45,_45,_69.1,_45];
_67.1 = Field::<(i32, f64)>(Variant(_73, 1), 1).1;
_45 = _17 as i16;
_108 = _44;
_114 = [Field::<u32>(Variant(_89, 0), 4),Field::<u32>(Variant(_89, 0), 4),_17,_17,_17,Field::<u32>(Variant(_89, 0), 4),_17];
Goto(bb52)
}
bb52 = {
_77 = _5.1;
SetDiscriminant(_15.fld0, 0);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1 = (_42.fld4.1.0, _42.fld4.1.1, _42.fld6);
(*_25) = _83 > _66;
Goto(bb53)
}
bb53 = {
_119.1.1 = Field::<(i32, f64)>(Variant(_68, 0), 0).1 * _77;
_26 = _91 ^ _62;
_32 = _91 * _14;
_123.0 = -_103;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).0 = [_45,_45,_45,_69.1];
_43.fld2 = _115.fld2 - _115.fld2;
_115.fld1 = Adt53::Variant1 { fld0: _69,fld1: Field::<u128>(Variant(_89, 0), 2),fld2: _75 };
_117.2 = Field::<u32>(Variant(_89, 0), 4);
_70 = -_67.1;
_35 = _10;
_126 = !_15.fld2;
_102.1 = _59;
Call(place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4.0 = core::intrinsics::transmute(Field::<u128>(Variant(_115.fld1, 1), 1)), bb54, UnwindUnreachable())
}
bb54 = {
_57.0 = [_120,_113.0,_113.0,Field::<(i32, f64)>(Variant(_30, 0), 0).0];
_135 = _18 < _40;
SetDiscriminant(_21.fld0, 1);
_119.1.1 = _15.fld2 as f64;
place!(Field::<([i32; 4], u8)>(Variant(_73, 1), 6)).0 = [Field::<(i32, f64)>(Variant(_68, 0), 0).0,Field::<(i32, f64)>(Variant(_35, 0), 0).0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.0,_15.fld1];
_29 = Field::<u128>(Variant(_115.fld1, 1), 1) & Field::<u128>(Variant(_115.fld1, 1), 1);
_42.fld4.1.2 = _75 as u8;
_92 = (_23, _114, _61);
_92 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3);
_117.1 = (Field::<(i32, f64)>(Variant(_68, 0), 0).0, _70);
place!(Field::<[i16; 4]>(Variant(_15.fld0, 0), 1)) = [_45,_45,_45,_45];
_13 = _63;
_50 = _66;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0)) = _69;
SetDiscriminant(_89, 0);
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).1 = _67.1 - Field::<(i32, f64)>(Variant(_73, 1), 1).1;
_42.fld3 = core::ptr::addr_of!(_15.fld2);
_133 = -_61;
Goto(bb55)
}
bb55 = {
_21.fld3 = _49;
_42.fld4 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4);
place!(Field::<([i32; 4], u8)>(Variant(_89, 0), 0)).1 = _119.1.1 as u8;
_46 = _45 >= _45;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).1.0 = _6;
_43.fld1 = Adt53::Variant1 { fld0: _69,fld1: _29,fld2: _75 };
_118 = Adt50::Variant1 { fld0: (*_25),fld1: _67,fld2: Field::<u64>(Variant(_43.fld1, 1), 2),fld3: _49,fld4: _42.fld4,fld5: _71,fld6: _42.fld4.4,fld7: _28 };
_119.1.1 = Field::<(i32, f64)>(Variant(_35, 0), 0).1;
_89 = Adt48::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).4,fld1: _42.fld4.0,fld2: Field::<u128>(Variant(_43.fld1, 1), 1),fld3: _25,fld4: _17 };
_77 = _61 as f64;
Goto(bb56)
}
bb56 = {
_42.fld4.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1;
SetDiscriminant(_43.fld1, 0);
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld1 = Field::<usize>(Variant(_118, 1), 7) & Field::<usize>(Variant(_118, 1), 7);
place!(Field::<u128>(Variant(_115.fld1, 1), 1)) = _29;
_129 = [_45,_45,_45,_45];
Goto(bb57)
}
bb57 = {
_6 = _31;
SetDiscriminant(_30, 0);
_101 = (_123.0, Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).1, _61);
_121 = _83;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)) = _42.fld4;
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld4.2.1 = _117.2 as f64;
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant3 { fld0: _42.fld5,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.0,fld2: _81,fld3: Field::<*const bool>(Variant(_89, 0), 3),fld4: Field::<u32>(Variant(_89, 0), 4),fld5: _117.1.0,fld6: _86 };
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld4.4.0 = _69.2;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).2.0, Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.2.1);
_114 = [Field::<u32>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 4),_17,_117.2,_17,Field::<u32>(Variant(_89, 0), 4),Field::<u32>(Variant(_89, 0), 4),_117.2];
_67 = (_42.fld4.2.0, _70);
_136 = !Field::<usize>(Variant(_118, 1), 7);
place!(Field::<u32>(Variant(_89, 0), 4)) = _17;
_103 = _136 as f32;
_111 = Adt48::Variant3 { fld0: _42.fld5,fld1: _42.fld4.1.0,fld2: Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 2),fld3: Field::<*const bool>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 3),fld4: Field::<u32>(Variant(_89, 0), 4),fld5: Field::<(i32, f64)>(Variant(_68, 0), 0).0,fld6: _86 };
place!(Field::<u64>(Variant(_115.fld1, 1), 2)) = Field::<u64>(Variant(_118, 1), 2) | Field::<u64>(Variant(_118, 1), 2);
place!(Field::<bool>(Variant(_7, 2), 0)) = !_18;
place!(Field::<u128>(Variant(_89, 0), 2)) = _29 | _29;
_102.2 = Field::<[i16; 4]>(Variant(_89, 0), 1);
Goto(bb58)
}
bb58 = {
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld5 = [_135,Field::<bool>(Variant(_73, 1), 0),_135,Field::<bool>(Variant(_118, 1), 0),(*_25)];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 1), 4)).2.0 = Field::<(i32, f64)>(Variant(_68, 0), 0).0 << _53;
_95 = _45;
_22 = !_40;
place!(Field::<[isize; 1]>(Variant(_7, 2), 5)) = [_32];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)) = (Field::<[i16; 4]>(Variant(_89, 0), 1), Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 1), 4).1, Field::<(i32, f64)>(Variant(_10, 0), 0), Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 1), 4).3, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2).0);
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)) = Adt49 { fld0: _52,fld1: _42.fld1,fld2: Move(_111),fld3: _42.fld3,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4),fld5: Field::<[bool; 5]>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 0),fld6: _42.fld6 };
_131 = Move(_118);
_90 = Field::<(i32, f64)>(Variant(_35, 0), 0).0 < Field::<(i32, f64)>(Variant(_10, 0), 0).0;
_6 = Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.1.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4.1 = _42.fld6 >> _14;
_80 = Adt53::Variant1 { fld0: _69,fld1: _29,fld2: Field::<u64>(Variant(_115.fld1, 1), 2) };
_55 = _84;
_57 = (_81.0.0, Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.1.2);
_46 = !Field::<bool>(Variant(_131, 1), 0);
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = [Field::<usize>(Variant(_131, 1), 7),_42.fld1,Field::<usize>(Variant(_73, 1), 7),Field::<Adt49>(Variant(_43.fld1, 0), 3).fld1,_78,_136];
_41 = [_43.fld2,_115.fld2,_43.fld2,_115.fld2];
place!(Field::<[i16; 3]>(Variant(_131, 1), 5)) = Field::<[i16; 3]>(Variant(_73, 1), 5);
_27 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_131, 1), 0)));
SetDiscriminant(_10, 1);
_102 = (Field::<([i32; 4], u8)>(Variant(_131, 1), 6), _81.1, Field::<[i16; 4]>(Variant(_15.fld0, 0), 1), _87);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 1), 4)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1, _67, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3, Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.4);
_123.2 = Field::<u64>(Variant(_80, 1), 2) as i128;
_124.1 = Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.1.1 & _53;
place!(Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0)).1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.2;
Goto(bb59)
}
bb59 = {
_131 = Adt50::Variant0 { fld0: Field::<(i32, f64)>(Variant(_35, 0), 0).1,fld1: Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(Field::<Adt49>(Variant(_43.fld1, 0), 3).fld2, 3), 2).0,fld2: _75,fld3: _49,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3,fld5: Field::<(i32, f64)>(Variant(_73, 1), 1).0,fld6: Field::<Adt49>(Variant(_43.fld1, 0), 3).fld5 };
_5.1 = -Field::<(i32, f64)>(Variant(_9, 0), 0).1;
Goto(bb60)
}
bb60 = {
_81 = (Field::<([i32; 4], u8)>(Variant(_131, 0), 1), _6, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).0, _60);
place!(Field::<*const bool>(Variant(_15.fld0, 0), 3)) = core::ptr::addr_of!((*_25));
SetDiscriminant(_35, 1);
Goto(bb61)
}
bb61 = {
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld4.2.1 = Field::<(i32, f64)>(Variant(_9, 0), 0).1;
_15.fld0 = Adt48::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).4,fld1: _42.fld4.0,fld2: _29,fld3: Field::<*const bool>(Variant(_89, 0), 3),fld4: Field::<u32>(Variant(Field::<Adt49>(Variant(_43.fld1, 0), 3).fld2, 3), 4) };
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld2, 3), 2)) = (Field::<([i32; 4], u8)>(Variant(_131, 0), 1), Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 2).1, _81.2, _87);
_141 = _9;
_9 = _68;
_113 = Field::<(i32, f64)>(Variant(_68, 0), 0);
_94.fld0 = Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0).0;
place!(Field::<i32>(Variant(_131, 0), 5)) = _65 as i32;
_149 = [Field::<u32>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 4),_117.2,_117.2,_17,Field::<u32>(Variant(_89, 0), 4),Field::<u32>(Variant(Field::<Adt49>(Variant(_43.fld1, 0), 3).fld2, 3), 4),_17];
SetDiscriminant(Field::<Adt48>(Variant(_7, 2), 1), 2);
_147 = Adt50::Variant1 { fld0: _135,fld1: _113,fld2: Field::<u64>(Variant(_80, 1), 2),fld3: _15.fld3,fld4: Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4,fld5: _71,fld6: _81.0,fld7: _78 };
_39 = _41;
place!(Field::<u64>(Variant(_115.fld1, 1), 2)) = _75;
_69.0 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_80, 1), 0).0;
_58 = _55;
_117.1.1 = _72 as f64;
_127 = [_15.fld2,_15.fld2,_15.fld2];
_94.fld1 = _61 | _123.2;
_42.fld3 = core::ptr::addr_of!(_1);
_81.3 = [_15.fld3,Field::<i8>(Variant(_131, 0), 3)];
Goto(bb62)
}
bb62 = {
_43.fld1 = Move(_80);
_81.0 = _57;
_49 = Field::<i8>(Variant(_131, 0), 3) | Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4).1.1;
_76 = _27;
Call(place!(Field::<(i32, f64)>(Variant(_30, 0), 0)).0 = core::intrinsics::transmute(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4).2.0), bb63, UnwindUnreachable())
}
bb63 = {
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = -Field::<(i32, f64)>(Variant(_147, 1), 1).0;
Goto(bb64)
}
bb64 = {
_52 = [Field::<u64>(Variant(_115.fld1, 1), 2),Field::<u64>(Variant(_43.fld1, 1), 2)];
Goto(bb65)
}
bb65 = {
_43.fld2 = -_115.fld2;
(*_25) = !Field::<bool>(Variant(_147, 1), 0);
_153 = _26;
_35 = _68;
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant3 { fld0: _42.fld5,fld1: _108,fld2: _81,fld3: Field::<*const bool>(Variant(_15.fld0, 0), 3),fld4: _117.2,fld5: Field::<(i32, f64)>(Variant(_9, 0), 0).0,fld6: _86 };
_92.1 = _114;
_81.0.1 = _102.0.1;
_17 = !Field::<u32>(Variant(_15.fld0, 0), 4);
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(place!(Field::<Adt48>(Variant(_7, 2), 1)), 3), 2)).3 = _81.3;
_47 = Adt62 { fld0: _52 };
_54 = _51;
_100 = _55;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = _126 as i32;
_66 = _26;
_42.fld3 = core::ptr::addr_of!(_1);
place!(Field::<([i32; 4], u8)>(Variant(_89, 0), 0)) = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).2, _57.1);
_15.fld1 = Field::<(i32, f64)>(Variant(_30, 0), 0).0 & _67.0;
_21.fld0 = Adt48::Variant1 { fld0: (*_25) };
_124.2 = !_34;
_161 = [_95,_95,_95];
Goto(bb66)
}
bb66 = {
_140 = core::ptr::addr_of!(_21.fld2);
_21 = Adt59 { fld0: Move(_89),fld1: _67.0,fld2: _15.fld2,fld3: _56 };
_19 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0)) = _69;
_82 = Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0).0;
_120 = _21.fld1;
_94 = Adt55 { fld0: Field::<([i32; 4], u8)>(Variant(_131, 0), 1).0,fld1: _133,fld2: _81.2,fld3: Field::<[i64; 4]>(Variant(_7, 2), 6) };
_46 = !_135;
_42 = Adt49 { fld0: _52,fld1: _28,fld2: Move(Field::<Adt48>(Variant(_7, 2), 1)),fld3: _140,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4),fld5: Field::<[bool; 5]>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 3), 0),fld6: Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0).1 };
_113.0 = _43.fld2 as i32;
_135 = _22;
_163 = _47;
place!(Field::<[i16; 3]>(Variant(_73, 1), 5)) = _161;
place!(Field::<u64>(Variant(_73, 1), 2)) = Field::<u64>(Variant(_43.fld1, 1), 2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).1.0 = _31;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).4.1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).4.1;
place!(Field::<([i32; 4], u8)>(Variant(_147, 1), 6)).0 = [Field::<(i32, f64)>(Variant(_68, 0), 0).0,Field::<(i32, f64)>(Variant(_35, 0), 0).0,_15.fld1,_115.fld4];
place!(Field::<(i32, f64)>(Variant(_147, 1), 1)).1 = _5.1;
place!(Field::<(i32, f64)>(Variant(_141, 0), 0)).0 = _14 as i32;
_62 = _50 | _74;
_145.fld1 = Move(_43.fld1);
_124.1 = !_21.fld3;
_134 = _13;
_133 = -_61;
Goto(bb67)
}
bb67 = {
SetDiscriminant(_115.fld1, 1);
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2)).3 = [Field::<i8>(Variant(_131, 0), 3),Field::<i8>(Variant(_131, 0), 3)];
_114 = [Field::<u32>(Variant(_15.fld0, 0), 4),_117.2,Field::<u32>(Variant(_21.fld0, 0), 4),Field::<u32>(Variant(_15.fld0, 0), 4),Field::<u32>(Variant(_21.fld0, 0), 4),_17,Field::<u32>(Variant(_15.fld0, 0), 4)];
_124.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.1;
_110 = _126 << _21.fld2;
_102.0 = (_69.2, _57.1);
_42.fld4.1.0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4).1.0;
_26 = -_83;
_124.0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).1.0;
_154 = [_43.fld2,_65,_65,_115.fld2];
Goto(bb68)
}
bb68 = {
Call(_51 = core::intrinsics::transmute(_41), bb69, UnwindUnreachable())
}
bb69 = {
_131 = Adt50::Variant0 { fld0: _70,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4).4,fld2: Field::<u64>(Variant(_145.fld1, 1), 2),fld3: Field::<i8>(Variant(_147, 1), 3),fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4).3,fld5: _15.fld1,fld6: _42.fld5 };
_3 = _38 + _8;
_123.1 = _149;
_22 = !Field::<bool>(Variant(_73, 1), 0);
_132 = _32 > _26;
Goto(bb70)
}
bb70 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).3 = [_78,Field::<usize>(Variant(_73, 1), 7),_28,Field::<usize>(Variant(_73, 1), 7),_28,_42.fld1];
_147 = Move(_73);
_125 = !_110;
_96 = _163.fld0;
Goto(bb71)
}
bb71 = {
_55 = [_65,_115.fld2,_65,_43.fld2,_43.fld2,_43.fld2,_115.fld2];
SetDiscriminant(_15.fld0, 0);
place!(Field::<u32>(Variant(_21.fld0, 0), 4)) = Field::<u32>(Variant(_42.fld2, 3), 4);
place!(Field::<([i32; 4], u8)>(Variant(_147, 1), 6)).1 = !_102.0.1;
_140 = _42.fld3;
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).0 = [_21.fld1,_15.fld1,_67.0,_42.fld4.2.0];
Goto(bb72)
}
bb72 = {
_140 = core::ptr::addr_of!((*_140));
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = _117.1.0;
_89 = Adt48::Variant2 { fld0: _140,fld1: Field::<[isize; 1]>(Variant(_7, 2), 5) };
place!(Field::<([i32; 4], u8)>(Variant(_21.fld0, 0), 0)) = (_42.fld4.4.0, _42.fld6);
_8 = -_123.0;
_142 = _45 * _45;
_15 = Adt59 { fld0: Move(_21.fld0),fld1: Field::<i32>(Variant(_131, 0), 5),fld2: _125,fld3: _56 };
place!(Field::<u128>(Variant(_115.fld1, 1), 1)) = _32 as u128;
_101.0 = _38 + _123.0;
_143 = _43.fld2 as i32;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2)).1 = _13;
_42.fld4.1.2 = !Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2).0.1;
_81.3 = [_15.fld3,_21.fld3];
_101.0 = -_123.0;
_123.0 = Field::<u32>(Variant(_15.fld0, 0), 4) as f32;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).2 = _34 - Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4).4.1;
_107 = _17;
place!(Field::<[usize; 6]>(Variant(_131, 0), 4)) = [_78,Field::<usize>(Variant(_147, 1), 7),_78,_42.fld1,_136,_42.fld1];
Call(place!(Field::<u128>(Variant(_115.fld1, 1), 1)) = core::intrinsics::transmute(_101.2), bb73, UnwindUnreachable())
}
bb73 = {
SetDiscriminant(_147, 0);
_43.fld1 = Adt53::Variant0 { fld0: _42.fld4.2.0,fld1: _95,fld2: _54,fld3: Move(_42) };
_123.1 = [_17,_17,_107,Field::<u32>(Variant(Field::<Adt49>(Variant(_43.fld1, 0), 3).fld2, 3), 4),Field::<u32>(Variant(_15.fld0, 0), 4),Field::<u32>(Variant(_15.fld0, 0), 4),Field::<u32>(Variant(_15.fld0, 0), 4)];
_168 = (_124.0, _49, Field::<([i32; 4], u8)>(Variant(_131, 0), 1).1);
place!(Field::<i8>(Variant(_147, 0), 3)) = _168.1;
Goto(bb74)
}
bb74 = {
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).1 = [_17,_117.2,_17,Field::<u32>(Variant(_15.fld0, 0), 4),Field::<u32>(Variant(Field::<Adt49>(Variant(_43.fld1, 0), 3).fld2, 3), 4),_17,_17];
_42.fld1 = _136;
_164 = Field::<f64>(Variant(_131, 0), 0) as u64;
_132 = !_46;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (_43.fld4, _119.1.1);
place!(Field::<[bool; 5]>(Variant(_147, 0), 6)) = [_46,_135,_90,_40,_132];
_119.2 = _95 as u32;
place!(Field::<char>(Variant(place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld2, 3), 1)) = _31;
_109 = [_45,_95,Field::<i16>(Variant(_43.fld1, 0), 1)];
place!(Field::<[bool; 5]>(Variant(_147, 0), 6)) = [_18,_46,_135,_132,(*_25)];
place!(Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0)).1 = _95 as u8;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0)) = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).0, Field::<i16>(Variant(_43.fld1, 0), 1), Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).2);
_42.fld4.4.0 = _69.2;
_117.0 = [_65,_65,_43.fld2,_115.fld2];
Goto(bb75)
}
bb75 = {
place!(Field::<Adt49>(Variant(_43.fld1, 0), 3)).fld4.4.1 = Field::<([i32; 4], u8)>(Variant(_131, 0), 1).1;
place!(Field::<(i32, f64)>(Variant(_30, 0), 0)) = (Field::<Adt49>(Variant(_43.fld1, 0), 3).fld4.2.0, Field::<(i32, f64)>(Variant(_35, 0), 0).1);
_64 = -Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).0;
_21.fld0 = Move(_89);
SetDiscriminant(_43.fld1, 2);
_42.fld4.2 = (_67.0, _5.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).1.1 = _168.1;
_3 = _101.2 as f32;
_45 = Field::<u32>(Variant(_15.fld0, 0), 4) as i16;
_151 = _49 as f64;
SetDiscriminant(_145.fld1, 0);
place!(Field::<([i32; 4], u8)>(Variant(_147, 0), 1)).1 = _168.2 * Field::<([i32; 4], u8)>(Variant(_131, 0), 1).1;
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).1 = _57.1 | Field::<(char, i8, u8)>(Variant(_10, 1), 0).2;
SetDiscriminant(_68, 0);
_30 = _141;
_171 = _43.fld4 + Field::<i32>(Variant(_131, 0), 5);
_141 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_9, 0), 0) };
_76 = _27;
place!(Field::<([i32; 4], u8)>(Variant(_147, 0), 1)) = (_94.fld0, Field::<([i32; 4], u8)>(Variant(_131, 0), 1).1);
_24 = _81.1;
Goto(bb76)
}
bb76 = {
place!(Field::<Adt49>(Variant(_145.fld1, 0), 3)).fld4.2.1 = _5.1;
_145.fld2 = !_65;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).1 = _149;
SetDiscriminant(_30, 1);
_78 = _32 as usize;
place!(Field::<Adt49>(Variant(_145.fld1, 0), 3)).fld4.3 = _19;
_42.fld5 = Field::<[bool; 5]>(Variant(_147, 0), 6);
Goto(bb77)
}
bb77 = {
_169 = _29;
Goto(bb78)
}
bb78 = {
_98 = _38 + _3;
_165.fld2 = !_145.fld2;
_69.0 = [_171,_115.fld4];
_124.0 = _59;
_92.2 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).2 as i128;
SetDiscriminant(_15.fld0, 0);
_21.fld2 = _15.fld3 as u16;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).2 = Field::<(i32, f64)>(Variant(_141, 0), 0);
_151 = -Field::<(i32, f64)>(Variant(_35, 0), 0).1;
_42.fld4 = (_102.2, _124, Field::<(i32, f64)>(Variant(_141, 0), 0), (*_37), _57);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).1 = (_168.0, _21.fld3, _42.fld4.4.1);
_5.1 = _21.fld2 as f64;
_15.fld2 = _65 as u16;
place!(Field::<[u16; 3]>(Variant(_43.fld1, 2), 3)) = [_125,_21.fld2,_21.fld2];
_167 = _133 as isize;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).0 = [_95,_95,Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1,_95];
_69.1 = _45;
_147 = Move(_131);
place!(Field::<[i16; 4]>(Variant(_15.fld0, 0), 1)) = _129;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).0 = _63;
_92.0 = (*_140) as f32;
_127 = Field::<[u16; 3]>(Variant(_43.fld1, 2), 3);
_69 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).0, _95, Field::<([i32; 4], u8)>(Variant(_147, 0), 1).0);
_17 = !_107;
place!(Field::<u16>(Variant(_43.fld1, 2), 2)) = (*_140) & _21.fld2;
Goto(bb79)
}
bb79 = {
_69 = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).0, Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1, Field::<([i32; 4], u8)>(Variant(_147, 0), 1).0);
place!(Field::<u64>(Variant(_115.fld1, 1), 2)) = _164;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).1.2 = Field::<([i32; 4], u8)>(Variant(_147, 0), 1).1;
_110 = (*_140);
Goto(bb80)
}
bb80 = {
place!(Field::<u64>(Variant(_43.fld1, 2), 4)) = !Field::<u64>(Variant(_147, 0), 2);
_88 = _59;
_14 = _32 * _74;
_128 = !_42.fld4.4.1;
_82 = _102.0.0;
_43.fld4 = _142 as i32;
_112 = Adt51::Variant1 { fld0: _135,fld1: Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3),fld2: _102.2,fld3: _56,fld4: _117,fld5: _41,fld6: Field::<[bool; 5]>(Variant(_147, 0), 6),fld7: _69.0 };
_123.0 = _101.0 + _101.0;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = _67;
_162.1 = _53;
_25 = core::ptr::addr_of!(_116);
_81.2 = [_142,_45,Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1];
_176.fld2 = _78 as u16;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_112, 1), 4)).2 = _107 << _56;
_157 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).1.2 as isize;
place!(Field::<[isize; 1]>(Variant(_21.fld0, 2), 1)) = [_50];
_136 = _78;
_71 = [_69.1,_69.1,_142];
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).2 = _128 - Field::<(char, i8, u8)>(Variant(_10, 1), 0).2;
_162.2 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).2 | _168.2;
Goto(bb81)
}
bb81 = {
place!(Field::<i16>(Variant(_145.fld1, 0), 1)) = -_69.1;
place!(Field::<u128>(Variant(_15.fld0, 0), 2)) = Field::<u128>(Variant(_115.fld1, 1), 1) & _29;
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).1 = Field::<Adt49>(Variant(_145.fld1, 0), 3).fld4.2.1;
_28 = _78 - _136;
SetDiscriminant(_115.fld1, 2);
_173 = !_4;
_48 = _100;
_144 = _167 << _83;
_69.0 = [_120,Field::<(i32, f64)>(Variant(_141, 0), 0).0];
_153 = -_144;
_117 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_112, 1), 4);
_42.fld4.4.1 = !_128;
_31 = _13;
_20 = _17;
_145.fld1 = Adt53::Variant1 { fld0: _69,fld1: Field::<u128>(Variant(_15.fld0, 0), 2),fld2: Field::<u64>(Variant(_43.fld1, 2), 4) };
place!(Field::<[i16; 4]>(Variant(_15.fld0, 0), 1)) = [_95,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1];
place!(Field::<i8>(Variant(_147, 0), 3)) = _120 as i8;
Goto(bb82)
}
bb82 = {
_119 = Field::<([i64; 4], (i32, f64), u32)>(Variant(_112, 1), 4);
_15.fld2 = _21.fld2;
_183 = [_117.1.0,_117.1.0];
_82 = _69.2;
place!(Field::<[u16; 3]>(Variant(_10, 1), 1)) = [(*_140),(*_140),(*_140)];
(*_25) = Field::<bool>(Variant(_7, 2), 0) | _46;
SetDiscriminant(_21.fld0, 2);
_6 = _31;
SetDiscriminant(_112, 2);
_17 = _20;
_75 = Field::<u64>(Variant(_147, 0), 2);
_143 = -_171;
Goto(bb83)
}
bb83 = {
_181.fld2 = _116 as u16;
_131 = Move(_147);
_15.fld0 = Adt48::Variant0 { fld0: _102.0,fld1: _42.fld4.0,fld2: _29,fld3: _25,fld4: _119.2 };
_31 = _124.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).1.1 = _45 as i8;
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)) = (_59, _56, _162.2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).1 = (_59, _15.fld3, _168.2);
_15.fld0 = Adt48::Variant0 { fld0: _57,fld1: _129,fld2: _29,fld3: _25,fld4: _107 };
_67.0 = _143 * _119.1.0;
_146 = Adt62 { fld0: _52 };
_42.fld4.4.1 = _57.1 - _72;
Goto(bb84)
}
bb84 = {
_117.1 = (_171, _67.1);
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = Field::<(i32, f64)>(Variant(_35, 0), 0);
_195 = Adt50::Variant1 { fld0: _135,fld1: Field::<(i32, f64)>(Variant(_9, 0), 0),fld2: Field::<u64>(Variant(_131, 0), 2),fld3: _124.1,fld4: _42.fld4,fld5: _161,fld6: _102.0,fld7: _28 };
place!(Field::<[isize; 1]>(Variant(_21.fld0, 2), 1)) = _86;
place!(Field::<i8>(Variant(_131, 0), 3)) = _56 ^ Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).0;
_31 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.0;
Goto(bb85)
}
bb85 = {
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).0 = _82;
_10 = Adt54::Variant1 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1,fld1: _127 };
_143 = Field::<(i32, f64)>(Variant(_9, 0), 0).0 * _15.fld1;
_149 = [_107,_119.2,_107,_20,Field::<u32>(Variant(_15.fld0, 0), 4),_117.2,_107];
place!(Field::<f64>(Variant(_131, 0), 0)) = Field::<u64>(Variant(_195, 1), 2) as f64;
place!(Field::<(i32, f64)>(Variant(_141, 0), 0)).0 = _21.fld1;
_152 = [_135,_46,(*_25),Field::<bool>(Variant(_195, 1), 0),(*_25)];
place!(Field::<([i32; 4], u8)>(Variant(_195, 1), 6)) = _42.fld4.4;
_102.1 = _88;
Goto(bb86)
}
bb86 = {
place!(Field::<[u16; 3]>(Variant(_30, 1), 1)) = Field::<[u16; 3]>(Variant(_10, 1), 1);
_146.fld0 = _52;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).2 = (_171, _113.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).1 = (_108, _15.fld3, _128);
place!(Field::<[u16; 3]>(Variant(_30, 1), 1)) = _127;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).4.1 = _40 as u8;
_149 = [Field::<u32>(Variant(_15.fld0, 0), 4),_20,Field::<u32>(Variant(_15.fld0, 0), 4),Field::<u32>(Variant(_15.fld0, 0), 4),_17,_117.2,_17];
_69.0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).2.0,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).2.0];
_43.fld4 = Field::<i32>(Variant(_131, 0), 5) << _171;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).2.1 = _107 as f64;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).4 = (Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0).0, _42.fld4.4.1);
_43.fld1 = Move(_145.fld1);
_197.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.1;
_132 = !_135;
_94.fld3 = _117.0;
_137 = -_67.1;
_127 = [_181.fld2,(*_140),_15.fld2];
(*_25) = !_135;
_17 = _20;
(*_140) = _181.fld2 ^ _125;
_166 = !_165.fld2;
Goto(bb87)
}
bb87 = {
_56 = _21.fld3 | Field::<(char, i8, u8)>(Variant(_30, 1), 0).1;
_2 = _26;
_103 = _101.0 + _3;
_105 = _22;
SetDiscriminant(_43.fld1, 1);
_189 = _183;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).1.0 = _24;
_194.fld2 = !(*_140);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)) = (_38, _101.1, _92.2);
_125 = _21.fld2 | _110;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0)).0 = [_171,_143];
_69 = (_183, _95, _102.0.0);
_22 = !_116;
(*_140) = _125;
_173 = _64 as isize;
SetDiscriminant(_15.fld0, 3);
_156 = _169 as f32;
_21.fld0 = Adt48::Variant1 { fld0: _40 };
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_15.fld0, 3), 2)).0.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).4.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).1.1 = _162.1;
_177 = !_57.1;
_50 = -_4;
_172 = core::ptr::addr_of_mut!(_42.fld4.3);
_200 = core::ptr::addr_of!(_176.fld2);
_197 = (_59, _162.1, _102.0.1);
Goto(bb88)
}
bb88 = {
_38 = _95 as f32;
_15 = Move(_21);
_30 = Adt54::Variant1 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1,fld1: Field::<[u16; 3]>(Variant(_10, 1), 1) };
SetDiscriminant(_15.fld0, 0);
_113.1 = _117.1.1;
place!(Field::<[i16; 3]>(Variant(_195, 1), 5)) = _109;
SetDiscriminant(_131, 2);
_183 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).0;
_121 = -_66;
_102.0.1 = _168.2 ^ Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.2;
_16 = _62;
_127 = [(*_200),_176.fld2,_110];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).4.0 = _42.fld4.4.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).2.0 = _15.fld1;
_199 = _29 & _29;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0)).1 = _69.1;
_147 = Adt50::Variant2 { fld0: _51,fld1: _129,fld2: _14,fld3: _96,fld4: _69.0,fld5: Field::<(i32, f64)>(Variant(_9, 0), 0).0,fld6: _42.fld4 };
Goto(bb89)
}
bb89 = {
_159 = _90;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).1 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.0, _168.1, _81.0.1);
place!(Field::<([i32; 4], u8)>(Variant(_15.fld0, 0), 0)).0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).2.0,Field::<(i32, f64)>(Variant(_9, 0), 0).0,_43.fld4,Field::<(i32, f64)>(Variant(_35, 0), 0).0];
_130 = Field::<(i32, f64)>(Variant(_195, 1), 1).0 >> _91;
Goto(bb90)
}
bb90 = {
place!(Field::<[i16; 4]>(Variant(_15.fld0, 0), 1)) = [_95,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1,_95];
_111 = Adt48::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).4,fld1: _129,fld2: _169,fld3: _25,fld4: _119.2 };
place!(Field::<char>(Variant(_115.fld1, 2), 1)) = Field::<(char, i8, u8)>(Variant(_10, 1), 0).0;
_146 = Adt62 { fld0: _163.fld0 };
_122 = [_132,_116,_22,_46,(*_25),(*_25)];
_124.2 = _166 as u8;
Goto(bb91)
}
bb91 = {
_170 = _15.fld1 as u128;
SetDiscriminant(_35, 0);
_184 = Adt62 { fld0: _146.fld0 };
_184 = Adt62 { fld0: _47.fld0 };
_202 = !_15.fld3;
_176.fld1 = Field::<(i32, f64)>(Variant(_195, 1), 1).0;
_70 = _151 + Field::<(i32, f64)>(Variant(_141, 0), 0).1;
_164 = _75 * _75;
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant2 { fld0: _140,fld1: Field::<[isize; 1]>(Variant(_7, 2), 5) };
place!(Field::<i32>(Variant(_131, 2), 5)) = !_171;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).2 = _123.2 & _61;
_30 = Adt54::Variant0 { fld0: _117.1 };
_146.fld0 = [Field::<u64>(Variant(_195, 1), 2),_75];
Call(_90 = fn19(_183, _135, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).4.0, _199, _143, Field::<[u16; 3]>(Variant(_10, 1), 1), Move(_195), _42.fld4.2, _4, _70, _47), bb92, UnwindUnreachable())
}
bb92 = {
_171 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).2 as i32;
_153 = Field::<isize>(Variant(_147, 2), 2);
_170 = _119.1.1 as u128;
_89 = Adt48::Variant3 { fld0: _42.fld5,fld1: _6,fld2: _102,fld3: _25,fld4: _107,fld5: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).2.0,fld6: Field::<[isize; 1]>(Variant(Field::<Adt48>(Variant(_7, 2), 1), 2), 1) };
_15.fld0 = Adt48::Variant0 { fld0: _102.0,fld1: Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_89, 3), 2).2,fld2: Field::<u128>(Variant(_111, 0), 2),fld3: _25,fld4: Field::<u32>(Variant(_111, 0), 4) };
place!(Field::<u64>(Variant(_115.fld1, 2), 4)) = _17 as u64;
Goto(bb93)
}
bb93 = {
_178 = _57.1 << _101.2;
place!(Field::<[u16; 3]>(Variant(_115.fld1, 2), 3)) = [_194.fld2,_181.fld2,_125];
_50 = -_144;
_41 = _154;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).4.1 = _128;
SetDiscriminant(_15.fld0, 2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).4.0 = [_176.fld1,_117.1.0,_43.fld4,_120];
_162.0 = _59;
Goto(bb94)
}
bb94 = {
_124 = (_31, Field::<(char, i8, u8)>(Variant(_10, 1), 0).1, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_89, 3), 2).0.1);
_182 = Adt52::Variant1 { fld0: _105,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).0,fld2: _67,fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).1.1,fld4: Field::<[u64; 4]>(Variant(_147, 2), 0),fld5: _161,fld6: _164,fld7: _122 };
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant2 { fld0: _200,fld1: Field::<[isize; 1]>(Variant(_89, 3), 6) };
_58 = [_166,_145.fld2,_65,_145.fld2,_115.fld2,_165.fld2,_115.fld2];
_118 = Adt50::Variant2 { fld0: Field::<[u64; 4]>(Variant(_182, 1), 4),fld1: Field::<[i16; 4]>(Variant(_147, 2), 1),fld2: _157,fld3: Field::<[u64; 2]>(Variant(_147, 2), 3),fld4: Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).0,fld5: Field::<i32>(Variant(_147, 2), 5),fld6: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6) };
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).4.1 = !_57.1;
_85 = _62;
_181.fld2 = _78 as u16;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).2.1 = _176.fld2 as f64;
_148 = Field::<(i32, f64)>(Variant(_30, 0), 0).1 * Field::<(i32, f64)>(Variant(_9, 0), 0).1;
Call(_49 = core::intrinsics::bswap(_15.fld3), bb95, UnwindUnreachable())
}
bb95 = {
_42.fld0 = _52;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)) = (Field::<[i16; 4]>(Variant(_111, 0), 1), _197, _42.fld4.2, (*_172), _57);
_127 = [_181.fld2,_194.fld2,(*_200)];
_21.fld3 = _168.1 & _42.fld4.1.1;
_45 = _95 << _178;
_145.fld1 = Adt53::Variant1 { fld0: _69,fld1: _29,fld2: Field::<u64>(Variant(_115.fld1, 2), 4) };
_117.2 = _119.2 << _29;
_56 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).1.1;
Goto(bb96)
}
bb96 = {
_180 = _144;
_181 = Adt59 { fld0: Move(Field::<Adt48>(Variant(_7, 2), 1)),fld1: Field::<i32>(Variant(_131, 2), 5),fld2: _110,fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).1.1 };
_214 = _95 as f32;
SetDiscriminant(_111, 3);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2.0 = _166 as i32;
_177 = _133 as u8;
_42 = Adt49 { fld0: _96,fld1: _136,fld2: Move(_89),fld3: _200,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6),fld5: _152,fld6: _102.0.1 };
Goto(bb97)
}
bb97 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).4.1 = !_177;
_117.1.0 = -Field::<i32>(Variant(_147, 2), 5);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).1.2 = _42.fld4.4.1 + Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.2;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).4 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).4.0, _197.2);
_97 = [_46,_116,_105,(*_25),(*_25),_18];
_17 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1 as u32;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (_119.1.0, _5.1);
_81.0.0 = _94.fld0;
_75 = Field::<u64>(Variant(_182, 1), 6) + Field::<u64>(Variant(_145.fld1, 1), 2);
Call(place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).0 = core::intrinsics::transmute(_153), bb98, UnwindUnreachable())
}
bb98 = {
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2)).3 = _102.3;
_194.fld3 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).1 * _168.1;
_21 = Move(_181);
place!(Field::<[i16; 4]>(Variant(_131, 2), 1)) = [_142,_69.1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1];
_69.1 = !_142;
Call(place!(Field::<u128>(Variant(_43.fld1, 1), 1)) = core::intrinsics::bswap(Field::<u128>(Variant(_145.fld1, 1), 1)), bb99, UnwindUnreachable())
}
bb99 = {
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)).2 = [Field::<i32>(Variant(_42.fld2, 3), 5),_15.fld1,_67.0,Field::<(i32, f64)>(Variant(_182, 1), 2).0];
_81.0.1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).4.1;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2)).3 = _81.3;
_81 = _102;
_108 = _134;
SetDiscriminant(_118, 2);
(*_25) = _135 | _46;
SetDiscriminant(_147, 0);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).2;
_70 = -_117.1.1;
_122 = [_90,_116,Field::<bool>(Variant(_182, 1), 0),_40,_40,Field::<bool>(Variant(_7, 2), 0)];
_162.0 = _88;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).0, _168, _67, _42.fld4.3, _81.0);
_147 = Adt50::Variant0 { fld0: _11,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).4,fld2: Field::<u64>(Variant(_145.fld1, 1), 2),fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).1.1,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).3,fld5: _67.0,fld6: _42.fld5 };
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0)).2 = [_5.0,_21.fld1,_130,Field::<(i32, f64)>(Variant(_30, 0), 0).0];
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = _214 as i32;
place!(Field::<i8>(Variant(_147, 0), 3)) = _29 as i8;
_162 = _168;
place!(Field::<[i64; 4]>(Variant(_7, 2), 6)) = [_145.fld2,_165.fld2,_145.fld2,_43.fld2];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)) = (_42.fld4.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1, Field::<(i32, f64)>(Variant(_68, 0), 0), Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).3, _42.fld4.4);
place!(Field::<u32>(Variant(_42.fld2, 3), 4)) = _44 as u32;
SetDiscriminant(_21.fld0, 2);
_161 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1];
_191 = core::ptr::addr_of_mut!(_90);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).2.1 = -_148;
Goto(bb100)
}
bb100 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).1.0 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).0;
SetDiscriminant(_147, 1);
_213.0 = Field::<(char, i8, u8)>(Variant(_10, 1), 0).0;
place!(Field::<*const u16>(Variant(_21.fld0, 2), 0)) = _200;
_120 = _143 >> Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2).0.1;
_187 = !_83;
SetDiscriminant(_145.fld1, 1);
_94 = Adt55 { fld0: _42.fld4.4.0,fld1: _101.2,fld2: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).0,fld3: _154 };
_145.fld2 = _166 * _166;
_117.1.1 = _42.fld1 as f64;
place!(Field::<[i16; 4]>(Variant(_131, 2), 1)) = [_95,_95,_95,_142];
_134 = _24;
_154 = [_166,_165.fld2,_145.fld2,_165.fld2];
_81.0.0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2.0,_21.fld1,_115.fld4,_176.fld1];
place!(Field::<[i32; 2]>(Variant(_118, 2), 4)) = _189;
_74 = _32 | _14;
_181.fld0 = Adt48::Variant3 { fld0: _152,fld1: _162.0,fld2: _102,fld3: Field::<*const bool>(Variant(_42.fld2, 3), 3),fld4: _119.2,fld5: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2.0,fld6: Field::<[isize; 1]>(Variant(_7, 2), 5) };
Goto(bb101)
}
bb101 = {
_216 = [_32];
SetDiscriminant(_30, 1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).1.0 = _108;
place!(Field::<[isize; 1]>(Variant(_111, 3), 6)) = [_187];
_150 = _144 & _144;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).4 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4;
place!(Field::<u64>(Variant(_43.fld1, 1), 2)) = _178 as u64;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 1), 4)).0 = [_45,_69.1,_95,_69.1];
_65 = _130 as i64;
_119.2 = _117.2 + _107;
place!(Field::<[u64; 2]>(Variant(_118, 2), 3)) = _163.fld0;
place!(Field::<[isize; 1]>(Variant(_42.fld2, 3), 6)) = [_50];
_175 = core::ptr::addr_of_mut!((*_25));
_205 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3);
(*_172) = [_136,_136,_42.fld1,_136,_42.fld1,_136];
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = !Field::<(i32, f64)>(Variant(_141, 0), 0).0;
place!(Field::<[isize; 1]>(Variant(_15.fld0, 2), 1)) = Field::<[isize; 1]>(Variant(_181.fld0, 3), 6);
SetDiscriminant(_9, 1);
_236.fld1 = _67;
_233 = -_117.1.1;
Goto(bb102)
}
bb102 = {
_147 = Adt50::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).2.1,fld1: _81.0,fld2: _75,fld3: Field::<(char, i8, u8)>(Variant(_10, 1), 0).1,fld4: (*_172),fld5: Field::<i32>(Variant(_181.fld0, 3), 5),fld6: _152 };
place!(Field::<[u64; 2]>(Variant(_131, 2), 3)) = [_75,_75];
place!(Field::<[i16; 4]>(Variant(_118, 2), 1)) = [_95,_69.1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0).1];
_42.fld5 = Field::<[bool; 5]>(Variant(_147, 0), 6);
_42.fld4.4 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_181.fld0, 3), 2).0;
_123.2 = _61 >> _45;
_42.fld3 = core::ptr::addr_of!((*_200));
_145.fld4 = Field::<(i32, f64)>(Variant(_68, 0), 0).0;
_82 = [_117.1.0,_67.0,_15.fld1,_43.fld4];
place!(Field::<(i32, f64)>(Variant(_141, 0), 0)).0 = -Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).2.0;
_42.fld4.4.1 = !_197.2;
_35 = _68;
_213.1 = Field::<(i32, f64)>(Variant(_141, 0), 0).0 as i8;
place!(Field::<[usize; 6]>(Variant(_147, 0), 4)) = [_42.fld1,_78,_78,_42.fld1,_28,_136];
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = _117.1.0;
_220.1 = _101.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).1.2 = !_124.2;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).1.0 = _59;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2.0 = _143 >> Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4.1;
place!(Field::<[isize; 1]>(Variant(_42.fld2, 3), 6)) = [_121];
_97 = Field::<[bool; 6]>(Variant(_182, 1), 7);
_137 = _148;
_112 = Adt51::Variant1 { fld0: (*_175),fld1: _92,fld2: Field::<[i16; 4]>(Variant(_118, 2), 1),fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1,fld4: _119,fld5: Field::<[i64; 4]>(Variant(_7, 2), 6),fld6: Field::<[bool; 5]>(Variant(_181.fld0, 3), 0),fld7: _183 };
Goto(bb103)
}
bb103 = {
_163 = _146;
Goto(bb104)
}
bb104 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).1 = _168;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2)) = _102;
_68 = _10;
(*_140) = !_110;
_75 = !Field::<u64>(Variant(_43.fld1, 1), 2);
_111 = Adt48::Variant3 { fld0: _42.fld5,fld1: Field::<char>(Variant(_42.fld2, 3), 1),fld2: _102,fld3: Field::<*const bool>(Variant(_181.fld0, 3), 3),fld4: _17,fld5: _130,fld6: Field::<[isize; 1]>(Variant(_15.fld0, 2), 1) };
_220 = _205;
_112 = Adt51::Variant1 { fld0: _132,fld1: _92,fld2: Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_181.fld0, 3), 2).2,fld3: _42.fld4.1.1,fld4: _117,fld5: _154,fld6: _42.fld5,fld7: _69.0 };
_232.0 = _170 as i32;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2)).0.0 = [_21.fld1,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).2.0,_43.fld4,Field::<i32>(Variant(_181.fld0, 3), 5)];
_160 = Move(_147);
_222 = [Field::<(char, i8, u8)>(Variant(_68, 1), 0).1,_162.1];
place!(Field::<i32>(Variant(_118, 2), 5)) = _194.fld2 as i32;
SetDiscriminant(_182, 0);
_86 = [_74];
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)).0 = [_115.fld4,Field::<i32>(Variant(_181.fld0, 3), 5)];
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).2 = !_57.1;
_237 = -_77;
_113.0 = -Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2.0;
_179 = core::ptr::addr_of!(_46);
(*_172) = [_78,_42.fld1,_78,_28,_136,_42.fld1];
_149 = [Field::<u32>(Variant(_181.fld0, 3), 4),Field::<([i64; 4], (i32, f64), u32)>(Variant(_112, 1), 4).2,_20,_20,_117.2,Field::<([i64; 4], (i32, f64), u32)>(Variant(_112, 1), 4).2,_20];
_77 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).2.1;
_233 = _133 as f64;
SetDiscriminant(_112, 2);
_139 = _63;
_241 = -Field::<i32>(Variant(_42.fld2, 3), 5);
Goto(bb105)
}
bb105 = {
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0)).2 = [_43.fld4,_113.0,_171,_119.1.0];
_209 = _26 != _144;
_69.2 = [_15.fld1,_120,_21.fld1,_119.1.0];
_119.1.1 = _5.1 + _5.1;
_196 = _42.fld1 as i16;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_42.fld2, 3), 2)).0.1 = _178;
_190 = _39;
place!(Field::<[bool; 5]>(Variant(_182, 0), 3)) = Field::<[bool; 5]>(Variant(_111, 3), 0);
_5.0 = _95 as i32;
place!(Field::<[i32; 2]>(Variant(_131, 2), 4)) = [_5.0,Field::<i32>(Variant(_118, 2), 5)];
_144 = _180 ^ _180;
_97 = [_135,(*_25),Field::<bool>(Variant(_7, 2), 0),_90,(*_179),_40];
_228.fld4 = _115.fld4 >> _26;
_236.fld4.1 = _42.fld4.4.1;
(*_191) = !(*_175);
_85 = _14;
_38 = _123.0 + _3;
_123.0 = Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).0 - _3;
place!(Field::<[isize; 1]>(Variant(_111, 3), 6)) = Field::<[isize; 1]>(Variant(_7, 2), 5);
_209 = _159;
_247 = -_14;
_54 = _51;
_102 = (Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2).0, Field::<char>(Variant(_181.fld0, 3), 1), Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).0, _222);
Goto(bb106)
}
bb106 = {
_236.fld1 = _5;
_180 = _66 - _16;
Call(place!(Field::<u16>(Variant(_115.fld1, 2), 2)) = core::intrinsics::bswap(_125), bb107, UnwindUnreachable())
}
bb107 = {
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)) = (_31, Field::<i8>(Variant(_160, 0), 3), _197.2);
_19 = [_136,_42.fld1,_28,_136,_42.fld1,_136];
_69 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0);
_166 = _65;
_81.1 = _13;
_70 = -_77;
_200 = core::ptr::addr_of!(place!(Field::<u16>(Variant(_115.fld1, 2), 2)));
_101.2 = !_123.2;
Goto(bb108)
}
bb108 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2.0 = _241 * _145.fld4;
_218.1 = !_162.1;
_236.fld4.0 = [_143,_42.fld4.2.0,Field::<i32>(Variant(_181.fld0, 3), 5),Field::<i32>(Variant(_131, 2), 5)];
Goto(bb109)
}
bb109 = {
_152 = Field::<[bool; 5]>(Variant(_160, 0), 6);
_213.2 = _236.fld4.1;
_17 = Field::<u32>(Variant(_181.fld0, 3), 4) << _15.fld1;
_78 = _213.2 as usize;
_233 = _42.fld4.2.1 * Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).2.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)) = (_102.2, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1, _67, (*_37), Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_111, 3), 2).0);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).0 = _94.fld2;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2.0 = _115.fld4;
_15 = Adt59 { fld0: Move(_181.fld0),fld1: Field::<i32>(Variant(_42.fld2, 3), 5),fld2: _110,fld3: _218.1 };
_57 = (_236.fld4.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).4.1);
_42.fld3 = Field::<*const u16>(Variant(_21.fld0, 2), 0);
SetDiscriminant(_42.fld2, 2);
_108 = _134;
_42.fld3 = core::ptr::addr_of!(_1);
_37 = _172;
_229 = Adt50::Variant2 { fld0: _54,fld1: _94.fld2,fld2: _16,fld3: Field::<[u64; 2]>(Variant(_118, 2), 3),fld4: _69.0,fld5: Field::<i32>(Variant(_160, 0), 5),fld6: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6) };
place!(Field::<*const bool>(Variant(_111, 3), 3)) = core::ptr::addr_of!(_249);
_117 = (Field::<[i64; 4]>(Variant(_7, 2), 6), _113, _20);
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [_125,Field::<u16>(Variant(_115.fld1, 2), 2),Field::<u16>(Variant(_115.fld1, 2), 2)];
_145.fld1 = Move(_43.fld1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_229, 2), 6)).4.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).1.2 ^ Field::<(char, i8, u8)>(Variant(_10, 1), 0).2;
_203 = _166 as f32;
_61 = _220.2;
_113.0 = _42.fld4.2.0;
_84 = [_65,_166,_166,_65,_166,_65,_166];
Goto(bb110)
}
bb110 = {
_188 = !_218.1;
_217 = core::ptr::addr_of!(_66);
_57.0 = [_236.fld1.0,_5.0,Field::<i32>(Variant(_160, 0), 5),Field::<i32>(Variant(_111, 3), 5)];
place!(Field::<[usize; 6]>(Variant(_160, 0), 4)) = [_28,_78,_136,_42.fld1,_78,_136];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_229, 2), 6)).1 = _213;
Goto(bb111)
}
bb111 = {
_123.0 = _136 as f32;
place!(Field::<[u64; 4]>(Variant(_118, 2), 0)) = [Field::<u64>(Variant(_160, 0), 2),Field::<u64>(Variant(_145.fld1, 1), 2),Field::<u64>(Variant(_115.fld1, 2), 4),Field::<u64>(Variant(_145.fld1, 1), 2)];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).3 = [_28,_42.fld1,_28,_78,_78,_28];
_72 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).4.1;
_211 = -_233;
_115.fld4 = _117.1.0;
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = [_42.fld1,_136,_28,_28,_28,_28];
place!(Field::<[u64; 2]>(Variant(_229, 2), 3)) = [_75,_75];
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).2 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4.1;
_246 = Field::<i32>(Variant(_131, 2), 5) + _120;
_96 = [Field::<u64>(Variant(_115.fld1, 2), 4),Field::<u64>(Variant(_115.fld1, 2), 4)];
_41 = _190;
_99 = _65;
_193 = Field::<u32>(Variant(_15.fld0, 3), 4);
_236.fld3.2 = [_236.fld1.0,Field::<(i32, f64)>(Variant(_141, 0), 0).0,_171,Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).2.0];
_124.1 = !_197.1;
SetDiscriminant(_145.fld1, 1);
_245 = _136 as i8;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_229, 2), 6)).4.0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_229, 2), 6).2.0,Field::<i32>(Variant(_111, 3), 5),Field::<i32>(Variant(_160, 0), 5),Field::<(i32, f64)>(Variant(_141, 0), 0).0];
SetDiscriminant(_229, 0);
Goto(bb112)
}
bb112 = {
_35 = Adt54::Variant1 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1,fld1: Field::<[u16; 3]>(Variant(_9, 1), 1) };
_124.0 = _108;
_247 = !_74;
place!(Field::<[u16; 3]>(Variant(_68, 1), 1)) = [(*_140),_125,_176.fld2];
(*_175) = _132;
_21.fld2 = _125 ^ (*_200);
(*_175) = !Field::<bool>(Variant(_7, 2), 0);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).0 = -_214;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)) = (_214, _149, _92.2);
_102.3 = [_213.1,Field::<(char, i8, u8)>(Variant(_68, 1), 0).1];
_223 = _169 ^ _29;
SetDiscriminant(_111, 1);
_205 = (_92.0, Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).1, Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).2);
_259 = _153;
_263 = (_145.fld4, _137);
Goto(bb113)
}
bb113 = {
_225 = Field::<[i32; 2]>(Variant(_131, 2), 4);
_236.fld5 = [_168.1,_168.1];
place!(Field::<([i32; 4], u8)>(Variant(_229, 0), 1)).1 = _128;
_93 = _236.fld1.0;
_92.2 = _61;
_42.fld2 = Adt48::Variant3 { fld0: _42.fld5,fld1: _108,fld2: Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_15.fld0, 3), 2),fld3: Field::<*const bool>(Variant(_15.fld0, 3), 3),fld4: _117.2,fld5: _145.fld4,fld6: Field::<[isize; 1]>(Variant(_7, 2), 5) };
_6 = Field::<char>(Variant(_115.fld1, 2), 1);
_89 = Adt48::Variant1 { fld0: (*_191) };
_181.fld3 = _49 + Field::<i8>(Variant(_160, 0), 3);
_206 = [_193,_107,_17,_117.2,_119.2,Field::<u32>(Variant(_42.fld2, 3), 4),_20];
_227 = _84;
Goto(bb114)
}
bb114 = {
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).0 = _102.1;
_113.1 = _77 + _42.fld4.2.1;
_194.fld3 = Field::<u32>(Variant(_15.fld0, 3), 4) as i8;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).0 = _139;
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).1 = _157 as i8;
_138 = core::ptr::addr_of!(_217);
_236.fld3.0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6).2.0,_120];
_212 = _203;
_71 = _109;
_21.fld3 = !_49;
_43.fld4 = _170 as i32;
Goto(bb115)
}
bb115 = {
place!(Field::<i32>(Variant(_42.fld2, 3), 5)) = !_263.0;
_181 = Adt59 { fld0: Move(_42.fld2),fld1: _228.fld4,fld2: (*_200),fld3: _245 };
_145.fld4 = !_117.1.0;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)).2 = _57.0;
place!(Field::<*const u16>(Variant(_21.fld0, 2), 0)) = core::ptr::addr_of!(_21.fld2);
_236.fld2 = core::ptr::addr_of!(_144);
place!(Field::<[isize; 1]>(Variant(_182, 0), 6)) = [_74];
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_181.fld0, 3), 2)) = (_236.fld4, _42.fld4.1.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).0, Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_15.fld0, 3), 2).3);
_81.0 = (Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_181.fld0, 3), 2).0.0, Field::<([i32; 4], u8)>(Variant(_160, 0), 1).1);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)) = (_183, _142, Field::<([i32; 4], u8)>(Variant(_160, 0), 1).0);
_30 = _35;
_102.0 = (_42.fld4.4.0, _42.fld6);
_248 = _16;
_218.0 = _31;
_210 = _22 | _18;
_232.1 = -Field::<f64>(Variant(_160, 0), 0);
_181.fld3 = (*_179) as i8;
_214 = _259 as f32;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2.1 = _156 as f64;
place!(Field::<u64>(Variant(_115.fld1, 2), 4)) = _75 & Field::<u64>(Variant(_160, 0), 2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5)).2 = (_176.fld1, _70);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)) = (Field::<[i32; 2]>(Variant(_118, 2), 4), _69.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5).4.0);
place!(Field::<u64>(Variant(_229, 0), 2)) = Field::<u64>(Variant(_160, 0), 2);
_213.0 = Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_15.fld0, 3), 2).1;
_243 = Adt62 { fld0: _163.fld0 };
SetDiscriminant(_68, 1);
Goto(bb116)
}
bb116 = {
place!(Field::<(char, i8, u8)>(Variant(_35, 1), 0)).1 = _202 - Field::<i8>(Variant(_160, 0), 3);
_249 = (*_179);
_213.0 = _88;
_187 = _92.2 as isize;
_213.1 = _107 as i8;
_265.2 = _123.2;
SetDiscriminant(_181.fld0, 0);
_176.fld2 = !Field::<u16>(Variant(_115.fld1, 2), 2);
_60 = [_49,_168.1];
_208 = _247 as i32;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)).1 = !_196;
_102.1 = _81.1;
_139 = Field::<(char, i8, u8)>(Variant(_30, 1), 0).0;
_236.fld0 = [_125,(*_140),(*_140)];
place!(Field::<[i16; 4]>(Variant(_131, 2), 1)) = Field::<[i16; 4]>(Variant(_118, 2), 1);
_42.fld4.2.1 = _70 - _233;
_42.fld2 = Adt48::Variant0 { fld0: _102.0,fld1: Field::<[i16; 4]>(Variant(_131, 2), 1),fld2: _29,fld3: _179,fld4: _117.2 };
place!(Field::<usize>(Variant(_182, 0), 5)) = !_136;
_57.1 = _124.2 & _42.fld4.1.2;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_15.fld0, 3), 2)).3 = [_218.1,_202];
_273 = _223 as isize;
_225 = [_42.fld4.2.0,_241];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)).1.2 = _102.0.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).1.1 = _119.2 as i8;
_35 = Adt54::Variant0 { fld0: _113 };
place!(Field::<f32>(Variant(_182, 0), 4)) = _123.0;
_274 = [(*_200),_126,_15.fld2];
place!(Field::<usize>(Variant(_182, 0), 5)) = _28;
_136 = Field::<bool>(Variant(_7, 2), 0) as usize;
Goto(bb117)
}
bb117 = {
place!(Field::<([i32; 4], u8)>(Variant(_160, 0), 1)) = _236.fld4;
_122 = _97;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_131, 2), 6)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).0, _213, _42.fld4.2, _42.fld4.3, _42.fld4.4);
_236.fld4 = (Field::<([i32; 4], u8)>(Variant(_160, 0), 1).0, Field::<(char, i8, u8)>(Variant(_30, 1), 0).2);
_131 = Move(_160);
_129 = [_45,_95,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,_45];
_157 = !_74;
_42 = Adt49 { fld0: Field::<[u64; 2]>(Variant(_118, 2), 3),fld1: _28,fld2: Move(_15.fld0),fld3: _200,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5),fld5: _152,fld6: Field::<(char, i8, u8)>(Variant(_30, 1), 0).2 };
place!(Field::<[usize; 6]>(Variant(_131, 0), 4)) = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).3;
_39 = [_65,_65,_65,_99];
(*_200) = (*_140) | (*_140);
_202 = !_218.1;
_42.fld3 = core::ptr::addr_of!(_176.fld2);
_174 = _169 >> _42.fld1;
Goto(bb118)
}
bb118 = {
(*_138) = core::ptr::addr_of!(_251);
_195 = Adt50::Variant1 { fld0: _209,fld1: _113,fld2: Field::<u64>(Variant(_131, 0), 2),fld3: _162.1,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_115.fld1, 2), 5),fld5: _161,fld6: Field::<([i32; 4], u8)>(Variant(_131, 0), 1),fld7: _136 };
_243.fld0 = [Field::<u64>(Variant(_229, 0), 2),Field::<u64>(Variant(_229, 0), 2)];
_236.fld3.0 = _69.0;
SetDiscriminant(_131, 0);
_115.fld1 = Adt53::Variant1 { fld0: _69,fld1: _174,fld2: Field::<u64>(Variant(_229, 0), 2) };
SetDiscriminant(_89, 0);
SetDiscriminant(_42.fld2, 2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).3 = [Field::<usize>(Variant(_195, 1), 7),_28,_136,_42.fld1,_28,_28];
SetDiscriminant(_35, 0);
_230 = _241 != Field::<i32>(Variant(_118, 2), 5);
_168 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.0, _42.fld4.1.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.2);
_94.fld0 = [_42.fld4.2.0,_176.fld1,_93,_228.fld4];
place!(Field::<f64>(Variant(_131, 0), 0)) = _176.fld1 as f64;
Goto(bb119)
}
bb119 = {
_102.1 = _13;
_123.2 = _214 as i128;
_58 = _84;
_38 = -_103;
_232 = (_93, _42.fld4.2.1);
_125 = (*_140) >> _174;
place!(Field::<[bool; 5]>(Variant(_229, 0), 6)) = [_230,Field::<bool>(Variant(_7, 2), 0),(*_191),_132,_116];
_221 = _174;
_181.fld3 = !_42.fld4.1.1;
place!(Field::<([i32; 4], u8)>(Variant(_89, 0), 0)).1 = !Field::<([i32; 4], u8)>(Variant(_229, 0), 1).1;
place!(Field::<(i32, f64)>(Variant(_195, 1), 1)).0 = _115.fld4;
_74 = Field::<usize>(Variant(_182, 0), 5) as isize;
(*_217) = -_74;
_81.0.0 = [_143,_181.fld1,_42.fld4.2.0,_130];
place!(Field::<*const bool>(Variant(_181.fld0, 0), 3)) = _25;
_187 = _273;
_218 = _168;
_244 = [_69.1,_142,_196];
_94.fld2 = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,_95,_142,Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1];
_197.1 = _42.fld4.1.1 << _115.fld4;
_270 = -_85;
_236.fld2 = core::ptr::addr_of!(_85);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).4.1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.2;
place!(Field::<([i32; 4], u8)>(Variant(_195, 1), 6)).0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2.0,_21.fld1,_145.fld4,_176.fld1];
_124.2 = Field::<([i32; 2], i16, [i32; 4])>(Variant(_115.fld1, 1), 0).1 as u8;
Goto(bb120)
}
bb120 = {
_245 = -_188;
_255 = _203 + Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3).0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).4.1 = Field::<usize>(Variant(_195, 1), 7) as u8;
_234 = Adt51::Variant0 { fld0: _39,fld1: _28,fld2: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).4.0 };
_26 = _218.2 as isize;
_14 = !(*_217);
_265.1 = [_17,_17,_193,_117.2,_117.2,_20,_119.2];
_10 = Adt54::Variant0 { fld0: _263 };
SetDiscriminant(_195, 1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).1 = (_124.0, _42.fld4.1.1, _162.2);
_152 = [(*_175),(*_179),_159,_249,(*_175)];
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4.0;
SetDiscriminant(_234, 1);
_101.0 = -_156;
_162.0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.0;
_236.fld4.0 = _57.0;
Goto(bb121)
}
bb121 = {
SetDiscriminant(_115.fld1, 0);
Goto(bb122)
}
bb122 = {
_231 = _236.fld1.1;
_141 = Adt54::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2 };
_43.fld1 = Adt53::Variant1 { fld0: _69,fld1: _199,fld2: _75 };
_124.0 = _13;
place!(Field::<bool>(Variant(_195, 1), 0)) = _230 & (*_175);
_266 = _94;
_272 = _39;
_2 = -_270;
place!(Field::<*const bool>(Variant(_89, 0), 3)) = core::ptr::addr_of!(_132);
place!(Field::<usize>(Variant(_182, 0), 5)) = _78;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.4.1 = !_42.fld4.1.2;
_266.fld0 = [_236.fld1.0,Field::<i32>(Variant(_118, 2), 5),_5.0,_171];
_176.fld2 = _181.fld2 >> _133;
place!(Field::<([i32; 4], u8)>(Variant(_195, 1), 6)) = _57;
_92.1 = [_193,_117.2,_107,_117.2,_107,_17,_20];
Goto(bb123)
}
bb123 = {
_165.fld4 = !_241;
_21.fld0 = Adt48::Variant2 { fld0: _140,fld1: _86 };
_117.0 = _39;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)) = (_183, _196, _236.fld4.0);
place!(Field::<([i32; 4], u8)>(Variant(_89, 0), 0)) = (_94.fld0, _162.2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).2.0 = _44 as i32;
_42.fld6 = _178 + _57.1;
place!(Field::<i8>(Variant(_229, 0), 3)) = -_124.1;
_15 = Adt59 { fld0: Move(_21.fld0),fld1: _21.fld1,fld2: _181.fld2,fld3: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.1 };
_44 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.0;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2 = Adt48::Variant3 { fld0: _42.fld5,fld1: _162.0,fld2: _102,fld3: _25,fld4: _20,fld5: _117.1.0,fld6: Field::<[isize; 1]>(Variant(_7, 2), 5) };
_218.0 = _63;
_221 = Field::<u128>(Variant(_43.fld1, 1), 1) ^ _29;
Goto(bb124)
}
bb124 = {
_15.fld2 = !_125;
_264.0 = _212;
place!(Field::<u128>(Variant(_145.fld1, 1), 1)) = !_199;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4 = (_81.2, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1, Field::<(i32, f64)>(Variant(_141, 0), 0), (*_172), Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4);
place!(Field::<[isize; 1]>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 3), 6)) = Field::<[isize; 1]>(Variant(_182, 0), 6);
_264 = (_205.0, _101.1, _101.2);
Goto(bb125)
}
bb125 = {
_42.fld4.1 = _162;
place!(Field::<bool>(Variant(_182, 0), 0)) = !_18;
_21 = Adt59 { fld0: Move(_15.fld0),fld1: _208,fld2: _110,fld3: _213.1 };
_158 = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.1.2 as u16;
_105 = !_22;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.2 = _117.1;
_221 = _136 as u128;
_202 = _42.fld4.1.1;
_265.0 = _110 as f32;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_234, 1), 1)).0 = _188 as f32;
_15 = Adt59 { fld0: Move(Field::<Adt49>(Variant(_115.fld1, 0), 3).fld2),fld1: _120,fld2: _158,fld3: _21.fld3 };
_200 = Field::<*const u16>(Variant(_21.fld0, 2), 0);
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld6 = Field::<(char, i8, u8)>(Variant(_9, 1), 0).2;
Goto(bb126)
}
bb126 = {
_176.fld3 = Field::<u128>(Variant(_145.fld1, 1), 1) as i8;
_39 = [_65,_65,_99,_65];
_59 = Field::<char>(Variant(_15.fld0, 3), 1);
_42.fld0 = [_164,_164];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).0 = Field::<u64>(Variant(_229, 0), 2) as f32;
(*_172) = [Field::<usize>(Variant(_182, 0), 5),_42.fld1,_78,_42.fld1,Field::<usize>(Variant(_182, 0), 5),_78];
_61 = !_92.2;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).0 = _181.fld2 as i32;
_51 = [_75,Field::<u64>(Variant(_229, 0), 2),Field::<u64>(Variant(_229, 0), 2),Field::<u64>(Variant(_229, 0), 2)];
SetDiscriminant(_15.fld0, 2);
_106 = _136 as u8;
_58 = [_99,_65,_99,_65,_166,_65,_65];
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)) = Adt49 { fld0: _243.fld0,fld1: _42.fld1,fld2: Move(_21.fld0),fld3: _42.fld3,fld4: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6),fld5: Field::<[bool; 5]>(Variant(_229, 0), 6),fld6: _102.0.1 };
_106 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4.1;
SetDiscriminant(_10, 1);
_42.fld4.4 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).4;
place!(Field::<*const u16>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 2), 0)) = core::ptr::addr_of!(_110);
_146.fld0 = _184.fld0;
SetDiscriminant(Field::<Adt49>(Variant(_115.fld1, 0), 3).fld2, 1);
Call(_241 = core::intrinsics::transmute(_171), bb127, UnwindUnreachable())
}
bb127 = {
_110 = _176.fld2 - _158;
_265.1 = [_193,_20,_119.2,_17,_20,_17,_17];
Call(_263.1 = core::intrinsics::fmaf64(_42.fld4.2.1, _232.1, Field::<(i32, f64)>(Variant(_141, 0), 0).1), bb128, UnwindUnreachable())
}
bb128 = {
_218.1 = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1 as i8;
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.2;
_266.fld0 = [_115.fld4,_181.fld1,_228.fld4,_43.fld4];
place!(Field::<([i32; 4], u8)>(Variant(_181.fld0, 0), 0)) = (_266.fld0, Field::<(char, i8, u8)>(Variant(_9, 1), 0).2);
place!(Field::<[isize; 1]>(Variant(_42.fld2, 2), 1)) = Field::<[isize; 1]>(Variant(_7, 2), 5);
place!(Field::<u128>(Variant(_43.fld1, 1), 1)) = !_29;
place!(Field::<[u16; 3]>(Variant(_68, 1), 1)) = [(*_140),_125,(*_140)];
place!(Field::<[i32; 2]>(Variant(_234, 1), 7)) = _225;
place!(Field::<[usize; 6]>(Variant(_7, 2), 2)) = (*_172);
_289 = _177;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).2.1 = _113.1 * _117.1.1;
_250 = _259;
_236.fld3.1 = _196 * _142;
_123.1 = [_17,_17,_193,_193,_117.2,_119.2,_20];
place!(Field::<[i16; 4]>(Variant(_118, 2), 1)) = [Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,_95,_69.1,_45];
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).1 = _156 as i8;
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0)).0 = Field::<[i32; 2]>(Variant(_234, 1), 7);
place!(Field::<(i32, f64)>(Variant(_195, 1), 1)).0 = _95 as i32;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.4 = (Field::<([i32; 4], u8)>(Variant(_131, 0), 1).0, _168.2);
Goto(bb129)
}
bb129 = {
_229 = Adt50::Variant2 { fld0: _51,fld1: _129,fld2: _180,fld3: _52,fld4: _189,fld5: _246,fld6: _42.fld4 };
_11 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).2.1;
_70 = -_77;
_284 = !_162.1;
_147 = Move(_229);
_176.fld0 = Adt48::Variant1 { fld0: _209 };
place!(Field::<[isize; 1]>(Variant(_15.fld0, 2), 1)) = [_259];
_29 = !_169;
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)) = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.4;
(*_175) = _98 == _101.0;
place!(Field::<i32>(Variant(_115.fld1, 0), 0)) = _176.fld1;
place!(Field::<i8>(Variant(_131, 0), 3)) = -Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1;
_168.1 = -_202;
_42.fld3 = core::ptr::addr_of!(_126);
place!(Field::<[usize; 6]>(Variant(_131, 0), 4)) = Field::<[usize; 6]>(Variant(_7, 2), 2);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0)).0 = _183;
_195 = Adt50::Variant2 { fld0: Field::<[u64; 4]>(Variant(_118, 2), 0),fld1: Field::<[i16; 4]>(Variant(_147, 2), 1),fld2: _144,fld3: Field::<[u64; 2]>(Variant(_118, 2), 3),fld4: _183,fld5: Field::<(i32, f64)>(Variant(_141, 0), 0).0,fld6: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6) };
_50 = Field::<isize>(Variant(_147, 2), 2);
_81.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.0;
_293 = _157;
_228.fld2 = !_65;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.2.0 = _120 & _165.fld4;
Goto(bb130)
}
bb130 = {
SetDiscriminant(_195, 1);
_135 = (*_191);
_185 = core::ptr::addr_of_mut!(_46);
_275 = _61 >= _264.2;
_124.2 = !_72;
_117.2 = _119.2;
place!(Field::<[i32; 2]>(Variant(_118, 2), 4)) = [_5.0,_21.fld1];
_127 = [_194.fld2,(*_200),_176.fld2];
Goto(bb131)
}
bb131 = {
place!(Field::<bool>(Variant(_111, 1), 0)) = !_210;
_42.fld4.2.0 = _241 ^ Field::<(i32, f64)>(Variant(_35, 0), 0).0;
_309 = -_98;
_148 = -_70;
_76 = core::ptr::addr_of_mut!(_215);
place!(Field::<[isize; 1]>(Variant(_182, 0), 6)) = [_270];
place!(Field::<[i16; 4]>(Variant(_181.fld0, 0), 1)) = [_45,_69.1,_69.1,_236.fld3.1];
place!(Field::<*const *const isize>(Variant(_112, 2), 0)) = _138;
_68 = _141;
_317.4.1 = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld6;
_284 = !_213.1;
_248 = _83;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).2 = (Field::<i32>(Variant(_118, 2), 5), _11);
place!(Field::<u128>(Variant(_145.fld1, 1), 1)) = _120 as u128;
Goto(bb132)
}
bb132 = {
_124 = _162;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).0, _162, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).3, Field::<([i32; 4], u8)>(Variant(_89, 0), 0));
_162.1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1;
_165.fld1 = Adt53::Variant1 { fld0: Field::<([i32; 2], i16, [i32; 4])>(Variant(_43.fld1, 1), 0),fld1: _169,fld2: Field::<u64>(Variant(_43.fld1, 1), 2) };
_67.1 = _233;
_155 = [_164,Field::<u64>(Variant(_165.fld1, 1), 2),_164,_164];
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)) = (_134, _42.fld4.1.1, _42.fld6);
_317.1.2 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).1.2;
SetDiscriminant(_112, 1);
_301 = _74 + _32;
place!(Field::<(i32, f64)>(Variant(_141, 0), 0)).0 = _62 as i32;
_271 = !(*_175);
Goto(bb133)
}
bb133 = {
_296 = [_2];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).1.1 = _218.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).1 = (_102.1, _194.fld3, _236.fld4.1);
place!(Field::<bool>(Variant(_176.fld0, 1), 0)) = Field::<bool>(Variant(_111, 1), 0);
_248 = !_74;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).4.0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).4.0;
_89 = Adt48::Variant3 { fld0: _152,fld1: _124.0,fld2: _81,fld3: Field::<*const bool>(Variant(_181.fld0, 0), 3),fld4: _20,fld5: _15.fld1,fld6: _86 };
place!(Field::<isize>(Variant(_147, 2), 2)) = _62;
Goto(bb134)
}
bb134 = {
_178 = _81.0.1 >> _34;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld3 = core::ptr::addr_of!(_126);
place!(Field::<usize>(Variant(_182, 0), 5)) = _78;
_247 = _28 as isize;
_280 = (*_140);
_49 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1;
place!(Field::<bool>(Variant(_7, 2), 0)) = _135 | Field::<bool>(Variant(_111, 1), 0);
SetDiscriminant(_43.fld1, 2);
place!(Field::<u64>(Variant(_43.fld1, 2), 4)) = _136 as u64;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(_89, 3), 2)).3 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).1.1,_53];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)) = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).2.0 = _107 as i32;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).1 = -_284;
_292 = [_171,_119.1.0,_113.0,_143];
_239 = core::ptr::addr_of!(_249);
_314 = _217;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2 = Move(_89);
RET = Adt58::Variant1 { fld0: _138 };
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).4 = (_236.fld3.2, Field::<Adt49>(Variant(_115.fld1, 0), 3).fld6);
_92.2 = !_123.2;
_92 = (_156, _114, _133);
_93 = _21.fld1;
_115.fld3 = Move(RET);
place!(Field::<[u64; 2]>(Variant(_147, 2), 3)) = [_75,_75];
_231 = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.2.1;
Goto(bb135)
}
bb135 = {
_173 = _91 << _28;
_22 = _117.2 == _117.2;
_263 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2;
_317.1.0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).1.0;
_117.1 = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).2.0, _137);
SetDiscriminant(_111, 0);
(*_140) = (*_217) as u16;
place!(Field::<[i32; 2]>(Variant(_147, 2), 4)) = [Field::<i32>(Variant(_118, 2), 5),Field::<(i32, f64)>(Variant(_141, 0), 0).0];
_303 = [_21.fld1,_228.fld4];
_238 = _58;
_119 = (_117.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).2, _20);
_266.fld0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).4.0;
Call(_82 = core::intrinsics::transmute(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).4.0), bb136, UnwindUnreachable())
}
bb136 = {
place!(Field::<i8>(Variant(_112, 1), 3)) = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.1;
_124.0 = _88;
place!(Field::<Adt51>(Variant(_43.fld1, 2), 0)) = Adt51::Variant2 { fld0: _138 };
SetDiscriminant(Field::<Adt49>(Variant(_115.fld1, 0), 3).fld2, 3);
_123.2 = _220.2;
_42.fld4.1.1 = !_168.1;
(*_191) = !_18;
Goto(bb137)
}
bb137 = {
_124 = _42.fld4.1;
_332.fld2 = [_236.fld3.1,_236.fld3.1,_196,_196];
_298 = _37;
_143 = _176.fld1;
_330 = _124.0;
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)).0 = _165.fld4 * _165.fld4;
place!(Field::<([i32; 4], u8)>(Variant(_195, 1), 6)) = (Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).2, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6).4.1);
place!(Field::<([i32; 2], i16, [i32; 4])>(Variant(_165.fld1, 1), 0)).2 = _94.fld0;
_31 = _102.1;
place!(Field::<i32>(Variant(_131, 0), 5)) = _42.fld4.2.0;
_84 = [_166,_99,_65,_99,_99,_166,_166];
_194.fld0 = Adt48::Variant2 { fld0: _140,fld1: Field::<[isize; 1]>(Variant(_182, 0), 6) };
_236.fld1.1 = _119.1.1 * _232.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).4.0 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).2.0,_208,_42.fld4.2.0,_263.0];
_278 = _193 >> Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6).2.0;
Goto(bb138)
}
bb138 = {
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld1 = _28;
place!(Field::<[bool; 5]>(Variant(_112, 1), 6)) = Field::<[bool; 5]>(Variant(_182, 0), 3);
place!(Field::<i32>(Variant(_118, 2), 5)) = _231 as i32;
_165.fld1 = Adt53::Variant2 { fld0: Field::<Adt51>(Variant(_43.fld1, 2), 0),fld1: Field::<(char, i8, u8)>(Variant(_9, 1), 0).0,fld2: _125,fld3: _127,fld4: _164,fld5: Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4 };
_254 = _301 * _144;
_272 = [_228.fld2,_166,_166,_228.fld2];
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).1 = _218.1 + Field::<(char, i8, u8)>(Variant(_9, 1), 0).1;
SetDiscriminant(_194.fld0, 0);
_212 = _309;
_5.1 = _119.1.0 as f64;
_124.0 = _168.0;
_32 = (*_217);
_179 = _25;
place!(Field::<i16>(Variant(_115.fld1, 0), 1)) = Field::<usize>(Variant(_182, 0), 5) as i16;
_213.1 = _142 as i8;
_145.fld4 = _42.fld4.2.0;
_150 = _85 & _167;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_118, 2), 6)).1.2 = _177;
Call(place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_147, 2), 6)).1.1 = core::intrinsics::transmute(_102.0.1), bb139, UnwindUnreachable())
}
bb139 = {
_13 = _218.0;
_157 = _85;
place!(Field::<i8>(Variant(_112, 1), 3)) = _21.fld2 as i8;
(*_175) = !_18;
_45 = !_142;
Goto(bb140)
}
bb140 = {
_236.fld6 = Move(_115.fld3);
_335 = _153;
place!(Field::<[u64; 4]>(Variant(_118, 2), 0)) = [Field::<u64>(Variant(_43.fld1, 2), 4),_164,Field::<u64>(Variant(_165.fld1, 2), 4),_75];
_110 = _158;
place!(Field::<(i32, f64)>(Variant(_141, 0), 0)).1 = -_148;
_332.fld0 = [_232.0,_67.0,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.2.0,_5.0];
_118 = Move(_147);
place!(Field::<i8>(Variant(_195, 1), 3)) = Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.1.1;
_272 = [_99,_166,_166,_65];
Call(place!(Field::<u64>(Variant(_195, 1), 2)) = core::intrinsics::transmute(_85), bb141, UnwindUnreachable())
}
bb141 = {
_43.fld4 = _93;
_213 = _42.fld4.1;
_99 = _65;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_234, 1), 1)).1 = [_17,_119.2,_20,_119.2,_117.2,_20,_20];
_129 = [Field::<i16>(Variant(_115.fld1, 0), 1),_142,_95,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1];
_312 = !(*_25);
_135 = !(*_25);
_270 = _85 * _91;
_5 = (_117.1.0, _67.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).4.1 = _81.0.1 ^ _42.fld4.4.1;
_317.0 = _129;
_213 = (_13, _124.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5).4.1);
_266.fld1 = _20 as i128;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).1 = (_213.0, _284, _81.0.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).4.0 = _236.fld4.0;
place!(Field::<Adt51>(Variant(_165.fld1, 2), 0)) = Field::<Adt51>(Variant(_43.fld1, 2), 0);
_156 = _95 as f32;
_42.fld2 = Adt48::Variant0 { fld0: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5).4,fld1: Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5).0,fld2: _174,fld3: _179,fld4: _17 };
SetDiscriminant(_9, 1);
SetDiscriminant(Field::<Adt51>(Variant(_43.fld1, 2), 0), 0);
_263 = _67;
_348 = [_196,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1,Field::<([i32; 2], i16, [i32; 4])>(Variant(_145.fld1, 1), 0).1];
(*_76) = (*_185);
(*_37) = [_136,_28,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,Field::<usize>(Variant(_182, 0), 5),_136,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1];
place!(Field::<[bool; 5]>(Variant(_131, 0), 6)) = [_271,(*_239),_116,(*_179),_209];
place!(Field::<[i16; 4]>(Variant(_112, 1), 2)) = [_142,_142,_142,_236.fld3.1];
Call(_328.1 = core::intrinsics::fmaf64(Field::<f64>(Variant(_131, 0), 0), _236.fld1.1, _231), bb142, UnwindUnreachable())
}
bb142 = {
_279 = _86;
SetDiscriminant(_165.fld1, 2);
_65 = _110 as i64;
_95 = Field::<(i32, f64)>(Variant(_68, 0), 0).0 as i16;
_77 = -_5.1;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_112, 1), 1)) = (_64, _92.1, _101.2);
_316 = _233 + _42.fld4.2.1;
_128 = !Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.4.1;
place!(Field::<u32>(Variant(_194.fld0, 0), 4)) = _193 << _26;
_214 = _236.fld3.1 as f32;
_145.fld1 = Adt53::Variant0 { fld0: _241,fld1: _196,fld2: _155,fld3: Move(_42) };
_42.fld4.1 = (Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.1.0, _21.fld3, _177);
place!(Field::<u128>(Variant(_182, 0), 1)) = !_29;
_100 = [_99,_228.fld2,_65,_166,_228.fld2,_99,_166];
_123 = (_212, _114, _61);
_249 = Field::<bool>(Variant(_7, 2), 0);
_341 = [(*_191),(*_25),Field::<bool>(Variant(_176.fld0, 1), 0),Field::<bool>(Variant(_176.fld0, 1), 0),_215,_215];
_339.2 = [_95,_142,_142,_95];
place!(Field::<u128>(Variant(_181.fld0, 0), 2)) = Field::<u32>(Variant(_194.fld0, 0), 4) as u128;
place!(Field::<char>(Variant(_165.fld1, 2), 1)) = _139;
place!(Field::<i32>(Variant(_118, 2), 5)) = _208 * _241;
_109 = _161;
_40 = (*_191);
_101.1 = [_278,_278,Field::<u32>(Variant(_194.fld0, 0), 4),Field::<u32>(Variant(_194.fld0, 0), 4),_278,_193,_117.2];
place!(Field::<[usize; 6]>(Variant(_131, 0), 4)) = [Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,_28,_136,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,_28];
_351 = Field::<u128>(Variant(_181.fld0, 0), 2) as f32;
Goto(bb143)
}
bb143 = {
Goto(bb144)
}
bb144 = {
_273 = _251 - _259;
place!(Field::<[bool; 5]>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 3), 0)) = [_135,(*_179),_132,_105,_215];
_50 = _62;
_236.fld1.0 = (*_140) as i32;
_278 = _194.fld2 as u32;
place!(Field::<[isize; 1]>(Variant(_15.fld0, 2), 1)) = [_74];
_326 = _166 as u32;
_215 = _69.1 < _236.fld3.1;
_21.fld0 = Adt48::Variant1 { fld0: _230 };
_15.fld2 = _107 as u16;
SetDiscriminant(_236.fld6, 0);
_213.2 = !Field::<(char, i8, u8)>(Variant(_30, 1), 0).2;
Goto(bb145)
}
bb145 = {
place!(Field::<([i32; 4], u8)>(Variant(_131, 0), 1)).1 = _117.2 as u8;
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).0 = _88;
place!(Field::<Adt48>(Variant(_7, 2), 1)) = Adt48::Variant1 { fld0: _159 };
_232.1 = -_70;
_11 = _232.1;
Goto(bb146)
}
bb146 = {
_317.1 = (_13, _218.1, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).4.1);
SetDiscriminant(_21.fld0, 1);
_197.2 = Field::<([i32; 4], u8)>(Variant(_195, 1), 6).1 << _78;
_294 = _141;
SetDiscriminant(_118, 0);
_352.fld1 = _136;
_176.fld2 = _62 as u16;
Goto(bb147)
}
bb147 = {
place!(Field::<u128>(Variant(_182, 0), 1)) = Field::<u128>(Variant(Field::<Adt49>(Variant(_145.fld1, 0), 3).fld2, 0), 2);
_352.fld6 = _213.2;
_224 = !_144;
place!(Field::<([i64; 4], (i32, f64), u32)>(Variant(_234, 1), 4)) = (_117.0, _113, _193);
_42.fld6 = Field::<Adt49>(Variant(_145.fld1, 0), 3).fld6;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).4.0 = [_208,_143,Field::<(i32, f64)>(Variant(_35, 0), 0).0,_67.0];
_352.fld4.2 = (_246, Field::<(i32, f64)>(Variant(_68, 0), 0).1);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_234, 1), 1)).0 = Field::<(f32, [u32; 7], i128)>(Variant(_112, 1), 1).0;
_321 = (_236.fld3.2, _72);
_306 = Field::<(f32, [u32; 7], i128)>(Variant(_112, 1), 1).2;
_208 = _246;
_126 = _309 as u16;
_352.fld0 = _243.fld0;
_212 = _352.fld4.2.1 as f32;
Goto(bb148)
}
bb148 = {
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld0 = [_164,_75];
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)) = _119.1;
_322 = Field::<*const bool>(Variant(_181.fld0, 0), 3);
_240 = !_45;
_220.0 = _8 - _265.0;
(*_185) = _105;
Goto(bb149)
}
bb149 = {
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 3), 2)).3 = _87;
_352.fld4.3 = [Field::<Adt49>(Variant(_145.fld1, 0), 3).fld1,_136,_28,_78,_78,_352.fld1];
_273 = _259;
_73 = Adt50::Variant2 { fld0: _155,fld1: _317.0,fld2: _50,fld3: Field::<Adt49>(Variant(_115.fld1, 0), 3).fld0,fld4: _303,fld5: _143,fld6: Field::<Adt49>(Variant(_145.fld1, 0), 3).fld4 };
_276 = _5.1;
_307 = (_232.0, _119.1.1);
_205.0 = -_123.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).2.0 = Field::<(i32, f64)>(Variant(_68, 0), 0).0;
place!(Field::<(([i32; 4], u8), char, [i16; 4], [i8; 2])>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 3), 2)).1 = _124.0;
_235 = Adt51::Variant1 { fld0: _22,fld1: _123,fld2: _129,fld3: _284,fld4: _117,fld5: _119.0,fld6: Field::<Adt49>(Variant(_145.fld1, 0), 3).fld5,fld7: _189 };
Goto(bb150)
}
bb150 = {
place!(Field::<[u16; 3]>(Variant(_43.fld1, 2), 3)) = [(*_140),_181.fld2,(*_140)];
_115.fld1 = Move(_145.fld1);
(*_25) = !_215;
_245 = -Field::<i8>(Variant(_235, 1), 3);
_23 = _255 * _351;
_339.0 = (_81.0.0, _317.1.2);
place!(Field::<(f32, [u32; 7], i128)>(Variant(_112, 1), 1)).0 = Field::<(f32, [u32; 7], i128)>(Variant(_235, 1), 1).0 - _98;
place!(Field::<u64>(Variant(_118, 0), 2)) = !_75;
_284 = _15.fld2 as i8;
_362.0.0 = Field::<([i32; 4], u8)>(Variant(_181.fld0, 0), 0).0;
_339.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.0;
place!(Field::<u128>(Variant(_111, 0), 2)) = Field::<(char, i8, u8)>(Variant(_30, 1), 0).1 as u128;
_352.fld4.1.1 = _124.1;
place!(Field::<[bool; 5]>(Variant(_118, 0), 6)) = [_40,Field::<bool>(Variant(_182, 0), 0),_271,(*_76),_132];
_153 = -_74;
_4 = -_144;
_304 = _24;
place!(Field::<([i32; 4], u8)>(Variant(place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2, 0), 0)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 2), 6).4.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).1.2);
_151 = _113.1 + Field::<(i32, f64)>(Variant(_68, 0), 0).1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).2.1 = _119.1.1 - Field::<Adt49>(Variant(_115.fld1, 0), 3).fld4.2.1;
_339 = (_81.0, _139, Field::<[i16; 4]>(Variant(_112, 1), 2), _236.fld5);
_317.2.0 = Field::<i32>(Variant(_115.fld1, 0), 0) << _168.2;
_135 = _22;
(*_200) = _228.fld2 as u16;
Call(_247 = core::intrinsics::bswap(_250), bb151, UnwindUnreachable())
}
bb151 = {
_286 = _63 as isize;
_248 = _16;
_84 = [_228.fld2,_166,_65,_228.fld2,_228.fld2,_99,_65];
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.1.2 = _168.2 ^ Field::<Adt49>(Variant(_115.fld1, 0), 3).fld6;
_362.1 = _330;
_338 = _273;
place!(Field::<[bool; 5]>(Variant(_118, 0), 6)) = [(*_191),(*_322),(*_191),_105,(*_322)];
_312 = _72 != _213.2;
_181.fld0 = Adt48::Variant2 { fld0: _140,fld1: _296 };
place!(Field::<(f32, [u32; 7], i128)>(Variant(_235, 1), 1)).0 = _228.fld2 as f32;
_238 = _227;
_317.4 = _81.0;
_57.0 = [_93,_67.0,_119.1.0,_115.fld4];
_277 = _99 as f64;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_234, 1), 1)) = _264;
_14 = _85;
_362.0.0 = Field::<([i32; 4], u8)>(Variant(_195, 1), 6).0;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2 = Adt48::Variant3 { fld0: Field::<[bool; 5]>(Variant(_112, 1), 6),fld1: _59,fld2: _339,fld3: _179,fld4: _117.2,fld5: Field::<i32>(Variant(_73, 2), 5),fld6: _296 };
_204 = (*_239);
(*_172) = [_352.fld1,_78,_136,_352.fld1,Field::<usize>(Variant(_182, 0), 5),Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1];
Call(place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4)).1.1 = core::intrinsics::bswap(Field::<i8>(Variant(_131, 0), 3)), bb152, UnwindUnreachable())
}
bb152 = {
_124 = (_24, _42.fld4.1.1, _178);
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).0 = _31;
place!(Field::<([i32; 4], u8)>(Variant(_194.fld0, 0), 0)) = (_321.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).1.2);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).1.2 = _321.1;
_10 = Adt54::Variant1 { fld0: _124,fld1: _274 };
_15 = Adt59 { fld0: Move(Field::<Adt48>(Variant(_7, 2), 1)),fld1: _145.fld4,fld2: _181.fld2,fld3: _202 };
place!(Field::<(i32, f64)>(Variant(_68, 0), 0)).0 = _119.1.0 ^ _236.fld1.0;
_282 = Adt52::Variant1 { fld0: _204,fld1: _332.fld2,fld2: _5,fld3: _168.1,fld4: Field::<[u64; 4]>(Variant(_115.fld1, 0), 2),fld5: _109,fld6: _75,fld7: _122 };
_181.fld0 = Adt48::Variant0 { fld0: Field::<([i32; 4], u8)>(Variant(_131, 0), 1),fld1: _129,fld2: _170,fld3: _322,fld4: _326 };
_339.3 = _102.3;
place!(Field::<Adt51>(Variant(_182, 0), 2)) = _235;
place!(Field::<[i64; 4]>(Variant(_112, 1), 5)) = [_228.fld2,_99,_65,_166];
_176.fld3 = -Field::<i8>(Variant(_131, 0), 3);
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).1 = -_194.fld3;
_94.fld1 = _180 as i128;
Goto(bb153)
}
bb153 = {
_352.fld4.3 = [Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,Field::<Adt49>(Variant(_115.fld1, 0), 3).fld1,_352.fld1,_28,_352.fld1,_78];
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld2 = Adt48::Variant1 { fld0: (*_76) };
place!(Field::<(i32, f64)>(Variant(_195, 1), 1)).1 = _211 + _236.fld1.1;
place!(Field::<[usize; 6]>(Variant(_131, 0), 4)) = [_28,_136,_78,_28,_78,Field::<usize>(Variant(_182, 0), 5)];
_369 = [_196,_236.fld3.1];
_102.3 = _81.3;
_372 = core::ptr::addr_of!((*_138));
_17 = (*_175) as u32;
_338 = -_153;
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).1 = _136 as i8;
_117.1 = (_119.1.0, _113.1);
_42.fld0 = [_164,_75];
_189 = [_15.fld1,_241];
(*_179) = _18 & Field::<bool>(Variant(_176.fld0, 1), 0);
_42.fld3 = core::ptr::addr_of!(_110);
Goto(bb154)
}
bb154 = {
place!(Field::<[bool; 5]>(Variant(_182, 0), 3)) = [_159,(*_179),Field::<bool>(Variant(_182, 0), 0),(*_322),_312];
place!(Field::<(i32, f64)>(Variant(_35, 0), 0)) = (_120, _211);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).2.1 = _224 as f64;
_42.fld4.2 = _5;
_325 = core::ptr::addr_of_mut!(_102.3);
_243.fld0 = [Field::<u64>(Variant(_43.fld1, 2), 4),Field::<u64>(Variant(_195, 1), 2)];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5)).2.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_195, 1), 4).2.1 * Field::<(i32, f64)>(Variant(_294, 0), 0).1;
_297 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 2), 6).1.2 != Field::<([i32; 4], u8)>(Variant(_195, 1), 6).1;
(*_172) = [_28,_78,_28,Field::<usize>(Variant(_182, 0), 5),_352.fld1,_352.fld1];
_332.fld3 = _117.0;
_329 = _203;
place!(Field::<(char, i8, u8)>(Variant(_30, 1), 0)).0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).1.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).0 = [_142,Field::<i16>(Variant(_115.fld1, 0), 1),Field::<i16>(Variant(_115.fld1, 0), 1),_69.1];
_268 = !_209;
_264.2 = -_306;
_331 = (*_314);
_288 = _113.1 - _117.1.1;
place!(Field::<(i32, f64)>(Variant(_294, 0), 0)).0 = !_181.fld1;
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.1.2 = _317.4.1;
_354 = -Field::<(f32, [u32; 7], i128)>(Variant(_235, 1), 1).0;
place!(Field::<(char, i8, u8)>(Variant(_10, 1), 0)).1 = _228.fld2 as i8;
_241 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).2.0;
Goto(bb155)
}
bb155 = {
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).2 = _57.1 + _128;
_236.fld4.0 = [_119.1.0,Field::<(i32, f64)>(Variant(_35, 0), 0).0,_42.fld4.2.0,_5.0];
_332.fld1 = _264.2 * _264.2;
_191 = _27;
Goto(bb156)
}
bb156 = {
_341 = [_249,_275,(*_179),Field::<bool>(Variant(_176.fld0, 1), 0),_210,_249];
_153 = _85 | _254;
SetDiscriminant(_73, 1);
_206 = _205.1;
_378 = [_115.fld4,_263.0,Field::<(i32, f64)>(Variant(_294, 0), 0).0,_352.fld4.2.0];
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)).1 = _317.1.1 & _15.fld3;
place!(Field::<bool>(Variant(_182, 0), 0)) = !(*_185);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_73, 1), 4)).4.1 = _223 as u8;
(*_25) = !_18;
_353 = Adt54::Variant1 { fld0: _124,fld1: Field::<[u16; 3]>(Variant(_10, 1), 1) };
place!(Field::<u64>(Variant(_73, 1), 2)) = _164 + _75;
_346.fld2 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).0;
place!(Field::<(f32, [u32; 7], i128)>(Variant(_234, 1), 1)).2 = !_306;
_232.1 = _211 * Field::<(i32, f64)>(Variant(_141, 0), 0).1;
_300 = -_205.0;
_220.0 = _3;
_373 = _92.0 + _23;
place!(Field::<(i32, f64)>(Variant(_195, 1), 1)) = (Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_43.fld1, 2), 5).2.0, _77);
_361 = (_292, _218.2);
_117.2 = _326;
_280 = _263.1 as u16;
Goto(bb157)
}
bb157 = {
SetDiscriminant(_282, 1);
_181.fld1 = _168.0 as i32;
_149 = [Field::<u32>(Variant(_181.fld0, 0), 4),_326,_193,_193,Field::<u32>(Variant(_194.fld0, 0), 4),_20,_17];
_94.fld0 = [_176.fld1,_236.fld1.0,_42.fld4.2.0,_246];
place!(Field::<i8>(Variant(_234, 1), 3)) = _126 as i8;
_265.0 = _228.fld2 as f32;
_5 = (_119.1.0, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5).2.1);
place!(Field::<([i32; 4], u8)>(Variant(_118, 0), 1)).1 = Field::<u64>(Variant(_118, 0), 2) as u8;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).2 = (_93, _232.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_165.fld1, 2), 5)).3 = [_136,_78,_78,_28,Field::<usize>(Variant(_182, 0), 5),_136];
_285 = (*_372);
place!(Field::<Adt49>(Variant(_115.fld1, 0), 3)).fld4.1.0 = _31;
_362.0.1 = _42.fld4.1.2 >> Field::<i8>(Variant(_234, 1), 3);
_109 = [_45,_236.fld3.1,_142];
place!(Field::<(f32, [u32; 7], i128)>(Variant(_7, 2), 3)).1 = [_119.2,_20,_119.2,_193,_193,_117.2,_193];
_232.1 = -_117.1.1;
_217 = core::ptr::addr_of!(_121);
_340 = [_2];
_145.fld3 = Adt58::Variant1 { fld0: _138 };
_88 = _24;
_265.0 = -_101.0;
_206 = [_326,Field::<u32>(Variant(_194.fld0, 0), 4),_20,Field::<u32>(Variant(_194.fld0, 0), 4),_20,_20,_17];
_61 = _210 as i128;
RET = Move(_145.fld3);
Goto(bb158)
}
bb158 = {
Call(_388 = dump_var(15_usize, 230_usize, Move(_230), 197_usize, Move(_197), 16_usize, Move(_16), 107_usize, Move(_107)), bb159, UnwindUnreachable())
}
bb159 = {
Call(_388 = dump_var(15_usize, 82_usize, Move(_82), 54_usize, Move(_54), 326_usize, Move(_326), 369_usize, Move(_369)), bb160, UnwindUnreachable())
}
bb160 = {
Call(_388 = dump_var(15_usize, 221_usize, Move(_221), 153_usize, Move(_153), 2_usize, Move(_2), 134_usize, Move(_134)), bb161, UnwindUnreachable())
}
bb161 = {
Call(_388 = dump_var(15_usize, 28_usize, Move(_28), 97_usize, Move(_97), 100_usize, Move(_100), 57_usize, Move(_57)), bb162, UnwindUnreachable())
}
bb162 = {
Call(_388 = dump_var(15_usize, 86_usize, Move(_86), 161_usize, Move(_161), 18_usize, Move(_18), 66_usize, Move(_66)), bb163, UnwindUnreachable())
}
bb163 = {
Call(_388 = dump_var(15_usize, 143_usize, Move(_143), 87_usize, Move(_87), 52_usize, Move(_52), 335_usize, Move(_335)), bb164, UnwindUnreachable())
}
bb164 = {
Call(_388 = dump_var(15_usize, 170_usize, Move(_170), 106_usize, Move(_106), 22_usize, Move(_22), 65_usize, Move(_65)), bb165, UnwindUnreachable())
}
bb165 = {
Call(_388 = dump_var(15_usize, 209_usize, Move(_209), 169_usize, Move(_169), 13_usize, Move(_13), 41_usize, Move(_41)), bb166, UnwindUnreachable())
}
bb166 = {
Call(_388 = dump_var(15_usize, 174_usize, Move(_174), 14_usize, Move(_14), 88_usize, Move(_88), 348_usize, Move(_348)), bb167, UnwindUnreachable())
}
bb167 = {
Call(_388 = dump_var(15_usize, 271_usize, Move(_271), 293_usize, Move(_293), 189_usize, Move(_189), 1_usize, Move(_1)), bb168, UnwindUnreachable())
}
bb168 = {
Call(_388 = dump_var(15_usize, 168_usize, Move(_168), 306_usize, Move(_306), 31_usize, Move(_31), 272_usize, Move(_272)), bb169, UnwindUnreachable())
}
bb169 = {
Call(_388 = dump_var(15_usize, 227_usize, Move(_227), 130_usize, Move(_130), 268_usize, Move(_268), 74_usize, Move(_74)), bb170, UnwindUnreachable())
}
bb170 = {
Call(_388 = dump_var(15_usize, 241_usize, Move(_241), 166_usize, Move(_166), 225_usize, Move(_225), 51_usize, Move(_51)), bb171, UnwindUnreachable())
}
bb171 = {
Call(_388 = dump_var(15_usize, 208_usize, Move(_208), 84_usize, Move(_84), 301_usize, Move(_301), 90_usize, Move(_90)), bb172, UnwindUnreachable())
}
bb172 = {
Call(_388 = dump_var(15_usize, 167_usize, Move(_167), 149_usize, Move(_149), 254_usize, Move(_254), 152_usize, Move(_152)), bb173, UnwindUnreachable())
}
bb173 = {
Call(_388 = dump_var(15_usize, 109_usize, Move(_109), 273_usize, Move(_273), 238_usize, Move(_238), 144_usize, Move(_144)), bb174, UnwindUnreachable())
}
bb174 = {
Call(_388 = dump_var(15_usize, 240_usize, Move(_240), 19_usize, Move(_19), 120_usize, Move(_120), 75_usize, Move(_75)), bb175, UnwindUnreachable())
}
bb175 = {
Call(_388 = dump_var(15_usize, 259_usize, Move(_259), 32_usize, Move(_32), 178_usize, Move(_178), 331_usize, Move(_331)), bb176, UnwindUnreachable())
}
bb176 = {
Call(_388 = dump_var(15_usize, 121_usize, Move(_121), 71_usize, Move(_71), 40_usize, Move(_40), 157_usize, Move(_157)), bb177, UnwindUnreachable())
}
bb177 = {
Call(_388 = dump_var(15_usize, 224_usize, Move(_224), 247_usize, Move(_247), 275_usize, Move(_275), 162_usize, Move(_162)), bb178, UnwindUnreachable())
}
bb178 = {
Call(_388 = dump_var(15_usize, 93_usize, Move(_93), 330_usize, Move(_330), 218_usize, Move(_218), 204_usize, Move(_204)), bb179, UnwindUnreachable())
}
bb179 = {
Call(_388 = dump_var(15_usize, 297_usize, Move(_297), 270_usize, Move(_270), 223_usize, Move(_223), 248_usize, Move(_248)), bb180, UnwindUnreachable())
}
bb180 = {
Call(_388 = dump_var(15_usize, 69_usize, Move(_69), 284_usize, Move(_284), 274_usize, Move(_274), 110_usize, Move(_110)), bb181, UnwindUnreachable())
}
bb181 = {
Call(_388 = dump_var(15_usize, 46_usize, Move(_46), 45_usize, Move(_45), 304_usize, Move(_304), 280_usize, Move(_280)), bb182, UnwindUnreachable())
}
bb182 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: (i32, f64),mut _2: i32,mut _3: i32,mut _4: (i32, f64),mut _5: isize,mut _6: Adt54,mut _7: (i32, f64),mut _8: (i32, f64),mut _9: isize,mut _10: *const bool,mut _11: isize,mut _12: f64) -> bool {
mir! {
type RET = bool;
let _13: isize;
let _14: isize;
let _15: f32;
let _16: f64;
let _17: f64;
let _18: u128;
let _19: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8));
let _20: isize;
let _21: u128;
let _22: u16;
let _23: isize;
let _24: i64;
let _25: i128;
let _26: Adt63;
let _27: u8;
let _28: ();
let _29: ();
{
_11 = 9112314508578014951_i64 as isize;
_8 = (_3, _7.1);
_13 = _5 - _9;
_8 = (_3, _7.1);
SetDiscriminant(_6, 1);
_1.1 = 43249_u16 as f64;
_1.0 = _2;
_4.0 = _2;
_1 = (_3, _8.1);
Goto(bb1)
}
bb1 = {
_14 = _9;
_6 = Adt54::Variant0 { fld0: _8 };
RET = false | false;
_7 = (Field::<(i32, f64)>(Variant(_6, 0), 0).0, _1.1);
SetDiscriminant(_6, 0);
_2 = _7.0;
RET = false;
Goto(bb2)
}
bb2 = {
_7 = (_4.0, _1.1);
_13 = _9 ^ _9;
_19.4.0 = [_2,_3,_1.0,_1.0];
_18 = 7394620381225178792041030904701965977_u128;
match _18 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
7394620381225178792041030904701965977 => bb9,
_ => bb8
}
}
bb3 = {
_14 = _9;
_6 = Adt54::Variant0 { fld0: _8 };
RET = false | false;
_7 = (Field::<(i32, f64)>(Variant(_6, 0), 0).0, _1.1);
SetDiscriminant(_6, 0);
_2 = _7.0;
RET = false;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_19.2.0 = 53963_u16 as i32;
RET = _4.0 < _3;
_16 = _1.1;
_19.3 = [2625124083667020031_usize,5_usize,0_usize,9828829971760254425_usize,2490726679344144338_usize,7_usize];
_19.1.1 = 16_i8 ^ 53_i8;
place!(Field::<(i32, f64)>(Variant(_6, 0), 0)) = (_7.0, _7.1);
_2 = _8.0;
SetDiscriminant(_6, 0);
_19.1 = ('\u{2380}', 43_i8, 139_u8);
place!(Field::<(i32, f64)>(Variant(_6, 0), 0)).1 = _1.1;
_8.0 = (-27102_i16) as i32;
_15 = 10184_i16 as f32;
_3 = _2;
place!(Field::<(i32, f64)>(Variant(_6, 0), 0)) = (_2, _8.1);
_7.1 = Field::<(i32, f64)>(Variant(_6, 0), 0).1 - _1.1;
_20 = _18 as isize;
_19.2.1 = _16;
_16 = _7.1;
_19.1.2 = 14675485236667918120_u64 as u8;
_11 = _14 * _13;
place!(Field::<(i32, f64)>(Variant(_6, 0), 0)).0 = 2_usize as i32;
_18 = 150603035365326995347789379340837442280_u128;
_8.0 = -_7.0;
_10 = core::ptr::addr_of!(RET);
_7 = _8;
Goto(bb10)
}
bb10 = {
Call(_28 = dump_var(16_usize, 5_usize, Move(_5), 20_usize, Move(_20), 11_usize, Move(_11), 14_usize, Move(_14)), bb11, UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: u32,mut _2: [bool; 5],mut _3: u32,mut _4: bool,mut _5: u32,mut _6: bool,mut _7: isize,mut _8: bool,mut _9: Adt54) -> Adt54 {
mir! {
type RET = Adt54;
let _10: f32;
let _11: isize;
let _12: [i16; 2];
let _13: [u16; 3];
let _14: Adt61;
let _15: *const *const isize;
let _16: ();
let _17: ();
{
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = _7 as f64;
_6 = _4;
RET = _9;
RET = _9;
RET = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_9, 0), 0) };
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)).0 = !Field::<(i32, f64)>(Variant(_9, 0), 0).0;
_2 = [_8,_6,_6,_8,_4];
RET = _9;
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)).0 = !Field::<(i32, f64)>(Variant(_9, 0), 0).0;
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)) = (Field::<(i32, f64)>(Variant(_9, 0), 0).0, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
SetDiscriminant(RET, 1);
_3 = _1;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).1 = 219_u8 as f64;
place!(Field::<[u16; 3]>(Variant(RET, 1), 1)) = [49621_u16,32547_u16,52055_u16];
_4 = _8 & _8;
_5 = _3;
place!(Field::<(char, i8, u8)>(Variant(RET, 1), 0)).0 = '\u{e5cc6}';
_8 = _6;
place!(Field::<(char, i8, u8)>(Variant(RET, 1), 0)).0 = '\u{af217}';
place!(Field::<(char, i8, u8)>(Variant(RET, 1), 0)).2 = _5 as u8;
_5 = _3 - _3;
_8 = _5 >= _3;
place!(Field::<[u16; 3]>(Variant(RET, 1), 1)) = [63591_u16,12471_u16,15834_u16];
Call(place!(Field::<(char, i8, u8)>(Variant(RET, 1), 0)).1 = core::intrinsics::transmute(_8), bb1, UnwindUnreachable())
}
bb1 = {
RET = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_9, 0), 0) };
_9 = RET;
_4 = !_6;
_10 = 751_i16 as f32;
place!(Field::<(i32, f64)>(Variant(RET, 0), 0)).0 = Field::<(i32, f64)>(Variant(_9, 0), 0).0 + Field::<(i32, f64)>(Variant(_9, 0), 0).0;
RET = _9;
_13 = [45449_u16,44450_u16,34008_u16];
_12 = [30200_i16,22333_i16];
_6 = !_4;
Goto(bb2)
}
bb2 = {
Call(_16 = dump_var(17_usize, 12_usize, Move(_12), 3_usize, Move(_3), 1_usize, Move(_1), 2_usize, Move(_2)), bb3, UnwindUnreachable())
}
bb3 = {
Call(_16 = dump_var(17_usize, 5_usize, Move(_5), 17_usize, _17, 17_usize, _17, 17_usize, _17), bb4, UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: [u16; 3],mut _2: f64,mut _3: bool,mut _4: Adt54,mut _5: *const u16,mut _6: bool,mut _7: u32,mut _8: i32,mut _9: Adt54,mut _10: Adt54,mut _11: i32,mut _12: i32) -> char {
mir! {
type RET = char;
let _13: [u16; 3];
let _14: [isize; 1];
let _15: i64;
let _16: char;
let _17: (i32, f64);
let _18: i64;
let _19: i32;
let _20: i128;
let _21: bool;
let _22: u16;
let _23: i64;
let _24: (f32, [u32; 7], i128);
let _25: *const isize;
let _26: [i16; 3];
let _27: Adt63;
let _28: char;
let _29: isize;
let _30: ();
let _31: ();
{
_10 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_9, 0), 0) };
RET = Field::<(char, i8, u8)>(Variant(_4, 1), 0).0;
place!(Field::<(char, i8, u8)>(Variant(_4, 1), 0)).1 = (-9223372036854775808_isize) as i8;
_12 = _11;
_5 = core::ptr::addr_of!((*_5));
_7 = 1243385838_u32;
place!(Field::<(char, i8, u8)>(Variant(_4, 1), 0)).2 = 57_u8 * 108_u8;
_1 = [(*_5),(*_5),(*_5)];
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)).0 = _12;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = -_2;
_8 = -Field::<(i32, f64)>(Variant(_10, 0), 0).0;
place!(Field::<(char, i8, u8)>(Variant(_4, 1), 0)).2 = (-9223372036854775808_isize) as u8;
_9 = _10;
_11 = -_12;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = _2;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).1 = Field::<(i32, f64)>(Variant(_9, 0), 0).1 - Field::<(i32, f64)>(Variant(_9, 0), 0).1;
_15 = -(-1767939795500454938_i64);
match _7 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
1243385838 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_12 = !_11;
place!(Field::<(char, i8, u8)>(Variant(_4, 1), 0)).2 = 116_u8;
_4 = _10;
_3 = !_6;
_19 = Field::<(i32, f64)>(Variant(_10, 0), 0).0 >> _8;
RET = '\u{1eb9b}';
_17 = (_12, Field::<(i32, f64)>(Variant(_9, 0), 0).1);
_6 = _3 | _3;
_16 = RET;
_11 = (*_5) as i32;
_13 = [(*_5),(*_5),(*_5)];
_17.1 = _2 + Field::<(i32, f64)>(Variant(_10, 0), 0).1;
place!(Field::<(i32, f64)>(Variant(_9, 0), 0)) = (Field::<(i32, f64)>(Variant(_4, 0), 0).0, Field::<(i32, f64)>(Variant(_4, 0), 0).1);
match _7 {
0 => bb5,
1243385838 => bb8,
_ => bb4
}
}
bb8 = {
_18 = _15;
_4 = _9;
_6 = _3;
_9 = Adt54::Variant0 { fld0: _17 };
(*_5) = 18145741203887511161_u64 as u16;
_20 = (-158469338701410407247049320061907976583_i128) | (-142740444053019478961193498465949952245_i128);
_7 = (-6762_i16) as u32;
place!(Field::<(i32, f64)>(Variant(_4, 0), 0)) = (_12, _17.1);
_11 = _17.0;
_9 = _10;
_1 = [(*_5),(*_5),(*_5)];
_15 = 17599937435635788830_u64 as i64;
_14 = [(-9223372036854775808_isize)];
_5 = core::ptr::addr_of!((*_5));
Goto(bb9)
}
bb9 = {
_3 = !_6;
_21 = !_6;
_17.1 = 15506792287408449780_u64 as f64;
SetDiscriminant(_9, 1);
RET = _16;
Goto(bb10)
}
bb10 = {
(*_5) = _16 as u16;
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [(*_5),(*_5),(*_5)];
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [(*_5),(*_5),(*_5)];
_7 = 3299615117_u32 | 3604081741_u32;
_17.0 = Field::<(i32, f64)>(Variant(_4, 0), 0).0;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_17.0, _2);
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)) = (RET, 94_i8, 203_u8);
_7 = 4084593909_u32 & 2106767365_u32;
Goto(bb11)
}
bb11 = {
_3 = _21;
_17.1 = Field::<(i32, f64)>(Variant(_4, 0), 0).1;
_19 = !_17.0;
_6 = _21 | _21;
_3 = !_6;
_12 = Field::<(i32, f64)>(Variant(_10, 0), 0).0;
_21 = _12 == Field::<(i32, f64)>(Variant(_10, 0), 0).0;
_10 = Adt54::Variant0 { fld0: _17 };
_2 = _17.1 + _17.1;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_19, _2);
match Field::<(char, i8, u8)>(Variant(_9, 1), 0).2 {
0 => bb1,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
203 => bb17,
_ => bb16
}
}
bb12 = {
(*_5) = _16 as u16;
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [(*_5),(*_5),(*_5)];
place!(Field::<[u16; 3]>(Variant(_9, 1), 1)) = [(*_5),(*_5),(*_5)];
_7 = 3299615117_u32 | 3604081741_u32;
_17.0 = Field::<(i32, f64)>(Variant(_4, 0), 0).0;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_17.0, _2);
place!(Field::<(char, i8, u8)>(Variant(_9, 1), 0)) = (RET, 94_i8, 203_u8);
_7 = 4084593909_u32 & 2106767365_u32;
Goto(bb11)
}
bb13 = {
_3 = !_6;
_21 = !_6;
_17.1 = 15506792287408449780_u64 as f64;
SetDiscriminant(_9, 1);
RET = _16;
Goto(bb10)
}
bb14 = {
_18 = _15;
_4 = _9;
_6 = _3;
_9 = Adt54::Variant0 { fld0: _17 };
(*_5) = 18145741203887511161_u64 as u16;
_20 = (-158469338701410407247049320061907976583_i128) | (-142740444053019478961193498465949952245_i128);
_7 = (-6762_i16) as u32;
place!(Field::<(i32, f64)>(Variant(_4, 0), 0)) = (_12, _17.1);
_11 = _17.0;
_9 = _10;
_1 = [(*_5),(*_5),(*_5)];
_15 = 17599937435635788830_u64 as i64;
_14 = [(-9223372036854775808_isize)];
_5 = core::ptr::addr_of!((*_5));
Goto(bb9)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_19 = _8;
_12 = _8 * Field::<(i32, f64)>(Variant(_4, 0), 0).0;
_14 = [9223372036854775807_isize];
RET = _16;
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)).0 = Field::<(char, i8, u8)>(Variant(_9, 1), 0).1 as i32;
place!(Field::<(i32, f64)>(Variant(_4, 0), 0)).1 = -_17.1;
_24.2 = RET as i128;
RET = Field::<(char, i8, u8)>(Variant(_9, 1), 0).0;
_23 = !_18;
_25 = core::ptr::addr_of!(_29);
place!(Field::<(i32, f64)>(Variant(_10, 0), 0)) = (_19, _2);
(*_25) = (-9223372036854775808_isize) << _17.0;
_10 = Adt54::Variant0 { fld0: Field::<(i32, f64)>(Variant(_4, 0), 0) };
_3 = !_6;
Goto(bb18)
}
bb18 = {
Call(_30 = dump_var(18_usize, 23_usize, Move(_23), 1_usize, Move(_1), 7_usize, Move(_7), 13_usize, Move(_13)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_30 = dump_var(18_usize, 14_usize, Move(_14), 3_usize, Move(_3), 11_usize, Move(_11), 29_usize, Move(_29)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: [i32; 2],mut _2: bool,mut _3: [i32; 4],mut _4: u128,mut _5: i32,mut _6: [u16; 3],mut _7: Adt50,mut _8: (i32, f64),mut _9: isize,mut _10: f64,mut _11: Adt62) -> bool {
mir! {
type RET = bool;
let _12: *const u16;
let _13: u64;
let _14: isize;
let _15: f64;
let _16: ();
let _17: ();
{
SetDiscriminant(_7, 1);
_4 = !320075047771350622920286286793663430047_u128;
place!(Field::<(i32, f64)>(Variant(_7, 1), 1)).0 = -_5;
place!(Field::<(i32, f64)>(Variant(_7, 1), 1)) = (_5, _10);
Goto(bb1)
}
bb1 = {
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).1.1 = -(-26_i8);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).4 = (_3, 66_u8);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).2.0 = -Field::<(i32, f64)>(Variant(_7, 1), 1).0;
place!(Field::<([i32; 4], u8)>(Variant(_7, 1), 6)).1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).4.1 << Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).4.1;
place!(Field::<([i32; 4], u8)>(Variant(_7, 1), 6)) = (_3, Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).4.1);
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).0 = [28256_i16,6908_i16,22808_i16,3274_i16];
place!(Field::<[i16; 3]>(Variant(_7, 1), 5)) = [(-6011_i16),10376_i16,(-30098_i16)];
place!(Field::<i8>(Variant(_7, 1), 3)) = 6472399976546799766_usize as i8;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).1.0 = '\u{53eed}';
_9 = 49_isize;
_9 = -105_isize;
_10 = Field::<(i32, f64)>(Variant(_7, 1), 1).1 - Field::<(i32, f64)>(Variant(_7, 1), 1).1;
_1 = [Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).2.0,_5];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).4.0 = Field::<([i32; 4], u8)>(Variant(_7, 1), 6).0;
place!(Field::<i8>(Variant(_7, 1), 3)) = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).1.1;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).3 = [12842528747126598878_usize,4_usize,4_usize,1633025202231617724_usize,6_usize,7697072312185123458_usize];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).1.2 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).2.0 as u8;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).4.1 = !Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).1.2;
place!(Field::<bool>(Variant(_7, 1), 0)) = _8.0 < _5;
place!(Field::<u64>(Variant(_7, 1), 2)) = 17457813132091121717_u64;
place!(Field::<(i32, f64)>(Variant(_7, 1), 1)).0 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).2.0;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).4.1 = Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4).1.2 >> _8.0;
_2 = Field::<bool>(Variant(_7, 1), 0) ^ Field::<bool>(Variant(_7, 1), 0);
place!(Field::<usize>(Variant(_7, 1), 7)) = 25539142731274316884178353108266419025_i128 as usize;
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).1.1 = Field::<u64>(Variant(_7, 1), 2) as i8;
_14 = _9;
match Field::<([i32; 4], u8)>(Variant(_7, 1), 6).1 {
66 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
place!(Field::<(i32, f64)>(Variant(_7, 1), 1)).1 = _10;
_6 = [35589_u16,35304_u16,19659_u16];
place!(Field::<([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8))>(Variant(_7, 1), 4)).2 = _8;
SetDiscriminant(_7, 1);
_15 = -_10;
place!(Field::<bool>(Variant(_7, 1), 0)) = !_2;
RET = !Field::<bool>(Variant(_7, 1), 0);
_8.0 = !_5;
Goto(bb4)
}
bb4 = {
Call(_16 = dump_var(19_usize, 3_usize, Move(_3), 6_usize, Move(_6), 1_usize, Move(_1), 14_usize, Move(_14)), bb5, UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(133699457990671577296785759508188593191_i128), std::hint::black_box(1265982485_u32), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(100_i8), std::hint::black_box(5685904153566071540_u64), std::hint::black_box(1987596859_i32), std::hint::black_box(8249119140006546570_i64));
                
            }
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: ([i32; 4], u8),
fld1: [i16; 4],
fld2: u128,
fld3: *const bool,
fld4: u32,

},
Variant1{
fld0: bool,

},
Variant2{
fld0: *const u16,
fld1: [isize; 1],

},
Variant3{
fld0: [bool; 5],
fld1: char,
fld2: (([i32; 4], u8), char, [i16; 4], [i8; 2]),
fld3: *const bool,
fld4: u32,
fld5: i32,
fld6: [isize; 1],

}}
#[derive(Debug)]
pub struct Adt49 {
fld0: [u64; 2],
fld1: usize,
fld2: Adt48,
fld3: *const u16,
fld4: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),
fld5: [bool; 5],
fld6: u8,
}
#[derive(Debug)]
pub enum Adt50 {
Variant0{
fld0: f64,
fld1: ([i32; 4], u8),
fld2: u64,
fld3: i8,
fld4: [usize; 6],
fld5: i32,
fld6: [bool; 5],

},
Variant1{
fld0: bool,
fld1: (i32, f64),
fld2: u64,
fld3: i8,
fld4: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),
fld5: [i16; 3],
fld6: ([i32; 4], u8),
fld7: usize,

},
Variant2{
fld0: [u64; 4],
fld1: [i16; 4],
fld2: isize,
fld3: [u64; 2],
fld4: [i32; 2],
fld5: i32,
fld6: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt51 {
Variant0{
fld0: [i64; 4],
fld1: usize,
fld2: [i32; 4],

},
Variant1{
fld0: bool,
fld1: (f32, [u32; 7], i128),
fld2: [i16; 4],
fld3: i8,
fld4: ([i64; 4], (i32, f64), u32),
fld5: [i64; 4],
fld6: [bool; 5],
fld7: [i32; 2],

},
Variant2{
fld0: *const *const isize,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt52 {
Variant0{
fld0: bool,
fld1: u128,
fld2: Adt51,
fld3: [bool; 5],
fld4: f32,
fld5: usize,
fld6: [isize; 1],

},
Variant1{
fld0: bool,
fld1: [i16; 4],
fld2: (i32, f64),
fld3: i8,
fld4: [u64; 4],
fld5: [i16; 3],
fld6: u64,
fld7: [bool; 6],

},
Variant2{
fld0: [isize; 1],
fld1: i64,
fld2: [i64; 7],
fld3: [i16; 2],
fld4: i16,
fld5: *mut bool,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: i32,
fld1: i16,
fld2: [u64; 4],
fld3: Adt49,

},
Variant1{
fld0: ([i32; 2], i16, [i32; 4]),
fld1: u128,
fld2: u64,

},
Variant2{
fld0: Adt51,
fld1: char,
fld2: u16,
fld3: [u16; 3],
fld4: u64,
fld5: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt54 {
Variant0{
fld0: (i32, f64),

},
Variant1{
fld0: (char, i8, u8),
fld1: [u16; 3],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: [i32; 4],
fld1: i128,
fld2: [i16; 4],
fld3: [i64; 4],
}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: [i8; 2],

},
Variant1{
fld0: ([i32; 2], i16, [i32; 4]),
fld1: *const *const isize,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: Adt52,
fld1: [i16; 2],
fld2: u64,
fld3: [i64; 4],
fld4: Adt49,

},
Variant1{
fld0: *const u16,
fld1: Adt52,
fld2: *const bool,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: (f32, [u32; 7], i128),
fld1: [i16; 2],

},
Variant1{
fld0: *const *const isize,

}}
#[derive(Debug)]
pub struct Adt59 {
fld0: Adt48,
fld1: i32,
fld2: u16,
fld3: i8,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: [u16; 3],
fld1: (i32, f64),
fld2: *const isize,
fld3: ([i32; 2], i16, [i32; 4]),
fld4: ([i32; 4], u8),
fld5: [i8; 2],
fld6: Adt58,
}
#[derive(Debug)]
pub struct Adt61 {
fld0: Adt57,
fld1: Adt53,
fld2: i64,
fld3: Adt58,
fld4: i32,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt62 {
fld0: [u64; 2],
}
#[derive(Debug)]
pub enum Adt63 {
Variant0{
fld0: Adt58,
fld1: (f32, [u32; 7], i128),
fld2: Adt54,
fld3: Adt56,
fld4: *const *const isize,
fld5: [isize; 1],
fld6: ([i64; 4], (i32, f64), u32),

},
Variant1{
fld0: Adt59,
fld1: *const isize,
fld2: Adt51,
fld3: ([i16; 4], (char, i8, u8), (i32, f64), [usize; 6], ([i32; 4], u8)),
fld4: Adt56,
fld5: Adt57,
fld6: (char, i8, u8),

},
Variant2{
fld0: bool,
fld1: Adt48,
fld2: [usize; 6],
fld3: (f32, [u32; 7], i128),
fld4: Adt58,
fld5: [isize; 1],
fld6: [i64; 4],

},
Variant3{
fld0: (i32, f64),
fld1: u16,

}}
#[derive(Debug)]
pub enum Adt64 {
Variant0{
fld0: Adt61,
fld1: [u16; 3],
fld2: *const u16,
fld3: Adt53,
fld4: *const bool,

},
Variant1{
fld0: Adt52,

}}

