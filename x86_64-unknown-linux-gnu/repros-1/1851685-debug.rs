#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    pub fn dump_var<T: Debug, U: Debug, V: Debug, W: Debug>(f: usize,
        var0: usize, val0: T,
        var1: usize, val1: U,
        var2: usize, val2: V,
        var3: usize, val3: W,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i128,mut _2: i64,mut _3: isize,mut _4: i8) -> [i16; 1] {
mir! {
type RET = [i16; 1];
let _5: isize;
let _6: Adt54;
let _7: f32;
let _8: isize;
let _9: Adt50;
let _10: (f64,);
let _11: Adt54;
let _12: (u64,);
let _13: [i16; 1];
let _14: Adt53;
let _15: i128;
let _16: (u64,);
let _17: u128;
let _18: usize;
let _19: (i16, ((f64,),), (i64, isize, isize), u8);
let _20: ((f64,),);
let _21: char;
let _22: [bool; 6];
let _23: (i8,);
let _24: Adt62;
let _25: Adt61;
let _26: [u32; 5];
let _27: u64;
let _28: *const f64;
let _29: f64;
let _30: u32;
let _31: *const (i64, bool);
let _32: [usize; 4];
let _33: char;
let _34: i128;
let _35: ((f64,),);
let _36: f64;
let _37: isize;
let _38: [i32; 8];
let _39: (u64,);
let _40: char;
let _41: u64;
let _42: *const (i64, bool);
let _43: *const u64;
let _44: *const [usize; 3];
let _45: (i32, [i32; 6], (u64,));
let _46: Adt60;
let _47: Adt52;
let _48: [i8; 1];
let _49: f64;
let _50: u128;
let _51: bool;
let _52: ();
let _53: ();
{
RET = [10662_i16];
_1 = !85681135173615763089167266729294125794_i128;
_3 = -9223372036854775807_isize;
_3 = _1 as isize;
_1 = 1687382530625909623_u64 as i128;
_1 = (-16329_i16) as i128;
_1 = 6906488230654698156_u64 as i128;
_1 = 5037_i16 as i128;
_2 = 2940594225732971307_i64 ^ 1726526734171789547_i64;
_3 = (-93_isize) ^ (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
RET = [(-18509_i16)];
_4 = -70_i8;
_2 = (-977666730729563980_i64);
_2 = 510281497853808656_i64 - 8445444946291404199_i64;
RET = [(-4533_i16)];
RET = [11831_i16];
RET = [(-28783_i16)];
_1 = -2024402400835879358509342489928475405_i128;
_4 = true as i8;
Call(_6.fld2.3 = fn1(_3, _2, _3, _2, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6.fld2.2.1 = !587922502_u32;
_6.fld2.2.3 = (-1211077475_i32);
_6.fld1.0 = 24856_i16 + (-2365_i16);
_7 = 19197_u16 as f32;
_6.fld1.3 = false as u8;
_6.fld2.2.4.0 = _1;
_4 = !(-52_i8);
_6.fld2.2.0 = _3;
_6.fld1.1.0.0 = _6.fld2.2.0 as f64;
_6.fld2.2.1 = !1510552242_u32;
_3 = _6.fld1.0 as isize;
_6.fld2.0 = _1;
_6.fld1.2.0 = _4 as i64;
_5 = !_3;
_6.fld3 = core::ptr::addr_of!(_6.fld2.2);
_6.fld2.2.3 = 1069671221_i32 | 1657144269_i32;
_6.fld1.2.0 = _2 & _2;
_6.fld2.3 = [_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3];
_6.fld4 = _6.fld1.2.0 as u8;
match _6.fld2.2.0 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5 = 3219745355249493160_u64 as isize;
_7 = _3 as f32;
_6.fld0 = _6.fld1.1.0;
_6.fld2.2.3 = !108706784_i32;
_6.fld2.0 = -_6.fld2.2.4.0;
_6.fld2.2.3 = -(-1099130701_i32);
_2 = _6.fld4 as i64;
_8 = -_3;
_9.fld6.2 = (_5, _6.fld2.2.1, _6.fld1.1.0.0, _6.fld2.2.3, _6.fld2.2.4);
_9.fld5.1.0 = _1;
_6.fld1.2.1 = -_8;
_9.fld3.1 = 46855_u16 + 46_u16;
_6.fld1.2.1 = _6.fld4 as isize;
_9.fld6.2.4.0 = !_9.fld5.1.0;
_9.fld6.1 = -_6.fld0.0;
_9.fld6.2.2 = _4 as f64;
_6.fld2.3 = [_6.fld2.2.3,_9.fld6.2.3,_9.fld6.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3];
_6.fld1.3 = _6.fld1.0 as u8;
_10.0 = -_6.fld0.0;
_9.fld3.2 = _3;
match _6.fld2.2.0 {
0 => bb2,
9223372036854775807 => bb6,
_ => bb5
}
}
bb5 = {
Return()
}
bb6 = {
_5 = -_6.fld1.2.1;
_11.fld4 = _6.fld4;
_2 = !_6.fld1.2.0;
_1 = _6.fld2.0 << _4;
_9.fld5.2 = !true;
_11.fld1.1.0.0 = _10.0;
_6.fld1.2.2 = _5 >> _8;
_11.fld2.2.0 = _5;
_6.fld2.2.0 = _5;
_9.fld3.1 = _6.fld1.2.0 as u16;
_13 = [_6.fld1.0];
_11.fld2.2.4.0 = _2 as i128;
_14.fld0.2 = _9.fld3.1 <= _9.fld3.1;
_14.fld4.fld1.1 = (_6.fld2.2.4.0,);
_10.0 = _9.fld6.2.2 + _11.fld1.1.0.0;
_14.fld0.0 = _3 as i16;
_12.0 = 9126772915019114419_u64 * 5979483822533154025_u64;
_11.fld2.2.2 = _6.fld1.0 as f64;
_9.fld0 = core::ptr::addr_of!(_12.0);
_11.fld2.2.4.0 = -_1;
_9.fld1 = 275952751310290103880967723503615511524_u128;
_9.fld5.1 = _11.fld2.2.4;
Goto(bb7)
}
bb7 = {
_9.fld5.2 = _6.fld1.2.1 == _5;
_9.fld6.3 = [_9.fld6.2.3,_6.fld2.2.3,_9.fld6.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3];
_15 = -_9.fld6.2.4.0;
_9.fld5.0 = !_6.fld1.0;
_3 = !_6.fld2.2.0;
_6.fld2.1 = -_9.fld6.1;
_11.fld0 = _11.fld1.1.0;
_12 = (15934628048734269233_u64,);
_14.fld3 = _6.fld2.2.1 * _9.fld6.2.1;
_18 = !0_usize;
_6.fld2.3 = [_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_9.fld6.2.3,_9.fld6.2.3];
_6.fld1.1 = (_10,);
_6.fld2.2.3 = _6.fld1.1.0.0 as i32;
_11.fld2.1 = _9.fld6.2.2 / f64::NAN;
_9.fld5.0 = _6.fld1.0 >> _9.fld5.1.0;
_14.fld4.fld1.2 = !_9.fld5.2;
_6.fld2.2.4.0 = !_6.fld2.0;
_11.fld2 = (_6.fld2.2.4.0, _10.0, _9.fld6.2, _6.fld2.3);
_15 = _14.fld3 as i128;
_19.2 = _6.fld1.2;
_13 = [_6.fld1.0];
_12.0 = 17130121770960135981_u64;
_14.fld0.3 = _13;
Call(_11.fld2.1 = fn2(_6.fld1.2, _11.fld2.0, _11.fld2.0, _11.fld2.2.4, _9.fld6.2.4, _3), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_16.0 = _4 as u64;
_14.fld4.fld0 = [_18,_18,_18];
_11.fld2.2.0 = _6.fld1.2.1;
_11.fld2.2 = _9.fld6.2;
_20.0.0 = _6.fld2.1 * _11.fld0.0;
RET = [_14.fld0.0];
_13 = [_9.fld5.0];
_6.fld2.2.4.0 = _9.fld5.1.0 ^ _9.fld5.1.0;
_19.2 = (_6.fld1.2.0, _8, _3);
_19.2.0 = _6.fld1.2.0 << _8;
_14.fld0 = (_6.fld1.0, _11.fld2.2.4, _9.fld5.2, _13);
_9.fld3.0 = _4;
_12.0 = _16.0;
_16 = _12;
_16 = (_12.0,);
_19.0 = _14.fld0.0 - _9.fld5.0;
_11.fld1.2 = (_2, _19.2.2, _9.fld3.2);
_9.fld4 = [_11.fld2.2.3,_11.fld2.2.3,_11.fld2.2.3,_6.fld2.2.3,_9.fld6.2.3,_11.fld2.2.3,_11.fld2.2.3,_11.fld2.2.3];
_11.fld2 = (_1, _6.fld1.1.0.0, _9.fld6.2, _9.fld6.3);
_1 = _11.fld2.2.4.0 ^ _11.fld2.0;
_24.fld6.fld2 = _11.fld2;
_11.fld1.2.2 = !_6.fld1.2.2;
_19.1.0.0 = -_24.fld6.fld2.1;
_24.fld6.fld2.0 = _6.fld2.0;
_14.fld2 = (_6.fld2.2.4.0,);
_14.fld4.fld1.3 = _13;
match _9.fld1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
275952751310290103880967723503615511524 => bb9,
_ => bb6
}
}
bb9 = {
_24.fld7 = Adt49 { fld0: _14.fld4.fld0,fld1: _14.fld0 };
_24.fld6.fld1.2.0 = _19.2.0 & _6.fld1.2.0;
_6.fld2.2.1 = !_11.fld2.2.1;
_24.fld2 = !_18;
_24.fld7.fld1.1 = (_1,);
_24.fld6.fld1.2.2 = _9.fld6.2.1 as isize;
_24.fld0.fld1 = [_24.fld2,_18,_18];
_24.fld6.fld2.2.4.0 = _19.0 as i128;
_11.fld4 = !_6.fld1.3;
_6.fld2.2.0 = !_24.fld6.fld2.2.0;
_24.fld1 = !_9.fld3.1;
_6.fld1.1.0.0 = _9.fld6.2.2 - _11.fld1.1.0.0;
_20.0.0 = -_24.fld6.fld2.1;
_4 = -_9.fld3.0;
_9.fld6.2.2 = _20.0.0 - _24.fld6.fld2.1;
_9.fld2 = [_24.fld6.fld2.2.3,_6.fld2.2.3,_6.fld2.2.3,_9.fld6.2.3,_24.fld6.fld2.2.3,_9.fld6.2.3,_9.fld6.2.3];
_9.fld1 = !288173502511758329062770395655926502068_u128;
_27 = '\u{1740c}' as u64;
_1 = _27 as i128;
_12 = (_27,);
_6.fld2.2.4.0 = _15;
_9.fld6.0 = _14.fld0.1.0 + _24.fld6.fld2.2.4.0;
_24.fld6.fld1.1.0 = (_9.fld6.1,);
_10 = (_9.fld6.2.2,);
_9.fld5.0 = _11.fld2.2.4.0 as i16;
Goto(bb10)
}
bb10 = {
_9.fld3.0 = _4 + _4;
_11.fld1.1.0.0 = -_9.fld6.2.2;
_6.fld2.2 = _9.fld6.2;
_9.fld3.2 = _6.fld1.2.1;
_28 = core::ptr::addr_of!(_24.fld6.fld2.2.2);
_6.fld4 = !_6.fld1.3;
(*_28) = -_11.fld2.1;
RET = [_24.fld7.fld1.0];
_24.fld3.0 = (_4, _9.fld3.1, _24.fld6.fld1.2.2);
RET = [_6.fld1.0];
_24.fld0.fld0 = _19.0;
_14.fld0.2 = _24.fld7.fld1.2;
_24.fld6 = Move(_6);
_19.3 = _9.fld3.1 as u8;
(*_28) = _24.fld6.fld1.1.0.0;
Goto(bb11)
}
bb11 = {
_14.fld0 = (_19.0, _14.fld2, _9.fld5.2, _24.fld7.fld1.3);
_35.0.0 = _27 as f64;
_24.fld4 = [_14.fld0.0];
_22 = [_9.fld5.2,_14.fld4.fld1.2,_14.fld4.fld1.2,_24.fld7.fld1.2,_24.fld7.fld1.2,_9.fld5.2];
_9.fld6.2.1 = !_14.fld3;
RET = [_24.fld0.fld0];
_19.2.1 = _24.fld6.fld1.2.2;
_16.0 = _12.0;
_11.fld1.0 = _19.0 ^ _24.fld0.fld0;
_3 = '\u{d068f}' as isize;
_14.fld1 = _9.fld3.1;
Goto(bb12)
}
bb12 = {
_24.fld6.fld1 = (_11.fld1.0, _20, _19.2, _24.fld6.fld4);
_11.fld1.0 = _24.fld6.fld1.0 + _14.fld0.0;
_24.fld6.fld0 = _10;
_24.fld7.fld1 = _14.fld0;
_24.fld6.fld2.0 = _9.fld6.0;
_28 = core::ptr::addr_of!(_29);
_10.0 = -_9.fld6.2.2;
_39 = (_27,);
_8 = _19.2.2 * _11.fld1.2.2;
_10 = _24.fld6.fld0;
_14.fld4.fld1.1 = (_15,);
_25.fld0 = (_4,);
_11.fld0 = (_20.0.0,);
_11.fld0 = (_24.fld6.fld0.0,);
_9.fld5 = (_11.fld1.0, _14.fld2, _24.fld7.fld1.2, _24.fld7.fld1.3);
_11.fld1.2.0 = _24.fld6.fld1.2.0;
_24.fld1 = _9.fld3.1;
_24.fld6.fld4 = !_11.fld4;
_9.fld6.2.4.0 = _14.fld2.0 ^ _24.fld7.fld1.1.0;
Goto(bb13)
}
bb13 = {
_13 = _24.fld7.fld1.3;
_11.fld2.2.2 = _11.fld1.1.0.0 + _11.fld0.0;
_16 = _12;
_24.fld7.fld1.1.0 = _9.fld6.2.4.0 + _24.fld6.fld2.0;
_37 = _5 | _19.2.1;
_35 = (_20.0,);
_24.fld1 = _9.fld5.2 as u16;
_8 = _11.fld1.2.1 | _19.2.2;
_17 = _9.fld1 >> _19.3;
_9.fld6.2.4.0 = _14.fld0.1.0;
_24.fld1 = _14.fld1;
_9.fld5.0 = !_24.fld6.fld1.0;
_11.fld0.0 = -_35.0.0;
_9.fld5 = (_19.0, _24.fld7.fld1.1, _14.fld4.fld1.2, _14.fld4.fld1.3);
Call(_23.0 = core::intrinsics::bswap(_25.fld0.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_24.fld6.fld2.2.4 = (_14.fld0.1.0,);
_16.0 = _27 | _12.0;
_19.2.0 = _24.fld6.fld1.2.0;
_24.fld6.fld1 = (_24.fld0.fld0, _20, _11.fld1.2, _24.fld6.fld4);
_11.fld1.2.0 = _11.fld2.2.1 as i64;
_47.fld3.3 = _24.fld4;
_11.fld2.2.0 = -_11.fld1.2.2;
_44 = core::ptr::addr_of!(_24.fld0.fld1);
_45.0 = _24.fld6.fld2.2.3;
_14 = Adt53 { fld0: _9.fld5,fld1: _24.fld1,fld2: _9.fld5.1,fld3: _24.fld6.fld2.2.1,fld4: Move(_24.fld7) };
_11.fld1.3 = _11.fld4;
_19.2 = (_24.fld6.fld1.2.0, _11.fld2.2.0, _11.fld1.2.2);
_16 = (_39.0,);
_23 = (_25.fld0.0,);
_22 = [_14.fld0.2,_14.fld0.2,_14.fld0.2,_14.fld4.fld1.2,_9.fld5.2,_14.fld0.2];
_24.fld3.1 = _24.fld6.fld2.2.3 >> _11.fld1.0;
_19.2.0 = !_24.fld6.fld1.2.0;
_24.fld0.fld2 = [_24.fld2,_18,_18,_24.fld2];
_24.fld6.fld1 = (_24.fld0.fld0, _20, _11.fld1.2, _24.fld6.fld4);
_25.fld0.0 = _24.fld3.0.0 + _9.fld3.0;
_47.fld3.1.0 = -_24.fld6.fld2.2.4.0;
_46.fld2 = _24.fld0.fld2;
_14.fld0.1.0 = _24.fld6.fld2.0;
_24.fld4 = [_19.0];
Goto(bb15)
}
bb15 = {
Call(_52 = dump_var(0_usize, 16_usize, Move(_16), 12_usize, Move(_12), 39_usize, Move(_39), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_52 = dump_var(0_usize, 5_usize, Move(_5), 1_usize, Move(_1), 15_usize, Move(_15), 37_usize, Move(_37)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: isize,mut _2: i64,mut _3: isize,mut _4: i64,mut _5: isize) -> [i32; 6] {
mir! {
type RET = [i32; 6];
let _6: bool;
let _7: [i128; 1];
let _8: u64;
let _9: Adt57;
let _10: (i16, ((f64,),), (i64, isize, isize), u8);
let _11: *const u64;
let _12: Adt58;
let _13: char;
let _14: usize;
let _15: u64;
let _16: ();
let _17: ();
{
RET = [(-1831837991_i32),1876517087_i32,(-1541588124_i32),(-2047460278_i32),1684530447_i32,323241940_i32];
RET = [1169138266_i32,1531300281_i32,(-151385836_i32),(-1896055329_i32),(-565449176_i32),966138385_i32];
_1 = _3;
_3 = _1 ^ _5;
_1 = _3 | _5;
RET = [1085409314_i32,(-802952971_i32),54046580_i32,(-1577049563_i32),835164263_i32,710148690_i32];
RET = [492695148_i32,1608420718_i32,(-1880351479_i32),335270583_i32,211455196_i32,(-853919741_i32)];
_4 = -_2;
_1 = _3 | _3;
_3 = !_1;
_2 = 49_i8 as i64;
RET = [(-677165813_i32),945964150_i32,1734755970_i32,(-1599119171_i32),832874182_i32,(-230949368_i32)];
_1 = !_3;
_6 = !false;
RET = [(-416101196_i32),1117075518_i32,(-1162150264_i32),(-2026246893_i32),(-1904219262_i32),(-310830646_i32)];
_1 = -_3;
Goto(bb1)
}
bb1 = {
_7 = [(-48840868388176379573803030349091781864_i128)];
_1 = _3;
_1 = _3 >> _3;
RET = [1758018828_i32,2126392307_i32,(-919187578_i32),558141_i32,589998838_i32,(-1443380071_i32)];
_1 = _3;
_1 = _5;
match _5 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_7 = [(-102280357785355230443061396572159216313_i128)];
RET = [1116740108_i32,(-796352078_i32),(-639283001_i32),(-2071261563_i32),(-69895164_i32),662922067_i32];
RET = [(-1471262466_i32),1042288492_i32,(-1064064078_i32),113466694_i32,1532224172_i32,1656955149_i32];
RET = [(-1861393514_i32),1968250683_i32,(-1257711651_i32),(-1745461383_i32),(-1205055755_i32),2113934491_i32];
_7 = [157313698337574529947827228383365248503_i128];
_8 = 9403232800483989608_u64;
RET = [1706077401_i32,(-1757669197_i32),1083283971_i32,216595975_i32,(-155521541_i32),(-1582911740_i32)];
_3 = _1;
_5 = !_1;
_8 = 17658933339059093543_u64;
_8 = 855219786328140335_u64 % 8535628056136479599_u64;
_4 = _2 ^ _2;
_7 = [101455515942398738064500990571241555736_i128];
RET = [(-579796612_i32),267580343_i32,429658849_i32,(-1250079595_i32),(-432312118_i32),531542143_i32];
_5 = -_3;
_1 = 57457_u16 as isize;
_7 = [160579702482316387673840550591003118147_i128];
_1 = -_3;
_6 = true ^ false;
_5 = _3;
_5 = (-30_i8) as isize;
_9.fld1 = [1719361486_i32,2087778819_i32,(-1174773450_i32),1268522097_i32,(-1936918982_i32)];
_4 = _2;
_4 = _2 << _1;
_9.fld1 = [(-1349020619_i32),(-1942471835_i32),(-323994480_i32),218246512_i32,(-1538492857_i32)];
Goto(bb10)
}
bb10 = {
RET = [(-730258298_i32),(-180472768_i32),27247464_i32,(-1518758915_i32),(-2033911614_i32),1163571898_i32];
_10.3 = !162_u8;
_7 = [(-74275623985293978476118544994619599096_i128)];
_5 = _1 & _3;
RET = [1983096779_i32,(-1097697364_i32),1705455526_i32,748020838_i32,(-187920492_i32),(-585899376_i32)];
_10.2.2 = -_5;
_7 = [(-92764837216733963609127612666184220648_i128)];
_9.fld0 = !340009365389688566252726405380741278625_u128;
_10.0 = 2294077461_u32 as i16;
_10.2 = (_2, _5, _5);
_12.fld1 = 4_usize & 6_usize;
_12.fld3.fld5.0 = (-386262334_i32) as i16;
_12.fld3.fld3 = ((-23_i8), 43818_u16, _10.2.2);
_12.fld3.fld6.1 = 137907544118442714826177553375830085426_i128 as f64;
_12.fld3.fld6.1 = _10.3 as f64;
_12.fld0.fld1.1 = ((-31119923253376303360753719457613215615_i128),);
RET = [602998210_i32,(-664193017_i32),(-188342739_i32),1954046178_i32,(-754581940_i32),(-19736097_i32)];
RET = [1157031743_i32,1096612500_i32,2082909990_i32,2135371452_i32,(-1594191837_i32),366215333_i32];
_12.fld3.fld3.0 = (-37_i8);
_12.fld3.fld6.2.1 = _12.fld3.fld3.0 as u32;
_12.fld0.fld1.0 = _12.fld3.fld5.0 - _10.0;
match _12.fld3.fld3.0 {
0 => bb5,
1 => bb2,
2 => bb9,
3 => bb6,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463463374607431768211419 => bb15,
_ => bb14
}
}
bb11 = {
_7 = [(-102280357785355230443061396572159216313_i128)];
RET = [1116740108_i32,(-796352078_i32),(-639283001_i32),(-2071261563_i32),(-69895164_i32),662922067_i32];
RET = [(-1471262466_i32),1042288492_i32,(-1064064078_i32),113466694_i32,1532224172_i32,1656955149_i32];
RET = [(-1861393514_i32),1968250683_i32,(-1257711651_i32),(-1745461383_i32),(-1205055755_i32),2113934491_i32];
_7 = [157313698337574529947827228383365248503_i128];
_8 = 9403232800483989608_u64;
RET = [1706077401_i32,(-1757669197_i32),1083283971_i32,216595975_i32,(-155521541_i32),(-1582911740_i32)];
_3 = _1;
_5 = !_1;
_8 = 17658933339059093543_u64;
_8 = 855219786328140335_u64 % 8535628056136479599_u64;
_4 = _2 ^ _2;
_7 = [101455515942398738064500990571241555736_i128];
RET = [(-579796612_i32),267580343_i32,429658849_i32,(-1250079595_i32),(-432312118_i32),531542143_i32];
_5 = -_3;
_1 = 57457_u16 as isize;
_7 = [160579702482316387673840550591003118147_i128];
_1 = -_3;
_6 = true ^ false;
_5 = _3;
_5 = (-30_i8) as isize;
_9.fld1 = [1719361486_i32,2087778819_i32,(-1174773450_i32),1268522097_i32,(-1936918982_i32)];
_4 = _2;
_4 = _2 << _1;
_9.fld1 = [(-1349020619_i32),(-1942471835_i32),(-323994480_i32),218246512_i32,(-1538492857_i32)];
Goto(bb10)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_12.fld0.fld1.3 = [_12.fld0.fld1.0];
_7 = [_12.fld0.fld1.1.0];
_12.fld3.fld5.1 = (_12.fld0.fld1.1.0,);
_12.fld3.fld4 = [1734936740_i32,(-1340032356_i32),(-1149630441_i32),1337912229_i32,648937605_i32,(-271530059_i32),479981429_i32,(-2029502556_i32)];
_11 = core::ptr::addr_of!(_8);
_12.fld0.fld1.1 = (_12.fld3.fld5.1.0,);
_5 = !_10.2.1;
_12.fld3.fld6.2.0 = !_10.2.2;
_12.fld3.fld4 = [(-1336155683_i32),752186056_i32,(-484089940_i32),(-343904247_i32),(-919014772_i32),1271484110_i32,100516476_i32,1758563105_i32];
_12.fld3.fld6.2.2 = _12.fld3.fld6.1;
_12.fld3.fld6.2.4 = (_12.fld0.fld1.1.0,);
_12.fld3.fld2 = [(-1668638121_i32),1853112049_i32,(-2107566975_i32),583600100_i32,(-442232449_i32),1839184319_i32,(-556815031_i32)];
_12.fld3.fld5 = (_10.0, _12.fld3.fld6.2.4, _6, _12.fld0.fld1.3);
_12.fld0.fld1.3 = [_12.fld3.fld5.0];
_12.fld3.fld1 = _9.fld0 & _9.fld0;
_12.fld3.fld4 = [(-901164455_i32),(-180468641_i32),1862681832_i32,955180539_i32,(-1707961400_i32),(-1489195931_i32),343658612_i32,1329710144_i32];
_12.fld3.fld5.1.0 = _12.fld3.fld6.2.4.0 & _12.fld0.fld1.1.0;
_12.fld4 = _12.fld3.fld6.2.2;
_12.fld3.fld3.1 = 227_u16 << _3;
RET = [(-828109915_i32),(-791645934_i32),1163921908_i32,108437994_i32,64604886_i32,(-1748148033_i32)];
_12.fld3.fld6.2 = (_12.fld3.fld3.2, 1018570651_u32, _12.fld4, (-1175998841_i32), _12.fld0.fld1.1);
_7 = [_12.fld3.fld6.2.4.0];
_12.fld3.fld6.0 = _12.fld3.fld6.2.4.0 | _12.fld3.fld5.1.0;
Goto(bb16)
}
bb16 = {
Call(_16 = dump_var(1_usize, 3_usize, Move(_3), 1_usize, Move(_1), 6_usize, Move(_6), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: (i64, isize, isize),mut _2: i128,mut _3: i128,mut _4: (i128,),mut _5: (i128,),mut _6: isize) -> f64 {
mir! {
type RET = f64;
let _7: isize;
let _8: u32;
let _9: i8;
let _10: (i128,);
let _11: bool;
let _12: isize;
let _13: u64;
let _14: [i32; 5];
let _15: i32;
let _16: *const u64;
let _17: i64;
let _18: char;
let _19: u16;
let _20: u64;
let _21: u8;
let _22: [i16; 1];
let _23: [i32; 8];
let _24: isize;
let _25: (i64, bool);
let _26: u16;
let _27: u16;
let _28: i16;
let _29: bool;
let _30: Adt57;
let _31: char;
let _32: i16;
let _33: u32;
let _34: [i32; 6];
let _35: bool;
let _36: (f64,);
let _37: f64;
let _38: *const f64;
let _39: u128;
let _40: Adt60;
let _41: usize;
let _42: Adt59;
let _43: bool;
let _44: Adt61;
let _45: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _46: bool;
let _47: ();
let _48: ();
{
_4.0 = _2;
_4 = (_2,);
RET = 339731201996917724352032233049244013659_u128 as f64;
_7 = _1.1 >> _1.0;
_2 = -_4.0;
_4 = (_2,);
_3 = true as i128;
_9 = !80_i8;
_10 = _4;
_8 = 4213812620_u32 % 1398478232_u32;
_1.0 = 8523473877945373628_i64 * 7651768340628104324_i64;
_2 = 92_u8 as i128;
_1.2 = _1.0 as isize;
_11 = !false;
_5 = (_4.0,);
_4.0 = _3 >> _6;
Call(RET = fn3(_6, _11, _3, _5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = 49011_u16 as f64;
_4.0 = -_2;
_10.0 = '\u{1a263}' as i128;
_11 = _6 != _7;
_1.0 = (-1902138407581997580_i64);
_9 = 114_i8 - 15_i8;
_13 = 8583029006333643640_usize as u64;
_14 = [(-623652221_i32),67922662_i32,909687288_i32,1487718692_i32,(-1342618984_i32)];
_1 = (5112353859343283137_i64, _6, _7);
_12 = _7 >> _1.0;
_6 = !_12;
_3 = _1.0 as i128;
_5.0 = _11 as i128;
_2 = _3;
_5 = _10;
RET = 196_u8 as f64;
_1.1 = _6 & _1.2;
_3 = _2;
_11 = !false;
_2 = _3;
_5.0 = _2 >> _12;
_9 = (-54_i8);
_16 = core::ptr::addr_of!(_13);
_10 = (_5.0,);
Goto(bb2)
}
bb2 = {
_13 = 8698306842656398447_u64 | 14564915012870589136_u64;
_7 = _1.1;
_19 = _5.0 as u16;
_5 = _10;
_11 = !false;
_11 = false;
(*_16) = 18054040419782821368_u64 % 4377771285245501129_u64;
_12 = !_7;
_10.0 = _5.0;
_10.0 = _3;
_16 = core::ptr::addr_of!((*_16));
_19 = !29798_u16;
_5 = (_2,);
_10.0 = -_3;
_6 = -_7;
_7 = _19 as isize;
_14 = [(-925938391_i32),(-229501285_i32),(-920776985_i32),1609105708_i32,1245461143_i32];
_1 = ((-1179395130424699272_i64), _6, _12);
_4.0 = (*_16) as i128;
(*_16) = 24_u8 as u64;
_1.2 = !_12;
_21 = 111_u8;
_1 = (9057723895274006257_i64, _12, _12);
Call(_1.0 = core::intrinsics::bswap((-8662474159817304650_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_20 = _13;
_6 = _1.1 >> _3;
_1.1 = '\u{aaa88}' as isize;
_25.1 = _11 | _11;
_3 = _2;
_25.0 = _1.0;
_25 = Checked(_1.0 + _1.0);
_24 = _1.2;
_9 = -90_i8;
_25 = Checked(_1.0 * _1.0);
_2 = _3;
_1.0 = -_25.0;
_27 = _19 >> _12;
Goto(bb4)
}
bb4 = {
_5 = _10;
_25.0 = !_1.0;
(*_16) = _20;
_25.1 = _3 <= _10.0;
_29 = _24 <= _24;
_7 = !_6;
_15 = 449920482_i32 | (-806881864_i32);
_30.fld0 = _8 as u128;
_28 = 14756_i16;
_10 = (_5.0,);
_21 = !200_u8;
_2 = -_10.0;
_13 = _15 as u64;
_4.0 = _3 * _2;
_13 = _20 % 18406782294927499306_u64;
RET = _15 as f64;
_29 = _25.1 ^ _25.1;
_20 = (*_16) >> _27;
_10.0 = _29 as i128;
(*_16) = !_20;
_5 = (_4.0,);
_25.1 = _29 | _29;
_7 = _6 + _24;
(*_16) = _20 + _20;
Call(_8 = core::intrinsics::bswap(954639116_u32), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_27 = !_19;
_1.1 = _1.2 << _7;
RET = _8 as f64;
_25.0 = -_1.0;
_31 = '\u{1047db}';
_33 = !_8;
_18 = _31;
_3 = _5.0;
_25.1 = _3 < _2;
_30.fld1 = _14;
_11 = _7 < _7;
(*_16) = _20 + _20;
_32 = _28 * _28;
_17 = _25.0 * _25.0;
_15 = 1336203207_i32;
_25 = (_1.0, _29);
match _28 {
14756 => bb6,
_ => bb3
}
}
bb6 = {
_25.1 = _29 & _29;
_25 = (_1.0, _11);
_4.0 = _10.0;
_13 = !_20;
_28 = -_32;
_30.fld0 = _27 as u128;
_10 = _5;
_16 = core::ptr::addr_of!(_20);
_13 = _9 as u64;
_33 = _8 ^ _8;
_23 = [_15,_15,_15,_15,_15,_15,_15,_15];
_25.1 = _11;
_5.0 = -_10.0;
_1.2 = !_6;
_27 = _3 as u16;
_27 = !_19;
_23 = [_15,_15,_15,_15,_15,_15,_15,_15];
_34 = [_15,_15,_15,_15,_15,_15];
_32 = _28;
_1.2 = !_1.1;
_7 = _30.fld0 as isize;
_10.0 = _24 as i128;
_25.0 = _1.0;
Call(_14 = fn18(_1, _34, _20, _6, _34), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_4.0 = _3 ^ _3;
match _15 {
0 => bb5,
1336203207 => bb9,
_ => bb8
}
}
bb8 = {
_13 = 8698306842656398447_u64 | 14564915012870589136_u64;
_7 = _1.1;
_19 = _5.0 as u16;
_5 = _10;
_11 = !false;
_11 = false;
(*_16) = 18054040419782821368_u64 % 4377771285245501129_u64;
_12 = !_7;
_10.0 = _5.0;
_10.0 = _3;
_16 = core::ptr::addr_of!((*_16));
_19 = !29798_u16;
_5 = (_2,);
_10.0 = -_3;
_6 = -_7;
_7 = _19 as isize;
_14 = [(-925938391_i32),(-229501285_i32),(-920776985_i32),1609105708_i32,1245461143_i32];
_1 = ((-1179395130424699272_i64), _6, _12);
_4.0 = (*_16) as i128;
(*_16) = 24_u8 as u64;
_1.2 = !_12;
_21 = 111_u8;
_1 = (9057723895274006257_i64, _12, _12);
Call(_1.0 = core::intrinsics::bswap((-8662474159817304650_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_17 = -_1.0;
_41 = 13717725705006026077_usize ^ 7_usize;
_4.0 = -_5.0;
_37 = _33 as f64;
_40.fld2 = [_41,_41,_41,_41];
(*_16) = !_13;
_39 = _18 as u128;
_42.fld3.0 = _28 + _28;
_36.0 = _9 as f64;
_42.fld6 = core::ptr::addr_of!(_25);
_23 = [_15,_15,_15,_15,_15,_15,_15,_15];
_43 = !_25.1;
_40.fld0 = _42.fld3.0 * _42.fld3.0;
_42.fld3.2.1 = _1.2 - _12;
_5 = (_10.0,);
_40.fld2 = [_41,_41,_41,_41];
_42.fld3.1 = (_36,);
_4 = (_10.0,);
_42.fld3.2.2 = _24;
match _15 {
0 => bb4,
1 => bb5,
1336203207 => bb10,
_ => bb3
}
}
bb10 = {
_42.fld4.0 = (*_16);
match _15 {
0 => bb3,
1 => bb7,
1336203207 => bb12,
_ => bb11
}
}
bb11 = {
_5 = _10;
_25.0 = !_1.0;
(*_16) = _20;
_25.1 = _3 <= _10.0;
_29 = _24 <= _24;
_7 = !_6;
_15 = 449920482_i32 | (-806881864_i32);
_30.fld0 = _8 as u128;
_28 = 14756_i16;
_10 = (_5.0,);
_21 = !200_u8;
_2 = -_10.0;
_13 = _15 as u64;
_4.0 = _3 * _2;
_13 = _20 % 18406782294927499306_u64;
RET = _15 as f64;
_29 = _25.1 ^ _25.1;
_20 = (*_16) >> _27;
_10.0 = _29 as i128;
(*_16) = !_20;
_5 = (_4.0,);
_25.1 = _29 | _29;
_7 = _6 + _24;
(*_16) = _20 + _20;
Call(_8 = core::intrinsics::bswap(954639116_u32), ReturnTo(bb5), UnwindUnreachable())
}
bb12 = {
_42.fld6 = core::ptr::addr_of!(_25);
_42.fld0 = [_9];
_1.2 = !_42.fld3.2.1;
_36 = (_37,);
_38 = core::ptr::addr_of!(_36.0);
_42.fld6 = core::ptr::addr_of!(_25);
_45.3 = [_15,_15,_15,_15,_15];
_45.2 = _40.fld2;
_16 = core::ptr::addr_of!(_42.fld4.0);
_35 = _25.1;
_42.fld3.3 = _21 << _25.0;
_42.fld5 = _25.0 as u16;
_2 = _9 as i128;
_42.fld5 = _27 - _27;
_42.fld6 = core::ptr::addr_of!(_25);
_42.fld3.1.0.0 = (*_38) - (*_38);
_23 = [_15,_15,_15,_15,_15,_15,_15,_15];
_42.fld6 = core::ptr::addr_of!(_25);
_5.0 = _32 as i128;
match _15 {
0 => bb3,
1 => bb13,
2 => bb14,
1336203207 => bb16,
_ => bb15
}
}
bb13 = {
_13 = 8698306842656398447_u64 | 14564915012870589136_u64;
_7 = _1.1;
_19 = _5.0 as u16;
_5 = _10;
_11 = !false;
_11 = false;
(*_16) = 18054040419782821368_u64 % 4377771285245501129_u64;
_12 = !_7;
_10.0 = _5.0;
_10.0 = _3;
_16 = core::ptr::addr_of!((*_16));
_19 = !29798_u16;
_5 = (_2,);
_10.0 = -_3;
_6 = -_7;
_7 = _19 as isize;
_14 = [(-925938391_i32),(-229501285_i32),(-920776985_i32),1609105708_i32,1245461143_i32];
_1 = ((-1179395130424699272_i64), _6, _12);
_4.0 = (*_16) as i128;
(*_16) = 24_u8 as u64;
_1.2 = !_12;
_21 = 111_u8;
_1 = (9057723895274006257_i64, _12, _12);
Call(_1.0 = core::intrinsics::bswap((-8662474159817304650_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_5 = _10;
_25.0 = !_1.0;
(*_16) = _20;
_25.1 = _3 <= _10.0;
_29 = _24 <= _24;
_7 = !_6;
_15 = 449920482_i32 | (-806881864_i32);
_30.fld0 = _8 as u128;
_28 = 14756_i16;
_10 = (_5.0,);
_21 = !200_u8;
_2 = -_10.0;
_13 = _15 as u64;
_4.0 = _3 * _2;
_13 = _20 % 18406782294927499306_u64;
RET = _15 as f64;
_29 = _25.1 ^ _25.1;
_20 = (*_16) >> _27;
_10.0 = _29 as i128;
(*_16) = !_20;
_5 = (_4.0,);
_25.1 = _29 | _29;
_7 = _6 + _24;
(*_16) = _20 + _20;
Call(_8 = core::intrinsics::bswap(954639116_u32), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_13 = 8698306842656398447_u64 | 14564915012870589136_u64;
_7 = _1.1;
_19 = _5.0 as u16;
_5 = _10;
_11 = !false;
_11 = false;
(*_16) = 18054040419782821368_u64 % 4377771285245501129_u64;
_12 = !_7;
_10.0 = _5.0;
_10.0 = _3;
_16 = core::ptr::addr_of!((*_16));
_19 = !29798_u16;
_5 = (_2,);
_10.0 = -_3;
_6 = -_7;
_7 = _19 as isize;
_14 = [(-925938391_i32),(-229501285_i32),(-920776985_i32),1609105708_i32,1245461143_i32];
_1 = ((-1179395130424699272_i64), _6, _12);
_4.0 = (*_16) as i128;
(*_16) = 24_u8 as u64;
_1.2 = !_12;
_21 = 111_u8;
_1 = (9057723895274006257_i64, _12, _12);
Call(_1.0 = core::intrinsics::bswap((-8662474159817304650_i64)), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_42.fld6 = core::ptr::addr_of!(_25);
Goto(bb17)
}
bb17 = {
Call(_47 = dump_var(2_usize, 27_usize, Move(_27), 20_usize, Move(_20), 12_usize, Move(_12), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_47 = dump_var(2_usize, 8_usize, Move(_8), 3_usize, Move(_3), 21_usize, Move(_21), 24_usize, Move(_24)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_47 = dump_var(2_usize, 7_usize, Move(_7), 23_usize, Move(_23), 34_usize, Move(_34), 6_usize, Move(_6)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_47 = dump_var(2_usize, 11_usize, Move(_11), 2_usize, Move(_2), 43_usize, Move(_43), 41_usize, Move(_41)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_47 = dump_var(2_usize, 35_usize, Move(_35), 48_usize, _48, 48_usize, _48, 48_usize, _48), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: bool,mut _3: i128,mut _4: (i128,)) -> f64 {
mir! {
type RET = f64;
let _5: Adt55;
let _6: Adt59;
let _7: Adt58;
let _8: char;
let _9: Adt61;
let _10: Adt51;
let _11: (i8, u16, isize);
let _12: Adt64;
let _13: *const u64;
let _14: ((f64,),);
let _15: Adt50;
let _16: isize;
let _17: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _18: f32;
let _19: f64;
let _20: *const [usize; 3];
let _21: *const (i64, bool);
let _22: (u64,);
let _23: Adt57;
let _24: (i16, ((f64,),), (i64, isize, isize), u8);
let _25: i8;
let _26: Adt50;
let _27: bool;
let _28: i32;
let _29: i32;
let _30: Adt64;
let _31: i16;
let _32: ();
let _33: ();
{
_1 = 9223372036854775807_isize;
_3 = -_4.0;
_7.fld3.fld6.2.3 = 1703236956_i32;
_7.fld3.fld2 = [_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3];
_6.fld3.3 = 102_u8;
_7.fld3.fld6.0 = _4.0;
_7.fld3.fld0 = core::ptr::addr_of!(_6.fld4.0);
_6.fld4.0 = (-109_i8) as u64;
_7.fld0.fld0 = [2_usize,5_usize,1829704875216529392_usize];
Call(_3 = fn4(_6.fld3.3, _7.fld3.fld6.2.3, _1, _7.fld0.fld0, _1, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6.fld5 = _6.fld4.0 as u16;
_7.fld3.fld5.2 = _2 < _2;
_7.fld3.fld6.2.4 = _4;
_2 = _7.fld3.fld5.2 < _7.fld3.fld5.2;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 >> _3;
_7.fld3.fld6.2.0 = _1 + _1;
_7.fld0.fld1.1.0 = !_3;
_6.fld4.0 = 23_i8 as u64;
_7.fld4 = _7.fld3.fld6.2.0 as f64;
_7.fld3.fld5.1 = (_7.fld3.fld6.2.4.0,);
_7.fld3.fld3.0 = !115_i8;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 | _7.fld0.fld1.1.0;
_7.fld0.fld1.3 = [3367_i16];
_7.fld3.fld6.1 = _7.fld4;
_6.fld3.0 = _2 as i16;
_8 = '\u{1fea5}';
_7.fld3.fld5.0 = _6.fld3.0;
_7.fld3.fld6.2.1 = 2647622032_u32;
_7.fld3.fld1 = 277427751509922547992344633299713295075_u128 % 227326958295875245634445958187628904051_u128;
_5 = Adt55 { fld0: _7.fld3.fld3.0 };
_7.fld3.fld5.0 = !_6.fld3.0;
_7.fld4 = _7.fld3.fld6.1 - _7.fld3.fld6.1;
_6.fld1 = _7.fld3.fld6.2.4.0 & _7.fld0.fld1.1.0;
_7.fld3.fld5.1 = _7.fld0.fld1.1;
_9.fld0.0 = _2 as i8;
Goto(bb2)
}
bb2 = {
_7.fld3.fld6.2 = (_1, 1549104798_u32, _7.fld4, 960557755_i32, _4);
_10.fld0.3 = [_6.fld3.0];
Goto(bb3)
}
bb3 = {
_10.fld3.fld5.0 = _7.fld3.fld5.0;
_6.fld3.3 = 217_u8 >> _7.fld3.fld6.2.1;
_10.fld3.fld5.3 = [_7.fld3.fld5.0];
_7.fld3.fld6.2.4.0 = _6.fld1 + _6.fld1;
_6.fld6 = core::ptr::addr_of!(_10.fld1);
_7.fld3.fld3.0 = _7.fld3.fld6.2.4.0 as i8;
_10.fld3.fld2 = [_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3];
_10.fld3.fld6.2 = _7.fld3.fld6.2;
_7.fld3.fld6.0 = _6.fld1;
_6.fld4.0 = !7610562960183381172_u64;
_7.fld0.fld1.3 = [_10.fld3.fld5.0];
_10.fld3.fld5.1.0 = -_7.fld3.fld6.2.4.0;
_10.fld3.fld3.0 = -_7.fld3.fld3.0;
_10.fld3.fld6.0 = _10.fld3.fld5.1.0;
_7.fld3.fld6.2.1 = _10.fld3.fld6.2.1;
Goto(bb4)
}
bb4 = {
_12.fld0.2.4.0 = _7.fld3.fld1 as i128;
_10.fld3.fld3.0 = _10.fld3.fld5.0 as i8;
_7.fld3.fld5.1.0 = -_10.fld3.fld6.0;
_15.fld3.1 = _6.fld5;
_12.fld0.3 = [_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_10.fld3.fld6.2.3];
_7.fld2 = _7.fld3.fld6.2.0 - _10.fld3.fld6.2.0;
_7.fld0.fld1.2 = !_2;
_10.fld3.fld6.2.4.0 = _10.fld3.fld6.0 * _10.fld3.fld5.1.0;
_7.fld3.fld6.0 = _2 as i128;
_6.fld0 = [_10.fld3.fld3.0];
_15.fld3.2 = _1;
RET = _10.fld3.fld6.2.2;
_12.fld0.0 = _10.fld3.fld6.0;
_7.fld0.fld1.1.0 = !_12.fld0.0;
_10.fld1.0 = (-4131818440991548113_i64);
_7.fld3.fld5.2 = _7.fld3.fld6.2.1 > _7.fld3.fld6.2.1;
match _7.fld3.fld6.2.1 {
0 => bb1,
1549104798 => bb5,
_ => bb3
}
}
bb5 = {
_3 = !_10.fld3.fld6.2.4.0;
_7.fld1 = _7.fld3.fld6.2.0 as usize;
_15.fld3 = (_7.fld3.fld3.0, _6.fld5, _10.fld3.fld6.2.0);
_7.fld3.fld5 = (_6.fld3.0, _10.fld3.fld6.2.4, _2, _10.fld3.fld5.3);
_10.fld3.fld5.1.0 = -_7.fld3.fld5.1.0;
_10.fld2 = !_7.fld2;
_10.fld3.fld3.1 = _6.fld5;
_10.fld3.fld5 = _7.fld3.fld5;
_10.fld2 = _1;
_17.2 = [_7.fld1,_7.fld1,_7.fld1,_7.fld1];
_18 = _10.fld3.fld6.2.3 as f32;
Call(_10.fld3.fld4 = fn7(_7.fld3.fld6.2, _10.fld3.fld3.1, _10.fld3.fld6.2.0, _15.fld3, _6.fld6, _10.fld3.fld3.0, _9.fld0, _5.fld0, _4.0, _2, _7.fld3.fld3.0), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_15.fld0 = core::ptr::addr_of!(_6.fld4.0);
_7.fld3.fld6.2.0 = !_10.fld2;
RET = _7.fld3.fld6.2.2 * _7.fld4;
_11 = (_15.fld3.0, _15.fld3.1, _1);
match _7.fld3.fld6.2.3 {
0 => bb1,
1 => bb5,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb8,
6 => bb9,
960557755 => bb11,
_ => bb10
}
}
bb7 = {
_3 = !_10.fld3.fld6.2.4.0;
_7.fld1 = _7.fld3.fld6.2.0 as usize;
_15.fld3 = (_7.fld3.fld3.0, _6.fld5, _10.fld3.fld6.2.0);
_7.fld3.fld5 = (_6.fld3.0, _10.fld3.fld6.2.4, _2, _10.fld3.fld5.3);
_10.fld3.fld5.1.0 = -_7.fld3.fld5.1.0;
_10.fld2 = !_7.fld2;
_10.fld3.fld3.1 = _6.fld5;
_10.fld3.fld5 = _7.fld3.fld5;
_10.fld2 = _1;
_17.2 = [_7.fld1,_7.fld1,_7.fld1,_7.fld1];
_18 = _10.fld3.fld6.2.3 as f32;
Call(_10.fld3.fld4 = fn7(_7.fld3.fld6.2, _10.fld3.fld3.1, _10.fld3.fld6.2.0, _15.fld3, _6.fld6, _10.fld3.fld3.0, _9.fld0, _5.fld0, _4.0, _2, _7.fld3.fld3.0), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_6.fld5 = _6.fld4.0 as u16;
_7.fld3.fld5.2 = _2 < _2;
_7.fld3.fld6.2.4 = _4;
_2 = _7.fld3.fld5.2 < _7.fld3.fld5.2;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 >> _3;
_7.fld3.fld6.2.0 = _1 + _1;
_7.fld0.fld1.1.0 = !_3;
_6.fld4.0 = 23_i8 as u64;
_7.fld4 = _7.fld3.fld6.2.0 as f64;
_7.fld3.fld5.1 = (_7.fld3.fld6.2.4.0,);
_7.fld3.fld3.0 = !115_i8;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 | _7.fld0.fld1.1.0;
_7.fld0.fld1.3 = [3367_i16];
_7.fld3.fld6.1 = _7.fld4;
_6.fld3.0 = _2 as i16;
_8 = '\u{1fea5}';
_7.fld3.fld5.0 = _6.fld3.0;
_7.fld3.fld6.2.1 = 2647622032_u32;
_7.fld3.fld1 = 277427751509922547992344633299713295075_u128 % 227326958295875245634445958187628904051_u128;
_5 = Adt55 { fld0: _7.fld3.fld3.0 };
_7.fld3.fld5.0 = !_6.fld3.0;
_7.fld4 = _7.fld3.fld6.1 - _7.fld3.fld6.1;
_6.fld1 = _7.fld3.fld6.2.4.0 & _7.fld0.fld1.1.0;
_7.fld3.fld5.1 = _7.fld0.fld1.1;
_9.fld0.0 = _2 as i8;
Goto(bb2)
}
bb9 = {
_10.fld3.fld5.0 = _7.fld3.fld5.0;
_6.fld3.3 = 217_u8 >> _7.fld3.fld6.2.1;
_10.fld3.fld5.3 = [_7.fld3.fld5.0];
_7.fld3.fld6.2.4.0 = _6.fld1 + _6.fld1;
_6.fld6 = core::ptr::addr_of!(_10.fld1);
_7.fld3.fld3.0 = _7.fld3.fld6.2.4.0 as i8;
_10.fld3.fld2 = [_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3];
_10.fld3.fld6.2 = _7.fld3.fld6.2;
_7.fld3.fld6.0 = _6.fld1;
_6.fld4.0 = !7610562960183381172_u64;
_7.fld0.fld1.3 = [_10.fld3.fld5.0];
_10.fld3.fld5.1.0 = -_7.fld3.fld6.2.4.0;
_10.fld3.fld3.0 = -_7.fld3.fld3.0;
_10.fld3.fld6.0 = _10.fld3.fld5.1.0;
_7.fld3.fld6.2.1 = _10.fld3.fld6.2.1;
Goto(bb4)
}
bb10 = {
_7.fld3.fld6.2 = (_1, 1549104798_u32, _7.fld4, 960557755_i32, _4);
_10.fld0.3 = [_6.fld3.0];
Goto(bb3)
}
bb11 = {
_15.fld5.1.0 = _10.fld3.fld3.1 as i128;
_10.fld0.2 = !_10.fld1.1;
_15.fld5.0 = _10.fld1.1 as i16;
_10.fld3.fld3 = (_7.fld3.fld3.0, _6.fld5, _10.fld3.fld6.2.0);
RET = _10.fld3.fld6.2.2 / f64::NAN;
_10.fld3.fld3.1 = !_6.fld5;
_10.fld3.fld0 = core::ptr::addr_of!(_6.fld4.0);
_17.0.0 = _7.fld3.fld3.0 * _5.fld0;
_12.fld0.2.2 = _10.fld3.fld6.2.2;
_17.0.1 = _10.fld3.fld3.1;
_7.fld3.fld5.1.0 = _6.fld4.0 as i128;
_7.fld3.fld3.2 = _11.2 >> _6.fld3.3;
_20 = core::ptr::addr_of!(_7.fld0.fld0);
_17.4 = [_7.fld1,_7.fld1,_7.fld1,_7.fld1];
_7.fld2 = _7.fld3.fld3.2 + _1;
_7.fld3.fld6.3 = [_10.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_10.fld3.fld6.2.3,_7.fld3.fld6.2.3,_10.fld3.fld6.2.3];
_12.fld0.2.4.0 = _7.fld3.fld6.2.4.0;
match _10.fld1.0 {
0 => bb7,
1 => bb9,
2 => bb3,
3 => bb6,
340282366920938463458147978031743204338 => bb13,
_ => bb12
}
}
bb12 = {
_6.fld5 = _6.fld4.0 as u16;
_7.fld3.fld5.2 = _2 < _2;
_7.fld3.fld6.2.4 = _4;
_2 = _7.fld3.fld5.2 < _7.fld3.fld5.2;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 >> _3;
_7.fld3.fld6.2.0 = _1 + _1;
_7.fld0.fld1.1.0 = !_3;
_6.fld4.0 = 23_i8 as u64;
_7.fld4 = _7.fld3.fld6.2.0 as f64;
_7.fld3.fld5.1 = (_7.fld3.fld6.2.4.0,);
_7.fld3.fld3.0 = !115_i8;
_7.fld3.fld6.2.4.0 = _7.fld3.fld6.0 | _7.fld0.fld1.1.0;
_7.fld0.fld1.3 = [3367_i16];
_7.fld3.fld6.1 = _7.fld4;
_6.fld3.0 = _2 as i16;
_8 = '\u{1fea5}';
_7.fld3.fld5.0 = _6.fld3.0;
_7.fld3.fld6.2.1 = 2647622032_u32;
_7.fld3.fld1 = 277427751509922547992344633299713295075_u128 % 227326958295875245634445958187628904051_u128;
_5 = Adt55 { fld0: _7.fld3.fld3.0 };
_7.fld3.fld5.0 = !_6.fld3.0;
_7.fld4 = _7.fld3.fld6.1 - _7.fld3.fld6.1;
_6.fld1 = _7.fld3.fld6.2.4.0 & _7.fld0.fld1.1.0;
_7.fld3.fld5.1 = _7.fld0.fld1.1;
_9.fld0.0 = _2 as i8;
Goto(bb2)
}
bb13 = {
_15.fld1 = _7.fld3.fld1;
_7.fld3.fld4 = [_10.fld3.fld6.2.3,_10.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_7.fld3.fld6.2.3,_10.fld3.fld6.2.3,_10.fld3.fld6.2.3];
_6.fld3.2.0 = _10.fld1.0 + _10.fld1.0;
_10.fld3.fld1 = _17.0.0 as u128;
_15.fld4 = _10.fld3.fld4;
_10.fld3.fld1 = _10.fld3.fld5.1.0 as u128;
_12.fld1 = core::ptr::addr_of!(_12.fld0.2);
_15.fld6.2.0 = !_7.fld3.fld3.2;
_7.fld0.fld1.0 = _7.fld1 as i16;
_21 = core::ptr::addr_of!(_10.fld1);
_12.fld0.3 = _7.fld3.fld6.3;
_25 = _10.fld3.fld3.0 & _15.fld3.0;
_10.fld1.0 = _6.fld3.2.0;
_26.fld3.2 = _1 >> _7.fld3.fld6.2.1;
_22 = _6.fld4;
_15.fld3.2 = _15.fld6.2.0 & _15.fld6.2.0;
match _10.fld3.fld6.2.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb11,
5 => bb6,
6 => bb9,
9223372036854775807 => bb14,
_ => bb8
}
}
bb14 = {
_18 = _22.0 as f32;
_6.fld3.1.0 = (_10.fld3.fld6.2.2,);
_15.fld6.2.3 = _7.fld3.fld3.0 as i32;
_26.fld6.2 = (_7.fld2, _10.fld3.fld6.2.1, _6.fld3.1.0.0, _15.fld6.2.3, _10.fld3.fld5.1);
_24.1.0 = (_26.fld6.2.2,);
_7.fld3.fld6.2 = (_26.fld6.2.0, _10.fld3.fld6.2.1, _6.fld3.1.0.0, _10.fld3.fld6.2.3, _26.fld6.2.4);
_10.fld1.0 = _11.0 as i64;
_7.fld3.fld6.2 = (_26.fld3.2, _10.fld3.fld6.2.1, _6.fld3.1.0.0, _15.fld6.2.3, _10.fld3.fld5.1);
_10.fld3.fld5 = _7.fld3.fld5;
_30.fld0.3 = [_7.fld3.fld6.2.3,_15.fld6.2.3,_10.fld3.fld6.2.3,_10.fld3.fld6.2.3,_10.fld3.fld6.2.3,_10.fld3.fld6.2.3];
_12.fld0.2.3 = (*_21).1 as i32;
(*_21).1 = _10.fld0.2;
_10.fld1 = (_6.fld3.2.0, _10.fld0.2);
_10.fld3.fld6.2 = (_26.fld6.2.0, _7.fld3.fld6.2.1, _7.fld4, _12.fld0.2.3, _26.fld6.2.4);
_7.fld3.fld5.2 = (*_21).1 ^ (*_21).1;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(3_usize, 2_usize, Move(_2), 11_usize, Move(_11), 3_usize, Move(_3), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: u8,mut _2: i32,mut _3: isize,mut _4: [usize; 3],mut _5: isize,mut _6: isize) -> i128 {
mir! {
type RET = i128;
let _7: bool;
let _8: f64;
let _9: i16;
let _10: char;
let _11: isize;
let _12: u64;
let _13: [i32; 7];
let _14: (i16, (i128,), bool, [i16; 1]);
let _15: isize;
let _16: (i128, f64, (isize, u32, f64, i32, (i128,)), [i32; 6]);
let _17: *const char;
let _18: Adt59;
let _19: i8;
let _20: [i32; 8];
let _21: *const u64;
let _22: (i16, ((f64,),), (i64, isize, isize), u8);
let _23: i128;
let _24: *const [usize; 3];
let _25: ();
let _26: ();
{
RET = 88856008759263651137769033784557303571_i128 << _5;
_2 = -467279930_i32;
RET = !28430633793259602052890943531608761115_i128;
_2 = (-648208694_i32);
RET = !49291135657934331083846236267416662320_i128;
_4 = [1_usize,6_usize,12158304530998741449_usize];
match _6 {
0 => bb1,
9223372036854775807 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
RET = (-81698841162651467625442697987349997807_i128) ^ 20899885347956548348432005844222853446_i128;
_1 = (-19667566931647834438692858954988440009_i128) as u8;
_6 = _3 | _3;
_2 = 1881474574_i32 >> _6;
_4 = [2_usize,1_usize,5698948773203487855_usize];
_2 = (-1545245049_i32) | (-647863551_i32);
_6 = _3 & _3;
_5 = '\u{e8fc7}' as isize;
_6 = -_3;
_2 = 2876172814785163596_u64 as i32;
RET = 65573631570415731633423070352276403006_i128;
_3 = _6;
RET = (-142031522497108108812104130048351948938_i128) >> _5;
_8 = (-18844_i16) as f64;
_3 = _6;
_5 = _3 * _6;
_4 = [1508882954705730917_usize,0_usize,3_usize];
_5 = _8 as isize;
RET = -81429355425990354562992463946204457016_i128;
RET = (-131396624482120226400233075338659379533_i128);
_7 = true;
_7 = _3 > _6;
_5 = _8 as isize;
_3 = 95301987936267238617292535596480601496_i128 as isize;
_4 = [5_usize,12007469352127314144_usize,4_usize];
_5 = !_3;
_7 = _6 != _5;
_1 = 210_u8;
match _1 {
0 => bb1,
1 => bb4,
210 => bb6,
_ => bb5
}
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
RET = (-116589968187279244571128116133991368475_i128) >> _3;
_5 = _6;
RET = (-167127529750622436966779526613190990030_i128);
RET = 38770025785830861049651654250598740093_i128;
_10 = '\u{1f13c}';
_1 = 189_u8;
_2 = (-1546058724_i32) + (-326252784_i32);
RET = (-4173631553027577322136132548271886454_i128) + 134174434192736787630522523952129858320_i128;
_7 = _8 > _8;
_9 = !556_i16;
RET = (-103010292027310852315502775652878305708_i128);
Goto(bb7)
}
bb7 = {
_9 = 15965_i16;
_3 = _6 ^ _6;
_4 = [3_usize,6329367982889215703_usize,4_usize];
RET = 94730940064347763844255615072724295761_i128;
_7 = _9 > _9;
_7 = false;
_8 = _1 as f64;
_12 = !4244416501065233052_u64;
_5 = !_3;
_5 = !_6;
_11 = _3;
_10 = '\u{3e609}';
RET = !78013502963078485882488436876992756031_i128;
Call(_8 = fn5(_11, _1, _1, _7, _10, _1, _10, _1, _6, _11, _7, _1, _1, _12, _6, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = -(-100849438830084573636183744789526756487_i128);
_14.2 = _7;
_12 = 13166491271010635793_u64;
_10 = '\u{10c085}';
_14.1.0 = 35477956865670797082576624581446953036_i128 | 46308463732338940908078878114859819411_i128;
_6 = _11 | _3;
_14.1 = ((-46092178663196856838637153297062817225_i128),);
RET = (-7_i8) as i128;
_15 = !_6;
_1 = 40_u8;
_14.1 = (69910876543040624789131713149899931141_i128,);
_2 = (-1653205047_i32);
_3 = -_6;
_14.1 = ((-35838375973704781029942754720769006978_i128),);
_11 = _15 >> _3;
_16.3 = [_2,_2,_2,_2,_2,_2];
_16.2 = (_3, 3187808252_u32, _8, _2, _14.1);
match _16.2.1 {
0 => bb9,
1 => bb10,
2 => bb11,
3187808252 => bb13,
_ => bb12
}
}
bb9 = {
_9 = 15965_i16;
_3 = _6 ^ _6;
_4 = [3_usize,6329367982889215703_usize,4_usize];
RET = 94730940064347763844255615072724295761_i128;
_7 = _9 > _9;
_7 = false;
_8 = _1 as f64;
_12 = !4244416501065233052_u64;
_5 = !_3;
_5 = !_6;
_11 = _3;
_10 = '\u{3e609}';
RET = !78013502963078485882488436876992756031_i128;
Call(_8 = fn5(_11, _1, _1, _7, _10, _1, _10, _1, _6, _11, _7, _1, _1, _12, _6, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
RET = (-116589968187279244571128116133991368475_i128) >> _3;
_5 = _6;
RET = (-167127529750622436966779526613190990030_i128);
RET = 38770025785830861049651654250598740093_i128;
_10 = '\u{1f13c}';
_1 = 189_u8;
_2 = (-1546058724_i32) + (-326252784_i32);
RET = (-4173631553027577322136132548271886454_i128) + 134174434192736787630522523952129858320_i128;
_7 = _8 > _8;
_9 = !556_i16;
RET = (-103010292027310852315502775652878305708_i128);
Goto(bb7)
}
bb11 = {
Return()
}
bb12 = {
RET = (-81698841162651467625442697987349997807_i128) ^ 20899885347956548348432005844222853446_i128;
_1 = (-19667566931647834438692858954988440009_i128) as u8;
_6 = _3 | _3;
_2 = 1881474574_i32 >> _6;
_4 = [2_usize,1_usize,5698948773203487855_usize];
_2 = (-1545245049_i32) | (-647863551_i32);
_6 = _3 & _3;
_5 = '\u{e8fc7}' as isize;
_6 = -_3;
_2 = 2876172814785163596_u64 as i32;
RET = 65573631570415731633423070352276403006_i128;
_3 = _6;
RET = (-142031522497108108812104130048351948938_i128) >> _5;
_8 = (-18844_i16) as f64;
_3 = _6;
_5 = _3 * _6;
_4 = [1508882954705730917_usize,0_usize,3_usize];
_5 = _8 as isize;
RET = -81429355425990354562992463946204457016_i128;
RET = (-131396624482120226400233075338659379533_i128);
_7 = true;
_7 = _3 > _6;
_5 = _8 as isize;
_3 = 95301987936267238617292535596480601496_i128 as isize;
_4 = [5_usize,12007469352127314144_usize,4_usize];
_5 = !_3;
_7 = _6 != _5;
_1 = 210_u8;
match _1 {
0 => bb1,
1 => bb4,
210 => bb6,
_ => bb5
}
}
bb13 = {
_18.fld2 = !_16.2.1;
_16.2.2 = _8;
_18.fld3.0 = _9 + _9;
_16.1 = -_8;
_18.fld3.3 = (-5450806550142264044_i64) as u8;
_18.fld3.2.2 = _16.2.0;
_8 = -_16.2.2;
_16.2.4.0 = _14.1.0;
_18.fld3.1.0.0 = -_16.2.2;
_18.fld5 = 55378_u16;
_18.fld4 = (_12,);
_18.fld3.0 = -_9;
_16.2.2 = 0_usize as f64;
_22.3 = _18.fld3.3 >> _18.fld2;
_18.fld3.1.0.0 = -_8;
_18.fld3.2.1 = _11;
_21 = core::ptr::addr_of!(_18.fld4.0);
_22.2.1 = _16.1 as isize;
_18.fld0 = [6_i8];
_14.3 = [_18.fld3.0];
_22.1 = (_18.fld3.1.0,);
Goto(bb14)
}
bb14 = {
_16.2.1 = _18.fld2;
_4 = [7185313278734413480_usize,14155635928365473579_usize,9754971741888223885_usize];
RET = _2 as i128;
_14.1.0 = !_16.2.4.0;
_21 = core::ptr::addr_of!((*_21));
_15 = !_22.2.1;
_22.3 = _18.fld3.3 >> _11;
_18.fld3.2.0 = _16.2.1 as i64;
_1 = _16.2.3 as u8;
_19 = _22.3 as i8;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(4_usize, 9_usize, Move(_9), 2_usize, Move(_2), 15_usize, Move(_15), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(4_usize, 3_usize, Move(_3), 6_usize, Move(_6), 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: isize,mut _2: u8,mut _3: u8,mut _4: bool,mut _5: char,mut _6: u8,mut _7: char,mut _8: u8,mut _9: isize,mut _10: isize,mut _11: bool,mut _12: u8,mut _13: u8,mut _14: u64,mut _15: isize,mut _16: bool) -> f64 {
mir! {
type RET = f64;
let _17: u64;
let _18: Adt61;
let _19: char;
let _20: i8;
let _21: isize;
let _22: u64;
let _23: i16;
let _24: char;
let _25: (i64, isize, isize);
let _26: Adt61;
let _27: isize;
let _28: isize;
let _29: ();
let _30: ();
{
_8 = 16787590831389968998_usize as u8;
_14 = 21964938131922018906761670338064461384_u128 as u64;
RET = (-12_i8) as f64;
_5 = _7;
_14 = 9531297580456292460_u64 * 1796774466341789190_u64;
_6 = _8;
RET = 5439_i16 as f64;
_11 = !_16;
_2 = _13 % 205_u8;
_9 = _15;
_1 = _15;
_2 = !_13;
_4 = !_16;
_16 = !_11;
_18.fld0.0 = _14 as i8;
_4 = _11;
_17 = !_14;
Goto(bb1)
}
bb1 = {
RET = 2214168622897064047_usize as f64;
_6 = _3 % 140_u8;
Goto(bb2)
}
bb2 = {
_14 = _11 as u64;
_3 = !_2;
_20 = _18.fld0.0;
_7 = _5;
RET = 1310669819_i32 as f64;
RET = _14 as f64;
_18.fld0.0 = _20;
_4 = _16;
_4 = _9 <= _9;
_19 = _7;
_2 = _8;
_18.fld0.0 = _20 * _20;
_7 = _19;
_1 = _10;
_2 = _6 * _13;
_16 = !_11;
_5 = _7;
_12 = _8;
_3 = !_13;
_8 = !_2;
_10 = _15;
_18.fld0 = (_20,);
_21 = -_10;
_5 = _19;
_9 = (-30956_i16) as isize;
_1 = 229101652441686766269341195412805038199_u128 as isize;
match _13 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
189 => bb8,
_ => bb7
}
}
bb3 = {
RET = 2214168622897064047_usize as f64;
_6 = _3 % 140_u8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_3 = 169551520289499935167937006511922396636_i128 as u8;
RET = 2860336285_u32 as f64;
_17 = _20 as u64;
_7 = _5;
_11 = !_4;
_26.fld0 = (_18.fld0.0,);
match _13 {
0 => bb2,
189 => bb10,
_ => bb9
}
}
bb9 = {
Return()
}
bb10 = {
_14 = _17;
_25 = (6051020945923345317_i64, _21, _9);
RET = 28032_u16 as f64;
_17 = _14;
_2 = _4 as u8;
_9 = _15 & _25.1;
_15 = _25.2 & _21;
_26.fld0.0 = _20;
_14 = 1215552544_u32 as u64;
_19 = _7;
_19 = _5;
_18.fld0.0 = (-45160248061804165572181527953414026570_i128) as i8;
_6 = _8 & _12;
_25.1 = _15;
_26 = Adt61 { fld0: _18.fld0 };
_23 = 3491_i16 * 5475_i16;
_6 = _4 as u8;
Call(_12 = core::intrinsics::transmute(_11), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_25.0 = (-9067914973989273826_i64);
_24 = _5;
_6 = _17 as u8;
_26.fld0.0 = -_20;
RET = _23 as f64;
_27 = _23 as isize;
_22 = _23 as u64;
Call(_18.fld0 = fn6(_5, _25, _5, _16, _25.1, _19, _3, _25.2, _14), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4 = _16;
_11 = !_4;
_14 = 5805319902830417740_usize as u64;
_21 = _27 & _9;
match _25.0 {
340282366920938463454306692457778937630 => bb14,
_ => bb13
}
}
bb13 = {
_25.0 = (-9067914973989273826_i64);
_24 = _5;
_6 = _17 as u8;
_26.fld0.0 = -_20;
RET = _23 as f64;
_27 = _23 as isize;
_22 = _23 as u64;
Call(_18.fld0 = fn6(_5, _25, _5, _16, _25.1, _19, _3, _25.2, _14), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
_26.fld0.0 = -_20;
_7 = _19;
_4 = _16;
_28 = _21 + _27;
_21 = _27 * _15;
_8 = _3;
_15 = _10 | _9;
_25.0 = (-362774624336297800_i64);
_24 = _5;
_18.fld0 = (_20,);
_17 = _22;
_10 = _21;
_17 = _22 - _14;
_25.2 = _28;
_24 = _19;
Goto(bb15)
}
bb15 = {
Call(_29 = dump_var(5_usize, 9_usize, Move(_9), 21_usize, Move(_21), 22_usize, Move(_22), 6_usize, Move(_6)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_29 = dump_var(5_usize, 10_usize, Move(_10), 27_usize, Move(_27), 8_usize, Move(_8), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_29 = dump_var(5_usize, 4_usize, Move(_4), 28_usize, Move(_28), 12_usize, Move(_12), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_29 = dump_var(5_usize, 11_usize, Move(_11), 30_usize, _30, 30_usize, _30, 30_usize, _30), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: char,mut _2: (i64, isize, isize),mut _3: char,mut _4: bool,mut _5: isize,mut _6: char,mut _7: u8,mut _8: isize,mut _9: u64) -> (i8,) {
mir! {
type RET = (i8,);
let _10: bool;
let _11: *const char;
let _12: isize;
let _13: isize;
let _14: bool;
let _15: f32;
let _16: Adt62;
let _17: Adt61;
let _18: isize;
let _19: Adt59;
let _20: (i64, isize, isize);
let _21: bool;
let _22: [bool; 6];
let _23: isize;
let _24: Adt64;
let _25: Adt64;
let _26: [i32; 8];
let _27: Adt64;
let _28: isize;
let _29: isize;
let _30: bool;
let _31: *const char;
let _32: i16;
let _33: [usize; 3];
let _34: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _35: usize;
let _36: i128;
let _37: ();
let _38: ();
{
_2.1 = _5;
RET.0 = (-125_i8);
_8 = _2.2;
_2.2 = _8;
_2.2 = 1040968911_u32 as isize;
_3 = _6;
RET.0 = 51_i8 | 104_i8;
RET.0 = (-70_i8);
_4 = !false;
RET = (22_i8,);
_8 = (-1991517306_i32) as isize;
_9 = !7838062568832950765_u64;
RET = ((-37_i8),);
_2.0 = (-7069946020074931304_i64) << _2.2;
_2.1 = (-154771060745364461121686387346131505657_i128) as isize;
_7 = _9 as u8;
_2.1 = _5 ^ _2.2;
_2 = (7278952222972541433_i64, _5, _5);
_2.2 = (-14127_i16) as isize;
_9 = 10009986500656222041_u64 & 16672287232206622326_u64;
_9 = 15526638791692623532_u64 % 16502841185202609610_u64;
_2 = ((-5187431200295044908_i64), _8, _8);
_8 = 14_i8 as isize;
_11 = core::ptr::addr_of!(_3);
_10 = !_4;
_5 = -_8;
_8 = _9 as isize;
RET.0 = -(-35_i8);
_3 = _1;
Goto(bb1)
}
bb1 = {
_12 = _2.1;
_9 = _2.0 as u64;
_2 = (845439567560883665_i64, _8, _5);
_13 = _2.2;
RET.0 = -48_i8;
_4 = _10 | _10;
RET.0 = 110_i8 & 77_i8;
_6 = _1;
_6 = _3;
RET.0 = (-1603026947_i32) as i8;
RET = (82_i8,);
_12 = !_2.1;
RET = ((-41_i8),);
_2.2 = _7 as isize;
_7 = 54537_u16 as u8;
_6 = _3;
Goto(bb2)
}
bb2 = {
_8 = _2.0 as isize;
RET.0 = !(-40_i8);
(*_11) = _6;
Goto(bb3)
}
bb3 = {
_5 = _2.1 & _12;
RET.0 = 17_i8;
_16.fld6.fld2.3 = [1711442350_i32,(-1650892795_i32),(-1192222555_i32),(-1890798903_i32),1345610002_i32,(-485322220_i32)];
_11 = core::ptr::addr_of!(_6);
_16.fld6.fld2.2.0 = !_12;
Goto(bb4)
}
bb4 = {
_16.fld6.fld2.2.4 = (13075247310294152567243862032295002087_i128,);
RET = (54_i8,);
_16.fld6.fld2.2.2 = (-29144_i16) as f64;
_16.fld7.fld1.3 = [8919_i16];
Call(_16.fld2 = core::intrinsics::bswap(2447603001318919706_usize), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_16.fld6.fld3 = core::ptr::addr_of!(_16.fld6.fld2.2);
_16.fld0.fld0 = 22108_i16;
_16.fld6.fld1.2 = (_2.0, _5, _2.2);
_16.fld6.fld4 = _7;
_16.fld7.fld1.1 = _16.fld6.fld2.2.4;
_16.fld6.fld0 = (_16.fld6.fld2.2.2,);
_16.fld6.fld1.1 = (_16.fld6.fld0,);
_6 = _3;
_16.fld5 = _7 as i32;
_10 = _4;
_16.fld3.3 = [_16.fld5,_16.fld5,_16.fld5,_16.fld5,_16.fld5];
_17.fld0 = ((-106_i8),);
_16.fld4 = _16.fld7.fld1.3;
_16.fld3.0.1 = 32191_u16 & 39925_u16;
_16.fld6.fld1.1.0.0 = _16.fld6.fld0.0;
_19.fld3.3 = _16.fld6.fld4 << _9;
_16.fld0.fld0 = (-17511_i16);
(*_11) = _3;
_20.1 = _2.1;
_2.1 = !_8;
_25.fld0.0 = _16.fld6.fld2.2.4.0 + _16.fld7.fld1.1.0;
_21 = !_10;
_16.fld6.fld2.2 = (_2.2, 2888570364_u32, _16.fld6.fld0.0, _16.fld5, _16.fld7.fld1.1);
Call(_19.fld4.0 = core::intrinsics::transmute(_16.fld6.fld1.2.1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_16.fld6.fld3 = core::ptr::addr_of!(_25.fld0.2);
_24.fld0.2.3 = _16.fld6.fld2.2.1 as i32;
match _16.fld0.fld0 {
340282366920938463463374607431768193945 => bb8,
_ => bb7
}
}
bb7 = {
_5 = _2.1 & _12;
RET.0 = 17_i8;
_16.fld6.fld2.3 = [1711442350_i32,(-1650892795_i32),(-1192222555_i32),(-1890798903_i32),1345610002_i32,(-485322220_i32)];
_11 = core::ptr::addr_of!(_6);
_16.fld6.fld2.2.0 = !_12;
Goto(bb4)
}
bb8 = {
_24.fld0.2.1 = !_16.fld6.fld2.2.1;
_27.fld0.2.4 = _16.fld7.fld1.1;
_27.fld0.3 = [_24.fld0.2.3,_16.fld5,_24.fld0.2.3,_16.fld6.fld2.2.3,_24.fld0.2.3,_24.fld0.2.3];
_27.fld0.2.3 = _24.fld0.2.3 & _16.fld5;
_24.fld0.2 = (_8, _16.fld6.fld2.2.1, _16.fld6.fld0.0, _16.fld5, _16.fld7.fld1.1);
_16.fld6.fld2 = (_27.fld0.2.4.0, _24.fld0.2.2, _24.fld0.2, _27.fld0.3);
_19.fld3.2 = (_2.0, _24.fld0.2.0, _16.fld6.fld1.2.1);
_16.fld0.fld2 = [3_usize,17784811515754847466_usize,17607443413183163788_usize,0_usize];
_15 = _24.fld0.2.1 as f32;
_16.fld6.fld1.2.1 = _24.fld0.2.0 & _12;
_16.fld6.fld1.2.2 = -_8;
_13 = _19.fld3.2.2;
_27.fld0.2.1 = _16.fld6.fld4 as u32;
_2.0 = _16.fld6.fld1.2.0;
_16.fld6.fld1.1 = (_16.fld6.fld0,);
_25.fld0.2.4.0 = _16.fld6.fld2.2.2 as i128;
_14 = !_21;
_16.fld3.4 = [4741417848969796693_usize,10859951335727385062_usize,8100230604675763953_usize,6_usize];
_16.fld3.0.2 = !_19.fld3.2.2;
_15 = _17.fld0.0 as f32;
_29 = _15 as isize;
_27.fld0.2.0 = _19.fld3.2.1;
_12 = -_5;
_19.fld0 = [_17.fld0.0];
Goto(bb9)
}
bb9 = {
_16.fld6.fld2.2.1 = _27.fld0.2.1 - _27.fld0.2.1;
_19.fld3.0 = -_16.fld0.fld0;
_7 = 6_usize as u8;
_25.fld0.2.0 = !_19.fld3.2.1;
_27.fld0.0 = !_25.fld0.0;
_16.fld0.fld1 = [15388187707646521558_usize,4_usize,3_usize];
_25 = Adt64 { fld0: _16.fld6.fld2,fld1: _16.fld6.fld3 };
_16.fld7.fld1 = (_19.fld3.0, _16.fld6.fld2.2.4, _4, _16.fld4);
_23 = _25.fld0.2.0 - _12;
_19.fld5 = _16.fld3.0.1;
_2.1 = -_13;
_16.fld6.fld0 = (_25.fld0.1,);
_25.fld0.2.3 = !_16.fld5;
_16.fld5 = _25.fld0.2.3 & _27.fld0.2.3;
_16.fld6.fld1.1.0 = (_24.fld0.2.2,);
match _16.fld6.fld1.2.0 {
0 => bb3,
1 => bb4,
2 => bb10,
3 => bb11,
845439567560883665 => bb13,
_ => bb12
}
}
bb10 = {
_24.fld0.2.1 = !_16.fld6.fld2.2.1;
_27.fld0.2.4 = _16.fld7.fld1.1;
_27.fld0.3 = [_24.fld0.2.3,_16.fld5,_24.fld0.2.3,_16.fld6.fld2.2.3,_24.fld0.2.3,_24.fld0.2.3];
_27.fld0.2.3 = _24.fld0.2.3 & _16.fld5;
_24.fld0.2 = (_8, _16.fld6.fld2.2.1, _16.fld6.fld0.0, _16.fld5, _16.fld7.fld1.1);
_16.fld6.fld2 = (_27.fld0.2.4.0, _24.fld0.2.2, _24.fld0.2, _27.fld0.3);
_19.fld3.2 = (_2.0, _24.fld0.2.0, _16.fld6.fld1.2.1);
_16.fld0.fld2 = [3_usize,17784811515754847466_usize,17607443413183163788_usize,0_usize];
_15 = _24.fld0.2.1 as f32;
_16.fld6.fld1.2.1 = _24.fld0.2.0 & _12;
_16.fld6.fld1.2.2 = -_8;
_13 = _19.fld3.2.2;
_27.fld0.2.1 = _16.fld6.fld4 as u32;
_2.0 = _16.fld6.fld1.2.0;
_16.fld6.fld1.1 = (_16.fld6.fld0,);
_25.fld0.2.4.0 = _16.fld6.fld2.2.2 as i128;
_14 = !_21;
_16.fld3.4 = [4741417848969796693_usize,10859951335727385062_usize,8100230604675763953_usize,6_usize];
_16.fld3.0.2 = !_19.fld3.2.2;
_15 = _17.fld0.0 as f32;
_29 = _15 as isize;
_27.fld0.2.0 = _19.fld3.2.1;
_12 = -_5;
_19.fld0 = [_17.fld0.0];
Goto(bb9)
}
bb11 = {
_8 = _2.0 as isize;
RET.0 = !(-40_i8);
(*_11) = _6;
Goto(bb3)
}
bb12 = {
_5 = _2.1 & _12;
RET.0 = 17_i8;
_16.fld6.fld2.3 = [1711442350_i32,(-1650892795_i32),(-1192222555_i32),(-1890798903_i32),1345610002_i32,(-485322220_i32)];
_11 = core::ptr::addr_of!(_6);
_16.fld6.fld2.2.0 = !_12;
Goto(bb4)
}
bb13 = {
_19.fld5 = !_16.fld3.0.1;
_19.fld1 = _27.fld0.0;
_20.2 = _24.fld0.2.0 ^ _16.fld6.fld1.2.2;
_19.fld2 = _27.fld0.2.1;
_27.fld0.2.0 = _16.fld6.fld1.2.1;
_16.fld7.fld0 = [8585614837365636447_usize,0_usize,6192928369077287477_usize];
Goto(bb14)
}
bb14 = {
_24.fld1 = _16.fld6.fld3;
_11 = core::ptr::addr_of!(_1);
_27.fld0.0 = _16.fld7.fld1.1.0;
_8 = _24.fld0.2.1 as isize;
_34.3 = [_16.fld5,_27.fld0.2.3,_16.fld5,_25.fld0.2.3,_16.fld5];
_16.fld5 = 88522131400904059272415850965684443481_u128 as i32;
_27.fld0.2.4.0 = -_16.fld7.fld1.1.0;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(6_usize, 3_usize, Move(_3), 6_usize, Move(_6), 21_usize, Move(_21), 14_usize, Move(_14)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(6_usize, 1_usize, Move(_1), 8_usize, Move(_8), 7_usize, Move(_7), 13_usize, Move(_13)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: (isize, u32, f64, i32, (i128,)),mut _2: u16,mut _3: isize,mut _4: (i8, u16, isize),mut _5: *const (i64, bool),mut _6: i8,mut _7: (i8,),mut _8: i8,mut _9: i128,mut _10: bool,mut _11: i8) -> [i32; 8] {
mir! {
type RET = [i32; 8];
let _12: Adt53;
let _13: i32;
let _14: f32;
let _15: u128;
let _16: Adt55;
let _17: char;
let _18: usize;
let _19: *const u64;
let _20: *const [usize; 3];
let _21: ();
let _22: ();
{
_2 = _4.1;
RET = [_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3];
_1.0 = _3;
_1.0 = _3;
_9 = -_1.4.0;
_1.2 = _2 as f64;
RET = [_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3];
_1.2 = (*_5).0 as f64;
_5 = core::ptr::addr_of!((*_5));
_12.fld0.2 = _4.0 <= _4.0;
_12.fld4.fld1.3 = [(-17424_i16)];
_5 = core::ptr::addr_of!((*_5));
_12.fld4.fld0 = [11165054266343110101_usize,4_usize,6_usize];
_1.4 = (_9,);
_1.3 = -(-569167747_i32);
_12.fld0 = (19806_i16, _1.4, _10, _12.fld4.fld1.3);
_5 = core::ptr::addr_of!((*_5));
_12.fld4.fld1.1 = _12.fld0.1;
_12.fld4.fld1 = (_12.fld0.0, _12.fld0.1, _10, _12.fld0.3);
(*_5) = Checked(8891735733790306125_i64 * (-7958734357452868972_i64));
_12.fld4.fld1.2 = !_12.fld0.2;
(*_5).0 = !(-6831183015507459190_i64);
RET = [_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3];
_13 = _1.2 as i32;
_2 = !_4.1;
_12.fld4.fld1.1.0 = -_12.fld0.1.0;
Call(_11 = fn8(_5, (*_5).1, _1.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [_1.3,_13,_13,_1.3,_13,_13,_13,_13];
_1.3 = _13;
_12.fld2 = _1.4;
_13 = _1.3;
_14 = _1.2 as f32;
_12.fld4.fld0 = [2_usize,1_usize,17237447504442106523_usize];
_12.fld3 = !_1.1;
_12.fld4.fld1.2 = (*_5).1;
_1.3 = _13 | _13;
(*_5) = (7395675048053965648_i64, _12.fld4.fld1.2);
_12.fld1 = _4.1 ^ _4.1;
_12.fld4.fld1.0 = !_12.fld0.0;
_12.fld4.fld1.1 = (_12.fld2.0,);
(*_5) = Checked((-945666106996288828_i64) * 4213325204600721077_i64);
_1.4.0 = _9 & _9;
_13 = _1.3 + _1.3;
_12.fld4.fld1.1.0 = 340257561904827908531448490255419410561_u128 as i128;
_12.fld4.fld1.2 = _10;
_12.fld0.1.0 = _1.4.0;
_12.fld4.fld1.1 = _1.4;
_3 = _13 as isize;
_2 = _12.fld1 % 18325_u16;
_12.fld4.fld1.0 = _12.fld0.0 & _12.fld0.0;
_1.0 = -_4.2;
Goto(bb2)
}
bb2 = {
_9 = _12.fld0.2 as i128;
_4.1 = 6_usize as u16;
_1.0 = _3 + _3;
_1.4 = (_9,);
_10 = _12.fld4.fld1.0 != _12.fld0.0;
_7 = (_4.0,);
_12.fld4.fld1.2 = _10;
_12.fld0.1.0 = _12.fld4.fld1.1.0;
_12.fld2.0 = -_1.4.0;
_12.fld0.2 = _3 != _4.2;
_12.fld0.3 = [_12.fld4.fld1.0];
_1.4.0 = _12.fld0.1.0 | _12.fld2.0;
_14 = _7.0 as f32;
(*_5).0 = 1784793235546552550_i64;
(*_5).0 = 96_u8 as i64;
_1.0 = _3 & _3;
_5 = core::ptr::addr_of!((*_5));
_12.fld0.1.0 = (*_5).0 as i128;
_12.fld0.1.0 = -_12.fld4.fld1.1.0;
_12.fld0 = (_12.fld4.fld1.0, _1.4, _10, _12.fld4.fld1.3);
_6 = _7.0;
_12.fld4.fld1 = _12.fld0;
_1.4.0 = _12.fld4.fld1.1.0 & _12.fld4.fld1.1.0;
_12.fld4.fld1.3 = _12.fld0.3;
Call(_1.3 = fn13(_12.fld0.0, _12.fld2, _12.fld3, _1.2, _12.fld2, _4.1, _4, _4.2, _6, _11, _12.fld3, _12.fld4.fld1.2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = core::ptr::addr_of!((*_5));
_1.4.0 = !_12.fld4.fld1.1.0;
_12.fld2.0 = !_12.fld4.fld1.1.0;
_4.1 = _2 | _2;
_3 = -_1.0;
_1.0 = _3;
_16.fld0 = 192_u8 as i8;
_5 = core::ptr::addr_of!((*_5));
_1.2 = _14 as f64;
_9 = _12.fld4.fld1.1.0;
(*_5).1 = _10;
_10 = _12.fld0.2 >= (*_5).1;
_12.fld4.fld1.3 = _12.fld0.3;
Goto(bb4)
}
bb4 = {
RET = [_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3,_1.3];
_12.fld2 = (_12.fld0.1.0,);
_17 = '\u{15bf1}';
_12.fld0.1 = (_12.fld2.0,);
_16.fld0 = -_4.0;
(*_5) = ((-4065398734533075230_i64), _12.fld4.fld1.2);
_12.fld0.1.0 = -_12.fld4.fld1.1.0;
_16.fld0 = _6;
(*_5).0 = -102482299409513461_i64;
_11 = _6;
_1.4.0 = _1.3 as i128;
_4.0 = !_11;
_18 = 9819771311983861203_usize << _12.fld0.1.0;
_16.fld0 = _4.0;
_3 = _1.3 as isize;
_12.fld4.fld1.1 = (_1.4.0,);
_12.fld0.3 = [_12.fld4.fld1.0];
_12.fld1 = !_2;
_14 = _2 as f32;
_12.fld0.3 = [_12.fld0.0];
_1.1 = !_12.fld3;
(*_5) = ((-5226629400025007118_i64), _12.fld0.2);
_12.fld4.fld1.3 = _12.fld0.3;
_15 = 191738284280330056435727090661572222720_u128 << _1.3;
_12.fld0.1.0 = _1.1 as i128;
_12.fld4.fld1.1 = (_1.4.0,);
_7.0 = _6 & _11;
_4.1 = _3 as u16;
_12.fld3 = _1.1 + _1.1;
_15 = 255594052218723052195190982343948902759_u128 >> _12.fld0.1.0;
_20 = core::ptr::addr_of!(_12.fld4.fld0);
Goto(bb5)
}
bb5 = {
Call(_21 = dump_var(7_usize, 6_usize, Move(_6), 15_usize, Move(_15), 3_usize, Move(_3), 8_usize, Move(_8)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_21 = dump_var(7_usize, 9_usize, Move(_9), 7_usize, Move(_7), 22_usize, _22, 22_usize, _22), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *const (i64, bool),mut _2: bool,mut _3: isize) -> i8 {
mir! {
type RET = i8;
let _4: f64;
let _5: *const (i64, bool);
let _6: u16;
let _7: *const [usize; 3];
let _8: isize;
let _9: Adt64;
let _10: f32;
let _11: Adt55;
let _12: u32;
let _13: [i32; 8];
let _14: (i8,);
let _15: Adt65;
let _16: bool;
let _17: Adt64;
let _18: isize;
let _19: char;
let _20: i128;
let _21: [i32; 7];
let _22: (i8,);
let _23: u32;
let _24: *const u64;
let _25: i8;
let _26: *const (i64, bool);
let _27: Adt50;
let _28: Adt59;
let _29: Adt49;
let _30: Adt51;
let _31: u128;
let _32: f32;
let _33: *const (i64, bool);
let _34: isize;
let _35: f32;
let _36: ();
let _37: ();
{
(*_1) = (6207385056787364336_i64, _2);
(*_1) = ((-5302828421265156423_i64), _2);
(*_1).1 = _2;
RET = 87_i8 >> (*_1).0;
RET = !90_i8;
(*_1) = (5650798085314926534_i64, _2);
(*_1).1 = !_2;
(*_1) = ((-3769833383787622038_i64), _2);
(*_1) = (5960758623263717443_i64, _2);
(*_1).1 = _2 != _2;
_1 = core::ptr::addr_of!((*_1));
RET = 66_i8 & (-75_i8);
_2 = !(*_1).1;
_4 = 200_u8 as f64;
(*_1).0 = -4124596626864029782_i64;
_1 = core::ptr::addr_of!((*_1));
_5 = core::ptr::addr_of!((*_1));
(*_5).0 = (-6178575167094600878_i64) | 3062171466605320648_i64;
(*_5).0 = (-2892014362037306479_i64) + 927040470974719951_i64;
(*_5).1 = _2;
_5 = core::ptr::addr_of!((*_5));
(*_5) = ((-833610601798764202_i64), _2);
(*_5).0 = 7595178015254312717_i64 & (-8899344212294626044_i64);
_2 = !(*_5).1;
_4 = 5601203323926003740_u64 as f64;
_5 = core::ptr::addr_of!((*_1));
RET = (-10_i8);
_6 = 39247_u16 + 49738_u16;
Call((*_5).0 = fn9(_2, (*_1).1, (*_1).1, (*_1).1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = core::ptr::addr_of!((*_5));
(*_1).1 = _6 < _6;
(*_1).1 = !_2;
_6 = (-482192531_i32) as u16;
(*_1).0 = (-2453112417871297747_i64);
(*_5).1 = !_2;
_1 = core::ptr::addr_of!((*_5));
_3 = (-11_i8) as isize;
(*_1).1 = _2 == _2;
Goto(bb2)
}
bb2 = {
(*_1).0 = _6 as i64;
(*_5).1 = !_2;
(*_1) = (5232718221901057094_i64, _2);
RET = 36_i8;
(*_1).1 = _2;
(*_1) = Checked(812636249611320820_i64 + 7211696711035583873_i64);
_5 = core::ptr::addr_of!((*_5));
(*_1).0 = 7740156364274064834_i64;
_5 = core::ptr::addr_of!((*_5));
(*_5) = ((-1574433799105366384_i64), _2);
(*_5).0 = (-98_i8) as i64;
_5 = core::ptr::addr_of!((*_5));
(*_5) = (8555351500730691738_i64, _2);
_9.fld0.1 = 234_u8 as f64;
_8 = 7075_i16 as isize;
_9.fld0.2.4 = (152259775894995541800626292842128469077_i128,);
(*_5).0 = -3340821780369027718_i64;
_9.fld0.3 = [(-1218555828_i32),712264578_i32,(-1724205712_i32),(-403538471_i32),(-1621400562_i32),(-2072729527_i32)];
_9.fld0.0 = -_9.fld0.2.4.0;
(*_5).1 = _6 == _6;
_9.fld0.2.3 = (-318172985_i32) - 1382120339_i32;
_11 = Adt55 { fld0: 41_i8 };
(*_1).1 = !_2;
match _9.fld0.2.4.0 {
0 => bb3,
1 => bb4,
2 => bb5,
152259775894995541800626292842128469077 => bb7,
_ => bb6
}
}
bb3 = {
_1 = core::ptr::addr_of!((*_5));
(*_1).1 = _6 < _6;
(*_1).1 = !_2;
_6 = (-482192531_i32) as u16;
(*_1).0 = (-2453112417871297747_i64);
(*_5).1 = !_2;
_1 = core::ptr::addr_of!((*_5));
_3 = (-11_i8) as isize;
(*_1).1 = _2 == _2;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_5) = Checked(8639550980761909671_i64 * (-5298319426921148145_i64));
_9.fld0.1 = _4 / f64::NAN;
_4 = _9.fld0.1 + _9.fld0.1;
Goto(bb8)
}
bb8 = {
_6 = 16988_u16 % 17648_u16;
_9.fld0.2.2 = -_4;
_9.fld0.1 = _9.fld0.2.2;
(*_1).0 = -4877940961753459761_i64;
(*_1).1 = _2 != _2;
_9.fld0.2.3 = -1769958627_i32;
_3 = _8 | _8;
_14 = (_11.fld0,);
_9.fld0.2.0 = _8 + _3;
RET = _11.fld0 * _11.fld0;
Goto(bb9)
}
bb9 = {
_9.fld0.2.3 = (-700347815_i32) - 859078114_i32;
_15.fld1.fld0.2 = (*_1).1;
_5 = core::ptr::addr_of!((*_5));
_15.fld1.fld0.0 = !4581_i16;
(*_5).0 = (-4199876944518544671_i64);
_15.fld1.fld4.fld0 = [2_usize,0_usize,6339409167584410856_usize];
_15.fld1.fld4.fld1.0 = 152044960604144975878362078578000202469_u128 as i16;
_17.fld0.2 = (_3, 2513356984_u32, _4, _9.fld0.2.3, _9.fld0.2.4);
Goto(bb10)
}
bb10 = {
_15.fld1.fld4.fld1.0 = -_15.fld1.fld0.0;
_15.fld1.fld0.3 = [_15.fld1.fld4.fld1.0];
_9.fld0.2 = (_3, _17.fld0.2.1, _17.fld0.2.2, _17.fld0.2.3, _17.fld0.2.4);
_12 = _17.fld0.2.1;
_9.fld1 = core::ptr::addr_of!(_17.fld0.2);
_17.fld0 = _9.fld0;
_7 = core::ptr::addr_of!(_15.fld1.fld4.fld0);
_9.fld1 = core::ptr::addr_of!(_17.fld0.2);
_17.fld0.2.3 = !_9.fld0.2.3;
_15.fld0 = [_17.fld0.2.1,_9.fld0.2.1,_12,_17.fld0.2.1,_12];
(*_1) = (4296335521603992662_i64, _15.fld1.fld0.2);
(*_5).1 = _15.fld1.fld0.2;
_15.fld1.fld2.0 = -_9.fld0.2.4.0;
_17.fld0.0 = _6 as i128;
_8 = _9.fld0.2.0;
_9.fld0.2 = _17.fld0.2;
(*_7) = [15539073921708684846_usize,5_usize,1_usize];
(*_1).1 = !_2;
_15.fld2 = _3 - _3;
_15.fld1.fld0.1.0 = 217123912997653383889203536156509520696_u128 as i128;
_15.fld1.fld2.0 = -_9.fld0.2.4.0;
(*_7) = [7_usize,16268269190207220603_usize,4_usize];
Goto(bb11)
}
bb11 = {
RET = _14.0;
_23 = _17.fld0.2.1;
_17.fld0.2.4 = _15.fld1.fld0.1;
_17.fld0.2.2 = _15.fld1.fld4.fld1.0 as f64;
(*_5).1 = _15.fld1.fld0.0 < _15.fld1.fld0.0;
_4 = _9.fld0.2.2 / 1_f64;
_15.fld1.fld1 = _6;
_12 = _23;
(*_1).0 = !5785867491831888394_i64;
_2 = (*_1).1 | _15.fld1.fld0.2;
_17.fld0.2.2 = -_17.fld0.1;
_17.fld0.2.3 = _9.fld0.2.3;
_15.fld1.fld4.fld1.1.0 = -_9.fld0.2.4.0;
_15.fld1.fld3 = _12 ^ _12;
_15.fld0 = [_17.fld0.2.1,_15.fld1.fld3,_17.fld0.2.1,_15.fld1.fld3,_23];
_9.fld0.2 = (_17.fld0.2.0, _23, _4, _17.fld0.2.3, _17.fld0.2.4);
_27.fld4 = [_17.fld0.2.3,_9.fld0.2.3,_9.fld0.2.3,_9.fld0.2.3,_9.fld0.2.3,_17.fld0.2.3,_17.fld0.2.3,_9.fld0.2.3];
_12 = _9.fld0.2.1 << _9.fld0.2.1;
_29.fld1 = (_15.fld1.fld4.fld1.0, _9.fld0.2.4, (*_5).1, _15.fld1.fld0.3);
_3 = _17.fld0.2.0 & _9.fld0.2.0;
_17.fld0.2.3 = _9.fld0.2.3;
match _23 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
2513356984 => bb17,
_ => bb16
}
}
bb12 = {
Return()
}
bb13 = {
_9.fld0.2.3 = (-700347815_i32) - 859078114_i32;
_15.fld1.fld0.2 = (*_1).1;
_5 = core::ptr::addr_of!((*_5));
_15.fld1.fld0.0 = !4581_i16;
(*_5).0 = (-4199876944518544671_i64);
_15.fld1.fld4.fld0 = [2_usize,0_usize,6339409167584410856_usize];
_15.fld1.fld4.fld1.0 = 152044960604144975878362078578000202469_u128 as i16;
_17.fld0.2 = (_3, 2513356984_u32, _4, _9.fld0.2.3, _9.fld0.2.4);
Goto(bb10)
}
bb14 = {
(*_1).0 = _6 as i64;
(*_5).1 = !_2;
(*_1) = (5232718221901057094_i64, _2);
RET = 36_i8;
(*_1).1 = _2;
(*_1) = Checked(812636249611320820_i64 + 7211696711035583873_i64);
_5 = core::ptr::addr_of!((*_5));
(*_1).0 = 7740156364274064834_i64;
_5 = core::ptr::addr_of!((*_5));
(*_5) = ((-1574433799105366384_i64), _2);
(*_5).0 = (-98_i8) as i64;
_5 = core::ptr::addr_of!((*_5));
(*_5) = (8555351500730691738_i64, _2);
_9.fld0.1 = 234_u8 as f64;
_8 = 7075_i16 as isize;
_9.fld0.2.4 = (152259775894995541800626292842128469077_i128,);
(*_5).0 = -3340821780369027718_i64;
_9.fld0.3 = [(-1218555828_i32),712264578_i32,(-1724205712_i32),(-403538471_i32),(-1621400562_i32),(-2072729527_i32)];
_9.fld0.0 = -_9.fld0.2.4.0;
(*_5).1 = _6 == _6;
_9.fld0.2.3 = (-318172985_i32) - 1382120339_i32;
_11 = Adt55 { fld0: 41_i8 };
(*_1).1 = !_2;
match _9.fld0.2.4.0 {
0 => bb3,
1 => bb4,
2 => bb5,
152259775894995541800626292842128469077 => bb7,
_ => bb6
}
}
bb15 = {
_1 = core::ptr::addr_of!((*_5));
(*_1).1 = _6 < _6;
(*_1).1 = !_2;
_6 = (-482192531_i32) as u16;
(*_1).0 = (-2453112417871297747_i64);
(*_5).1 = !_2;
_1 = core::ptr::addr_of!((*_5));
_3 = (-11_i8) as isize;
(*_1).1 = _2 == _2;
Goto(bb2)
}
bb16 = {
Return()
}
bb17 = {
_26 = _1;
_17.fld0 = (_29.fld1.1.0, _9.fld0.2.2, _9.fld0.2, _9.fld0.3);
_20 = _17.fld0.2.4.0 + _29.fld1.1.0;
_28.fld0 = [_11.fld0];
_29.fld0 = [3_usize,9258657682154144675_usize,1103299369628893197_usize];
_30.fld3.fld6.2.0 = _15.fld2;
_15.fld1.fld4.fld1.3 = _29.fld1.3;
_27.fld0 = core::ptr::addr_of!(_28.fld4.0);
_28.fld2 = _15.fld1.fld3;
_15.fld1.fld4.fld1.3 = [_29.fld1.0];
_24 = core::ptr::addr_of!(_28.fld4.0);
_17.fld1 = core::ptr::addr_of!(_9.fld0.2);
_15.fld1.fld3 = !_23;
_30.fld1.1 = _15.fld1.fld0.2;
_27.fld3 = (_14.0, _15.fld1.fld1, _3);
_30.fld0.3 = [_15.fld1.fld0.0];
(*_24) = 9955266670951586840_u64;
(*_26).1 = _12 < _9.fld0.2.1;
_30.fld0.1 = _29.fld1.1;
_28.fld0 = [_14.0];
_29.fld1.1.0 = _17.fld0.2.4.0 & _15.fld1.fld2.0;
_17.fld0.2.1 = '\u{41ba5}' as u32;
Goto(bb18)
}
bb18 = {
Call(_36 = dump_var(8_usize, 14_usize, Move(_14), 12_usize, Move(_12), 23_usize, Move(_23), 6_usize, Move(_6)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool) -> i64 {
mir! {
type RET = i64;
let _5: f32;
let _6: isize;
let _7: Adt50;
let _8: (i64, isize, isize);
let _9: (isize, u32, f64, i32, (i128,));
let _10: i64;
let _11: bool;
let _12: f32;
let _13: i64;
let _14: (i64, bool);
let _15: f64;
let _16: char;
let _17: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _18: (i16, (i128,), bool, [i16; 1]);
let _19: f64;
let _20: i16;
let _21: bool;
let _22: isize;
let _23: char;
let _24: usize;
let _25: ();
let _26: ();
{
RET = 4142520836_u32 as i64;
_4 = _1 & _2;
RET = 38_i8 as i64;
_1 = _4 ^ _4;
_1 = !_4;
_2 = _1;
_1 = _2;
_4 = _2 | _1;
_2 = _1 ^ _4;
_2 = _4 ^ _4;
RET = (-889817839645078312_i64) - (-5763509539948055763_i64);
_4 = _2;
Call(RET = fn10(_4, _3, _1, _2, _4, _2, _1, _3, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = 189258040283124868460995668297221201863_u128 as f32;
RET = !(-3421093488378108040_i64);
_2 = _1;
RET = 3105097483901741983_i64 >> 20_u8;
RET = 8349017769250208355_i64;
_5 = (-24291_i16) as f32;
RET = (-1009191556088774685_i64) ^ 4136458234042371792_i64;
_1 = _4 == _4;
_6 = _2 as isize;
_7.fld6.0 = 4373830408741193512_u64 as i128;
_7.fld5.3 = [(-9690_i16)];
_7.fld6.2.0 = _6 & _6;
Goto(bb2)
}
bb2 = {
_3 = _1 <= _1;
_6 = _7.fld6.2.0;
Call(_8 = fn12(_2, _7.fld6.0, _7.fld5.3, _3, _7.fld5.3, _7.fld6.2.0, _4, _7.fld6.0, _7.fld6.2.0, _7.fld6.2.0, _7.fld6.2.0, _7.fld6.2.0, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_7.fld5.1.0 = _7.fld6.0;
_3 = _1;
_8 = ((-6217491127261738754_i64), _6, _6);
_9.0 = _8.1 * _8.2;
_9.4 = (_7.fld6.0,);
_7.fld6.2.2 = 2174560009_u32 as f64;
_3 = _4;
_7.fld6.2.3 = 121616766_i32;
_9.3 = !_7.fld6.2.3;
_3 = !_1;
_7.fld6.2.4 = (_7.fld6.0,);
_7.fld5.1 = (_7.fld6.2.4.0,);
_7.fld3.1 = 21673_u16 ^ 60311_u16;
_4 = _3 < _3;
_11 = _1;
_6 = !_8.1;
_7.fld6.1 = _7.fld6.2.2 / 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002168094413464331_f64;
_7.fld6.2.2 = _7.fld6.1 - _7.fld6.1;
_9.0 = _8.1;
_7.fld5.0 = 25614_i16 & (-3716_i16);
_10 = _8.0 - _8.0;
_7.fld6.3 = [_7.fld6.2.3,_7.fld6.2.3,_7.fld6.2.3,_7.fld6.2.3,_9.3,_7.fld6.2.3];
match _8.0 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
340282366920938463457157116304506472702 => bb11,
_ => bb10
}
}
bb4 = {
_3 = _1 <= _1;
_6 = _7.fld6.2.0;
Call(_8 = fn12(_2, _7.fld6.0, _7.fld5.3, _3, _7.fld5.3, _7.fld6.2.0, _4, _7.fld6.0, _7.fld6.2.0, _7.fld6.2.0, _7.fld6.2.0, _7.fld6.2.0, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_5 = 189258040283124868460995668297221201863_u128 as f32;
RET = !(-3421093488378108040_i64);
_2 = _1;
RET = 3105097483901741983_i64 >> 20_u8;
RET = 8349017769250208355_i64;
_5 = (-24291_i16) as f32;
RET = (-1009191556088774685_i64) ^ 4136458234042371792_i64;
_1 = _4 == _4;
_6 = _2 as isize;
_7.fld6.0 = 4373830408741193512_u64 as i128;
_7.fld5.3 = [(-9690_i16)];
_7.fld6.2.0 = _6 & _6;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_5 = _7.fld6.0 as f32;
_12 = _5;
_7.fld6.2 = (_8.1, 1748729897_u32, _7.fld6.1, _9.3, _7.fld5.1);
_7.fld3 = (122_i8, 62570_u16, _9.0);
Goto(bb12)
}
bb12 = {
_7.fld3.0 = 43_i8 * (-37_i8);
_7.fld1 = !296051699121012288348573542653286375892_u128;
_7.fld6.1 = _7.fld6.2.2 / f64::INFINITY;
_14 = (_10, _1);
_9.4 = _7.fld6.2.4;
_7.fld6.1 = _7.fld6.2.3 as f64;
_15 = _7.fld6.2.2;
_9.2 = 163_u8 as f64;
_8.2 = -_7.fld3.2;
_4 = _14.1;
_7.fld6.2 = (_7.fld3.2, 599630186_u32, _15, _9.3, _7.fld5.1);
_9 = _7.fld6.2;
_15 = _7.fld6.2.2;
_7.fld6.1 = _7.fld6.2.2 - _7.fld6.2.2;
_7.fld6.0 = _7.fld5.1.0;
_7.fld3.1 = 2355_u16 + 34820_u16;
_12 = -_5;
Goto(bb13)
}
bb13 = {
_8.1 = _8.2;
_10 = _14.0;
_7.fld3.2 = _6;
_19 = _9.2;
_3 = _1;
_3 = _14.0 > _8.0;
_12 = -_5;
_3 = _14.1;
_13 = _1 as i64;
_17.0.0 = -_7.fld3.0;
_17.3 = [_7.fld6.2.3,_7.fld6.2.3,_9.3,_9.3,_9.3];
_9.3 = _7.fld6.2.3;
_17.1 = -_9.3;
_17.0.2 = _6;
_11 = !_3;
_5 = _12;
_19 = _7.fld3.2 as f64;
_7.fld5.3 = [_7.fld5.0];
_15 = 14659660933440540121_u64 as f64;
_18.2 = _10 <= _13;
_12 = -_5;
_4 = _2 >= _3;
match _9.1 {
599630186 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_7.fld6.0 = _7.fld5.1.0;
_14 = (_10, _4);
_17.1 = 4_usize as i32;
_21 = _18.2;
_7.fld3.2 = _7.fld6.2.1 as isize;
_7.fld2 = [_9.3,_7.fld6.2.3,_9.3,_17.1,_7.fld6.2.3,_17.1,_17.1];
_17.0.0 = _17.0.2 as i8;
_4 = _14.1 <= _3;
_18.1 = (_7.fld6.0,);
_7.fld6.3 = [_17.1,_17.1,_7.fld6.2.3,_9.3,_7.fld6.2.3,_7.fld6.2.3];
_7.fld6.2.0 = _17.0.2 - _8.2;
Goto(bb16)
}
bb16 = {
Call(_25 = dump_var(9_usize, 1_usize, Move(_1), 14_usize, Move(_14), 11_usize, Move(_11), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_25 = dump_var(9_usize, 2_usize, Move(_2), 26_usize, _26, 26_usize, _26, 26_usize, _26), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool) -> i64 {
mir! {
type RET = i64;
let _10: Adt64;
let _11: [bool; 6];
let _12: [i128; 1];
let _13: *const u64;
let _14: (f64,);
let _15: f32;
let _16: (i8,);
let _17: usize;
let _18: isize;
let _19: *const (isize, u32, f64, i32, (i128,));
let _20: [i128; 1];
let _21: *const (isize, u32, f64, i32, (i128,));
let _22: Adt61;
let _23: f32;
let _24: [bool; 6];
let _25: Adt64;
let _26: [i32; 7];
let _27: u32;
let _28: Adt63;
let _29: isize;
let _30: (i8, u16, isize);
let _31: (u64,);
let _32: ();
let _33: ();
{
_8 = _6;
_9 = _6;
RET = 8291568027371324139_i64 * (-9005043878921905831_i64);
_1 = !_5;
_1 = _9 != _7;
_10.fld0.2.4.0 = 36259135466096001019532441222514141094_i128;
_1 = _8;
_4 = _9 == _1;
_10.fld0.1 = _10.fld0.2.4.0 as f64;
_10.fld0.2.4.0 = _10.fld0.1 as i128;
_10.fld0.2.1 = 5_usize as u32;
_10.fld1 = core::ptr::addr_of!(_10.fld0.2);
_10.fld0.1 = 8570951257219280551_u64 as f64;
_10.fld0.3 = [(-1245634356_i32),1227971758_i32,159975251_i32,728535339_i32,904377023_i32,879374093_i32];
_12 = [_10.fld0.2.4.0];
_10.fld0.3 = [(-1944899554_i32),289766200_i32,(-526319608_i32),(-558917160_i32),2044123965_i32,552917351_i32];
_14 = (_10.fld0.1,);
_10.fld0.2.4.0 = 137325081651710554570724746401832513310_i128;
_4 = _8 != _1;
_10.fld0.2.3 = (-1683939495_i32) - 1798277780_i32;
Call(_10.fld0.1 = fn11(_7, _6, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11 = [_8,_4,_5,_4,_9,_8];
_10.fld0.2.3 = !(-1258810473_i32);
_16.0 = (-6645_i16) as i8;
_10.fld0.2.4.0 = 7160101449862599467_usize as i128;
_6 = !_5;
_9 = !_4;
_10.fld0.2.4 = (40534705135047705128725254429671318158_i128,);
_10.fld0.1 = _14.0 / f64::INFINITY;
RET = (-7637026135225265803_i64);
_4 = _7 <= _6;
_12 = [_10.fld0.2.4.0];
_7 = _8;
_9 = !_4;
_3 = !_8;
_12 = [_10.fld0.2.4.0];
_4 = _9;
_10.fld0.2.0 = _14.0 as isize;
match _10.fld0.2.4.0 {
40534705135047705128725254429671318158 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_10.fld0.0 = 207_u8 as i128;
_17 = 136327201981870641592932383523504971286_u128 as usize;
_15 = 27088_i16 as f32;
_3 = _4 < _5;
Goto(bb4)
}
bb4 = {
_19 = _10.fld1;
_10.fld0.1 = 62493357209237992279273825189139051200_u128 as f64;
(*_19).4 = (_10.fld0.0,);
(*_19).2 = _10.fld0.1 - _14.0;
_12 = [_10.fld0.2.4.0];
_22.fld0.0 = !_16.0;
_12 = [_10.fld0.0];
_14 = (_10.fld0.2.2,);
_23 = 220_u8 as f32;
(*_19).0 = (-91_isize);
_22.fld0 = (_16.0,);
_15 = 1930172651233158366_i64 as f32;
_10.fld0.2.4.0 = _10.fld0.0 & _10.fld0.0;
_10.fld0.1 = (*_19).2 * _14.0;
_8 = _3;
(*_19).4 = (_10.fld0.0,);
_25.fld0.2.3 = (*_19).3;
_25.fld0.2.4.0 = 244_u8 as i128;
(*_19) = (9223372036854775807_isize, 1588139725_u32, _14.0, _25.fld0.2.3, _25.fld0.2.4);
_22 = Adt61 { fld0: _16 };
_14.0 = _22.fld0.0 as f64;
_23 = _15 * _15;
RET = (*_19).4.0 as i64;
_5 = _9;
_5 = _3 | _8;
Goto(bb5)
}
bb5 = {
_24 = [_7,_6,_5,_5,_1,_3];
_25.fld0.3 = _10.fld0.3;
_25.fld0.2.2 = _17 as f64;
_10.fld0.2.3 = 196812913285061415410186027774447890113_u128 as i32;
_6 = _9 < _2;
_20 = _12;
_22.fld0.0 = _16.0;
_12 = [(*_19).4.0];
_10.fld0.2.0 = !9223372036854775807_isize;
_25.fld0.2 = (*_19);
_25.fld0.1 = -_10.fld0.1;
_10.fld0.1 = -_25.fld0.2.2;
_25.fld1 = core::ptr::addr_of!((*_19));
_3 = !_7;
_22.fld0.0 = -_16.0;
_1 = !_8;
(*_19).2 = -_25.fld0.1;
_18 = (*_19).0 | _10.fld0.2.0;
_20 = [_25.fld0.2.4.0];
_9 = _8 == _1;
_25.fld0 = ((*_19).4.0, _10.fld0.2.2, (*_19), _10.fld0.3);
_20 = _12;
Goto(bb6)
}
bb6 = {
_8 = !_3;
_30.1 = !28549_u16;
_21 = core::ptr::addr_of!((*_19));
_24 = [_5,_6,_8,_6,_3,_5];
(*_19).4.0 = _10.fld0.0;
(*_19).1 = _25.fld0.2.1;
(*_21).3 = _25.fld0.2.3 << _25.fld0.2.4.0;
_25.fld0.2.4.0 = _15 as i128;
(*_19).1 = _25.fld0.2.1;
(*_19).0 = _18;
match (*_19).1 {
0 => bb1,
1 => bb5,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
1588139725 => bb13,
_ => bb12
}
}
bb7 = {
_24 = [_7,_6,_5,_5,_1,_3];
_25.fld0.3 = _10.fld0.3;
_25.fld0.2.2 = _17 as f64;
_10.fld0.2.3 = 196812913285061415410186027774447890113_u128 as i32;
_6 = _9 < _2;
_20 = _12;
_22.fld0.0 = _16.0;
_12 = [(*_19).4.0];
_10.fld0.2.0 = !9223372036854775807_isize;
_25.fld0.2 = (*_19);
_25.fld0.1 = -_10.fld0.1;
_10.fld0.1 = -_25.fld0.2.2;
_25.fld1 = core::ptr::addr_of!((*_19));
_3 = !_7;
_22.fld0.0 = -_16.0;
_1 = !_8;
(*_19).2 = -_25.fld0.1;
_18 = (*_19).0 | _10.fld0.2.0;
_20 = [_25.fld0.2.4.0];
_9 = _8 == _1;
_25.fld0 = ((*_19).4.0, _10.fld0.2.2, (*_19), _10.fld0.3);
_20 = _12;
Goto(bb6)
}
bb8 = {
_19 = _10.fld1;
_10.fld0.1 = 62493357209237992279273825189139051200_u128 as f64;
(*_19).4 = (_10.fld0.0,);
(*_19).2 = _10.fld0.1 - _14.0;
_12 = [_10.fld0.2.4.0];
_22.fld0.0 = !_16.0;
_12 = [_10.fld0.0];
_14 = (_10.fld0.2.2,);
_23 = 220_u8 as f32;
(*_19).0 = (-91_isize);
_22.fld0 = (_16.0,);
_15 = 1930172651233158366_i64 as f32;
_10.fld0.2.4.0 = _10.fld0.0 & _10.fld0.0;
_10.fld0.1 = (*_19).2 * _14.0;
_8 = _3;
(*_19).4 = (_10.fld0.0,);
_25.fld0.2.3 = (*_19).3;
_25.fld0.2.4.0 = 244_u8 as i128;
(*_19) = (9223372036854775807_isize, 1588139725_u32, _14.0, _25.fld0.2.3, _25.fld0.2.4);
_22 = Adt61 { fld0: _16 };
_14.0 = _22.fld0.0 as f64;
_23 = _15 * _15;
RET = (*_19).4.0 as i64;
_5 = _9;
_5 = _3 | _8;
Goto(bb5)
}
bb9 = {
_10.fld0.0 = 207_u8 as i128;
_17 = 136327201981870641592932383523504971286_u128 as usize;
_15 = 27088_i16 as f32;
_3 = _4 < _5;
Goto(bb4)
}
bb10 = {
Return()
}
bb11 = {
_11 = [_8,_4,_5,_4,_9,_8];
_10.fld0.2.3 = !(-1258810473_i32);
_16.0 = (-6645_i16) as i8;
_10.fld0.2.4.0 = 7160101449862599467_usize as i128;
_6 = !_5;
_9 = !_4;
_10.fld0.2.4 = (40534705135047705128725254429671318158_i128,);
_10.fld0.1 = _14.0 / f64::INFINITY;
RET = (-7637026135225265803_i64);
_4 = _7 <= _6;
_12 = [_10.fld0.2.4.0];
_7 = _8;
_9 = !_4;
_3 = !_8;
_12 = [_10.fld0.2.4.0];
_4 = _9;
_10.fld0.2.0 = _14.0 as isize;
match _10.fld0.2.4.0 {
40534705135047705128725254429671318158 => bb3,
_ => bb2
}
}
bb12 = {
Return()
}
bb13 = {
_25.fld0.2.0 = (*_19).0 >> (*_21).1;
(*_19).2 = -_25.fld0.2.2;
_31.0 = !10487899177869949809_u64;
_27 = !(*_21).1;
_25.fld0.2.0 = _30.1 as isize;
(*_19).0 = _25.fld0.2.0;
(*_21).0 = 83_u8 as isize;
Call(_25.fld0.2.1 = core::intrinsics::bswap((*_21).1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10.fld0.2.0 = _25.fld0.2.0 ^ _18;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(10_usize, 2_usize, Move(_2), 27_usize, Move(_27), 17_usize, Move(_17), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(10_usize, 5_usize, Move(_5), 9_usize, Move(_9), 20_usize, Move(_20), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(10_usize, 6_usize, Move(_6), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: bool,mut _2: bool,mut _3: bool) -> f64 {
mir! {
type RET = f64;
let _4: char;
let _5: [u32; 5];
let _6: isize;
let _7: (i16, ((f64,),), (i64, isize, isize), u8);
let _8: Adt61;
let _9: Adt58;
let _10: *const char;
let _11: (i128,);
let _12: *const u64;
let _13: (i128,);
let _14: ((f64,),);
let _15: [usize; 4];
let _16: Adt51;
let _17: isize;
let _18: [i8; 1];
let _19: isize;
let _20: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _21: (f64,);
let _22: i8;
let _23: [i8; 1];
let _24: f64;
let _25: Adt49;
let _26: Adt60;
let _27: *const [usize; 3];
let _28: Adt62;
let _29: Adt50;
let _30: ();
let _31: ();
{
RET = 105_i8 as f64;
_2 = _3 < _3;
_1 = !_2;
RET = (-150061818724646964432218473504496925609_i128) as f64;
_4 = '\u{ff20d}';
_5 = [2305442007_u32,1234718328_u32,1648437122_u32,702489152_u32,3120927555_u32];
_5 = [1598760091_u32,3630299386_u32,2884499426_u32,1547737017_u32,1412725585_u32];
_7.1.0.0 = 1988248622_u32 as f64;
_7.0 = 30192_i16 - 27234_i16;
Goto(bb1)
}
bb1 = {
_7.0 = 13142_i16;
_7.3 = 218_u8;
_7.2.1 = -(-9223372036854775808_isize);
_5 = [1912758758_u32,3843750219_u32,1385049159_u32,812797653_u32,1503863953_u32];
_9.fld0.fld1.1.0 = (-101246051704476823693908045070721016576_i128) << _7.2.1;
_9.fld3.fld6.2.1 = !541436421_u32;
_11.0 = 4_usize as i128;
_9.fld0.fld1.3 = [_7.0];
_7.2 = ((-7199784280791666628_i64), (-9223372036854775808_isize), 9223372036854775807_isize);
_8.fld0 = (70_i8,);
_11 = (_9.fld0.fld1.1.0,);
_9.fld3.fld2 = [1704308706_i32,(-1992211204_i32),1125130824_i32,1871030372_i32,(-2136370322_i32),(-1595396750_i32),(-2016468148_i32)];
_7.2.1 = _7.2.2;
_10 = core::ptr::addr_of!(_4);
_9.fld3.fld6.3 = [399795216_i32,704995794_i32,(-265248317_i32),286381432_i32,859478426_i32,39937974_i32];
_9.fld3.fld5.1.0 = !_9.fld0.fld1.1.0;
_9.fld3.fld3 = (_8.fld0.0, 28259_u16, _7.2.1);
_9.fld0.fld1.2 = _1 | _3;
_9.fld0.fld1.2 = _2 >= _1;
_9.fld3.fld4 = [(-2075128855_i32),(-1211944820_i32),491005977_i32,1353849936_i32,(-785099906_i32),1601456345_i32,1990659274_i32,1905214782_i32];
_9.fld3.fld1 = 251903108076536455264287871401179279950_u128;
_9.fld0.fld1.0 = -_7.0;
_9.fld3.fld3 = (_8.fld0.0, 6130_u16, _7.2.2);
match _9.fld3.fld3.2 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_7.3 = 104_u8 / 213_u8;
_13.0 = _7.0 as i128;
_7.1.0.0 = _9.fld3.fld6.2.1 as f64;
_9.fld3.fld6.0 = _8.fld0.0 as i128;
_16.fld0 = (_7.0, _11, _9.fld0.fld1.2, _9.fld0.fld1.3);
_16.fld0.3 = [_16.fld0.0];
_9.fld3.fld1 = _7.2.0 as u128;
_9.fld3.fld3.0 = _9.fld0.fld1.2 as i8;
_16.fld3.fld6.1 = 3_usize as f64;
_16.fld3.fld6.2.0 = _9.fld3.fld3.2;
_9.fld0.fld1.2 = _16.fld0.2 | _1;
_9.fld3.fld3 = (_8.fld0.0, 26249_u16, _7.2.2);
Goto(bb5)
}
bb5 = {
_9.fld3.fld6.2.4 = (_16.fld0.1.0,);
_20.1 = (-1456433016_i32);
_16.fld3.fld5.1.0 = -_13.0;
_16.fld3.fld6.0 = _16.fld3.fld5.1.0 * _16.fld3.fld5.1.0;
_16.fld3.fld6.2.4.0 = _9.fld3.fld6.0;
_16.fld0.0 = -_9.fld0.fld1.0;
_15 = [3_usize,0_usize,5_usize,5_usize];
_9.fld3.fld6.2 = (_7.2.1, 373265529_u32, _16.fld3.fld6.1, _20.1, _16.fld0.1);
_16.fld4 = 1542794209927480386_usize;
Goto(bb6)
}
bb6 = {
_19 = !_16.fld3.fld6.2.0;
_16.fld3.fld3 = (_8.fld0.0, _9.fld3.fld3.1, _7.2.1);
_16.fld3.fld5.1 = (_16.fld3.fld6.2.4.0,);
_20.0 = (_9.fld3.fld3.0, _16.fld3.fld3.1, _16.fld3.fld6.2.0);
Call(_16.fld2 = core::intrinsics::bswap(_7.2.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_16.fld3.fld6.2.2 = _9.fld3.fld6.2.2;
Goto(bb8)
}
bb8 = {
_16.fld1.0 = _9.fld3.fld3.1 as i64;
_16.fld0.2 = _3 ^ _2;
_6 = _9.fld3.fld6.2.0;
_16.fld3.fld5.0 = _19 as i16;
_24 = -_9.fld3.fld6.2.2;
_16.fld3.fld5 = _16.fld0;
_23 = [_20.0.0];
_13.0 = !_11.0;
_9.fld3.fld5.0 = _9.fld3.fld6.2.1 as i16;
Goto(bb9)
}
bb9 = {
_9.fld3.fld3 = (_8.fld0.0, _20.0.1, _19);
_9.fld3.fld6.3 = [_9.fld3.fld6.2.3,_9.fld3.fld6.2.3,_9.fld3.fld6.2.3,_20.1,_9.fld3.fld6.2.3,_20.1];
_16.fld4 = 379351833598665508_usize >> _19;
_11 = (_9.fld3.fld5.1.0,);
_9.fld1 = _16.fld4;
_14 = (_7.1.0,);
_9.fld1 = _16.fld4;
_25.fld1.1 = (_9.fld3.fld5.1.0,);
_9.fld0.fld1.1.0 = !_9.fld3.fld5.1.0;
_16.fld1.0 = _7.2.0 * _7.2.0;
_16.fld3.fld5.3 = [_16.fld0.0];
_9.fld0.fld1 = (_9.fld3.fld5.0, _16.fld3.fld5.1, _2, _16.fld0.3);
_9.fld3.fld5 = _16.fld3.fld5;
_7.1.0.0 = _16.fld3.fld6.2.2 * _16.fld3.fld6.2.2;
_9.fld3.fld6.0 = !_16.fld3.fld6.0;
_9.fld4 = _7.2.1 as f64;
_9.fld3.fld5.3 = [_9.fld0.fld1.0];
_16.fld3.fld6.2.0 = !_6;
_20.1 = _9.fld3.fld6.2.3 & _9.fld3.fld6.2.3;
_9.fld0.fld1.3 = [_9.fld0.fld1.0];
_16.fld3.fld3.2 = _9.fld3.fld1 as isize;
_20.2 = [_16.fld4,_9.fld1,_9.fld1,_16.fld4];
_20.1 = _9.fld3.fld6.2.3 * _9.fld3.fld6.2.3;
_16.fld3.fld3.1 = _20.0.1 & _20.0.1;
_14.0.0 = -_7.1.0.0;
_25.fld1.2 = _9.fld3.fld5.2 & _16.fld3.fld5.2;
match _20.0.2 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
9223372036854775807 => bb15,
_ => bb14
}
}
bb10 = {
_16.fld1.0 = _9.fld3.fld3.1 as i64;
_16.fld0.2 = _3 ^ _2;
_6 = _9.fld3.fld6.2.0;
_16.fld3.fld5.0 = _19 as i16;
_24 = -_9.fld3.fld6.2.2;
_16.fld3.fld5 = _16.fld0;
_23 = [_20.0.0];
_13.0 = !_11.0;
_9.fld3.fld5.0 = _9.fld3.fld6.2.1 as i16;
Goto(bb9)
}
bb11 = {
Return()
}
bb12 = {
_19 = !_16.fld3.fld6.2.0;
_16.fld3.fld3 = (_8.fld0.0, _9.fld3.fld3.1, _7.2.1);
_16.fld3.fld5.1 = (_16.fld3.fld6.2.4.0,);
_20.0 = (_9.fld3.fld3.0, _16.fld3.fld3.1, _16.fld3.fld6.2.0);
Call(_16.fld2 = core::intrinsics::bswap(_7.2.1), ReturnTo(bb7), UnwindUnreachable())
}
bb13 = {
_9.fld3.fld6.2.4 = (_16.fld0.1.0,);
_20.1 = (-1456433016_i32);
_16.fld3.fld5.1.0 = -_13.0;
_16.fld3.fld6.0 = _16.fld3.fld5.1.0 * _16.fld3.fld5.1.0;
_16.fld3.fld6.2.4.0 = _9.fld3.fld6.0;
_16.fld0.0 = -_9.fld0.fld1.0;
_15 = [3_usize,0_usize,5_usize,5_usize];
_9.fld3.fld6.2 = (_7.2.1, 373265529_u32, _16.fld3.fld6.1, _20.1, _16.fld0.1);
_16.fld4 = 1542794209927480386_usize;
Goto(bb6)
}
bb14 = {
_7.3 = 104_u8 / 213_u8;
_13.0 = _7.0 as i128;
_7.1.0.0 = _9.fld3.fld6.2.1 as f64;
_9.fld3.fld6.0 = _8.fld0.0 as i128;
_16.fld0 = (_7.0, _11, _9.fld0.fld1.2, _9.fld0.fld1.3);
_16.fld0.3 = [_16.fld0.0];
_9.fld3.fld1 = _7.2.0 as u128;
_9.fld3.fld3.0 = _9.fld0.fld1.2 as i8;
_16.fld3.fld6.1 = 3_usize as f64;
_16.fld3.fld6.2.0 = _9.fld3.fld3.2;
_9.fld0.fld1.2 = _16.fld0.2 | _1;
_9.fld3.fld3 = (_8.fld0.0, 26249_u16, _7.2.2);
Goto(bb5)
}
bb15 = {
_28.fld7.fld1.3 = _9.fld3.fld5.3;
_16.fld3.fld6.2.3 = !_20.1;
_16.fld3.fld6.3 = [_16.fld3.fld6.2.3,_16.fld3.fld6.2.3,_20.1,_16.fld3.fld6.2.3,_20.1,_16.fld3.fld6.2.3];
_28.fld3.0 = (_8.fld0.0, _9.fld3.fld3.1, _9.fld3.fld3.2);
_28.fld3.3 = [_20.1,_16.fld3.fld6.2.3,_20.1,_9.fld3.fld6.2.3,_16.fld3.fld6.2.3];
_16.fld3.fld5.0 = -_9.fld0.fld1.0;
_25.fld1.0 = _16.fld3.fld5.0 << _9.fld3.fld3.0;
_28.fld3.2 = [_9.fld1,_16.fld4,_9.fld1,_9.fld1];
Goto(bb16)
}
bb16 = {
Call(_30 = dump_var(11_usize, 3_usize, Move(_3), 23_usize, Move(_23), 19_usize, Move(_19), 4_usize, Move(_4)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_30 = dump_var(11_usize, 15_usize, Move(_15), 31_usize, _31, 31_usize, _31, 31_usize, _31), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: bool,mut _2: i128,mut _3: [i16; 1],mut _4: bool,mut _5: [i16; 1],mut _6: isize,mut _7: bool,mut _8: i128,mut _9: isize,mut _10: isize,mut _11: isize,mut _12: isize,mut _13: bool) -> (i64, isize, isize) {
mir! {
type RET = (i64, isize, isize);
let _14: [i32; 5];
let _15: *const f64;
let _16: isize;
let _17: (isize, u32, f64, i32, (i128,));
let _18: *const u64;
let _19: (i8, u16, isize);
let _20: isize;
let _21: i128;
let _22: ();
let _23: ();
{
RET.2 = _12 * _11;
_12 = 129737354117514988606829523290784846671_u128 as isize;
RET.0 = (-9177_i16) as i64;
RET = (916542477123102749_i64, _11, _10);
_16 = 16130966627404086233_u64 as isize;
_19 = ((-115_i8), 51489_u16, _6);
_19.2 = _6;
RET.0 = 6619553458139161931_i64 + 2851140064816715115_i64;
_17.4.0 = (-29484_i16) as i128;
_3 = [(-10803_i16)];
Goto(bb1)
}
bb1 = {
Call(_22 = dump_var(12_usize, 12_usize, Move(_12), 13_usize, Move(_13), 11_usize, Move(_11), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_22 = dump_var(12_usize, 6_usize, Move(_6), 9_usize, Move(_9), 19_usize, Move(_19), 23_usize, _23), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: i16,mut _2: (i128,),mut _3: u32,mut _4: f64,mut _5: (i128,),mut _6: u16,mut _7: (i8, u16, isize),mut _8: isize,mut _9: i8,mut _10: i8,mut _11: u32,mut _12: bool) -> i32 {
mir! {
type RET = i32;
let _13: u32;
let _14: i16;
let _15: f64;
let _16: *const (i64, bool);
let _17: Adt50;
let _18: (i16, (i128,), bool, [i16; 1]);
let _19: (i32, [i32; 6], (u64,));
let _20: [bool; 6];
let _21: (i32, [i32; 6], (u64,));
let _22: f32;
let _23: char;
let _24: ((f64,),);
let _25: Adt61;
let _26: f64;
let _27: f64;
let _28: Adt60;
let _29: Adt60;
let _30: [i16; 1];
let _31: i32;
let _32: ();
let _33: ();
{
_8 = 6837448210517649181_usize as isize;
_4 = 42168801437886122683612918979137199001_u128 as f64;
RET = (-1932163693_i32);
RET = !(-62198317_i32);
_10 = _7.0 >> _5.0;
RET = (-4671381166937591076_i64) as i32;
_5 = (_2.0,);
_3 = _11;
_7.0 = _10 - _9;
_4 = _7.1 as f64;
_1 = (-31001_i16);
_2.0 = -_5.0;
_3 = _11;
RET = 261730065784124076971885767052905721632_u128 as i32;
_8 = _12 as isize;
_17.fld6.2.4 = (_5.0,);
_17.fld5.1 = (_2.0,);
_17.fld6.2 = (_8, _3, _4, (-37378331_i32), _2);
_3 = !_11;
_17.fld6.2.2 = _4 - _4;
_17.fld6.1 = _17.fld6.2.2;
_17.fld5.0 = _9 as i16;
_6 = _7.1;
match _17.fld6.2.3 {
0 => bb1,
340282366920938463463374607431730833125 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_11 = _17.fld6.2.1 - _3;
_18.0 = -_17.fld5.0;
_12 = true ^ false;
_17.fld6.2.3 = 152_u8 as i32;
_17.fld6.2.4.0 = 1_usize as i128;
_10 = !_7.0;
_2.0 = _17.fld5.0 as i128;
_17.fld1 = !259122940243336412931915323975990086849_u128;
_17.fld6.2.4.0 = _17.fld5.1.0 * _17.fld5.1.0;
_4 = 3089268492833934274_u64 as f64;
_17.fld2 = [_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3];
_1 = _17.fld5.0;
_17.fld3.2 = _17.fld6.2.0 ^ _8;
_18.1.0 = 16924026122382760099_u64 as i128;
_17.fld6.2.0 = !_17.fld3.2;
_19.2.0 = _18.0 as u64;
_17.fld6.2.4 = (_5.0,);
_17.fld5.3 = [_17.fld5.0];
_17.fld6.3 = [_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3];
_12 = true;
_19.0 = _17.fld6.2.3 & _17.fld6.2.3;
Goto(bb4)
}
bb4 = {
_17.fld3.1 = _17.fld6.2.1 as u16;
_4 = _17.fld6.2.2 + _17.fld6.2.2;
_17.fld3.0 = 166_u8 as i8;
RET = _19.0;
_17.fld1 = 253248723683017105925884269028143211348_u128 & 106281399069183178103120771631430782734_u128;
_20 = [_12,_12,_12,_12,_12,_12];
_17.fld5.1.0 = !_2.0;
_21 = (_19.0, _17.fld6.3, _19.2);
_18.1 = _5;
_17.fld3.2 = !_17.fld6.2.0;
_18.0 = _1;
_22 = _17.fld3.2 as f32;
_21.2 = (_19.2.0,);
_1 = _17.fld5.0 & _17.fld5.0;
_21.0 = _19.0;
_17.fld3 = (_10, _7.1, _8);
_19.2.0 = _21.2.0;
_7.1 = !_6;
_17.fld5.1.0 = !_17.fld6.2.4.0;
_11 = _17.fld6.2.1;
_3 = !_11;
_17.fld3.1 = _12 as u16;
_7.0 = '\u{bc3e5}' as i8;
_19.0 = _10 as i32;
match _7.2 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb5 = {
_11 = _17.fld6.2.1 - _3;
_18.0 = -_17.fld5.0;
_12 = true ^ false;
_17.fld6.2.3 = 152_u8 as i32;
_17.fld6.2.4.0 = 1_usize as i128;
_10 = !_7.0;
_2.0 = _17.fld5.0 as i128;
_17.fld1 = !259122940243336412931915323975990086849_u128;
_17.fld6.2.4.0 = _17.fld5.1.0 * _17.fld5.1.0;
_4 = 3089268492833934274_u64 as f64;
_17.fld2 = [_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3];
_1 = _17.fld5.0;
_17.fld3.2 = _17.fld6.2.0 ^ _8;
_18.1.0 = 16924026122382760099_u64 as i128;
_17.fld6.2.0 = !_17.fld3.2;
_19.2.0 = _18.0 as u64;
_17.fld6.2.4 = (_5.0,);
_17.fld5.3 = [_17.fld5.0];
_17.fld6.3 = [_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3];
_12 = true;
_19.0 = _17.fld6.2.3 & _17.fld6.2.3;
Goto(bb4)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = _4 as u16;
_21.1 = [_19.0,_17.fld6.2.3,_19.0,_19.0,_19.0,_17.fld6.2.3];
_7 = _17.fld3;
_17.fld6.3 = _21.1;
_17.fld0 = core::ptr::addr_of!(_21.2.0);
_17.fld5.0 = _1;
_1 = _17.fld5.0;
_19.1 = [_17.fld6.2.3,_21.0,_19.0,_19.0,_19.0,_19.0];
_5 = (_17.fld6.2.4.0,);
_6 = _7.1;
_17.fld6.2.1 = (-428874565533018907_i64) as u32;
_18.1.0 = -_5.0;
_2.0 = _17.fld6.2.4.0 - _5.0;
_17.fld6.0 = _2.0 ^ _18.1.0;
_17.fld5.1 = (_17.fld6.0,);
_17.fld6.2.4 = (_18.1.0,);
_13 = !_11;
_2.0 = !_17.fld5.1.0;
_17.fld5.1.0 = -_5.0;
_21.2.0 = _19.2.0 << _8;
_23 = '\u{5ce28}';
_12 = _19.0 == _19.0;
_7.0 = -_10;
_17.fld3.0 = _10 * _10;
_15 = _4 - _17.fld6.2.2;
_7.1 = !_17.fld3.1;
_15 = -_17.fld6.1;
Call(_24.0 = fn14(_17.fld1, _17.fld6.2.4.0, _17.fld3, _17.fld6.2.4, _17.fld5.1.0, _19.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_14 = -_18.0;
RET = -_21.0;
_17.fld6.2.3 = _3 as i32;
_7 = (_17.fld3.0, _6, _17.fld3.2);
_17.fld6.0 = _18.1.0;
_17.fld3.1 = _7.1;
_24.0.0 = _4;
_13 = 4_usize as u32;
_17.fld6.2.4 = (_18.1.0,);
_18.1.0 = -_17.fld5.1.0;
_25.fld0.0 = _7.0 ^ _10;
_22 = _5.0 as f32;
_17.fld1 = _3 as u128;
_7.1 = _17.fld3.1 & _6;
_17.fld6.3 = _21.1;
_17.fld6.1 = -_15;
_17.fld4 = [_19.0,_17.fld6.2.3,_17.fld6.2.3,_21.0,_17.fld6.2.3,_19.0,_19.0,_19.0];
_1 = _17.fld5.0;
_21.2 = (_19.2.0,);
_11 = _19.0 as u32;
_18 = (_17.fld5.0, _17.fld5.1, _12, _17.fld5.3);
_17.fld6.2.2 = _17.fld6.1 - _17.fld6.1;
RET = !_17.fld6.2.3;
_17.fld6.2.2 = _4 - _4;
_17.fld3.1 = _7.1;
_17.fld6.2.1 = _11 & _3;
_28.fld1 = [5_usize,8522377541085079060_usize,12319168379636299906_usize];
Goto(bb11)
}
bb11 = {
_24.0 = (_17.fld6.2.2,);
_19.0 = _8 as i32;
_17.fld6.2 = (_17.fld3.2, _11, _24.0.0, _19.0, _5);
_17.fld6.2.2 = _4 - _4;
_17.fld6.2.4 = (_5.0,);
_17.fld4 = [_19.0,_17.fld6.2.3,_17.fld6.2.3,_17.fld6.2.3,_19.0,_19.0,_19.0,_17.fld6.2.3];
_20 = [_18.2,_12,_18.2,_12,_12,_12];
_17.fld6.2.2 = _4;
_28.fld1 = [7_usize,2_usize,16615646076770639850_usize];
RET = _19.0 | _19.0;
_25.fld0 = (_10,);
_6 = _7.1 - _17.fld3.1;
_18 = (_14, _5, _12, _17.fld5.3);
_12 = _18.2;
_18.0 = !_17.fld5.0;
_24.0 = (_15,);
_7.2 = !_17.fld6.2.0;
_2.0 = _17.fld6.0;
_11 = _17.fld3.2 as u32;
_29.fld2 = [2214137226839226062_usize,0_usize,9677922843214363391_usize,7043899935564691622_usize];
_5 = (_17.fld6.2.4.0,);
_17.fld5.3 = [_1];
_17.fld6.1 = -_4;
_21.0 = _19.2.0 as i32;
_25.fld0.0 = _7.0;
_5 = (_17.fld6.0,);
_30 = _18.3;
_21 = _19;
Goto(bb12)
}
bb12 = {
Call(_32 = dump_var(13_usize, 8_usize, Move(_8), 21_usize, Move(_21), 9_usize, Move(_9), 18_usize, Move(_18)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_32 = dump_var(13_usize, 11_usize, Move(_11), 3_usize, Move(_3), 5_usize, Move(_5), 14_usize, Move(_14)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_32 = dump_var(13_usize, 23_usize, Move(_23), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u128,mut _2: i128,mut _3: (i8, u16, isize),mut _4: (i128,),mut _5: i128,mut _6: [i32; 6]) -> (f64,) {
mir! {
type RET = (f64,);
let _7: u128;
let _8: [bool; 6];
let _9: Adt59;
let _10: *const [usize; 3];
let _11: isize;
let _12: bool;
let _13: Adt51;
let _14: *const f64;
let _15: isize;
let _16: Adt53;
let _17: [i32; 8];
let _18: bool;
let _19: isize;
let _20: Adt63;
let _21: (i32, [i32; 6], (i8, u16, isize), [usize; 4]);
let _22: char;
let _23: (i8, u16, isize);
let _24: *const (isize, u32, f64, i32, (i128,));
let _25: Adt58;
let _26: Adt52;
let _27: usize;
let _28: *const (isize, u32, f64, i32, (i128,));
let _29: usize;
let _30: char;
let _31: (f64,);
let _32: f64;
let _33: i128;
let _34: Adt51;
let _35: [i32; 6];
let _36: [usize; 3];
let _37: isize;
let _38: char;
let _39: Adt64;
let _40: bool;
let _41: Adt61;
let _42: isize;
let _43: isize;
let _44: ();
let _45: ();
{
RET.0 = 1035170309_i32 as f64;
_2 = _5;
RET.0 = _3.2 as f64;
_3.1 = !40750_u16;
_4 = (_5,);
_4 = (_5,);
RET.0 = _3.2 as f64;
_6 = [(-484283016_i32),(-1402736756_i32),(-1619080290_i32),(-1979367235_i32),(-1515076019_i32),1749327621_i32];
_3.2 = 9223372036854775807_isize;
_7 = !_1;
_5 = _2;
RET.0 = 16375_i16 as f64;
RET.0 = 8981616261820190211_i64 as f64;
_1 = _7;
RET.0 = 0_usize as f64;
_3 = (84_i8, 40096_u16, (-9223372036854775808_isize));
_9.fld0 = [_3.0];
match _3.1 {
40096 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_9.fld3.1.0.0 = 145713751_u32 as f64;
_13.fld5 = [(-1008412163_i32),(-463843101_i32),(-1746806539_i32),1177890463_i32,(-1779115596_i32),1184147124_i32,855993653_i32,(-2080486173_i32)];
_4.0 = _2;
_9.fld5 = _3.1 % 62066_u16;
_13.fld3.fld5.1.0 = -_2;
_13.fld1 = Checked(3029947793098001587_i64 - (-3638983068927244405_i64));
_9.fld1 = _5 * _4.0;
_12 = _13.fld1.1 ^ _13.fld1.1;
_13.fld3.fld3.0 = _3.0 | _3.0;
_3.2 = -9223372036854775807_isize;
_13.fld0.1 = (_5,);
_1 = _9.fld3.1.0.0 as u128;
_13.fld3.fld0 = core::ptr::addr_of!(_9.fld4.0);
_9.fld3.1.0.0 = _9.fld1 as f64;
_9.fld6 = core::ptr::addr_of!(_13.fld1);
_9.fld4 = (16948196345300582164_u64,);
_13.fld3.fld1 = _7 ^ _7;
_13.fld0.0 = !(-18678_i16);
_13.fld3.fld4 = [168516996_i32,245529160_i32,1223136339_i32,1622354325_i32,(-1002348909_i32),1976405017_i32,(-1442509311_i32),1165829790_i32];
_13.fld3.fld1 = _1 * _1;
_8 = [_12,_12,_13.fld1.1,_13.fld1.1,_12,_13.fld1.1];
_13.fld3.fld6.1 = -_9.fld3.1.0.0;
_11 = !_3.2;
_13.fld1 = (7564290096487423208_i64, _12);
_13.fld3.fld6.2.0 = _11;
_13.fld3.fld5.3 = [_13.fld0.0];
_9.fld3.2.0 = _13.fld1.0;
Call(_13.fld3.fld6.2.4 = fn15(_9.fld3.1, _9.fld3.2.0, _5, _2, _13.fld3.fld6.2.0, _6, _13.fld3.fld5.1.0, _13.fld3.fld0, _13.fld1.0, _3.1, _9.fld3.2.0, _3.0, _3.1, _3, _13.fld3.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4 = _13.fld3.fld6.2.4;
_13.fld3.fld3.1 = _9.fld5 * _3.1;
_8 = [_12,_12,_13.fld1.1,_12,_13.fld1.1,_13.fld1.1];
_8 = [_12,_12,_13.fld1.1,_12,_13.fld1.1,_12];
_13.fld3.fld5.1.0 = _13.fld0.1.0 ^ _13.fld3.fld6.2.4.0;
_3.1 = _9.fld5 ^ _13.fld3.fld3.1;
_13.fld0.0 = _9.fld3.2.0 as i16;
RET = (_9.fld3.1.0.0,);
_16.fld4.fld0 = [7304027287853243520_usize,2475313854113916968_usize,4765350187457212261_usize];
_2 = _4.0;
_16.fld0.1 = _4;
_13.fld2 = _9.fld4.0 as isize;
_13.fld3.fld5.1.0 = _13.fld3.fld6.2.4.0 >> _2;
_9.fld3.1.0.0 = -_13.fld3.fld6.1;
_13.fld0.2 = !_13.fld1.1;
_13.fld3.fld5.3 = [_13.fld0.0];
Goto(bb4)
}
bb4 = {
_13.fld3.fld3.0 = _3.0;
_6 = [(-154507050_i32),2086635898_i32,468582002_i32,(-21184342_i32),(-1173629817_i32),(-2078649110_i32)];
_13.fld3.fld5.1.0 = _5;
_16.fld0.2 = _13.fld0.2;
_13.fld3.fld5.0 = _13.fld0.0 * _13.fld0.0;
RET = (_9.fld3.1.0.0,);
_16.fld4.fld1.2 = !_12;
_9.fld2 = 2797771210_u32 + 2127377746_u32;
_16.fld0.3 = [_13.fld0.0];
_8 = [_12,_13.fld1.1,_16.fld0.2,_13.fld1.1,_12,_16.fld0.2];
_9.fld3.1.0.0 = _9.fld2 as f64;
_15 = -_11;
_16.fld0 = (_13.fld0.0, _4, _12, _13.fld3.fld5.3);
_2 = _5 << _13.fld2;
_13.fld0 = (_13.fld3.fld5.0, _13.fld3.fld5.1, _12, _13.fld3.fld5.3);
_13.fld1 = Checked(_9.fld3.2.0 * _9.fld3.2.0);
Goto(bb5)
}
bb5 = {
_13.fld3.fld6.1 = _9.fld3.1.0.0 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012739273109665954_f64;
_16.fld4.fld1.2 = !_13.fld0.2;
_13.fld4 = !6496701646011298799_usize;
_3 = (_13.fld3.fld3.0, _9.fld5, _15);
_13.fld3.fld6.2.1 = _9.fld2;
_13.fld0.2 = _13.fld0.1.0 >= _5;
_13.fld3.fld3.2 = _3.2 & _11;
_16.fld0.1.0 = _9.fld2 as i128;
_16.fld1 = !_13.fld3.fld3.1;
_16.fld0.2 = !_13.fld0.2;
_16.fld3 = !_9.fld2;
_16.fld4.fld1.3 = [_13.fld3.fld5.0];
_13.fld6 = [_13.fld0.2,_13.fld1.1,_16.fld0.2,_16.fld0.2,_13.fld0.2,_13.fld1.1];
_16.fld4.fld1.3 = [_13.fld0.0];
_16.fld0 = (_13.fld0.0, _4, _13.fld1.1, _16.fld4.fld1.3);
_21.1 = [601764918_i32,1431601004_i32,(-1371817479_i32),(-1289305506_i32),(-1519430636_i32),1598507089_i32];
_13.fld3.fld6.2.4 = _13.fld3.fld5.1;
_9.fld3.0 = -_13.fld0.0;
_13.fld3.fld0 = core::ptr::addr_of!(_9.fld4.0);
_21.3 = [_13.fld4,_13.fld4,_13.fld4,_13.fld4];
Goto(bb6)
}
bb6 = {
_12 = !_13.fld0.2;
_16.fld0.1 = _13.fld3.fld5.1;
_9.fld0 = [_3.0];
RET.0 = _13.fld3.fld6.1;
_13.fld5 = _13.fld3.fld4;
_13.fld3.fld6.2.3 = _13.fld4 as i32;
_16.fld4.fld0 = [_13.fld4,_13.fld4,_13.fld4];
_3.2 = _13.fld3.fld3.2 ^ _13.fld3.fld6.2.0;
_13.fld3.fld6.1 = _9.fld3.1.0.0;
_16.fld4.fld1 = _16.fld0;
_20 = Adt63 { fld0: _16.fld4.fld0 };
_23.0 = !_3.0;
_14 = core::ptr::addr_of!(_9.fld3.1.0.0);
_16.fld4.fld1.0 = !_13.fld0.0;
_13.fld3.fld3.1 = _13.fld1.1 as u16;
_16.fld2.0 = _9.fld4.0 as i128;
_13.fld3.fld5.1.0 = _13.fld3.fld6.2.3 as i128;
_13.fld3.fld6.2.3 = _13.fld3.fld3.1 as i32;
_9.fld3.2.2 = _9.fld3.0 as isize;
Goto(bb7)
}
bb7 = {
_25.fld3.fld5.0 = _9.fld3.0 - _9.fld3.0;
_23.0 = _13.fld3.fld6.2.3 as i8;
_25.fld0.fld1.3 = [_25.fld3.fld5.0];
_21.2 = (_23.0, _3.1, _13.fld3.fld3.2);
_25.fld0.fld1.0 = _9.fld3.0;
_23.2 = _9.fld5 as isize;
Goto(bb8)
}
bb8 = {
_13.fld3.fld6.0 = _13.fld1.0 as i128;
_26.fld0 = _13.fld0.2 & _13.fld1.1;
_9.fld3.2.2 = _3.2 ^ _23.2;
_21.1 = [_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3];
_26.fld4 = -_16.fld4.fld1.0;
RET = _9.fld3.1.0;
_23 = (_21.2.0, _3.1, _9.fld3.2.2);
_26.fld2 = _13.fld4;
_25.fld3.fld3.0 = _21.2.0;
_13.fld3.fld2 = [_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3];
_13.fld3.fld3.1 = _3.1;
_26.fld1 = !146_u8;
_25.fld3.fld6.2.4 = (_13.fld3.fld6.0,);
_13.fld3.fld6.2.2 = _9.fld3.1.0.0;
RET = (_9.fld3.1.0.0,);
RET = (_13.fld3.fld6.2.2,);
_9.fld3.0 = _13.fld4 as i16;
_13.fld0.3 = [_16.fld4.fld1.0];
_25.fld3.fld5.1 = (_13.fld3.fld6.0,);
_9.fld3.1.0.0 = _13.fld3.fld6.1;
_25.fld3.fld3.1 = _26.fld4 as u16;
match _3.0 {
0 => bb2,
84 => bb10,
_ => bb9
}
}
bb9 = {
_12 = !_13.fld0.2;
_16.fld0.1 = _13.fld3.fld5.1;
_9.fld0 = [_3.0];
RET.0 = _13.fld3.fld6.1;
_13.fld5 = _13.fld3.fld4;
_13.fld3.fld6.2.3 = _13.fld4 as i32;
_16.fld4.fld0 = [_13.fld4,_13.fld4,_13.fld4];
_3.2 = _13.fld3.fld3.2 ^ _13.fld3.fld6.2.0;
_13.fld3.fld6.1 = _9.fld3.1.0.0;
_16.fld4.fld1 = _16.fld0;
_20 = Adt63 { fld0: _16.fld4.fld0 };
_23.0 = !_3.0;
_14 = core::ptr::addr_of!(_9.fld3.1.0.0);
_16.fld4.fld1.0 = !_13.fld0.0;
_13.fld3.fld3.1 = _13.fld1.1 as u16;
_16.fld2.0 = _9.fld4.0 as i128;
_13.fld3.fld5.1.0 = _13.fld3.fld6.2.3 as i128;
_13.fld3.fld6.2.3 = _13.fld3.fld3.1 as i32;
_9.fld3.2.2 = _9.fld3.0 as isize;
Goto(bb7)
}
bb10 = {
_24 = core::ptr::addr_of!(_13.fld3.fld6.2);
_32 = _9.fld3.1.0.0 / 1_f64;
_26.fld5 = _9.fld4.0;
_34.fld3.fld4 = [(*_24).3,(*_24).3,(*_24).3,(*_24).3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3,(*_24).3,(*_24).3];
_25.fld0 = Move(_16.fld4);
(*_24).3 = !1721811176_i32;
_26.fld3.3 = [_26.fld4];
_21.1 = [(*_24).3,_13.fld3.fld6.2.3,(*_24).3,(*_24).3,_13.fld3.fld6.2.3,_13.fld3.fld6.2.3];
_30 = '\u{3979c}';
_10 = core::ptr::addr_of!(_20.fld0);
_4 = (_25.fld3.fld6.2.4.0,);
_13.fld1 = (_9.fld3.2.0, _26.fld0);
_28 = _24;
_34.fld3.fld2 = [(*_28).3,_13.fld3.fld6.2.3,(*_28).3,(*_24).3,_13.fld3.fld6.2.3,(*_24).3,(*_28).3];
_34.fld1 = _13.fld1;
Goto(bb11)
}
bb11 = {
_26.fld3.2 = _13.fld1.1;
_34.fld3.fld6.3 = [_13.fld3.fld6.2.3,(*_24).3,(*_28).3,(*_28).3,(*_24).3,_13.fld3.fld6.2.3];
_25.fld3.fld6.0 = !_13.fld3.fld6.0;
_34.fld3.fld6.1 = (*_14) * _13.fld3.fld6.1;
_20 = Adt63 { fld0: _25.fld0.fld0 };
_25.fld3.fld6.2.4 = (_13.fld3.fld6.0,);
_13.fld3.fld5.3 = _16.fld0.3;
_25.fld3.fld5.1 = (_2,);
_34.fld3.fld3.1 = _21.2.1;
_34.fld3.fld6.2.4.0 = _13.fld0.1.0;
_6 = [(*_24).3,(*_24).3,(*_24).3,(*_28).3,(*_28).3,_13.fld3.fld6.2.3];
_31.0 = _13.fld3.fld6.2.2 / f64::INFINITY;
(*_24).2 = _26.fld1 as f64;
_26.fld3.0 = _16.fld0.0;
_39.fld0.2.3 = !(*_24).3;
_21.0 = _13.fld1.0 as i32;
_34.fld3.fld0 = core::ptr::addr_of!(_9.fld4.0);
_25.fld0 = Adt49 { fld0: _20.fld0,fld1: _16.fld0 };
(*_24).2 = -_32;
match _13.fld1.0 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
7564290096487423208 => bb17,
_ => bb16
}
}
bb12 = {
_9.fld3.1.0.0 = 145713751_u32 as f64;
_13.fld5 = [(-1008412163_i32),(-463843101_i32),(-1746806539_i32),1177890463_i32,(-1779115596_i32),1184147124_i32,855993653_i32,(-2080486173_i32)];
_4.0 = _2;
_9.fld5 = _3.1 % 62066_u16;
_13.fld3.fld5.1.0 = -_2;
_13.fld1 = Checked(3029947793098001587_i64 - (-3638983068927244405_i64));
_9.fld1 = _5 * _4.0;
_12 = _13.fld1.1 ^ _13.fld1.1;
_13.fld3.fld3.0 = _3.0 | _3.0;
_3.2 = -9223372036854775807_isize;
_13.fld0.1 = (_5,);
_1 = _9.fld3.1.0.0 as u128;
_13.fld3.fld0 = core::ptr::addr_of!(_9.fld4.0);
_9.fld3.1.0.0 = _9.fld1 as f64;
_9.fld6 = core::ptr::addr_of!(_13.fld1);
_9.fld4 = (16948196345300582164_u64,);
_13.fld3.fld1 = _7 ^ _7;
_13.fld0.0 = !(-18678_i16);
_13.fld3.fld4 = [168516996_i32,245529160_i32,1223136339_i32,1622354325_i32,(-1002348909_i32),1976405017_i32,(-1442509311_i32),1165829790_i32];
_13.fld3.fld1 = _1 * _1;
_8 = [_12,_12,_13.fld1.1,_13.fld1.1,_12,_13.fld1.1];
_13.fld3.fld6.1 = -_9.fld3.1.0.0;
_11 = !_3.2;
_13.fld1 = (7564290096487423208_i64, _12);
_13.fld3.fld6.2.0 = _11;
_13.fld3.fld5.3 = [_13.fld0.0];
_9.fld3.2.0 = _13.fld1.0;
Call(_13.fld3.fld6.2.4 = fn15(_9.fld3.1, _9.fld3.2.0, _5, _2, _13.fld3.fld6.2.0, _6, _13.fld3.fld5.1.0, _13.fld3.fld0, _13.fld1.0, _3.1, _9.fld3.2.0, _3.0, _3.1, _3, _13.fld3.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_4 = _13.fld3.fld6.2.4;
_13.fld3.fld3.1 = _9.fld5 * _3.1;
_8 = [_12,_12,_13.fld1.1,_12,_13.fld1.1,_13.fld1.1];
_8 = [_12,_12,_13.fld1.1,_12,_13.fld1.1,_12];
_13.fld3.fld5.1.0 = _13.fld0.1.0 ^ _13.fld3.fld6.2.4.0;
_3.1 = _9.fld5 ^ _13.fld3.fld3.1;
_13.fld0.0 = _9.fld3.2.0 as i16;
RET = (_9.fld3.1.0.0,);
_16.fld4.fld0 = [7304027287853243520_usize,2475313854113916968_usize,4765350187457212261_usize];
_2 = _4.0;
_16.fld0.1 = _4;
_13.fld2 = _9.fld4.0 as isize;
_13.fld3.fld5.1.0 = _13.fld3.fld6.2.4.0 >> _2;
_9.fld3.1.0.0 = -_13.fld3.fld6.1;
_13.fld0.2 = !_13.fld1.1;
_13.fld3.fld5.3 = [_13.fld0.0];
Goto(bb4)
}
bb14 = {
_13.fld3.fld3.0 = _3.0;
_6 = [(-154507050_i32),2086635898_i32,468582002_i32,(-21184342_i32),(-1173629817_i32),(-2078649110_i32)];
_13.fld3.fld5.1.0 = _5;
_16.fld0.2 = _13.fld0.2;
_13.fld3.fld5.0 = _13.fld0.0 * _13.fld0.0;
RET = (_9.fld3.1.0.0,);
_16.fld4.fld1.2 = !_12;
_9.fld2 = 2797771210_u32 + 2127377746_u32;
_16.fld0.3 = [_13.fld0.0];
_8 = [_12,_13.fld1.1,_16.fld0.2,_13.fld1.1,_12,_16.fld0.2];
_9.fld3.1.0.0 = _9.fld2 as f64;
_15 = -_11;
_16.fld0 = (_13.fld0.0, _4, _12, _13.fld3.fld5.3);
_2 = _5 << _13.fld2;
_13.fld0 = (_13.fld3.fld5.0, _13.fld3.fld5.1, _12, _13.fld3.fld5.3);
_13.fld1 = Checked(_9.fld3.2.0 * _9.fld3.2.0);
Goto(bb5)
}
bb15 = {
_25.fld3.fld5.0 = _9.fld3.0 - _9.fld3.0;
_23.0 = _13.fld3.fld6.2.3 as i8;
_25.fld0.fld1.3 = [_25.fld3.fld5.0];
_21.2 = (_23.0, _3.1, _13.fld3.fld3.2);
_25.fld0.fld1.0 = _9.fld3.0;
_23.2 = _9.fld5 as isize;
Goto(bb8)
}
bb16 = {
Return()
}
bb17 = {
_9.fld1 = _16.fld0.1.0 * _25.fld3.fld5.1.0;
_37 = _11 & _13.fld3.fld3.2;
_25.fld3.fld6.2 = _13.fld3.fld6.2;
_34.fld3.fld6.2.2 = -_34.fld3.fld6.1;
_25.fld3.fld2 = _13.fld3.fld2;
_13.fld1.1 = !_26.fld0;
_34.fld2 = _21.2.2;
_39.fld0.3 = _34.fld3.fld6.3;
(*_10) = _25.fld0.fld0;
_21.1 = _6;
_39.fld0.2.2 = _21.2.1 as f64;
_13.fld4 = _26.fld2;
_41.fld0 = (_13.fld3.fld3.0,);
_13.fld0.1 = (_34.fld3.fld6.2.4.0,);
_13.fld3.fld6.2.1 = _9.fld2;
_25.fld2 = _9.fld3.2.2 & _3.2;
_25.fld3.fld5.3 = _25.fld0.fld1.3;
Goto(bb18)
}
bb18 = {
Call(_44 = dump_var(14_usize, 11_usize, Move(_11), 4_usize, Move(_4), 23_usize, Move(_23), 8_usize, Move(_8)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_44 = dump_var(14_usize, 2_usize, Move(_2), 12_usize, Move(_12), 3_usize, Move(_3), 45_usize, _45), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: ((f64,),),mut _2: i64,mut _3: i128,mut _4: i128,mut _5: isize,mut _6: [i32; 6],mut _7: i128,mut _8: *const u64,mut _9: i64,mut _10: u16,mut _11: i64,mut _12: i8,mut _13: u16,mut _14: (i8, u16, isize),mut _15: *const u64) -> (i128,) {
mir! {
type RET = (i128,);
let _16: f32;
let _17: Adt58;
let _18: Adt63;
let _19: Adt60;
let _20: Adt56;
let _21: Adt58;
let _22: usize;
let _23: *const (i64, bool);
let _24: i64;
let _25: Adt55;
let _26: Adt52;
let _27: f32;
let _28: char;
let _29: i32;
let _30: f64;
let _31: ((f64,),);
let _32: Adt52;
let _33: [usize; 3];
let _34: u32;
let _35: u8;
let _36: (i16, (i128,), bool, [i16; 1]);
let _37: ();
let _38: ();
{
_15 = core::ptr::addr_of!((*_8));
(*_15) = 16269185438502158065_u64 - 8842000727913503254_u64;
_12 = _14.0 | _14.0;
_13 = !_10;
RET = (_3,);
_11 = '\u{9ef00}' as i64;
(*_15) = 7_u8 as u64;
(*_15) = !13240688096903609582_u64;
_15 = core::ptr::addr_of!((*_8));
_7 = (*_8) as i128;
_1.0.0 = 211_u8 as f64;
(*_15) = 3842040320572466973_u64;
_14.2 = 97658169812388256831548586034858892783_u128 as isize;
_3 = -_4;
_7 = -_3;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
7564290096487423208 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET.0 = _3 + _4;
_16 = _1.0.0 as f32;
_4 = (*_15) as i128;
_10 = 28_u8 as u16;
_10 = _13;
_6 = [(-440458040_i32),2019850911_i32,(-905102688_i32),(-1253050642_i32),1522464483_i32,851943492_i32];
_17.fld2 = _14.2 & _14.2;
_17.fld0.fld1.1 = (_7,);
(*_8) = 27871_i16 as u64;
_17.fld0.fld1.2 = false;
_14 = (_12, _10, _5);
_17.fld3.fld6.2.0 = _16 as isize;
_6 = [(-1032800532_i32),827647982_i32,(-125899134_i32),994708698_i32,(-1790071973_i32),1668521462_i32];
_21.fld3.fld6.2.0 = _17.fld3.fld6.2.0 + _14.2;
_17.fld3.fld3.1 = _13 / 14756_u16;
_21.fld3.fld2 = [(-1271682412_i32),(-1414666202_i32),317384415_i32,1651213834_i32,(-1290372038_i32),(-27185445_i32),259448554_i32];
_21.fld3.fld5.3 = [(-31166_i16)];
Goto(bb9)
}
bb9 = {
_17.fld3.fld4 = [(-1822969777_i32),(-1396183610_i32),(-48830180_i32),1237814049_i32,1608881170_i32,1734821190_i32,79182603_i32,1331627319_i32];
_21.fld0.fld1.3 = [32167_i16];
match _2 {
0 => bb3,
7564290096487423208 => bb10,
_ => bb5
}
}
bb10 = {
_21.fld3.fld5.3 = [(-11925_i16)];
_13 = _10;
_21.fld3.fld3 = (_12, _14.1, _17.fld3.fld6.2.0);
_17.fld0.fld0 = [16046997796760822864_usize,2_usize,16634533581308585776_usize];
_4 = -_3;
_3 = _17.fld0.fld1.1.0;
_21.fld3.fld5 = ((-13426_i16), _17.fld0.fld1.1, _17.fld0.fld1.2, _21.fld0.fld1.3);
_21.fld3.fld6.2.2 = _1.0.0 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000855788328458367_f64);
_21.fld0.fld1.2 = !_17.fld0.fld1.2;
_17.fld3.fld3 = _14;
_17.fld0.fld1 = (_21.fld3.fld5.0, _21.fld3.fld5.1, _21.fld0.fld1.2, _21.fld0.fld1.3);
_17.fld3.fld6.2.2 = _21.fld3.fld6.2.2 - _21.fld3.fld6.2.2;
RET = (_17.fld0.fld1.1.0,);
Call(_17.fld3.fld3.2 = fn16(_21.fld3.fld5.3, _1.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_17.fld0.fld1.1.0 = _4;
_26.fld1 = 226_u8 + 172_u8;
_21.fld3.fld5.1 = _17.fld0.fld1.1;
_18.fld0 = [9805402209313628229_usize,4260832423535986277_usize,7_usize];
_26.fld6 = [37497876_i32,458342081_i32,1598976238_i32,18738408_i32,(-1255848719_i32)];
_24 = -_9;
_26.fld3.1.0 = _4;
_17.fld3.fld6.2 = (_17.fld3.fld3.2, 1170002839_u32, _1.0.0, 1146378279_i32, _21.fld3.fld5.1);
_26.fld7.0 = _11;
Goto(bb12)
}
bb12 = {
_17.fld3.fld0 = core::ptr::addr_of!((*_8));
_21.fld3.fld0 = core::ptr::addr_of!((*_8));
_17.fld3.fld6.2.0 = _21.fld3.fld5.0 as isize;
_17.fld3.fld6.3 = _6;
_26.fld0 = !_21.fld0.fld1.2;
_14 = _17.fld3.fld3;
_3 = 4_usize as i128;
_21.fld3.fld5 = (_17.fld0.fld1.0, _17.fld3.fld6.2.4, _21.fld0.fld1.2, _21.fld0.fld1.3);
_21.fld0.fld1 = (_21.fld3.fld5.0, _21.fld3.fld5.1, _26.fld0, _21.fld3.fld5.3);
_17.fld0.fld1.0 = _21.fld0.fld1.0 * _21.fld3.fld5.0;
_21.fld3.fld5.0 = _17.fld0.fld1.0;
Goto(bb13)
}
bb13 = {
(*_8) = !2496925137560015320_u64;
_17.fld3.fld5.3 = [_17.fld0.fld1.0];
_21.fld3.fld5.2 = _21.fld0.fld1.2;
_32.fld3.1 = _26.fld3.1;
_26.fld3.0 = _21.fld3.fld5.0 | _21.fld3.fld5.0;
(*_8) = 15985701516744803291_u64;
_21.fld3.fld6.0 = _21.fld0.fld1.1.0;
_17.fld3.fld5 = (_26.fld3.0, _26.fld3.1, _21.fld0.fld1.2, _17.fld0.fld1.3);
_21.fld3.fld5.3 = [_17.fld3.fld5.0];
_26.fld7.1 = !_26.fld0;
RET.0 = _17.fld0.fld1.1.0;
_19.fld1 = [3027587379584209804_usize,0_usize,2_usize];
_32.fld3.2 = !_26.fld0;
_25 = Adt55 { fld0: _21.fld3.fld3.0 };
_17.fld3.fld6.2.1 = _16 as u32;
_17.fld3.fld6.2.4 = _21.fld3.fld5.1;
_18 = Adt63 { fld0: _17.fld0.fld0 };
(*_15) = !1089329076647362041_u64;
_32.fld3.0 = _26.fld3.0 ^ _21.fld3.fld5.0;
Goto(bb14)
}
bb14 = {
_21.fld3.fld2 = [_17.fld3.fld6.2.3,_17.fld3.fld6.2.3,_17.fld3.fld6.2.3,_17.fld3.fld6.2.3,_17.fld3.fld6.2.3,_17.fld3.fld6.2.3,_17.fld3.fld6.2.3];
_26.fld0 = !_32.fld3.2;
_17.fld3.fld1 = '\u{e8733}' as u128;
_19.fld0 = !_32.fld3.0;
_32.fld3 = (_17.fld3.fld5.0, _26.fld3.1, _26.fld7.1, _21.fld3.fld5.3);
_1.0.0 = _17.fld3.fld6.2.2 * _21.fld3.fld6.2.2;
_26.fld3.2 = !_17.fld3.fld5.2;
_25 = Adt55 { fld0: _17.fld3.fld3.0 };
_17.fld0.fld1 = _21.fld3.fld5;
_21.fld3.fld6 = (_17.fld3.fld6.2.4.0, _1.0.0, _17.fld3.fld6.2, _6);
_17.fld3.fld5.0 = _19.fld0 ^ _32.fld3.0;
RET = _21.fld3.fld5.1;
_21.fld3.fld5.2 = _17.fld3.fld6.2.3 >= _21.fld3.fld6.2.3;
_17.fld3.fld5.1.0 = _26.fld3.1.0 | _21.fld3.fld6.0;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(15_usize, 10_usize, Move(_10), 6_usize, Move(_6), 3_usize, Move(_3), 13_usize, Move(_13)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(15_usize, 11_usize, Move(_11), 7_usize, Move(_7), 38_usize, _38, 38_usize, _38), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [i16; 1],mut _2: (f64,)) -> isize {
mir! {
type RET = isize;
let _3: *const (isize, u32, f64, i32, (i128,));
let _4: *const (i64, bool);
let _5: *const f64;
let _6: *const char;
let _7: (u64,);
let _8: *const [usize; 3];
let _9: bool;
let _10: u8;
let _11: Adt59;
let _12: isize;
let _13: char;
let _14: f64;
let _15: [u32; 5];
let _16: i8;
let _17: [usize; 4];
let _18: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]);
let _19: Adt62;
let _20: Adt51;
let _21: i64;
let _22: *const [usize; 3];
let _23: Adt58;
let _24: f64;
let _25: *const (i64, bool);
let _26: Adt50;
let _27: *const char;
let _28: [i16; 1];
let _29: bool;
let _30: bool;
let _31: [i8; 1];
let _32: isize;
let _33: isize;
let _34: u128;
let _35: Adt50;
let _36: ();
let _37: ();
{
RET = 9223372036854775807_isize;
RET = 4_usize as isize;
_5 = core::ptr::addr_of!(_2.0);
Goto(bb1)
}
bb1 = {
_5 = core::ptr::addr_of!((*_5));
_1 = [(-6761_i16)];
(*_5) = 1303839720_u32 as f64;
RET = (-15_isize);
(*_5) = (-2119683990_i32) as f64;
RET = !(-9223372036854775808_isize);
_5 = core::ptr::addr_of!((*_5));
RET = 843011441_u32 as isize;
Goto(bb2)
}
bb2 = {
_1 = [(-32163_i16)];
RET = !47_isize;
_5 = core::ptr::addr_of!(_2.0);
(*_5) = (-8499382874882248664_i64) as f64;
Call(RET = fn17(_2.0, _5, _2.0, (*_5), (*_5), _5, _2, (*_5), _2, (*_5), _1, (*_5), _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_1 = [(-18373_i16)];
_5 = core::ptr::addr_of!((*_5));
RET = 56_isize + 9223372036854775807_isize;
Goto(bb4)
}
bb4 = {
_5 = core::ptr::addr_of!((*_5));
_7 = (2692179429047691154_u64,);
RET = 1_usize as isize;
_2.0 = 158_u8 as f64;
(*_5) = 6043862493191966296717571101222811492_i128 as f64;
_7.0 = 5483261168901217527_u64 * 7026313022629221468_u64;
_2.0 = 3297655991_u32 as f64;
Goto(bb5)
}
bb5 = {
_7 = (3003663036252824394_u64,);
_11.fld3.2 = ((-3748824578852627227_i64), (-9223372036854775808_isize), (-14_isize));
_11.fld3.1.0.0 = _2.0;
_11.fld3.0 = -15014_i16;
_11.fld3.1.0 = ((*_5),);
_11.fld4 = _7;
_7.0 = _11.fld4.0 | _11.fld4.0;
_11.fld1 = (-125_i8) as i128;
_11.fld3.1.0.0 = _2.0 * (*_5);
_11.fld1 = (-35481399197004802135361351595099457637_i128);
_14 = _2.0 * _2.0;
_11.fld3.1.0 = _2;
_11.fld5 = 65383_u16 ^ 8690_u16;
_7.0 = _11.fld4.0 >> _11.fld3.0;
_11.fld5 = !60523_u16;
_11.fld3.0 = '\u{23715}' as i16;
_13 = '\u{de2de}';
_1 = [_11.fld3.0];
(*_5) = _14;
_10 = 244_u8 >> _11.fld3.2.2;
_11.fld1 = 36525714662128329287651415944875847579_i128;
_11.fld1 = !17944817407323228606207039938063207626_i128;
match _11.fld3.2.1 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463454151235394913435648 => bb6,
_ => bb4
}
}
bb6 = {
_19.fld6.fld2.2.1 = _11.fld5 as u32;
_11.fld4 = _7;
_19.fld7.fld0 = [10452379055460854564_usize,4_usize,15764505746239488558_usize];
_6 = core::ptr::addr_of!(_13);
_11.fld3.1 = (_2,);
_16 = (-115_i8);
_19.fld2 = 4957432655906962480_usize >> _11.fld3.2.0;
_19.fld6.fld1 = (_11.fld3.0, _11.fld3.1, _11.fld3.2, _10);
_19.fld6.fld4 = !_19.fld6.fld1.3;
_19.fld6.fld1.2.1 = _11.fld3.2.1;
_19.fld4 = [_11.fld3.0];
_18.0.2 = !_11.fld3.2.2;
_19.fld6.fld0 = (_14,);
_18.3 = [295148787_i32,(-30641858_i32),59134438_i32,572345166_i32,1671015756_i32];
_11.fld3.1.0.0 = (*_5) - (*_5);
RET = _18.0.2 * _19.fld6.fld1.2.2;
_19.fld7.fld0 = [_19.fld2,_19.fld2,_19.fld2];
_19.fld6.fld2.2.3 = (-1900501780_i32) - (-337542156_i32);
_18.1 = _19.fld6.fld1.2.2 as i32;
_3 = core::ptr::addr_of!(_19.fld6.fld2.2);
_19.fld5 = (*_3).3;
(*_6) = '\u{221b9}';
_19.fld6.fld3 = _3;
_12 = _19.fld6.fld1.2.1 ^ _19.fld6.fld1.2.1;
_2 = (_19.fld6.fld0.0,);
_11.fld2 = (*_3).1 & (*_3).1;
Call(_19.fld0.fld0 = core::intrinsics::bswap(_11.fld3.0), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_12 = -_11.fld3.2.2;
_11.fld3.2.0 = _19.fld6.fld1.2.0 | _19.fld6.fld1.2.0;
(*_3).0 = _18.0.2;
_11.fld3.1.0.0 = _14 * _14;
(*_3).4 = (_11.fld1,);
Goto(bb8)
}
bb8 = {
_19.fld3.0.1 = !_11.fld5;
_8 = core::ptr::addr_of!(_19.fld0.fld1);
_20.fld1.0 = _11.fld3.2.0 + _11.fld3.2.0;
_20.fld3.fld3.2 = _10 as isize;
_19.fld6.fld1.3 = _19.fld6.fld4;
_19.fld3.2 = [_19.fld2,_19.fld2,_19.fld2,_19.fld2];
_16 = !(-43_i8);
_19.fld6.fld1 = (_11.fld3.0, _11.fld3.1, _11.fld3.2, _10);
_19.fld6.fld1.2.2 = _20.fld3.fld3.2;
_20.fld3.fld3.2 = _19.fld6.fld1.2.2 - _18.0.2;
_19.fld4 = _1;
_19.fld7.fld1.2 = false;
match _11.fld3.2.1 {
0 => bb2,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb9 = {
_7 = (3003663036252824394_u64,);
_11.fld3.2 = ((-3748824578852627227_i64), (-9223372036854775808_isize), (-14_isize));
_11.fld3.1.0.0 = _2.0;
_11.fld3.0 = -15014_i16;
_11.fld3.1.0 = ((*_5),);
_11.fld4 = _7;
_7.0 = _11.fld4.0 | _11.fld4.0;
_11.fld1 = (-125_i8) as i128;
_11.fld3.1.0.0 = _2.0 * (*_5);
_11.fld1 = (-35481399197004802135361351595099457637_i128);
_14 = _2.0 * _2.0;
_11.fld3.1.0 = _2;
_11.fld5 = 65383_u16 ^ 8690_u16;
_7.0 = _11.fld4.0 >> _11.fld3.0;
_11.fld5 = !60523_u16;
_11.fld3.0 = '\u{23715}' as i16;
_13 = '\u{de2de}';
_1 = [_11.fld3.0];
(*_5) = _14;
_10 = 244_u8 >> _11.fld3.2.2;
_11.fld1 = 36525714662128329287651415944875847579_i128;
_11.fld1 = !17944817407323228606207039938063207626_i128;
match _11.fld3.2.1 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463454151235394913435648 => bb6,
_ => bb4
}
}
bb10 = {
_19.fld6.fld1.2.0 = !_20.fld1.0;
_19.fld0 = Adt60 { fld0: _11.fld3.0,fld1: _19.fld7.fld0,fld2: _19.fld3.2 };
_9 = _19.fld7.fld1.2 | _19.fld7.fld1.2;
_20.fld3.fld3.0 = _16 << _20.fld1.0;
_23.fld3.fld5.3 = [_11.fld3.0];
_11.fld0 = [_20.fld3.fld3.0];
_4 = core::ptr::addr_of!(_20.fld1);
_23.fld3.fld5.1 = (_19.fld6.fld2.2.4.0,);
_19.fld6.fld0.0 = _11.fld3.1.0.0;
_23.fld1 = _19.fld2 * _19.fld2;
_21 = _19.fld6.fld4 as i64;
_20.fld1.0 = _11.fld3.2.0 | _19.fld6.fld1.2.0;
_19.fld3.1 = (*_3).3;
_26.fld5.0 = _7.0 as i16;
_26.fld5.0 = _11.fld3.0;
_5 = core::ptr::addr_of!(_19.fld6.fld1.1.0.0);
_11.fld3.2 = _19.fld6.fld1.2;
_25 = core::ptr::addr_of!((*_4));
Goto(bb11)
}
bb11 = {
_20.fld3.fld5 = (_19.fld0.fld0, (*_3).4, _9, _19.fld4);
_23.fld3.fld5.2 = !_19.fld7.fld1.2;
_23.fld0.fld1.1.0 = _11.fld1;
_20.fld5 = [(*_3).3,_19.fld3.1,(*_3).3,_19.fld5,(*_3).3,_19.fld6.fld2.2.3,_19.fld3.1,(*_3).3];
_5 = core::ptr::addr_of!(_19.fld6.fld2.2.2);
(*_3).2 = _19.fld6.fld0.0;
_20.fld3.fld4 = [(*_3).3,_18.1,_19.fld3.1,_18.1,_18.1,_18.1,(*_3).3,_18.1];
_18.2 = [_19.fld2,_19.fld2,_23.fld1,_23.fld1];
_19.fld6.fld3 = _3;
_23.fld0.fld1.0 = -_26.fld5.0;
_20.fld2 = (*_3).0;
_23.fld3.fld6.2.0 = _19.fld6.fld1.2.1 & _12;
_26.fld6.2.4.0 = _20.fld3.fld5.1.0 | _23.fld0.fld1.1.0;
_7 = (_11.fld4.0,);
Goto(bb12)
}
bb12 = {
_19.fld7.fld1.1.0 = (*_6) as i128;
_26.fld6.3 = [_18.1,_18.1,_19.fld3.1,_19.fld3.1,_18.1,_19.fld3.1];
_20.fld3.fld6.0 = _19.fld2 as i128;
_20.fld0.1.0 = !_23.fld0.fld1.1.0;
_25 = core::ptr::addr_of!((*_4));
_26.fld5.3 = [_19.fld6.fld1.0];
(*_3).3 = -_19.fld5;
_18.1 = (*_3).3 ^ _19.fld5;
_26.fld3.0 = _9 as i8;
_19.fld1 = _11.fld5 - _11.fld5;
_2 = (_19.fld6.fld2.2.2,);
match _11.fld3.2.1 {
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb13 = {
_19.fld6.fld1.2.0 = !_20.fld1.0;
_19.fld0 = Adt60 { fld0: _11.fld3.0,fld1: _19.fld7.fld0,fld2: _19.fld3.2 };
_9 = _19.fld7.fld1.2 | _19.fld7.fld1.2;
_20.fld3.fld3.0 = _16 << _20.fld1.0;
_23.fld3.fld5.3 = [_11.fld3.0];
_11.fld0 = [_20.fld3.fld3.0];
_4 = core::ptr::addr_of!(_20.fld1);
_23.fld3.fld5.1 = (_19.fld6.fld2.2.4.0,);
_19.fld6.fld0.0 = _11.fld3.1.0.0;
_23.fld1 = _19.fld2 * _19.fld2;
_21 = _19.fld6.fld4 as i64;
_20.fld1.0 = _11.fld3.2.0 | _19.fld6.fld1.2.0;
_19.fld3.1 = (*_3).3;
_26.fld5.0 = _7.0 as i16;
_26.fld5.0 = _11.fld3.0;
_5 = core::ptr::addr_of!(_19.fld6.fld1.1.0.0);
_11.fld3.2 = _19.fld6.fld1.2;
_25 = core::ptr::addr_of!((*_4));
Goto(bb11)
}
bb14 = {
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(16_usize, 1_usize, Move(_1), 12_usize, Move(_12), 9_usize, Move(_9), 21_usize, Move(_21)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: f64,mut _2: *const f64,mut _3: f64,mut _4: f64,mut _5: f64,mut _6: *const f64,mut _7: (f64,),mut _8: f64,mut _9: (f64,),mut _10: f64,mut _11: [i16; 1],mut _12: f64,mut _13: *const f64) -> isize {
mir! {
type RET = isize;
let _14: u64;
let _15: Adt62;
let _16: i128;
let _17: f32;
let _18: Adt54;
let _19: Adt57;
let _20: (i16, ((f64,),), (i64, isize, isize), u8);
let _21: char;
let _22: ((f64,),);
let _23: (i8, u16, isize);
let _24: Adt57;
let _25: Adt64;
let _26: char;
let _27: i16;
let _28: ();
let _29: ();
{
(*_2) = -_5;
_9 = _7;
_7.0 = 23800_i16 as f64;
(*_2) = -_9.0;
_5 = (*_13);
_9 = (_1,);
RET = 9223372036854775807_isize;
RET = (-9223372036854775808_isize);
_13 = core::ptr::addr_of!(_5);
_12 = -(*_6);
_11 = [(-7100_i16)];
(*_13) = (*_6) + (*_2);
_1 = 10469673331661070203_u64 as f64;
(*_6) = 50_u8 as f64;
_9.0 = 20412_u16 as f64;
_7.0 = _5 * (*_13);
_15.fld4 = [(-31810_i16)];
_15.fld6.fld4 = !54_u8;
_15.fld0.fld1 = [3_usize,2_usize,14704804605242674497_usize];
_9 = ((*_13),);
_12 = -_9.0;
_15.fld6.fld2.3 = [(-177777256_i32),408884993_i32,230537247_i32,(-2082786155_i32),1771132271_i32,515396359_i32];
_15.fld6.fld1.2.1 = -13_isize;
_15.fld6.fld2.2.4.0 = !152301019128100848419485723218740011159_i128;
_15.fld2 = !6_usize;
_15.fld3.0.0 = 126_i8;
match _15.fld3.0.0 {
0 => bb1,
1 => bb2,
2 => bb3,
126 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_16 = _15.fld6.fld2.2.4.0 & _15.fld6.fld2.2.4.0;
match _15.fld3.0.0 {
0 => bb1,
126 => bb6,
_ => bb4
}
}
bb6 = {
(*_6) = _4;
_15.fld5 = (-871390373_i32);
_15.fld6.fld2.2.2 = (*_13);
_18.fld2.2.1 = 2772836722_u32;
_20.2.2 = _15.fld6.fld1.2.1 + _15.fld6.fld1.2.1;
_15.fld6.fld1.3 = _15.fld6.fld4;
_15.fld6.fld2.3 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_15.fld0.fld0 = _15.fld6.fld1.3 as i16;
_18.fld2.3 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_18.fld4 = !_15.fld6.fld4;
_15.fld3.0.0 = (-26_i8) << _18.fld4;
_18.fld2.2 = (_15.fld6.fld1.2.1, 3432748971_u32, (*_13), _15.fld5, _15.fld6.fld2.2.4);
_16 = _15.fld6.fld2.2.4.0 >> _18.fld2.2.0;
_20.1.0 = (_9.0,);
_24.fld1 = [_15.fld5,_15.fld5,_15.fld5,_18.fld2.2.3,_18.fld2.2.3];
(*_2) = _18.fld2.2.2 - _18.fld2.2.2;
_15.fld7.fld1.0 = -_15.fld0.fld0;
_25.fld0.1 = -_7.0;
_25.fld0.3 = [_15.fld5,_18.fld2.2.3,_15.fld5,_15.fld5,_15.fld5,_18.fld2.2.3];
_15.fld6.fld2.2.0 = 31202_u16 as isize;
Goto(bb7)
}
bb7 = {
_15.fld0.fld2 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_25.fld0.2.4.0 = _16 * _16;
_15.fld3.2 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2];
match _18.fld2.2.1 {
0 => bb5,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
3432748971 => bb14,
_ => bb13
}
}
bb8 = {
(*_6) = _4;
_15.fld5 = (-871390373_i32);
_15.fld6.fld2.2.2 = (*_13);
_18.fld2.2.1 = 2772836722_u32;
_20.2.2 = _15.fld6.fld1.2.1 + _15.fld6.fld1.2.1;
_15.fld6.fld1.3 = _15.fld6.fld4;
_15.fld6.fld2.3 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_15.fld0.fld0 = _15.fld6.fld1.3 as i16;
_18.fld2.3 = [_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5,_15.fld5];
_18.fld4 = !_15.fld6.fld4;
_15.fld3.0.0 = (-26_i8) << _18.fld4;
_18.fld2.2 = (_15.fld6.fld1.2.1, 3432748971_u32, (*_13), _15.fld5, _15.fld6.fld2.2.4);
_16 = _15.fld6.fld2.2.4.0 >> _18.fld2.2.0;
_20.1.0 = (_9.0,);
_24.fld1 = [_15.fld5,_15.fld5,_15.fld5,_18.fld2.2.3,_18.fld2.2.3];
(*_2) = _18.fld2.2.2 - _18.fld2.2.2;
_15.fld7.fld1.0 = -_15.fld0.fld0;
_25.fld0.1 = -_7.0;
_25.fld0.3 = [_15.fld5,_18.fld2.2.3,_15.fld5,_15.fld5,_15.fld5,_18.fld2.2.3];
_15.fld6.fld2.2.0 = 31202_u16 as isize;
Goto(bb7)
}
bb9 = {
_16 = _15.fld6.fld2.2.4.0 & _15.fld6.fld2.2.4.0;
match _15.fld3.0.0 {
0 => bb1,
126 => bb6,
_ => bb4
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_15.fld3.0.1 = _25.fld0.2.4.0 as u16;
_18.fld1.2.0 = (-2528554170569259427_i64) & 4038365225626032359_i64;
_15.fld3.3 = [_15.fld5,_18.fld2.2.3,_15.fld5,_18.fld2.2.3,_15.fld5];
_18.fld2.2.4.0 = _16 >> _20.2.2;
_15.fld6.fld2.0 = _25.fld0.2.4.0 >> _18.fld4;
_15.fld3.0.2 = !_15.fld6.fld2.2.0;
_20.1.0 = ((*_2),);
_3 = _25.fld0.1 / f64::NAN;
_24.fld0 = false as u128;
_1 = -_3;
_21 = '\u{5605d}';
_26 = _21;
_15.fld3.4 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_23.0 = _15.fld3.0.0 + _15.fld3.0.0;
_19.fld0 = _24.fld0;
_20.2 = (_18.fld1.2.0, _15.fld6.fld2.2.0, _18.fld2.2.0);
_15.fld3.0.2 = _20.2.1;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(17_usize, 16_usize, Move(_16), 21_usize, Move(_21), 29_usize, _29, 29_usize, _29), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: (i64, isize, isize),mut _2: [i32; 6],mut _3: u64,mut _4: isize,mut _5: [i32; 6]) -> [i32; 5] {
mir! {
type RET = [i32; 5];
let _6: Adt63;
let _7: i128;
let _8: (i16, (i128,), bool, [i16; 1]);
let _9: Adt59;
let _10: char;
let _11: i64;
let _12: u16;
let _13: isize;
let _14: isize;
let _15: Adt61;
let _16: Adt54;
let _17: f64;
let _18: Adt50;
let _19: ();
let _20: ();
{
_5 = [1823621243_i32,1767166032_i32,853546364_i32,(-380670472_i32),642766542_i32,(-502285344_i32)];
_1 = ((-3259175223332029049_i64), _4, _4);
_1.1 = !_1.2;
RET = [(-1313015542_i32),1829980594_i32,1517674381_i32,(-1945259282_i32),(-1798028082_i32)];
RET = [(-1087943433_i32),1751373728_i32,(-1785788257_i32),(-1515974025_i32),1171546864_i32];
RET = [591785109_i32,(-1011296011_i32),819009155_i32,641348184_i32,(-43946474_i32)];
_5 = _2;
_2 = [(-1159788414_i32),453261095_i32,458865487_i32,1344733250_i32,1000738327_i32,1275837328_i32];
Goto(bb1)
}
bb1 = {
_1 = (6192791224195267565_i64, _4, _4);
_6.fld0 = [3_usize,1_usize,1_usize];
_8.0 = 87759179736776801945882814884168989660_i128 as i16;
_7 = 136812593658428932433646953072824171825_i128;
_8.1.0 = _3 as i128;
_6.fld0 = [1_usize,0_usize,11023683323745346084_usize];
_1.0 = 4692664743807219528_i64 + (-326838533199287216_i64);
_1.0 = 58_u8 as i64;
_1.0 = 1176230622_u32 as i64;
_1.2 = !_4;
_8.3 = [_8.0];
_1.0 = '\u{87770}' as i64;
_1.2 = 251_u8 as isize;
_9.fld4.0 = _3 * _3;
_1 = (1475218029974692225_i64, _4, _4);
_3 = 8413163876178360499553882728699009406_u128 as u64;
_5 = [897462724_i32,(-939407026_i32),547612106_i32,(-1440262132_i32),1211719589_i32,(-1728108746_i32)];
_9.fld1 = (-2_i8) as i128;
RET = [(-1927944460_i32),1038113975_i32,1917769818_i32,(-1038968164_i32),107521959_i32];
_9.fld3.0 = 180031009879645492674526293496324854745_u128 as i16;
_9.fld3.0 = true as i16;
_10 = '\u{c46eb}';
_1.1 = _1.2;
RET = [1972504230_i32,(-1491762127_i32),(-411669709_i32),(-2026107369_i32),1590935646_i32];
_1.1 = -_1.2;
_9.fld3.2 = _1;
Goto(bb2)
}
bb2 = {
_11 = _1.0 ^ _1.0;
_9.fld1 = _8.1.0 ^ _8.1.0;
_9.fld2 = 2885073357_u32 - 4001423851_u32;
_9.fld3.3 = 202_u8;
_9.fld3.2.1 = _1.1;
RET = [621761932_i32,(-227956833_i32),(-325304211_i32),1534094905_i32,1507118549_i32];
_8.1.0 = _9.fld1;
_8.1.0 = _9.fld3.3 as i128;
_8.1.0 = _9.fld1;
_7 = !_8.1.0;
_1.0 = -_9.fld3.2.0;
_13 = _9.fld3.2.2;
_8.1.0 = _9.fld1 * _9.fld1;
match _9.fld3.2.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
1475218029974692225 => bb11,
_ => bb10
}
}
bb3 = {
_1 = (6192791224195267565_i64, _4, _4);
_6.fld0 = [3_usize,1_usize,1_usize];
_8.0 = 87759179736776801945882814884168989660_i128 as i16;
_7 = 136812593658428932433646953072824171825_i128;
_8.1.0 = _3 as i128;
_6.fld0 = [1_usize,0_usize,11023683323745346084_usize];
_1.0 = 4692664743807219528_i64 + (-326838533199287216_i64);
_1.0 = 58_u8 as i64;
_1.0 = 1176230622_u32 as i64;
_1.2 = !_4;
_8.3 = [_8.0];
_1.0 = '\u{87770}' as i64;
_1.2 = 251_u8 as isize;
_9.fld4.0 = _3 * _3;
_1 = (1475218029974692225_i64, _4, _4);
_3 = 8413163876178360499553882728699009406_u128 as u64;
_5 = [897462724_i32,(-939407026_i32),547612106_i32,(-1440262132_i32),1211719589_i32,(-1728108746_i32)];
_9.fld1 = (-2_i8) as i128;
RET = [(-1927944460_i32),1038113975_i32,1917769818_i32,(-1038968164_i32),107521959_i32];
_9.fld3.0 = 180031009879645492674526293496324854745_u128 as i16;
_9.fld3.0 = true as i16;
_10 = '\u{c46eb}';
_1.1 = _1.2;
RET = [1972504230_i32,(-1491762127_i32),(-411669709_i32),(-2026107369_i32),1590935646_i32];
_1.1 = -_1.2;
_9.fld3.2 = _1;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_3 = _9.fld4.0 >> _1.0;
_9.fld4.0 = _3;
_9.fld3.2.1 = -_4;
_8.3 = [_9.fld3.0];
_1.1 = _1.2;
_9.fld3.1.0.0 = (-702158156_i32) as f64;
_14 = 27176741824499294558941660852960867475_u128 as isize;
_9.fld3.3 = 89_u8 - 211_u8;
Goto(bb12)
}
bb12 = {
_3 = _9.fld4.0 ^ _9.fld4.0;
_9.fld1 = _7 - _8.1.0;
_16.fld2.0 = 38276_u16 as i128;
_4 = !_1.1;
_16.fld2.2 = (_1.1, _9.fld2, _9.fld3.1.0.0, 2054331199_i32, _8.1);
match _16.fld2.2.3 {
0 => bb9,
1 => bb11,
2 => bb3,
3 => bb10,
4 => bb13,
5 => bb14,
6 => bb15,
2054331199 => bb17,
_ => bb16
}
}
bb13 = {
_3 = _9.fld4.0 >> _1.0;
_9.fld4.0 = _3;
_9.fld3.2.1 = -_4;
_8.3 = [_9.fld3.0];
_1.1 = _1.2;
_9.fld3.1.0.0 = (-702158156_i32) as f64;
_14 = 27176741824499294558941660852960867475_u128 as isize;
_9.fld3.3 = 89_u8 - 211_u8;
Goto(bb12)
}
bb14 = {
_1 = (6192791224195267565_i64, _4, _4);
_6.fld0 = [3_usize,1_usize,1_usize];
_8.0 = 87759179736776801945882814884168989660_i128 as i16;
_7 = 136812593658428932433646953072824171825_i128;
_8.1.0 = _3 as i128;
_6.fld0 = [1_usize,0_usize,11023683323745346084_usize];
_1.0 = 4692664743807219528_i64 + (-326838533199287216_i64);
_1.0 = 58_u8 as i64;
_1.0 = 1176230622_u32 as i64;
_1.2 = !_4;
_8.3 = [_8.0];
_1.0 = '\u{87770}' as i64;
_1.2 = 251_u8 as isize;
_9.fld4.0 = _3 * _3;
_1 = (1475218029974692225_i64, _4, _4);
_3 = 8413163876178360499553882728699009406_u128 as u64;
_5 = [897462724_i32,(-939407026_i32),547612106_i32,(-1440262132_i32),1211719589_i32,(-1728108746_i32)];
_9.fld1 = (-2_i8) as i128;
RET = [(-1927944460_i32),1038113975_i32,1917769818_i32,(-1038968164_i32),107521959_i32];
_9.fld3.0 = 180031009879645492674526293496324854745_u128 as i16;
_9.fld3.0 = true as i16;
_10 = '\u{c46eb}';
_1.1 = _1.2;
RET = [1972504230_i32,(-1491762127_i32),(-411669709_i32),(-2026107369_i32),1590935646_i32];
_1.1 = -_1.2;
_9.fld3.2 = _1;
Goto(bb2)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_16.fld0.0 = 110419548126450061307277017233051168611_u128 as f64;
_16.fld2.2.1 = _9.fld2;
_8.0 = -_9.fld3.0;
_9.fld3.1.0 = (_16.fld0.0,);
_7 = _8.1.0 + _16.fld2.2.4.0;
_9.fld5 = 26151_u16 - 15331_u16;
_16.fld1.2 = (_11, _9.fld3.2.1, _16.fld2.2.0);
_16.fld1.2.2 = (-10_i8) as isize;
_8.2 = true;
_16.fld4 = _8.0 as u8;
_16.fld1.2.1 = !_1.2;
_18.fld6.2.2 = _16.fld0.0 / (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001687409268690449_f64);
_18.fld6.0 = _16.fld1.2.1 as i128;
_9.fld3.2 = (_16.fld1.2.0, _4, _1.2);
_18.fld6.2.2 = _16.fld0.0;
_16.fld1.1 = _9.fld3.1;
_16.fld3 = core::ptr::addr_of!(_18.fld6.2);
_18.fld3.1 = _9.fld3.1.0.0 as u16;
Goto(bb18)
}
bb18 = {
Call(_19 = dump_var(18_usize, 14_usize, Move(_14), 8_usize, Move(_8), 10_usize, Move(_10), 1_usize, Move(_1)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_19 = dump_var(18_usize, 11_usize, Move(_11), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box((-149200484014563059250959270135448134815_i128)), std::hint::black_box((-114149715130855360_i64)), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box((-44_i8))));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: [usize; 3],
fld1: (i16, (i128,), bool, [i16; 1]),
}
#[derive(Debug)]
pub struct Adt50 {
fld0: *const u64,
fld1: u128,
fld2: [i32; 7],
fld3: (i8, u16, isize),
fld4: [i32; 8],
fld5: (i16, (i128,), bool, [i16; 1]),
fld6: (i128, f64, (isize, u32, f64, i32, (i128,)), [i32; 6]),
}
#[derive(Debug)]
pub struct Adt51 {
fld0: (i16, (i128,), bool, [i16; 1]),
fld1: (i64, bool),
fld2: isize,
fld3: Adt50,
fld4: usize,
fld5: [i32; 8],
fld6: [bool; 6],
}
#[derive(Debug)]
pub struct Adt52 {
fld0: bool,
fld1: u8,
fld2: usize,
fld3: (i16, (i128,), bool, [i16; 1]),
fld4: i16,
fld5: u64,
fld6: [i32; 5],
fld7: (i64, bool),
}
#[derive(Debug)]
pub struct Adt53 {
fld0: (i16, (i128,), bool, [i16; 1]),
fld1: u16,
fld2: (i128,),
fld3: u32,
fld4: Adt49,
}
#[derive(Debug)]
pub struct Adt54 {
fld0: (f64,),
fld1: (i16, ((f64,),), (i64, isize, isize), u8),
fld2: (i128, f64, (isize, u32, f64, i32, (i128,)), [i32; 6]),
fld3: *const (isize, u32, f64, i32, (i128,)),
fld4: u8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt55 {
fld0: i8,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: [usize; 4],
fld1: u32,
}
#[derive(Debug)]
pub struct Adt57 {
fld0: u128,
fld1: [i32; 5],
}
#[derive(Debug)]
pub struct Adt58 {
fld0: Adt49,
fld1: usize,
fld2: isize,
fld3: Adt50,
fld4: f64,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt59 {
fld0: [i8; 1],
fld1: i128,
fld2: u32,
fld3: (i16, ((f64,),), (i64, isize, isize), u8),
fld4: (u64,),
fld5: u16,
fld6: *const (i64, bool),
}
#[derive(Debug)]
pub struct Adt60 {
fld0: i16,
fld1: [usize; 3],
fld2: [usize; 4],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt61 {
fld0: (i8,),
}
#[derive(Debug)]
pub struct Adt62 {
fld0: Adt60,
fld1: u16,
fld2: usize,
fld3: ((i8, u16, isize), i32, [usize; 4], [i32; 5], [usize; 4]),
fld4: [i16; 1],
fld5: i32,
fld6: Adt54,
fld7: Adt49,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: [usize; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt64 {
fld0: (i128, f64, (isize, u32, f64, i32, (i128,)), [i32; 6]),
fld1: *const (isize, u32, f64, i32, (i128,)),
}
#[derive(Debug)]
pub struct Adt65 {
fld0: [u32; 5],
fld1: Adt53,
fld2: isize,
}

