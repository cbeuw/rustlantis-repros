#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u64,mut _2: u8,mut _3: u128,mut _4: i8,mut _5: i128,mut _6: i32,mut _7: i64) -> [u64; 5] {
mir! {
type RET = [u64; 5];
let _8: f32;
let _9: isize;
let _10: u64;
let _11: *mut [i8; 3];
let _12: [i16; 4];
let _13: bool;
let _14: [i8; 2];
let _15: [u16; 4];
let _16: [u64; 3];
let _17: bool;
let _18: f64;
let _19: &'static u8;
let _20: Adt27;
let _21: [i8; 2];
let _22: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _23: f64;
let _24: Adt44;
let _25: ([isize; 3], i8);
let _26: [i8; 1];
let _27: (i16, isize, i16);
let _28: f32;
let _29: &'static u64;
let _30: ([i32; 4],);
let _31: bool;
let _32: [u8; 6];
let _33: ([i32; 4],);
let _34: u128;
let _35: Adt44;
let _36: *mut u128;
let _37: [i128; 7];
let _38: i8;
let _39: &'static i16;
let _40: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _41: (i64, Adt30);
let _42: &'static f64;
let _43: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _44: &'static u128;
let _45: char;
let _46: bool;
let _47: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _48: &'static (f32, [bool; 5], u128, i8);
let _49: [bool; 5];
let _50: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _51: u16;
let _52: *mut u128;
let _53: f32;
let _54: isize;
let _55: [i8; 2];
let _56: u64;
let _57: f32;
let _58: u64;
let _59: &'static (&'static i16, u16, char, i64);
let _60: u8;
let _61: *mut [u64; 3];
let _62: usize;
let _63: &'static f64;
let _64: isize;
let _65: ([i32; 4],);
let _66: char;
let _67: f64;
let _68: &'static *const *mut i8;
let _69: isize;
let _70: isize;
let _71: Adt73;
let _72: &'static u64;
let _73: (([i32; 4],),);
let _74: bool;
let _75: f64;
let _76: u128;
let _77: f64;
let _78: isize;
let _79: usize;
let _80: [i16; 7];
let _81: i64;
let _82: Adt30;
let _83: [i128; 7];
let _84: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _85: isize;
let _86: ([i32; 4],);
let _87: i64;
let _88: isize;
let _89: Adt44;
let _90: isize;
let _91: Adt43;
let _92: *const Adt27;
let _93: f64;
let _94: [i16; 7];
let _95: i16;
let _96: isize;
let _97: usize;
let _98: char;
let _99: isize;
let _100: f32;
let _101: isize;
let _102: *mut u128;
let _103: bool;
let _104: u8;
let _105: [isize; 3];
let _106: (i16, isize, i16);
let _107: (u8, Adt20, i16);
let _108: isize;
let _109: *const Adt27;
let _110: ();
let _111: ();
{
_2 = 88283565329701699566360612844556763035_u128 as u8;
RET = [17788868516319740585_u64,5638408856309168123_u64,4053059945216773065_u64,4438784679336987762_u64,6173195126060046954_u64];
_7 = 88160205938655442655229586718490523750_u128 as i64;
_8 = 32126_u16 as f32;
_3 = !311069611473937314073102605493809591544_u128;
RET = [5985122179863959683_u64,9998140569513085866_u64,14220855980795479560_u64,12738874789770092008_u64,8674904442374260654_u64];
_5 = (-42625227835076201962159384433576323049_i128) >> _3;
_8 = 0_usize as f32;
_6 = (-9223372036854775808_isize) as i32;
_4 = _6 as i8;
_2 = 21_u8;
_9 = 2242_i16 as isize;
_2 = !183_u8;
_8 = _9 as f32;
Call(RET = fn1(_9, _4, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = 690477669_u32 as u64;
_3 = 317060386995245154255751275663368309663_u128;
_3 = !33902962800159720183938074940243842121_u128;
_3 = 123966656637991134455283418359224658049_u128 ^ 198522193754759102512292899242481757196_u128;
_6 = 25998_u16 as i32;
_10 = _6 as u64;
_8 = _7 as f32;
RET = [_10,_1,_10,_1,_1];
_7 = _9 as i64;
_5 = 57370318628199888914494952223911907578_i128 << _7;
_7 = -(-5412484556099460059_i64);
_12 = [11674_i16,16014_i16,7053_i16,(-9525_i16)];
_2 = 81_u8;
_10 = 22089_u16 as u64;
_7 = (-1117456302529970041_i64);
_13 = true;
_2 = _5 as u8;
_1 = '\u{34320}' as u64;
_3 = 186957849143994230428677238170362116866_u128;
_4 = 44_i8;
RET = [_1,_1,_1,_10,_10];
_2 = 166_u8;
_14 = [_4,_4];
_4 = (-111_i8) & 107_i8;
Goto(bb2)
}
bb2 = {
_2 = 106_u8;
_3 = _5 as u128;
_9 = '\u{386f0}' as isize;
RET = [_10,_10,_1,_1,_10];
_10 = !_1;
_10 = _1;
_2 = 134_u8 * 255_u8;
_5 = _8 as i128;
_6 = 344792076_i32;
_2 = !67_u8;
_13 = !true;
_12 = [11833_i16,8082_i16,26242_i16,29166_i16];
_5 = (-115032511047225813871048971630352039933_i128);
_2 = 100_u8 | 101_u8;
_3 = !79855646088379182877493072787089932906_u128;
RET = [_1,_10,_10,_1,_10];
_3 = 242808799279993457124723092522195914588_u128 * 308821955256172301999783184665675725804_u128;
_10 = !_1;
_5 = 13797927204979835569978638999489245432_i128;
RET = [_10,_10,_10,_1,_1];
_2 = 114_u8;
_4 = -47_i8;
Goto(bb3)
}
bb3 = {
_17 = _13;
_17 = _8 <= _8;
RET = [_1,_10,_1,_1,_1];
_12 = [(-29729_i16),6606_i16,(-24289_i16),15770_i16];
_8 = 3486207215_u32 as f32;
_15 = [53051_u16,17878_u16,55212_u16,31447_u16];
_12 = [(-14832_i16),28717_i16,(-12223_i16),4142_i16];
_4 = -(-43_i8);
_6 = _17 as i32;
RET = [_10,_1,_10,_1,_10];
_15 = [50079_u16,47540_u16,49241_u16,832_u16];
_15 = [37647_u16,48823_u16,54955_u16,65306_u16];
_5 = (-148018420574339467588710298870653981421_i128);
_8 = _6 as f32;
_6 = 778403251_i32;
RET = [_10,_10,_10,_1,_1];
_17 = _13;
_17 = _13 | _13;
RET = [_1,_10,_1,_1,_1];
_16 = [_1,_10,_10];
_13 = _17;
_18 = _6 as f64;
_2 = !48_u8;
_8 = _3 as f32;
_2 = 0_usize as u8;
_16 = [_1,_10,_1];
_18 = _6 as f64;
_5 = !(-116099688609598503777735252837375214671_i128);
Goto(bb4)
}
bb4 = {
RET = [_1,_1,_10,_10,_1];
_3 = !113436910504871744196465571922699177354_u128;
_18 = _3 as f64;
_3 = !72346491696468305614802477341719087998_u128;
_12 = [17247_i16,(-19939_i16),(-5776_i16),(-4236_i16)];
_8 = (-31973_i16) as f32;
_5 = 1013877874818788627_usize as i128;
_7 = 4399115109220286968_i64 + (-3980300174692585613_i64);
_7 = _8 as i64;
_1 = _13 as u64;
Goto(bb5)
}
bb5 = {
_9 = (-19_isize) | 85_isize;
_21 = [_4,_4];
_5 = (-158678076510812390785089276724837642115_i128) * (-114549372374734366240042802461612874072_i128);
_21 = [_4,_4];
_17 = _13;
_19 = &_2;
_16 = [_1,_1,_1];
_16 = [_10,_10,_1];
_12 = [(-16442_i16),27122_i16,(-17055_i16),2441_i16];
_5 = 3835523272997957989842752016503117084_i128;
RET = [_10,_1,_1,_1,_10];
_22.2.2 = (-4681_i16);
_22.1 = [_13,_17,_17,_13,_17];
_2 = '\u{785a5}' as u8;
_22.2.1 = Adt20::Variant1 { fld0: _1,fld1: _3,fld2: _2,fld3: _8,fld4: 894016448_u32,fld5: _6,fld6: _7 };
_22.1 = [_17,_13,_13,_13,_17];
_4 = Field::<f32>(Variant(_22.2.1, 1), 3) as i8;
_19 = &_2;
Goto(bb6)
}
bb6 = {
_16 = [_1,Field::<u64>(Variant(_22.2.1, 1), 0),_10];
_5 = (-86808810091676472069759613078591148280_i128);
_29 = &_1;
_22.0 = Move(_19);
_17 = !_13;
RET = [_1,_1,Field::<u64>(Variant(_22.2.1, 1), 0),(*_29),(*_29)];
_17 = !_13;
_26 = [_4];
_27 = (_22.2.2, _9, _22.2.2);
_15 = [24503_u16,43817_u16,13982_u16,20302_u16];
_22.1 = [_13,_13,_13,_13,_17];
_32 = [_2,Field::<u8>(Variant(_22.2.1, 1), 2),_2,Field::<u8>(Variant(_22.2.1, 1), 2),_2,_2];
place!(Field::<u32>(Variant(_22.2.1, 1), 4)) = 4134695534_u32 + 2790684373_u32;
_17 = !_13;
place!(Field::<u128>(Variant(_22.2.1, 1), 1)) = _10 as u128;
_21 = _14;
_19 = &place!(Field::<u8>(Variant(_22.2.1, 1), 2));
_32 = [(*_19),_2,Field::<u8>(Variant(_22.2.1, 1), 2),(*_19),(*_19),(*_19)];
match _27.0 {
0 => bb2,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607431768206775 => bb13,
_ => bb12
}
}
bb7 = {
_9 = (-19_isize) | 85_isize;
_21 = [_4,_4];
_5 = (-158678076510812390785089276724837642115_i128) * (-114549372374734366240042802461612874072_i128);
_21 = [_4,_4];
_17 = _13;
_19 = &_2;
_16 = [_1,_1,_1];
_16 = [_10,_10,_1];
_12 = [(-16442_i16),27122_i16,(-17055_i16),2441_i16];
_5 = 3835523272997957989842752016503117084_i128;
RET = [_10,_1,_1,_1,_10];
_22.2.2 = (-4681_i16);
_22.1 = [_13,_17,_17,_13,_17];
_2 = '\u{785a5}' as u8;
_22.2.1 = Adt20::Variant1 { fld0: _1,fld1: _3,fld2: _2,fld3: _8,fld4: 894016448_u32,fld5: _6,fld6: _7 };
_22.1 = [_17,_13,_13,_13,_17];
_4 = Field::<f32>(Variant(_22.2.1, 1), 3) as i8;
_19 = &_2;
Goto(bb6)
}
bb8 = {
RET = [_1,_1,_10,_10,_1];
_3 = !113436910504871744196465571922699177354_u128;
_18 = _3 as f64;
_3 = !72346491696468305614802477341719087998_u128;
_12 = [17247_i16,(-19939_i16),(-5776_i16),(-4236_i16)];
_8 = (-31973_i16) as f32;
_5 = 1013877874818788627_usize as i128;
_7 = 4399115109220286968_i64 + (-3980300174692585613_i64);
_7 = _8 as i64;
_1 = _13 as u64;
Goto(bb5)
}
bb9 = {
_17 = _13;
_17 = _8 <= _8;
RET = [_1,_10,_1,_1,_1];
_12 = [(-29729_i16),6606_i16,(-24289_i16),15770_i16];
_8 = 3486207215_u32 as f32;
_15 = [53051_u16,17878_u16,55212_u16,31447_u16];
_12 = [(-14832_i16),28717_i16,(-12223_i16),4142_i16];
_4 = -(-43_i8);
_6 = _17 as i32;
RET = [_10,_1,_10,_1,_10];
_15 = [50079_u16,47540_u16,49241_u16,832_u16];
_15 = [37647_u16,48823_u16,54955_u16,65306_u16];
_5 = (-148018420574339467588710298870653981421_i128);
_8 = _6 as f32;
_6 = 778403251_i32;
RET = [_10,_10,_10,_1,_1];
_17 = _13;
_17 = _13 | _13;
RET = [_1,_10,_1,_1,_1];
_16 = [_1,_10,_10];
_13 = _17;
_18 = _6 as f64;
_2 = !48_u8;
_8 = _3 as f32;
_2 = 0_usize as u8;
_16 = [_1,_10,_1];
_18 = _6 as f64;
_5 = !(-116099688609598503777735252837375214671_i128);
Goto(bb4)
}
bb10 = {
_2 = 106_u8;
_3 = _5 as u128;
_9 = '\u{386f0}' as isize;
RET = [_10,_10,_1,_1,_10];
_10 = !_1;
_10 = _1;
_2 = 134_u8 * 255_u8;
_5 = _8 as i128;
_6 = 344792076_i32;
_2 = !67_u8;
_13 = !true;
_12 = [11833_i16,8082_i16,26242_i16,29166_i16];
_5 = (-115032511047225813871048971630352039933_i128);
_2 = 100_u8 | 101_u8;
_3 = !79855646088379182877493072787089932906_u128;
RET = [_1,_10,_10,_1,_10];
_3 = 242808799279993457124723092522195914588_u128 * 308821955256172301999783184665675725804_u128;
_10 = !_1;
_5 = 13797927204979835569978638999489245432_i128;
RET = [_10,_10,_10,_1,_1];
_2 = 114_u8;
_4 = -47_i8;
Goto(bb3)
}
bb11 = {
_1 = 690477669_u32 as u64;
_3 = 317060386995245154255751275663368309663_u128;
_3 = !33902962800159720183938074940243842121_u128;
_3 = 123966656637991134455283418359224658049_u128 ^ 198522193754759102512292899242481757196_u128;
_6 = 25998_u16 as i32;
_10 = _6 as u64;
_8 = _7 as f32;
RET = [_10,_1,_10,_1,_1];
_7 = _9 as i64;
_5 = 57370318628199888914494952223911907578_i128 << _7;
_7 = -(-5412484556099460059_i64);
_12 = [11674_i16,16014_i16,7053_i16,(-9525_i16)];
_2 = 81_u8;
_10 = 22089_u16 as u64;
_7 = (-1117456302529970041_i64);
_13 = true;
_2 = _5 as u8;
_1 = '\u{34320}' as u64;
_3 = 186957849143994230428677238170362116866_u128;
_4 = 44_i8;
RET = [_1,_1,_1,_10,_10];
_2 = 166_u8;
_14 = [_4,_4];
_4 = (-111_i8) & 107_i8;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_29 = &_10;
_34 = !Field::<u128>(Variant(_22.2.1, 1), 1);
_25.0 = [_9,_9,_27.1];
_28 = Field::<f32>(Variant(_22.2.1, 1), 3) + Field::<f32>(Variant(_22.2.1, 1), 3);
_36 = core::ptr::addr_of_mut!(_34);
_23 = _8 as f64;
RET = [Field::<u64>(Variant(_22.2.1, 1), 0),_10,_1,_10,_1];
_34 = Field::<u128>(Variant(_22.2.1, 1), 1);
place!(Field::<u64>(Variant(_22.2.1, 1), 0)) = Field::<u32>(Variant(_22.2.1, 1), 4) as u64;
_26 = [_4];
_17 = _13 | _13;
_32 = [(*_19),(*_19),(*_19),_2,_2,(*_19)];
place!(Field::<u8>(Variant(_22.2.1, 1), 2)) = Field::<i64>(Variant(_22.2.1, 1), 6) as u8;
_17 = !_13;
_3 = Field::<u128>(Variant(_22.2.1, 1), 1);
_27.1 = !_9;
_20 = Adt27::Variant0 { fld0: _9 };
_25.1 = Field::<u32>(Variant(_22.2.1, 1), 4) as i8;
(*_36) = _13 as u128;
RET = [(*_29),_1,_1,Field::<u64>(Variant(_22.2.1, 1), 0),_1];
_14 = [_25.1,_25.1];
_36 = core::ptr::addr_of_mut!((*_36));
_13 = _17;
(*_36) = !Field::<u128>(Variant(_22.2.1, 1), 1);
_30.0 = [Field::<i32>(Variant(_22.2.1, 1), 5),_6,_6,_6];
_25.0 = [Field::<isize>(Variant(_20, 0), 0),_27.1,_27.1];
_10 = !_1;
Goto(bb14)
}
bb14 = {
_38 = _18 as i8;
_40.3 = !_2;
_41.1 = Adt30::Variant0 { fld0: _17 };
_35 = Adt44::Variant2 { fld0: Field::<u64>(Variant(_22.2.1, 1), 0) };
_41.1 = Adt30::Variant0 { fld0: _17 };
_34 = !Field::<u128>(Variant(_22.2.1, 1), 1);
_22.1 = [_13,Field::<bool>(Variant(_41.1, 0), 0),Field::<bool>(Variant(_41.1, 0), 0),Field::<bool>(Variant(_41.1, 0), 0),_13];
_22.2.2 = _9 as i16;
_40.3 = !Field::<u8>(Variant(_22.2.1, 1), 2);
_40.2.0 = _2 - Field::<u8>(Variant(_22.2.1, 1), 2);
_3 = _34 >> Field::<u32>(Variant(_22.2.1, 1), 4);
place!(Field::<u64>(Variant(_35, 2), 0)) = _1;
_31 = _17 == _17;
_42 = &_18;
match Field::<i32>(Variant(_22.2.1, 1), 5) {
778403251 => bb16,
_ => bb15
}
}
bb15 = {
_9 = (-19_isize) | 85_isize;
_21 = [_4,_4];
_5 = (-158678076510812390785089276724837642115_i128) * (-114549372374734366240042802461612874072_i128);
_21 = [_4,_4];
_17 = _13;
_19 = &_2;
_16 = [_1,_1,_1];
_16 = [_10,_10,_1];
_12 = [(-16442_i16),27122_i16,(-17055_i16),2441_i16];
_5 = 3835523272997957989842752016503117084_i128;
RET = [_10,_1,_1,_1,_10];
_22.2.2 = (-4681_i16);
_22.1 = [_13,_17,_17,_13,_17];
_2 = '\u{785a5}' as u8;
_22.2.1 = Adt20::Variant1 { fld0: _1,fld1: _3,fld2: _2,fld3: _8,fld4: 894016448_u32,fld5: _6,fld6: _7 };
_22.1 = [_17,_13,_13,_13,_17];
_4 = Field::<f32>(Variant(_22.2.1, 1), 3) as i8;
_19 = &_2;
Goto(bb6)
}
bb16 = {
_30.0 = [_6,Field::<i32>(Variant(_22.2.1, 1), 5),_6,Field::<i32>(Variant(_22.2.1, 1), 5)];
_5 = -(-114397864450626802385681295584505730986_i128);
_27.1 = 43876_u16 as isize;
_40.1 = [_31,_31,_17,_31,_17];
_40.2.1 = Adt20::Variant1 { fld0: _10,fld1: (*_36),fld2: _2,fld3: _28,fld4: Field::<u32>(Variant(_22.2.1, 1), 4),fld5: Field::<i32>(Variant(_22.2.1, 1), 5),fld6: Field::<i64>(Variant(_22.2.1, 1), 6) };
_10 = _1 | Field::<u64>(Variant(_35, 2), 0);
_17 = _31;
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = _10;
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = Field::<u32>(Variant(_22.2.1, 1), 4) * Field::<u32>(Variant(_22.2.1, 1), 4);
place!(Field::<u128>(Variant(_40.2.1, 1), 1)) = Field::<u128>(Variant(_22.2.1, 1), 1) ^ (*_36);
_35 = Adt44::Variant0 { fld0: Field::<f32>(Variant(_22.2.1, 1), 3),fld1: 5_usize,fld2: Move(_20),fld3: _18 };
_14 = _21;
_27.1 = !_9;
_39 = &_22.2.2;
_42 = &(*_42);
SetDiscriminant(_40.2.1, 0);
_16 = [_10,Field::<u64>(Variant(_22.2.1, 1), 0),Field::<u64>(Variant(_22.2.1, 1), 0)];
_25.1 = -_4;
_40.1 = [_13,_31,_31,_17,_17];
place!(Field::<i32>(Variant(_22.2.1, 1), 5)) = _6;
match _27.2 {
0 => bb11,
1 => bb2,
2 => bb3,
3 => bb14,
4 => bb17,
5 => bb18,
340282366920938463463374607431768206775 => bb20,
_ => bb19
}
}
bb17 = {
_9 = (-19_isize) | 85_isize;
_21 = [_4,_4];
_5 = (-158678076510812390785089276724837642115_i128) * (-114549372374734366240042802461612874072_i128);
_21 = [_4,_4];
_17 = _13;
_19 = &_2;
_16 = [_1,_1,_1];
_16 = [_10,_10,_1];
_12 = [(-16442_i16),27122_i16,(-17055_i16),2441_i16];
_5 = 3835523272997957989842752016503117084_i128;
RET = [_10,_1,_1,_1,_10];
_22.2.2 = (-4681_i16);
_22.1 = [_13,_17,_17,_13,_17];
_2 = '\u{785a5}' as u8;
_22.2.1 = Adt20::Variant1 { fld0: _1,fld1: _3,fld2: _2,fld3: _8,fld4: 894016448_u32,fld5: _6,fld6: _7 };
_22.1 = [_17,_13,_13,_13,_17];
_4 = Field::<f32>(Variant(_22.2.1, 1), 3) as i8;
_19 = &_2;
Goto(bb6)
}
bb18 = {
_17 = _13;
_17 = _8 <= _8;
RET = [_1,_10,_1,_1,_1];
_12 = [(-29729_i16),6606_i16,(-24289_i16),15770_i16];
_8 = 3486207215_u32 as f32;
_15 = [53051_u16,17878_u16,55212_u16,31447_u16];
_12 = [(-14832_i16),28717_i16,(-12223_i16),4142_i16];
_4 = -(-43_i8);
_6 = _17 as i32;
RET = [_10,_1,_10,_1,_10];
_15 = [50079_u16,47540_u16,49241_u16,832_u16];
_15 = [37647_u16,48823_u16,54955_u16,65306_u16];
_5 = (-148018420574339467588710298870653981421_i128);
_8 = _6 as f32;
_6 = 778403251_i32;
RET = [_10,_10,_10,_1,_1];
_17 = _13;
_17 = _13 | _13;
RET = [_1,_10,_1,_1,_1];
_16 = [_1,_10,_10];
_13 = _17;
_18 = _6 as f64;
_2 = !48_u8;
_8 = _3 as f32;
_2 = 0_usize as u8;
_16 = [_1,_10,_1];
_18 = _6 as f64;
_5 = !(-116099688609598503777735252837375214671_i128);
Goto(bb4)
}
bb19 = {
_1 = 690477669_u32 as u64;
_3 = 317060386995245154255751275663368309663_u128;
_3 = !33902962800159720183938074940243842121_u128;
_3 = 123966656637991134455283418359224658049_u128 ^ 198522193754759102512292899242481757196_u128;
_6 = 25998_u16 as i32;
_10 = _6 as u64;
_8 = _7 as f32;
RET = [_10,_1,_10,_1,_1];
_7 = _9 as i64;
_5 = 57370318628199888914494952223911907578_i128 << _7;
_7 = -(-5412484556099460059_i64);
_12 = [11674_i16,16014_i16,7053_i16,(-9525_i16)];
_2 = 81_u8;
_10 = 22089_u16 as u64;
_7 = (-1117456302529970041_i64);
_13 = true;
_2 = _5 as u8;
_1 = '\u{34320}' as u64;
_3 = 186957849143994230428677238170362116866_u128;
_4 = 44_i8;
RET = [_1,_1,_1,_10,_10];
_2 = 166_u8;
_14 = [_4,_4];
_4 = (-111_i8) & 107_i8;
Goto(bb2)
}
bb20 = {
_40.2.1 = Move(_22.2.1);
_39 = &_27.2;
_29 = &_10;
SetDiscriminant(_40.2.1, 1);
place!(Field::<i32>(Variant(_40.2.1, 1), 5)) = _38 as i32;
_22.3 = _28 as u8;
place!(Field::<usize>(Variant(_35, 0), 1)) = 14091587756093340648_usize;
place!(Field::<f32>(Variant(_40.2.1, 1), 3)) = Field::<f32>(Variant(_35, 0), 0) * Field::<f32>(Variant(_35, 0), 0);
place!(Field::<bool>(Variant(_41.1, 0), 0)) = _2 == _22.3;
SetDiscriminant(_35, 2);
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = 3812122251_u32;
_40.3 = _2;
_22.3 = !_40.3;
Goto(bb21)
}
bb21 = {
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = (*_39) as u64;
_40.0 = &_22.3;
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = _22.2.2 as u32;
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = _5 as u64;
_20 = Adt27::Variant0 { fld0: _27.1 };
_39 = &_27.0;
_22.1 = [_31,_13,_17,_13,_13];
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = _38 as u64;
_32 = [_2,_40.2.0,_2,_22.3,_40.2.0,_2];
SetDiscriminant(_20, 1);
(*_36) = _3;
_22.1 = [_13,_31,Field::<bool>(Variant(_41.1, 0), 0),_31,_31];
SetDiscriminant(_41.1, 0);
place!(Field::<usize>(Variant(_20, 1), 3)) = !2_usize;
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).0 = !_40.2.0;
_17 = _10 == (*_29);
_27.1 = !_9;
place!(Field::<f64>(Variant(_20, 1), 1)) = (*_42) * _23;
match _27.0 {
0 => bb5,
1 => bb22,
340282366920938463463374607431768206775 => bb24,
_ => bb23
}
}
bb22 = {
_16 = [_1,Field::<u64>(Variant(_22.2.1, 1), 0),_10];
_5 = (-86808810091676472069759613078591148280_i128);
_29 = &_1;
_22.0 = Move(_19);
_17 = !_13;
RET = [_1,_1,Field::<u64>(Variant(_22.2.1, 1), 0),(*_29),(*_29)];
_17 = !_13;
_26 = [_4];
_27 = (_22.2.2, _9, _22.2.2);
_15 = [24503_u16,43817_u16,13982_u16,20302_u16];
_22.1 = [_13,_13,_13,_13,_17];
_32 = [_2,Field::<u8>(Variant(_22.2.1, 1), 2),_2,Field::<u8>(Variant(_22.2.1, 1), 2),_2,_2];
place!(Field::<u32>(Variant(_22.2.1, 1), 4)) = 4134695534_u32 + 2790684373_u32;
_17 = !_13;
place!(Field::<u128>(Variant(_22.2.1, 1), 1)) = _10 as u128;
_21 = _14;
_19 = &place!(Field::<u8>(Variant(_22.2.1, 1), 2));
_32 = [(*_19),_2,Field::<u8>(Variant(_22.2.1, 1), 2),(*_19),(*_19),(*_19)];
match _27.0 {
0 => bb2,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
340282366920938463463374607431768206775 => bb13,
_ => bb12
}
}
bb23 = {
_9 = (-19_isize) | 85_isize;
_21 = [_4,_4];
_5 = (-158678076510812390785089276724837642115_i128) * (-114549372374734366240042802461612874072_i128);
_21 = [_4,_4];
_17 = _13;
_19 = &_2;
_16 = [_1,_1,_1];
_16 = [_10,_10,_1];
_12 = [(-16442_i16),27122_i16,(-17055_i16),2441_i16];
_5 = 3835523272997957989842752016503117084_i128;
RET = [_10,_1,_1,_1,_10];
_22.2.2 = (-4681_i16);
_22.1 = [_13,_17,_17,_13,_17];
_2 = '\u{785a5}' as u8;
_22.2.1 = Adt20::Variant1 { fld0: _1,fld1: _3,fld2: _2,fld3: _8,fld4: 894016448_u32,fld5: _6,fld6: _7 };
_22.1 = [_17,_13,_13,_13,_17];
_4 = Field::<f32>(Variant(_22.2.1, 1), 3) as i8;
_19 = &_2;
Goto(bb6)
}
bb24 = {
_16 = [(*_29),(*_29),Field::<u64>(Variant(_40.2.1, 1), 0)];
_40.2.2 = Field::<f64>(Variant(_20, 1), 1) as i16;
_22.3 = !_2;
_41.1 = Adt30::Variant0 { fld0: _31 };
(*_36) = _8 as u128;
_33 = _30;
_25.0 = [_27.1,_9,_9];
place!(Field::<f32>(Variant(_40.2.1, 1), 3)) = _28;
_22.2.0 = 28044_u16 as u8;
Call(place!(Field::<i32>(Variant(_40.2.1, 1), 5)) = core::intrinsics::bswap(_6), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_37 = [_5,_5,_5,_5,_5,_5,_5];
_5 = (-13747273615951296495140824058996948843_i128) + 3686379938707812875378547854565119923_i128;
_36 = core::ptr::addr_of_mut!(_34);
_39 = &_27.0;
_44 = &_3;
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = -_7;
place!(Field::<u64>(Variant(_20, 1), 0)) = _1;
SetDiscriminant(_41.1, 1);
match (*_39) {
0 => bb22,
1 => bb14,
2 => bb6,
3 => bb21,
4 => bb26,
340282366920938463463374607431768206775 => bb28,
_ => bb27
}
}
bb26 = {
Return()
}
bb27 = {
_1 = 690477669_u32 as u64;
_3 = 317060386995245154255751275663368309663_u128;
_3 = !33902962800159720183938074940243842121_u128;
_3 = 123966656637991134455283418359224658049_u128 ^ 198522193754759102512292899242481757196_u128;
_6 = 25998_u16 as i32;
_10 = _6 as u64;
_8 = _7 as f32;
RET = [_10,_1,_10,_1,_1];
_7 = _9 as i64;
_5 = 57370318628199888914494952223911907578_i128 << _7;
_7 = -(-5412484556099460059_i64);
_12 = [11674_i16,16014_i16,7053_i16,(-9525_i16)];
_2 = 81_u8;
_10 = 22089_u16 as u64;
_7 = (-1117456302529970041_i64);
_13 = true;
_2 = _5 as u8;
_1 = '\u{34320}' as u64;
_3 = 186957849143994230428677238170362116866_u128;
_4 = 44_i8;
RET = [_1,_1,_1,_10,_10];
_2 = 166_u8;
_14 = [_4,_4];
_4 = (-111_i8) & 107_i8;
Goto(bb2)
}
bb28 = {
_22.0 = &_40.2.0;
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).2 = _25.1 as i16;
place!(Field::<i32>(Variant(_41.1, 1), 0)) = !_6;
_45 = '\u{54e0c}';
_22.3 = !Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0;
_40.2.2 = _27.2 - (*_39);
_14 = [_4,_25.1];
_40.1 = [_13,_17,_17,_31,_17];
_28 = _8;
_30 = (_33.0,);
_34 = !_3;
place!(Field::<*const u8>(Variant(_41.1, 1), 2)) = core::ptr::addr_of!(_22.2.0);
_32 = [_40.2.0,_22.2.0,_22.2.0,_2,Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0,_2];
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = _5 as u64;
_49 = _40.1;
place!(Field::<u64>(Variant(_20, 1), 0)) = (*_29);
_28 = _18 as f32;
Goto(bb29)
}
bb29 = {
_51 = !50577_u16;
_2 = _7 as u8;
_28 = Field::<f32>(Variant(_40.2.1, 1), 3) + Field::<f32>(Variant(_40.2.1, 1), 3);
_22.2.2 = !_40.2.2;
place!(Field::<f32>(Variant(_40.2.1, 1), 3)) = _28;
_27 = (Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2, _9, _40.2.2);
match _6 {
0 => bb6,
1 => bb13,
2 => bb26,
778403251 => bb30,
_ => bb8
}
}
bb30 = {
_22.2.0 = _5 as u8;
_13 = !_31;
_1 = (*_29);
_31 = Field::<f32>(Variant(_40.2.1, 1), 3) >= _8;
_23 = Field::<u32>(Variant(_40.2.1, 1), 4) as f64;
_6 = (*_36) as i32;
RET = [Field::<u64>(Variant(_20, 1), 0),(*_29),(*_29),Field::<u64>(Variant(_20, 1), 0),Field::<u64>(Variant(_20, 1), 0)];
(*_36) = _10 as u128;
place!(Field::<u8>(Variant(_20, 1), 4)) = _28 as u8;
_42 = &place!(Field::<f64>(Variant(_20, 1), 1));
_38 = Field::<i64>(Variant(_40.2.1, 1), 6) as i8;
_41.0 = _7;
place!(Field::<u16>(Variant(_41.1, 1), 1)) = _1 as u16;
_56 = !(*_29);
place!(Field::<u64>(Variant(_35, 2), 0)) = !_56;
_24 = Move(_35);
_14 = [_4,_4];
_41.1 = Adt30::Variant2 { fld0: _56,fld1: _27,fld2: _51,fld3: _5 };
SetDiscriminant(_41.1, 1);
_44 = &(*_44);
_40.2.2 = _22.2.2 - _27.2;
_15 = [_51,_51,_51,_51];
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).0 = (*_42) as u8;
place!(Field::<u8>(Variant(_40.2.1, 1), 2)) = _18 as u8;
place!(Field::<i32>(Variant(_41.1, 1), 0)) = _6 & _6;
_31 = !_17;
_55 = [_4,_38];
SetDiscriminant(_24, 1);
_4 = _38;
RET = [(*_29),_56,_10,Field::<u64>(Variant(_20, 1), 0),_56];
_42 = &(*_42);
Goto(bb31)
}
bb31 = {
_16 = [(*_29),_1,(*_29)];
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = _7 | _7;
_25.1 = _4;
_57 = _23 as f32;
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = _41.0 * _7;
_49 = _22.1;
_45 = '\u{230fd}';
_52 = Move(_36);
place!(Field::<Adt30>(Variant(_24, 1), 4)) = Adt30::Variant0 { fld0: _17 };
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = _41.0;
_38 = _27.1 as i8;
_25.0 = [_9,_27.1,_9];
_40.2.0 = !Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0;
_34 = _40.2.2 as u128;
_62 = !Field::<usize>(Variant(_20, 1), 3);
_58 = (*_29) + Field::<u64>(Variant(_20, 1), 0);
_14 = [_25.1,_4];
_41 = (_7, Move(Field::<Adt30>(Variant(_24, 1), 4)));
Goto(bb32)
}
bb32 = {
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = Field::<i32>(Variant(_40.2.1, 1), 5) as i64;
_12 = [_22.2.2,_27.0,_40.2.2,_40.2.2];
_57 = Field::<f32>(Variant(_40.2.1, 1), 3);
_18 = Field::<f64>(Variant(_20, 1), 1) + Field::<f64>(Variant(_20, 1), 1);
_60 = _22.2.0 * _40.2.0;
_40.2.0 = _38 as u8;
_22.2.2 = -_27.0;
_29 = &_1;
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = 1160704453_u32;
_28 = -_57;
match Field::<u32>(Variant(_40.2.1, 1), 4) {
0 => bb7,
1 => bb18,
2 => bb29,
3 => bb4,
4 => bb22,
1160704453 => bb33,
_ => bb11
}
}
bb33 = {
_65 = (_30.0,);
place!(Field::<[bool; 5]>(Variant(_24, 1), 1)) = [_31,_13,_31,_31,Field::<bool>(Variant(_41.1, 0), 0)];
_4 = _38;
place!(Field::<[bool; 5]>(Variant(_24, 1), 1)) = [_17,_17,_31,Field::<bool>(Variant(_41.1, 0), 0),_17];
_41.0 = -_7;
_63 = &place!(Field::<f64>(Variant(_20, 1), 1));
_40.2.0 = !Field::<u8>(Variant(_20, 1), 4);
_8 = _38 as f32;
place!(Field::<u64>(Variant(_20, 1), 0)) = !_58;
_40.3 = _62 as u8;
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = 3343780863_u32 ^ 4287758632_u32;
place!(Field::<[bool; 5]>(Variant(_24, 1), 1)) = [Field::<bool>(Variant(_41.1, 0), 0),Field::<bool>(Variant(_41.1, 0), 0),Field::<bool>(Variant(_41.1, 0), 0),_31,_17];
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).0 = _34 as u8;
_34 = (*_44);
place!(Field::<usize>(Variant(_24, 1), 2)) = _6 as usize;
_15 = [_51,_51,_51,_51];
_37 = [_5,_5,_5,_5,_5,_5,_5];
_40.2.2 = Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2;
_46 = !Field::<bool>(Variant(_41.1, 0), 0);
place!(Field::<usize>(Variant(_24, 1), 2)) = Field::<usize>(Variant(_20, 1), 3);
_63 = &_23;
Goto(bb34)
}
bb34 = {
place!(Field::<usize>(Variant(_20, 1), 3)) = Field::<usize>(Variant(_24, 1), 2);
_41.1 = Adt30::Variant0 { fld0: _17 };
_53 = -_28;
_24 = Adt44::Variant2 { fld0: Field::<u64>(Variant(_20, 1), 0) };
Goto(bb35)
}
bb35 = {
_22.2.1 = Adt20::Variant1 { fld0: _58,fld1: _3,fld2: _22.2.0,fld3: _53,fld4: Field::<u32>(Variant(_40.2.1, 1), 4),fld5: _6,fld6: Field::<i64>(Variant(_40.2.1, 1), 6) };
_22.2.0 = !Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0;
_34 = Field::<u128>(Variant(_22.2.1, 1), 1) >> _40.2.0;
place!(Field::<u8>(Variant(_22.2.1, 1), 2)) = (*_63) as u8;
_34 = !(*_44);
place!(Field::<u128>(Variant(_22.2.1, 1), 1)) = _53 as u128;
_16 = [Field::<u64>(Variant(_20, 1), 0),Field::<u64>(Variant(_22.2.1, 1), 0),Field::<u64>(Variant(_24, 2), 0)];
_44 = &place!(Field::<u128>(Variant(_22.2.1, 1), 1));
place!(Field::<u64>(Variant(_40.2.1, 1), 0)) = Field::<u64>(Variant(_22.2.1, 1), 0) & _56;
_57 = _62 as f32;
_25.1 = _38 << Field::<u32>(Variant(_40.2.1, 1), 4);
_5 = _41.0 as i128;
_22.2.0 = _41.0 as u8;
_65 = _30;
_40.2 = (_60, Move(_22.2.1), Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2);
_30.0 = _65.0;
_22.2.1 = Move(_40.2.1);
_25.0 = [_27.1,_27.1,_27.1];
_65 = (_30.0,);
Goto(bb36)
}
bb36 = {
_31 = _2 > Field::<u8>(Variant(_20, 1), 4);
_69 = !_9;
_57 = -_53;
Goto(bb37)
}
bb37 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).1 = Move(_22.2.1);
_13 = _46;
_53 = Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1, 1), 3) + Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1, 1), 3);
_69 = _5 as isize;
_9 = !_27.1;
_40.2 = (Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0, Move(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1), _27.0);
_72 = Move(_29);
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)) = (Field::<u8>(Variant(_20, 1), 4), Move(_40.2.1), _27.0);
_5 = -(-147541599828064560643184478466647390390_i128);
_40.2.1 = Move(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1);
RET = [_56,_58,_58,_10,Field::<u64>(Variant(_24, 2), 0)];
_72 = &_1;
_40.2.2 = _27.2;
_40.1 = [_46,Field::<bool>(Variant(_41.1, 0), 0),_17,_17,Field::<bool>(Variant(_41.1, 0), 0)];
_74 = _17 | Field::<bool>(Variant(_41.1, 0), 0);
_19 = Move(_22.0);
_73.0.0 = [Field::<i32>(Variant(_40.2.1, 1), 5),Field::<i32>(Variant(_40.2.1, 1), 5),Field::<i32>(Variant(_40.2.1, 1), 5),_6];
_31 = !_13;
Goto(bb38)
}
bb38 = {
_27.2 = _40.2.2;
_30.0 = [_6,Field::<i32>(Variant(_40.2.1, 1), 5),_6,_6];
_78 = _69 | _69;
_57 = _28 + Field::<f32>(Variant(_40.2.1, 1), 3);
_8 = _27.1 as f32;
_40.2.0 = !Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0;
_22.2.0 = !_22.3;
place!(Field::<f64>(Variant(_20, 1), 1)) = _28 as f64;
_79 = !_62;
_23 = Field::<f64>(Variant(_20, 1), 1);
_20 = Adt27::Variant1 { fld0: _10,fld1: _18,fld2: Move(_40.2),fld3: _79,fld4: _60 };
place!(Field::<bool>(Variant(_41.1, 0), 0)) = _40.3 >= Field::<u8>(Variant(_20, 1), 4);
_69 = _78 | _27.1;
_35 = Adt44::Variant0 { fld0: _57,fld1: _79,fld2: Move(_20),fld3: _18 };
_9 = _46 as isize;
_72 = &place!(Field::<u64>(Variant(_24, 2), 0));
place!(Field::<u8>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 4)) = _60;
_64 = _9 - _9;
Goto(bb39)
}
bb39 = {
_79 = _62 ^ Field::<usize>(Variant(_35, 0), 1);
_37 = [_5,_5,_5,_5,_5,_5,_5];
place!(Field::<u128>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)).1, 1), 1)) = _3;
_70 = _45 as isize;
place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)).2 = -_27.0;
_57 = _51 as f32;
_40.2.1 = Move(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1);
place!(Field::<u8>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 4)) = Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).0 ^ _60;
_49 = [_46,_74,_46,_74,_17];
_40.2.0 = !Field::<u8>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 4);
_70 = _64 & _64;
_40.2.2 = Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).2 + _22.2.2;
_4 = _38;
_45 = '\u{8c96f}';
_45 = '\u{70593}';
_72 = &place!(Field::<u64>(Variant(_24, 2), 0));
_49 = _40.1;
_76 = Field::<u128>(Variant(_40.2.1, 1), 1) + Field::<u128>(Variant(_40.2.1, 1), 1);
_78 = _51 as isize;
_83 = [_5,_5,_5,_5,_5,_5,_5];
Goto(bb40)
}
bb40 = {
_56 = !(*_72);
_20 = Adt27::Variant0 { fld0: _70 };
_1 = _58;
_22.2.1 = Move(_40.2.1);
_77 = -_23;
_28 = -_53;
place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)) = (Field::<u8>(Variant(_22.2.1, 1), 2), Move(_22.2.1), _40.2.2);
_22.2.0 = _18 as u8;
place!(Field::<u64>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 0)) = !_10;
_36 = Move(_52);
_6 = Field::<i32>(Variant(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1, 1), 5);
_40.2 = Move(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2));
SetDiscriminant(_20, 1);
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).0 = Field::<u8>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 4) | _40.2.0;
_63 = &place!(Field::<f64>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 1));
_31 = _74;
place!(Field::<Adt27>(Variant(_35, 0), 2)) = Adt27::Variant0 { fld0: _9 };
_12 = [_27.2,_40.2.2,_27.0,_27.0];
_15 = [_51,_51,_51,_51];
_22.2.0 = Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0 >> Field::<u64>(Variant(_24, 2), 0);
_22.1 = [_31,_46,_31,_46,_74];
_41.0 = !_7;
_51 = !42589_u16;
Goto(bb41)
}
bb41 = {
_88 = Field::<u32>(Variant(_40.2.1, 1), 4) as isize;
_10 = Field::<u64>(Variant(_40.2.1, 1), 0) * (*_72);
_64 = _6 as isize;
_10 = _56 * _58;
_14 = _55;
_65 = (_73.0.0,);
_70 = -_9;
place!(Field::<u8>(Variant(_20, 1), 4)) = _22.2.0;
_61 = core::ptr::addr_of_mut!(_16);
_52 = Move(_36);
place!(Field::<u8>(Variant(_40.2.1, 1), 2)) = !Field::<u8>(Variant(_20, 1), 4);
place!(Field::<f64>(Variant(_20, 1), 1)) = _23 - _23;
_87 = _41.0 << _22.2.0;
SetDiscriminant(_40.2.1, 1);
_69 = _5 as isize;
SetDiscriminant(Field::<Adt27>(Variant(_35, 0), 2), 0);
_25.0 = [_64,_69,_69];
_80 = [_22.2.2,_22.2.2,_27.2,_40.2.2,_40.2.2,_27.2,_27.0];
_81 = _87;
_30.0 = _65.0;
Goto(bb42)
}
bb42 = {
_51 = !7673_u16;
place!(Field::<u8>(Variant(_20, 1), 4)) = _51 as u8;
_63 = &place!(Field::<f64>(Variant(_35, 0), 3));
place!(Field::<i64>(Variant(_40.2.1, 1), 6)) = _87 | _87;
place!(Field::<f64>(Variant(_20, 1), 1)) = _25.1 as f64;
place!(Field::<u32>(Variant(_40.2.1, 1), 4)) = _45 as u32;
_4 = !_25.1;
_31 = _74;
_90 = _70;
_73 = (_30,);
SetDiscriminant(_24, 3);
_94 = [_27.2,_27.2,_27.2,_40.2.2,_40.2.2,_40.2.2,_40.2.2];
_15 = [_51,_51,_51,_51];
_65 = (_33.0,);
SetDiscriminant(_41.1, 2);
_27 = (_40.2.2, _9, _40.2.2);
_71 = Adt73::Variant1 { fld0: _74,fld1: _51,fld2: _27,fld3: Field::<u32>(Variant(_40.2.1, 1), 4),fld4: _25.0,fld5: _23,fld6: _76 };
place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).1 = Adt20::Variant1 { fld0: _10,fld1: _76,fld2: Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).0,fld3: _28,fld4: Field::<u32>(Variant(_71, 1), 3),fld5: _6,fld6: Field::<i64>(Variant(_40.2.1, 1), 6) };
_71 = Adt73::Variant1 { fld0: _74,fld1: _51,fld2: _27,fld3: Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).1, 1), 4),fld4: _25.0,fld5: (*_63),fld6: _3 };
place!(Field::<i128>(Variant(_41.1, 2), 3)) = _5 & _5;
_15 = [_51,Field::<u16>(Variant(_71, 1), 1),_51,_51];
_26 = [_25.1];
_73.0 = (_30.0,);
_81 = Field::<i64>(Variant(_40.2.1, 1), 6);
_79 = !Field::<usize>(Variant(_35, 0), 1);
place!(Field::<f64>(Variant(_71, 1), 5)) = (*_63);
Goto(bb43)
}
bb43 = {
_40.2.1 = Adt20::Variant1 { fld0: _10,fld1: _34,fld2: _22.2.0,fld3: _28,fld4: Field::<u32>(Variant(_71, 1), 3),fld5: _6,fld6: _41.0 };
_61 = core::ptr::addr_of_mut!(_16);
Goto(bb44)
}
bb44 = {
_95 = _27.2 - Field::<(i16, isize, i16)>(Variant(_71, 1), 2).2;
SetDiscriminant(_40.2.1, 1);
Goto(bb45)
}
bb45 = {
_36 = Move(_52);
Goto(bb46)
}
bb46 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).1 = Move(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).1);
_5 = Field::<usize>(Variant(_35, 0), 1) as i128;
Goto(bb47)
}
bb47 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).2 = Field::<(i16, isize, i16)>(Variant(_71, 1), 2).2 << _25.1;
(*_61) = [_56,_10,Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1, 1), 0)];
_49 = [_31,_31,_17,_17,_17];
_70 = _22.2.0 as isize;
(*_61) = [_56,_10,Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1, 1), 0)];
_55 = _21;
Goto(bb48)
}
bb48 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).2 = Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2 & _95;
_54 = _40.2.2 as isize;
_58 = !_10;
_63 = &(*_63);
_8 = -Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1, 1), 3);
_28 = _6 as f32;
_94 = [_40.2.2,Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2,_95,Field::<(i16, isize, i16)>(Variant(_71, 1), 2).2,Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2,Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2,Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2];
_5 = Field::<i128>(Variant(_41.1, 2), 3);
place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).1 = Move(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1);
Goto(bb49)
}
bb49 = {
_87 = _81;
_49 = _40.1;
_76 = Field::<i128>(Variant(_41.1, 2), 3) as u128;
_1 = _58;
place!(Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1)).2 = Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2;
place!(Field::<u128>(Variant(_71, 1), 6)) = _76 >> _81;
_40.2.1 = Move(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).1);
_92 = core::ptr::addr_of!(place!(Field::<Adt27>(Variant(_35, 0), 2)));
_21 = [_25.1,_25.1];
place!(Field::<f32>(Variant(_24, 3), 0)) = _8;
place!(Field::<f32>(Variant(_35, 0), 0)) = _8;
_73 = (_30,);
place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).0 = _22.2.0 + _22.2.0;
_55 = _21;
place!(Field::<f32>(Variant(_40.2.1, 1), 3)) = _8 - _53;
Goto(bb50)
}
bb50 = {
_16 = [_58,_1,_10];
_84 = &_40;
Goto(bb51)
}
bb51 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).2 = _25.1 as i16;
SetDiscriminant(_71, 2);
_94 = [Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1).2,Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2,Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2,_95,Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1).2,Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2,Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2];
_25.0 = [_27.1,_70,_54];
(*_92) = Adt27::Variant1 { fld0: _58,fld1: Field::<f64>(Variant(_20, 1), 1),fld2: Move(_40.2),fld3: _79,fld4: Field::<u8>(Variant((*_84).2.1, 1), 2) };
_41.0 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1, 1), 4) as i64;
_57 = Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1, 1), 3) * Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1, 1), 3);
Goto(bb52)
}
bb52 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)) = Move(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2));
place!(Field::<usize>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 3)) = !_62;
_58 = Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).2 as u64;
_74 = _17;
place!(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1)).0 = _1 as u8;
place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)).1 = Move(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).1);
_17 = _31;
place!(Field::<u16>(Variant(_41.1, 2), 2)) = !_51;
_67 = _5 as f64;
place!(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1)) = (Field::<u8>(Variant((*_92), 1), 4), Move(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1), _95);
place!(Field::<(u16, (i16, isize, i16))>(Variant(_71, 2), 3)).1.2 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1).1, 1), 4) as i16;
_79 = !Field::<usize>(Variant(_35, 0), 1);
place!(Field::<i128>(Variant(_41.1, 2), 3)) = _5 >> Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1).1, 1), 2);
Goto(bb53)
}
bb53 = {
place!(Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1)).1 = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1).1, 1), 1) as isize;
place!(Field::<Adt27>(Variant(_35, 0), 2)) = Adt27::Variant1 { fld0: _58,fld1: _18,fld2: Move(Field::<(u8, Adt20, i16)>(Variant(_71, 2), 1)),fld3: Field::<usize>(Variant(_35, 0), 1),fld4: Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).0 };
place!(Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1)) = _27;
_96 = _1 as isize;
place!(Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2)).2 = Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1, 1), 3) as i16;
place!(Field::<usize>(Variant(_20, 1), 3)) = !_62;
_40.0 = &place!(Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3)).0;
place!(Field::<u128>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)).1, 1), 1)) = _45 as u128;
place!(Field::<u8>(Variant(_20, 1), 4)) = !Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).0;
_107 = (Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).0, Move(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1), Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).2);
_96 = -_64;
place!(Field::<(u16, (i16, isize, i16))>(Variant(_71, 2), 3)).1 = (Field::<(u8, Adt20, i16)>(Variant(_20, 1), 2).2, _90, _95);
_71 = Adt73::Variant0 { fld0: _34,fld1: Field::<f64>(Variant(_20, 1), 1),fld2: _12,fld3: _15 };
_53 = _57 * _8;
_76 = Field::<u128>(Variant(_107.1, 1), 1) & Field::<u128>(Variant(_71, 0), 0);
place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)) = (Field::<(u8, Adt20, i16)>(Variant(_24, 3), 3).0, Move(_107.1), Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1).0);
_98 = _45;
SetDiscriminant(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1, 0);
place!(Field::<(u8, Adt20, i16)>(Variant(place!(Field::<Adt27>(Variant(_35, 0), 2)), 1), 2)).1 = Adt20::Variant1 { fld0: _1,fld1: Field::<u128>(Variant(_71, 0), 0),fld2: Field::<u8>(Variant(_20, 1), 4),fld3: Field::<f32>(Variant(_24, 3), 0),fld4: 3722826819_u32,fld5: _6,fld6: _87 };
_106.2 = Field::<(i16, isize, i16)>(Variant(_41.1, 2), 1).0;
RET = [Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1, 1), 0),Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(Field::<Adt27>(Variant(_35, 0), 2), 1), 2).1, 1), 0),_1,Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_92), 1), 2).1, 1), 0),_10];
place!(Field::<f64>(Variant(_71, 0), 1)) = _76 as f64;
_26 = [_38];
Goto(bb54)
}
bb54 = {
Call(_110 = dump_var(0_usize, 15_usize, Move(_15), 13_usize, Move(_13), 79_usize, Move(_79), 17_usize, Move(_17)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_110 = dump_var(0_usize, 3_usize, Move(_3), 65_usize, Move(_65), 88_usize, Move(_88), 10_usize, Move(_10)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_110 = dump_var(0_usize, 54_usize, Move(_54), 31_usize, Move(_31), 98_usize, Move(_98), 87_usize, Move(_87)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_110 = dump_var(0_usize, 60_usize, Move(_60), 81_usize, Move(_81), 62_usize, Move(_62), 49_usize, Move(_49)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_110 = dump_var(0_usize, 9_usize, Move(_9), 94_usize, Move(_94), 12_usize, Move(_12), 45_usize, Move(_45)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_110 = dump_var(0_usize, 96_usize, Move(_96), 64_usize, Move(_64), 76_usize, Move(_76), 56_usize, Move(_56)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_110 = dump_var(0_usize, 25_usize, Move(_25), 26_usize, Move(_26), 95_usize, Move(_95), 111_usize, _111), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: isize,mut _2: i8,mut _3: isize) -> [u64; 5] {
mir! {
type RET = [u64; 5];
let _4: ([isize; 3], i8);
let _5: f64;
let _6: [i16; 4];
let _7: &'static u64;
let _8: isize;
let _9: i16;
let _10: isize;
let _11: (*const u8, i16);
let _12: [i16; 4];
let _13: i32;
let _14: isize;
let _15: *const Adt27;
let _16: char;
let _17: i64;
let _18: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _19: isize;
let _20: f64;
let _21: u8;
let _22: &'static u64;
let _23: ((u8, Adt20, i16), *mut u128);
let _24: char;
let _25: (i16, isize, i16);
let _26: f32;
let _27: (i64, Adt30);
let _28: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _29: char;
let _30: &'static (i16, isize, i16);
let _31: u16;
let _32: *mut u128;
let _33: i64;
let _34: [i16; 4];
let _35: [u64; 3];
let _36: [bool; 5];
let _37: [u64; 5];
let _38: u32;
let _39: [i128; 7];
let _40: [isize; 3];
let _41: i16;
let _42: (u16, (i16, isize, i16));
let _43: [i8; 1];
let _44: u32;
let _45: (f32, [bool; 5], u128, i8);
let _46: u8;
let _47: bool;
let _48: isize;
let _49: char;
let _50: Adt29;
let _51: [i32; 4];
let _52: i128;
let _53: (*const u8, i16);
let _54: *const [u16; 4];
let _55: &'static *const &'static f64;
let _56: [u64; 3];
let _57: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _58: isize;
let _59: char;
let _60: [i8; 3];
let _61: isize;
let _62: &'static (&'static i16, u16, char, i64);
let _63: [u16; 8];
let _64: isize;
let _65: isize;
let _66: &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _67: (u8, Adt20, i16);
let _68: (i16, isize, i16);
let _69: Adt73;
let _70: char;
let _71: [bool; 5];
let _72: [u16; 8];
let _73: Adt30;
let _74: &'static f64;
let _75: u32;
let _76: u128;
let _77: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _78: i64;
let _79: ();
let _80: ();
{
RET = [15692055824945281960_u64,7276873870624828030_u64,52305501834903117_u64,10685846008069425079_u64,9121290956513888678_u64];
RET = [2687653425190682422_u64,5617154013102565925_u64,8258623587258626223_u64,1891011223639317163_u64,3589783828221937824_u64];
_4.0 = [_3,_3,_1];
_4.0 = [_1,_1,_3];
RET = [17124136002938049962_u64,14677541330460784522_u64,946105492494391590_u64,4818801661879273173_u64,17101387788170413276_u64];
_4.0 = [_3,_3,_1];
_1 = -_3;
_4.1 = _2;
_4.1 = _2;
_1 = -_3;
_1 = _3;
RET = [4630983718325299330_u64,7103400013152696828_u64,14129871861803900893_u64,2021563060628095451_u64,1525782236391764511_u64];
Call(_2 = fn2(_4, _1, RET, _3, _4.0, RET, RET, _4.0, _3, _4.0, _4.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [10502369868497308481_u64,1413314586182361427_u64,13183429450656185282_u64,14970308934268305418_u64,7761987311176651843_u64];
_2 = !_4.1;
RET = [16196873618020088425_u64,4823506840602662863_u64,5371020228031568066_u64,14704443412494277171_u64,1398433175958541056_u64];
RET = [2401603120125442908_u64,8269327549103815016_u64,10630238626203335033_u64,10312265524215947474_u64,5727988857063808429_u64];
_6 = [(-26299_i16),21094_i16,30982_i16,23986_i16];
_3 = -_1;
_4.0 = [_3,_1,_1];
_4.1 = '\u{53cfb}' as i8;
_3 = -_1;
_6 = [(-2548_i16),28447_i16,15547_i16,7820_i16];
_8 = _1;
_2 = -_4.1;
RET = [3413947495701945422_u64,13239372871519101789_u64,8947415809360828739_u64,18417153791415659916_u64,5411087237762498453_u64];
_1 = _8 ^ _3;
_3 = _1;
Goto(bb2)
}
bb2 = {
_5 = _4.1 as f64;
_4.0 = [_8,_1,_3];
_3 = _5 as isize;
_4.1 = -_2;
Goto(bb3)
}
bb3 = {
_8 = _1 + _3;
RET = [2453073413833429613_u64,17310931058896496197_u64,13027523380904150487_u64,9786366654829753888_u64,11856671802813455719_u64];
_3 = _8;
_4.1 = _2 ^ _2;
_6 = [(-32401_i16),(-14035_i16),5607_i16,25458_i16];
_3 = _8 + _1;
Goto(bb4)
}
bb4 = {
_4.0 = [_3,_1,_3];
RET = [16344794722250882355_u64,11701178440884442659_u64,15847742006988896074_u64,582113925633971532_u64,4599784964861972050_u64];
_8 = 332226962_u32 as isize;
_4.1 = _2;
_2 = _4.1;
_9 = 28728_i16 - (-29197_i16);
_4.0 = [_3,_8,_8];
_4.0 = [_3,_3,_3];
RET = [16612009783974795037_u64,11930066337280137849_u64,2290206935025674674_u64,232857954080046948_u64,7077689885896706479_u64];
_9 = 11132_i16;
_1 = _9 as isize;
_1 = -_8;
_4.1 = _2 >> _3;
RET = [13925528602137156735_u64,10525703979024961245_u64,9677148827928412575_u64,5599606676586115901_u64,1187562225456063072_u64];
Call(_4.1 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_11.1 = _9;
_2 = true as i8;
_1 = 265166060_i32 as isize;
RET = [18069510780377468200_u64,11724455447243476962_u64,15018767827705190364_u64,2511794867333975841_u64,15273098211085528158_u64];
_10 = !_3;
_9 = _11.1 + _11.1;
_4.1 = 2840483313_u32 as i8;
_12 = _6;
Goto(bb6)
}
bb6 = {
_2 = 19428_u16 as i8;
_12 = _6;
RET = [1923156469121078109_u64,2059818575901410335_u64,3558224410709794176_u64,11847193111709822012_u64,6108365053278032005_u64];
_8 = -_10;
RET = [14444950745149972905_u64,9277217660340794255_u64,9444756713263589100_u64,16404348121323294132_u64,9205102593920014083_u64];
_11.1 = _9 + _9;
_2 = _4.1;
_2 = -_4.1;
_4.1 = _2 - _2;
_10 = 9586340381638442398_usize as isize;
_5 = _2 as f64;
_1 = !_8;
RET = [9388034566001756077_u64,1269530813435079542_u64,3906148141566566237_u64,12863677578487733058_u64,15888469631633875010_u64];
_2 = _4.1;
_6 = _12;
_4.0 = [_1,_8,_8];
_9 = _11.1 ^ _11.1;
_11.1 = _9;
_8 = _3;
_1 = _9 as isize;
_5 = 16410170626987475950_usize as f64;
_1 = 3173747413829156884_u64 as isize;
RET = [5471311894458963082_u64,2738068237088985881_u64,9765334034775523693_u64,3151571107669330271_u64,16583543391663740822_u64];
_5 = 2642524898489091060_u64 as f64;
RET = [451081585837767168_u64,7049878366513516740_u64,8904330623108530116_u64,8010697294832377689_u64,6628359818771543375_u64];
_13 = 1040651461_i32 << _11.1;
_2 = !_4.1;
_4.1 = _2;
_13 = (-1890554089_i32) + 635049336_i32;
_12 = _6;
Goto(bb7)
}
bb7 = {
_4.0 = [_3,_3,_3];
_8 = _3 + _3;
_11.1 = -_9;
_10 = _13 as isize;
_2 = !_4.1;
_1 = (-57430258125872277879042183611900774013_i128) as isize;
_4.0 = [_8,_3,_3];
_1 = _8;
_5 = 337865734069414413371331218219266660451_u128 as f64;
_5 = _2 as f64;
_13 = (-475975367_i32);
_3 = -_1;
_14 = _3;
_11.1 = _9;
_4.0 = [_14,_14,_3];
RET = [4248587870823426717_u64,12820335457675057365_u64,17439550239225899271_u64,13504558593526554507_u64,15532840600924135946_u64];
_5 = (-8524005103119911668_i64) as f64;
_17 = (-2501230508626540999_i64) + 9212381691743485944_i64;
_11.1 = _9;
_5 = 10123_u16 as f64;
_8 = _1 | _1;
_5 = 158440825025167173826991269281174980878_u128 as f64;
_4.1 = _2;
match _13 {
0 => bb1,
1 => bb3,
2 => bb8,
3 => bb9,
340282366920938463463374607431292236089 => bb11,
_ => bb10
}
}
bb8 = {
_2 = 19428_u16 as i8;
_12 = _6;
RET = [1923156469121078109_u64,2059818575901410335_u64,3558224410709794176_u64,11847193111709822012_u64,6108365053278032005_u64];
_8 = -_10;
RET = [14444950745149972905_u64,9277217660340794255_u64,9444756713263589100_u64,16404348121323294132_u64,9205102593920014083_u64];
_11.1 = _9 + _9;
_2 = _4.1;
_2 = -_4.1;
_4.1 = _2 - _2;
_10 = 9586340381638442398_usize as isize;
_5 = _2 as f64;
_1 = !_8;
RET = [9388034566001756077_u64,1269530813435079542_u64,3906148141566566237_u64,12863677578487733058_u64,15888469631633875010_u64];
_2 = _4.1;
_6 = _12;
_4.0 = [_1,_8,_8];
_9 = _11.1 ^ _11.1;
_11.1 = _9;
_8 = _3;
_1 = _9 as isize;
_5 = 16410170626987475950_usize as f64;
_1 = 3173747413829156884_u64 as isize;
RET = [5471311894458963082_u64,2738068237088985881_u64,9765334034775523693_u64,3151571107669330271_u64,16583543391663740822_u64];
_5 = 2642524898489091060_u64 as f64;
RET = [451081585837767168_u64,7049878366513516740_u64,8904330623108530116_u64,8010697294832377689_u64,6628359818771543375_u64];
_13 = 1040651461_i32 << _11.1;
_2 = !_4.1;
_4.1 = _2;
_13 = (-1890554089_i32) + 635049336_i32;
_12 = _6;
Goto(bb7)
}
bb9 = {
_5 = _4.1 as f64;
_4.0 = [_8,_1,_3];
_3 = _5 as isize;
_4.1 = -_2;
Goto(bb3)
}
bb10 = {
_4.0 = [_3,_1,_3];
RET = [16344794722250882355_u64,11701178440884442659_u64,15847742006988896074_u64,582113925633971532_u64,4599784964861972050_u64];
_8 = 332226962_u32 as isize;
_4.1 = _2;
_2 = _4.1;
_9 = 28728_i16 - (-29197_i16);
_4.0 = [_3,_8,_8];
_4.0 = [_3,_3,_3];
RET = [16612009783974795037_u64,11930066337280137849_u64,2290206935025674674_u64,232857954080046948_u64,7077689885896706479_u64];
_9 = 11132_i16;
_1 = _9 as isize;
_1 = -_8;
_4.1 = _2 >> _3;
RET = [13925528602137156735_u64,10525703979024961245_u64,9677148827928412575_u64,5599606676586115901_u64,1187562225456063072_u64];
Call(_4.1 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_4.1 = 9742_u16 as i8;
_1 = _5 as isize;
_2 = (-169665223369235417408504633184847317080_i128) as i8;
_3 = _17 as isize;
RET = [1080776960817212083_u64,9328252759707637199_u64,7516400559187624394_u64,9260191850033783693_u64,14444837878023308535_u64];
_5 = _13 as f64;
_13 = !(-1445099535_i32);
_19 = 50932868903888515099087395701880132725_u128 as isize;
RET = [2366111182908556785_u64,12256724017405855636_u64,4874147399641918169_u64,7879837376718749042_u64,6686643547054049863_u64];
_4.1 = -_2;
_11.1 = !_9;
_14 = -_8;
_19 = _2 as isize;
_3 = !_1;
RET = [11075237500754759235_u64,15597978673182698152_u64,15395084559398047976_u64,17709275387148116302_u64,7930651416706439140_u64];
_9 = _11.1 | _11.1;
RET = [17453759341539161774_u64,17661392397882520504_u64,334620432885085763_u64,17842248511930757505_u64,9792079571236706156_u64];
_9 = _11.1;
Goto(bb12)
}
bb12 = {
_3 = _5 as isize;
_11.1 = !_9;
_20 = (-125346164132864176405135686739408976830_i128) as f64;
_12 = _6;
RET = [4628300188842174149_u64,5353423011537434325_u64,8793874602193364219_u64,14360530982329422105_u64,4252293507261894825_u64];
_4.1 = 7771_u16 as i8;
_4.0 = [_14,_8,_14];
_23.0.0 = !177_u8;
RET = [13567297301306257191_u64,16836273388503258440_u64,5794924984663893472_u64,8548309170596431870_u64,14552423027073354250_u64];
RET = [3726668919822500008_u64,14605167203406939887_u64,1013130872037590870_u64,14765194763104566653_u64,17681687129009292906_u64];
_12 = [_11.1,_9,_9,_9];
_23.0.0 = !111_u8;
_11.0 = core::ptr::addr_of!(_21);
_3 = -_14;
Goto(bb13)
}
bb13 = {
_20 = _3 as f64;
_1 = -_8;
_23.0.2 = _11.1;
_23.0.2 = _9;
_16 = '\u{154e1}';
_23.0.2 = _9 >> _3;
_17 = !6421718899925911494_i64;
_25.0 = _16 as i16;
_5 = _20;
_21 = !_23.0.0;
Goto(bb14)
}
bb14 = {
_1 = _11.1 as isize;
_6 = [_11.1,_11.1,_23.0.2,_23.0.2];
RET = [12743401411719854963_u64,18268323771720176581_u64,16821157514044729206_u64,8049547718624502796_u64,12774942486277793678_u64];
_13 = 9092161051114342956_u64 as i32;
Call(_23.0.2 = core::intrinsics::transmute(_9), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_19 = _8;
_17 = _13 as i64;
_24 = _16;
_12 = [_11.1,_23.0.2,_11.1,_11.1];
_25 = (_23.0.2, _19, _9);
_27.1 = Adt30::Variant2 { fld0: 7179592112998810470_u64,fld1: _25,fld2: 37096_u16,fld3: 45413663525489124784874132555819789552_i128 };
_25.1 = -_3;
_4.0 = [_8,_8,_8];
_27.0 = _23.0.0 as i64;
_23.0.0 = !_21;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = !_25.1;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = _19;
_21 = _23.0.0 & _23.0.0;
_3 = _19 & _25.1;
_20 = -_5;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).0 = _11.1;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = _14 & _14;
_4.1 = _2 | _2;
place!(Field::<u64>(Variant(_27.1, 2), 0)) = true as u64;
_2 = -_4.1;
_6 = [_9,_25.0,_9,_25.0];
Goto(bb16)
}
bb16 = {
_27.0 = _17 & _17;
_22 = &place!(Field::<u64>(Variant(_27.1, 2), 0));
_19 = _3;
place!(Field::<u64>(Variant(_27.1, 2), 0)) = 2700117461129633_u64 | 771252670259027093_u64;
place!(Field::<i128>(Variant(_27.1, 2), 3)) = !167403045204569731662073511695647136919_i128;
_4.1 = _2 & _2;
_25.0 = _9 ^ _23.0.2;
_22 = &place!(Field::<u64>(Variant(_27.1, 2), 0));
_5 = -_20;
Goto(bb17)
}
bb17 = {
place!(Field::<u16>(Variant(_27.1, 2), 2)) = !62243_u16;
_9 = _25.0 >> _14;
_13 = (-1663957478_i32) & (-1136954977_i32);
_1 = !_14;
_17 = !_27.0;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = _1;
_1 = _3;
_25.2 = _9 + Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).0;
SetDiscriminant(_27.1, 0);
_11.0 = core::ptr::addr_of!(_23.0.0);
_25.0 = 1887065222_u32 as i16;
_1 = _3;
_23.0.0 = !_21;
Goto(bb18)
}
bb18 = {
_4.0 = [_25.1,_19,_3];
_26 = _21 as f32;
_30 = &_25;
_26 = _21 as f32;
_23.0.2 = !(*_30).2;
place!(Field::<bool>(Variant(_27.1, 0), 0)) = false | true;
_10 = _27.0 as isize;
_4.0 = [(*_30).1,_19,_25.1];
_12 = _6;
_11.1 = (*_30).1 as i16;
_23.0.1 = Adt20::Variant1 { fld0: 13523880628646272095_u64,fld1: 288632102916371631081561419373143221953_u128,fld2: _21,fld3: _26,fld4: 1132287969_u32,fld5: _13,fld6: _17 };
place!(Field::<u32>(Variant(_23.0.1, 1), 4)) = !2381870443_u32;
_10 = -_25.1;
_19 = !_8;
place!(Field::<u8>(Variant(_23.0.1, 1), 2)) = _24 as u8;
Goto(bb19)
}
bb19 = {
_10 = _5 as isize;
_17 = -Field::<i64>(Variant(_23.0.1, 1), 6);
_17 = Field::<i64>(Variant(_23.0.1, 1), 6) & _27.0;
place!(Field::<i64>(Variant(_23.0.1, 1), 6)) = 133806539848326455985213595346410359947_i128 as i64;
place!(Field::<f32>(Variant(_23.0.1, 1), 3)) = _26;
_23.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
_32 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
_30 = &(*_30);
_29 = _24;
Goto(bb20)
}
bb20 = {
_13 = Field::<i32>(Variant(_23.0.1, 1), 5) & Field::<i32>(Variant(_23.0.1, 1), 5);
place!(Field::<i32>(Variant(_23.0.1, 1), 5)) = _13;
_19 = !_14;
_25.2 = _9 - _9;
_27.0 = !Field::<i64>(Variant(_23.0.1, 1), 6);
_31 = 824_u16 + 11622_u16;
RET = [8275237286733333660_u64,13853558100442175488_u64,9739175257337465116_u64,15293770574787910630_u64,13416754284955240567_u64];
_26 = _2 as f32;
_2 = 15133210383711599739_usize as i8;
_23.1 = Move(_32);
_14 = _25.2 as isize;
Call(_25.1 = core::intrinsics::transmute(_12), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_32 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
SetDiscriminant(_27.1, 1);
_33 = _17;
_26 = Field::<f32>(Variant(_23.0.1, 1), 3);
_13 = Field::<i32>(Variant(_23.0.1, 1), 5) & Field::<i32>(Variant(_23.0.1, 1), 5);
_33 = -_27.0;
_5 = _20 - _20;
place!(Field::<u128>(Variant(_23.0.1, 1), 1)) = 149053454098533393791233863116410719060_u128;
_36 = [true,true,false,false,false];
RET = [4609993958827637646_u64,3802292647600307205_u64,8186871092556026287_u64,13622068953772262648_u64,14915392251952497844_u64];
_1 = -_14;
_23.0.0 = 4806740126556597933_usize as u8;
_20 = -_5;
Goto(bb22)
}
bb22 = {
RET = [12210531615865476555_u64,2232265194139183308_u64,1399627416253517404_u64,13315844843117234283_u64,15488322714055559579_u64];
_27.1 = Adt30::Variant0 { fld0: false };
_23.1 = core::ptr::addr_of_mut!((*_32));
_17 = -_27.0;
_27.0 = -_33;
_36 = [false,true,true,false,true];
_23.0.1 = Adt20::Variant1 { fld0: 16136730897966799921_u64,fld1: 12628216591258314964352317390163009865_u128,fld2: _23.0.0,fld3: _26,fld4: 2237377111_u32,fld5: _13,fld6: _33 };
_34 = [_9,_9,_25.2,_25.2];
_23.0.1 = Adt20::Variant1 { fld0: 17141524477216386141_u64,fld1: 294644816072888702583883796205470076367_u128,fld2: _21,fld3: _26,fld4: 1822905970_u32,fld5: _13,fld6: _27.0 };
place!(Field::<i64>(Variant(_23.0.1, 1), 6)) = _27.0;
place!(Field::<u32>(Variant(_23.0.1, 1), 4)) = 4017803181_u32;
_25.1 = _1 ^ _3;
_38 = Field::<u32>(Variant(_23.0.1, 1), 4);
place!(Field::<bool>(Variant(_27.1, 0), 0)) = !false;
_2 = !_4.1;
_25 = (_23.0.2, _10, _23.0.2);
place!(Field::<bool>(Variant(_27.1, 0), 0)) = _23.0.2 != _9;
Call(_14 = core::intrinsics::transmute(_8), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_2 = _4.1 + _4.1;
_10 = Field::<u8>(Variant(_23.0.1, 1), 2) as isize;
SetDiscriminant(_27.1, 1);
_20 = _31 as f64;
place!(Field::<u128>(Variant(_23.0.1, 1), 1)) = _13 as u128;
match _38 {
0 => bb19,
1 => bb24,
2 => bb25,
3 => bb26,
4 => bb27,
5 => bb28,
4017803181 => bb30,
_ => bb29
}
}
bb24 = {
_1 = _11.1 as isize;
_6 = [_11.1,_11.1,_23.0.2,_23.0.2];
RET = [12743401411719854963_u64,18268323771720176581_u64,16821157514044729206_u64,8049547718624502796_u64,12774942486277793678_u64];
_13 = 9092161051114342956_u64 as i32;
Call(_23.0.2 = core::intrinsics::transmute(_9), ReturnTo(bb15), UnwindUnreachable())
}
bb25 = {
_20 = _3 as f64;
_1 = -_8;
_23.0.2 = _11.1;
_23.0.2 = _9;
_16 = '\u{154e1}';
_23.0.2 = _9 >> _3;
_17 = !6421718899925911494_i64;
_25.0 = _16 as i16;
_5 = _20;
_21 = !_23.0.0;
Goto(bb14)
}
bb26 = {
_4.0 = [_3,_1,_3];
RET = [16344794722250882355_u64,11701178440884442659_u64,15847742006988896074_u64,582113925633971532_u64,4599784964861972050_u64];
_8 = 332226962_u32 as isize;
_4.1 = _2;
_2 = _4.1;
_9 = 28728_i16 - (-29197_i16);
_4.0 = [_3,_8,_8];
_4.0 = [_3,_3,_3];
RET = [16612009783974795037_u64,11930066337280137849_u64,2290206935025674674_u64,232857954080046948_u64,7077689885896706479_u64];
_9 = 11132_i16;
_1 = _9 as isize;
_1 = -_8;
_4.1 = _2 >> _3;
RET = [13925528602137156735_u64,10525703979024961245_u64,9677148827928412575_u64,5599606676586115901_u64,1187562225456063072_u64];
Call(_4.1 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb27 = {
_4.0 = [_3,_3,_3];
_8 = _3 + _3;
_11.1 = -_9;
_10 = _13 as isize;
_2 = !_4.1;
_1 = (-57430258125872277879042183611900774013_i128) as isize;
_4.0 = [_8,_3,_3];
_1 = _8;
_5 = 337865734069414413371331218219266660451_u128 as f64;
_5 = _2 as f64;
_13 = (-475975367_i32);
_3 = -_1;
_14 = _3;
_11.1 = _9;
_4.0 = [_14,_14,_3];
RET = [4248587870823426717_u64,12820335457675057365_u64,17439550239225899271_u64,13504558593526554507_u64,15532840600924135946_u64];
_5 = (-8524005103119911668_i64) as f64;
_17 = (-2501230508626540999_i64) + 9212381691743485944_i64;
_11.1 = _9;
_5 = 10123_u16 as f64;
_8 = _1 | _1;
_5 = 158440825025167173826991269281174980878_u128 as f64;
_4.1 = _2;
match _13 {
0 => bb1,
1 => bb3,
2 => bb8,
3 => bb9,
340282366920938463463374607431292236089 => bb11,
_ => bb10
}
}
bb28 = {
_27.0 = _17 & _17;
_22 = &place!(Field::<u64>(Variant(_27.1, 2), 0));
_19 = _3;
place!(Field::<u64>(Variant(_27.1, 2), 0)) = 2700117461129633_u64 | 771252670259027093_u64;
place!(Field::<i128>(Variant(_27.1, 2), 3)) = !167403045204569731662073511695647136919_i128;
_4.1 = _2 & _2;
_25.0 = _9 ^ _23.0.2;
_22 = &place!(Field::<u64>(Variant(_27.1, 2), 0));
_5 = -_20;
Goto(bb17)
}
bb29 = {
_11.1 = _9;
_2 = true as i8;
_1 = 265166060_i32 as isize;
RET = [18069510780377468200_u64,11724455447243476962_u64,15018767827705190364_u64,2511794867333975841_u64,15273098211085528158_u64];
_10 = !_3;
_9 = _11.1 + _11.1;
_4.1 = 2840483313_u32 as i8;
_12 = _6;
Goto(bb6)
}
bb30 = {
_10 = _1;
_16 = _24;
RET = [10658695713369255914_u64,9785697055088321597_u64,16635100456201753308_u64,5506258251497615635_u64,12766786983107535581_u64];
RET = [6525692604047558867_u64,3924381929437379664_u64,17321948488028429205_u64,246820345865187345_u64,207712811847116219_u64];
_4.1 = !_2;
_5 = _20 + _20;
place!(Field::<u64>(Variant(_23.0.1, 1), 0)) = 9627193127190290024_u64;
_23.1 = Move(_32);
_23.0.2 = true as i16;
_5 = -_20;
_25.1 = !_1;
_20 = _31 as f64;
RET = [Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0)];
_5 = _31 as f64;
_25.1 = !_19;
place!(Field::<i32>(Variant(_27.1, 1), 0)) = Field::<i32>(Variant(_23.0.1, 1), 5) << _8;
_7 = &place!(Field::<u64>(Variant(_23.0.1, 1), 0));
_25 = (_11.1, _1, _9);
_3 = (-16116067291883515534895318930873093097_i128) as isize;
_13 = Field::<u8>(Variant(_23.0.1, 1), 2) as i32;
place!(Field::<u128>(Variant(_23.0.1, 1), 1)) = Field::<u64>(Variant(_23.0.1, 1), 0) as u128;
_23.0.0 = Field::<u8>(Variant(_23.0.1, 1), 2) | Field::<u8>(Variant(_23.0.1, 1), 2);
_26 = Field::<f32>(Variant(_23.0.1, 1), 3) + Field::<f32>(Variant(_23.0.1, 1), 3);
_9 = _11.1;
_10 = Field::<u8>(Variant(_23.0.1, 1), 2) as isize;
_27.0 = Field::<i32>(Variant(_27.1, 1), 0) as i64;
_36 = [false,true,true,false,false];
match Field::<u64>(Variant(_23.0.1, 1), 0) {
0 => bb9,
1 => bb2,
2 => bb28,
3 => bb13,
9627193127190290024 => bb32,
_ => bb31
}
}
bb31 = {
_4.0 = [_3,_1,_3];
RET = [16344794722250882355_u64,11701178440884442659_u64,15847742006988896074_u64,582113925633971532_u64,4599784964861972050_u64];
_8 = 332226962_u32 as isize;
_4.1 = _2;
_2 = _4.1;
_9 = 28728_i16 - (-29197_i16);
_4.0 = [_3,_8,_8];
_4.0 = [_3,_3,_3];
RET = [16612009783974795037_u64,11930066337280137849_u64,2290206935025674674_u64,232857954080046948_u64,7077689885896706479_u64];
_9 = 11132_i16;
_1 = _9 as isize;
_1 = -_8;
_4.1 = _2 >> _3;
RET = [13925528602137156735_u64,10525703979024961245_u64,9677148827928412575_u64,5599606676586115901_u64,1187562225456063072_u64];
Call(_4.1 = core::intrinsics::transmute(_2), ReturnTo(bb5), UnwindUnreachable())
}
bb32 = {
_3 = true as isize;
_37 = [(*_7),(*_7),(*_7),(*_7),(*_7)];
_32 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
_17 = _27.0;
_25.0 = _9;
SetDiscriminant(_23.0.1, 0);
_2 = _4.1;
_32 = Move(_23.1);
_40 = [_25.1,_14,_14];
_39 = [(-109969229726374987843263178136663186329_i128),76505481103136999384564332346799971492_i128,(-106086889149334557061630470975438036905_i128),(-18097188683877702864303427823374591586_i128),39039349088857083144939556810409082666_i128,13647964934198118654687835305925109817_i128,82312166831809624364079784483422500121_i128];
_41 = -_9;
place!(Field::<*mut i8>(Variant(_23.0.1, 0), 0)) = core::ptr::addr_of_mut!(_2);
_38 = 2857996041_u32;
_42.1.1 = _25.1;
_25.0 = !_25.2;
_43 = [_4.1];
_3 = _13 as isize;
_11.1 = _38 as i16;
_23.0.1 = Adt20::Variant1 { fld0: 13470122234774667332_u64,fld1: 56988284416755154402642651694849052377_u128,fld2: _23.0.0,fld3: _26,fld4: _38,fld5: Field::<i32>(Variant(_27.1, 1), 0),fld6: _27.0 };
place!(Field::<u64>(Variant(_23.0.1, 1), 0)) = 17746398104486921946_u64 * 2699036404094746867_u64;
Goto(bb33)
}
bb33 = {
_33 = !Field::<i64>(Variant(_23.0.1, 1), 6);
_14 = _42.1.1;
_34 = [_25.0,_41,_25.2,_41];
Call(_2 = core::intrinsics::bswap(_4.1), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_35 = [Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0),Field::<u64>(Variant(_23.0.1, 1), 0)];
_27.0 = _33 >> Field::<i32>(Variant(_27.1, 1), 0);
_41 = _25.0;
Call(_4.1 = core::intrinsics::bswap(_2), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
_41 = !_9;
_45.3 = _4.1 >> _1;
_32 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
_4.0 = [_14,_14,_8];
place!(Field::<i64>(Variant(_23.0.1, 1), 6)) = Field::<i32>(Variant(_27.1, 1), 0) as i64;
_42 = (_31, _25);
place!(Field::<i64>(Variant(_23.0.1, 1), 6)) = _17 * _27.0;
_4.0 = _40;
_31 = false as u16;
_39 = [(-91740803751415446992951540325542936739_i128),31090469508061266191467864969909988921_i128,(-12003540086410494299235846316861324711_i128),(-67164563032168195845855934527410969259_i128),78928269569368335821064886851745566419_i128,(-160690435340665077654848659850613707888_i128),19552970275253339511967507263583411761_i128];
_19 = -_42.1.1;
_25.2 = -_41;
_23.0.1 = Adt20::Variant1 { fld0: 10979360428998248497_u64,fld1: 25240113157238581983183566129690244379_u128,fld2: _23.0.0,fld3: _26,fld4: _38,fld5: Field::<i32>(Variant(_27.1, 1), 0),fld6: _27.0 };
RET = [4255262060798190226_u64,1828006199145080330_u64,14159468530741026705_u64,4308710062850137170_u64,7628760215345100466_u64];
_48 = 51898308142012736106905034870208893297_u128 as isize;
_42.1 = (_9, _14, _25.2);
_31 = _42.0 | _42.0;
RET = [15179788238788497818_u64,18441846256219971438_u64,9614505285679919283_u64,14020509782736762463_u64,15303741769014239700_u64];
_38 = Field::<u32>(Variant(_23.0.1, 1), 4) >> Field::<i64>(Variant(_23.0.1, 1), 6);
_32 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.0.1, 1), 1)));
place!(Field::<u64>(Variant(_23.0.1, 1), 0)) = 18057158500614230062_u64;
Goto(bb36)
}
bb36 = {
_10 = _42.1.1;
_13 = -Field::<i32>(Variant(_27.1, 1), 0);
_14 = true as isize;
Goto(bb37)
}
bb37 = {
_45 = (Field::<f32>(Variant(_23.0.1, 1), 3), _36, 140838726415704832329292410057719509044_u128, _4.1);
_24 = _29;
match _45.2 {
0 => bb1,
1 => bb19,
2 => bb36,
3 => bb11,
4 => bb20,
5 => bb6,
6 => bb38,
140838726415704832329292410057719509044 => bb40,
_ => bb39
}
}
bb38 = {
_8 = _1 + _3;
RET = [2453073413833429613_u64,17310931058896496197_u64,13027523380904150487_u64,9786366654829753888_u64,11856671802813455719_u64];
_3 = _8;
_4.1 = _2 ^ _2;
_6 = [(-32401_i16),(-14035_i16),5607_i16,25458_i16];
_3 = _8 + _1;
Goto(bb4)
}
bb39 = {
_20 = _3 as f64;
_1 = -_8;
_23.0.2 = _11.1;
_23.0.2 = _9;
_16 = '\u{154e1}';
_23.0.2 = _9 >> _3;
_17 = !6421718899925911494_i64;
_25.0 = _16 as i16;
_5 = _20;
_21 = !_23.0.0;
Goto(bb14)
}
bb40 = {
RET = _37;
_20 = _5 * _5;
_2 = 0_usize as i8;
(*_32) = !_45.2;
_27.1 = Adt30::Variant1 { fld0: Field::<i32>(Variant(_23.0.1, 1), 5),fld1: _31,fld2: Move(_11.0) };
_2 = _45.3;
_27.1 = Adt30::Variant0 { fld0: true };
_7 = &place!(Field::<u64>(Variant(_23.0.1, 1), 0));
_45.2 = (*_32);
_44 = _38 % Field::<u32>(Variant(_23.0.1, 1), 4);
_13 = -Field::<i32>(Variant(_23.0.1, 1), 5);
_42.1 = (_41, _19, _9);
_42.1.0 = _45.0 as i16;
place!(Field::<i32>(Variant(_23.0.1, 1), 5)) = _13;
_23.0.0 = _21;
_45.3 = _4.1;
_51 = [_13,_13,_13,_13];
_4 = (_40, _2);
_51 = [_13,Field::<i32>(Variant(_23.0.1, 1), 5),Field::<i32>(Variant(_23.0.1, 1), 5),_13];
_34 = [_25.0,_41,_25.2,_42.1.2];
_23.1 = core::ptr::addr_of_mut!(_45.2);
match (*_7) {
0 => bb41,
1 => bb42,
2 => bb43,
3 => bb44,
18057158500614230062 => bb46,
_ => bb45
}
}
bb41 = {
_20 = _3 as f64;
_1 = -_8;
_23.0.2 = _11.1;
_23.0.2 = _9;
_16 = '\u{154e1}';
_23.0.2 = _9 >> _3;
_17 = !6421718899925911494_i64;
_25.0 = _16 as i16;
_5 = _20;
_21 = !_23.0.0;
Goto(bb14)
}
bb42 = {
_4.0 = [_25.1,_19,_3];
_26 = _21 as f32;
_30 = &_25;
_26 = _21 as f32;
_23.0.2 = !(*_30).2;
place!(Field::<bool>(Variant(_27.1, 0), 0)) = false | true;
_10 = _27.0 as isize;
_4.0 = [(*_30).1,_19,_25.1];
_12 = _6;
_11.1 = (*_30).1 as i16;
_23.0.1 = Adt20::Variant1 { fld0: 13523880628646272095_u64,fld1: 288632102916371631081561419373143221953_u128,fld2: _21,fld3: _26,fld4: 1132287969_u32,fld5: _13,fld6: _17 };
place!(Field::<u32>(Variant(_23.0.1, 1), 4)) = !2381870443_u32;
_10 = -_25.1;
_19 = !_8;
place!(Field::<u8>(Variant(_23.0.1, 1), 2)) = _24 as u8;
Goto(bb19)
}
bb43 = {
_5 = _4.1 as f64;
_4.0 = [_8,_1,_3];
_3 = _5 as isize;
_4.1 = -_2;
Goto(bb3)
}
bb44 = {
_4.0 = [_3,_3,_3];
_8 = _3 + _3;
_11.1 = -_9;
_10 = _13 as isize;
_2 = !_4.1;
_1 = (-57430258125872277879042183611900774013_i128) as isize;
_4.0 = [_8,_3,_3];
_1 = _8;
_5 = 337865734069414413371331218219266660451_u128 as f64;
_5 = _2 as f64;
_13 = (-475975367_i32);
_3 = -_1;
_14 = _3;
_11.1 = _9;
_4.0 = [_14,_14,_3];
RET = [4248587870823426717_u64,12820335457675057365_u64,17439550239225899271_u64,13504558593526554507_u64,15532840600924135946_u64];
_5 = (-8524005103119911668_i64) as f64;
_17 = (-2501230508626540999_i64) + 9212381691743485944_i64;
_11.1 = _9;
_5 = 10123_u16 as f64;
_8 = _1 | _1;
_5 = 158440825025167173826991269281174980878_u128 as f64;
_4.1 = _2;
match _13 {
0 => bb1,
1 => bb3,
2 => bb8,
3 => bb9,
340282366920938463463374607431292236089 => bb11,
_ => bb10
}
}
bb45 = {
_4.1 = 9742_u16 as i8;
_1 = _5 as isize;
_2 = (-169665223369235417408504633184847317080_i128) as i8;
_3 = _17 as isize;
RET = [1080776960817212083_u64,9328252759707637199_u64,7516400559187624394_u64,9260191850033783693_u64,14444837878023308535_u64];
_5 = _13 as f64;
_13 = !(-1445099535_i32);
_19 = 50932868903888515099087395701880132725_u128 as isize;
RET = [2366111182908556785_u64,12256724017405855636_u64,4874147399641918169_u64,7879837376718749042_u64,6686643547054049863_u64];
_4.1 = -_2;
_11.1 = !_9;
_14 = -_8;
_19 = _2 as isize;
_3 = !_1;
RET = [11075237500754759235_u64,15597978673182698152_u64,15395084559398047976_u64,17709275387148116302_u64,7930651416706439140_u64];
_9 = _11.1 | _11.1;
RET = [17453759341539161774_u64,17661392397882520504_u64,334620432885085763_u64,17842248511930757505_u64,9792079571236706156_u64];
_9 = _11.1;
Goto(bb12)
}
bb46 = {
_38 = _44 ^ _44;
_47 = !true;
_4 = (_40, _45.3);
_27.0 = _33 | _17;
_45 = (Field::<f32>(Variant(_23.0.1, 1), 3), _36, Field::<u128>(Variant(_23.0.1, 1), 1), _2);
_23.0.0 = _21;
_26 = -Field::<f32>(Variant(_23.0.1, 1), 3);
SetDiscriminant(_23.0.1, 0);
_42.1.1 = _42.1.2 as isize;
_34 = [_25.0,_25.2,_25.0,_42.1.2];
_1 = !_25.1;
place!(Field::<bool>(Variant(_27.1, 0), 0)) = _47;
Goto(bb47)
}
bb47 = {
_16 = _24;
_29 = _16;
_53.0 = core::ptr::addr_of!(_23.0.0);
_23.0.0 = _21 << _19;
_42.0 = _10 as u16;
_46 = _42.0 as u8;
_38 = 2014728933528140713_u64 as u32;
_33 = _16 as i64;
_32 = core::ptr::addr_of_mut!(_45.2);
_1 = _19;
_53.0 = core::ptr::addr_of!(_46);
_2 = _13 as i8;
_53.0 = core::ptr::addr_of!(_46);
place!(Field::<u64>(Variant(_23.0.1, 0), 2)) = !9228857270982795191_u64;
_48 = _45.0 as isize;
_42.1 = _25;
place!(Field::<u64>(Variant(_23.0.1, 0), 2)) = 7788825029584090495_u64 << _23.0.0;
Goto(bb48)
}
bb48 = {
_52 = Field::<u64>(Variant(_23.0.1, 0), 2) as i128;
_57.0 = Adt27::Variant0 { fld0: _10 };
_42.1.0 = _25.2 + _25.0;
_53.1 = _42.1.0;
_57.0 = Adt27::Variant0 { fld0: _25.1 };
Goto(bb49)
}
bb49 = {
RET = _37;
_57.2 = (*_32) as usize;
_46 = _23.0.0;
_45.1 = [Field::<bool>(Variant(_27.1, 0), 0),_47,Field::<bool>(Variant(_27.1, 0), 0),Field::<bool>(Variant(_27.1, 0), 0),_47];
Goto(bb50)
}
bb50 = {
_46 = _23.0.0;
SetDiscriminant(_57.0, 0);
SetDiscriminant(_27.1, 2);
_12 = _34;
_17 = _57.2 as i64;
_3 = _19;
(*_32) = 78608061032000394626642609862956943443_u128;
_53.1 = !_25.0;
place!(Field::<i128>(Variant(_27.1, 2), 3)) = _45.2 as i128;
_7 = &place!(Field::<u64>(Variant(_23.0.1, 0), 2));
_33 = -_17;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = _19;
_48 = _10 + _10;
_10 = (*_7) as isize;
_38 = !_44;
_45.3 = !_2;
_16 = _24;
_11 = (Move(_53.0), _53.1);
_45.2 = _52 as u128;
_30 = &_25;
_44 = _38;
_4 = (_40, _2);
Goto(bb51)
}
bb51 = {
_21 = !_23.0.0;
_11.0 = core::ptr::addr_of!(_21);
Goto(bb52)
}
bb52 = {
_40 = [_42.1.1,Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1,_19];
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).2 = (*_32) as i16;
_4 = (_40, _2);
_23.0.0 = _46 * _46;
_46 = _21;
_45.2 = 293816065447843309569031607639995047884_u128 << _46;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)) = (_25.0, _10, _42.1.0);
_58 = -_25.1;
_31 = _42.0 << _21;
_15 = core::ptr::addr_of!(_57.0);
place!(Field::<u64>(Variant(_23.0.1, 0), 2)) = 930993787883245728_u64 ^ 12036094249378831087_u64;
_39 = [_52,_52,_52,_52,_52,_52,_52];
(*_32) = _42.1.1 as u128;
_5 = _20 + _20;
_19 = Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1;
_64 = Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1 * _58;
place!(Field::<isize>(Variant(_57.0, 0), 0)) = _58;
(*_15) = Adt27::Variant0 { fld0: _58 };
place!(Field::<usize>(Variant(_23.0.1, 0), 3)) = _57.2;
(*_15) = Adt27::Variant0 { fld0: _48 };
_23.1 = Move(_32);
_15 = core::ptr::addr_of!((*_15));
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).0 = _45.0 as i16;
_16 = _29;
_42 = (_31, (*_30));
Goto(bb53)
}
bb53 = {
_4 = (_40, _2);
_23.0.0 = _21;
_42.1.2 = !(*_30).0;
_11.0 = core::ptr::addr_of!(_46);
place!(Field::<isize>(Variant((*_15), 0), 0)) = _64 * Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1;
SetDiscriminant((*_15), 1);
_24 = _29;
_19 = _3 | _25.1;
_64 = (*_30).1;
place!(Field::<u8>(Variant((*_15), 1), 4)) = _5 as u8;
_61 = (*_30).1;
Goto(bb54)
}
bb54 = {
_35 = [Field::<u64>(Variant(_23.0.1, 0), 2),Field::<u64>(Variant(_23.0.1, 0), 2),Field::<u64>(Variant(_23.0.1, 0), 2)];
_24 = _16;
_32 = core::ptr::addr_of_mut!(_45.2);
_23.0.1 = Adt20::Variant1 { fld0: 1203396553875065546_u64,fld1: (*_32),fld2: _46,fld3: _45.0,fld4: _38,fld5: _13,fld6: _27.0 };
_51 = [_13,Field::<i32>(Variant(_23.0.1, 1), 5),Field::<i32>(Variant(_23.0.1, 1), 5),_13];
_53 = (Move(_11.0), _25.0);
_70 = _29;
place!(Field::<f64>(Variant((*_15), 1), 1)) = _20 * _5;
_63 = [_42.0,_31,_42.0,_42.0,_42.0,_31,_31,_42.0];
_68 = (*_30);
place!(Field::<u64>(Variant(_23.0.1, 1), 0)) = 3985964036161211028_u64 * 14058976902052283915_u64;
place!(Field::<i128>(Variant(_27.1, 2), 3)) = _52;
place!(Field::<f64>(Variant((*_15), 1), 1)) = Field::<u128>(Variant(_23.0.1, 1), 1) as f64;
place!(Field::<f64>(Variant(_57.0, 1), 1)) = _20;
_22 = &place!(Field::<u64>(Variant(_23.0.1, 1), 0));
place!(Field::<(u8, Adt20, i16)>(Variant(_57.0, 1), 2)).1 = Move(_23.0.1);
_38 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_57.0, 1), 2).1, 1), 4) & Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_15), 1), 2).1, 1), 4);
_73 = Adt30::Variant0 { fld0: _47 };
_9 = Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).2;
_61 = !_19;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).2 = (*_30).0 + _25.0;
place!(Field::<f64>(Variant(_57.0, 1), 1)) = -_5;
SetDiscriminant(Field::<(u8, Adt20, i16)>(Variant((*_15), 1), 2).1, 1);
_11.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant((*_15), 1), 4)));
Goto(bb55)
}
bb55 = {
place!(Field::<u8>(Variant(_57.0, 1), 4)) = _21 | _23.0.0;
_64 = _1 & _42.1.1;
_3 = _48;
Call(_4.0 = core::intrinsics::transmute(_40), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
_30 = &(*_30);
place!(Field::<i32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant((*_15), 1), 2)).1, 1), 5)) = -_13;
SetDiscriminant(_73, 1);
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).0 = Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).2;
_23.1 = Move(_32);
place!(Field::<u64>(Variant(_27.1, 2), 0)) = 10031770709587784038_u64 - 9877777942074426511_u64;
_44 = !_38;
place!(Field::<f64>(Variant((*_15), 1), 1)) = _5 * _20;
place!(Field::<u64>(Variant(_57.0, 1), 0)) = Field::<u64>(Variant(_27.1, 2), 0) | Field::<u64>(Variant(_27.1, 2), 0);
_21 = !Field::<u8>(Variant(_57.0, 1), 4);
place!(Field::<(u8, Adt20, i16)>(Variant(_57.0, 1), 2)).0 = _46;
Goto(bb57)
}
bb57 = {
place!(Field::<u8>(Variant((*_15), 1), 4)) = !Field::<(u8, Adt20, i16)>(Variant(_57.0, 1), 2).0;
place!(Field::<u16>(Variant(_73, 1), 1)) = _45.2 as u16;
_6 = [_9,Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).0,_9,_25.0];
place!(Field::<u64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant((*_15), 1), 2)).1, 1), 0)) = Field::<u64>(Variant((*_15), 1), 0);
(*_15) = Adt27::Variant0 { fld0: Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1 };
_29 = _70;
_16 = _70;
_4.0 = _40;
_17 = _27.0 | _27.0;
place!(Field::<isize>(Variant(_57.0, 0), 0)) = !_10;
_25.2 = _52 as i16;
_8 = _68.1 ^ _42.1.1;
_27.0 = _45.3 as i64;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).0 = Field::<u64>(Variant(_27.1, 2), 0) as i16;
_57.2 = !2521298861243021834_usize;
_27.0 = -_17;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).2 = -_11.1;
_45.1 = [_47,_47,_47,_47,_47];
Call(_41 = core::intrinsics::bswap(_11.1), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
_20 = _5 + _5;
_67.2 = _57.2 as i16;
place!(Field::<*const u8>(Variant(_73, 1), 2)) = core::ptr::addr_of!(_46);
_42 = (Field::<u16>(Variant(_73, 1), 1), _68);
_71 = _36;
_65 = _61;
_72 = [_31,_31,Field::<u16>(Variant(_73, 1), 1),_31,Field::<u16>(Variant(_73, 1), 1),_42.0,_42.0,Field::<u16>(Variant(_73, 1), 1)];
Goto(bb59)
}
bb59 = {
_44 = !_38;
place!(Field::<i128>(Variant(_27.1, 2), 3)) = _52 - _52;
_33 = !_27.0;
_3 = !Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1).1;
RET = _37;
_58 = Field::<u64>(Variant(_27.1, 2), 0) as isize;
_59 = _16;
_11 = (Move(Field::<*const u8>(Variant(_73, 1), 2)), (*_30).0);
_4 = (_40, _2);
_41 = _25.2;
SetDiscriminant((*_15), 0);
_56 = [Field::<u64>(Variant(_27.1, 2), 0),Field::<u64>(Variant(_27.1, 2), 0),Field::<u64>(Variant(_27.1, 2), 0)];
place!(Field::<isize>(Variant((*_15), 0), 0)) = (*_30).1 + _65;
_58 = Field::<isize>(Variant(_57.0, 0), 0) >> _52;
_68.1 = -Field::<isize>(Variant((*_15), 0), 0);
_1 = _42.1.1;
_21 = !_23.0.0;
place!(Field::<i32>(Variant(_73, 1), 0)) = _13 & _13;
_58 = -_19;
place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1)).1 = _25.1;
_53.0 = Move(_11.0);
_39 = [_52,_52,Field::<i128>(Variant(_27.1, 2), 3),_52,Field::<i128>(Variant(_27.1, 2), 3),_52,_52];
_6 = [_42.1.2,_42.1.2,_53.1,(*_30).0];
_67.2 = _53.1 >> _41;
_30 = &place!(Field::<(i16, isize, i16)>(Variant(_27.1, 2), 1));
Goto(bb60)
}
bb60 = {
Call(_79 = dump_var(1_usize, 38_usize, Move(_38), 24_usize, Move(_24), 59_usize, Move(_59), 35_usize, Move(_35)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_79 = dump_var(1_usize, 61_usize, Move(_61), 48_usize, Move(_48), 41_usize, Move(_41), 8_usize, Move(_8)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_79 = dump_var(1_usize, 43_usize, Move(_43), 64_usize, Move(_64), 6_usize, Move(_6), 47_usize, Move(_47)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_79 = dump_var(1_usize, 65_usize, Move(_65), 39_usize, Move(_39), 13_usize, Move(_13), 25_usize, Move(_25)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_79 = dump_var(1_usize, 1_usize, Move(_1), 52_usize, Move(_52), 4_usize, Move(_4), 51_usize, Move(_51)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_79 = dump_var(1_usize, 12_usize, Move(_12), 56_usize, Move(_56), 46_usize, Move(_46), 80_usize, _80), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: ([isize; 3], i8),mut _2: isize,mut _3: [u64; 5],mut _4: isize,mut _5: [isize; 3],mut _6: [u64; 5],mut _7: [u64; 5],mut _8: [isize; 3],mut _9: isize,mut _10: [isize; 3],mut _11: [isize; 3]) -> i8 {
mir! {
type RET = i8;
let _12: *const u8;
let _13: [u64; 5];
let _14: ((u8, Adt20, i16), *mut u128);
let _15: u128;
let _16: &'static [i8; 3];
let _17: u8;
let _18: (i16, isize, i16);
let _19: isize;
let _20: bool;
let _21: [i16; 7];
let _22: [i8; 2];
let _23: (u16, (i16, isize, i16));
let _24: u8;
let _25: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _26: Adt27;
let _27: [u8; 6];
let _28: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _29: (([i32; 4],),);
let _30: &'static i16;
let _31: [u16; 8];
let _32: &'static u64;
let _33: [u8; 6];
let _34: [u128; 8];
let _35: char;
let _36: &'static f64;
let _37: u8;
let _38: f64;
let _39: usize;
let _40: i128;
let _41: &'static Adt20;
let _42: ((&'static i16, u16, char, i64), u32, u64, f64);
let _43: Adt76;
let _44: isize;
let _45: ([i32; 4],);
let _46: [u128; 8];
let _47: isize;
let _48: bool;
let _49: [i16; 4];
let _50: &'static Adt20;
let _51: f64;
let _52: i128;
let _53: char;
let _54: [u64; 3];
let _55: ((u8, Adt20, i16), *mut u128);
let _56: *mut *const *mut i8;
let _57: [u64; 3];
let _58: ();
let _59: ();
{
_4 = !_2;
RET = _1.1;
_3 = [1468317659525548661_u64,11885230886623978430_u64,10496221680042652754_u64,1796167989027582954_u64,17141078978490506037_u64];
_2 = _4 << _9;
_5 = [_4,_9,_4];
_4 = _9 * _2;
_3 = _7;
_6 = _7;
_2 = _4 ^ _4;
_11 = _10;
_2 = 4893781493940636428_u64 as isize;
_14.1 = core::ptr::addr_of_mut!(_15);
_11 = _10;
_4 = _9 | _9;
_4 = -_9;
_11 = [_2,_4,_9];
RET = _1.1 * _1.1;
_15 = !228909540529736674552613247390303456437_u128;
_8 = _10;
_13 = [15226613170833853868_u64,16274670267774337148_u64,11241064015955701565_u64,5920911688131997276_u64,7453234468787422967_u64];
Goto(bb1)
}
bb1 = {
_4 = _2;
_14.0.0 = 125_u8;
_12 = core::ptr::addr_of!(_14.0.0);
_14.0.2 = 9205_i16 & (-8937_i16);
_1.1 = RET | RET;
(*_12) = 135_u8 | 168_u8;
_1 = (_8, RET);
_1.0 = [_2,_4,_4];
_9 = _2;
_14.0.0 = 5_usize as u8;
_15 = 60056462381449241183340340320292048765_u128 & 252356497442308086051268467175144860222_u128;
_11 = [_2,_9,_4];
_14.0.2 = (-26219_i16) & 4358_i16;
_10 = [_4,_2,_2];
(*_12) = 250_u8 << _9;
_15 = !324642713025865469251505709625532775079_u128;
_7 = [958233429812282426_u64,1030275905507151794_u64,4751482142092785028_u64,11402591009882434848_u64,12385094537822276298_u64];
_11 = [_9,_2,_4];
(*_12) = !248_u8;
_14.1 = core::ptr::addr_of_mut!(_15);
Call(_12 = fn3(_7, _1, _11, _15, _1, Move(_14.1), _3, RET, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_13 = [12910945576334236420_u64,3483966903284629996_u64,2768976550805708284_u64,9420691001920216627_u64,14780163720614786391_u64];
_2 = _9;
_14.1 = core::ptr::addr_of_mut!(_15);
_14.0.2 = 30182_i16;
RET = !_1.1;
RET = _1.1 * _1.1;
_14.0.2 = 8584_i16 | 6816_i16;
_1 = (_11, RET);
_1 = (_5, RET);
_4 = _9 | _9;
_18 = (_14.0.2, _2, _14.0.2);
_1.0 = [_2,_9,_2];
RET = _14.0.0 as i8;
_18.0 = -_18.2;
_8 = _1.0;
_12 = core::ptr::addr_of!(_17);
_18.1 = -_9;
_1.1 = RET | RET;
(*_12) = _14.0.0 << _18.1;
_9 = _4 * _4;
Goto(bb3)
}
bb3 = {
_18.0 = _14.0.2;
_8 = _5;
(*_12) = 31384_u16 as u8;
_18 = (_14.0.2, _2, _14.0.2);
_11 = _5;
_3 = [555351407239091122_u64,10486514851508503537_u64,7696476862634487264_u64,5329364017107550893_u64,3477028132475044541_u64];
_7 = _13;
_14.0.0 = 3763896932821021524_i64 as u8;
_4 = -_9;
Goto(bb4)
}
bb4 = {
_17 = _14.0.0;
_18.0 = 1678548808_i32 as i16;
_19 = _4 - _9;
_11 = [_9,_9,_4];
_1.1 = -RET;
_19 = !_9;
_18.2 = 6265297204716593153_i64 as i16;
_14.0.2 = _18.2 >> _19;
_19 = !_2;
_5 = _1.0;
_10 = [_4,_2,_4];
_3 = _7;
_8 = [_18.1,_4,_9];
_1 = (_11, RET);
_19 = _4;
_2 = _9;
_18.2 = _14.0.2 + _14.0.2;
RET = !_1.1;
_26 = Adt27::Variant0 { fld0: _9 };
Goto(bb5)
}
bb5 = {
_13 = _6;
(*_12) = _14.0.0;
_13 = [17997264190731465790_u64,992326115710787196_u64,8270356333601507588_u64,11137327807476050400_u64,7629914536362942538_u64];
_19 = _2 << _2;
_19 = _9 - _4;
_25.0 = &_14.0.0;
_2 = _19;
_22 = [RET,RET];
_8 = [_4,Field::<isize>(Variant(_26, 0), 0),_2];
_2 = _9;
_26 = Adt27::Variant0 { fld0: _2 };
_1.1 = _15 as i8;
_25.2.0 = true as u8;
_14.0.2 = -_18.2;
_18 = (_14.0.2, _19, _14.0.2);
_23 = (62132_u16, _18);
_21 = [_23.1.2,_18.0,_18.2,_23.1.2,_18.0,_23.1.2,_23.1.2];
_6 = [2961175626184736846_u64,374930194989800632_u64,3340286190003359171_u64,18076162822950643332_u64,8336373037131125426_u64];
_20 = !true;
_23.1.1 = Field::<isize>(Variant(_26, 0), 0);
_25.3 = !_14.0.0;
SetDiscriminant(_26, 1);
place!(Field::<u8>(Variant(_26, 1), 4)) = !_25.3;
_11 = [_18.1,_18.1,_19];
_3 = _7;
_4 = !_18.1;
Goto(bb6)
}
bb6 = {
_24 = !_17;
_10 = [_19,_18.1,_18.1];
_14.0.2 = _18.2 & _18.2;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = _14.0.2;
_25.2.2 = !_23.1.0;
_18.0 = _23.0 as i16;
_19 = _18.1 << _18.0;
_23.0 = !22541_u16;
_6 = _13;
_2 = _4;
_5 = [_2,_9,_4];
_23.1.2 = _18.0 * Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2;
Goto(bb7)
}
bb7 = {
_29.0.0 = [601056728_i32,1021807042_i32,(-313313725_i32),1768021911_i32];
_1.0 = [_19,_4,_18.1];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = _25.3;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2 as u8;
_28.0 = &(*_12);
_10 = _1.0;
_11 = _5;
_9 = -_19;
Goto(bb8)
}
bb8 = {
_28.3 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0;
_18.0 = _23.1.2;
_23.1 = (_18.0, _18.1, _18.0);
_9 = _2 << _19;
_18.1 = _9;
_23.1 = (Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2, _9, _18.0);
_1.1 = RET + RET;
_14.0.0 = !_25.2.0;
Goto(bb9)
}
bb9 = {
_35 = '\u{dee5f}';
_25.2.2 = _23.0 as i16;
_20 = !false;
_12 = core::ptr::addr_of!(_28.2.0);
place!(Field::<usize>(Variant(_26, 1), 3)) = 15798114731694859206_usize - 6_usize;
_31 = [_23.0,_23.0,_23.0,_23.0,_23.0,_23.0,_23.0,_23.0];
_7 = [8796041038535217511_u64,17431116008395227212_u64,17331567328149247558_u64,15935801868654988166_u64,4913162003995833590_u64];
_1.0 = [_19,_9,_2];
_4 = 6078843414702596689_i64 as isize;
_18 = (_23.1.0, _2, _14.0.2);
_34 = [_15,_15,_15,_15,_15,_15,_15,_15];
_28.1 = [_20,_20,_20,_20,_20];
Goto(bb10)
}
bb10 = {
_29.0.0 = [964013056_i32,1908687598_i32,(-484510160_i32),(-758218480_i32)];
_23.1.0 = 777661882495450533034121592977801011_i128 as i16;
_28.2.0 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0;
Goto(bb11)
}
bb11 = {
_19 = 9400600567733112379_u64 as isize;
Goto(bb12)
}
bb12 = {
_26 = Adt27::Variant0 { fld0: _23.1.1 };
_33 = [_25.2.0,_28.2.0,(*_12),(*_12),(*_12),(*_12)];
_11 = _1.0;
_27 = [(*_12),(*_12),(*_12),_28.2.0,(*_12),_17];
(*_12) = _28.3;
_1 = (_10, RET);
_26 = Adt27::Variant0 { fld0: _23.1.1 };
_14.1 = core::ptr::addr_of_mut!(_15);
_40 = _23.0 as i128;
RET = _1.1;
_25.1 = [_20,_20,_20,_20,_20];
_25.2.0 = (*_12) << _23.1.2;
_39 = _15 as usize;
_14.1 = core::ptr::addr_of_mut!(_15);
_42.0.2 = _35;
_23.0 = 55995_u16 ^ 23288_u16;
_23.1.1 = -Field::<isize>(Variant(_26, 0), 0);
_18.0 = _18.1 as i16;
_1.0 = [_9,_9,_18.1];
_42.1 = 2454424889_u32;
match _42.1 {
0 => bb5,
1 => bb7,
2 => bb9,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
2454424889 => bb18,
_ => bb17
}
}
bb13 = {
_18.0 = _14.0.2;
_8 = _5;
(*_12) = 31384_u16 as u8;
_18 = (_14.0.2, _2, _14.0.2);
_11 = _5;
_3 = [555351407239091122_u64,10486514851508503537_u64,7696476862634487264_u64,5329364017107550893_u64,3477028132475044541_u64];
_7 = _13;
_14.0.0 = 3763896932821021524_i64 as u8;
_4 = -_9;
Goto(bb4)
}
bb14 = {
_13 = [12910945576334236420_u64,3483966903284629996_u64,2768976550805708284_u64,9420691001920216627_u64,14780163720614786391_u64];
_2 = _9;
_14.1 = core::ptr::addr_of_mut!(_15);
_14.0.2 = 30182_i16;
RET = !_1.1;
RET = _1.1 * _1.1;
_14.0.2 = 8584_i16 | 6816_i16;
_1 = (_11, RET);
_1 = (_5, RET);
_4 = _9 | _9;
_18 = (_14.0.2, _2, _14.0.2);
_1.0 = [_2,_9,_2];
RET = _14.0.0 as i8;
_18.0 = -_18.2;
_8 = _1.0;
_12 = core::ptr::addr_of!(_17);
_18.1 = -_9;
_1.1 = RET | RET;
(*_12) = _14.0.0 << _18.1;
_9 = _4 * _4;
Goto(bb3)
}
bb15 = {
_24 = !_17;
_10 = [_19,_18.1,_18.1];
_14.0.2 = _18.2 & _18.2;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = _14.0.2;
_25.2.2 = !_23.1.0;
_18.0 = _23.0 as i16;
_19 = _18.1 << _18.0;
_23.0 = !22541_u16;
_6 = _13;
_2 = _4;
_5 = [_2,_9,_4];
_23.1.2 = _18.0 * Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2;
Goto(bb7)
}
bb16 = {
_28.3 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0;
_18.0 = _23.1.2;
_23.1 = (_18.0, _18.1, _18.0);
_9 = _2 << _19;
_18.1 = _9;
_23.1 = (Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2, _9, _18.0);
_1.1 = RET + RET;
_14.0.0 = !_25.2.0;
Goto(bb9)
}
bb17 = {
_4 = _2;
_14.0.0 = 125_u8;
_12 = core::ptr::addr_of!(_14.0.0);
_14.0.2 = 9205_i16 & (-8937_i16);
_1.1 = RET | RET;
(*_12) = 135_u8 | 168_u8;
_1 = (_8, RET);
_1.0 = [_2,_4,_4];
_9 = _2;
_14.0.0 = 5_usize as u8;
_15 = 60056462381449241183340340320292048765_u128 & 252356497442308086051268467175144860222_u128;
_11 = [_2,_9,_4];
_14.0.2 = (-26219_i16) & 4358_i16;
_10 = [_4,_2,_2];
(*_12) = 250_u8 << _9;
_15 = !324642713025865469251505709625532775079_u128;
_7 = [958233429812282426_u64,1030275905507151794_u64,4751482142092785028_u64,11402591009882434848_u64,12385094537822276298_u64];
_11 = [_9,_2,_4];
(*_12) = !248_u8;
_14.1 = core::ptr::addr_of_mut!(_15);
Call(_12 = fn3(_7, _1, _11, _15, _1, Move(_14.1), _3, RET, _13), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_45 = (_29.0.0,);
SetDiscriminant(_26, 0);
_11 = [_9,_2,_9];
Goto(bb19)
}
bb19 = {
_3 = [13842810516945810315_u64,15150102831048990210_u64,7918561259020017270_u64,13300369229534494536_u64,16800275981115649899_u64];
_42.0.3 = _23.1.1 as i64;
_25.2.0 = !_28.3;
_23.1.0 = _42.0.3 as i16;
(*_12) = _25.2.0;
_42.1 = 1957558629_u32;
_42.2 = !10729908884805098056_u64;
_38 = _23.1.1 as f64;
_28.1 = _25.1;
place!(Field::<isize>(Variant(_26, 0), 0)) = _23.1.1;
_22 = [_1.1,RET];
_42.0.1 = _23.0 << _23.1.2;
_37 = _42.0.3 as u8;
_29 = (_45,);
_7 = _6;
SetDiscriminant(_26, 1);
_28.1 = [_20,_20,_20,_20,_20];
_25.3 = !_28.2.0;
_1.0 = [_9,_23.1.1,_23.1.1];
_42.3 = -_38;
_1 = (_11, RET);
place!(Field::<u64>(Variant(_26, 1), 0)) = _15 as u64;
Goto(bb20)
}
bb20 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = _25.2.0;
_33 = _27;
_28.1 = [_20,_20,_20,_20,_20];
_14.0.0 = (*_12);
_30 = &_18.0;
_1 = (_11, RET);
Goto(bb21)
}
bb21 = {
_1.1 = !RET;
_22 = [RET,RET];
place!(Field::<f64>(Variant(_26, 1), 1)) = -_42.3;
_14.1 = core::ptr::addr_of_mut!(_15);
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = _28.3 >> _28.2.0;
_1.0 = _10;
_6 = [_42.2,_42.2,_42.2,Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0)];
_28.2.2 = _20 as i16;
_47 = _9;
Goto(bb22)
}
bb22 = {
_34 = [_15,_15,_15,_15,_15,_15,_15,_15];
_33 = _27;
_1.0 = [_18.1,_47,_23.1.1];
place!(Field::<usize>(Variant(_26, 1), 3)) = _39;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = _28.3;
_42.0 = (Move(_30), _23.0, _35, 257085058960457929_i64);
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = _23.1.2 * _23.1.0;
RET = _23.1.1 as i8;
place!(Field::<f64>(Variant(_26, 1), 1)) = _38;
_26 = Adt27::Variant0 { fld0: _2 };
_5 = _10;
_30 = &_28.2.2;
_18.2 = !_23.1.0;
_55.0.2 = !_18.2;
Goto(bb23)
}
bb23 = {
Call(_58 = dump_var(2_usize, 17_usize, Move(_17), 40_usize, Move(_40), 21_usize, Move(_21), 6_usize, Move(_6)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_58 = dump_var(2_usize, 22_usize, Move(_22), 37_usize, Move(_37), 9_usize, Move(_9), 35_usize, Move(_35)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_58 = dump_var(2_usize, 45_usize, Move(_45), 47_usize, Move(_47), 39_usize, Move(_39), 23_usize, Move(_23)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_58 = dump_var(2_usize, 18_usize, Move(_18), 7_usize, Move(_7), 13_usize, Move(_13), 33_usize, Move(_33)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: [u64; 5],mut _2: ([isize; 3], i8),mut _3: [isize; 3],mut _4: u128,mut _5: ([isize; 3], i8),mut _6: *mut u128,mut _7: [u64; 5],mut _8: i8,mut _9: [u64; 5]) -> *const u8 {
mir! {
type RET = *const u8;
let _10: *mut i8;
let _11: [i32; 4];
let _12: *mut *const u8;
let _13: [u128; 8];
let _14: (u16, (i16, isize, i16));
let _15: f32;
let _16: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _17: f64;
let _18: (([i32; 4],),);
let _19: &'static [i8; 3];
let _20: &'static i16;
let _21: *mut [i8; 3];
let _22: *const [u16; 4];
let _23: bool;
let _24: [u64; 3];
let _25: *mut u128;
let _26: Adt27;
let _27: [i16; 4];
let _28: f64;
let _29: bool;
let _30: [u16; 8];
let _31: char;
let _32: isize;
let _33: [i128; 7];
let _34: usize;
let _35: (*const u8, i16);
let _36: [u16; 4];
let _37: (i16, isize, i16);
let _38: i8;
let _39: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _40: u128;
let _41: &'static (&'static i16, u16, char, i64);
let _42: [i128; 7];
let _43: bool;
let _44: bool;
let _45: [u8; 6];
let _46: (i16, isize, i16);
let _47: [u8; 6];
let _48: ([i32; 4],);
let _49: f32;
let _50: *mut *const *mut i8;
let _51: u128;
let _52: u8;
let _53: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _54: [i128; 7];
let _55: (i16, isize, i16);
let _56: i64;
let _57: [i16; 7];
let _58: isize;
let _59: *const &'static f64;
let _60: *const i32;
let _61: u8;
let _62: bool;
let _63: [i32; 4];
let _64: [bool; 5];
let _65: [u16; 4];
let _66: u32;
let _67: [i16; 7];
let _68: *mut [u64; 3];
let _69: char;
let _70: u128;
let _71: usize;
let _72: f32;
let _73: u128;
let _74: char;
let _75: f32;
let _76: isize;
let _77: &'static (&'static i16, u16, char, i64);
let _78: i8;
let _79: u64;
let _80: &'static u64;
let _81: [i8; 3];
let _82: isize;
let _83: char;
let _84: &'static u8;
let _85: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _86: (u16, (i16, isize, i16));
let _87: *const &'static f64;
let _88: isize;
let _89: ([isize; 3], i8);
let _90: isize;
let _91: &'static u8;
let _92: [u128; 8];
let _93: [u64; 5];
let _94: *mut [i8; 3];
let _95: [u16; 8];
let _96: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _97: ();
let _98: ();
{
_12 = core::ptr::addr_of_mut!(RET);
_8 = _5.1;
_6 = core::ptr::addr_of_mut!(_4);
_1 = [1459065101681918467_u64,11602604495129942153_u64,11179236953265214323_u64,620506544349591245_u64,15806532654669376487_u64];
_10 = core::ptr::addr_of_mut!(_8);
_12 = core::ptr::addr_of_mut!(RET);
_1 = [18078988547472097513_u64,1289442985037676431_u64,3379877461859471473_u64,16991668860380954082_u64,16112829132627455685_u64];
_5.0 = _2.0;
_13 = [(*_6),_4,(*_6),_4,_4,(*_6),(*_6),(*_6)];
_13 = [_4,(*_6),(*_6),(*_6),(*_6),_4,(*_6),(*_6)];
(*_6) = !39885003158878473777721043263123976238_u128;
(*_6) = 2003778983_u32 as u128;
(*_6) = 165460505628759760576904176342380686163_u128;
_12 = core::ptr::addr_of_mut!(RET);
_5.0 = _3;
_1 = _9;
_1 = [959046027234622704_u64,5143748273810710716_u64,17542858778422123769_u64,14429907307723346400_u64,11269322155745802356_u64];
_13 = [(*_6),_4,_4,(*_6),(*_6),(*_6),_4,(*_6)];
_4 = 283310408914907512613867495343994071037_u128;
_14.1.2 = _8 as i16;
_14.1.1 = _4 as isize;
(*_6) = _8 as u128;
_8 = 1771202911_u32 as i8;
_6 = core::ptr::addr_of_mut!(_4);
_5.1 = -_2.1;
Call((*_12) = fn4(Move(_6)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _9;
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_3 = [_14.1.1,_14.1.1,_14.1.1];
_2.1 = -(*_10);
_8 = _14.1.2 as i8;
_5.0 = _3;
(*_10) = true as i8;
_14.1 = ((-28385_i16), (-48_isize), 3639_i16);
_14.0 = 20050_u16 >> _14.1.1;
_14.1.0 = !_14.1.2;
_5.1 = (*_10);
_1 = _9;
_3 = [_14.1.1,_14.1.1,_14.1.1];
_6 = core::ptr::addr_of_mut!(_4);
(*_10) = _2.1 * _5.1;
_1 = [15467433363490553921_u64,9877734058880687782_u64,12218802806419123255_u64,1260221227177411111_u64,6969647877700602876_u64];
_13 = [(*_6),_4,_4,(*_6),(*_6),(*_6),(*_6),(*_6)];
_4 = (*_10) as u128;
_9 = [18306036270654961240_u64,9120097079227761119_u64,1394298912081358622_u64,14673072018732049859_u64,10630897184271630272_u64];
_4 = 130904336763040143512727574526133164767_u128 << _14.0;
(*_10) = !_5.1;
_2.1 = !(*_10);
_7 = _9;
_14.1.0 = 10483499777044837404_u64 as i16;
_14.1 = (6874_i16, (-9223372036854775808_isize), 32165_i16);
_11 = [933351602_i32,73559936_i32,1873683752_i32,(-1175953323_i32)];
_12 = core::ptr::addr_of_mut!((*_12));
(*_6) = (-162545138383715817433105297894454900412_i128) as u128;
match _14.1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
32165 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
(*_10) = -_5.1;
_12 = core::ptr::addr_of_mut!(RET);
_7 = [14307940697038228446_u64,13243756715326704423_u64,1051282271809573072_u64,9817017029411610982_u64,16133440485265214104_u64];
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_2 = (_3, _8);
_10 = core::ptr::addr_of_mut!(_5.1);
_14.1 = ((-1975_i16), (-41_isize), 1494_i16);
_14.0 = 10409_u16 - 7475_u16;
_4 = 68410441304816282654929684274910472843_u128;
_2 = _5;
_5 = (_3, _8);
_5.1 = _8;
_15 = (*_10) as f32;
_6 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
(*_6) = _14.1.0 as u128;
match _14.1.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211415 => bb14,
_ => bb13
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
(*_10) = -_2.1;
_4 = 558117668011472802_i64 as u128;
_11 = [1505289336_i32,784227327_i32,(-74443131_i32),(-1683318697_i32)];
_2 = (_3, (*_10));
_20 = &_14.1.0;
_6 = core::ptr::addr_of_mut!((*_6));
(*_10) = (-2601268466355047532_i64) as i8;
_24 = [7633883579438618366_u64,3000913129381201408_u64,14746241106386523438_u64];
_20 = &(*_20);
(*_6) = 205434306932950594777528353585441202817_u128 * 228916218455547619163393828399618198222_u128;
_2.1 = (-7884455248276071231_i64) as i8;
(*_6) = _15 as u128;
_2.1 = !_8;
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
_10 = core::ptr::addr_of_mut!(_5.1);
_25 = Move(_6);
_20 = &(*_20);
_14.1 = (27475_i16, 9223372036854775807_isize, 25705_i16);
_3 = [_14.1.1,_14.1.1,_14.1.1];
_6 = Move(_25);
Goto(bb15)
}
bb15 = {
_27 = [_14.1.0,_14.1.0,_14.1.2,_14.1.0];
_12 = core::ptr::addr_of_mut!((*_12));
_7 = [16240467190473040333_u64,14982926249947517424_u64,2686906510257526006_u64,325611358850511750_u64,10473055328274110674_u64];
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
(*_10) = _2.1 >> _14.1.2;
Goto(bb16)
}
bb16 = {
_2 = (_5.0, _5.1);
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_24 = [14170893845852793048_u64,15182997244056318174_u64,7547202739164882022_u64];
_26 = Adt27::Variant0 { fld0: _14.1.1 };
_24 = [17873309133545396212_u64,17368364087622507537_u64,18093524755694616469_u64];
_17 = _15 as f64;
_14.1 = ((-9047_i16), Field::<isize>(Variant(_26, 0), 0), 25144_i16);
_24 = [4115517087043665141_u64,2175354720612500905_u64,16904819065814964591_u64];
_12 = core::ptr::addr_of_mut!((*_12));
_28 = -_17;
_5.0 = _2.0;
_18.0.0 = _11;
_1 = [134410325788394676_u64,15129853390112075729_u64,9639450030843265887_u64,10016520061989237543_u64,121871740232011580_u64];
_24 = [8409413557592565931_u64,3204033549055144379_u64,3720470969271196793_u64];
_13 = [_4,_4,_4,_4,_4,_4,_4,_4];
_9 = [9829851743091232815_u64,3659553647247649070_u64,17602814438078474190_u64,14960829333925284630_u64,11575187589681391967_u64];
Goto(bb17)
}
bb17 = {
_23 = true & false;
_2.1 = _5.1;
_15 = (-4349687562675322015_i64) as f32;
_25 = Move(_6);
(*_10) = _14.0 as i8;
_2 = _5;
SetDiscriminant(_26, 1);
_5 = (_2.0, _2.1);
_1 = [244044718206999106_u64,13218036683985152699_u64,112262044397947834_u64,2976556470007124593_u64,2230952269074782739_u64];
place!(Field::<f64>(Variant(_26, 1), 1)) = _17;
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
place!(Field::<u8>(Variant(_26, 1), 4)) = 250_u8;
place!(Field::<u64>(Variant(_26, 1), 0)) = _14.1.2 as u64;
Goto(bb18)
}
bb18 = {
_24 = [Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0)];
place!(Field::<usize>(Variant(_26, 1), 3)) = 0_usize | 5739520022534803877_usize;
_25 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
_23 = false;
_5 = _2;
_31 = '\u{3f29d}';
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = Field::<u8>(Variant(_26, 1), 4) / Field::<u8>(Variant(_26, 1), 4);
_10 = core::ptr::addr_of_mut!(_2.1);
_29 = _14.1.2 != _14.1.2;
_14.0 = 14883_u16;
_18.0.0 = [(-256171743_i32),(-346448865_i32),(-647327797_i32),(-1729340047_i32)];
_10 = core::ptr::addr_of_mut!(_5.1);
_15 = Field::<u8>(Variant(_26, 1), 4) as f32;
_14.1.1 = -(-9223372036854775808_isize);
place!(Field::<f64>(Variant(_26, 1), 1)) = _28 * _28;
_18.0.0 = [(-199824907_i32),(-1610889784_i32),1538694846_i32,(-1886328730_i32)];
_4 = !223916359662946421433806580312991692183_u128;
Call(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = core::intrinsics::bswap(_14.1.0), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
place!(Field::<f64>(Variant(_26, 1), 1)) = _17 * _28;
_14.1.2 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2 - Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2;
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_27 = [Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2,Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2,_14.1.2,_14.1.2];
_5.1 = _2.1 * _8;
match _14.0 {
0 => bb9,
1 => bb20,
14883 => bb22,
_ => bb21
}
}
bb20 = {
_27 = [_14.1.0,_14.1.0,_14.1.2,_14.1.0];
_12 = core::ptr::addr_of_mut!((*_12));
_7 = [16240467190473040333_u64,14982926249947517424_u64,2686906510257526006_u64,325611358850511750_u64,10473055328274110674_u64];
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
(*_10) = _2.1 >> _14.1.2;
Goto(bb16)
}
bb21 = {
Return()
}
bb22 = {
_14.1.2 = _2.1 as i16;
_2.0 = _5.0;
_2.1 = !_5.1;
_31 = '\u{b1bed}';
_18.0 = (_11,);
_34 = !Field::<usize>(Variant(_26, 1), 3);
_32 = _28 as isize;
_6 = core::ptr::addr_of_mut!((*_25));
(*_25) = 313194456625283606685057292331851716642_u128 - 118451720181014384291927915012327907690_u128;
RET = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0);
_35 = (Move((*_12)), _14.1.0);
_2.1 = _14.1.1 as i8;
(*_25) = 25974906707973565498235808089329237889_u128;
match _14.0 {
0 => bb7,
1 => bb8,
2 => bb23,
3 => bb24,
14883 => bb26,
_ => bb25
}
}
bb23 = {
_2 = (_5.0, _5.1);
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_24 = [14170893845852793048_u64,15182997244056318174_u64,7547202739164882022_u64];
_26 = Adt27::Variant0 { fld0: _14.1.1 };
_24 = [17873309133545396212_u64,17368364087622507537_u64,18093524755694616469_u64];
_17 = _15 as f64;
_14.1 = ((-9047_i16), Field::<isize>(Variant(_26, 0), 0), 25144_i16);
_24 = [4115517087043665141_u64,2175354720612500905_u64,16904819065814964591_u64];
_12 = core::ptr::addr_of_mut!((*_12));
_28 = -_17;
_5.0 = _2.0;
_18.0.0 = _11;
_1 = [134410325788394676_u64,15129853390112075729_u64,9639450030843265887_u64,10016520061989237543_u64,121871740232011580_u64];
_24 = [8409413557592565931_u64,3204033549055144379_u64,3720470969271196793_u64];
_13 = [_4,_4,_4,_4,_4,_4,_4,_4];
_9 = [9829851743091232815_u64,3659553647247649070_u64,17602814438078474190_u64,14960829333925284630_u64,11575187589681391967_u64];
Goto(bb17)
}
bb24 = {
(*_10) = -_5.1;
_12 = core::ptr::addr_of_mut!(RET);
_7 = [14307940697038228446_u64,13243756715326704423_u64,1051282271809573072_u64,9817017029411610982_u64,16133440485265214104_u64];
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_2 = (_3, _8);
_10 = core::ptr::addr_of_mut!(_5.1);
_14.1 = ((-1975_i16), (-41_isize), 1494_i16);
_14.0 = 10409_u16 - 7475_u16;
_4 = 68410441304816282654929684274910472843_u128;
_2 = _5;
_5 = (_3, _8);
_5.1 = _8;
_15 = (*_10) as f32;
_6 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
(*_6) = _14.1.0 as u128;
match _14.1.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211415 => bb14,
_ => bb13
}
}
bb25 = {
Return()
}
bb26 = {
_28 = _17;
_4 = 29938670423154718324877186087893228321_u128 ^ 111518810272190962089226748821552502178_u128;
_33 = [7224324183144566550082982187406261078_i128,(-13141738837760020772892408659968921845_i128),151790971585044864845612888757302910655_i128,(-143608421935063102105370681404443784128_i128),(-79692540900155706278189238117133396497_i128),(-90302913861087819816086133193505729425_i128),(-155059712075607284663041806936325760620_i128)];
_37 = _14.1;
_23 = _29;
_38 = (*_10) + (*_10);
_36 = [_14.0,_14.0,_14.0,_14.0];
_14.1.0 = _37.2;
(*_12) = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0);
_3 = [_32,_37.1,_14.1.1];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_26, 1), 0),fld1: (*_25),fld2: Field::<u8>(Variant(_26, 1), 4),fld3: _15,fld4: 3790354715_u32,fld5: (-2119473550_i32),fld6: (-6291778719069312526_i64) };
_35.0 = core::ptr::addr_of!((*RET));
(*RET) = Field::<u8>(Variant(_26, 1), 4) + Field::<u8>(Variant(_26, 1), 4);
_22 = core::ptr::addr_of!(_36);
RET = Move(_35.0);
_27 = [Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2,Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2,_35.1,_14.1.0];
place!(Field::<f32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 3)) = Field::<u8>(Variant(_26, 1), 4) as f32;
(*_25) = (-43410503092728041377924218536181502399_i128) as u128;
place!(Field::<f32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 3)) = -_15;
match _35.1 {
0 => bb1,
1 => bb7,
2 => bb17,
3 => bb27,
4 => bb28,
5 => bb29,
6 => bb30,
340282366920938463463374607431768202409 => bb32,
_ => bb31
}
}
bb27 = {
Return()
}
bb28 = {
(*_10) = -_5.1;
_12 = core::ptr::addr_of_mut!(RET);
_7 = [14307940697038228446_u64,13243756715326704423_u64,1051282271809573072_u64,9817017029411610982_u64,16133440485265214104_u64];
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_2 = (_3, _8);
_10 = core::ptr::addr_of_mut!(_5.1);
_14.1 = ((-1975_i16), (-41_isize), 1494_i16);
_14.0 = 10409_u16 - 7475_u16;
_4 = 68410441304816282654929684274910472843_u128;
_2 = _5;
_5 = (_3, _8);
_5.1 = _8;
_15 = (*_10) as f32;
_6 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
(*_6) = _14.1.0 as u128;
match _14.1.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211415 => bb14,
_ => bb13
}
}
bb29 = {
_2 = (_5.0, _5.1);
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_24 = [14170893845852793048_u64,15182997244056318174_u64,7547202739164882022_u64];
_26 = Adt27::Variant0 { fld0: _14.1.1 };
_24 = [17873309133545396212_u64,17368364087622507537_u64,18093524755694616469_u64];
_17 = _15 as f64;
_14.1 = ((-9047_i16), Field::<isize>(Variant(_26, 0), 0), 25144_i16);
_24 = [4115517087043665141_u64,2175354720612500905_u64,16904819065814964591_u64];
_12 = core::ptr::addr_of_mut!((*_12));
_28 = -_17;
_5.0 = _2.0;
_18.0.0 = _11;
_1 = [134410325788394676_u64,15129853390112075729_u64,9639450030843265887_u64,10016520061989237543_u64,121871740232011580_u64];
_24 = [8409413557592565931_u64,3204033549055144379_u64,3720470969271196793_u64];
_13 = [_4,_4,_4,_4,_4,_4,_4,_4];
_9 = [9829851743091232815_u64,3659553647247649070_u64,17602814438078474190_u64,14960829333925284630_u64,11575187589681391967_u64];
Goto(bb17)
}
bb30 = {
Return()
}
bb31 = {
_27 = [_14.1.0,_14.1.0,_14.1.2,_14.1.0];
_12 = core::ptr::addr_of_mut!((*_12));
_7 = [16240467190473040333_u64,14982926249947517424_u64,2686906510257526006_u64,325611358850511750_u64,10473055328274110674_u64];
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
(*_10) = _2.1 >> _14.1.2;
Goto(bb16)
}
bb32 = {
_20 = &_37.0;
place!(Field::<u32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 4)) = 3208267671_u32 - 837059247_u32;
_35.1 = -_37.0;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = _14.1.0 ^ (*_20);
(*_6) = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1) | Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1);
(*_6) = !Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1);
_14 = (56654_u16, _37);
(*_10) = !_38;
_22 = core::ptr::addr_of!((*_22));
_14.1.0 = _31 as i16;
_27 = [_37.0,(*_20),(*_20),Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = _14.1.2 & _37.2;
match _14.0 {
0 => bb25,
1 => bb20,
2 => bb3,
3 => bb10,
4 => bb12,
5 => bb28,
6 => bb33,
56654 => bb35,
_ => bb34
}
}
bb33 = {
_27 = [_14.1.0,_14.1.0,_14.1.2,_14.1.0];
_12 = core::ptr::addr_of_mut!((*_12));
_7 = [16240467190473040333_u64,14982926249947517424_u64,2686906510257526006_u64,325611358850511750_u64,10473055328274110674_u64];
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
(*_10) = _2.1 >> _14.1.2;
Goto(bb16)
}
bb34 = {
Return()
}
bb35 = {
_31 = '\u{75fde}';
_40 = _28 as u128;
_20 = &_14.1.0;
_17 = _35.1 as f64;
_46.1 = !_32;
_5.1 = _38 ^ _38;
_37.0 = (*_20);
(*_10) = -_8;
_18.0 = (_11,);
_7 = _1;
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 6)) = !4542251691756215016_i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant0 { fld0: Move(_10),fld1: (-7480491605807870162_i64),fld2: Field::<u64>(Variant(_26, 1), 0),fld3: Field::<usize>(Variant(_26, 1), 3) };
(*_22) = [_14.0,_14.0,_14.0,_14.0];
_44 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0 >= Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0;
_15 = (-4447623078049736672_i64) as f32;
_48.0 = [332628754_i32,(-1122975411_i32),(-1801793744_i32),(-603633594_i32)];
(*_22) = [_14.0,_14.0,_14.0,_14.0];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = Field::<u8>(Variant(_26, 1), 4) & Field::<u8>(Variant(_26, 1), 4);
_42 = _33;
_5 = _2;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_26, 1), 0),fld1: _4,fld2: Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0,fld3: _15,fld4: 2621651660_u32,fld5: (-1950225356_i32),fld6: 9204303645101498776_i64 };
_5 = (_2.0, _2.1);
match Field::<u8>(Variant(_26, 1), 4) {
0 => bb29,
1 => bb32,
250 => bb37,
_ => bb36
}
}
bb36 = {
_24 = [Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0)];
place!(Field::<usize>(Variant(_26, 1), 3)) = 0_usize | 5739520022534803877_usize;
_25 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
_23 = false;
_5 = _2;
_31 = '\u{3f29d}';
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = Field::<u8>(Variant(_26, 1), 4) / Field::<u8>(Variant(_26, 1), 4);
_10 = core::ptr::addr_of_mut!(_2.1);
_29 = _14.1.2 != _14.1.2;
_14.0 = 14883_u16;
_18.0.0 = [(-256171743_i32),(-346448865_i32),(-647327797_i32),(-1729340047_i32)];
_10 = core::ptr::addr_of_mut!(_5.1);
_15 = Field::<u8>(Variant(_26, 1), 4) as f32;
_14.1.1 = -(-9223372036854775808_isize);
place!(Field::<f64>(Variant(_26, 1), 1)) = _28 * _28;
_18.0.0 = [(-199824907_i32),(-1610889784_i32),1538694846_i32,(-1886328730_i32)];
_4 = !223916359662946421433806580312991692183_u128;
Call(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = core::intrinsics::bswap(_14.1.0), ReturnTo(bb19), UnwindUnreachable())
}
bb37 = {
_11 = _48.0;
RET = core::ptr::addr_of!(place!(Field::<u8>(Variant(_26, 1), 4)));
_43 = _37.2 != Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2;
place!(Field::<u8>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 2)) = !(*RET);
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 6)) = 3629866026877975578_i64;
_46.1 = _32 * _37.1;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = !(*RET);
match Field::<u8>(Variant(_26, 1), 4) {
250 => bb38,
_ => bb30
}
}
bb38 = {
_9 = [Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 0),Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 0)];
_45 = [Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0,(*RET),Field::<u8>(Variant(_26, 1), 4),Field::<u8>(Variant(_26, 1), 4),Field::<u8>(Variant(_26, 1), 4),Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0];
RET = core::ptr::addr_of!(place!(Field::<u8>(Variant(_26, 1), 4)));
_35 = (Move((*_12)), _14.1.2);
_31 = '\u{de844}';
_36 = [_14.0,_14.0,_14.0,_14.0];
_48.0 = [1282565778_i32,(-885674457_i32),(-806878552_i32),1759394574_i32];
_45 = [Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 2),Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0,Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0,Field::<u8>(Variant(_26, 1), 4),Field::<u8>(Variant(_26, 1), 4),Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 2)];
(*_22) = [_14.0,_14.0,_14.0,_14.0];
place!(Field::<f64>(Variant(_26, 1), 1)) = _17 * _17;
_40 = (*_6) + (*_6);
_1 = [Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 0),Field::<u64>(Variant(_26, 1), 0),Field::<u64>(Variant(_26, 1), 0)];
_28 = _14.0 as f64;
(*_25) = _40 >> _38;
place!(Field::<u64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 0)) = !Field::<u64>(Variant(_26, 1), 0);
_2.0 = _5.0;
(*_25) = !_40;
_11 = [1634653676_i32,1402658471_i32,(-681408818_i32),(-219851382_i32)];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).2 = !_14.1.2;
_4 = !_40;
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 6)) = !9057704048526412959_i64;
_37.1 = 1238279750_u32 as isize;
_11 = _48.0;
_46 = (_37.2, _32, _37.2);
_35.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_26, 1), 4)));
_37.2 = -_35.1;
_55.2 = _14.1.2;
_37 = (Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2, _32, Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).2);
_4 = !Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1);
match _14.0 {
0 => bb8,
1 => bb14,
2 => bb39,
3 => bb40,
4 => bb41,
5 => bb42,
56654 => bb44,
_ => bb43
}
}
bb39 = {
_7 = _9;
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_3 = [_14.1.1,_14.1.1,_14.1.1];
_2.1 = -(*_10);
_8 = _14.1.2 as i8;
_5.0 = _3;
(*_10) = true as i8;
_14.1 = ((-28385_i16), (-48_isize), 3639_i16);
_14.0 = 20050_u16 >> _14.1.1;
_14.1.0 = !_14.1.2;
_5.1 = (*_10);
_1 = _9;
_3 = [_14.1.1,_14.1.1,_14.1.1];
_6 = core::ptr::addr_of_mut!(_4);
(*_10) = _2.1 * _5.1;
_1 = [15467433363490553921_u64,9877734058880687782_u64,12218802806419123255_u64,1260221227177411111_u64,6969647877700602876_u64];
_13 = [(*_6),_4,_4,(*_6),(*_6),(*_6),(*_6),(*_6)];
_4 = (*_10) as u128;
_9 = [18306036270654961240_u64,9120097079227761119_u64,1394298912081358622_u64,14673072018732049859_u64,10630897184271630272_u64];
_4 = 130904336763040143512727574526133164767_u128 << _14.0;
(*_10) = !_5.1;
_2.1 = !(*_10);
_7 = _9;
_14.1.0 = 10483499777044837404_u64 as i16;
_14.1 = (6874_i16, (-9223372036854775808_isize), 32165_i16);
_11 = [933351602_i32,73559936_i32,1873683752_i32,(-1175953323_i32)];
_12 = core::ptr::addr_of_mut!((*_12));
(*_6) = (-162545138383715817433105297894454900412_i128) as u128;
match _14.1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
32165 => bb8,
_ => bb7
}
}
bb40 = {
(*_10) = -_5.1;
_12 = core::ptr::addr_of_mut!(RET);
_7 = [14307940697038228446_u64,13243756715326704423_u64,1051282271809573072_u64,9817017029411610982_u64,16133440485265214104_u64];
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_2 = (_3, _8);
_10 = core::ptr::addr_of_mut!(_5.1);
_14.1 = ((-1975_i16), (-41_isize), 1494_i16);
_14.0 = 10409_u16 - 7475_u16;
_4 = 68410441304816282654929684274910472843_u128;
_2 = _5;
_5 = (_3, _8);
_5.1 = _8;
_15 = (*_10) as f32;
_6 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
(*_6) = _14.1.0 as u128;
match _14.1.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211415 => bb14,
_ => bb13
}
}
bb41 = {
_31 = '\u{75fde}';
_40 = _28 as u128;
_20 = &_14.1.0;
_17 = _35.1 as f64;
_46.1 = !_32;
_5.1 = _38 ^ _38;
_37.0 = (*_20);
(*_10) = -_8;
_18.0 = (_11,);
_7 = _1;
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 6)) = !4542251691756215016_i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant0 { fld0: Move(_10),fld1: (-7480491605807870162_i64),fld2: Field::<u64>(Variant(_26, 1), 0),fld3: Field::<usize>(Variant(_26, 1), 3) };
(*_22) = [_14.0,_14.0,_14.0,_14.0];
_44 = Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0 >= Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0;
_15 = (-4447623078049736672_i64) as f32;
_48.0 = [332628754_i32,(-1122975411_i32),(-1801793744_i32),(-603633594_i32)];
(*_22) = [_14.0,_14.0,_14.0,_14.0];
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = Field::<u8>(Variant(_26, 1), 4) & Field::<u8>(Variant(_26, 1), 4);
_42 = _33;
_5 = _2;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_26, 1), 0),fld1: _4,fld2: Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).0,fld3: _15,fld4: 2621651660_u32,fld5: (-1950225356_i32),fld6: 9204303645101498776_i64 };
_5 = (_2.0, _2.1);
match Field::<u8>(Variant(_26, 1), 4) {
0 => bb29,
1 => bb32,
250 => bb37,
_ => bb36
}
}
bb42 = {
Return()
}
bb43 = {
Return()
}
bb44 = {
_4 = _40;
_26 = Adt27::Variant0 { fld0: _37.1 };
_5.1 = _8 + _2.1;
_46.1 = _37.1;
_49 = _55.2 as f32;
(*_6) = _34 as u128;
_35.1 = _14.1.2 << _14.0;
_36 = [_14.0,_14.0,_14.0,_14.0];
_12 = core::ptr::addr_of_mut!((*_12));
_11 = [1175239082_i32,765892459_i32,109150781_i32,(-1763546039_i32)];
RET = core::ptr::addr_of!(_61);
(*RET) = 85_u8 & 28_u8;
(*_12) = core::ptr::addr_of!(_61);
(*RET) = _43 as u8;
_28 = _17 + _17;
_58 = _32 + Field::<isize>(Variant(_26, 0), 0);
_45 = [(*RET),(*RET),(*RET),_61,(*RET),(*RET)];
Goto(bb45)
}
bb45 = {
_55.0 = _46.1 as i16;
_48 = (_18.0.0,);
_52 = _61;
_47 = [_52,_52,(*RET),_52,(*RET),(*RET)];
SetDiscriminant(_26, 1);
Call((*RET) = core::intrinsics::bswap(_52), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
_17 = -_28;
_61 = !_52;
(*_12) = Move(_35.0);
_54 = _42;
_14.1 = (_46.0, _58, _46.0);
_66 = !1940874271_u32;
_18.0 = (_48.0,);
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1 = Adt20::Variant1 { fld0: 1093573229049191345_u64,fld1: (*_6),fld2: _52,fld3: _49,fld4: _66,fld5: 1827788107_i32,fld6: 4927237405172328132_i64 };
_58 = -_46.1;
_2.1 = _29 as i8;
_37.2 = !_46.2;
_44 = !_29;
_55.1 = _46.1;
_8 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 4) as i8;
_10 = core::ptr::addr_of_mut!(_2.1);
place!(Field::<f64>(Variant(_26, 1), 1)) = -_28;
_29 = !_23;
_72 = _49 + _15;
RET = core::ptr::addr_of!(_52);
_46.2 = _14.1.2;
_73 = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1);
Call(place!(Field::<u8>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 2)) = core::intrinsics::transmute((*RET)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
_48.0 = _11;
_47 = [(*RET),(*RET),Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 2),Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 2),(*RET),(*RET)];
_40 = _4;
place!(Field::<usize>(Variant(_26, 1), 3)) = _17 as usize;
_55.0 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 4) as i16;
(*_22) = [_14.0,_14.0,_14.0,_14.0];
_55.0 = _35.1;
_42 = [165934144221762936844078862050531638890_i128,(-78805726039162019371256418457812351691_i128),23356398933510200286033174513714382456_i128,(-81369658087240356754231829317739179606_i128),(-35362970334533667026499629907020584408_i128),(-41946122612483414730364176892123804190_i128),(-124944915934927351381242530209226508101_i128)];
_32 = 4754439401159721828_u64 as isize;
place!(Field::<u64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).1, 1), 0)) = 12819400206445314486_u64;
_14.1.1 = _46.1;
_35.0 = Move((*_12));
_29 = _44;
_30 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_38 = (*_10);
(*_6) = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2).1, 1), 1) ^ _73;
place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0 = !_61;
_46.2 = !_35.1;
_26 = Adt27::Variant0 { fld0: _55.1 };
_35.0 = core::ptr::addr_of!(_61);
_23 = _29 | _29;
_64 = [_23,_23,_44,_23,_29];
_38 = !_2.1;
_74 = _31;
_2 = (_5.0, _38);
Goto(bb48)
}
bb48 = {
_78 = (*_6) as i8;
_30 = [_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0,_14.0];
_27 = [_35.1,_55.0,_55.0,_37.0];
_65 = [_14.0,_14.0,_14.0,_14.0];
_14.0 = 14590_u16 + 48430_u16;
(*_10) = _4 as i8;
_21 = core::ptr::addr_of_mut!(_81);
_76 = _55.1;
_55 = (_46.0, _32, _37.2);
_58 = _49 as isize;
_74 = _31;
_14.1.1 = _28 as isize;
_5.0 = [_76,_55.1,_14.1.1];
_74 = _31;
_37.2 = -_35.1;
(*_25) = !_73;
_48.0 = [(-1587246016_i32),1310925803_i32,611485799_i32,1482405365_i32];
_37.2 = !_35.1;
_49 = _46.1 as f32;
_14 = (5760_u16, _46);
_56 = (-3442984999243319815_i64) >> _55.2;
_33 = _42;
_46.1 = !_14.1.1;
match _14.0 {
0 => bb49,
1 => bb50,
2 => bb51,
5760 => bb53,
_ => bb52
}
}
bb49 = {
(*_10) = -_5.1;
_12 = core::ptr::addr_of_mut!(RET);
_7 = [14307940697038228446_u64,13243756715326704423_u64,1051282271809573072_u64,9817017029411610982_u64,16133440485265214104_u64];
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_2 = (_3, _8);
_10 = core::ptr::addr_of_mut!(_5.1);
_14.1 = ((-1975_i16), (-41_isize), 1494_i16);
_14.0 = 10409_u16 - 7475_u16;
_4 = 68410441304816282654929684274910472843_u128;
_2 = _5;
_5 = (_3, _8);
_5.1 = _8;
_15 = (*_10) as f32;
_6 = core::ptr::addr_of_mut!(_4);
_18.0 = (_11,);
(*_6) = _14.1.0 as u128;
match _14.1.1 {
0 => bb4,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb10,
5 => bb11,
6 => bb12,
340282366920938463463374607431768211415 => bb14,
_ => bb13
}
}
bb50 = {
(*_10) = -_2.1;
_4 = 558117668011472802_i64 as u128;
_11 = [1505289336_i32,784227327_i32,(-74443131_i32),(-1683318697_i32)];
_2 = (_3, (*_10));
_20 = &_14.1.0;
_6 = core::ptr::addr_of_mut!((*_6));
(*_10) = (-2601268466355047532_i64) as i8;
_24 = [7633883579438618366_u64,3000913129381201408_u64,14746241106386523438_u64];
_20 = &(*_20);
(*_6) = 205434306932950594777528353585441202817_u128 * 228916218455547619163393828399618198222_u128;
_2.1 = (-7884455248276071231_i64) as i8;
(*_6) = _15 as u128;
_2.1 = !_8;
_2.0 = [_14.1.1,_14.1.1,_14.1.1];
_10 = core::ptr::addr_of_mut!(_5.1);
_25 = Move(_6);
_20 = &(*_20);
_14.1 = (27475_i16, 9223372036854775807_isize, 25705_i16);
_3 = [_14.1.1,_14.1.1,_14.1.1];
_6 = Move(_25);
Goto(bb15)
}
bb51 = {
Return()
}
bb52 = {
_7 = _9;
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_3 = [_14.1.1,_14.1.1,_14.1.1];
_2.1 = -(*_10);
_8 = _14.1.2 as i8;
_5.0 = _3;
(*_10) = true as i8;
_14.1 = ((-28385_i16), (-48_isize), 3639_i16);
_14.0 = 20050_u16 >> _14.1.1;
_14.1.0 = !_14.1.2;
_5.1 = (*_10);
_1 = _9;
_3 = [_14.1.1,_14.1.1,_14.1.1];
_6 = core::ptr::addr_of_mut!(_4);
(*_10) = _2.1 * _5.1;
_1 = [15467433363490553921_u64,9877734058880687782_u64,12218802806419123255_u64,1260221227177411111_u64,6969647877700602876_u64];
_13 = [(*_6),_4,_4,(*_6),(*_6),(*_6),(*_6),(*_6)];
_4 = (*_10) as u128;
_9 = [18306036270654961240_u64,9120097079227761119_u64,1394298912081358622_u64,14673072018732049859_u64,10630897184271630272_u64];
_4 = 130904336763040143512727574526133164767_u128 << _14.0;
(*_10) = !_5.1;
_2.1 = !(*_10);
_7 = _9;
_14.1.0 = 10483499777044837404_u64 as i16;
_14.1 = (6874_i16, (-9223372036854775808_isize), 32165_i16);
_11 = [933351602_i32,73559936_i32,1873683752_i32,(-1175953323_i32)];
_12 = core::ptr::addr_of_mut!((*_12));
(*_6) = (-162545138383715817433105297894454900412_i128) as u128;
match _14.1.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
32165 => bb8,
_ => bb7
}
}
bb53 = {
_7 = [14088431936368054994_u64,7858340853707426048_u64,15429344107188683574_u64,17678203296052812346_u64,18199519371916635928_u64];
_71 = _34;
_14.0 = 60783_u16;
(*_21) = [_38,(*_10),_5.1];
_45 = [_61,_61,_52,_52,_61,_61];
SetDiscriminant(_26, 1);
Goto(bb54)
}
bb54 = {
_38 = (*_10);
_62 = _52 == _52;
_75 = _15 + _72;
(*_25) = !_73;
_19 = &_81;
_86.1.1 = _37.1 >> _73;
_55.2 = 60361236286596477525101685188940740565_i128 as i16;
_86 = _14;
Goto(bb55)
}
bb55 = {
_20 = &_14.1.2;
_67 = [_86.1.2,_37.2,_37.2,_46.2,_86.1.2,_46.2,_86.1.2];
(*_12) = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0);
_44 = _62;
_22 = core::ptr::addr_of!(_65);
Goto(bb56)
}
bb56 = {
_35 = (Move((*_12)), _86.1.2);
_5.0 = [_14.1.1,_58,_14.1.1];
(*_12) = Move(_35.0);
_47 = [_52,_52,_52,_52,_61,_61];
_14.1.2 = _35.1;
_72 = -_75;
_55.2 = _56 as i16;
place!(Field::<f64>(Variant(_26, 1), 1)) = _28;
_36 = [_14.0,_86.0,_14.0,_86.0];
(*_12) = core::ptr::addr_of!(_61);
_86.0 = _14.0 + _14.0;
_11 = [(-1711204292_i32),756251590_i32,(-185591685_i32),(-202507793_i32)];
(*_6) = _73 - _40;
_78 = _34 as i8;
_89.1 = !(*_10);
_35 = (Move((*_12)), _46.0);
_29 = _23;
_71 = _34 ^ _34;
RET = core::ptr::addr_of!(_61);
_45 = [(*RET),_52,_61,(*RET),(*RET),(*RET)];
_55.1 = (*_25) as isize;
_89.0 = _3;
Goto(bb57)
}
bb57 = {
_64 = [_23,_29,_23,_23,_23];
place!(Field::<u8>(Variant(_26, 1), 4)) = _52 & (*RET);
_82 = _37.1 | _37.1;
_14.1.0 = _66 as i16;
(*RET) = !_52;
_8 = -(*_10);
_14.1.2 = -_37.2;
_86.1.2 = _55.0;
_14.1 = (_46.2, _86.1.1, _86.1.0);
match _14.0 {
0 => bb22,
1 => bb32,
2 => bb12,
60783 => bb59,
_ => bb58
}
}
bb58 = {
_2 = (_5.0, _5.1);
_5.0 = [_14.1.1,_14.1.1,_14.1.1];
_24 = [14170893845852793048_u64,15182997244056318174_u64,7547202739164882022_u64];
_26 = Adt27::Variant0 { fld0: _14.1.1 };
_24 = [17873309133545396212_u64,17368364087622507537_u64,18093524755694616469_u64];
_17 = _15 as f64;
_14.1 = ((-9047_i16), Field::<isize>(Variant(_26, 0), 0), 25144_i16);
_24 = [4115517087043665141_u64,2175354720612500905_u64,16904819065814964591_u64];
_12 = core::ptr::addr_of_mut!((*_12));
_28 = -_17;
_5.0 = _2.0;
_18.0.0 = _11;
_1 = [134410325788394676_u64,15129853390112075729_u64,9639450030843265887_u64,10016520061989237543_u64,121871740232011580_u64];
_24 = [8409413557592565931_u64,3204033549055144379_u64,3720470969271196793_u64];
_13 = [_4,_4,_4,_4,_4,_4,_4,_4];
_9 = [9829851743091232815_u64,3659553647247649070_u64,17602814438078474190_u64,14960829333925284630_u64,11575187589681391967_u64];
Goto(bb17)
}
bb59 = {
(*RET) = _66 as u8;
_14.1.2 = 12457924264684530713_u64 as i16;
_32 = -_58;
_18.0 = (_48.0,);
_19 = &(*_19);
_88 = _14.1.1;
_82 = _32;
_66 = _56 as u32;
_12 = core::ptr::addr_of_mut!((*_12));
RET = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_26, 1), 2)).0);
_66 = 3212114200_u32;
_27 = [_37.2,_37.2,_37.2,_14.1.2];
Goto(bb60)
}
bb60 = {
Call(_97 = dump_var(3_usize, 7_usize, Move(_7), 37_usize, Move(_37), 3_usize, Move(_3), 74_usize, Move(_74)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_97 = dump_var(3_usize, 1_usize, Move(_1), 5_usize, Move(_5), 65_usize, Move(_65), 34_usize, Move(_34)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_97 = dump_var(3_usize, 73_usize, Move(_73), 81_usize, Move(_81), 54_usize, Move(_54), 61_usize, Move(_61)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_97 = dump_var(3_usize, 24_usize, Move(_24), 56_usize, Move(_56), 32_usize, Move(_32), 40_usize, Move(_40)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_97 = dump_var(3_usize, 66_usize, Move(_66), 58_usize, Move(_58), 29_usize, Move(_29), 76_usize, Move(_76)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_97 = dump_var(3_usize, 43_usize, Move(_43), 42_usize, Move(_42), 55_usize, Move(_55), 71_usize, Move(_71)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_97 = dump_var(3_usize, 67_usize, Move(_67), 89_usize, Move(_89), 98_usize, _98, 98_usize, _98), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: *mut u128) -> *const u8 {
mir! {
type RET = *const u8;
let _2: ([i32; 4],);
let _3: [u64; 5];
let _4: [u64; 5];
let _5: [u16; 8];
let _6: [u64; 5];
let _7: u16;
let _8: *const [u16; 4];
let _9: *const u8;
let _10: isize;
let _11: [u64; 3];
let _12: ([isize; 3], i8);
let _13: isize;
let _14: [i8; 2];
let _15: f32;
let _16: isize;
let _17: i64;
let _18: &'static Adt20;
let _19: i128;
let _20: Adt73;
let _21: u32;
let _22: &'static (&'static i16, u16, char, i64);
let _23: char;
let _24: i8;
let _25: [i32; 4];
let _26: [i32; 4];
let _27: bool;
let _28: i16;
let _29: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _30: &'static [i8; 3];
let _31: [u64; 5];
let _32: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _33: isize;
let _34: f32;
let _35: Adt30;
let _36: isize;
let _37: *mut *const u8;
let _38: Adt73;
let _39: (i16, isize, i16);
let _40: u8;
let _41: *const &'static f64;
let _42: u128;
let _43: &'static Adt20;
let _44: *const &'static f64;
let _45: usize;
let _46: [i8; 2];
let _47: (i16, isize, i16);
let _48: ([isize; 3], i8);
let _49: bool;
let _50: isize;
let _51: *const &'static (&'static i16, u16, char, i64);
let _52: Adt30;
let _53: [i16; 7];
let _54: (u16, (i16, isize, i16));
let _55: [i32; 4];
let _56: isize;
let _57: (i64, Adt30);
let _58: [u64; 5];
let _59: &'static *const *mut i8;
let _60: usize;
let _61: i64;
let _62: [u16; 8];
let _63: &'static u64;
let _64: [u64; 5];
let _65: &'static *const *mut i8;
let _66: f64;
let _67: isize;
let _68: i8;
let _69: isize;
let _70: (u8, Adt20, i16);
let _71: [isize; 3];
let _72: u128;
let _73: u16;
let _74: char;
let _75: Adt20;
let _76: isize;
let _77: *mut *const *mut i8;
let _78: Adt30;
let _79: u16;
let _80: Adt43;
let _81: Adt30;
let _82: i32;
let _83: isize;
let _84: u128;
let _85: [i32; 4];
let _86: Adt20;
let _87: bool;
let _88: isize;
let _89: *mut [i8; 3];
let _90: i16;
let _91: *const *mut i8;
let _92: isize;
let _93: ();
let _94: ();
{
_2.0 = [1455942435_i32,(-727436019_i32),1321563641_i32,2091059529_i32];
_2.0 = [550807732_i32,1424499190_i32,(-1622659878_i32),732364146_i32];
_2.0 = [(-2079507930_i32),784660679_i32,1489144138_i32,(-1512207917_i32)];
_2.0 = [553370682_i32,827023041_i32,(-120754953_i32),(-417615252_i32)];
_3 = [18153676555695972111_u64,8910295805268372057_u64,4496967787750867674_u64,3073768776919525066_u64,17612803485929458542_u64];
_2.0 = [(-1880010585_i32),(-1734679739_i32),656485385_i32,(-1216235438_i32)];
Goto(bb1)
}
bb1 = {
_2.0 = [489087641_i32,946760856_i32,(-1723767855_i32),631579968_i32];
_2.0 = [(-1791880743_i32),276450927_i32,(-374939341_i32),(-46837138_i32)];
_3 = [6169845797004079796_u64,8944639626200166462_u64,11173818582447641421_u64,6074492710617659958_u64,3614496108474300783_u64];
_2.0 = [(-1741161321_i32),1913781889_i32,(-514299209_i32),(-1129323678_i32)];
_3 = [17644719524253291842_u64,2879682163278026593_u64,1949840311810784791_u64,3855346212373853665_u64,11361483760873510365_u64];
_3 = [6220196376092891289_u64,18256688219930254557_u64,5982054676512977853_u64,16064450153783956103_u64,17739147200872246940_u64];
_3 = [5136329212228110307_u64,8969591182481727573_u64,17537802424186624964_u64,421577710903738096_u64,4386263591366836058_u64];
_4 = [7778151956241135176_u64,2517256732014888855_u64,6600482219508168555_u64,5370874761762010873_u64,15620731070171104976_u64];
_5 = [14883_u16,26569_u16,4230_u16,30991_u16,40898_u16,18761_u16,2622_u16,49254_u16];
_5 = [37793_u16,58676_u16,39765_u16,40487_u16,53714_u16,52479_u16,35698_u16,32463_u16];
_3 = _4;
_3 = [1875432140800306219_u64,4985832530613250541_u64,9571479506624687395_u64,5302053592748845827_u64,8125933993159418575_u64];
_4 = [13532911885959850130_u64,72668534058131586_u64,9448503901906764939_u64,12861816710378025907_u64,16727480953981785431_u64];
_6 = _4;
_6 = _4;
_5 = [46225_u16,56114_u16,36922_u16,61117_u16,3804_u16,24684_u16,32671_u16,7603_u16];
_5 = [37625_u16,33535_u16,40427_u16,7636_u16,40789_u16,26765_u16,28405_u16,39512_u16];
_2.0 = [1265911646_i32,802827808_i32,(-1340740992_i32),(-2077603420_i32)];
_2.0 = [(-1527736939_i32),(-861546599_i32),1761405566_i32,390428884_i32];
_6 = [13952348914416639714_u64,9357689583053279879_u64,5850108403279493724_u64,533960831980872224_u64,1245903897374436885_u64];
_3 = _4;
_3 = _6;
_2.0 = [(-109360146_i32),(-1702550043_i32),298331137_i32,937106322_i32];
_7 = 24621_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_5 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.0 = [1399269483_i32,(-943482623_i32),883421268_i32,(-1785824261_i32)];
_6 = _4;
_2.0 = [(-1845938329_i32),1452785061_i32,512912819_i32,103922063_i32];
_6 = [9139310060016922476_u64,7838633253989864111_u64,205843054091765754_u64,7115992154136425944_u64,10512786057886044426_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_7 = 100_u8 as u16;
_4 = _6;
_7 = 33991_u16 | 16820_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [715148875_i32,130020902_i32,(-294672083_i32),(-1482736815_i32)];
_10 = -(-9223372036854775808_isize);
Goto(bb3)
}
bb3 = {
_10 = (-4587751620492511615_i64) as isize;
_4 = [5310076639309983795_u64,3208723529512749446_u64,7713094214451642974_u64,14033844023161216448_u64,15006134467235410410_u64];
_3 = [14783808067204989313_u64,4278215012153070845_u64,3462323694146840991_u64,152770126860832578_u64,8964419471516159641_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_10 = -9223372036854775807_isize;
_7 = 38582_u16;
_10 = !(-9223372036854775808_isize);
_4 = _3;
_12.1 = (-59_i8);
_2.0 = [(-1795032361_i32),184498614_i32,1245335690_i32,835461154_i32];
Goto(bb4)
}
bb4 = {
_7 = _10 as u16;
_7 = (-1949217431_i32) as u16;
_12.1 = 72_u8 as i8;
_2.0 = [1821489209_i32,(-726330982_i32),(-831295920_i32),1803682762_i32];
_11 = [3418249873176547992_u64,11147457476481405185_u64,12306723292838437328_u64];
_10 = 9223372036854775807_isize;
_3 = _6;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12.1 = 286123459831131363375536377987360333682_u128 as i8;
_10 = -(-9223372036854775808_isize);
_2.0 = [1298821317_i32,502459834_i32,(-1445791934_i32),(-97460390_i32)];
_13 = _10 >> _12.1;
_3 = [17281554224914423119_u64,15299627843735888092_u64,4284688985212566621_u64,11371887836814434701_u64,1995513979687520369_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_6 = _3;
_3 = [12507383645862769439_u64,8071152502680163999_u64,1408666476129927965_u64,8959338686418372437_u64,10545519812760490120_u64];
_2.0 = [(-1073475933_i32),2010351973_i32,(-1353660599_i32),2122887679_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [304111552_i32,1531371053_i32,1595669426_i32,1263115403_i32];
_7 = 2270_u16 << _13;
_12.0 = [_10,_13,_10];
_10 = -_13;
_2.0 = [(-1300257155_i32),1511873487_i32,(-1308544578_i32),(-1480166702_i32)];
_12.1 = 8_i8;
Goto(bb5)
}
bb5 = {
_3 = [11781064784298627327_u64,15197914312310081051_u64,4270813702034706211_u64,1499697936598376308_u64,18258793296908432287_u64];
_10 = _13;
match _12.1 {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
8 => bb11,
_ => bb10
}
}
bb6 = {
_7 = _10 as u16;
_7 = (-1949217431_i32) as u16;
_12.1 = 72_u8 as i8;
_2.0 = [1821489209_i32,(-726330982_i32),(-831295920_i32),1803682762_i32];
_11 = [3418249873176547992_u64,11147457476481405185_u64,12306723292838437328_u64];
_10 = 9223372036854775807_isize;
_3 = _6;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12.1 = 286123459831131363375536377987360333682_u128 as i8;
_10 = -(-9223372036854775808_isize);
_2.0 = [1298821317_i32,502459834_i32,(-1445791934_i32),(-97460390_i32)];
_13 = _10 >> _12.1;
_3 = [17281554224914423119_u64,15299627843735888092_u64,4284688985212566621_u64,11371887836814434701_u64,1995513979687520369_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_6 = _3;
_3 = [12507383645862769439_u64,8071152502680163999_u64,1408666476129927965_u64,8959338686418372437_u64,10545519812760490120_u64];
_2.0 = [(-1073475933_i32),2010351973_i32,(-1353660599_i32),2122887679_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [304111552_i32,1531371053_i32,1595669426_i32,1263115403_i32];
_7 = 2270_u16 << _13;
_12.0 = [_10,_13,_10];
_10 = -_13;
_2.0 = [(-1300257155_i32),1511873487_i32,(-1308544578_i32),(-1480166702_i32)];
_12.1 = 8_i8;
Goto(bb5)
}
bb7 = {
_10 = (-4587751620492511615_i64) as isize;
_4 = [5310076639309983795_u64,3208723529512749446_u64,7713094214451642974_u64,14033844023161216448_u64,15006134467235410410_u64];
_3 = [14783808067204989313_u64,4278215012153070845_u64,3462323694146840991_u64,152770126860832578_u64,8964419471516159641_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_10 = -9223372036854775807_isize;
_7 = 38582_u16;
_10 = !(-9223372036854775808_isize);
_4 = _3;
_12.1 = (-59_i8);
_2.0 = [(-1795032361_i32),184498614_i32,1245335690_i32,835461154_i32];
Goto(bb4)
}
bb8 = {
_2.0 = [1399269483_i32,(-943482623_i32),883421268_i32,(-1785824261_i32)];
_6 = _4;
_2.0 = [(-1845938329_i32),1452785061_i32,512912819_i32,103922063_i32];
_6 = [9139310060016922476_u64,7838633253989864111_u64,205843054091765754_u64,7115992154136425944_u64,10512786057886044426_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_7 = 100_u8 as u16;
_4 = _6;
_7 = 33991_u16 | 16820_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [715148875_i32,130020902_i32,(-294672083_i32),(-1482736815_i32)];
_10 = -(-9223372036854775808_isize);
Goto(bb3)
}
bb9 = {
_2.0 = [489087641_i32,946760856_i32,(-1723767855_i32),631579968_i32];
_2.0 = [(-1791880743_i32),276450927_i32,(-374939341_i32),(-46837138_i32)];
_3 = [6169845797004079796_u64,8944639626200166462_u64,11173818582447641421_u64,6074492710617659958_u64,3614496108474300783_u64];
_2.0 = [(-1741161321_i32),1913781889_i32,(-514299209_i32),(-1129323678_i32)];
_3 = [17644719524253291842_u64,2879682163278026593_u64,1949840311810784791_u64,3855346212373853665_u64,11361483760873510365_u64];
_3 = [6220196376092891289_u64,18256688219930254557_u64,5982054676512977853_u64,16064450153783956103_u64,17739147200872246940_u64];
_3 = [5136329212228110307_u64,8969591182481727573_u64,17537802424186624964_u64,421577710903738096_u64,4386263591366836058_u64];
_4 = [7778151956241135176_u64,2517256732014888855_u64,6600482219508168555_u64,5370874761762010873_u64,15620731070171104976_u64];
_5 = [14883_u16,26569_u16,4230_u16,30991_u16,40898_u16,18761_u16,2622_u16,49254_u16];
_5 = [37793_u16,58676_u16,39765_u16,40487_u16,53714_u16,52479_u16,35698_u16,32463_u16];
_3 = _4;
_3 = [1875432140800306219_u64,4985832530613250541_u64,9571479506624687395_u64,5302053592748845827_u64,8125933993159418575_u64];
_4 = [13532911885959850130_u64,72668534058131586_u64,9448503901906764939_u64,12861816710378025907_u64,16727480953981785431_u64];
_6 = _4;
_6 = _4;
_5 = [46225_u16,56114_u16,36922_u16,61117_u16,3804_u16,24684_u16,32671_u16,7603_u16];
_5 = [37625_u16,33535_u16,40427_u16,7636_u16,40789_u16,26765_u16,28405_u16,39512_u16];
_2.0 = [1265911646_i32,802827808_i32,(-1340740992_i32),(-2077603420_i32)];
_2.0 = [(-1527736939_i32),(-861546599_i32),1761405566_i32,390428884_i32];
_6 = [13952348914416639714_u64,9357689583053279879_u64,5850108403279493724_u64,533960831980872224_u64,1245903897374436885_u64];
_3 = _4;
_3 = _6;
_2.0 = [(-109360146_i32),(-1702550043_i32),298331137_i32,937106322_i32];
_7 = 24621_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_5 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_10 = _13;
_4 = [10573923540424781069_u64,4597700781865951331_u64,5353006095924445631_u64,14356853151304294117_u64,7583125282316342163_u64];
_14 = [_12.1,_12.1];
_2.0 = [(-1798676853_i32),(-961866312_i32),1170710823_i32,1011300009_i32];
_12.0 = [_13,_10,_10];
_2.0 = [(-978473608_i32),(-1657227052_i32),(-826107443_i32),993479345_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_3 = [16586193657671688978_u64,4135043603297094576_u64,10964152775269691707_u64,9117699388314475794_u64,4311242204026692706_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [(-1844542826_i32),1302495149_i32,105485590_i32,(-1543406899_i32)];
_14 = [_12.1,_12.1];
_13 = 1_usize as isize;
Goto(bb12)
}
bb12 = {
_2.0 = [79152305_i32,(-1402959774_i32),(-871659661_i32),(-1352189806_i32)];
_3 = _6;
_10 = _13 + _13;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_15 = 137666577465900912846816546947035046340_i128 as f32;
_14 = [_12.1,_12.1];
_17 = (-8055984655736004590_i64) & (-4778075563608345052_i64);
_10 = _13 << _7;
_10 = _13 & _13;
_6 = _3;
Goto(bb13)
}
bb13 = {
_7 = 51414_u16 & 10533_u16;
_14 = [_12.1,_12.1];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_16 = 839041559_u32 as isize;
_2.0 = [55596175_i32,1750168623_i32,803002175_i32,(-318177446_i32)];
_7 = 32722_u16 - 61426_u16;
_15 = 209_u8 as f32;
_4 = _3;
_12.1 = 109_i8 * (-50_i8);
_6 = _4;
_13 = _10;
_14 = [_12.1,_12.1];
_4 = [4410272109359114561_u64,52570227260202321_u64,4667579106080578102_u64,6436492436508290413_u64,14898918618658184609_u64];
_7 = 62986_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_17 = !(-5855660125201435788_i64);
_19 = (-117017803698661099547377960761402372670_i128) | 164066623749012948302052958149681496488_i128;
_21 = !2979171692_u32;
_17 = (-1073744149466807391_i64);
_17 = (-1848338524043073033_i64);
_10 = _13;
_10 = _17 as isize;
_15 = 19319_i16 as f32;
Goto(bb14)
}
bb14 = {
_11 = [11680562830445347266_u64,7942041022704156015_u64,16168449314198299470_u64];
_3 = _6;
_12.0 = [_16,_13,_13];
_3 = [11645213925232279394_u64,12882811388191463768_u64,14979470800306199694_u64,6308213085779755313_u64,3388585332857169985_u64];
_11 = [17637395138340417864_u64,7361186383613294295_u64,2392690446379135430_u64];
Goto(bb15)
}
bb15 = {
_7 = !18794_u16;
_13 = _12.1 as isize;
_21 = 2554539297_u32 - 3712317926_u32;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_24 = _19 as i8;
_11 = [12894550719914462362_u64,5284615444736831817_u64,10513067575379934875_u64];
_21 = 629106106_u32 | 2527907784_u32;
_3 = [11264900184905697019_u64,11588643632200160201_u64,10974538663446348433_u64,5266099677345577972_u64,5274183128705217460_u64];
Goto(bb16)
}
bb16 = {
_25 = [1010605388_i32,(-378393040_i32),1930398736_i32,1698381160_i32];
_23 = '\u{18b72}';
_15 = _17 as f32;
_19 = (-154107868056771205356227563031628107214_i128) >> _12.1;
_12.1 = _24;
_11 = [12907862426279061807_u64,14322612948936992922_u64,16324541999421985550_u64];
_16 = _24 as isize;
_15 = (-26949_i16) as f32;
_21 = !1166528432_u32;
_25 = [(-536074024_i32),1954960871_i32,2079037538_i32,(-554040719_i32)];
Goto(bb17)
}
bb17 = {
_10 = _13 + _16;
_2 = (_25,);
_15 = 15092802085025803644_u64 as f32;
_16 = _10;
Goto(bb18)
}
bb18 = {
_3 = [11399321101528344369_u64,4239113646448497473_u64,11341895985816660484_u64,11797488841819486842_u64,5768980705231732652_u64];
_2 = (_25,);
_15 = 208_u8 as f32;
match _17 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb19,
5 => bb20,
340282366920938463461526268907725138423 => bb22,
_ => bb21
}
}
bb19 = {
_2.0 = [489087641_i32,946760856_i32,(-1723767855_i32),631579968_i32];
_2.0 = [(-1791880743_i32),276450927_i32,(-374939341_i32),(-46837138_i32)];
_3 = [6169845797004079796_u64,8944639626200166462_u64,11173818582447641421_u64,6074492710617659958_u64,3614496108474300783_u64];
_2.0 = [(-1741161321_i32),1913781889_i32,(-514299209_i32),(-1129323678_i32)];
_3 = [17644719524253291842_u64,2879682163278026593_u64,1949840311810784791_u64,3855346212373853665_u64,11361483760873510365_u64];
_3 = [6220196376092891289_u64,18256688219930254557_u64,5982054676512977853_u64,16064450153783956103_u64,17739147200872246940_u64];
_3 = [5136329212228110307_u64,8969591182481727573_u64,17537802424186624964_u64,421577710903738096_u64,4386263591366836058_u64];
_4 = [7778151956241135176_u64,2517256732014888855_u64,6600482219508168555_u64,5370874761762010873_u64,15620731070171104976_u64];
_5 = [14883_u16,26569_u16,4230_u16,30991_u16,40898_u16,18761_u16,2622_u16,49254_u16];
_5 = [37793_u16,58676_u16,39765_u16,40487_u16,53714_u16,52479_u16,35698_u16,32463_u16];
_3 = _4;
_3 = [1875432140800306219_u64,4985832530613250541_u64,9571479506624687395_u64,5302053592748845827_u64,8125933993159418575_u64];
_4 = [13532911885959850130_u64,72668534058131586_u64,9448503901906764939_u64,12861816710378025907_u64,16727480953981785431_u64];
_6 = _4;
_6 = _4;
_5 = [46225_u16,56114_u16,36922_u16,61117_u16,3804_u16,24684_u16,32671_u16,7603_u16];
_5 = [37625_u16,33535_u16,40427_u16,7636_u16,40789_u16,26765_u16,28405_u16,39512_u16];
_2.0 = [1265911646_i32,802827808_i32,(-1340740992_i32),(-2077603420_i32)];
_2.0 = [(-1527736939_i32),(-861546599_i32),1761405566_i32,390428884_i32];
_6 = [13952348914416639714_u64,9357689583053279879_u64,5850108403279493724_u64,533960831980872224_u64,1245903897374436885_u64];
_3 = _4;
_3 = _6;
_2.0 = [(-109360146_i32),(-1702550043_i32),298331137_i32,937106322_i32];
_7 = 24621_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_5 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb20 = {
_7 = _10 as u16;
_7 = (-1949217431_i32) as u16;
_12.1 = 72_u8 as i8;
_2.0 = [1821489209_i32,(-726330982_i32),(-831295920_i32),1803682762_i32];
_11 = [3418249873176547992_u64,11147457476481405185_u64,12306723292838437328_u64];
_10 = 9223372036854775807_isize;
_3 = _6;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12.1 = 286123459831131363375536377987360333682_u128 as i8;
_10 = -(-9223372036854775808_isize);
_2.0 = [1298821317_i32,502459834_i32,(-1445791934_i32),(-97460390_i32)];
_13 = _10 >> _12.1;
_3 = [17281554224914423119_u64,15299627843735888092_u64,4284688985212566621_u64,11371887836814434701_u64,1995513979687520369_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_6 = _3;
_3 = [12507383645862769439_u64,8071152502680163999_u64,1408666476129927965_u64,8959338686418372437_u64,10545519812760490120_u64];
_2.0 = [(-1073475933_i32),2010351973_i32,(-1353660599_i32),2122887679_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [304111552_i32,1531371053_i32,1595669426_i32,1263115403_i32];
_7 = 2270_u16 << _13;
_12.0 = [_10,_13,_10];
_10 = -_13;
_2.0 = [(-1300257155_i32),1511873487_i32,(-1308544578_i32),(-1480166702_i32)];
_12.1 = 8_i8;
Goto(bb5)
}
bb21 = {
_10 = (-4587751620492511615_i64) as isize;
_4 = [5310076639309983795_u64,3208723529512749446_u64,7713094214451642974_u64,14033844023161216448_u64,15006134467235410410_u64];
_3 = [14783808067204989313_u64,4278215012153070845_u64,3462323694146840991_u64,152770126860832578_u64,8964419471516159641_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_10 = -9223372036854775807_isize;
_7 = 38582_u16;
_10 = !(-9223372036854775808_isize);
_4 = _3;
_12.1 = (-59_i8);
_2.0 = [(-1795032361_i32),184498614_i32,1245335690_i32,835461154_i32];
Goto(bb4)
}
bb22 = {
_21 = !2537957503_u32;
_24 = _12.1;
_2 = (_25,);
_25 = [1066338624_i32,(-869941664_i32),1878229385_i32,(-684116817_i32)];
_19 = 55171343972541864758564140983374761371_i128 * (-169011696976107026482080022820420385013_i128);
_24 = 7_usize as i8;
_11 = [16367839600754994292_u64,2437366585469858868_u64,16907478925183017648_u64];
_13 = _10 >> _16;
_27 = !false;
_21 = _15 as u32;
_12.1 = _24;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
RET = core::ptr::addr_of!(_32.3);
Goto(bb23)
}
bb23 = {
_32.3 = !212_u8;
_26 = [688217699_i32,467404150_i32,(-1026817053_i32),(-1929220975_i32)];
_10 = _13;
_28 = (-2713_i16) * 15480_i16;
_2 = (_25,);
_17 = !(-7866904397904817631_i64);
(*RET) = 167_u8;
_32.0 = &(*RET);
_32.2.1 = Adt20::Variant1 { fld0: 8785932445679547794_u64,fld1: 165273998099931369138660955180196595857_u128,fld2: (*RET),fld3: _15,fld4: _21,fld5: 2026894864_i32,fld6: _17 };
place!(Field::<i32>(Variant(_32.2.1, 1), 5)) = (-724484450_i32) & 747732312_i32;
(*RET) = Field::<u8>(Variant(_32.2.1, 1), 2) & Field::<u8>(Variant(_32.2.1, 1), 2);
_16 = _13 ^ _13;
_15 = 6459488432482114731_usize as f32;
_32.2.2 = _28 | _28;
_33 = _16;
_1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_32.2.1, 1), 1)));
_15 = Field::<f32>(Variant(_32.2.1, 1), 3);
_2.0 = _26;
match Field::<u8>(Variant(_32.2.1, 1), 2) {
0 => bb13,
1 => bb15,
2 => bb24,
3 => bb25,
4 => bb26,
5 => bb27,
167 => bb29,
_ => bb28
}
}
bb24 = {
_25 = [1010605388_i32,(-378393040_i32),1930398736_i32,1698381160_i32];
_23 = '\u{18b72}';
_15 = _17 as f32;
_19 = (-154107868056771205356227563031628107214_i128) >> _12.1;
_12.1 = _24;
_11 = [12907862426279061807_u64,14322612948936992922_u64,16324541999421985550_u64];
_16 = _24 as isize;
_15 = (-26949_i16) as f32;
_21 = !1166528432_u32;
_25 = [(-536074024_i32),1954960871_i32,2079037538_i32,(-554040719_i32)];
Goto(bb17)
}
bb25 = {
_7 = !18794_u16;
_13 = _12.1 as isize;
_21 = 2554539297_u32 - 3712317926_u32;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_24 = _19 as i8;
_11 = [12894550719914462362_u64,5284615444736831817_u64,10513067575379934875_u64];
_21 = 629106106_u32 | 2527907784_u32;
_3 = [11264900184905697019_u64,11588643632200160201_u64,10974538663446348433_u64,5266099677345577972_u64,5274183128705217460_u64];
Goto(bb16)
}
bb26 = {
_7 = _10 as u16;
_7 = (-1949217431_i32) as u16;
_12.1 = 72_u8 as i8;
_2.0 = [1821489209_i32,(-726330982_i32),(-831295920_i32),1803682762_i32];
_11 = [3418249873176547992_u64,11147457476481405185_u64,12306723292838437328_u64];
_10 = 9223372036854775807_isize;
_3 = _6;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12.1 = 286123459831131363375536377987360333682_u128 as i8;
_10 = -(-9223372036854775808_isize);
_2.0 = [1298821317_i32,502459834_i32,(-1445791934_i32),(-97460390_i32)];
_13 = _10 >> _12.1;
_3 = [17281554224914423119_u64,15299627843735888092_u64,4284688985212566621_u64,11371887836814434701_u64,1995513979687520369_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_6 = _3;
_3 = [12507383645862769439_u64,8071152502680163999_u64,1408666476129927965_u64,8959338686418372437_u64,10545519812760490120_u64];
_2.0 = [(-1073475933_i32),2010351973_i32,(-1353660599_i32),2122887679_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [304111552_i32,1531371053_i32,1595669426_i32,1263115403_i32];
_7 = 2270_u16 << _13;
_12.0 = [_10,_13,_10];
_10 = -_13;
_2.0 = [(-1300257155_i32),1511873487_i32,(-1308544578_i32),(-1480166702_i32)];
_12.1 = 8_i8;
Goto(bb5)
}
bb27 = {
_2.0 = [489087641_i32,946760856_i32,(-1723767855_i32),631579968_i32];
_2.0 = [(-1791880743_i32),276450927_i32,(-374939341_i32),(-46837138_i32)];
_3 = [6169845797004079796_u64,8944639626200166462_u64,11173818582447641421_u64,6074492710617659958_u64,3614496108474300783_u64];
_2.0 = [(-1741161321_i32),1913781889_i32,(-514299209_i32),(-1129323678_i32)];
_3 = [17644719524253291842_u64,2879682163278026593_u64,1949840311810784791_u64,3855346212373853665_u64,11361483760873510365_u64];
_3 = [6220196376092891289_u64,18256688219930254557_u64,5982054676512977853_u64,16064450153783956103_u64,17739147200872246940_u64];
_3 = [5136329212228110307_u64,8969591182481727573_u64,17537802424186624964_u64,421577710903738096_u64,4386263591366836058_u64];
_4 = [7778151956241135176_u64,2517256732014888855_u64,6600482219508168555_u64,5370874761762010873_u64,15620731070171104976_u64];
_5 = [14883_u16,26569_u16,4230_u16,30991_u16,40898_u16,18761_u16,2622_u16,49254_u16];
_5 = [37793_u16,58676_u16,39765_u16,40487_u16,53714_u16,52479_u16,35698_u16,32463_u16];
_3 = _4;
_3 = [1875432140800306219_u64,4985832530613250541_u64,9571479506624687395_u64,5302053592748845827_u64,8125933993159418575_u64];
_4 = [13532911885959850130_u64,72668534058131586_u64,9448503901906764939_u64,12861816710378025907_u64,16727480953981785431_u64];
_6 = _4;
_6 = _4;
_5 = [46225_u16,56114_u16,36922_u16,61117_u16,3804_u16,24684_u16,32671_u16,7603_u16];
_5 = [37625_u16,33535_u16,40427_u16,7636_u16,40789_u16,26765_u16,28405_u16,39512_u16];
_2.0 = [1265911646_i32,802827808_i32,(-1340740992_i32),(-2077603420_i32)];
_2.0 = [(-1527736939_i32),(-861546599_i32),1761405566_i32,390428884_i32];
_6 = [13952348914416639714_u64,9357689583053279879_u64,5850108403279493724_u64,533960831980872224_u64,1245903897374436885_u64];
_3 = _4;
_3 = _6;
_2.0 = [(-109360146_i32),(-1702550043_i32),298331137_i32,937106322_i32];
_7 = 24621_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
Call(_5 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb28 = {
_11 = [11680562830445347266_u64,7942041022704156015_u64,16168449314198299470_u64];
_3 = _6;
_12.0 = [_16,_13,_13];
_3 = [11645213925232279394_u64,12882811388191463768_u64,14979470800306199694_u64,6308213085779755313_u64,3388585332857169985_u64];
_11 = [17637395138340417864_u64,7361186383613294295_u64,2392690446379135430_u64];
Goto(bb15)
}
bb29 = {
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _28 as f32;
(*_1) = !227514322349714824671551685985046662445_u128;
_32.0 = &(*RET);
(*RET) = Field::<u8>(Variant(_32.2.1, 1), 2);
_1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_32.2.1, 1), 1)));
_13 = _16 * _10;
_13 = _33;
_32.1 = [_27,_27,_27,_27,_27];
_32.2.0 = _32.3;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = 13474123318328606613_u64;
_32.3 = _32.2.0;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = 9125566230165086996_u64 >> _13;
_32.2.0 = _32.3;
_29 = &_32;
_34 = -_15;
_36 = -_16;
Goto(bb30)
}
bb30 = {
place!(Field::<u32>(Variant(_32.2.1, 1), 4)) = !_21;
_2 = (_26,);
place!(Field::<u128>(Variant(_32.2.1, 1), 1)) = 273004764926477418201617389392700707661_u128 >> _19;
_32.1 = [_27,_27,_27,_27,_27];
_32.2.2 = !_28;
RET = core::ptr::addr_of!(_32.3);
_18 = &_32.2.1;
_9 = core::ptr::addr_of!((*RET));
_2.0 = [Field::<i32>(Variant((*_18), 1), 5),Field::<i32>(Variant((*_18), 1), 5),Field::<i32>(Variant((*_29).2.1, 1), 5),Field::<i32>(Variant((*_29).2.1, 1), 5)];
place!(Field::<i64>(Variant(_32.2.1, 1), 6)) = !_17;
_37 = core::ptr::addr_of_mut!(RET);
_14 = [_12.1,_24];
_37 = core::ptr::addr_of_mut!((*_37));
_39.1 = _13;
_10 = !_33;
(*_1) = 5_usize as u128;
_2 = (_26,);
place!(Field::<u8>(Variant(_32.2.1, 1), 2)) = _32.3;
_6 = [Field::<u64>(Variant((*_29).2.1, 1), 0),Field::<u64>(Variant((*_18), 1), 0),Field::<u64>(Variant((*_18), 1), 0),Field::<u64>(Variant((*_29).2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0)];
_19 = -38411128491696688517178002792509872859_i128;
(*_37) = core::ptr::addr_of!((*_29).3);
_11 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant((*_29).2.1, 1), 0),Field::<u64>(Variant((*_29).2.1, 1), 0)];
_31 = _3;
_12.1 = _28 as i8;
_2.0 = [Field::<i32>(Variant((*_29).2.1, 1), 5),Field::<i32>(Variant((*_18), 1), 5),Field::<i32>(Variant(_32.2.1, 1), 5),Field::<i32>(Variant(_32.2.1, 1), 5)];
(*_37) = core::ptr::addr_of!((*_29).2.0);
_19 = !(-130095510668874169923024459076135508622_i128);
_21 = Field::<u32>(Variant(_32.2.1, 1), 4) >> Field::<u64>(Variant((*_29).2.1, 1), 0);
SetDiscriminant(_32.2.1, 0);
_2 = (_25,);
_32.2.0 = _32.3 - (*_9);
match (*_29).3 {
0 => bb12,
1 => bb24,
2 => bb31,
3 => bb32,
4 => bb33,
5 => bb34,
6 => bb35,
167 => bb37,
_ => bb36
}
}
bb31 = {
_10 = _13;
_4 = [10573923540424781069_u64,4597700781865951331_u64,5353006095924445631_u64,14356853151304294117_u64,7583125282316342163_u64];
_14 = [_12.1,_12.1];
_2.0 = [(-1798676853_i32),(-961866312_i32),1170710823_i32,1011300009_i32];
_12.0 = [_13,_10,_10];
_2.0 = [(-978473608_i32),(-1657227052_i32),(-826107443_i32),993479345_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_3 = [16586193657671688978_u64,4135043603297094576_u64,10964152775269691707_u64,9117699388314475794_u64,4311242204026692706_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [(-1844542826_i32),1302495149_i32,105485590_i32,(-1543406899_i32)];
_14 = [_12.1,_12.1];
_13 = 1_usize as isize;
Goto(bb12)
}
bb32 = {
_21 = !2537957503_u32;
_24 = _12.1;
_2 = (_25,);
_25 = [1066338624_i32,(-869941664_i32),1878229385_i32,(-684116817_i32)];
_19 = 55171343972541864758564140983374761371_i128 * (-169011696976107026482080022820420385013_i128);
_24 = 7_usize as i8;
_11 = [16367839600754994292_u64,2437366585469858868_u64,16907478925183017648_u64];
_13 = _10 >> _16;
_27 = !false;
_21 = _15 as u32;
_12.1 = _24;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
RET = core::ptr::addr_of!(_32.3);
Goto(bb23)
}
bb33 = {
_32.3 = !212_u8;
_26 = [688217699_i32,467404150_i32,(-1026817053_i32),(-1929220975_i32)];
_10 = _13;
_28 = (-2713_i16) * 15480_i16;
_2 = (_25,);
_17 = !(-7866904397904817631_i64);
(*RET) = 167_u8;
_32.0 = &(*RET);
_32.2.1 = Adt20::Variant1 { fld0: 8785932445679547794_u64,fld1: 165273998099931369138660955180196595857_u128,fld2: (*RET),fld3: _15,fld4: _21,fld5: 2026894864_i32,fld6: _17 };
place!(Field::<i32>(Variant(_32.2.1, 1), 5)) = (-724484450_i32) & 747732312_i32;
(*RET) = Field::<u8>(Variant(_32.2.1, 1), 2) & Field::<u8>(Variant(_32.2.1, 1), 2);
_16 = _13 ^ _13;
_15 = 6459488432482114731_usize as f32;
_32.2.2 = _28 | _28;
_33 = _16;
_1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_32.2.1, 1), 1)));
_15 = Field::<f32>(Variant(_32.2.1, 1), 3);
_2.0 = _26;
match Field::<u8>(Variant(_32.2.1, 1), 2) {
0 => bb13,
1 => bb15,
2 => bb24,
3 => bb25,
4 => bb26,
5 => bb27,
167 => bb29,
_ => bb28
}
}
bb34 = {
_2.0 = [1399269483_i32,(-943482623_i32),883421268_i32,(-1785824261_i32)];
_6 = _4;
_2.0 = [(-1845938329_i32),1452785061_i32,512912819_i32,103922063_i32];
_6 = [9139310060016922476_u64,7838633253989864111_u64,205843054091765754_u64,7115992154136425944_u64,10512786057886044426_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_7 = 100_u8 as u16;
_4 = _6;
_7 = 33991_u16 | 16820_u16;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [715148875_i32,130020902_i32,(-294672083_i32),(-1482736815_i32)];
_10 = -(-9223372036854775808_isize);
Goto(bb3)
}
bb35 = {
_2.0 = [79152305_i32,(-1402959774_i32),(-871659661_i32),(-1352189806_i32)];
_3 = _6;
_10 = _13 + _13;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_15 = 137666577465900912846816546947035046340_i128 as f32;
_14 = [_12.1,_12.1];
_17 = (-8055984655736004590_i64) & (-4778075563608345052_i64);
_10 = _13 << _7;
_10 = _13 & _13;
_6 = _3;
Goto(bb13)
}
bb36 = {
_7 = _10 as u16;
_7 = (-1949217431_i32) as u16;
_12.1 = 72_u8 as i8;
_2.0 = [1821489209_i32,(-726330982_i32),(-831295920_i32),1803682762_i32];
_11 = [3418249873176547992_u64,11147457476481405185_u64,12306723292838437328_u64];
_10 = 9223372036854775807_isize;
_3 = _6;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_12.1 = 286123459831131363375536377987360333682_u128 as i8;
_10 = -(-9223372036854775808_isize);
_2.0 = [1298821317_i32,502459834_i32,(-1445791934_i32),(-97460390_i32)];
_13 = _10 >> _12.1;
_3 = [17281554224914423119_u64,15299627843735888092_u64,4284688985212566621_u64,11371887836814434701_u64,1995513979687520369_u64];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_6 = _3;
_3 = [12507383645862769439_u64,8071152502680163999_u64,1408666476129927965_u64,8959338686418372437_u64,10545519812760490120_u64];
_2.0 = [(-1073475933_i32),2010351973_i32,(-1353660599_i32),2122887679_i32];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_2.0 = [304111552_i32,1531371053_i32,1595669426_i32,1263115403_i32];
_7 = 2270_u16 << _13;
_12.0 = [_10,_13,_10];
_10 = -_13;
_2.0 = [(-1300257155_i32),1511873487_i32,(-1308544578_i32),(-1480166702_i32)];
_12.1 = 8_i8;
Goto(bb5)
}
bb37 = {
_39.0 = _32.2.2;
_21 = 2907669839_u32;
_27 = !false;
_32.2.0 = (*_29).3 % _32.3;
_24 = !_12.1;
_27 = !false;
_39 = (_28, _36, _32.2.2);
_24 = _12.1;
place!(Field::<*mut i8>(Variant(_32.2.1, 0), 0)) = core::ptr::addr_of_mut!(_24);
_33 = _32.2.0 as isize;
_10 = _39.1;
place!(Field::<i64>(Variant(_32.2.1, 0), 1)) = _17;
_12.0 = [_16,_16,_16];
Goto(bb38)
}
bb38 = {
_35 = Adt30::Variant2 { fld0: 4922878083465652141_u64,fld1: _39,fld2: _7,fld3: _19 };
place!(Field::<u64>(Variant(_32.2.1, 0), 2)) = 15771714112818004443_u64 & 12045036352822909375_u64;
(*_37) = core::ptr::addr_of!(_32.3);
_27 = true;
RET = Move(_9);
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).2 = -_28;
_12.0 = [_16,_10,_36];
_28 = _39.0 & _32.2.2;
place!(Field::<i64>(Variant(_32.2.1, 0), 1)) = _17 + _17;
RET = core::ptr::addr_of!(_32.2.0);
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).0 = _39.0 << Field::<u64>(Variant(_32.2.1, 0), 2);
_40 = (*RET);
(*RET) = 3_usize as u8;
_39 = (Field::<(i16, isize, i16)>(Variant(_35, 2), 1).0, _36, Field::<(i16, isize, i16)>(Variant(_35, 2), 1).0);
_39 = (Field::<(i16, isize, i16)>(Variant(_35, 2), 1).0, _36, Field::<(i16, isize, i16)>(Variant(_35, 2), 1).0);
match (*_29).3 {
0 => bb39,
167 => bb41,
_ => bb40
}
}
bb39 = {
_2.0 = [79152305_i32,(-1402959774_i32),(-871659661_i32),(-1352189806_i32)];
_3 = _6;
_10 = _13 + _13;
_5 = [_7,_7,_7,_7,_7,_7,_7,_7];
_15 = 137666577465900912846816546947035046340_i128 as f32;
_14 = [_12.1,_12.1];
_17 = (-8055984655736004590_i64) & (-4778075563608345052_i64);
_10 = _13 << _7;
_10 = _13 & _13;
_6 = _3;
Goto(bb13)
}
bb40 = {
_32.3 = !212_u8;
_26 = [688217699_i32,467404150_i32,(-1026817053_i32),(-1929220975_i32)];
_10 = _13;
_28 = (-2713_i16) * 15480_i16;
_2 = (_25,);
_17 = !(-7866904397904817631_i64);
(*RET) = 167_u8;
_32.0 = &(*RET);
_32.2.1 = Adt20::Variant1 { fld0: 8785932445679547794_u64,fld1: 165273998099931369138660955180196595857_u128,fld2: (*RET),fld3: _15,fld4: _21,fld5: 2026894864_i32,fld6: _17 };
place!(Field::<i32>(Variant(_32.2.1, 1), 5)) = (-724484450_i32) & 747732312_i32;
(*RET) = Field::<u8>(Variant(_32.2.1, 1), 2) & Field::<u8>(Variant(_32.2.1, 1), 2);
_16 = _13 ^ _13;
_15 = 6459488432482114731_usize as f32;
_32.2.2 = _28 | _28;
_33 = _16;
_1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_32.2.1, 1), 1)));
_15 = Field::<f32>(Variant(_32.2.1, 1), 3);
_2.0 = _26;
match Field::<u8>(Variant(_32.2.1, 1), 2) {
0 => bb13,
1 => bb15,
2 => bb24,
3 => bb25,
4 => bb26,
5 => bb27,
167 => bb29,
_ => bb28
}
}
bb41 = {
_2.0 = [(-1253254663_i32),(-1912088487_i32),(-1247581608_i32),(-658925249_i32)];
_28 = !Field::<(i16, isize, i16)>(Variant(_35, 2), 1).0;
_34 = _15 + _15;
_13 = _10 - _16;
_13 = -_36;
_9 = core::ptr::addr_of!((*_29).3);
place!(Field::<*mut i8>(Variant(_32.2.1, 0), 0)) = core::ptr::addr_of_mut!(_12.1);
_13 = Field::<i128>(Variant(_35, 2), 3) as isize;
_25 = [444064212_i32,(-1284803387_i32),495295176_i32,(-1607173006_i32)];
place!(Field::<i64>(Variant(_32.2.1, 0), 1)) = _17 << Field::<(i16, isize, i16)>(Variant(_35, 2), 1).2;
(*RET) = !_40;
_13 = _36;
_39.1 = -_36;
(*_37) = Move(_9);
_15 = _10 as f32;
_26 = [(-1474523697_i32),1419052463_i32,(-1130298237_i32),(-2133841344_i32)];
place!(Field::<*mut i8>(Variant(_32.2.1, 0), 0)) = core::ptr::addr_of_mut!(_24);
_34 = 1_usize as f32;
_3 = [Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2)];
_21 = !553809440_u32;
_1 = core::ptr::addr_of_mut!(_42);
RET = core::ptr::addr_of!(_40);
_12.0 = [_39.1,_39.1,_33];
(*_1) = 147545768037746824177579673977487418077_u128 + 339717127280924749617181055033995312392_u128;
Goto(bb42)
}
bb42 = {
_5 = [Field::<u16>(Variant(_35, 2), 2),Field::<u16>(Variant(_35, 2), 2),Field::<u16>(Variant(_35, 2), 2),_7,Field::<u16>(Variant(_35, 2), 2),Field::<u16>(Variant(_35, 2), 2),_7,_7];
(*_37) = core::ptr::addr_of!((*_29).3);
_3 = [Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2)];
(*_1) = _23 as u128;
Goto(bb43)
}
bb43 = {
place!(Field::<u16>(Variant(_35, 2), 2)) = !_7;
_4 = [Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2)];
_39.2 = Field::<(i16, isize, i16)>(Variant(_35, 2), 1).1 as i16;
_7 = _23 as u16;
RET = core::ptr::addr_of!(_40);
_32.2.2 = _28 * _28;
_9 = Move((*_37));
_11 = [Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2)];
RET = core::ptr::addr_of!((*_29).3);
_11 = [Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2),Field::<u64>(Variant(_32.2.1, 0), 2)];
_24 = _40 as i8;
place!(Field::<i128>(Variant(_35, 2), 3)) = _19;
_16 = _10 ^ _10;
_9 = Move((*_37));
_32.2.0 = _40 / _32.3;
_10 = _16 >> Field::<(i16, isize, i16)>(Variant(_35, 2), 1).1;
_24 = -_12.1;
(*_1) = 200306661154119192066610477766080806376_u128;
_27 = !true;
Goto(bb44)
}
bb44 = {
_32.1 = [_27,_27,_27,_27,_27];
_47 = _39;
_13 = _39.1 >> _47.1;
_14 = [_12.1,_24];
_23 = '\u{e01a3}';
_48.0 = _12.0;
Goto(bb45)
}
bb45 = {
Goto(bb46)
}
bb46 = {
_9 = core::ptr::addr_of!(_32.2.0);
RET = core::ptr::addr_of!((*_9));
(*_9) = !_40;
place!(Field::<u16>(Variant(_35, 2), 2)) = _7;
place!(Field::<u64>(Variant(_32.2.1, 0), 2)) = !12364982455622195070_u64;
_32.2.1 = Adt20::Variant1 { fld0: 3292517438644655872_u64,fld1: (*_1),fld2: (*_9),fld3: _15,fld4: _21,fld5: (-773226015_i32),fld6: _17 };
_16 = _32.2.2 as isize;
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).2 = _39.0 & _39.2;
_48 = _12;
_21 = Field::<u32>(Variant(_32.2.1, 1), 4);
_32.1 = [_27,_27,_27,_27,_27];
_56 = _36 >> _32.2.0;
match (*_29).3 {
167 => bb48,
_ => bb47
}
}
bb47 = {
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _28 as f32;
(*_1) = !227514322349714824671551685985046662445_u128;
_32.0 = &(*RET);
(*RET) = Field::<u8>(Variant(_32.2.1, 1), 2);
_1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_32.2.1, 1), 1)));
_13 = _16 * _10;
_13 = _33;
_32.1 = [_27,_27,_27,_27,_27];
_32.2.0 = _32.3;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = 13474123318328606613_u64;
_32.3 = _32.2.0;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = 9125566230165086996_u64 >> _13;
_32.2.0 = _32.3;
_29 = &_32;
_34 = -_15;
_36 = -_16;
Goto(bb30)
}
bb48 = {
_36 = Field::<(i16, isize, i16)>(Variant(_35, 2), 1).1 ^ _56;
_4 = _6;
_26 = [(-768747161_i32),(-1600697485_i32),(-322486619_i32),519200725_i32];
_46 = [_24,_12.1];
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _47.2 as f32;
_50 = !_47.1;
place!(Field::<u32>(Variant(_32.2.1, 1), 4)) = !_21;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = Field::<i128>(Variant(_35, 2), 3) as u64;
_56 = _10;
_16 = _19 as isize;
_58 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0)];
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).1 = _36 >> _47.1;
_54 = (Field::<u16>(Variant(_35, 2), 2), Field::<(i16, isize, i16)>(Variant(_35, 2), 1));
place!(Field::<u16>(Variant(_35, 2), 2)) = !_54.0;
_56 = _12.1 as isize;
(*_9) = _48.1 as u8;
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)) = (_47.2, _50, _39.2);
_57.0 = _17;
_32.0 = &(*_9);
_25 = [1569124867_i32,(-1182252016_i32),1489103321_i32,(-599410358_i32)];
_6 = _4;
Goto(bb49)
}
bb49 = {
(*_1) = Field::<u128>(Variant(_32.2.1, 1), 1);
place!(Field::<u128>(Variant(_32.2.1, 1), 1)) = _42 >> _54.1.1;
place!(Field::<u8>(Variant(_32.2.1, 1), 2)) = _24 as u8;
_58 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0)];
(*_9) = _40;
_52 = Adt30::Variant0 { fld0: _27 };
_47.2 = !Field::<(i16, isize, i16)>(Variant(_35, 2), 1).2;
_39.1 = _13 ^ _50;
_33 = _13 ^ _54.1.1;
place!(Field::<i128>(Variant(_35, 2), 3)) = !_19;
_45 = 15402009435063146201_usize;
_54 = (Field::<u16>(Variant(_35, 2), 2), Field::<(i16, isize, i16)>(Variant(_35, 2), 1));
Goto(bb50)
}
bb50 = {
_35 = Move(_52);
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = -_15;
_69 = _13;
RET = core::ptr::addr_of!(_40);
_15 = Field::<f32>(Variant(_32.2.1, 1), 3);
_45 = _47.2 as usize;
_54.1.1 = _10 + _13;
_55 = [(-1513704305_i32),662403043_i32,(-596114134_i32),(-185629758_i32)];
RET = Move(_9);
_40 = !Field::<u8>(Variant(_32.2.1, 1), 2);
place!(Field::<u8>(Variant(_32.2.1, 1), 2)) = (*_29).3 << _54.1.1;
_23 = '\u{ccca0}';
Goto(bb51)
}
bb51 = {
(*_1) = _54.0 as u128;
_28 = _19 as i16;
_17 = _57.0 << _33;
_47 = _54.1;
_47.0 = Field::<bool>(Variant(_35, 0), 0) as i16;
SetDiscriminant(_35, 1);
_9 = Move(RET);
_63 = &place!(Field::<u64>(Variant(_32.2.1, 1), 0));
_39.2 = _54.1.0 - _47.2;
_42 = _28 as u128;
_69 = !_39.1;
_5 = [_54.0,_54.0,_54.0,_7,_7,_7,_7,_7];
_2.0 = [828955044_i32,(-2065652391_i32),1728075133_i32,(-305962629_i32)];
(*_1) = !Field::<u128>(Variant(_32.2.1, 1), 1);
_61 = _24 as i64;
_12.1 = _27 as i8;
_31 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),(*_63),(*_63),(*_63)];
_74 = _23;
match (*_29).3 {
0 => bb16,
1 => bb8,
2 => bb34,
3 => bb15,
4 => bb10,
5 => bb52,
167 => bb54,
_ => bb53
}
}
bb52 = {
_32.1 = [_27,_27,_27,_27,_27];
_47 = _39;
_13 = _39.1 >> _47.1;
_14 = [_12.1,_24];
_23 = '\u{e01a3}';
_48.0 = _12.0;
Goto(bb45)
}
bb53 = {
_36 = Field::<(i16, isize, i16)>(Variant(_35, 2), 1).1 ^ _56;
_4 = _6;
_26 = [(-768747161_i32),(-1600697485_i32),(-322486619_i32),519200725_i32];
_46 = [_24,_12.1];
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _47.2 as f32;
_50 = !_47.1;
place!(Field::<u32>(Variant(_32.2.1, 1), 4)) = !_21;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = Field::<i128>(Variant(_35, 2), 3) as u64;
_56 = _10;
_16 = _19 as isize;
_58 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0)];
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).1 = _36 >> _47.1;
_54 = (Field::<u16>(Variant(_35, 2), 2), Field::<(i16, isize, i16)>(Variant(_35, 2), 1));
place!(Field::<u16>(Variant(_35, 2), 2)) = !_54.0;
_56 = _12.1 as isize;
(*_9) = _48.1 as u8;
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)) = (_47.2, _50, _39.2);
_57.0 = _17;
_32.0 = &(*_9);
_25 = [1569124867_i32,(-1182252016_i32),1489103321_i32,(-599410358_i32)];
_6 = _4;
Goto(bb49)
}
bb54 = {
_39.2 = _47.2;
_7 = _21 as u16;
_48.0 = _12.0;
_42 = _36 as u128;
_15 = -Field::<f32>(Variant(_32.2.1, 1), 3);
match (*_29).3 {
0 => bb1,
1 => bb39,
2 => bb55,
167 => bb57,
_ => bb56
}
}
bb55 = {
_36 = Field::<(i16, isize, i16)>(Variant(_35, 2), 1).1 ^ _56;
_4 = _6;
_26 = [(-768747161_i32),(-1600697485_i32),(-322486619_i32),519200725_i32];
_46 = [_24,_12.1];
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _47.2 as f32;
_50 = !_47.1;
place!(Field::<u32>(Variant(_32.2.1, 1), 4)) = !_21;
place!(Field::<u64>(Variant(_32.2.1, 1), 0)) = Field::<i128>(Variant(_35, 2), 3) as u64;
_56 = _10;
_16 = _19 as isize;
_58 = [Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0),Field::<u64>(Variant(_32.2.1, 1), 0)];
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)).1 = _36 >> _47.1;
_54 = (Field::<u16>(Variant(_35, 2), 2), Field::<(i16, isize, i16)>(Variant(_35, 2), 1));
place!(Field::<u16>(Variant(_35, 2), 2)) = !_54.0;
_56 = _12.1 as isize;
(*_9) = _48.1 as u8;
place!(Field::<(i16, isize, i16)>(Variant(_35, 2), 1)) = (_47.2, _50, _39.2);
_57.0 = _17;
_32.0 = &(*_9);
_25 = [1569124867_i32,(-1182252016_i32),1489103321_i32,(-599410358_i32)];
_6 = _4;
Goto(bb49)
}
bb56 = {
_3 = [11399321101528344369_u64,4239113646448497473_u64,11341895985816660484_u64,11797488841819486842_u64,5768980705231732652_u64];
_2 = (_25,);
_15 = 208_u8 as f32;
match _17 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb19,
5 => bb20,
340282366920938463461526268907725138423 => bb22,
_ => bb21
}
}
bb57 = {
_33 = Field::<u128>(Variant(_32.2.1, 1), 1) as isize;
_54.0 = (*_63) as u16;
_32.2.1 = Adt20::Variant1 { fld0: 7466616480386216308_u64,fld1: _42,fld2: _32.2.0,fld3: _15,fld4: _21,fld5: 1545206384_i32,fld6: _57.0 };
place!(Field::<u16>(Variant(_35, 1), 1)) = _54.0 * _54.0;
_66 = Field::<u16>(Variant(_35, 1), 1) as f64;
_46 = [_48.1,_12.1];
_1 = core::ptr::addr_of_mut!((*_1));
_21 = Field::<u32>(Variant(_32.2.1, 1), 4);
_11 = [15356065912930026825_u64,13721687546169274897_u64,11185220863899989307_u64];
_79 = !Field::<u16>(Variant(_35, 1), 1);
_55 = _26;
_48.0 = [_10,_13,_13];
_74 = _23;
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = _15 + _15;
_61 = _17;
_56 = _27 as isize;
_2 = (_25,);
_47 = _54.1;
_23 = _74;
place!(Field::<f32>(Variant(_32.2.1, 1), 3)) = -_15;
RET = core::ptr::addr_of!(_40);
_33 = _39.1;
_31 = [2854503624924313977_u64,7610370966642561383_u64,11010854435452162654_u64,3299794330402788825_u64,11080456006453376388_u64];
_3 = [12986879717126715955_u64,1700326230841647621_u64,7177653734526584465_u64,2526431962025284986_u64,15337121507992890409_u64];
_78 = Adt30::Variant1 { fld0: (-775769743_i32),fld1: Field::<u16>(Variant(_35, 1), 1),fld2: Move(_9) };
_32.0 = &(*_29).3;
Goto(bb58)
}
bb58 = {
_64 = _6;
_14 = [_24,_24];
_81 = Adt30::Variant1 { fld0: 1506477496_i32,fld1: _79,fld2: Move((*_37)) };
place!(Field::<i32>(Variant(_32.2.1, 1), 5)) = Field::<f32>(Variant(_32.2.1, 1), 3) as i32;
_39.1 = !_33;
_62 = [Field::<u16>(Variant(_81, 1), 1),Field::<u16>(Variant(_35, 1), 1),_7,Field::<u16>(Variant(_81, 1), 1),_54.0,_54.0,Field::<u16>(Variant(_35, 1), 1),Field::<u16>(Variant(_35, 1), 1)];
_55 = _26;
RET = Move(Field::<*const u8>(Variant(_78, 1), 2));
_74 = _23;
_76 = -_33;
_73 = _45 as u16;
_28 = !_54.1.0;
place!(Field::<i64>(Variant(_32.2.1, 1), 6)) = _45 as i64;
_10 = -_50;
_2 = (_26,);
_28 = _39.2 * _47.2;
_66 = (*_1) as f64;
_1 = core::ptr::addr_of_mut!(_84);
_82 = Field::<i32>(Variant(_32.2.1, 1), 5);
_11 = [247370618630037864_u64,13555366646160044331_u64,7489805976720243213_u64];
_70.2 = _61 as i16;
(*_37) = Move(Field::<*const u8>(Variant(_81, 1), 2));
Goto(bb59)
}
bb59 = {
place!(Field::<*const u8>(Variant(_81, 1), 2)) = core::ptr::addr_of!((*_29).3);
_67 = _69;
_78 = Adt30::Variant1 { fld0: _82,fld1: _73,fld2: Move((*_37)) };
_25 = _26;
_33 = _54.1.1;
_23 = _74;
place!(Field::<*const u8>(Variant(_35, 1), 2)) = core::ptr::addr_of!((*_29).3);
_37 = core::ptr::addr_of_mut!(place!(Field::<*const u8>(Variant(_35, 1), 2)));
_21 = !Field::<u32>(Variant(_32.2.1, 1), 4);
place!(Field::<u128>(Variant(_32.2.1, 1), 1)) = _66 as u128;
_2.0 = _55;
_9 = Move(Field::<*const u8>(Variant(_78, 1), 2));
_68 = _48.1 << _45;
place!(Field::<*const u8>(Variant(_81, 1), 2)) = core::ptr::addr_of!(_70.0);
_84 = _42;
match _32.3 {
0 => bb33,
1 => bb36,
167 => bb60,
_ => bb46
}
}
bb60 = {
_52 = Adt30::Variant0 { fld0: _27 };
_78 = Move(_52);
_48.1 = !_68;
_70.1 = Adt20::Variant1 { fld0: 11778250603048480185_u64,fld1: (*_1),fld2: _32.2.0,fld3: _15,fld4: _21,fld5: _82,fld6: _17 };
RET = core::ptr::addr_of!(place!(Field::<u8>(Variant(_70.1, 1), 2)));
_37 = core::ptr::addr_of_mut!((*_37));
_32.2.2 = _70.2;
_78 = Adt30::Variant0 { fld0: _27 };
_77 = core::ptr::addr_of_mut!(_91);
_70.0 = _32.2.0;
_84 = _42;
_61 = _17;
Goto(bb61)
}
bb61 = {
Call(_93 = dump_var(4_usize, 74_usize, Move(_74), 45_usize, Move(_45), 26_usize, Move(_26), 73_usize, Move(_73)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_93 = dump_var(4_usize, 23_usize, Move(_23), 12_usize, Move(_12), 2_usize, Move(_2), 68_usize, Move(_68)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_93 = dump_var(4_usize, 69_usize, Move(_69), 58_usize, Move(_58), 67_usize, Move(_67), 6_usize, Move(_6)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_93 = dump_var(4_usize, 79_usize, Move(_79), 82_usize, Move(_82), 48_usize, Move(_48), 55_usize, Move(_55)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_93 = dump_var(4_usize, 10_usize, Move(_10), 14_usize, Move(_14), 42_usize, Move(_42), 50_usize, Move(_50)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_93 = dump_var(4_usize, 40_usize, Move(_40), 4_usize, Move(_4), 33_usize, Move(_33), 62_usize, Move(_62)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5() -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _1: (u16, (i16, isize, i16));
let _2: Adt20;
let _3: isize;
let _4: usize;
let _5: [i8; 2];
let _6: &'static (i16, isize, i16);
let _7: u64;
let _8: [u16; 8];
let _9: i16;
let _10: ((&'static i16, u16, char, i64), u32, u64, f64);
let _11: f64;
let _12: ([isize; 3], i8);
let _13: bool;
let _14: &'static u128;
let _15: bool;
let _16: isize;
let _17: isize;
let _18: [i32; 4];
let _19: Adt29;
let _20: [u64; 3];
let _21: *const u8;
let _22: i16;
let _23: Adt27;
let _24: &'static *const *mut i8;
let _25: isize;
let _26: char;
let _27: &'static f64;
let _28: bool;
let _29: char;
let _30: u128;
let _31: [u128; 8];
let _32: ([i32; 4],);
let _33: ([isize; 3], i8);
let _34: (&'static i16, u16, char, i64);
let _35: [i16; 7];
let _36: char;
let _37: bool;
let _38: i8;
let _39: f32;
let _40: isize;
let _41: *mut [u64; 3];
let _42: u128;
let _43: f64;
let _44: isize;
let _45: *mut *const u8;
let _46: [u16; 4];
let _47: (f32, [bool; 5], u128, i8);
let _48: u32;
let _49: [u8; 6];
let _50: (([i32; 4],),);
let _51: bool;
let _52: [i8; 1];
let _53: char;
let _54: &'static Adt20;
let _55: i32;
let _56: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _57: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _58: (u16, (i16, isize, i16));
let _59: &'static f64;
let _60: ();
let _61: ();
{
RET = [65321_u16,42591_u16,30127_u16,57179_u16,35433_u16,41527_u16,34556_u16,38659_u16];
RET = [5463_u16,61862_u16,29516_u16,40965_u16,3829_u16,38666_u16,3633_u16,36937_u16];
_1.1 = (12306_i16, (-84_isize), 15765_i16);
RET = [22663_u16,816_u16,37115_u16,33903_u16,59548_u16,56920_u16,17394_u16,64942_u16];
_1.1.1 = true as isize;
_1.0 = 2796_u16;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.1.2 = !_1.1.0;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.1.1 = -9223372036854775807_isize;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.1.1 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.1 = (15346_i16, (-9223372036854775808_isize), 1715_i16);
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.1.2 = _1.1.0 << _1.1.0;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_1.0 = 4515_u16 | 41766_u16;
_1.1.1 = (-9223372036854775808_isize);
_1.0 = !14483_u16;
_1.0 = !15557_u16;
Goto(bb1)
}
bb1 = {
_1.1.2 = _1.1.0;
_1.1.1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_1.1.1 = _1.1.0 as isize;
_5 = [105_i8,23_i8];
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_5 = [105_i8,111_i8];
_7 = 14818774120450820083_u64 & 6460399093072832469_u64;
_1.1 = ((-16012_i16), (-9223372036854775808_isize), 21569_i16);
_6 = &_1.1;
_1.1.2 = (-527058052_i32) as i16;
_8 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_3 = (-899596772_i32) as isize;
_1.1.2 = (*_6).0 * (*_6).0;
_9 = (*_6).0;
_6 = &_1.1;
_10.2 = _7 | _7;
_10.3 = (-71513867712575201487367501570132890030_i128) as f64;
_6 = &(*_6);
match (*_6).0 {
0 => bb2,
1 => bb3,
340282366920938463463374607431768195444 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_6 = &_1.1;
_8 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_10.1 = !1463560740_u32;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_10.0.2 = '\u{b4e6c}';
_10.1 = 69960814_u32;
_3 = (*_6).1;
_10.0.2 = '\u{2ee50}';
_1.1 = (_9, _3, _9);
_4 = 3_usize * 3_usize;
_1.1 = (_9, _3, _9);
_12.0 = [_1.1.1,_3,_1.1.1];
_10.0.1 = !_1.0;
_10.1 = 2119862804_u32 * 928112086_u32;
_1.1 = (_9, _3, _9);
Goto(bb6)
}
bb6 = {
_1.1.0 = -_9;
_8 = RET;
_13 = !false;
match _3 {
0 => bb1,
1 => bb4,
2 => bb3,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_16 = _3;
_10.2 = !_7;
_16 = _1.1.1;
_15 = !_13;
_15 = _1.1.0 >= _1.1.0;
_10.0.0 = &_9;
_10.0.3 = _3 as i64;
_18 = [446825742_i32,1997055024_i32,(-1756522440_i32),(-57692914_i32)];
_4 = 4_usize ^ 10319550876164742348_usize;
_12.1 = 86_i8;
_13 = _1.1.0 > _1.1.0;
_13 = !_15;
RET = _8;
_16 = _7 as isize;
_10.0.2 = '\u{96756}';
_17 = -_3;
_1.1.2 = _9;
_3 = -_17;
_15 = !_13;
_18 = [(-501255460_i32),(-270727169_i32),887426154_i32,(-1780554959_i32)];
_1.1.1 = -_16;
_10.0.0 = &_9;
_12.0 = [_3,_17,_1.1.1];
_15 = _13;
_15 = _13;
Call(RET = core::intrinsics::transmute(_18), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_7 = !_10.2;
_6 = &_1.1;
_10.3 = _10.0.3 as f64;
_1.1 = (_9, _3, _9);
RET = [_1.0,_1.0,_1.0,_10.0.1,_1.0,_1.0,_10.0.1,_10.0.1];
_10.3 = _10.0.1 as f64;
_19 = Adt29::Variant2 { fld0: _10.2,fld1: 28001825698706228474629833677766752408_u128,fld2: _17,fld3: _10.0.1,fld4: _1.1.2,fld5: (-451446782_i32) };
_11 = _10.3;
_17 = _1.1.1;
_12.0 = [_1.1.1,_1.1.1,_3];
place!(Field::<i16>(Variant(_19, 2), 4)) = _10.1 as i16;
place!(Field::<i32>(Variant(_19, 2), 5)) = -(-1477236825_i32);
_15 = _13 & _13;
_10.1 = Field::<i32>(Variant(_19, 2), 5) as u32;
_12.0 = [_3,_1.1.1,_3];
_10.3 = -_11;
_12.1 = _1.1.0 as i8;
_19 = Adt29::Variant2 { fld0: _7,fld1: 215775910787933665151412203349638704196_u128,fld2: _17,fld3: _10.0.1,fld4: _1.1.0,fld5: (-2101229991_i32) };
place!(Field::<i16>(Variant(_19, 2), 4)) = -_9;
Call(_3 = fn6(), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_20 = [Field::<u64>(Variant(_19, 2), 0),Field::<u64>(Variant(_19, 2), 0),_10.2];
_22 = -Field::<i16>(Variant(_19, 2), 4);
_19 = Adt29::Variant2 { fld0: _7,fld1: 45004533224419471818038512755894028901_u128,fld2: _3,fld3: _10.0.1,fld4: _22,fld5: 994529289_i32 };
_32 = (_18,);
_28 = _15;
_26 = _10.0.2;
_33 = (_12.0, _12.1);
_10.1 = !1581842212_u32;
_1.1.1 = !_3;
_26 = _10.0.2;
_3 = _9 as isize;
_30 = !117773154031927762635035817777921328570_u128;
place!(Field::<isize>(Variant(_19, 2), 2)) = _1.1.1;
match _1.1.0 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
340282366920938463463374607431768195444 => bb11,
_ => bb5
}
}
bb11 = {
_17 = Field::<isize>(Variant(_19, 2), 2) << _1.1.1;
_34.3 = _22 as i64;
_31 = [_30,_30,_30,_30,_30,_30,_30,_30];
_23 = Adt27::Variant0 { fld0: _1.1.1 };
_10.0.3 = -_34.3;
_10.2 = _7 << _17;
_16 = Field::<isize>(Variant(_19, 2), 2);
_37 = !_28;
_34 = (Move(_10.0.0), _10.0.1, _10.0.2, _10.0.3);
_22 = -Field::<i16>(Variant(_19, 2), 4);
_10.0.1 = _34.1 | Field::<u16>(Variant(_19, 2), 3);
place!(Field::<isize>(Variant(_19, 2), 2)) = _17;
_17 = Field::<isize>(Variant(_23, 0), 0);
_13 = !_37;
_38 = _33.1 << Field::<isize>(Variant(_19, 2), 2);
_1.1.2 = !_9;
_1.1.1 = -Field::<isize>(Variant(_19, 2), 2);
_18 = _32.0;
_25 = _10.1 as isize;
_10.0.0 = &_9;
_10.0.1 = _34.1 << _38;
_40 = _17;
_33.0 = [_17,_1.1.1,_16];
match _9 {
0 => bb3,
1 => bb4,
2 => bb12,
340282366920938463463374607431768195444 => bb14,
_ => bb13
}
}
bb12 = {
_20 = [Field::<u64>(Variant(_19, 2), 0),Field::<u64>(Variant(_19, 2), 0),_10.2];
_22 = -Field::<i16>(Variant(_19, 2), 4);
_19 = Adt29::Variant2 { fld0: _7,fld1: 45004533224419471818038512755894028901_u128,fld2: _3,fld3: _10.0.1,fld4: _22,fld5: 994529289_i32 };
_32 = (_18,);
_28 = _15;
_26 = _10.0.2;
_33 = (_12.0, _12.1);
_10.1 = !1581842212_u32;
_1.1.1 = !_3;
_26 = _10.0.2;
_3 = _9 as isize;
_30 = !117773154031927762635035817777921328570_u128;
place!(Field::<isize>(Variant(_19, 2), 2)) = _1.1.1;
match _1.1.0 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
340282366920938463463374607431768195444 => bb11,
_ => bb5
}
}
bb13 = {
_6 = &_1.1;
_8 = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_10.1 = !1463560740_u32;
RET = [_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0,_1.0];
_10.0.2 = '\u{b4e6c}';
_10.1 = 69960814_u32;
_3 = (*_6).1;
_10.0.2 = '\u{2ee50}';
_1.1 = (_9, _3, _9);
_4 = 3_usize * 3_usize;
_1.1 = (_9, _3, _9);
_12.0 = [_1.1.1,_3,_1.1.1];
_10.0.1 = !_1.0;
_10.1 = 2119862804_u32 * 928112086_u32;
_1.1 = (_9, _3, _9);
Goto(bb6)
}
bb14 = {
_33 = (_12.0, _38);
Goto(bb15)
}
bb15 = {
_6 = &_1.1;
place!(Field::<isize>(Variant(_19, 2), 2)) = _17 << _10.0.1;
_1.1.1 = Field::<isize>(Variant(_19, 2), 2) + Field::<isize>(Variant(_19, 2), 2);
_38 = _11 as i8;
_10.0.2 = _26;
_39 = _10.0.1 as f32;
_33.1 = _34.3 as i8;
_33.0 = [Field::<isize>(Variant(_19, 2), 2),_1.1.1,_1.1.1];
_29 = _34.2;
_10.0.3 = _34.3 & _34.3;
_39 = _4 as f32;
match _1.1.0 {
0 => bb12,
1 => bb5,
2 => bb16,
3 => bb17,
4 => bb18,
340282366920938463463374607431768195444 => bb20,
_ => bb19
}
}
bb16 = {
_16 = _3;
_10.2 = !_7;
_16 = _1.1.1;
_15 = !_13;
_15 = _1.1.0 >= _1.1.0;
_10.0.0 = &_9;
_10.0.3 = _3 as i64;
_18 = [446825742_i32,1997055024_i32,(-1756522440_i32),(-57692914_i32)];
_4 = 4_usize ^ 10319550876164742348_usize;
_12.1 = 86_i8;
_13 = _1.1.0 > _1.1.0;
_13 = !_15;
RET = _8;
_16 = _7 as isize;
_10.0.2 = '\u{96756}';
_17 = -_3;
_1.1.2 = _9;
_3 = -_17;
_15 = !_13;
_18 = [(-501255460_i32),(-270727169_i32),887426154_i32,(-1780554959_i32)];
_1.1.1 = -_16;
_10.0.0 = &_9;
_12.0 = [_3,_17,_1.1.1];
_15 = _13;
_15 = _13;
Call(RET = core::intrinsics::transmute(_18), ReturnTo(bb9), UnwindUnreachable())
}
bb17 = {
Return()
}
bb18 = {
_20 = [Field::<u64>(Variant(_19, 2), 0),Field::<u64>(Variant(_19, 2), 0),_10.2];
_22 = -Field::<i16>(Variant(_19, 2), 4);
_19 = Adt29::Variant2 { fld0: _7,fld1: 45004533224419471818038512755894028901_u128,fld2: _3,fld3: _10.0.1,fld4: _22,fld5: 994529289_i32 };
_32 = (_18,);
_28 = _15;
_26 = _10.0.2;
_33 = (_12.0, _12.1);
_10.1 = !1581842212_u32;
_1.1.1 = !_3;
_26 = _10.0.2;
_3 = _9 as isize;
_30 = !117773154031927762635035817777921328570_u128;
place!(Field::<isize>(Variant(_19, 2), 2)) = _1.1.1;
match _1.1.0 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
340282366920938463463374607431768195444 => bb11,
_ => bb5
}
}
bb19 = {
_17 = Field::<isize>(Variant(_19, 2), 2) << _1.1.1;
_34.3 = _22 as i64;
_31 = [_30,_30,_30,_30,_30,_30,_30,_30];
_23 = Adt27::Variant0 { fld0: _1.1.1 };
_10.0.3 = -_34.3;
_10.2 = _7 << _17;
_16 = Field::<isize>(Variant(_19, 2), 2);
_37 = !_28;
_34 = (Move(_10.0.0), _10.0.1, _10.0.2, _10.0.3);
_22 = -Field::<i16>(Variant(_19, 2), 4);
_10.0.1 = _34.1 | Field::<u16>(Variant(_19, 2), 3);
place!(Field::<isize>(Variant(_19, 2), 2)) = _17;
_17 = Field::<isize>(Variant(_23, 0), 0);
_13 = !_37;
_38 = _33.1 << Field::<isize>(Variant(_19, 2), 2);
_1.1.2 = !_9;
_1.1.1 = -Field::<isize>(Variant(_19, 2), 2);
_18 = _32.0;
_25 = _10.1 as isize;
_10.0.0 = &_9;
_10.0.1 = _34.1 << _38;
_40 = _17;
_33.0 = [_17,_1.1.1,_16];
match _9 {
0 => bb3,
1 => bb4,
2 => bb12,
340282366920938463463374607431768195444 => bb14,
_ => bb13
}
}
bb20 = {
_17 = _1.1.1 + _1.1.1;
SetDiscriminant(_23, 1);
_44 = _1.1.1;
_1.1.2 = _39 as i16;
place!(Field::<(u8, Adt20, i16)>(Variant(_23, 1), 2)).0 = 72_u8 << _44;
_34.2 = _10.0.2;
_19 = Adt29::Variant2 { fld0: _10.2,fld1: _30,fld2: _1.1.1,fld3: _10.0.1,fld4: (*_6).0,fld5: (-1068733196_i32) };
place!(Field::<f64>(Variant(_23, 1), 1)) = -_10.3;
_3 = _1.1.1 * _1.1.1;
_30 = Field::<u128>(Variant(_19, 2), 1);
_34.2 = _26;
_12.0 = [Field::<isize>(Variant(_19, 2), 2),_17,_16];
_42 = Field::<u128>(Variant(_19, 2), 1);
_26 = _29;
_10.2 = Field::<u64>(Variant(_19, 2), 0) ^ Field::<u64>(Variant(_19, 2), 0);
place!(Field::<u64>(Variant(_19, 2), 0)) = _10.2;
_13 = Field::<u64>(Variant(_19, 2), 0) <= _10.2;
_21 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_23, 1), 4)));
_40 = !Field::<isize>(Variant(_19, 2), 2);
_1.1.1 = !_40;
_10.3 = _11 * Field::<f64>(Variant(_23, 1), 1);
_33.0 = [_44,_3,_44];
_5 = [_12.1,_38];
RET = _8;
_48 = !_10.1;
_40 = _3;
Goto(bb21)
}
bb21 = {
_42 = !Field::<u128>(Variant(_19, 2), 1);
_10.0.2 = _26;
_40 = _44;
_46 = [_10.0.1,_10.0.1,_10.0.1,_10.0.1];
_12.0 = [_40,_1.1.1,Field::<isize>(Variant(_19, 2), 2)];
_10.0.2 = _34.2;
_13 = !_15;
_10.1 = !_48;
_51 = Field::<u64>(Variant(_19, 2), 0) > Field::<u64>(Variant(_19, 2), 0);
_41 = core::ptr::addr_of_mut!(_20);
_44 = Field::<u64>(Variant(_19, 2), 0) as isize;
_1.1.1 = Field::<isize>(Variant(_19, 2), 2) & Field::<isize>(Variant(_19, 2), 2);
_5 = [_12.1,_33.1];
_50.0.0 = [555622460_i32,1278450581_i32,(-1127134262_i32),(-1501671678_i32)];
_2 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_19, 2), 0),fld1: _42,fld2: Field::<(u8, Adt20, i16)>(Variant(_23, 1), 2).0,fld3: _39,fld4: _10.1,fld5: 180936626_i32,fld6: _10.0.3 };
place!(Field::<usize>(Variant(_23, 1), 3)) = 90484912314168504132575972738130205164_i128 as usize;
place!(Field::<isize>(Variant(_19, 2), 2)) = !_44;
_51 = Field::<u64>(Variant(_19, 2), 0) >= Field::<u64>(Variant(_19, 2), 0);
Goto(bb22)
}
bb22 = {
RET = _8;
_1.1 = (_9, _16, _9);
_33 = (_12.0, _12.1);
_2 = Adt20::Variant1 { fld0: _10.2,fld1: _30,fld2: Field::<(u8, Adt20, i16)>(Variant(_23, 1), 2).0,fld3: _39,fld4: _48,fld5: (-409836027_i32),fld6: _34.3 };
place!(Field::<u64>(Variant(_19, 2), 0)) = _10.2 - Field::<u64>(Variant(_2, 1), 0);
_45 = core::ptr::addr_of_mut!(_21);
Goto(bb23)
}
bb23 = {
_37 = !_51;
(*_21) = Field::<(u8, Adt20, i16)>(Variant(_23, 1), 2).0;
_13 = !_51;
_37 = Field::<u8>(Variant(_2, 1), 2) >= Field::<u8>(Variant(_23, 1), 4);
_32.0 = _18;
_18 = _32.0;
_1.1.2 = _10.2 as i16;
_23 = Adt27::Variant0 { fld0: _40 };
RET = [_10.0.1,Field::<u16>(Variant(_19, 2), 3),Field::<u16>(Variant(_19, 2), 3),Field::<u16>(Variant(_19, 2), 3),_10.0.1,_10.0.1,_10.0.1,_10.0.1];
_11 = _10.3;
_57.3 = Field::<u8>(Variant(_2, 1), 2);
_39 = _33.1 as f32;
_57.2.2 = -_1.1.2;
place!(Field::<i32>(Variant(_19, 2), 5)) = 1236187452_i32;
_1.1.1 = _12.1 as isize;
_59 = &_10.3;
Goto(bb24)
}
bb24 = {
Call(_60 = dump_var(5_usize, 30_usize, Move(_30), 20_usize, Move(_20), 28_usize, Move(_28), 12_usize, Move(_12)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_60 = dump_var(5_usize, 3_usize, Move(_3), 29_usize, Move(_29), 44_usize, Move(_44), 13_usize, Move(_13)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Call(_60 = dump_var(5_usize, 51_usize, Move(_51), 40_usize, Move(_40), 38_usize, Move(_38), 31_usize, Move(_31)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_60 = dump_var(5_usize, 1_usize, Move(_1), 50_usize, Move(_50), 5_usize, Move(_5), 18_usize, Move(_18)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6() -> isize {
mir! {
type RET = isize;
let _1: *const i32;
let _2: Adt20;
let _3: *const &'static f64;
let _4: [i8; 3];
let _5: i16;
let _6: isize;
let _7: &'static (i16, isize, i16);
let _8: Adt20;
let _9: &'static u64;
let _10: i16;
let _11: [bool; 5];
let _12: i128;
let _13: u16;
let _14: isize;
let _15: usize;
let _16: i16;
let _17: isize;
let _18: Adt73;
let _19: [i16; 4];
let _20: bool;
let _21: [u8; 6];
let _22: ([isize; 3], i8);
let _23: *const [u16; 4];
let _24: ();
let _25: ();
{
RET = (-61_i8) as isize;
RET = -9223372036854775807_isize;
RET = !9223372036854775807_isize;
RET = (-9223372036854775808_isize);
RET = (-110_isize) + (-9223372036854775808_isize);
RET = 9223372036854775807_isize;
RET = (-9223372036854775808_isize) >> 69_u8;
RET = !48_isize;
RET = (-49_isize) | (-105_isize);
RET = -9223372036854775807_isize;
RET = !(-9223372036854775808_isize);
RET = 9223372036854775807_isize;
RET = -9223372036854775807_isize;
RET = !(-9223372036854775808_isize);
RET = 9223372036854775807_isize - (-9223372036854775808_isize);
RET = !19_isize;
RET = (-30_isize) & (-9223372036854775808_isize);
RET = (-127_isize) << 863562459_i32;
RET = !9223372036854775807_isize;
RET = !4_isize;
RET = 9223372036854775807_isize;
RET = (-9223372036854775808_isize) >> 127_u8;
RET = (-83_isize) >> 12767_i16;
RET = -(-26_isize);
RET = 2_usize as isize;
RET = (-9223372036854775808_isize) + 118_isize;
_4 = [44_i8,(-79_i8),47_i8];
Call(_2 = fn7(RET, RET, _4, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
place!(Field::<u128>(Variant(_2, 1), 1)) = 258329333731723498780027069650124347249_u128 | 54056347694485625729904682782887167947_u128;
_4 = [124_i8,(-28_i8),(-5_i8)];
_4 = [(-70_i8),(-25_i8),23_i8];
_1 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_2, 1), 5)));
place!(Field::<i64>(Variant(_2, 1), 6)) = (-1896779831510368159_i64);
_5 = (-8548_i16);
RET = !9223372036854775807_isize;
RET = 9223372036854775807_isize;
(*_1) = 1633050252_i32 - 635102313_i32;
RET = (-9223372036854775808_isize);
_1 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_2, 1), 5)));
(*_1) = (-146775731_i32);
RET = 4_usize as isize;
place!(Field::<i32>(Variant(_2, 1), 5)) = 38080_u16 as i32;
place!(Field::<i32>(Variant(_2, 1), 5)) = 22046488_i32;
place!(Field::<u32>(Variant(_2, 1), 4)) = !959957907_u32;
RET = (-9223372036854775808_isize);
place!(Field::<i32>(Variant(_2, 1), 5)) = (-1928532451_i32) & (-319957644_i32);
(*_1) = true as i32;
RET = 9223372036854775807_isize;
_1 = core::ptr::addr_of!((*_1));
RET = 9223372036854775807_isize >> Field::<i32>(Variant(_2, 1), 5);
_8 = Move(_2);
_4 = [(-39_i8),24_i8,(-28_i8)];
Call(place!(Field::<f32>(Variant(_8, 1), 3)) = core::intrinsics::transmute(Field::<i32>(Variant(_8, 1), 5)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
place!(Field::<u128>(Variant(_8, 1), 1)) = 5230980258025711789_usize as u128;
_6 = RET;
RET = _6 | _6;
(*_1) = Field::<i32>(Variant(_8, 1), 5);
place!(Field::<f32>(Variant(_8, 1), 3)) = Field::<u128>(Variant(_8, 1), 1) as f32;
(*_1) = 48858_u16 as i32;
(*_1) = Field::<i32>(Variant(_8, 1), 5);
RET = _6 ^ _6;
_4 = [(-79_i8),48_i8,89_i8];
_4 = [106_i8,98_i8,74_i8];
place!(Field::<u8>(Variant(_8, 1), 2)) = 41_u8 ^ 101_u8;
SetDiscriminant(_8, 0);
_5 = 10516_i16 + 6689_i16;
place!(Field::<usize>(Variant(_8, 0), 3)) = 1_usize ^ 108896638295914323_usize;
place!(Field::<i64>(Variant(_8, 0), 1)) = -(-9115191778066555856_i64);
RET = '\u{958a1}' as isize;
_5 = !(-14967_i16);
(*_1) = 803159507_i32 * (-2085664902_i32);
_5 = (-28635_i16) ^ 9071_i16;
Goto(bb3)
}
bb3 = {
_10 = 11637026188233753818_u64 as i16;
place!(Field::<u64>(Variant(_8, 0), 2)) = !3311421186899575281_u64;
(*_1) = Field::<usize>(Variant(_8, 0), 3) as i32;
(*_1) = Field::<i64>(Variant(_8, 0), 1) as i32;
_11 = [true,true,false,true,true];
_4 = [116_i8,(-51_i8),71_i8];
_12 = (-117083275459315111662683482587327476227_i128) * 137461729193119457733986733207844054802_i128;
_6 = RET;
_9 = &place!(Field::<u64>(Variant(_8, 0), 2));
Goto(bb4)
}
bb4 = {
RET = _6;
Goto(bb5)
}
bb5 = {
(*_1) = !1166274620_i32;
(*_1) = (-1764732801_i32) << Field::<i64>(Variant(_8, 0), 1);
_10 = Field::<usize>(Variant(_8, 0), 3) as i16;
_9 = &(*_9);
_4 = [29_i8,(-112_i8),(-124_i8)];
place!(Field::<u64>(Variant(_8, 0), 2)) = 23603_u16 as u64;
RET = -_6;
place!(Field::<usize>(Variant(_8, 0), 3)) = !11526246087919081103_usize;
_4 = [75_i8,(-118_i8),(-76_i8)];
_13 = 24221_u16 & 9694_u16;
_12 = (-96531235290307488708144760088331439327_i128);
_4 = [85_i8,17_i8,(-14_i8)];
_13 = 15655_u16 | 5222_u16;
match _12 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
243751131630630974755229847343436772129 => bb12,
_ => bb11
}
}
bb6 = {
RET = _6;
Goto(bb5)
}
bb7 = {
_10 = 11637026188233753818_u64 as i16;
place!(Field::<u64>(Variant(_8, 0), 2)) = !3311421186899575281_u64;
(*_1) = Field::<usize>(Variant(_8, 0), 3) as i32;
(*_1) = Field::<i64>(Variant(_8, 0), 1) as i32;
_11 = [true,true,false,true,true];
_4 = [116_i8,(-51_i8),71_i8];
_12 = (-117083275459315111662683482587327476227_i128) * 137461729193119457733986733207844054802_i128;
_6 = RET;
_9 = &place!(Field::<u64>(Variant(_8, 0), 2));
Goto(bb4)
}
bb8 = {
place!(Field::<u128>(Variant(_8, 1), 1)) = 5230980258025711789_usize as u128;
_6 = RET;
RET = _6 | _6;
(*_1) = Field::<i32>(Variant(_8, 1), 5);
place!(Field::<f32>(Variant(_8, 1), 3)) = Field::<u128>(Variant(_8, 1), 1) as f32;
(*_1) = 48858_u16 as i32;
(*_1) = Field::<i32>(Variant(_8, 1), 5);
RET = _6 ^ _6;
_4 = [(-79_i8),48_i8,89_i8];
_4 = [106_i8,98_i8,74_i8];
place!(Field::<u8>(Variant(_8, 1), 2)) = 41_u8 ^ 101_u8;
SetDiscriminant(_8, 0);
_5 = 10516_i16 + 6689_i16;
place!(Field::<usize>(Variant(_8, 0), 3)) = 1_usize ^ 108896638295914323_usize;
place!(Field::<i64>(Variant(_8, 0), 1)) = -(-9115191778066555856_i64);
RET = '\u{958a1}' as isize;
_5 = !(-14967_i16);
(*_1) = 803159507_i32 * (-2085664902_i32);
_5 = (-28635_i16) ^ 9071_i16;
Goto(bb3)
}
bb9 = {
place!(Field::<u128>(Variant(_2, 1), 1)) = 258329333731723498780027069650124347249_u128 | 54056347694485625729904682782887167947_u128;
_4 = [124_i8,(-28_i8),(-5_i8)];
_4 = [(-70_i8),(-25_i8),23_i8];
_1 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_2, 1), 5)));
place!(Field::<i64>(Variant(_2, 1), 6)) = (-1896779831510368159_i64);
_5 = (-8548_i16);
RET = !9223372036854775807_isize;
RET = 9223372036854775807_isize;
(*_1) = 1633050252_i32 - 635102313_i32;
RET = (-9223372036854775808_isize);
_1 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_2, 1), 5)));
(*_1) = (-146775731_i32);
RET = 4_usize as isize;
place!(Field::<i32>(Variant(_2, 1), 5)) = 38080_u16 as i32;
place!(Field::<i32>(Variant(_2, 1), 5)) = 22046488_i32;
place!(Field::<u32>(Variant(_2, 1), 4)) = !959957907_u32;
RET = (-9223372036854775808_isize);
place!(Field::<i32>(Variant(_2, 1), 5)) = (-1928532451_i32) & (-319957644_i32);
(*_1) = true as i32;
RET = 9223372036854775807_isize;
_1 = core::ptr::addr_of!((*_1));
RET = 9223372036854775807_isize >> Field::<i32>(Variant(_2, 1), 5);
_8 = Move(_2);
_4 = [(-39_i8),24_i8,(-28_i8)];
Call(place!(Field::<f32>(Variant(_8, 1), 3)) = core::intrinsics::transmute(Field::<i32>(Variant(_8, 1), 5)), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_11 = [false,true,true,false,false];
place!(Field::<usize>(Variant(_8, 0), 3)) = 1_usize & 6_usize;
(*_1) = -(-1568815145_i32);
_5 = _6 as i16;
_9 = &place!(Field::<u64>(Variant(_8, 0), 2));
_13 = 3697_u16;
RET = _6;
_15 = false as usize;
_15 = Field::<usize>(Variant(_8, 0), 3);
_10 = (*_1) as i16;
_11 = [false,true,true,false,false];
place!(Field::<usize>(Variant(_8, 0), 3)) = !_15;
_13 = !18229_u16;
_14 = RET + RET;
(*_1) = -1813863733_i32;
place!(Field::<usize>(Variant(_8, 0), 3)) = Field::<i64>(Variant(_8, 0), 1) as usize;
Goto(bb13)
}
bb13 = {
_12 = -90566167363743298306083369211418484379_i128;
_9 = &(*_9);
_4 = [(-3_i8),83_i8,69_i8];
_5 = 4_i8 as i16;
_5 = _10 | _10;
_14 = -_6;
_16 = !_5;
(*_1) = (*_9) as i32;
_6 = _14;
_17 = RET;
place!(Field::<u64>(Variant(_8, 0), 2)) = !3469471477941451541_u64;
_4 = [38_i8,(-27_i8),(-1_i8)];
_14 = -_6;
place!(Field::<usize>(Variant(_8, 0), 3)) = _15 ^ _15;
_19 = [_10,_16,_5,_10];
place!(Field::<u64>(Variant(_8, 0), 2)) = 8762316539401989187_u64 | 2273733603003991593_u64;
RET = Field::<usize>(Variant(_8, 0), 3) as isize;
_12 = 156406810381583957066293488976597286645_i128;
_6 = RET;
_11 = [true,true,true,true,false];
Goto(bb14)
}
bb14 = {
_10 = 1685154172989426208132373369815063482_u128 as i16;
RET = 72576612201823212950206542394696035104_u128 as isize;
_9 = &place!(Field::<u64>(Variant(_8, 0), 2));
place!(Field::<usize>(Variant(_8, 0), 3)) = !_15;
_10 = -_5;
(*_1) = (-1373571420_i32);
place!(Field::<usize>(Variant(_8, 0), 3)) = !_15;
RET = _14 - _14;
_16 = _10 * _5;
_17 = _6 * _6;
place!(Field::<i64>(Variant(_8, 0), 1)) = 45811407979843604352671640540022979529_u128 as i64;
_14 = _17 * _17;
(*_1) = 142_u8 as i32;
_17 = _14 | _14;
_20 = !false;
(*_1) = 2214495019_u32 as i32;
place!(Field::<i64>(Variant(_8, 0), 1)) = 6233243240002848669_i64;
RET = 260917299211589542836231722679175092947_u128 as isize;
_16 = _5;
RET = _17;
_15 = 142_u8 as usize;
_22.1 = 63_i8;
_21 = [111_u8,46_u8,229_u8,29_u8,52_u8,110_u8];
Goto(bb15)
}
bb15 = {
Call(_24 = dump_var(6_usize, 16_usize, Move(_16), 6_usize, Move(_6), 19_usize, Move(_19), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_24 = dump_var(6_usize, 13_usize, Move(_13), 5_usize, Move(_5), 12_usize, Move(_12), 25_usize, _25), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: isize,mut _2: isize,mut _3: [i8; 3],mut _4: isize) -> Adt20 {
mir! {
type RET = Adt20;
let _5: *const Adt27;
let _6: f32;
let _7: *mut [u64; 3];
let _8: Adt30;
let _9: *const i32;
let _10: *const &'static (&'static i16, u16, char, i64);
let _11: *const u8;
let _12: *const &'static (&'static i16, u16, char, i64);
let _13: i128;
let _14: (u8, Adt20, i16);
let _15: ((&'static i16, u16, char, i64), u32, u64, f64);
let _16: i8;
let _17: [u16; 8];
let _18: isize;
let _19: isize;
let _20: f64;
let _21: ();
let _22: ();
{
_3 = [27_i8,(-10_i8),(-122_i8)];
_2 = _1 & _1;
_1 = 20706_u16 as isize;
_4 = 202_u8 as isize;
_1 = _2;
_3 = [28_i8,(-71_i8),(-125_i8)];
_1 = -_2;
_2 = -_4;
_4 = _1;
Goto(bb1)
}
bb1 = {
_4 = _2;
_8 = Adt30::Variant0 { fld0: true };
_6 = (-587672666_i32) as f32;
_3 = [(-34_i8),(-70_i8),(-15_i8)];
_2 = _1 ^ _1;
place!(Field::<bool>(Variant(_8, 0), 0)) = true;
Call(_9 = fn8(_3, Move(_8), _2, _2, _4, _1, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = [59_i8,(-17_i8),(-127_i8)];
_6 = _2 as f32;
_1 = _2 >> _2;
_3 = [(-34_i8),(-73_i8),(-77_i8)];
_8 = Adt30::Variant0 { fld0: false };
_1 = _2;
_13 = !133922920553073941837114483465006373489_i128;
_3 = [(-60_i8),(-42_i8),(-79_i8)];
_1 = _2;
place!(Field::<bool>(Variant(_8, 0), 0)) = true;
Call(_4 = core::intrinsics::bswap(_1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_3 = [10_i8,(-101_i8),(-84_i8)];
_3 = [82_i8,(-20_i8),(-110_i8)];
_13 = 27874400678308008766222811979514293494_i128 ^ 22137301964196034416819146507546255737_i128;
Goto(bb4)
}
bb4 = {
_14.2 = Field::<bool>(Variant(_8, 0), 0) as i16;
_14.0 = !14_u8;
_2 = _6 as isize;
_11 = core::ptr::addr_of!(_14.0);
_3 = [(-16_i8),(-52_i8),19_i8];
RET = Adt20::Variant1 { fld0: 5391254659883773483_u64,fld1: 102765140740967463455167553803339205383_u128,fld2: (*_11),fld3: _6,fld4: 2381958566_u32,fld5: (-169978602_i32),fld6: (-1242016712898572383_i64) };
_14.0 = !Field::<u8>(Variant(RET, 1), 2);
place!(Field::<i64>(Variant(RET, 1), 6)) = (-1816570590785018186_i64) + 4633186322860667795_i64;
place!(Field::<i64>(Variant(RET, 1), 6)) = 6927_u16 as i64;
place!(Field::<u64>(Variant(RET, 1), 0)) = Field::<bool>(Variant(_8, 0), 0) as u64;
_15.2 = Field::<u64>(Variant(RET, 1), 0);
place!(Field::<u128>(Variant(RET, 1), 1)) = 282234240081016496316785981411176649169_u128;
place!(Field::<u128>(Variant(RET, 1), 1)) = 16383483462070336898_usize as u128;
place!(Field::<i64>(Variant(RET, 1), 6)) = Field::<f32>(Variant(RET, 1), 3) as i64;
place!(Field::<u64>(Variant(RET, 1), 0)) = _15.2 + _15.2;
_14.2 = '\u{d343a}' as i16;
_11 = core::ptr::addr_of!(_14.0);
_4 = (-1336494022_i32) as isize;
_15.0.3 = Field::<i64>(Variant(RET, 1), 6) >> Field::<i64>(Variant(RET, 1), 6);
Goto(bb5)
}
bb5 = {
_15.0.2 = '\u{79655}';
_17 = [41362_u16,51543_u16,46925_u16,6254_u16,60728_u16,3239_u16,22625_u16,1903_u16];
_14.2 = -(-23239_i16);
place!(Field::<u32>(Variant(RET, 1), 4)) = !2411177215_u32;
place!(Field::<f32>(Variant(RET, 1), 3)) = -_6;
place!(Field::<i32>(Variant(RET, 1), 5)) = (-1239366533_i32);
_14.0 = !Field::<u8>(Variant(RET, 1), 2);
place!(Field::<u32>(Variant(RET, 1), 4)) = 2586655755_u32 | 489740871_u32;
_14.1 = Move(RET);
RET = Move(_14.1);
(*_11) = Field::<u8>(Variant(RET, 1), 2);
(*_11) = Field::<u8>(Variant(RET, 1), 2) | Field::<u8>(Variant(RET, 1), 2);
_3 = [(-24_i8),(-79_i8),(-42_i8)];
_15.0.0 = &_14.2;
place!(Field::<u32>(Variant(RET, 1), 4)) = !737998030_u32;
_15.0.1 = 30099_u16;
SetDiscriminant(_8, 1);
_14 = (Field::<u8>(Variant(RET, 1), 2), Move(RET), 8594_i16);
_13 = _1 as i128;
_2 = _1 * _4;
RET = Adt20::Variant1 { fld0: Field::<u64>(Variant(_14.1, 1), 0),fld1: Field::<u128>(Variant(_14.1, 1), 1),fld2: Field::<u8>(Variant(_14.1, 1), 2),fld3: Field::<f32>(Variant(_14.1, 1), 3),fld4: Field::<u32>(Variant(_14.1, 1), 4),fld5: Field::<i32>(Variant(_14.1, 1), 5),fld6: _15.0.3 };
place!(Field::<u128>(Variant(RET, 1), 1)) = Field::<u128>(Variant(_14.1, 1), 1) + Field::<u128>(Variant(_14.1, 1), 1);
place!(Field::<u64>(Variant(RET, 1), 0)) = Field::<u64>(Variant(_14.1, 1), 0) | Field::<u64>(Variant(_14.1, 1), 0);
place!(Field::<i64>(Variant(_14.1, 1), 6)) = _15.0.3;
place!(Field::<i64>(Variant(RET, 1), 6)) = -_15.0.3;
_15.3 = _15.0.3 as f64;
_15.0.0 = &_14.2;
Goto(bb6)
}
bb6 = {
Call(_21 = dump_var(7_usize, 1_usize, Move(_1), 13_usize, Move(_13), 2_usize, Move(_2), 22_usize, _22), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [i8; 3],mut _2: Adt30,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize) -> *const i32 {
mir! {
type RET = *const i32;
let _8: [isize; 3];
let _9: [u64; 3];
let _10: isize;
let _11: i8;
let _12: f64;
let _13: i8;
let _14: char;
let _15: u8;
let _16: &'static Adt20;
let _17: [i16; 4];
let _18: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _19: u32;
let _20: [bool; 5];
let _21: f32;
let _22: ([i32; 4],);
let _23: u64;
let _24: i8;
let _25: f64;
let _26: (&'static i16, u16, char, i64);
let _27: Adt73;
let _28: *const &'static f64;
let _29: f32;
let _30: [u128; 8];
let _31: i16;
let _32: u32;
let _33: i64;
let _34: bool;
let _35: (i64, Adt30);
let _36: u128;
let _37: isize;
let _38: char;
let _39: u128;
let _40: Adt73;
let _41: ();
let _42: ();
{
SetDiscriminant(_2, 2);
_8 = [_6,_4,_7];
_8 = [_4,_7,_7];
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).1 = _3 & _6;
_2 = Adt30::Variant0 { fld0: true };
_5 = !_6;
_6 = _7;
_7 = _3;
_7 = _4;
_1 = [(-43_i8),(-117_i8),25_i8];
_4 = _7;
_8 = [_4,_3,_7];
_2 = Adt30::Variant0 { fld0: false };
_3 = !_5;
_5 = _6;
_5 = _4;
place!(Field::<bool>(Variant(_2, 0), 0)) = !true;
Goto(bb1)
}
bb1 = {
_4 = _6;
_5 = _7;
_7 = !_5;
_8 = [_4,_6,_5];
_3 = _6 << _4;
_7 = Field::<bool>(Variant(_2, 0), 0) as isize;
_6 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_4 = (-1177702297_i32) as isize;
_9 = [3830464270512723737_u64,17030224791780938653_u64,14915152344140867261_u64];
_13 = !(-74_i8);
Goto(bb2)
}
bb2 = {
SetDiscriminant(_2, 0);
_10 = false as isize;
place!(Field::<bool>(Variant(_2, 0), 0)) = true & false;
_11 = !_13;
_3 = 12207089159303648749_u64 as isize;
_3 = 342880195_u32 as isize;
_12 = _13 as f64;
SetDiscriminant(_2, 2);
place!(Field::<u16>(Variant(_2, 2), 2)) = 871164083_i32 as u16;
_9 = [8877026279429404685_u64,6201849839946821941_u64,11663689838792077124_u64];
_14 = '\u{88fb3}';
_8 = [_10,_5,_6];
_7 = _6;
_5 = _7 << _6;
_15 = 164_u8;
_7 = -_6;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).2 = 4461_i16;
place!(Field::<u16>(Variant(_2, 2), 2)) = 2517_u16;
place!(Field::<u16>(Variant(_2, 2), 2)) = 7516_u16;
_11 = _13;
_1 = [_11,_13,_13];
match Field::<u16>(Variant(_2, 2), 2) {
0 => bb1,
7516 => bb4,
_ => bb3
}
}
bb3 = {
_4 = _6;
_5 = _7;
_7 = !_5;
_8 = [_4,_6,_5];
_3 = _6 << _4;
_7 = Field::<bool>(Variant(_2, 0), 0) as isize;
_6 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_4 = (-1177702297_i32) as isize;
_9 = [3830464270512723737_u64,17030224791780938653_u64,14915152344140867261_u64];
_13 = !(-74_i8);
Goto(bb2)
}
bb4 = {
_3 = _7 << _5;
_15 = !28_u8;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)) = ((-22694_i16), _3, 24109_i16);
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).0 = -Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2;
place!(Field::<u16>(Variant(_2, 2), 2)) = 335823373960715505904323063361806447372_u128 as u16;
_13 = _11;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).2 = !Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0;
_9 = [7577010658528854833_u64,15507926835532962121_u64,4710723143613666994_u64];
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).2 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0 * Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0;
_1 = [_11,_13,_11];
_12 = 229489708102294476232715988714468714808_u128 as f64;
place!(Field::<u16>(Variant(_2, 2), 2)) = 54863_u16 << _3;
place!(Field::<i128>(Variant(_2, 2), 3)) = 129930501221085571313249906509665338427_i128;
_17 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2];
_3 = !Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1;
Call(_7 = fn9(Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1, _17, _8, Field::<(i16, isize, i16)>(Variant(_2, 2), 1), Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2, Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_17 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2];
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).1 = -_7;
place!(Field::<i128>(Variant(_2, 2), 3)) = 7_usize as i128;
_11 = _13;
_15 = 65_u8;
_15 = 1871985568556514271_usize as u8;
_17 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2];
Goto(bb6)
}
bb6 = {
_9 = [7855737805493264566_u64,3221853012630430839_u64,7858268871241527155_u64];
_1 = [_11,_13,_11];
Goto(bb7)
}
bb7 = {
_11 = _14 as i8;
_13 = 251872016735089379883851306869615984342_u128 as i8;
_19 = 1520255985_u32 - 2985185034_u32;
_6 = _3 ^ _3;
_20 = [true,false,false,false,false];
_8 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,_6];
_21 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1 as f32;
_12 = 1871045335489388929_i64 as f64;
_14 = '\u{d4587}';
_2 = Adt30::Variant0 { fld0: true };
_4 = _6 << _6;
_12 = 22507_i16 as f64;
_11 = 18151906656463010213302326396320737692_i128 as i8;
_15 = 197_u8;
Call(_13 = fn11(_6, _21, _3, _3, _4, _3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_22.0 = [1025828794_i32,(-820505512_i32),805378490_i32,(-317792892_i32)];
_5 = -_7;
_7 = _19 as isize;
_26.1 = !28190_u16;
_2 = Adt30::Variant0 { fld0: true };
_22.0 = [(-524774911_i32),(-1774511813_i32),(-1464120486_i32),315351117_i32];
_26.2 = _14;
_14 = _26.2;
_9 = [9741765205260899253_u64,136239398251987074_u64,15431973131803299880_u64];
_14 = _26.2;
_25 = _15 as f64;
_15 = 184_u8;
_2 = Adt30::Variant0 { fld0: false };
place!(Field::<bool>(Variant(_2, 0), 0)) = !false;
_24 = _13 + _13;
match _15 {
0 => bb7,
1 => bb3,
2 => bb9,
184 => bb11,
_ => bb10
}
}
bb9 = {
_11 = _14 as i8;
_13 = 251872016735089379883851306869615984342_u128 as i8;
_19 = 1520255985_u32 - 2985185034_u32;
_6 = _3 ^ _3;
_20 = [true,false,false,false,false];
_8 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,_6];
_21 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1 as f32;
_12 = 1871045335489388929_i64 as f64;
_14 = '\u{d4587}';
_2 = Adt30::Variant0 { fld0: true };
_4 = _6 << _6;
_12 = 22507_i16 as f64;
_11 = 18151906656463010213302326396320737692_i128 as i8;
_15 = 197_u8;
Call(_13 = fn11(_6, _21, _3, _3, _4, _3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb10 = {
_4 = _6;
_5 = _7;
_7 = !_5;
_8 = [_4,_6,_5];
_3 = _6 << _4;
_7 = Field::<bool>(Variant(_2, 0), 0) as isize;
_6 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_4 = (-1177702297_i32) as isize;
_9 = [3830464270512723737_u64,17030224791780938653_u64,14915152344140867261_u64];
_13 = !(-74_i8);
Goto(bb2)
}
bb11 = {
_23 = 5773146441395843651_u64 * 11675140759059747377_u64;
_4 = _23 as isize;
_20 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0)];
_11 = _13 + _13;
_21 = 3308917403275185859_usize as f32;
_19 = 4_usize as u32;
_8 = [_4,_3,_3];
_20 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0)];
_20 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0)];
_15 = 3_u8;
_6 = 76497116342729645318262864393069602096_i128 as isize;
_20 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0)];
_24 = _11;
Call(_26.2 = fn12(_3, _3, _9, _24, _17, _5, _3, _17, _5, _13), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_5 = _3;
_32 = _19;
match _15 {
0 => bb11,
1 => bb2,
2 => bb8,
4 => bb5,
5 => bb6,
6 => bb13,
3 => bb15,
_ => bb14
}
}
bb13 = {
_11 = _14 as i8;
_13 = 251872016735089379883851306869615984342_u128 as i8;
_19 = 1520255985_u32 - 2985185034_u32;
_6 = _3 ^ _3;
_20 = [true,false,false,false,false];
_8 = [Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1,_6];
_21 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).1 as f32;
_12 = 1871045335489388929_i64 as f64;
_14 = '\u{d4587}';
_2 = Adt30::Variant0 { fld0: true };
_4 = _6 << _6;
_12 = 22507_i16 as f64;
_11 = 18151906656463010213302326396320737692_i128 as i8;
_15 = 197_u8;
Call(_13 = fn11(_6, _21, _3, _3, _4, _3, _7), ReturnTo(bb8), UnwindUnreachable())
}
bb14 = {
_4 = _6;
_5 = _7;
_7 = !_5;
_8 = [_4,_6,_5];
_3 = _6 << _4;
_7 = Field::<bool>(Variant(_2, 0), 0) as isize;
_6 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_4 = (-1177702297_i32) as isize;
_9 = [3830464270512723737_u64,17030224791780938653_u64,14915152344140867261_u64];
_13 = !(-74_i8);
Goto(bb2)
}
bb15 = {
_17 = [(-9007_i16),(-21219_i16),21731_i16,19443_i16];
place!(Field::<bool>(Variant(_2, 0), 0)) = _13 != _13;
_9 = [_23,_23,_23];
_31 = _26.2 as i16;
_33 = -5328991490814608263_i64;
_26.0 = &_31;
_26.0 = &_31;
_15 = !36_u8;
SetDiscriminant(_2, 1);
_3 = -_5;
_30 = [63784377717701886346254625017338079107_u128,218039708359483854245268995507039194388_u128,72739980690369440412353505574533634394_u128,118152771093082912322887498508140562179_u128,9657236909689574697434727669619859313_u128,7653691694447188690503794009628032745_u128,290215121679724037697966450137880643515_u128,317095367236304092301445388661948936617_u128];
_15 = !165_u8;
_1 = [_24,_11,_11];
_24 = -_13;
_26.3 = 5_usize as i64;
_30 = [164320285272157345668594543841373422103_u128,245696421603747600645273893591838342660_u128,4015013203749405334908739139291273036_u128,63568474490759784695987358071432389201_u128,302235175866546640137007717673269267687_u128,21493447587148530897304156077615085801_u128,200943875618284680625048699029226481122_u128,295530845217006496040350662275397175899_u128];
RET = core::ptr::addr_of!(place!(Field::<i32>(Variant(_2, 1), 0)));
_12 = -_25;
_34 = !false;
_22.0 = [1631404230_i32,(-100097807_i32),95383039_i32,(-1635657170_i32)];
(*RET) = _13 as i32;
Call(_10 = core::intrinsics::transmute(_3), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_29 = _21;
_7 = _33 as isize;
_9 = [_23,_23,_23];
_1 = [_13,_11,_24];
_26.2 = _14;
_21 = _29 - _29;
_12 = -_25;
place!(Field::<*const u8>(Variant(_2, 1), 2)) = core::ptr::addr_of!(_15);
_13 = _11;
_23 = 12841403791583225175_u64;
_13 = -_11;
_39 = !327078012963101335305464919946370321563_u128;
_24 = _11 * _13;
_19 = 99632237200613069772973352619497244172_i128 as u32;
place!(Field::<*const u8>(Variant(_2, 1), 2)) = core::ptr::addr_of!(_15);
_38 = _26.2;
RET = core::ptr::addr_of!((*RET));
(*RET) = 1141771943_i32 * 20405249_i32;
_10 = _5 << _11;
_5 = _3 | _10;
_7 = _5 << _5;
_38 = _14;
(*RET) = (-2025938723_i32) + (-2136182383_i32);
_11 = 15136468409279837998591155184141753889_i128 as i8;
_3 = -_5;
_26.3 = _33;
Goto(bb17)
}
bb17 = {
Call(_41 = dump_var(8_usize, 6_usize, Move(_6), 9_usize, Move(_9), 31_usize, Move(_31), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_41 = dump_var(8_usize, 4_usize, Move(_4), 39_usize, Move(_39), 17_usize, Move(_17), 38_usize, Move(_38)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_41 = dump_var(8_usize, 7_usize, Move(_7), 1_usize, Move(_1), 3_usize, Move(_3), 33_usize, Move(_33)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_41 = dump_var(8_usize, 10_usize, Move(_10), 42_usize, _42, 42_usize, _42, 42_usize, _42), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: [i16; 4],mut _3: [isize; 3],mut _4: (i16, isize, i16),mut _5: i16,mut _6: isize) -> isize {
mir! {
type RET = isize;
let _7: [isize; 3];
let _8: ();
let _9: ();
{
_4 = (_5, _6, _5);
RET = (-5596063757921334764_i64) as isize;
_4.1 = _6;
Call(RET = fn10(_4.0, _4, _1, _4.1, _4.1, _4.1, _4, _5, _1, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4.2 = -_5;
_4.2 = _4.0;
Goto(bb2)
}
bb2 = {
Call(_8 = dump_var(9_usize, 4_usize, Move(_4), 5_usize, Move(_5), 3_usize, Move(_3), 9_usize, _9), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: i16,mut _2: (i16, isize, i16),mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: (i16, isize, i16),mut _8: i16,mut _9: isize,mut _10: (i16, isize, i16)) -> isize {
mir! {
type RET = isize;
let _11: &'static *const *mut i8;
let _12: [bool; 5];
let _13: Adt76;
let _14: &'static (&'static i16, u16, char, i64);
let _15: [i32; 4];
let _16: ();
let _17: ();
{
_7.2 = _10.0 ^ _10.2;
_7.2 = _2.0;
Goto(bb1)
}
bb1 = {
_2 = (_7.2, _3, _8);
_8 = -_10.0;
_10.1 = '\u{92500}' as isize;
RET = 4_usize as isize;
_2 = (_1, _3, _7.0);
_1 = -_2.2;
_8 = !_1;
RET = 15235077656569611334_u64 as isize;
_6 = _2.1;
_2.2 = _7.0 * _2.0;
_10.0 = _2.2;
_1 = _7.2;
_10.2 = _2.2 - _2.0;
_10 = (_8, _5, _8);
_4 = _9 | _10.1;
_7 = (_1, _6, _2.2);
Goto(bb2)
}
bb2 = {
_7.1 = _4;
_8 = _7.2;
_2 = (_7.2, _5, _7.0);
_4 = _9 & _7.1;
_10.1 = !_3;
_10.2 = false as i16;
_10.1 = 685735072294924878_usize as isize;
_6 = (-101384565052646084982172463054916807305_i128) as isize;
_7.2 = 7554431880983783871_u64 as i16;
RET = true as isize;
_2 = _7;
_10.2 = 487503797_i32 as i16;
RET = '\u{d20e8}' as isize;
_2.1 = true as isize;
_7 = _2;
Goto(bb3)
}
bb3 = {
_12 = [true,true,false,true,false];
_7 = (_8, _2.1, _8);
_2 = _7;
_5 = _4 | _9;
_1 = 1434873258_i32 as i16;
_15 = [2124768387_i32,24520424_i32,(-2020407448_i32),(-1190440480_i32)];
_6 = _9 << _7.1;
Call(_1 = core::intrinsics::bswap(_7.2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_15 = [(-900252589_i32),160042312_i32,1330524624_i32,449735201_i32];
_8 = _7.2;
RET = !_4;
Goto(bb5)
}
bb5 = {
Call(_16 = dump_var(10_usize, 8_usize, Move(_8), 3_usize, Move(_3), 7_usize, Move(_7), 4_usize, Move(_4)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Call(_16 = dump_var(10_usize, 10_usize, Move(_10), 12_usize, Move(_12), 17_usize, _17, 17_usize, _17), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: f32,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize) -> i8 {
mir! {
type RET = i8;
let _8: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _9: isize;
let _10: &'static Adt20;
let _11: &'static Adt20;
let _12: u16;
let _13: bool;
let _14: (i64, Adt30);
let _15: *const Adt27;
let _16: ();
let _17: ();
{
_2 = 102_u8 as f32;
_1 = _5 >> _4;
RET = (-83_i8);
_7 = !_5;
_1 = _6 << _4;
_6 = _4;
_1 = _3 & _3;
_3 = -_1;
Goto(bb1)
}
bb1 = {
_7 = 61_u8 as isize;
_6 = _1;
_6 = -_3;
_5 = _1;
RET = 102_i8;
_2 = (-6656_i16) as f32;
_9 = -_6;
_7 = _6 >> _5;
_4 = _3;
RET = !56_i8;
RET = '\u{ea380}' as i8;
_2 = 5184781377214587001_u64 as f32;
_2 = RET as f32;
_2 = 18183260165791561735_u64 as f32;
_6 = _5 ^ _4;
_4 = (-7975_i16) as isize;
RET = 6_i8 << _1;
_6 = !_5;
_3 = 205580039560619645510931126155668193106_u128 as isize;
_4 = _6 << _6;
_14.0 = _5 as i64;
_5 = (-317257039_i32) as isize;
_2 = _7 as f32;
_9 = _1;
_5 = _3;
_13 = _1 >= _4;
Goto(bb2)
}
bb2 = {
Call(_16 = dump_var(11_usize, 3_usize, Move(_3), 1_usize, Move(_1), 5_usize, Move(_5), 13_usize, Move(_13)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: isize,mut _2: isize,mut _3: [u64; 3],mut _4: i8,mut _5: [i16; 4],mut _6: isize,mut _7: isize,mut _8: [i16; 4],mut _9: isize,mut _10: i8) -> char {
mir! {
type RET = char;
let _11: &'static u64;
let _12: char;
let _13: ((&'static i16, u16, char, i64), u32, u64, f64);
let _14: char;
let _15: &'static [i8; 3];
let _16: i128;
let _17: *const &'static (&'static i16, u16, char, i64);
let _18: ((&'static i16, u16, char, i64), u32, u64, f64);
let _19: *const &'static f64;
let _20: u16;
let _21: bool;
let _22: Adt43;
let _23: &'static u64;
let _24: char;
let _25: bool;
let _26: &'static u128;
let _27: [i32; 4];
let _28: u16;
let _29: u16;
let _30: u16;
let _31: &'static [i8; 3];
let _32: ([isize; 3], i8);
let _33: Adt20;
let _34: usize;
let _35: usize;
let _36: bool;
let _37: [u64; 5];
let _38: u32;
let _39: u16;
let _40: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _41: i64;
let _42: char;
let _43: i128;
let _44: [u16; 4];
let _45: &'static (&'static i16, u16, char, i64);
let _46: f64;
let _47: [i16; 4];
let _48: f64;
let _49: i16;
let _50: [i16; 7];
let _51: &'static [i8; 3];
let _52: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _53: f32;
let _54: bool;
let _55: f32;
let _56: [u8; 6];
let _57: [u128; 8];
let _58: f32;
let _59: &'static u128;
let _60: bool;
let _61: *const u8;
let _62: (*const u8, i16);
let _63: Adt27;
let _64: char;
let _65: f64;
let _66: &'static *const *mut i8;
let _67: Adt44;
let _68: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _69: i128;
let _70: char;
let _71: *const &'static (&'static i16, u16, char, i64);
let _72: i32;
let _73: *const Adt27;
let _74: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _75: f64;
let _76: &'static u64;
let _77: bool;
let _78: bool;
let _79: &'static (&'static i16, u16, char, i64);
let _80: usize;
let _81: *mut [u64; 3];
let _82: isize;
let _83: [isize; 3];
let _84: Adt30;
let _85: i32;
let _86: f32;
let _87: isize;
let _88: ([i32; 4],);
let _89: usize;
let _90: ([i32; 4],);
let _91: i64;
let _92: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _93: f64;
let _94: f32;
let _95: f64;
let _96: f64;
let _97: f64;
let _98: isize;
let _99: f64;
let _100: *mut *const *mut i8;
let _101: f64;
let _102: char;
let _103: (u16, (i16, isize, i16));
let _104: *const Adt27;
let _105: char;
let _106: &'static u64;
let _107: i16;
let _108: &'static Adt20;
let _109: *const u8;
let _110: [bool; 5];
let _111: f64;
let _112: char;
let _113: (&'static i16, u16, char, i64);
let _114: [i128; 7];
let _115: isize;
let _116: f64;
let _117: u32;
let _118: char;
let _119: *const u8;
let _120: f64;
let _121: &'static f64;
let _122: [i128; 7];
let _123: bool;
let _124: *const &'static (&'static i16, u16, char, i64);
let _125: f32;
let _126: char;
let _127: &'static (i16, isize, i16);
let _128: Adt30;
let _129: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _130: *const Adt27;
let _131: u32;
let _132: [u64; 5];
let _133: isize;
let _134: i8;
let _135: Adt76;
let _136: u64;
let _137: [i32; 4];
let _138: *const &'static f64;
let _139: isize;
let _140: (i64, Adt30);
let _141: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _142: ([i32; 4],);
let _143: usize;
let _144: bool;
let _145: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _146: [i32; 4];
let _147: [u16; 4];
let _148: (&'static i16, u16, char, i64);
let _149: (f32, [bool; 5], u128, i8);
let _150: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _151: ();
let _152: ();
{
_9 = _10 as isize;
_8 = _5;
_1 = _7;
_2 = _9;
_4 = _10;
_10 = 2453976697_u32 as i8;
RET = '\u{107af8}';
_3 = [9268324221332311743_u64,14391745738247980558_u64,12697184539130037451_u64];
_9 = _6 >> _2;
_9 = -_2;
_5 = _8;
_13.2 = 2659577773572692981_u64 ^ 17485343900953943560_u64;
_13.1 = 2894396807_u32;
Goto(bb1)
}
bb1 = {
_3 = [_13.2,_13.2,_13.2];
_8 = [(-26099_i16),24298_i16,21252_i16,(-15918_i16)];
_12 = RET;
_5 = [(-13713_i16),(-12689_i16),(-3888_i16),(-20517_i16)];
_11 = &_13.2;
_12 = RET;
_14 = _12;
_3 = [(*_11),_13.2,(*_11)];
_14 = RET;
Goto(bb2)
}
bb2 = {
_14 = _12;
Goto(bb3)
}
bb3 = {
_12 = RET;
_13.0.3 = -(-8170008761807439920_i64);
_11 = &_13.2;
_5 = [24647_i16,26264_i16,9155_i16,12979_i16];
_8 = [20707_i16,15275_i16,(-9084_i16),9465_i16];
_13.0.1 = !57387_u16;
_13.1 = (*_11) as u32;
_13.0.1 = 30966_u16 * 6392_u16;
_13.0.2 = _14;
_14 = _12;
_8 = [(-15823_i16),(-28389_i16),2111_i16,5773_i16];
_6 = _2;
_9 = _2 - _7;
_13.3 = (*_11) as f64;
_4 = !_10;
RET = _12;
_5 = [(-20569_i16),(-18782_i16),(-15889_i16),(-13632_i16)];
_16 = 67366124536968259187112192605586727643_i128;
_4 = _10;
_20 = 203808018326170835294303407833709886640_u128 as u16;
_8 = [(-8709_i16),6862_i16,3245_i16,25281_i16];
_18.0.1 = !_20;
_2 = _9 - _7;
_18.2 = _13.0.1 as u64;
_16 = 81350825565300035385559722445278317030_i128 ^ 118185805176148240883884144144437660178_i128;
_13.2 = _18.2;
Goto(bb4)
}
bb4 = {
_4 = _10 | _10;
_21 = false;
_5 = [(-18913_i16),16897_i16,(-16603_i16),25810_i16];
Goto(bb5)
}
bb5 = {
_6 = 187483025930742647351887881179559159737_u128 as isize;
_13.0.1 = _16 as u16;
_10 = _4 * _4;
_11 = &_13.2;
_13.0.1 = _20;
_18.0.2 = RET;
_7 = _13.3 as isize;
_18.0.2 = _14;
RET = _18.0.2;
_20 = (*_11) as u16;
_18.0.1 = !_20;
_28 = !_20;
_18.1 = _13.0.3 as u32;
_1 = _9 + _2;
_25 = _21;
Call(_18.0.3 = core::intrinsics::transmute(_9), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_18.1 = !_13.1;
_14 = RET;
_11 = &_18.2;
_13.0.2 = _14;
_10 = _4 & _4;
_4 = _14 as i8;
_13.0.3 = !_18.0.3;
_16 = _1 as i128;
_29 = _28 * _28;
_4 = !_10;
_8 = [4748_i16,(-10776_i16),24325_i16,(-26233_i16)];
_27 = [(-757378010_i32),(-1391289780_i32),37330540_i32,383168446_i32];
_23 = &(*_11);
_11 = &(*_11);
_13.0.1 = _29;
Call(_1 = fn13(Move(_23), Move(_11), _2, _18.0.3, _2, _2, _16, _16, _18.0.3, _2, _13.0.3), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_18.3 = _13.3 + _13.3;
_11 = &_18.2;
_18.1 = _13.1 >> _16;
_28 = !_13.0.1;
_5 = [5403_i16,(-3657_i16),4879_i16,17667_i16];
_9 = _2 | _1;
_23 = &_13.2;
_8 = [4982_i16,16094_i16,28707_i16,(-14903_i16)];
_11 = Move(_23);
_3 = [_18.2,_13.2,_18.2];
_10 = _4;
_18.2 = _25 as u64;
RET = _18.0.2;
_10 = _4;
_13.0.1 = _28 << _9;
_34 = (-125324195_i32) as usize;
Goto(bb8)
}
bb8 = {
_9 = _1;
_20 = !_29;
_16 = RET as i128;
_5 = [(-20101_i16),10716_i16,2547_i16,(-18562_i16)];
Goto(bb9)
}
bb9 = {
_3 = [_13.2,_13.2,_13.2];
_35 = _34 << _13.0.1;
_18.0.3 = _13.0.3 << _9;
_1 = _9;
_32.0 = [_2,_9,_9];
Call(_10 = fn14(_32.0, _2, _1, _9, _13.0.1), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_32.1 = -_10;
Goto(bb11)
}
bb11 = {
_36 = _25;
Goto(bb12)
}
bb12 = {
_24 = _13.0.2;
_18.0.1 = !_13.0.1;
_8 = _5;
_37 = [_18.2,_18.2,_13.2,_13.2,_13.2];
_18.0.2 = _14;
_16 = _18.3 as i128;
_32.0 = [_2,_1,_9];
_18.0.2 = _12;
_20 = !_13.0.1;
_23 = &_18.2;
_35 = !_34;
_12 = RET;
_7 = _2;
_14 = _24;
_9 = _13.0.3 as isize;
_38 = !_18.1;
_21 = !_36;
_23 = &(*_23);
_27 = [935176841_i32,(-1427988053_i32),(-1052201000_i32),(-378980861_i32)];
_1 = -_9;
_12 = _18.0.2;
Goto(bb13)
}
bb13 = {
_11 = &(*_23);
_13.1 = _18.1 | _18.1;
Goto(bb14)
}
bb14 = {
_25 = _21;
_39 = !_13.0.1;
_3 = [(*_11),(*_23),_18.2];
_10 = _18.0.2 as i8;
_13.2 = (*_11);
_18.1 = _13.1 + _13.1;
_13.0.2 = _12;
_5 = [25118_i16,24694_i16,30229_i16,(-9117_i16)];
_8 = [(-23631_i16),(-711_i16),29671_i16,13895_i16];
_7 = _1;
_34 = _35 >> _32.1;
_24 = _13.0.2;
_6 = _9;
_13.3 = _32.1 as f64;
_29 = _13.3 as u16;
Goto(bb15)
}
bb15 = {
_18.0.2 = _24;
_25 = !_21;
_1 = _2 + _6;
_40.1 = [_21,_21,_21,_21,_25];
_40.1 = [_21,_36,_25,_21,_36];
_13.2 = (*_11);
_1 = _7 >> _13.1;
_27 = [104338777_i32,(-1015848559_i32),1054293630_i32,1687341734_i32];
_1 = _7 - _9;
_41 = _18.0.3 >> _39;
_36 = _21 ^ _21;
Goto(bb16)
}
bb16 = {
_39 = !_29;
_35 = _34;
_13.2 = !(*_11);
_7 = _1 - _2;
Goto(bb17)
}
bb17 = {
_12 = _14;
_40.2.0 = 179_u8;
_8 = [11078_i16,23852_i16,13386_i16,29589_i16];
_18.3 = -_13.3;
_32.1 = !_4;
_3 = [(*_11),_13.2,_13.2];
_21 = !_25;
_39 = !_18.0.1;
Goto(bb18)
}
bb18 = {
_18.0.2 = _13.0.2;
RET = _14;
_43 = _16;
_42 = _13.0.2;
_23 = Move(_11);
_21 = _13.3 < _18.3;
_28 = _39 >> _35;
_9 = _1;
_13.0.3 = _21 as i64;
_18.2 = !_13.2;
_40.2.2 = (-32605_i16) | 6314_i16;
_18.0.3 = _2 as i64;
_3 = [_18.2,_18.2,_13.2];
_11 = &_13.2;
_46 = _13.2 as f64;
_41 = _18.0.3 >> _13.1;
_32.0 = [_9,_2,_1];
Goto(bb19)
}
bb19 = {
_25 = _28 <= _28;
_13.0.1 = !_29;
Goto(bb20)
}
bb20 = {
_13.1 = _18.0.3 as u32;
_32.1 = _10;
_12 = _42;
_3 = [_18.2,(*_11),_13.2];
_52.2.2 = _40.2.2 ^ _40.2.2;
_52.3 = _40.2.0 % _40.2.0;
_25 = _18.1 != _13.1;
RET = _14;
_52.1 = [_21,_25,_25,_21,_25];
_47 = [_52.2.2,_52.2.2,_40.2.2,_52.2.2];
_35 = !_34;
_39 = _20 | _20;
_7 = -_6;
_54 = _13.3 != _18.3;
_13.3 = -_18.3;
_44 = [_28,_18.0.1,_20,_39];
_40.2.0 = 309175386997588705577775618984602087064_u128 as u8;
_53 = _18.2 as f32;
_40.2.2 = _52.2.2 & _52.2.2;
_30 = _39 + _13.0.1;
Goto(bb21)
}
bb21 = {
_20 = !_39;
_40.2.0 = !_52.3;
_32.1 = _4 - _10;
_18.0.1 = _13.1 as u16;
_57 = [323037640386513157090816993735340437938_u128,1596590094924158686972818970600439239_u128,123925132287931964164485763464133332629_u128,337882296448058729396445892236229954688_u128,135098907993986257252938457532334003015_u128,49596897300518010259146267630331879609_u128,232136830751952589228561295392514626610_u128,322114309734727010522781872250834610322_u128];
_61 = core::ptr::addr_of!(_52.2.0);
Goto(bb22)
}
bb22 = {
_32.1 = _4 & _4;
_8 = _5;
_13.1 = !_38;
Goto(bb23)
}
bb23 = {
_6 = (-1156400489_i32) as isize;
_65 = -_13.3;
_54 = _21;
_27 = [(-1430810618_i32),(-1476663303_i32),170844329_i32,(-211249252_i32)];
_52.2.1 = Adt20::Variant1 { fld0: (*_11),fld1: 207835046708216356368839573404334209240_u128,fld2: _40.2.0,fld3: _53,fld4: _13.1,fld5: 1205334524_i32,fld6: _18.0.3 };
_52.1 = [_25,_21,_36,_36,_54];
_36 = _54 | _25;
place!(Field::<u64>(Variant(_52.2.1, 1), 0)) = (*_11);
_41 = _18.0.3 - _18.0.3;
_32.1 = _4;
_58 = _52.2.2 as f32;
_56 = [_40.2.0,Field::<u8>(Variant(_52.2.1, 1), 2),_52.3,Field::<u8>(Variant(_52.2.1, 1), 2),Field::<u8>(Variant(_52.2.1, 1), 2),_52.3];
_62.0 = core::ptr::addr_of!(_40.2.0);
_46 = -_13.3;
place!(Field::<u32>(Variant(_52.2.1, 1), 4)) = !_13.1;
_22 = Adt43::Variant1 { fld0: Field::<f32>(Variant(_52.2.1, 1), 3),fld1: Move(_62.0) };
_21 = _25 ^ _25;
place!(Field::<*const u8>(Variant(_22, 1), 1)) = core::ptr::addr_of!(_68.3);
_30 = _20 - _13.0.1;
_68.2.1 = Adt20::Variant1 { fld0: (*_11),fld1: 122204729660694788813005844505130438237_u128,fld2: _40.2.0,fld3: Field::<f32>(Variant(_52.2.1, 1), 3),fld4: _38,fld5: (-792834602_i32),fld6: _41 };
_35 = _34 + _34;
_2 = _7;
place!(Field::<f32>(Variant(_22, 1), 0)) = Field::<f32>(Variant(_68.2.1, 1), 3);
Goto(bb24)
}
bb24 = {
SetDiscriminant(_22, 0);
_21 = _7 < _7;
_40.3 = _40.2.2 as u8;
_52.2.0 = !_40.3;
_55 = _34 as f32;
place!(Field::<i32>(Variant(_68.2.1, 1), 5)) = 764912004_i32;
(*_61) = _40.3;
(*_61) = Field::<u8>(Variant(_52.2.1, 1), 2);
_7 = _2 * _2;
place!(Field::<[bool; 5]>(Variant(_22, 0), 2)) = [_36,_21,_36,_21,_21];
_13.0.0 = &_40.2.2;
place!(Field::<i64>(Variant(_52.2.1, 1), 6)) = !_41;
_70 = _14;
_68.3 = _40.2.0;
_40.2.1 = Adt20::Variant1 { fld0: _18.2,fld1: 188450614025623669230601970679358729862_u128,fld2: _40.3,fld3: _55,fld4: _18.1,fld5: Field::<i32>(Variant(_68.2.1, 1), 5),fld6: Field::<i64>(Variant(_52.2.1, 1), 6) };
_48 = _35 as f64;
_53 = Field::<f32>(Variant(_40.2.1, 1), 3);
_35 = _34 & _34;
match Field::<i32>(Variant(_68.2.1, 1), 5) {
0 => bb7,
1 => bb5,
2 => bb25,
3 => bb26,
4 => bb27,
5 => bb28,
764912004 => bb30,
_ => bb29
}
}
bb25 = {
_12 = RET;
_13.0.3 = -(-8170008761807439920_i64);
_11 = &_13.2;
_5 = [24647_i16,26264_i16,9155_i16,12979_i16];
_8 = [20707_i16,15275_i16,(-9084_i16),9465_i16];
_13.0.1 = !57387_u16;
_13.1 = (*_11) as u32;
_13.0.1 = 30966_u16 * 6392_u16;
_13.0.2 = _14;
_14 = _12;
_8 = [(-15823_i16),(-28389_i16),2111_i16,5773_i16];
_6 = _2;
_9 = _2 - _7;
_13.3 = (*_11) as f64;
_4 = !_10;
RET = _12;
_5 = [(-20569_i16),(-18782_i16),(-15889_i16),(-13632_i16)];
_16 = 67366124536968259187112192605586727643_i128;
_4 = _10;
_20 = 203808018326170835294303407833709886640_u128 as u16;
_8 = [(-8709_i16),6862_i16,3245_i16,25281_i16];
_18.0.1 = !_20;
_2 = _9 - _7;
_18.2 = _13.0.1 as u64;
_16 = 81350825565300035385559722445278317030_i128 ^ 118185805176148240883884144144437660178_i128;
_13.2 = _18.2;
Goto(bb4)
}
bb26 = {
_32.1 = _4 & _4;
_8 = _5;
_13.1 = !_38;
Goto(bb23)
}
bb27 = {
_20 = !_39;
_40.2.0 = !_52.3;
_32.1 = _4 - _10;
_18.0.1 = _13.1 as u16;
_57 = [323037640386513157090816993735340437938_u128,1596590094924158686972818970600439239_u128,123925132287931964164485763464133332629_u128,337882296448058729396445892236229954688_u128,135098907993986257252938457532334003015_u128,49596897300518010259146267630331879609_u128,232136830751952589228561295392514626610_u128,322114309734727010522781872250834610322_u128];
_61 = core::ptr::addr_of!(_52.2.0);
Goto(bb22)
}
bb28 = {
_18.1 = !_13.1;
_14 = RET;
_11 = &_18.2;
_13.0.2 = _14;
_10 = _4 & _4;
_4 = _14 as i8;
_13.0.3 = !_18.0.3;
_16 = _1 as i128;
_29 = _28 * _28;
_4 = !_10;
_8 = [4748_i16,(-10776_i16),24325_i16,(-26233_i16)];
_27 = [(-757378010_i32),(-1391289780_i32),37330540_i32,383168446_i32];
_23 = &(*_11);
_11 = &(*_11);
_13.0.1 = _29;
Call(_1 = fn13(Move(_23), Move(_11), _2, _18.0.3, _2, _2, _16, _16, _18.0.3, _2, _13.0.3), ReturnTo(bb7), UnwindUnreachable())
}
bb29 = {
_3 = [_13.2,_13.2,_13.2];
_8 = [(-26099_i16),24298_i16,21252_i16,(-15918_i16)];
_12 = RET;
_5 = [(-13713_i16),(-12689_i16),(-3888_i16),(-20517_i16)];
_11 = &_13.2;
_12 = RET;
_14 = _12;
_3 = [(*_11),_13.2,(*_11)];
_14 = RET;
Goto(bb2)
}
bb30 = {
_18.3 = 112200850926337454392685509821231365832_u128 as f64;
place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)) = (_53, _52.1, 295128220637566325702871322986578742873_u128, _4);
place!(Field::<u128>(Variant(_40.2.1, 1), 1)) = Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2 & Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2;
_68.2.0 = !(*_61);
_52.2.2 = _40.2.2 | _40.2.2;
_26 = &place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)).2;
_41 = Field::<i64>(Variant(_40.2.1, 1), 6);
SetDiscriminant(_40.2.1, 0);
_62 = (Move(_61), _52.2.2);
place!(Field::<u32>(Variant(_52.2.1, 1), 4)) = !_13.1;
place!(Field::<f32>(Variant(_52.2.1, 1), 3)) = Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0 * _53;
_74 = core::ptr::addr_of!(_13);
_41 = !_13.0.3;
_13.0.1 = !_30;
_49 = _62.1;
_68.2.1 = Adt20::Variant1 { fld0: (*_11),fld1: (*_26),fld2: _52.3,fld3: Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0,fld4: _18.1,fld5: 1500806299_i32,fld6: _41 };
place!(Field::<u32>(Variant(_52.2.1, 1), 4)) = _13.1;
_44 = [_29,_13.0.1,_20,_29];
(*_74).0.1 = _28;
place!(Field::<i64>(Variant(_68.2.1, 1), 6)) = _52.2.2 as i64;
_78 = !_36;
Goto(bb31)
}
bb31 = {
(*_74).1 = !_38;
_23 = Move(_11);
_40.2.0 = _68.2.0;
place!(Field::<i64>(Variant(_40.2.1, 0), 1)) = !_13.0.3;
_69 = _43;
match Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2 {
0 => bb32,
295128220637566325702871322986578742873 => bb34,
_ => bb33
}
}
bb32 = {
_13.1 = _18.0.3 as u32;
_32.1 = _10;
_12 = _42;
_3 = [_18.2,(*_11),_13.2];
_52.2.2 = _40.2.2 ^ _40.2.2;
_52.3 = _40.2.0 % _40.2.0;
_25 = _18.1 != _13.1;
RET = _14;
_52.1 = [_21,_25,_25,_21,_25];
_47 = [_52.2.2,_52.2.2,_40.2.2,_52.2.2];
_35 = !_34;
_39 = _20 | _20;
_7 = -_6;
_54 = _13.3 != _18.3;
_13.3 = -_18.3;
_44 = [_28,_18.0.1,_20,_39];
_40.2.0 = 309175386997588705577775618984602087064_u128 as u8;
_53 = _18.2 as f32;
_40.2.2 = _52.2.2 & _52.2.2;
_30 = _39 + _13.0.1;
Goto(bb21)
}
bb33 = {
_12 = RET;
_13.0.3 = -(-8170008761807439920_i64);
_11 = &_13.2;
_5 = [24647_i16,26264_i16,9155_i16,12979_i16];
_8 = [20707_i16,15275_i16,(-9084_i16),9465_i16];
_13.0.1 = !57387_u16;
_13.1 = (*_11) as u32;
_13.0.1 = 30966_u16 * 6392_u16;
_13.0.2 = _14;
_14 = _12;
_8 = [(-15823_i16),(-28389_i16),2111_i16,5773_i16];
_6 = _2;
_9 = _2 - _7;
_13.3 = (*_11) as f64;
_4 = !_10;
RET = _12;
_5 = [(-20569_i16),(-18782_i16),(-15889_i16),(-13632_i16)];
_16 = 67366124536968259187112192605586727643_i128;
_4 = _10;
_20 = 203808018326170835294303407833709886640_u128 as u16;
_8 = [(-8709_i16),6862_i16,3245_i16,25281_i16];
_18.0.1 = !_20;
_2 = _9 - _7;
_18.2 = _13.0.1 as u64;
_16 = 81350825565300035385559722445278317030_i128 ^ 118185805176148240883884144144437660178_i128;
_13.2 = _18.2;
Goto(bb4)
}
bb34 = {
_13.2 = !_18.2;
place!(Field::<*mut i8>(Variant(_22, 0), 0)) = core::ptr::addr_of_mut!(_4);
SetDiscriminant(_22, 2);
_27 = [(-356522508_i32),(-1786176899_i32),210600049_i32,154490940_i32];
_22 = Adt43::Variant2 { fld0: 166838511_i32,fld1: _40.2.2,fld2: Move(_62) };
_41 = (*_74).0.1 as i64;
_60 = !_21;
place!(Field::<u128>(Variant(_68.2.1, 1), 1)) = 77477207519715007179459937476028153405_u128;
Call(place!(Field::<i16>(Variant(_22, 2), 1)) = core::intrinsics::bswap(Field::<(*const u8, i16)>(Variant(_22, 2), 2).1), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
_59 = &place!(Field::<u128>(Variant(_68.2.1, 1), 1));
_48 = _55 as f64;
_60 = Field::<f32>(Variant(_68.2.1, 1), 3) == Field::<f32>(Variant(_52.2.1, 1), 3);
_42 = (*_74).0.2;
_13.1 = 1403304901_i32 as u32;
place!(Field::<f32>(Variant(_68.2.1, 1), 3)) = _55;
_18.0.3 = (*_74).0.3 ^ _13.0.3;
place!(Field::<usize>(Variant(_40.2.1, 0), 3)) = _35 - _34;
_68.2.0 = !_40.3;
_21 = !_36;
place!(Field::<i32>(Variant(_22, 2), 0)) = (-1319473453_i32);
_32.0 = [_1,_7,_9];
_27 = [Field::<i32>(Variant(_22, 2), 0),Field::<i32>(Variant(_22, 2), 0),Field::<i32>(Variant(_22, 2), 0),Field::<i32>(Variant(_22, 2), 0)];
_45 = &(*_74).0;
_36 = !_54;
_80 = _28 as usize;
_63 = Adt27::Variant0 { fld0: _2 };
SetDiscriminant(_22, 0);
_40.1 = [_25,_60,_36,_25,_21];
SetDiscriminant(_63, 1);
place!(Field::<u128>(Variant(_52.2.1, 1), 1)) = (*_59) / (*_59);
RET = _70;
place!(Field::<u32>(Variant(_68.2.1, 1), 4)) = !_18.1;
place!(Field::<u64>(Variant(_40.2.1, 0), 2)) = !Field::<u64>(Variant(_68.2.1, 1), 0);
(*_74).3 = Field::<u8>(Variant(_52.2.1, 1), 2) as f64;
_32.0 = [_7,_1,_7];
_63 = Adt27::Variant0 { fld0: _2 };
_18 = (Move(_13.0), Field::<u32>(Variant(_52.2.1, 1), 4), Field::<u64>(Variant(_40.2.1, 0), 2), _48);
_52.1 = _40.1;
place!(Field::<u64>(Variant(_68.2.1, 1), 0)) = !Field::<u64>(Variant(_40.2.1, 0), 2);
Call(place!(Field::<usize>(Variant(_40.2.1, 0), 3)) = core::intrinsics::bswap(_80), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
(*_74).0.3 = -Field::<i64>(Variant(_40.2.1, 0), 1);
place!(Field::<u8>(Variant(_68.2.1, 1), 2)) = _12 as u8;
_8 = [_49,_49,_49,_40.2.2];
_26 = &(*_59);
place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)).0 = _53 + Field::<f32>(Variant(_68.2.1, 1), 3);
_80 = _35 & _35;
_1 = !Field::<isize>(Variant(_63, 0), 0);
_11 = &place!(Field::<u64>(Variant(_52.2.1, 1), 0));
_6 = !_7;
_13.0.1 = _28;
place!(Field::<u128>(Variant(_52.2.1, 1), 1)) = (*_59) % (*_59);
_8 = [_49,_52.2.2,_40.2.2,_49];
SetDiscriminant(_63, 1);
_18.0.2 = _42;
_61 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_63, 1), 4)));
Goto(bb37)
}
bb37 = {
_47 = _8;
_62.0 = Move(_61);
_75 = -_48;
_44 = [_39,_20,_39,_30];
_86 = Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0 - Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0;
_55 = _86;
_62.1 = _40.2.2;
RET = _14;
_39 = Field::<u32>(Variant(_52.2.1, 1), 4) as u16;
place!(Field::<i64>(Variant(_40.2.1, 0), 1)) = !_13.0.3;
place!(Field::<i32>(Variant(_52.2.1, 1), 5)) = -(-1517499322_i32);
place!(Field::<u8>(Variant(_63, 1), 4)) = !_68.2.0;
_10 = _52.2.2 as i8;
_33 = Move(_52.2.1);
SetDiscriminant(_33, 0);
_77 = !_21;
_52.3 = Field::<f32>(Variant(_68.2.1, 1), 3) as u8;
_83 = _32.0;
_37 = [_18.2,Field::<u64>(Variant(_40.2.1, 0), 2),_13.2,_18.2,Field::<u64>(Variant(_68.2.1, 1), 0)];
(*_74).3 = _48 - _46;
_68.2.2 = -_49;
place!(Field::<u128>(Variant(_68.2.1, 1), 1)) = _34 as u128;
_18.1 = _38 & _38;
Goto(bb38)
}
bb38 = {
_41 = (*_74).0.1 as i64;
place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)).1 = _52.1;
_40.3 = !_52.3;
_16 = _69 - _43;
place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)) = (_55, _40.1, Field::<u128>(Variant(_68.2.1, 1), 1), _4);
_92.2 = _35 - _80;
_14 = _42;
_68.2.0 = _40.3 - _52.3;
_33 = Adt20::Variant1 { fld0: _18.2,fld1: Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2,fld2: _68.2.0,fld3: _86,fld4: Field::<u32>(Variant(_68.2.1, 1), 4),fld5: (-1061338283_i32),fld6: (*_74).0.3 };
place!(Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1)).0 = -Field::<f32>(Variant(_68.2.1, 1), 3);
_53 = (*_74).0.3 as f32;
_59 = &place!(Field::<u128>(Variant(_33, 1), 1));
_16 = -_69;
(*_74).0.3 = Field::<u64>(Variant(_33, 1), 0) as i64;
_88.0 = [780238661_i32,(-23053465_i32),843291422_i32,(-1558147618_i32)];
_13.2 = Field::<u64>(Variant(_40.2.1, 0), 2);
Call(_43 = core::intrinsics::bswap(_16), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
_13.3 = _48 - _75;
_11 = &_18.2;
_73 = core::ptr::addr_of!(_63);
(*_74).0.0 = &_68.2.2;
place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).2 = _55 as i16;
_68.1 = _52.1;
(*_74).0.1 = _39;
_52.3 = Field::<u8>(Variant(_33, 1), 2) ^ Field::<u8>(Variant(_33, 1), 2);
_40.0 = &place!(Field::<u8>(Variant((*_73), 1), 4));
_94 = -_86;
place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).1 = Adt20::Variant1 { fld0: (*_11),fld1: Field::<u128>(Variant(_68.2.1, 1), 1),fld2: Field::<u8>(Variant(_33, 1), 2),fld3: Field::<f32>(Variant(_68.2.1, 1), 3),fld4: _18.1,fld5: 383522535_i32,fld6: _41 };
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).1, 1), 6)) = Field::<i64>(Variant(_33, 1), 6) - _41;
Goto(bb40)
}
bb40 = {
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_63, 1), 2)).1, 1), 6)) = -_41;
place!(Field::<u64>(Variant((*_73), 1), 0)) = !Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 0);
place!(Field::<(u8, Adt20, i16)>(Variant(_63, 1), 2)).0 = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 2) + _40.3;
_53 = _92.2 as f32;
Goto(bb41)
}
bb41 = {
_43 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 4) as i128;
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).1, 1), 6)) = !_41;
place!(Field::<f64>(Variant((*_73), 1), 1)) = Field::<usize>(Variant(_40.2.1, 0), 3) as f64;
_95 = Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 4) as f64;
_97 = Field::<f64>(Variant((*_73), 1), 1) + _13.3;
(*_74).0.1 = _30;
_88 = (_27,);
_52.0 = &place!(Field::<u8>(Variant((*_73), 1), 4));
place!(Field::<u8>(Variant(_68.2.1, 1), 2)) = _68.2.0;
_13.2 = _53 as u64;
place!(Field::<i32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).1, 1), 5)) = (-390409399_i32) + 463772737_i32;
place!(Field::<i64>(Variant(_68.2.1, 1), 6)) = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 2) as i64;
_99 = _41 as f64;
place!(Field::<u8>(Variant((*_73), 1), 4)) = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 2) >> Field::<i64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_63, 1), 2).1, 1), 6);
_35 = Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).3 as usize;
place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).2 = _68.2.2;
_85 = Field::<i32>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 5);
_57 = [Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 1),Field::<u128>(Variant(_68.2.1, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2,Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2).1, 1), 1),Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_63, 1), 2).1, 1), 1),(*_59)];
_40.2 = Move(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2));
_68.2.1 = Adt20::Variant1 { fld0: _13.2,fld1: Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2,fld2: Field::<u8>(Variant(_33, 1), 2),fld3: Field::<f32>(Variant(_33, 1), 3),fld4: _18.1,fld5: Field::<i32>(Variant(_40.2.1, 1), 5),fld6: _41 };
_85 = Field::<i32>(Variant(_40.2.1, 1), 5) + Field::<i32>(Variant(_40.2.1, 1), 5);
Goto(bb42)
}
bb42 = {
_87 = !_7;
Goto(bb43)
}
bb43 = {
place!(Field::<u64>(Variant((*_73), 1), 0)) = _13.2;
_94 = _53 * _86;
place!(Field::<(u8, Adt20, i16)>(Variant(_63, 1), 2)).2 = !_68.2.2;
_88.0 = _27;
_38 = _18.1 << Field::<i64>(Variant(_33, 1), 6);
place!(Field::<usize>(Variant((*_73), 1), 3)) = !_80;
_6 = !_87;
place!(Field::<u8>(Variant(_68.2.1, 1), 2)) = Field::<u128>(Variant(_33, 1), 1) as u8;
_56 = [Field::<u8>(Variant((*_73), 1), 4),Field::<u8>(Variant(_63, 1), 4),_40.3,Field::<u8>(Variant((*_73), 1), 4),_40.2.0,Field::<u8>(Variant((*_73), 1), 4)];
_40.0 = Move(_52.0);
place!(Field::<usize>(Variant((*_73), 1), 3)) = _92.2 & _80;
_18.0.1 = Field::<u64>(Variant((*_73), 1), 0) as u16;
_91 = RET as i64;
_68.2.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant((*_73), 1), 0),fld1: Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).2,fld2: _52.3,fld3: Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0,fld4: Field::<u32>(Variant(_40.2.1, 1), 4),fld5: Field::<i32>(Variant(_40.2.1, 1), 5),fld6: _18.0.3 };
_93 = Field::<f64>(Variant((*_73), 1), 1);
_48 = Field::<f64>(Variant(_63, 1), 1);
Goto(bb44)
}
bb44 = {
(*_74).3 = _30 as f64;
_48 = _46 * _46;
place!(Field::<u64>(Variant(_63, 1), 0)) = !_13.2;
_52.2.1 = Move(_40.2.1);
_13.0.3 = _28 as i64;
place!(Field::<u8>(Variant(_68.2.1, 1), 2)) = _13.0.3 as u8;
place!(Field::<f32>(Variant(_52.2.1, 1), 3)) = Field::<(f32, [bool; 5], u128, i8)>(Variant(_22, 0), 1).0;
(*_74).0.3 = Field::<i64>(Variant(_68.2.1, 1), 6) + _41;
_49 = _87 as i16;
_12 = _42;
_20 = Field::<u32>(Variant(_33, 1), 4) as u16;
_52.2.1 = Move(_68.2.1);
(*_74).0.2 = _70;
(*_74).0.2 = _70;
place!(Field::<f64>(Variant((*_73), 1), 1)) = _99 + _97;
place!(Field::<u32>(Variant(_33, 1), 4)) = !_38;
_34 = !Field::<usize>(Variant((*_73), 1), 3);
place!(Field::<f64>(Variant(_63, 1), 1)) = -_13.3;
_90.0 = _88.0;
_98 = !_9;
place!(Field::<usize>(Variant((*_73), 1), 3)) = _34 + _80;
place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).0 = _87 as u8;
_108 = &_52.2.1;
SetDiscriminant(_52.2.1, 0);
_21 = _60;
place!(Field::<u64>(Variant(_52.2.1, 0), 2)) = Field::<u64>(Variant(_63, 1), 0) << _52.3;
place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).0 = !_52.3;
(*_74).0.0 = &place!(Field::<(u8, Adt20, i16)>(Variant((*_73), 1), 2)).2;
Goto(bb45)
}
bb45 = {
_18.1 = _38;
_52.1 = [_60,_78,_54,_36,_36];
_21 = _54 & _25;
_61 = Move(_62.0);
_97 = (*_74).3;
_59 = &(*_59);
_92.1 = Move(_45);
_44 = [(*_74).0.1,_20,_20,_20];
_95 = _10 as f64;
place!(Field::<[bool; 5]>(Variant(_22, 0), 2)) = _40.1;
_64 = _14;
place!(Field::<[bool; 5]>(Variant(_22, 0), 2)) = [_54,_78,_54,_60,_36];
_18.0.1 = _92.2 as u16;
_110 = [_36,_60,_21,_36,_54];
_88 = (_27,);
_43 = -_16;
(*_74).0.1 = !_29;
(*_73) = Adt27::Variant0 { fld0: _7 };
_11 = &(*_11);
_11 = &place!(Field::<u64>(Variant(_52.2.1, 0), 2));
_103.0 = _18.0.1;
_69 = _16 + _16;
_113.3 = !_13.0.3;
_60 = _25 | _77;
_90 = (_88.0,);
Goto(bb46)
}
bb46 = {
_46 = _39 as f64;
_98 = -_2;
(*_74).0.3 = _18.0.3 ^ Field::<i64>(Variant(_33, 1), 6);
_67 = Adt44::Variant0 { fld0: _86,fld1: _34,fld2: Move(_63),fld3: (*_74).3 };
_18.0.1 = !_103.0;
_46 = _39 as f64;
_14 = _42;
_50 = [_49,_49,_49,_49,_52.2.2,_49,_40.2.2];
_46 = (*_74).3 + (*_74).3;
_90.0 = [_85,_85,_85,_85];
_101 = _13.3 + (*_74).3;
_52.0 = &_52.2.0;
place!(Field::<usize>(Variant(_52.2.1, 0), 3)) = _92.2;
place!(Field::<u8>(Variant(_33, 1), 2)) = _40.2.0;
_82 = Field::<u32>(Variant(_33, 1), 4) as isize;
_110 = [_77,_25,_25,_60,_78];
_39 = !_29;
_40.2.0 = _54 as u8;
_101 = _65 * _99;
_48 = Field::<f64>(Variant(_67, 0), 3) - _46;
_64 = _13.0.2;
place!(Field::<*mut i8>(Variant(_22, 0), 0)) = core::ptr::addr_of_mut!(_10);
Goto(bb47)
}
bb47 = {
_64 = RET;
_98 = _18.3 as isize;
_103.1.1 = _98 * Field::<isize>(Variant(Field::<Adt27>(Variant(_67, 0), 2), 0), 0);
_62.0 = Move(_61);
_11 = &_18.2;
_73 = core::ptr::addr_of!(_92.0);
_4 = _10;
_111 = _93 - _93;
place!(Field::<u64>(Variant(_33, 1), 0)) = !_13.2;
SetDiscriminant(_22, 2);
_88 = (_90.0,);
_119 = core::ptr::addr_of!(_68.2.0);
_98 = -_9;
_104 = core::ptr::addr_of!(_92.0);
_42 = _14;
_110 = [_54,_78,_77,_25,_21];
_115 = _82;
place!(Field::<Adt27>(Variant(_67, 0), 2)) = Adt27::Variant0 { fld0: _115 };
place!(Field::<(*const u8, i16)>(Variant(_22, 2), 2)).1 = _52.2.2 - _49;
_40.2.2 = Field::<(*const u8, i16)>(Variant(_22, 2), 2).1 - _68.2.2;
place!(Field::<(*const u8, i16)>(Variant(_22, 2), 2)).0 = Move(_62.0);
_111 = (*_74).3;
_2 = _69 as isize;
RET = (*_74).0.2;
Goto(bb48)
}
bb48 = {
_26 = &place!(Field::<u128>(Variant(_33, 1), 1));
_36 = _54;
_114 = [_69,_69,_16,_16,_69,_69,_43];
(*_74).3 = _75 - _97;
_95 = Field::<f64>(Variant(_67, 0), 3);
_113.1 = _29;
_6 = _82;
_68.3 = Field::<u8>(Variant(_33, 1), 2);
_10 = _32.1 + _4;
_118 = RET;
_126 = _70;
_35 = Field::<usize>(Variant(_52.2.1, 0), 3);
_94 = -_55;
Goto(bb49)
}
bb49 = {
_26 = &(*_26);
_121 = &place!(Field::<f64>(Variant(_67, 0), 3));
_62.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_33, 1), 2)));
_18.2 = Field::<u64>(Variant(_33, 1), 0) | Field::<u64>(Variant(_33, 1), 0);
_75 = (*_119) as f64;
_123 = !_36;
_52.3 = _40.3;
_128 = Adt30::Variant1 { fld0: _85,fld1: (*_74).0.1,fld2: Move(_119) };
_25 = _99 <= _101;
place!(Field::<u64>(Variant(_52.2.1, 0), 2)) = _123 as u64;
_103.0 = (*_74).0.1 - (*_74).0.1;
_38 = _18.1 << _115;
_39 = _103.0;
_14 = _70;
_52.2.0 = _68.3;
Goto(bb50)
}
bb50 = {
_68.2.0 = !_40.3;
_87 = _103.1.1 & _82;
_18.1 = Field::<u32>(Variant(_33, 1), 4);
Goto(bb51)
}
bb51 = {
_20 = !(*_74).0.1;
(*_73) = Move(Field::<Adt27>(Variant(_67, 0), 2));
_43 = _77 as i128;
(*_74).3 = _101 + _111;
_24 = RET;
_111 = -Field::<f64>(Variant(_67, 0), 3);
_133 = -_87;
place!(Field::<f32>(Variant(_67, 0), 0)) = Field::<(*const u8, i16)>(Variant(_22, 2), 2).1 as f32;
place!(Field::<Adt27>(Variant(_67, 0), 2)) = Move(_92.0);
_103.1.0 = _40.2.2;
_33 = Adt20::Variant1 { fld0: _18.2,fld1: 60149544074497857377492994695451931908_u128,fld2: _68.2.0,fld3: _53,fld4: _18.1,fld5: _85,fld6: _18.0.3 };
_18.0.0 = &place!(Field::<(*const u8, i16)>(Variant(_22, 2), 2)).1;
_54 = Field::<u64>(Variant(_33, 1), 0) > _18.2;
_75 = Field::<i32>(Variant(_33, 1), 5) as f64;
Goto(bb52)
}
bb52 = {
_118 = (*_74).0.2;
_83 = [_103.1.1,_9,_1];
_113.2 = _14;
place!(Field::<f32>(Variant(_67, 0), 0)) = _53 - Field::<f32>(Variant(_33, 1), 3);
(*_74).0.2 = _70;
_92.0 = Adt27::Variant0 { fld0: _7 };
place!(Field::<u128>(Variant(_33, 1), 1)) = _32.1 as u128;
_62 = (Move(Field::<*const u8>(Variant(_128, 1), 2)), _103.1.0);
Goto(bb53)
}
bb53 = {
_14 = _12;
_16 = -_43;
_99 = Field::<u128>(Variant(_33, 1), 1) as f64;
_117 = !_38;
_92.0 = Move(Field::<Adt27>(Variant(_67, 0), 2));
SetDiscriminant(_33, 1);
place!(Field::<i32>(Variant(_128, 1), 0)) = _13.2 as i32;
_18.0.3 = _41 * (*_74).0.3;
_52.1 = _40.1;
_7 = 209726256962102944328967485391092735143_u128 as isize;
_68.2.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_52.2.1, 0), 2),fld1: 230008446544720224822261058929009702263_u128,fld2: _52.3,fld3: _94,fld4: _38,fld5: Field::<i32>(Variant(_128, 1), 0),fld6: _113.3 };
_36 = _123;
_40.2.2 = -_103.1.0;
_95 = -_111;
Goto(bb54)
}
bb54 = {
_134 = _4;
_68.2.2 = (*_74).0.2 as i16;
SetDiscriminant((*_104), 0);
_7 = _87 * _103.1.1;
_40.1 = _110;
place!(Field::<isize>(Variant((*_73), 0), 0)) = _29 as isize;
place!(Field::<u128>(Variant(_33, 1), 1)) = _10 as u128;
_143 = _34 | Field::<usize>(Variant(_52.2.1, 0), 3);
_18.0.0 = &place!(Field::<(*const u8, i16)>(Variant(_22, 2), 2)).1;
place!(Field::<usize>(Variant(_67, 0), 1)) = _143 ^ _80;
place!(Field::<usize>(Variant(_52.2.1, 0), 3)) = _34 << Field::<u32>(Variant(_68.2.1, 1), 4);
_126 = _24;
_63 = Adt27::Variant0 { fld0: _87 };
_62 = (Move(Field::<(*const u8, i16)>(Variant(_22, 2), 2).0), Field::<(*const u8, i16)>(Variant(_22, 2), 2).1);
place!(Field::<i64>(Variant(_52.2.1, 0), 1)) = _18.0.3 + _13.0.3;
SetDiscriminant(_63, 0);
_79 = &_18.0;
_52.1 = _40.1;
_45 = &_18.0;
SetDiscriminant((*_104), 0);
place!(Field::<isize>(Variant((*_104), 0), 0)) = _6 ^ _7;
place!(Field::<u8>(Variant(_68.2.1, 1), 2)) = _4 as u8;
_144 = !_78;
_145 = Move(_74);
_84 = Adt30::Variant0 { fld0: _77 };
place!(Field::<f32>(Variant(_68.2.1, 1), 3)) = _92.2 as f32;
Goto(bb55)
}
bb55 = {
SetDiscriminant(_84, 0);
place!(Field::<i64>(Variant(_33, 1), 6)) = _113.3;
_126 = (*_45).2;
_125 = _55 * _94;
SetDiscriminant((*_104), 0);
place!(Field::<Adt27>(Variant(_67, 0), 2)) = Adt27::Variant0 { fld0: _87 };
_138 = core::ptr::addr_of!(_121);
place!(Field::<isize>(Variant(_63, 0), 0)) = -_82;
_125 = _94;
_141 = (Move(_63), Move(_45), _34);
_13 = (Move(_18.0), Field::<u32>(Variant(_68.2.1, 1), 4), Field::<u64>(Variant(_52.2.1, 0), 2), _111);
place!(Field::<Adt27>(Variant(_67, 0), 2)) = Adt27::Variant0 { fld0: _98 };
place!(Field::<isize>(Variant((*_104), 0), 0)) = _133;
_129 = core::ptr::addr_of!(_18);
place!(Field::<isize>(Variant((*_73), 0), 0)) = -Field::<isize>(Variant(_141.0, 0), 0);
place!(Field::<i32>(Variant(_68.2.1, 1), 5)) = Field::<i32>(Variant(_128, 1), 0) & Field::<i32>(Variant(_128, 1), 0);
Goto(bb56)
}
bb56 = {
_89 = _40.3 as usize;
_57 = [Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1),Field::<u128>(Variant(_33, 1), 1)];
_52.2.1 = Adt20::Variant1 { fld0: _18.2,fld1: Field::<u128>(Variant(_33, 1), 1),fld2: _40.2.0,fld3: Field::<f32>(Variant(_68.2.1, 1), 3),fld4: (*_129).1,fld5: Field::<i32>(Variant(_68.2.1, 1), 5),fld6: Field::<i64>(Variant(_68.2.1, 1), 6) };
_143 = _141.2 ^ _34;
_90 = (_88.0,);
_61 = Move(_62.0);
_13.1 = !(*_129).1;
_83 = [Field::<isize>(Variant((*_73), 0), 0),Field::<isize>(Variant(_92.0, 0), 0),_9];
_130 = Move(_104);
place!(Field::<i64>(Variant(_33, 1), 6)) = -_13.0.3;
_72 = Field::<usize>(Variant(_67, 0), 1) as i32;
_36 = !_77;
_122 = _114;
_76 = Move(_11);
_29 = !_13.0.1;
_101 = -_13.3;
Goto(bb57)
}
bb57 = {
_18.0.1 = _39 & Field::<u16>(Variant(_128, 1), 1);
Goto(bb58)
}
bb58 = {
_146 = [Field::<i32>(Variant(_52.2.1, 1), 5),Field::<i32>(Variant(_68.2.1, 1), 5),Field::<i32>(Variant(_52.2.1, 1), 5),Field::<i32>(Variant(_68.2.1, 1), 5)];
_59 = &place!(Field::<u128>(Variant(_33, 1), 1));
_9 = _12 as isize;
_148.2 = RET;
_30 = _18.0.1 << Field::<u32>(Variant(_52.2.1, 1), 4);
_18.0.2 = _64;
_136 = _18.2;
(*_129).0.0 = &_49;
_113.2 = _126;
_13.0 = (Move(_18.0.0), Field::<u16>(Variant(_128, 1), 1), _113.2, Field::<i64>(Variant(_68.2.1, 1), 6));
_103.1.0 = Field::<(*const u8, i16)>(Variant(_22, 2), 2).1;
Goto(bb59)
}
bb59 = {
_89 = (*_121) as usize;
Goto(bb60)
}
bb60 = {
Call(_151 = dump_var(12_usize, 20_usize, Move(_20), 90_usize, Move(_90), 8_usize, Move(_8), 110_usize, Move(_110)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_151 = dump_var(12_usize, 14_usize, Move(_14), 98_usize, Move(_98), 32_usize, Move(_32), 83_usize, Move(_83)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_151 = dump_var(12_usize, 1_usize, Move(_1), 144_usize, Move(_144), 12_usize, Move(_12), 5_usize, Move(_5)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_151 = dump_var(12_usize, 25_usize, Move(_25), 43_usize, Move(_43), 115_usize, Move(_115), 87_usize, Move(_87)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_151 = dump_var(12_usize, 57_usize, Move(_57), 2_usize, Move(_2), 122_usize, Move(_122), 36_usize, Move(_36)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_151 = dump_var(12_usize, 3_usize, Move(_3), 89_usize, Move(_89), 38_usize, Move(_38), 146_usize, Move(_146)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_151 = dump_var(12_usize, 54_usize, Move(_54), 42_usize, Move(_42), 70_usize, Move(_70), 35_usize, Move(_35)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Call(_151 = dump_var(12_usize, 114_usize, Move(_114), 143_usize, Move(_143), 29_usize, Move(_29), 7_usize, Move(_7)), ReturnTo(bb68), UnwindUnreachable())
}
bb68 = {
Call(_151 = dump_var(12_usize, 44_usize, Move(_44), 126_usize, Move(_126), 152_usize, _152, 152_usize, _152), ReturnTo(bb69), UnwindUnreachable())
}
bb69 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: &'static u64,mut _2: &'static u64,mut _3: isize,mut _4: i64,mut _5: isize,mut _6: isize,mut _7: i128,mut _8: i128,mut _9: i64,mut _10: isize,mut _11: i64) -> isize {
mir! {
type RET = isize;
let _12: i16;
let _13: &'static (&'static i16, u16, char, i64);
let _14: f32;
let _15: [i8; 2];
let _16: *mut i8;
let _17: Adt44;
let _18: ([i32; 4],);
let _19: *mut u128;
let _20: ();
let _21: ();
{
_8 = -_7;
RET = _5 >> _7;
_4 = !_9;
RET = 84001787_i32 as isize;
RET = 38_u8 as isize;
_11 = _4;
_4 = -_11;
_6 = _5 ^ _10;
_10 = _3 >> _4;
_9 = 86257222343984141394330154255284587750_u128 as i64;
_14 = _4 as f32;
_7 = _8;
_11 = -_4;
_9 = _4;
_15 = [13_i8,115_i8];
_10 = 79685245_u32 as isize;
_7 = _4 as i128;
_15 = [(-88_i8),95_i8];
Call(_4 = core::intrinsics::bswap(_11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14 = 24969_u16 as f32;
_8 = 14650701589457640425_usize as i128;
_6 = !_5;
_10 = 25377_u16 as isize;
_4 = true as i64;
_6 = !_3;
_10 = _6 + _3;
_6 = _3;
_10 = -_3;
RET = 4486003375811808583_u64 as isize;
_11 = _9 | _9;
_6 = _10;
_3 = !_10;
_8 = _7 + _7;
_6 = _10;
RET = !_10;
_8 = _11 as i128;
_7 = _8 * _8;
_4 = (-15_i8) as i64;
_4 = -_11;
_3 = _6 * _5;
_3 = 2695110231_u32 as isize;
_4 = -_11;
Goto(bb2)
}
bb2 = {
Call(_20 = dump_var(13_usize, 6_usize, Move(_6), 8_usize, Move(_8), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_20 = dump_var(13_usize, 10_usize, Move(_10), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [isize; 3],mut _2: isize,mut _3: isize,mut _4: isize,mut _5: u16) -> i8 {
mir! {
type RET = i8;
let _6: *mut [i8; 3];
let _7: *const *mut i8;
let _8: &'static (i16, isize, i16);
let _9: bool;
let _10: [bool; 5];
let _11: *const Adt27;
let _12: *mut u128;
let _13: f64;
let _14: i128;
let _15: &'static u8;
let _16: Adt29;
let _17: &'static (i16, isize, i16);
let _18: (u8, Adt20, i16);
let _19: ((&'static i16, u16, char, i64), u32, u64, f64);
let _20: *const u8;
let _21: [i32; 4];
let _22: char;
let _23: char;
let _24: u32;
let _25: [i32; 4];
let _26: u64;
let _27: [i128; 7];
let _28: f64;
let _29: usize;
let _30: ([isize; 3], i8);
let _31: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _32: f64;
let _33: f32;
let _34: f32;
let _35: [u64; 5];
let _36: isize;
let _37: i8;
let _38: usize;
let _39: [i8; 1];
let _40: ();
let _41: ();
{
RET = 112_i8;
RET = 76_i8;
_1 = [_4,_4,_3];
_1 = [_4,_2,_2];
RET = (-98_i8) | 105_i8;
_1 = [_3,_3,_4];
_3 = _4;
_5 = 59308_u16;
_4 = 3813654396_u32 as isize;
_4 = _3;
_4 = _2 ^ _3;
_4 = _3;
_5 = 3_usize as u16;
Goto(bb1)
}
bb1 = {
_5 = !8854_u16;
_2 = _3 * _3;
RET = 82_i8;
_5 = !4040_u16;
_2 = !_3;
RET = 108_i8 | 2_i8;
_3 = RET as isize;
_4 = _2 * _2;
_3 = (-24970585338399415443631334483074387545_i128) as isize;
_5 = 26027_u16;
RET = (-116_i8);
_3 = _2;
RET = !35_i8;
_4 = _2;
_4 = _3;
_4 = _3 * _3;
_1 = [_4,_4,_3];
_2 = _3 << _4;
_1 = [_3,_2,_2];
Goto(bb2)
}
bb2 = {
RET = 52_i8;
_2 = -_3;
_2 = _4 ^ _3;
_1 = [_2,_2,_3];
_3 = _4 | _4;
_5 = 185_u8 as u16;
_1 = [_3,_3,_3];
_3 = _2;
_5 = !33313_u16;
RET = 92_i8 ^ (-40_i8);
_3 = _4 ^ _4;
Goto(bb3)
}
bb3 = {
RET = _5 as i8;
RET = 78_i8;
_5 = !59940_u16;
_1 = [_2,_3,_3];
RET = !98_i8;
_9 = _3 > _4;
RET = 119_i8 ^ (-115_i8);
_10 = [_9,_9,_9,_9,_9];
_1 = [_4,_2,_4];
_1 = [_4,_2,_3];
_10 = [_9,_9,_9,_9,_9];
_2 = (-34795062125320906481115028910942134867_i128) as isize;
Goto(bb4)
}
bb4 = {
_10 = [_9,_9,_9,_9,_9];
_1 = [_3,_3,_4];
RET = 105_i8;
RET = (-66_i8);
RET = 44_i8 + 111_i8;
_2 = -_3;
RET = !(-54_i8);
_5 = 4832470025474107600_i64 as u16;
_13 = (-31127343191325809418423122088955077244_i128) as f64;
_1 = [_3,_2,_4];
_14 = -(-109672164412973113385199615030084120034_i128);
RET = !1_i8;
RET = (-87_i8);
_4 = 4647134292690030297_u64 as isize;
_19.1 = !3781014324_u32;
_19.0.1 = !_5;
_18.2 = 25058_i16 | (-12508_i16);
_9 = false;
_9 = true;
_19.2 = !14127798862284488246_u64;
Call(_5 = fn15(_10, _10, _3), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_19.2 = 289057012989869145024542631742600499920_u128 as u64;
_18.2 = 13658_i16;
_19.0.3 = (-4845839096759495546_i64);
_21 = [(-794406175_i32),958901300_i32,1881364992_i32,(-2057605343_i32)];
_18.0 = !112_u8;
_4 = !_2;
_19.0.3 = (-5531260460656498144_i64);
_15 = &_18.0;
_5 = _19.0.3 as u16;
_3 = _4 >> _4;
_5 = _19.0.1;
_23 = '\u{5dbec}';
_10 = [_9,_9,_9,_9,_9];
_19.0.3 = _18.2 as i64;
Goto(bb6)
}
bb6 = {
_5 = _19.0.1 << _2;
_9 = !false;
_22 = _23;
_19.0.2 = _22;
_14 = 1058981611434362216224441152225709657_i128;
_1 = [_2,_4,_3];
_21 = [(-295872764_i32),1333418526_i32,(-1992594004_i32),(-1342113530_i32)];
_13 = 204063606880200413131903852267947771698_u128 as f64;
match _18.2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
6 => bb8,
13658 => bb10,
_ => bb9
}
}
bb7 = {
_19.2 = 289057012989869145024542631742600499920_u128 as u64;
_18.2 = 13658_i16;
_19.0.3 = (-4845839096759495546_i64);
_21 = [(-794406175_i32),958901300_i32,1881364992_i32,(-2057605343_i32)];
_18.0 = !112_u8;
_4 = !_2;
_19.0.3 = (-5531260460656498144_i64);
_15 = &_18.0;
_5 = _19.0.3 as u16;
_3 = _4 >> _4;
_5 = _19.0.1;
_23 = '\u{5dbec}';
_10 = [_9,_9,_9,_9,_9];
_19.0.3 = _18.2 as i64;
Goto(bb6)
}
bb8 = {
_10 = [_9,_9,_9,_9,_9];
_1 = [_3,_3,_4];
RET = 105_i8;
RET = (-66_i8);
RET = 44_i8 + 111_i8;
_2 = -_3;
RET = !(-54_i8);
_5 = 4832470025474107600_i64 as u16;
_13 = (-31127343191325809418423122088955077244_i128) as f64;
_1 = [_3,_2,_4];
_14 = -(-109672164412973113385199615030084120034_i128);
RET = !1_i8;
RET = (-87_i8);
_4 = 4647134292690030297_u64 as isize;
_19.1 = !3781014324_u32;
_19.0.1 = !_5;
_18.2 = 25058_i16 | (-12508_i16);
_9 = false;
_9 = true;
_19.2 = !14127798862284488246_u64;
Call(_5 = fn15(_10, _10, _3), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
_5 = !8854_u16;
_2 = _3 * _3;
RET = 82_i8;
_5 = !4040_u16;
_2 = !_3;
RET = 108_i8 | 2_i8;
_3 = RET as isize;
_4 = _2 * _2;
_3 = (-24970585338399415443631334483074387545_i128) as isize;
_5 = 26027_u16;
RET = (-116_i8);
_3 = _2;
RET = !35_i8;
_4 = _2;
_4 = _3;
_4 = _3 * _3;
_1 = [_4,_4,_3];
_2 = _3 << _4;
_1 = [_3,_2,_2];
Goto(bb2)
}
bb10 = {
_15 = &(*_15);
_5 = _19.0.1;
_19.2 = 8544495316658183495_usize as u64;
_20 = core::ptr::addr_of!((*_15));
_19.0.1 = 100818527438673212518401032805509908473_u128 as u16;
_19.0.0 = &_18.2;
_3 = _4;
_21 = [704345933_i32,1250118298_i32,118145561_i32,(-1931300528_i32)];
_4 = _2 | _2;
_19.1 = 3115654967_u32 ^ 1883613669_u32;
_5 = _19.0.1;
_1 = [_3,_2,_2];
_19.0.3 = !1798321456414453916_i64;
_19.0.1 = !_5;
_19.3 = 324137407916024003023838557878680647966_u128 as f64;
Goto(bb11)
}
bb11 = {
_25 = [2054177753_i32,(-619042759_i32),(-433522308_i32),2018400204_i32];
_18.0 = !198_u8;
_19.1 = !1370182806_u32;
_1 = [_4,_3,_4];
RET = 27_i8 ^ (-76_i8);
_27 = [_14,_14,_14,_14,_14,_14,_14];
_1 = [_3,_4,_3];
_24 = !_19.1;
RET = !92_i8;
_19.0.2 = _23;
_19.0.0 = &_18.2;
match _18.2 {
13658 => bb12,
_ => bb4
}
}
bb12 = {
_24 = !_19.1;
_25 = [2008384267_i32,(-1196074283_i32),1341279264_i32,1971366439_i32];
_13 = _19.3;
_21 = _25;
_29 = 4264637944756050145_usize;
_19.0.2 = _23;
_30 = (_1, RET);
_21 = [(-1056081739_i32),(-524315836_i32),134247424_i32,1894434712_i32];
_19.0.3 = _29 as i64;
_27 = [_14,_14,_14,_14,_14,_14,_14];
_19.0.2 = _22;
RET = _30.1 + _30.1;
_1 = _30.0;
_19.0.1 = _5;
_19.1 = _24 >> _2;
_19.0.2 = _22;
_19.2 = 2741295946073967995_u64 - 9159606417801523552_u64;
_29 = _18.0 as usize;
match _18.2 {
0 => bb8,
13658 => bb13,
_ => bb9
}
}
bb13 = {
_19.3 = -_13;
_22 = _19.0.2;
_9 = _3 < _4;
_30.1 = -RET;
_19.0.1 = _5 << _3;
_19.0.0 = &_18.2;
_31 = core::ptr::addr_of!(_19);
_24 = _19.1;
_16 = Adt29::Variant2 { fld0: (*_31).2,fld1: 176489120102135434837252862029861410479_u128,fld2: _4,fld3: (*_31).0.1,fld4: _18.2,fld5: 862144655_i32 };
(*_31).1 = _24 >> (*_31).0.1;
_25 = [(-1016716497_i32),(-1366064016_i32),(-931900036_i32),(-1605927159_i32)];
(*_31).0.0 = &_18.2;
_12 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_16, 2), 1)));
(*_31).1 = !_24;
_34 = Field::<i16>(Variant(_16, 2), 4) as f32;
_13 = (*_31).3;
_15 = &_18.0;
_33 = _34 * _34;
_24 = (*_31).1;
_20 = core::ptr::addr_of!(_18.0);
(*_31).0.3 = (-6323535757582700194_i64) * 8707138091831337846_i64;
place!(Field::<i32>(Variant(_16, 2), 5)) = 1160496588_i32 - 1771808696_i32;
(*_12) = (*_31).0.1 as u128;
_26 = (*_31).2 ^ _19.2;
_1 = [_2,_4,_3];
_32 = _13 + _13;
(*_31).0.1 = !Field::<u16>(Variant(_16, 2), 3);
place!(Field::<i32>(Variant(_16, 2), 5)) = _9 as i32;
_18.2 = Field::<i16>(Variant(_16, 2), 4);
Goto(bb14)
}
bb14 = {
_29 = _14 as usize;
place!(Field::<u128>(Variant(_16, 2), 1)) = 158711943322731624594350663667486873041_u128 - 283126473488820671663627309462171736873_u128;
match Field::<i16>(Variant(_16, 2), 4) {
0 => bb15,
1 => bb16,
13658 => bb18,
_ => bb17
}
}
bb15 = {
_10 = [_9,_9,_9,_9,_9];
_1 = [_3,_3,_4];
RET = 105_i8;
RET = (-66_i8);
RET = 44_i8 + 111_i8;
_2 = -_3;
RET = !(-54_i8);
_5 = 4832470025474107600_i64 as u16;
_13 = (-31127343191325809418423122088955077244_i128) as f64;
_1 = [_3,_2,_4];
_14 = -(-109672164412973113385199615030084120034_i128);
RET = !1_i8;
RET = (-87_i8);
_4 = 4647134292690030297_u64 as isize;
_19.1 = !3781014324_u32;
_19.0.1 = !_5;
_18.2 = 25058_i16 | (-12508_i16);
_9 = false;
_9 = true;
_19.2 = !14127798862284488246_u64;
Call(_5 = fn15(_10, _10, _3), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
RET = _5 as i8;
RET = 78_i8;
_5 = !59940_u16;
_1 = [_2,_3,_3];
RET = !98_i8;
_9 = _3 > _4;
RET = 119_i8 ^ (-115_i8);
_10 = [_9,_9,_9,_9,_9];
_1 = [_4,_2,_4];
_1 = [_4,_2,_3];
_10 = [_9,_9,_9,_9,_9];
_2 = (-34795062125320906481115028910942134867_i128) as isize;
Goto(bb4)
}
bb17 = {
_19.2 = 289057012989869145024542631742600499920_u128 as u64;
_18.2 = 13658_i16;
_19.0.3 = (-4845839096759495546_i64);
_21 = [(-794406175_i32),958901300_i32,1881364992_i32,(-2057605343_i32)];
_18.0 = !112_u8;
_4 = !_2;
_19.0.3 = (-5531260460656498144_i64);
_15 = &_18.0;
_5 = _19.0.3 as u16;
_3 = _4 >> _4;
_5 = _19.0.1;
_23 = '\u{5dbec}';
_10 = [_9,_9,_9,_9,_9];
_19.0.3 = _18.2 as i64;
Goto(bb6)
}
bb18 = {
(*_31).2 = !_26;
(*_31).2 = _26;
RET = _30.1 << _2;
_30 = (_1, RET);
_23 = (*_31).0.2;
(*_31).3 = -_32;
SetDiscriminant(_16, 0);
_30.1 = -RET;
_34 = _33;
_1 = _30.0;
_19.2 = _19.0.3 as u64;
_27 = [_14,_14,_14,_14,_14,_14,_14];
_14 = _18.2 as i128;
place!(Field::<char>(Variant(_16, 0), 1)) = (*_31).0.2;
Goto(bb19)
}
bb19 = {
Call(_40 = dump_var(14_usize, 4_usize, Move(_4), 29_usize, Move(_29), 3_usize, Move(_3), 26_usize, Move(_26)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_40 = dump_var(14_usize, 25_usize, Move(_25), 24_usize, Move(_24), 5_usize, Move(_5), 30_usize, Move(_30)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: [bool; 5],mut _2: [bool; 5],mut _3: isize) -> u16 {
mir! {
type RET = u16;
let _4: isize;
let _5: *mut *const *mut i8;
let _6: [u16; 8];
let _7: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _8: isize;
let _9: isize;
let _10: (f32, [bool; 5], u128, i8);
let _11: f64;
let _12: f64;
let _13: (i16, isize, i16);
let _14: Adt76;
let _15: i16;
let _16: &'static Adt20;
let _17: *const u8;
let _18: u128;
let _19: f64;
let _20: isize;
let _21: [u64; 5];
let _22: char;
let _23: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _24: i32;
let _25: *const [u16; 4];
let _26: bool;
let _27: i128;
let _28: [isize; 3];
let _29: (i16, isize, i16);
let _30: *const [u16; 4];
let _31: isize;
let _32: *mut [u64; 3];
let _33: isize;
let _34: *mut i8;
let _35: isize;
let _36: isize;
let _37: &'static f64;
let _38: u16;
let _39: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _40: bool;
let _41: ((u8, Adt20, i16), *mut u128);
let _42: Adt30;
let _43: f64;
let _44: u32;
let _45: *mut *const u8;
let _46: *mut *const *mut i8;
let _47: u8;
let _48: u64;
let _49: usize;
let _50: f32;
let _51: (f32, [bool; 5], u128, i8);
let _52: u16;
let _53: (u16, (i16, isize, i16));
let _54: isize;
let _55: &'static *const &'static f64;
let _56: *const i32;
let _57: u128;
let _58: isize;
let _59: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _60: isize;
let _61: Adt43;
let _62: isize;
let _63: ((&'static i16, u16, char, i64), u32, u64, f64);
let _64: &'static f64;
let _65: (i16, isize, i16);
let _66: [u16; 4];
let _67: [i128; 7];
let _68: f64;
let _69: u64;
let _70: [u16; 4];
let _71: bool;
let _72: u128;
let _73: ([i32; 4],);
let _74: f32;
let _75: isize;
let _76: u32;
let _77: u32;
let _78: Adt20;
let _79: f64;
let _80: u16;
let _81: [i128; 7];
let _82: char;
let _83: Adt73;
let _84: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _85: f64;
let _86: isize;
let _87: u16;
let _88: usize;
let _89: [bool; 5];
let _90: bool;
let _91: &'static [i8; 3];
let _92: u64;
let _93: [u8; 6];
let _94: u16;
let _95: usize;
let _96: [i128; 7];
let _97: bool;
let _98: *mut *const u8;
let _99: f32;
let _100: [isize; 3];
let _101: [u64; 3];
let _102: (&'static i16, u16, char, i64);
let _103: [i16; 7];
let _104: i64;
let _105: f32;
let _106: ();
let _107: ();
{
_2 = [true,false,false,false,false];
_2 = [true,true,false,true,true];
_1 = _2;
RET = 28970068993778092658694604737844172641_i128 as u16;
_3 = 34579099336190908040980232134254462580_u128 as isize;
Goto(bb1)
}
bb1 = {
RET = 31448055004146740835574918947064384390_i128 as u16;
_2 = [true,false,false,false,true];
Call(RET = fn16(_2, _2, _1, _2, _1, _3, _2, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb3 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [false,false,true,false,true];
_3 = (-93_i8) as isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _1;
_2 = _1;
_2 = [false,true,false,false,true];
RET = 44_u8 as u16;
_2 = _1;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = _2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [true,true,true,false,false];
RET = 50276_u16 ^ 56621_u16;
_4 = _3 >> _3;
RET = 3111_u16 - 36137_u16;
RET = 12501_u16;
_4 = 36946309887488697059764306953688938023_i128 as isize;
_3 = _4;
RET = 63941_u16;
RET = (-156109747558760232844117033220567298952_i128) as u16;
Goto(bb4)
}
bb4 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4 = 8461485791200660114_u64 as isize;
_8 = false as isize;
_4 = !_8;
RET = 61691_u16;
_9 = _4;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_9 = _8 << _3;
_10.3 = 47_i8;
_4 = -_9;
_10.1 = [false,false,true,true,false];
_10.0 = (-1048921791_i32) as f32;
_10.1 = _2;
_10.3 = 93_i8 + (-89_i8);
Goto(bb5)
}
bb5 = {
_2 = _1;
_10.2 = 339645156799114093501930655976426192228_u128 * 105235752697664968594519161572707101204_u128;
_12 = 17707127698102176329_usize as f64;
_1 = _2;
_10.1 = [true,true,false,true,true];
_10.3 = -23_i8;
_3 = RET as isize;
_11 = -_12;
_10.3 = 79_u8 as i8;
_10.1 = [false,true,false,true,true];
RET = 233_u16 - 46314_u16;
RET = 98_u8 as u16;
_8 = _4;
_12 = _11 - _11;
_13.1 = _4;
_13 = (1600_i16, _8, (-3943_i16));
_11 = -_12;
_13.0 = _13.2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_10.1 = _2;
_10.2 = 88539961007153517484288868106367836773_u128 >> _10.3;
_13.0 = _13.2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_13.2 = _13.0 + _13.0;
_4 = _8;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
match _13.0 {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
340282366920938463463374607431768207513 => bb10,
_ => bb9
}
}
bb6 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4 = 8461485791200660114_u64 as isize;
_8 = false as isize;
_4 = !_8;
RET = 61691_u16;
_9 = _4;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_9 = _8 << _3;
_10.3 = 47_i8;
_4 = -_9;
_10.1 = [false,false,true,true,false];
_10.0 = (-1048921791_i32) as f32;
_10.1 = _2;
_10.3 = 93_i8 + (-89_i8);
Goto(bb5)
}
bb7 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [false,false,true,false,true];
_3 = (-93_i8) as isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _1;
_2 = _1;
_2 = [false,true,false,false,true];
RET = 44_u8 as u16;
_2 = _1;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = _2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [true,true,true,false,false];
RET = 50276_u16 ^ 56621_u16;
_4 = _3 >> _3;
RET = 3111_u16 - 36137_u16;
RET = 12501_u16;
_4 = 36946309887488697059764306953688938023_i128 as isize;
_3 = _4;
RET = 63941_u16;
RET = (-156109747558760232844117033220567298952_i128) as u16;
Goto(bb4)
}
bb8 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb9 = {
RET = 31448055004146740835574918947064384390_i128 as u16;
_2 = [true,false,false,false,true];
Call(RET = fn16(_2, _2, _1, _2, _1, _3, _2, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_2 = [false,false,true,false,false];
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = _10.0 as isize;
RET = (-702089321_i32) as u16;
_12 = -_11;
_12 = _11 + _11;
_10.2 = 315726882134336153042915580312881853491_u128 | 201615003709428883066832999079329955403_u128;
_10.3 = !121_i8;
_18 = _10.2 >> _9;
_12 = _11 + _11;
_15 = _13.2;
_19 = -_12;
_10.1 = _1;
_15 = _18 as i16;
_19 = _10.3 as f64;
_8 = _4;
_9 = -_8;
_10.3 = (-85_i8) + 75_i8;
_10.0 = _10.2 as f32;
_13.2 = _13.0;
_13 = (_15, _4, _15);
_19 = _12;
Call(_20 = core::intrinsics::transmute(_13.1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_10.1 = [false,true,false,false,true];
_3 = !_4;
_22 = '\u{6b87e}';
_18 = !_10.2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_13.0 = _15;
Goto(bb12)
}
bb12 = {
_19 = -_11;
_21 = [12916634961107201654_u64,2301892667888650397_u64,16708700880301206501_u64,4120881271056855858_u64,15762002659994041382_u64];
_10.2 = _18;
_13.2 = -_13.0;
_9 = _20;
_2 = _10.1;
_10.1 = _1;
_3 = -_4;
_13 = (_15, _8, _15);
_19 = _11;
_20 = -_4;
_13.1 = _20 & _9;
_27 = 60883255651199424022802727156188674128_i128 >> _20;
_8 = 186_u8 as isize;
_9 = _4;
_3 = 7939237743219832354_u64 as isize;
_29.1 = _4 | _20;
_20 = _8;
_3 = _13.1 >> _15;
_12 = -_19;
_8 = _29.1;
Goto(bb13)
}
bb13 = {
_9 = -_3;
_19 = _12;
_31 = _13.1 ^ _29.1;
_4 = _20;
Goto(bb14)
}
bb14 = {
_28 = [_31,_9,_13.1];
_13 = (_15, _8, _15);
_10.1 = [false,false,true,true,false];
_24 = !95402002_i32;
_29.0 = _13.2 & _13.0;
_29.2 = -_13.2;
_13.2 = _15;
_3 = _31;
_2 = [false,false,true,false,false];
_22 = '\u{5dff0}';
_31 = -_13.1;
_10.2 = !_18;
_13 = _29;
_29.2 = _13.0;
_9 = 8074364683678542373_u64 as isize;
_33 = _13.0 as isize;
_28 = [_8,_13.1,_33];
_10.2 = !_18;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_29 = (_13.2, _31, _13.2);
Goto(bb15)
}
bb15 = {
_4 = _29.1;
_27 = 34376401007921862357907916251943100150_i128;
_2 = [false,true,false,true,true];
_19 = 3440162996817619282_u64 as f64;
_21 = [547995071287716781_u64,14435316462553001382_u64,18011761389610867325_u64,11829954871334896694_u64,1184717636444388419_u64];
_35 = _27 as isize;
_8 = 7509337644413217778_i64 as isize;
_1 = [true,true,true,true,true];
_13.0 = -_15;
_11 = -_12;
Call(_11 = core::intrinsics::transmute(_3), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_13 = (_15, _20, _29.0);
_26 = false & false;
_21 = [6252329493992482587_u64,6353095532154687479_u64,17254832270259883687_u64,16468461724244510764_u64,7292488627633898394_u64];
_26 = false;
_15 = _29.0 | _13.2;
_34 = core::ptr::addr_of_mut!(_10.3);
Goto(bb17)
}
bb17 = {
_2 = _10.1;
_19 = _12 + _11;
_12 = -_19;
_10.1 = _1;
_10.0 = RET as f32;
_2 = [_26,_26,_26,_26,_26];
_2 = _1;
_15 = _24 as i16;
_4 = _13.0 as isize;
_10.3 = -33_i8;
_13.1 = !_33;
_10.0 = RET as f32;
_36 = _33 - _4;
_33 = _9;
_38 = RET ^ RET;
_4 = RET as isize;
_22 = '\u{954ca}';
_24 = -(-1610486311_i32);
(*_34) = (-80_i8);
_26 = !false;
_37 = &_12;
match (*_34) {
0 => bb7,
1 => bb11,
2 => bb18,
340282366920938463463374607431768211376 => bb20,
_ => bb19
}
}
bb18 = {
RET = 31448055004146740835574918947064384390_i128 as u16;
_2 = [true,false,false,false,true];
Call(RET = fn16(_2, _2, _1, _2, _1, _3, _2, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb19 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [false,false,true,false,true];
_3 = (-93_i8) as isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _1;
_2 = _1;
_2 = [false,true,false,false,true];
RET = 44_u8 as u16;
_2 = _1;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = _2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [true,true,true,false,false];
RET = 50276_u16 ^ 56621_u16;
_4 = _3 >> _3;
RET = 3111_u16 - 36137_u16;
RET = 12501_u16;
_4 = 36946309887488697059764306953688938023_i128 as isize;
_3 = _4;
RET = 63941_u16;
RET = (-156109747558760232844117033220567298952_i128) as u16;
Goto(bb4)
}
bb20 = {
_29.2 = _15;
_34 = core::ptr::addr_of_mut!((*_34));
_13.0 = _29.0;
Goto(bb21)
}
bb21 = {
_10.2 = _13.1 as u128;
_38 = !RET;
_31 = _20 | _36;
_33 = _3 & _36;
_38 = RET * RET;
_28 = [_3,_13.1,_31];
_35 = -_36;
_13.2 = 255_u8 as i16;
_10.1 = [_26,_26,_26,_26,_26];
_31 = _33 * _36;
_29 = (_15, _33, _13.2);
_3 = 2146745123_u32 as isize;
_10.0 = 3282246788607095016_u64 as f32;
_35 = _31 << _29.1;
_20 = _38 as isize;
_17 = core::ptr::addr_of!(_41.0.0);
_13.1 = !_35;
_41.0.2 = _13.0;
_43 = _19;
_11 = _10.2 as f64;
(*_34) = 71_i8 & (-32_i8);
_13.2 = -_13.0;
match _27 {
34376401007921862357907916251943100150 => bb23,
_ => bb22
}
}
bb22 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb23 = {
_42 = Adt30::Variant2 { fld0: 943970742249592943_u64,fld1: _13,fld2: _38,fld3: _27 };
(*_34) = !(-41_i8);
_45 = core::ptr::addr_of_mut!(_17);
_13 = (_41.0.2, Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1, _15);
_41.0.1 = Adt20::Variant1 { fld0: 2132465026584152151_u64,fld1: _10.2,fld2: 134_u8,fld3: _10.0,fld4: 3921484678_u32,fld5: _24,fld6: 421532634529792165_i64 };
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).0 = _13.1 as i16;
_18 = 15146059537945336832_usize as u128;
place!(Field::<i32>(Variant(_41.0.1, 1), 5)) = _27 as i32;
_50 = Field::<f32>(Variant(_41.0.1, 1), 3);
_6 = [_38,RET,_38,_38,Field::<u16>(Variant(_42, 2), 2),RET,_38,Field::<u16>(Variant(_42, 2), 2)];
_12 = _11;
_51 = _10;
_51 = (_50, _1, _10.2, (*_34));
place!(Field::<u32>(Variant(_41.0.1, 1), 4)) = !2835602622_u32;
_51.2 = !Field::<u128>(Variant(_41.0.1, 1), 1);
place!(Field::<u64>(Variant(_42, 2), 0)) = 1104539928459640987_u64;
_41.0.0 = 20_u8;
Goto(bb24)
}
bb24 = {
_40 = _35 != Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1;
(*_17) = 62_u8;
_1 = _10.1;
_20 = _35;
_29 = _13;
(*_34) = _51.3;
place!(Field::<u16>(Variant(_42, 2), 2)) = !_38;
_47 = !(*_17);
_31 = _20 | _36;
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).1 = Field::<i128>(Variant(_42, 2), 3) as isize;
_50 = -_10.0;
Goto(bb25)
}
bb25 = {
_2 = [_40,_40,_40,_40,_40];
_61 = Adt43::Variant0 { fld0: Move(_34),fld1: _51,fld2: _2 };
_56 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_41.0.1, 1), 5)));
place!(Field::<i64>(Variant(_41.0.1, 1), 6)) = Field::<(f32, [bool; 5], u128, i8)>(Variant(_61, 0), 1).3 as i64;
_52 = _38;
_38 = Field::<u16>(Variant(_42, 2), 2);
_58 = _10.0 as isize;
_54 = _33 - _35;
_59.0 = &_41.0.0;
_53.1.2 = !Field::<(i16, isize, i16)>(Variant(_42, 2), 1).0;
SetDiscriminant(_61, 1);
_1 = [_40,_40,_40,_40,_40];
_19 = -_12;
_53 = (Field::<u16>(Variant(_42, 2), 2), _29);
_44 = Field::<u32>(Variant(_41.0.1, 1), 4);
place!(Field::<u32>(Variant(_41.0.1, 1), 4)) = _29.1 as u32;
Call(place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).1 = core::intrinsics::transmute(_53.1.1), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
_10 = (Field::<f32>(Variant(_41.0.1, 1), 3), _1, _51.2, _51.3);
(*_45) = core::ptr::addr_of!(_59.3);
_13.1 = _53.1.1 & _53.1.1;
_42 = Adt30::Variant2 { fld0: 9174529654074309450_u64,fld1: _13,fld2: _52,fld3: _27 };
_63.2 = 11804854218017892070_u64;
_10.0 = _29.0 as f32;
_59.0 = &_47;
_63.0.2 = _22;
_63.0.1 = Field::<u16>(Variant(_42, 2), 2);
_60 = _41.0.0 as isize;
_62 = !Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1;
_41.0.1 = Adt20::Variant1 { fld0: _63.2,fld1: _10.2,fld2: _41.0.0,fld3: _10.0,fld4: _44,fld5: _24,fld6: (-6594434031852376847_i64) };
_36 = -_53.1.1;
RET = _52;
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).2 = _41.0.2 - _53.1.0;
_59.1 = [_40,_40,_40,_40,_40];
_58 = -Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1;
_63.0.2 = _22;
_26 = _40 ^ _40;
_22 = _63.0.2;
_15 = _53.1.0;
_19 = _43 - _12;
_13.2 = _53.1.0;
match _27 {
0 => bb6,
1 => bb14,
2 => bb27,
3 => bb28,
4 => bb29,
5 => bb30,
6 => bb31,
34376401007921862357907916251943100150 => bb33,
_ => bb32
}
}
bb27 = {
_13 = (_15, _20, _29.0);
_26 = false & false;
_21 = [6252329493992482587_u64,6353095532154687479_u64,17254832270259883687_u64,16468461724244510764_u64,7292488627633898394_u64];
_26 = false;
_15 = _29.0 | _13.2;
_34 = core::ptr::addr_of_mut!(_10.3);
Goto(bb17)
}
bb28 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb29 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [false,false,true,false,true];
_3 = (-93_i8) as isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _1;
_2 = _1;
_2 = [false,true,false,false,true];
RET = 44_u8 as u16;
_2 = _1;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = _2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [true,true,true,false,false];
RET = 50276_u16 ^ 56621_u16;
_4 = _3 >> _3;
RET = 3111_u16 - 36137_u16;
RET = 12501_u16;
_4 = 36946309887488697059764306953688938023_i128 as isize;
_3 = _4;
RET = 63941_u16;
RET = (-156109747558760232844117033220567298952_i128) as u16;
Goto(bb4)
}
bb30 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb31 = {
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [false,false,true,false,true];
_3 = (-93_i8) as isize;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = _1;
_2 = _1;
_2 = [false,true,false,false,true];
RET = 44_u8 as u16;
_2 = _1;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_1 = _2;
_4 = _3;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_2 = [true,true,true,false,false];
RET = 50276_u16 ^ 56621_u16;
_4 = _3 >> _3;
RET = 3111_u16 - 36137_u16;
RET = 12501_u16;
_4 = 36946309887488697059764306953688938023_i128 as isize;
_3 = _4;
RET = 63941_u16;
RET = (-156109747558760232844117033220567298952_i128) as u16;
Goto(bb4)
}
bb32 = {
RET = 31448055004146740835574918947064384390_i128 as u16;
_2 = [true,false,false,false,true];
Call(RET = fn16(_2, _2, _1, _2, _1, _3, _2, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb33 = {
_66 = [_38,_38,_52,_63.0.1];
_26 = _13.1 <= _62;
_53.1.0 = _13.0 - Field::<(i16, isize, i16)>(Variant(_42, 2), 1).2;
_41.0.0 = 3_usize as u8;
_43 = _10.0 as f64;
place!(Field::<i128>(Variant(_42, 2), 3)) = _27 - _27;
_63.0.2 = _22;
(*_17) = !_47;
_37 = &_43;
_9 = !_29.1;
_41.0.2 = _53.1.0 | _53.1.0;
_27 = Field::<u128>(Variant(_41.0.1, 1), 1) as i128;
RET = Field::<u16>(Variant(_42, 2), 2) ^ _52;
_43 = _12 * _11;
_41.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_41.0.1, 1), 1)));
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).1 = _20 + _58;
_65 = (_15, _35, _53.1.0);
_29.0 = _41.0.2;
match Field::<u64>(Variant(_41.0.1, 1), 0) {
0 => bb31,
1 => bb19,
2 => bb23,
3 => bb4,
4 => bb18,
5 => bb34,
11804854218017892070 => bb36,
_ => bb35
}
}
bb34 = {
_10 = (Field::<f32>(Variant(_41.0.1, 1), 3), _1, _51.2, _51.3);
(*_45) = core::ptr::addr_of!(_59.3);
_13.1 = _53.1.1 & _53.1.1;
_42 = Adt30::Variant2 { fld0: 9174529654074309450_u64,fld1: _13,fld2: _52,fld3: _27 };
_63.2 = 11804854218017892070_u64;
_10.0 = _29.0 as f32;
_59.0 = &_47;
_63.0.2 = _22;
_63.0.1 = Field::<u16>(Variant(_42, 2), 2);
_60 = _41.0.0 as isize;
_62 = !Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1;
_41.0.1 = Adt20::Variant1 { fld0: _63.2,fld1: _10.2,fld2: _41.0.0,fld3: _10.0,fld4: _44,fld5: _24,fld6: (-6594434031852376847_i64) };
_36 = -_53.1.1;
RET = _52;
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).2 = _41.0.2 - _53.1.0;
_59.1 = [_40,_40,_40,_40,_40];
_58 = -Field::<(i16, isize, i16)>(Variant(_42, 2), 1).1;
_63.0.2 = _22;
_26 = _40 ^ _40;
_22 = _63.0.2;
_15 = _53.1.0;
_19 = _43 - _12;
_13.2 = _53.1.0;
match _27 {
0 => bb6,
1 => bb14,
2 => bb27,
3 => bb28,
4 => bb29,
5 => bb30,
6 => bb31,
34376401007921862357907916251943100150 => bb33,
_ => bb32
}
}
bb35 = {
RET = 31448055004146740835574918947064384390_i128 as u16;
_2 = [true,false,false,false,true];
Call(RET = fn16(_2, _2, _1, _2, _1, _3, _2, _1, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb36 = {
_51 = (Field::<f32>(Variant(_41.0.1, 1), 3), _1, _10.2, _10.3);
_45 = core::ptr::addr_of_mut!(_17);
(*_17) = !_47;
place!(Field::<u64>(Variant(_42, 2), 0)) = _51.0 as u64;
_49 = 1802792054470823113_usize;
place!(Field::<u64>(Variant(_42, 2), 0)) = Field::<u16>(Variant(_42, 2), 2) as u64;
_43 = _19;
_59.0 = &place!(Field::<u8>(Variant(_41.0.1, 1), 2));
_41.0.2 = _19 as i16;
_59.0 = &(*_17);
_15 = _65.0;
_69 = Field::<u64>(Variant(_42, 2), 0);
SetDiscriminant(_42, 0);
_44 = Field::<u32>(Variant(_41.0.1, 1), 4);
_59.2.0 = !Field::<u8>(Variant(_41.0.1, 1), 2);
Goto(bb37)
}
bb37 = {
_51.0 = 2109155546577499545_i64 as f32;
_72 = _12 as u128;
_43 = _19 + _19;
_47 = _29.0 as u8;
_29 = (_41.0.2, _62, _41.0.2);
_3 = _65.1 >> _58;
(*_17) = !_47;
_20 = -_53.1.1;
_74 = _27 as f32;
_41.0.1 = Adt20::Variant1 { fld0: _63.2,fld1: _51.2,fld2: _47,fld3: _74,fld4: _44,fld5: _24,fld6: 6521045565961086377_i64 };
_63.3 = -_12;
_70 = [_63.0.1,_53.0,RET,_38];
_63.1 = Field::<u32>(Variant(_41.0.1, 1), 4) + _44;
_51.1 = [_40,_26,_26,_40,_40];
_63.3 = _69 as f64;
_13 = (_29.2, _53.1.1, _29.2);
_30 = core::ptr::addr_of!(_70);
_36 = _29.0 as isize;
_66 = [_53.0,RET,_63.0.1,_53.0];
_51.3 = -_10.3;
_41.1 = core::ptr::addr_of_mut!(_57);
(*_45) = core::ptr::addr_of!(_59.2.0);
place!(Field::<f32>(Variant(_41.0.1, 1), 3)) = _74 * _10.0;
place!(Field::<i64>(Variant(_41.0.1, 1), 6)) = (-6785113805571592761_i64);
place!(Field::<f32>(Variant(_61, 1), 0)) = _27 as f32;
_77 = _44 << _53.1.1;
Goto(bb38)
}
bb38 = {
_63.3 = _74 as f64;
_19 = _43;
_28 = [_62,_58,_65.1];
(*_17) = _59.3;
_63.0.1 = RET;
Goto(bb39)
}
bb39 = {
_68 = _63.3;
_29.2 = -_13.2;
place!(Field::<u128>(Variant(_41.0.1, 1), 1)) = !_51.2;
_24 = -Field::<i32>(Variant(_41.0.1, 1), 5);
_48 = !_69;
_63.1 = _77 | _77;
_9 = _62;
_30 = core::ptr::addr_of!(_70);
place!(Field::<f32>(Variant(_61, 1), 0)) = -Field::<f32>(Variant(_41.0.1, 1), 3);
_65.0 = -_13.0;
SetDiscriminant(_41.0.1, 1);
_56 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_41.0.1, 1), 5)));
_53.1.1 = _27 as isize;
_47 = _59.3;
_80 = _63.0.1 * _63.0.1;
_51.2 = _51.3 as u128;
RET = !_52;
_29.0 = _15 - _13.0;
_10.1 = [_26,_40,_26,_26,_40];
_59.2.2 = (-3592221786281023625_i64) as i16;
_41.0.1 = Adt20::Variant1 { fld0: _48,fld1: _72,fld2: _59.2.0,fld3: _10.0,fld4: _63.1,fld5: _24,fld6: 7852149351205812341_i64 };
_11 = Field::<f32>(Variant(_61, 1), 0) as f64;
_29.1 = _58 - _9;
place!(Field::<u128>(Variant(_41.0.1, 1), 1)) = _72 >> Field::<u32>(Variant(_41.0.1, 1), 4);
match _49 {
0 => bb40,
1 => bb41,
2 => bb42,
1802792054470823113 => bb44,
_ => bb43
}
}
bb40 = {
_13 = (_15, _20, _29.0);
_26 = false & false;
_21 = [6252329493992482587_u64,6353095532154687479_u64,17254832270259883687_u64,16468461724244510764_u64,7292488627633898394_u64];
_26 = false;
_15 = _29.0 | _13.2;
_34 = core::ptr::addr_of_mut!(_10.3);
Goto(bb17)
}
bb41 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb42 = {
_28 = [_31,_9,_13.1];
_13 = (_15, _8, _15);
_10.1 = [false,false,true,true,false];
_24 = !95402002_i32;
_29.0 = _13.2 & _13.0;
_29.2 = -_13.2;
_13.2 = _15;
_3 = _31;
_2 = [false,false,true,false,false];
_22 = '\u{5dff0}';
_31 = -_13.1;
_10.2 = !_18;
_13 = _29;
_29.2 = _13.0;
_9 = 8074364683678542373_u64 as isize;
_33 = _13.0 as isize;
_28 = [_8,_13.1,_33];
_10.2 = !_18;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_29 = (_13.2, _31, _13.2);
Goto(bb15)
}
bb43 = {
_29.2 = _15;
_34 = core::ptr::addr_of_mut!((*_34));
_13.0 = _29.0;
Goto(bb21)
}
bb44 = {
place!(Field::<i32>(Variant(_41.0.1, 1), 5)) = !_24;
_2 = [_26,_40,_26,_40,_26];
_51.1 = [_26,_40,_26,_40,_26];
place!(Field::<*const u8>(Variant(_61, 1), 1)) = Move((*_45));
_13.0 = _29.0 * _29.0;
_29.1 = _22 as isize;
RET = _27 as u16;
place!(Field::<u8>(Variant(_41.0.1, 1), 2)) = Field::<u128>(Variant(_41.0.1, 1), 1) as u8;
_71 = Field::<u8>(Variant(_41.0.1, 1), 2) <= Field::<u8>(Variant(_41.0.1, 1), 2);
_19 = -_63.3;
_54 = _58;
_53.1 = (_65.2, _62, _29.2);
_53.1.0 = _29.0 ^ _29.2;
_65.1 = -_3;
Call(_12 = core::intrinsics::fmaf64(_43, _19, _43), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
_51.3 = _63.1 as i8;
_34 = core::ptr::addr_of_mut!(_10.3);
_86 = Field::<i32>(Variant(_41.0.1, 1), 5) as isize;
_41.0.2 = -_65.0;
Goto(bb46)
}
bb46 = {
_41.0.1 = Adt20::Variant0 { fld0: Move(_34),fld1: (-1287909931526881605_i64),fld2: _48,fld3: _49 };
_45 = core::ptr::addr_of_mut!((*_45));
SetDiscriminant(_61, 1);
(*_45) = core::ptr::addr_of!(_41.0.0);
_29.0 = _13.0;
_80 = _53.0;
_63.0.3 = -(-313529679396497441_i64);
_74 = _59.3 as f32;
Goto(bb47)
}
bb47 = {
_27 = !50517779846045601239205034888676137843_i128;
_65.2 = _13.0 + _13.2;
_38 = !_80;
_63.1 = _10.0 as u32;
_79 = _11 * _43;
_48 = Field::<u64>(Variant(_41.0.1, 0), 2);
_63.0.3 = _65.2 as i64;
_15 = _77 as i16;
(*_45) = core::ptr::addr_of!(_41.0.0);
place!(Field::<*const u8>(Variant(_61, 1), 1)) = core::ptr::addr_of!((*_17));
(*_45) = Move(Field::<*const u8>(Variant(_61, 1), 1));
_76 = _77 | _63.1;
_54 = _24 as isize;
_29.2 = _29.0 >> _53.1.1;
_10 = (_74, _1, _72, _51.3);
_59.2.0 = !_59.3;
_59.2.1 = Adt20::Variant0 { fld0: Move(Field::<*mut i8>(Variant(_41.0.1, 0), 0)),fld1: _63.0.3,fld2: Field::<u64>(Variant(_41.0.1, 0), 2),fld3: _49 };
_1 = [_26,_40,_40,_26,_26];
_73.0 = [_24,_24,_24,_24];
_80 = RET;
place!(Field::<i64>(Variant(_41.0.1, 0), 1)) = _59.3 as i64;
_81 = [_27,_27,_27,_27,_27,_27,_27];
RET = _24 as u16;
place!(Field::<bool>(Variant(_42, 0), 0)) = _15 <= _65.2;
match Field::<usize>(Variant(_41.0.1, 0), 3) {
0 => bb43,
1802792054470823113 => bb48,
_ => bb2
}
}
bb48 = {
_34 = Move(Field::<*mut i8>(Variant(_59.2.1, 0), 0));
_49 = Field::<usize>(Variant(_41.0.1, 0), 3);
_65.0 = _10.3 as i16;
_50 = _59.3 as f32;
_57 = _51.2 | _10.2;
_12 = _27 as f64;
_67 = _81;
SetDiscriminant(_42, 2);
_90 = _71 ^ _26;
_82 = _63.0.2;
Goto(bb49)
}
bb49 = {
_51 = _10;
place!(Field::<usize>(Variant(_59.2.1, 0), 3)) = Field::<usize>(Variant(_41.0.1, 0), 3) >> _10.3;
_89 = [_71,_26,_40,_90,_40];
_74 = -_51.0;
_62 = _3;
_59.2.1 = Adt20::Variant0 { fld0: Move(_34),fld1: _63.0.3,fld2: _48,fld3: _49 };
_51.2 = _63.0.2 as u128;
_94 = !_63.0.1;
_92 = _69 | Field::<u64>(Variant(_41.0.1, 0), 2);
_34 = core::ptr::addr_of_mut!(_51.3);
_59.2.1 = Adt20::Variant1 { fld0: _92,fld1: _57,fld2: _59.3,fld3: _74,fld4: _76,fld5: _24,fld6: _63.0.3 };
_34 = core::ptr::addr_of_mut!((*_34));
_2 = [_90,_90,_26,_71,_90];
_50 = Field::<f32>(Variant(_59.2.1, 1), 3) - _74;
_29.1 = -_62;
(*_45) = core::ptr::addr_of!(_41.0.0);
_10.2 = _57;
(*_30) = _66;
place!(Field::<u64>(Variant(_42, 2), 0)) = !_63.2;
_79 = _10.3 as f64;
_51.2 = _71 as u128;
Goto(bb50)
}
bb50 = {
_52 = Field::<usize>(Variant(_41.0.1, 0), 3) as u16;
(*_17) = _59.3;
_85 = _43;
SetDiscriminant(_59.2.1, 0);
Goto(bb51)
}
bb51 = {
_26 = _40;
_86 = _62;
_13.1 = _86 ^ _29.1;
_74 = -_51.0;
_14 = Adt76::Variant0 { fld0: _65.0,fld1: _27,fld2: _79 };
_28 = [_31,_29.1,_58];
_99 = _10.0;
_53.1.2 = -Field::<i16>(Variant(_14, 0), 0);
(*_17) = _59.2.0;
_59.0 = &(*_17);
place!(Field::<usize>(Variant(_59.2.1, 0), 3)) = Field::<usize>(Variant(_41.0.1, 0), 3) / Field::<usize>(Variant(_41.0.1, 0), 3);
_10 = _51;
_22 = _82;
_75 = _63.0.2 as isize;
_1 = [_26,_71,_90,_71,_40];
_70 = [_63.0.1,_52,_38,_80];
_21 = [_92,_92,Field::<u64>(Variant(_41.0.1, 0), 2),_63.2,_63.2];
_51 = _10;
place!(Field::<*mut i8>(Variant(_41.0.1, 0), 0)) = core::ptr::addr_of_mut!(_10.3);
_18 = _10.2 | _51.2;
_65 = _29;
_10.1 = [_71,_71,_26,_71,_40];
_60 = _58;
_56 = core::ptr::addr_of!(_24);
_20 = -_60;
_96 = [_27,_27,Field::<i128>(Variant(_14, 0), 1),_27,_27,_27,_27];
_17 = core::ptr::addr_of!(_59.3);
_75 = -_13.1;
match _49 {
0 => bb43,
1802792054470823113 => bb52,
_ => bb6
}
}
bb52 = {
_97 = !_71;
_59.3 = _97 as u8;
_76 = _77 >> _86;
_78 = Move(_41.0.1);
place!(Field::<i64>(Variant(_59.2.1, 0), 1)) = -_63.0.3;
SetDiscriminant(_78, 1);
_1 = _51.1;
_67 = [Field::<i128>(Variant(_14, 0), 1),_27,Field::<i128>(Variant(_14, 0), 1),_27,Field::<i128>(Variant(_14, 0), 1),Field::<i128>(Variant(_14, 0), 1),Field::<i128>(Variant(_14, 0), 1)];
(*_34) = _10.3 >> _65.0;
_53.0 = _80 & _38;
_51.2 = !_10.2;
place!(Field::<u64>(Variant(_59.2.1, 0), 2)) = !_92;
_63.0.0 = &_65.0;
(*_30) = _66;
_51.3 = _10.3;
place!(Field::<(i16, isize, i16)>(Variant(_42, 2), 1)).2 = -_53.1.0;
_53.1.1 = _27 as isize;
_10.1 = _59.1;
(*_34) = Field::<i16>(Variant(_14, 0), 0) as i8;
place!(Field::<i128>(Variant(_42, 2), 3)) = Field::<i128>(Variant(_14, 0), 1) | _27;
_65.0 = _13.2;
_50 = _51.0;
_78 = Adt20::Variant1 { fld0: _48,fld1: _18,fld2: _59.2.0,fld3: _50,fld4: _63.1,fld5: (*_56),fld6: Field::<i64>(Variant(_59.2.1, 0), 1) };
match _63.2 {
11804854218017892070 => bb54,
_ => bb53
}
}
bb53 = {
RET = !45613_u16;
RET = 10137_u16 * 44954_u16;
_2 = [true,false,true,false,true];
RET = 7023_u16;
_2 = [false,true,true,true,false];
_4 = !_3;
RET = 57393_u16;
_3 = _4 << RET;
_3 = _4 * _4;
_4 = _3;
_1 = [true,true,true,false,true];
_1 = [false,false,true,true,false];
_2 = [true,true,false,true,false];
_4 = _3;
RET = 60778_u16;
_2 = [true,true,false,true,true];
_1 = _2;
_6 = [RET,RET,RET,RET,RET,RET,RET,RET];
_3 = !_4;
_3 = _4;
_3 = _4;
RET = _3 as u16;
Goto(bb3)
}
bb54 = {
_13.2 = _76 as i16;
_51.2 = _18;
SetDiscriminant(_78, 0);
place!(Field::<i128>(Variant(_42, 2), 3)) = Field::<i128>(Variant(_14, 0), 1) ^ Field::<i128>(Variant(_14, 0), 1);
_1 = [_40,_71,_71,_26,_40];
_99 = -_74;
_36 = _86;
_41.0.1 = Adt20::Variant0 { fld0: Move(_34),fld1: _63.0.3,fld2: Field::<u64>(Variant(_59.2.1, 0), 2),fld3: Field::<usize>(Variant(_59.2.1, 0), 3) };
_102.0 = Move(_63.0.0);
_101 = [_48,_92,_92];
_65.1 = (*_17) as isize;
_102.3 = (*_17) as i64;
_45 = core::ptr::addr_of_mut!(place!(Field::<*const u8>(Variant(_61, 1), 1)));
_40 = !_90;
_41.1 = core::ptr::addr_of_mut!(_51.2);
_101 = [_92,Field::<u64>(Variant(_41.0.1, 0), 2),Field::<u64>(Variant(_41.0.1, 0), 2)];
_59.2.2 = Field::<(i16, isize, i16)>(Variant(_42, 2), 1).2;
place!(Field::<*const u8>(Variant(_61, 1), 1)) = core::ptr::addr_of!(_47);
place!(Field::<f32>(Variant(_61, 1), 0)) = _10.0;
_32 = core::ptr::addr_of_mut!(_101);
place!(Field::<u64>(Variant(_42, 2), 0)) = _63.2;
_26 = !_97;
_59.0 = &_59.2.0;
_93 = [(*_17),(*_17),_59.3,(*_17),(*_17),_47];
_53.1.1 = _24 as isize;
place!(Field::<f64>(Variant(_14, 0), 2)) = -_79;
RET = _18 as u16;
_57 = !_10.2;
_89 = [_26,_90,_97,_97,_71];
Goto(bb55)
}
bb55 = {
Call(_106 = dump_var(15_usize, 71_usize, Move(_71), 80_usize, Move(_80), 65_usize, Move(_65), 53_usize, Move(_53)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_106 = dump_var(15_usize, 13_usize, Move(_13), 54_usize, Move(_54), 1_usize, Move(_1), 66_usize, Move(_66)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_106 = dump_var(15_usize, 77_usize, Move(_77), 29_usize, Move(_29), 6_usize, Move(_6), 89_usize, Move(_89)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_106 = dump_var(15_usize, 96_usize, Move(_96), 93_usize, Move(_93), 101_usize, Move(_101), 82_usize, Move(_82)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_106 = dump_var(15_usize, 81_usize, Move(_81), 73_usize, Move(_73), 18_usize, Move(_18), 48_usize, Move(_48)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_106 = dump_var(15_usize, 70_usize, Move(_70), 58_usize, Move(_58), 31_usize, Move(_31), 35_usize, Move(_35)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_106 = dump_var(15_usize, 90_usize, Move(_90), 28_usize, Move(_28), 21_usize, Move(_21), 27_usize, Move(_27)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_106 = dump_var(15_usize, 57_usize, Move(_57), 107_usize, _107, 107_usize, _107, 107_usize, _107), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [bool; 5],mut _2: [bool; 5],mut _3: [bool; 5],mut _4: [bool; 5],mut _5: [bool; 5],mut _6: isize,mut _7: [bool; 5],mut _8: [bool; 5],mut _9: [bool; 5],mut _10: [bool; 5]) -> u16 {
mir! {
type RET = u16;
let _11: usize;
let _12: bool;
let _13: (f32, [bool; 5], u128, i8);
let _14: isize;
let _15: [i32; 4];
let _16: (f32, [bool; 5], u128, i8);
let _17: isize;
let _18: &'static i16;
let _19: u16;
let _20: (([i32; 4],),);
let _21: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _22: isize;
let _23: *const i32;
let _24: [i8; 3];
let _25: *mut [i8; 3];
let _26: u64;
let _27: [i16; 7];
let _28: ();
let _29: ();
{
_3 = [true,true,false,true,false];
RET = 18754_u16;
_1 = [false,false,true,false,false];
_6 = false as isize;
_6 = 9223372036854775807_isize;
RET = 63_u8 as u16;
_8 = [true,true,false,true,false];
_3 = [false,true,false,false,true];
_7 = [false,false,true,false,false];
_8 = [true,false,false,false,true];
_8 = [true,true,true,true,false];
_10 = _8;
RET = 194_u8 as u16;
_3 = [true,true,true,true,false];
_9 = [false,true,false,false,true];
RET = 310565470623255930053370177914806569748_u128 as u16;
_2 = [true,true,true,true,false];
RET = 58057_u16;
_6 = !9223372036854775807_isize;
_11 = !3_usize;
_9 = _7;
_2 = _5;
_12 = _11 != _11;
_10 = _9;
_4 = [_12,_12,_12,_12,_12];
_2 = _7;
_3 = _7;
_10 = _8;
_4 = [_12,_12,_12,_12,_12];
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
58057 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_11 = !9345645180234136647_usize;
_12 = false;
_6 = (-104_isize);
Call(_13.3 = fn17(_6, _3, _8), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Goto(bb7)
}
bb7 = {
_15 = [332529343_i32,(-1101636065_i32),(-868862476_i32),(-608084010_i32)];
_15 = [(-878386237_i32),357037036_i32,1001083934_i32,381415144_i32];
_1 = [_12,_12,_12,_12,_12];
_16.2 = 39708277334799515393480548775172451675_u128;
Goto(bb8)
}
bb8 = {
_13.2 = _16.2 + _16.2;
_9 = [_12,_12,_12,_12,_12];
_14 = _6 << _13.3;
_19 = RET | RET;
_10 = _8;
_13.3 = _12 as i8;
_13.1 = [_12,_12,_12,_12,_12];
_17 = !_14;
_16.1 = [_12,_12,_12,_12,_12];
_9 = [_12,_12,_12,_12,_12];
_3 = [_12,_12,_12,_12,_12];
_16.0 = 17_u8 as f32;
_3 = [_12,_12,_12,_12,_12];
_13.1 = [_12,_12,_12,_12,_12];
_4 = _8;
RET = !_19;
_20.0.0 = [(-617591975_i32),(-1855746051_i32),(-1844880882_i32),(-17949086_i32)];
_16.2 = _13.2 << _17;
_13.2 = !_16.2;
_16.2 = !_13.2;
_11 = !3_usize;
RET = !_19;
_1 = [_12,_12,_12,_12,_12];
_13 = (_16.0, _10, _16.2, (-16_i8));
Goto(bb9)
}
bb9 = {
_16.3 = -_13.3;
_10 = [_12,_12,_12,_12,_12];
_13.2 = _16.2;
_16.2 = _13.2 | _13.2;
_5 = _13.1;
_8 = _4;
_8 = [_12,_12,_12,_12,_12];
_10 = [_12,_12,_12,_12,_12];
_17 = (-10915_i16) as isize;
_13 = (_16.0, _8, _16.2, _16.3);
_22 = -_14;
_16 = _13;
_11 = (-65995809835289219033180266319511921182_i128) as usize;
Goto(bb10)
}
bb10 = {
_19 = RET;
_19 = _16.2 as u16;
RET = _19 * _19;
_13.0 = 1726675588_i32 as f32;
_13.0 = _16.0 + _16.0;
_19 = !RET;
_26 = 4448856426859887416_u64 & 2100178342398783642_u64;
_1 = [_12,_12,_12,_12,_12];
_19 = !RET;
_19 = _12 as u16;
_13.2 = _16.2;
_13.2 = (-452599536_i32) as u128;
_5 = _3;
_20.0 = (_15,);
_3 = [_12,_12,_12,_12,_12];
_13.1 = [_12,_12,_12,_12,_12];
_5 = [_12,_12,_12,_12,_12];
_16.2 = 35_u8 as u128;
_13.1 = [_12,_12,_12,_12,_12];
_16 = _13;
_6 = !_17;
_5 = _7;
_13.2 = _16.2 >> _13.3;
_16 = (_13.0, _2, _13.2, _13.3);
_13.1 = _16.1;
_10 = _13.1;
_27 = [(-25073_i16),6344_i16,(-29475_i16),3599_i16,(-7951_i16),24593_i16,(-11439_i16)];
_7 = [_12,_12,_12,_12,_12];
Goto(bb11)
}
bb11 = {
Call(_28 = dump_var(16_usize, 22_usize, Move(_22), 14_usize, Move(_14), 7_usize, Move(_7), 2_usize, Move(_2)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_28 = dump_var(16_usize, 26_usize, Move(_26), 3_usize, Move(_3), 1_usize, Move(_1), 27_usize, Move(_27)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_28 = dump_var(16_usize, 11_usize, Move(_11), 10_usize, Move(_10), 29_usize, _29, 29_usize, _29), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: isize,mut _2: [bool; 5],mut _3: [bool; 5]) -> i8 {
mir! {
type RET = i8;
let _4: u16;
let _5: u8;
let _6: usize;
let _7: [i16; 7];
let _8: Adt43;
let _9: (i16, isize, i16);
let _10: u8;
let _11: *mut [u64; 3];
let _12: bool;
let _13: *mut i8;
let _14: isize;
let _15: bool;
let _16: ([isize; 3], i8);
let _17: char;
let _18: u64;
let _19: *mut [i8; 3];
let _20: i8;
let _21: *mut *const u8;
let _22: Adt43;
let _23: [i32; 4];
let _24: [u64; 5];
let _25: isize;
let _26: isize;
let _27: ([isize; 3], i8);
let _28: u128;
let _29: &'static u64;
let _30: isize;
let _31: [bool; 5];
let _32: f32;
let _33: u8;
let _34: [u16; 4];
let _35: u8;
let _36: &'static i16;
let _37: [u128; 8];
let _38: (u8, Adt20, i16);
let _39: char;
let _40: [i8; 1];
let _41: ([isize; 3], i8);
let _42: (*const u8, i16);
let _43: isize;
let _44: &'static *const &'static f64;
let _45: char;
let _46: [u64; 3];
let _47: [u8; 6];
let _48: isize;
let _49: char;
let _50: (&'static i16, u16, char, i64);
let _51: i32;
let _52: bool;
let _53: &'static (f32, [bool; 5], u128, i8);
let _54: *mut u128;
let _55: f32;
let _56: u64;
let _57: *const u8;
let _58: (u8, Adt20, i16);
let _59: [i8; 1];
let _60: ();
let _61: ();
{
_2 = [true,false,true,false,false];
RET = 17124345810654561321_usize as i8;
_4 = 46351_u16;
RET = 15_i8;
_5 = !33_u8;
RET = 37154126246372648720281812978617433090_u128 as i8;
_2 = _3;
_5 = 78_u8;
RET = -54_i8;
_2 = [false,true,false,false,false];
RET = 8985685131976178460_u64 as i8;
_3 = [false,false,false,true,false];
_1 = 125_isize ^ (-9223372036854775808_isize);
_2 = [true,true,false,true,false];
_6 = !10660331199123210490_usize;
_3 = [true,false,false,false,true];
_2 = _3;
_1 = (-9223372036854775808_isize) * 99_isize;
_3 = _2;
RET = 22_i8;
_4 = 39529_u16 >> _1;
_7 = [16759_i16,19316_i16,(-25975_i16),2493_i16,17060_i16,3687_i16,9711_i16];
_5 = 210_u8 >> _4;
_1 = false as isize;
_3 = [false,false,true,false,true];
_1 = (-24_isize) >> _4;
match RET {
0 => bb1,
22 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
_9.0 = 15304_i16 & (-28182_i16);
_9.0 = 4909_i16;
RET = 12214787443773352758_u64 as i8;
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_9.2 = !_9.0;
Goto(bb4)
}
bb4 = {
_5 = 246_u8;
_9 = (15525_i16, _1, (-27598_i16));
_5 = 116_u8;
_3 = [false,true,true,false,false];
_9.1 = -_1;
_6 = 3593243195040522661_usize + 4_usize;
_1 = !_9.1;
_5 = true as u8;
_10 = !_5;
_9 = (4563_i16, _1, 32371_i16);
match _9.0 {
4563 => bb5,
_ => bb1
}
}
bb5 = {
_12 = false;
_9 = (19049_i16, _1, 5158_i16);
_10 = !_5;
_14 = 3595047039_u32 as isize;
_16.1 = _5 as i8;
_13 = core::ptr::addr_of_mut!(RET);
_10 = _16.1 as u8;
_9 = ((-27507_i16), _14, 24021_i16);
_7 = [_9.0,_9.2,_9.2,_9.0,_9.0,_9.2,_9.0];
RET = -_16.1;
_13 = core::ptr::addr_of_mut!((*_13));
_9 = (18953_i16, _1, (-29484_i16));
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb6,
4 => bb7,
18953 => bb9,
_ => bb8
}
}
bb6 = {
Return()
}
bb7 = {
_9.0 = 15304_i16 & (-28182_i16);
_9.0 = 4909_i16;
RET = 12214787443773352758_u64 as i8;
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_9.2 = !_9.0;
Goto(bb4)
}
bb8 = {
Return()
}
bb9 = {
_5 = _10 * _10;
_9 = ((-28384_i16), _14, (-4282_i16));
RET = 7219400797316665094_i64 as i8;
_9.2 = _9.0;
_17 = '\u{bcb33}';
_16.0 = [_14,_14,_1];
_15 = !_12;
_16.1 = (*_13);
_1 = _9.1 & _14;
(*_13) = !_16.1;
(*_13) = _16.1;
_6 = _4 as usize;
_18 = 14552062521233030707_u64;
Goto(bb10)
}
bb10 = {
(*_13) = !_16.1;
_15 = _16.1 == (*_13);
(*_13) = _16.1 + _16.1;
_15 = (*_13) < (*_13);
_12 = _18 == _18;
_4 = 62024_u16 << _6;
_9.2 = _9.0 + _9.0;
_7 = [_9.2,_9.0,_9.2,_9.2,_9.2,_9.2,_9.0];
RET = _16.1 >> _9.2;
_4 = !17889_u16;
_6 = !5_usize;
Goto(bb11)
}
bb11 = {
_7 = [_9.2,_9.2,_9.2,_9.2,_9.2,_9.2,_9.0];
(*_13) = _16.1;
_13 = core::ptr::addr_of_mut!(_20);
_20 = 6070272114160290337_i64 as i8;
_9.2 = _9.0;
_23 = [(-1299383544_i32),199299248_i32,(-614474056_i32),(-275725998_i32)];
_18 = 17241263209183404089_u64;
_23 = [(-694928456_i32),(-1791502476_i32),1143691232_i32,(-1988579355_i32)];
_7 = [_9.2,_9.0,_9.0,_9.0,_9.2,_9.0,_9.0];
RET = -_20;
_4 = !28274_u16;
_5 = _18 as u8;
_5 = _9.1 as u8;
_15 = _12 | _12;
_3 = _2;
_9.1 = !_1;
_24 = [_18,_18,_18,_18,_18];
_2 = [_12,_15,_15,_15,_12];
Goto(bb12)
}
bb12 = {
_9.1 = _14 - _1;
_24 = [_18,_18,_18,_18,_18];
match _9.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
340282366920938463463374607431768183072 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
(*_13) = !_16.1;
_15 = _16.1 == (*_13);
(*_13) = _16.1 + _16.1;
_15 = (*_13) < (*_13);
_12 = _18 == _18;
_4 = 62024_u16 << _6;
_9.2 = _9.0 + _9.0;
_7 = [_9.2,_9.0,_9.2,_9.2,_9.2,_9.2,_9.0];
RET = _16.1 >> _9.2;
_4 = !17889_u16;
_6 = !5_usize;
Goto(bb11)
}
bb15 = {
_9.0 = 15304_i16 & (-28182_i16);
_9.0 = 4909_i16;
RET = 12214787443773352758_u64 as i8;
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_9.2 = !_9.0;
Goto(bb4)
}
bb16 = {
_5 = 246_u8;
_9 = (15525_i16, _1, (-27598_i16));
_5 = 116_u8;
_3 = [false,true,true,false,false];
_9.1 = -_1;
_6 = 3593243195040522661_usize + 4_usize;
_1 = !_9.1;
_5 = true as u8;
_10 = !_5;
_9 = (4563_i16, _1, 32371_i16);
match _9.0 {
4563 => bb5,
_ => bb1
}
}
bb17 = {
Return()
}
bb18 = {
_26 = 2017914059_u32 as isize;
_12 = _15;
_24 = [_18,_18,_18,_18,_18];
_27 = (_16.0, _16.1);
_25 = -_9.1;
_27.0 = [_1,_9.1,_9.1];
_5 = !_10;
_16.1 = _25 as i8;
(*_13) = -_16.1;
Goto(bb19)
}
bb19 = {
_16.1 = (*_13);
_27.1 = _16.1 + (*_13);
_15 = _12;
_30 = 188881243260930545326722902404061682400_u128 as isize;
_16 = (_27.0, (*_13));
_23 = [(-474439387_i32),1182596588_i32,1291708066_i32,(-2097162006_i32)];
_15 = _12;
_29 = &_18;
_31 = [_12,_15,_15,_12,_15];
_33 = _10;
RET = -_16.1;
_32 = 332621205677833489907796671606515913970_u128 as f32;
_14 = _1 << _20;
(*_13) = !_27.1;
_3 = [_15,_12,_15,_15,_12];
_31 = _3;
_36 = &_9.0;
_9 = ((-28260_i16), _14, 8287_i16);
_31 = _2;
_13 = core::ptr::addr_of_mut!((*_13));
_39 = _17;
_3 = [_15,_15,_15,_15,_15];
_10 = _12 as u8;
_4 = 17635_u16;
Call(_12 = fn18(Move(_36), Move(_29), _9.1, _39), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
_12 = !_15;
_27.1 = -_16.1;
_20 = RET;
_28 = 312433044211651245679631096365212327023_u128 & 136095517221372621872142458613731985961_u128;
_3 = _31;
_34 = [_4,_4,_4,_4];
_10 = _5 - _33;
_38.2 = -_9.2;
_34 = [_4,_4,_4,_4];
_30 = _25;
_42.1 = _9.2;
_14 = _9.1 - _30;
_43 = _14 - _1;
_1 = _43 & _9.1;
_41.0 = _27.0;
_25 = -_9.1;
_16 = (_27.0, RET);
_20 = _16.1 | RET;
match _9.0 {
0 => bb17,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb14,
5 => bb6,
340282366920938463463374607431768183196 => bb22,
_ => bb21
}
}
bb21 = {
_16.1 = (*_13);
_27.1 = _16.1 + (*_13);
_15 = _12;
_30 = 188881243260930545326722902404061682400_u128 as isize;
_16 = (_27.0, (*_13));
_23 = [(-474439387_i32),1182596588_i32,1291708066_i32,(-2097162006_i32)];
_15 = _12;
_29 = &_18;
_31 = [_12,_15,_15,_12,_15];
_33 = _10;
RET = -_16.1;
_32 = 332621205677833489907796671606515913970_u128 as f32;
_14 = _1 << _20;
(*_13) = !_27.1;
_3 = [_15,_12,_15,_15,_12];
_31 = _3;
_36 = &_9.0;
_9 = ((-28260_i16), _14, 8287_i16);
_31 = _2;
_13 = core::ptr::addr_of_mut!((*_13));
_39 = _17;
_3 = [_15,_15,_15,_15,_15];
_10 = _12 as u8;
_4 = 17635_u16;
Call(_12 = fn18(Move(_36), Move(_29), _9.1, _39), ReturnTo(bb20), UnwindUnreachable())
}
bb22 = {
_33 = _6 as u8;
_21 = core::ptr::addr_of_mut!(_42.0);
_47 = [_10,_10,_33,_33,_33,_10];
_9 = (_38.2, _14, _38.2);
_40 = [_20];
_27.0 = [_1,_9.1,_14];
_47 = [_5,_10,_33,_5,_5,_33];
(*_21) = core::ptr::addr_of!(_38.0);
_42.0 = core::ptr::addr_of!(_10);
_20 = RET;
_41.1 = -_16.1;
_35 = !_33;
Goto(bb23)
}
bb23 = {
_26 = !_43;
(*_21) = core::ptr::addr_of!(_35);
_51 = _6 as i32;
_41 = (_27.0, _27.1);
_20 = _42.1 as i8;
_34 = [_4,_4,_4,_4];
RET = !(*_13);
_50.0 = &_9.2;
_27.0 = _41.0;
match _42.1 {
0 => bb13,
1 => bb10,
2 => bb3,
3 => bb17,
4 => bb18,
5 => bb9,
8287 => bb24,
_ => bb7
}
}
bb24 = {
_52 = _15;
_47 = [_10,_10,_5,_10,_5,_35];
_27.1 = !(*_13);
_35 = !_10;
_37 = [_28,_28,_28,_28,_28,_28,_28,_28];
_50.1 = _4;
_11 = core::ptr::addr_of_mut!(_46);
_2 = [_15,_15,_15,_12,_15];
(*_21) = core::ptr::addr_of!(_10);
_45 = _39;
match _42.1 {
0 => bb2,
1 => bb25,
8287 => bb27,
_ => bb26
}
}
bb25 = {
_9.0 = 15304_i16 & (-28182_i16);
_9.0 = 4909_i16;
RET = 12214787443773352758_u64 as i8;
_1 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_9.2 = !_9.0;
Goto(bb4)
}
bb26 = {
Return()
}
bb27 = {
_26 = _14 + _43;
_12 = !_52;
_42.1 = _38.2;
_43 = 2628074134_u32 as isize;
_47 = [_35,_10,_33,_35,_10,_35];
_41.0 = [_14,_26,_25];
(*_11) = [_18,_18,_18];
_26 = _39 as isize;
_42.0 = core::ptr::addr_of!(_10);
_31 = [_52,_12,_15,_12,_15];
RET = _27.1 >> _27.1;
(*_21) = core::ptr::addr_of!(_5);
_55 = _32 - _32;
_41.0 = [_9.1,_1,_1];
Goto(bb28)
}
bb28 = {
Call(_60 = dump_var(17_usize, 51_usize, Move(_51), 40_usize, Move(_40), 14_usize, Move(_14), 28_usize, Move(_28)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_60 = dump_var(17_usize, 9_usize, Move(_9), 6_usize, Move(_6), 18_usize, Move(_18), 10_usize, Move(_10)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_60 = dump_var(17_usize, 17_usize, Move(_17), 26_usize, Move(_26), 41_usize, Move(_41), 20_usize, Move(_20)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_60 = dump_var(17_usize, 25_usize, Move(_25), 47_usize, Move(_47), 46_usize, Move(_46), 1_usize, Move(_1)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_60 = dump_var(17_usize, 30_usize, Move(_30), 15_usize, Move(_15), 61_usize, _61, 61_usize, _61), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: &'static i16,mut _2: &'static u64,mut _3: isize,mut _4: char) -> bool {
mir! {
type RET = bool;
let _5: *const &'static (&'static i16, u16, char, i64);
let _6: i64;
let _7: *const i32;
let _8: *mut *const *mut i8;
let _9: isize;
let _10: *const [u16; 4];
let _11: Adt30;
let _12: ([i32; 4],);
let _13: bool;
let _14: isize;
let _15: i8;
let _16: [u128; 8];
let _17: [i16; 4];
let _18: i8;
let _19: [i16; 4];
let _20: u16;
let _21: ();
let _22: ();
{
RET = false ^ false;
_3 = 9223372036854775807_isize;
_4 = '\u{d5451}';
_3 = 72_isize;
RET = !true;
_4 = '\u{7f07e}';
_4 = '\u{f59d1}';
_3 = !9223372036854775807_isize;
RET = !true;
_3 = -9223372036854775807_isize;
RET = false & true;
RET = true;
RET = true;
_9 = _3;
RET = !true;
RET = _3 >= _3;
RET = !true;
_9 = _3;
RET = true & true;
_3 = !_9;
RET = false;
RET = _9 < _3;
Goto(bb1)
}
bb1 = {
_6 = (-6552626001692545187_i64) & 359087500837335925_i64;
_11 = Adt30::Variant0 { fld0: RET };
place!(Field::<bool>(Variant(_11, 0), 0)) = !RET;
Call(_8 = fn19(_4, Move(_11), _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = false;
_11 = Adt30::Variant0 { fld0: RET };
_4 = '\u{302dc}';
RET = Field::<bool>(Variant(_11, 0), 0);
RET = Field::<bool>(Variant(_11, 0), 0);
_9 = _3 >> _3;
_9 = -_3;
_4 = '\u{346c4}';
_13 = _9 <= _9;
_9 = _3 - _3;
_12.0 = [595450007_i32,(-1925178431_i32),637620001_i32,(-967047438_i32)];
_6 = !(-3267078828292295756_i64);
_6 = 1414263990200161593_i64;
_15 = (-56_i8);
_9 = _3 >> _15;
RET = Field::<bool>(Variant(_11, 0), 0);
_15 = -(-87_i8);
_17 = [32495_i16,(-236_i16),21655_i16,25535_i16];
_13 = !Field::<bool>(Variant(_11, 0), 0);
_9 = _3 >> _15;
RET = _9 <= _9;
_6 = (-6718126492471985243_i64);
Goto(bb3)
}
bb3 = {
_14 = _3;
Goto(bb4)
}
bb4 = {
_13 = !RET;
match _6 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
340282366920938463456656480939296226213 => bb12,
_ => bb11
}
}
bb5 = {
_14 = _3;
Goto(bb4)
}
bb6 = {
RET = false;
_11 = Adt30::Variant0 { fld0: RET };
_4 = '\u{302dc}';
RET = Field::<bool>(Variant(_11, 0), 0);
RET = Field::<bool>(Variant(_11, 0), 0);
_9 = _3 >> _3;
_9 = -_3;
_4 = '\u{346c4}';
_13 = _9 <= _9;
_9 = _3 - _3;
_12.0 = [595450007_i32,(-1925178431_i32),637620001_i32,(-967047438_i32)];
_6 = !(-3267078828292295756_i64);
_6 = 1414263990200161593_i64;
_15 = (-56_i8);
_9 = _3 >> _15;
RET = Field::<bool>(Variant(_11, 0), 0);
_15 = -(-87_i8);
_17 = [32495_i16,(-236_i16),21655_i16,25535_i16];
_13 = !Field::<bool>(Variant(_11, 0), 0);
_9 = _3 >> _15;
RET = _9 <= _9;
_6 = (-6718126492471985243_i64);
Goto(bb3)
}
bb7 = {
_6 = (-6552626001692545187_i64) & 359087500837335925_i64;
_11 = Adt30::Variant0 { fld0: RET };
place!(Field::<bool>(Variant(_11, 0), 0)) = !RET;
Call(_8 = fn19(_4, Move(_11), _4), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_13 = RET;
_13 = RET;
_15 = (-111_i8) ^ 18_i8;
RET = !_13;
_14 = -_9;
_13 = !Field::<bool>(Variant(_11, 0), 0);
_18 = _15 >> _9;
RET = Field::<bool>(Variant(_11, 0), 0);
_13 = RET;
RET = Field::<bool>(Variant(_11, 0), 0);
SetDiscriminant(_11, 1);
place!(Field::<u16>(Variant(_11, 1), 1)) = !53458_u16;
_4 = '\u{41a63}';
_15 = _18 | _18;
RET = _15 > _18;
_16 = [88727647313342607872312047474630833382_u128,257463878436661859801872033241268088025_u128,282659519888381650603059438952963574355_u128,340194702770512882102725685302101153931_u128,76582017761485833634623459650821973170_u128,176956490695130019756860411377862561714_u128,67111364035226163027672241885580675759_u128,193891149400953804870863385010182157212_u128];
_16 = [11479708763603889064868113784726639535_u128,86693324307640550746786442857372613925_u128,281232247572616968411758039281322925571_u128,217578760655212525128378392400662053929_u128,332302563840118278580502076211686468102_u128,293219426642153073224400427317021990803_u128,240509668884581805339629660257366775861_u128,289740550444144711502791924083977393782_u128];
_11 = Adt30::Variant0 { fld0: RET };
_19 = _17;
_12.0 = [1409699158_i32,498058941_i32,(-731069961_i32),1041026757_i32];
_9 = _14;
Goto(bb13)
}
bb13 = {
Call(_21 = dump_var(18_usize, 13_usize, Move(_13), 12_usize, Move(_12), 3_usize, Move(_3), 19_usize, Move(_19)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_21 = dump_var(18_usize, 16_usize, Move(_16), 15_usize, Move(_15), 22_usize, _22, 22_usize, _22), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: char,mut _2: Adt30,mut _3: char) -> *mut *const *mut i8 {
mir! {
type RET = *mut *const *mut i8;
let _4: *mut [i8; 3];
let _5: [u64; 5];
let _6: f32;
let _7: char;
let _8: &'static *const *mut i8;
let _9: [i128; 7];
let _10: i32;
let _11: bool;
let _12: isize;
let _13: i8;
let _14: f32;
let _15: isize;
let _16: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _17: isize;
let _18: i128;
let _19: i32;
let _20: *mut i8;
let _21: f32;
let _22: u16;
let _23: [i128; 7];
let _24: [i8; 3];
let _25: [i16; 7];
let _26: u16;
let _27: [u128; 8];
let _28: (([i32; 4],),);
let _29: char;
let _30: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _31: isize;
let _32: (u16, (i16, isize, i16));
let _33: i32;
let _34: i16;
let _35: isize;
let _36: [i8; 3];
let _37: (i16, isize, i16);
let _38: u128;
let _39: isize;
let _40: isize;
let _41: (u8, Adt20, i16);
let _42: [i8; 3];
let _43: [u64; 3];
let _44: (u16, (i16, isize, i16));
let _45: &'static [i8; 3];
let _46: [u64; 5];
let _47: i16;
let _48: [i16; 4];
let _49: char;
let _50: Adt76;
let _51: [i16; 7];
let _52: i8;
let _53: [i8; 1];
let _54: &'static [i8; 3];
let _55: i128;
let _56: (u8, Adt20, i16);
let _57: ([i32; 4],);
let _58: *mut [u64; 3];
let _59: [u64; 3];
let _60: char;
let _61: isize;
let _62: [i16; 4];
let _63: isize;
let _64: char;
let _65: f32;
let _66: &'static *const &'static f64;
let _67: bool;
let _68: bool;
let _69: i32;
let _70: [u16; 4];
let _71: Adt27;
let _72: &'static u128;
let _73: (u8, Adt20, i16);
let _74: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _75: [u128; 8];
let _76: u32;
let _77: Adt27;
let _78: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _79: &'static u8;
let _80: u8;
let _81: u128;
let _82: isize;
let _83: bool;
let _84: *const &'static f64;
let _85: usize;
let _86: u128;
let _87: Adt43;
let _88: i128;
let _89: char;
let _90: i128;
let _91: bool;
let _92: bool;
let _93: f64;
let _94: (u16, (i16, isize, i16));
let _95: usize;
let _96: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _97: u64;
let _98: [i8; 1];
let _99: bool;
let _100: &'static u128;
let _101: &'static u64;
let _102: *const i32;
let _103: ((&'static i16, u16, char, i64), u32, u64, f64);
let _104: u64;
let _105: u16;
let _106: Adt27;
let _107: *const *mut i8;
let _108: *mut i8;
let _109: bool;
let _110: &'static &'static (i16, isize, i16);
let _111: *const i32;
let _112: [isize; 3];
let _113: *const u8;
let _114: [i8; 1];
let _115: Adt73;
let _116: (f32, [bool; 5], u128, i8);
let _117: *const *mut i8;
let _118: char;
let _119: f32;
let _120: f32;
let _121: isize;
let _122: *mut u128;
let _123: i64;
let _124: isize;
let _125: &'static &'static (i16, isize, i16);
let _126: f32;
let _127: [u16; 8];
let _128: isize;
let _129: Adt44;
let _130: [i8; 1];
let _131: i16;
let _132: &'static u128;
let _133: isize;
let _134: [i16; 7];
let _135: &'static u128;
let _136: &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _137: bool;
let _138: [i8; 2];
let _139: ();
let _140: ();
{
place!(Field::<bool>(Variant(_2, 0), 0)) = false & true;
Call(RET = fn20(Move(_2)), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = _1;
_2 = Adt30::Variant0 { fld0: false };
_3 = _1;
_5 = [8238718643338016793_u64,8588381705681169985_u64,11468270523801752991_u64,10923873456727486863_u64,18139237797559426241_u64];
_5 = [16870305926743997653_u64,6239795514909765311_u64,16301477203074821538_u64,13681675167344583615_u64,6591438011545562601_u64];
_5 = [13178796095315808552_u64,584689977813606018_u64,17995516494738266609_u64,906969850624079840_u64,13495510840966374790_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = !false;
_2 = Adt30::Variant0 { fld0: true };
_5 = [11433682641424013335_u64,4854298281784758437_u64,12033952376739922706_u64,14736971811170261585_u64,4887171629926815540_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_1 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = _3 >= _3;
Goto(bb2)
}
bb2 = {
_6 = 1180247540_u32 as f32;
_1 = _3;
_5 = [1063268070447791429_u64,1763486323756407041_u64,17877139558198207056_u64,9326438160833655672_u64,906209443117583158_u64];
_5 = [6485019774862959014_u64,5797820676786491358_u64,11198615264707940652_u64,587101392949284412_u64,11650414026186611226_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = _3 > _1;
place!(Field::<bool>(Variant(_2, 0), 0)) = !true;
_3 = _1;
_1 = _3;
_1 = _3;
Goto(bb3)
}
bb3 = {
_6 = 39031077_u32 as f32;
_7 = _3;
SetDiscriminant(_2, 0);
_5 = [8874274668313943474_u64,1318862110551704635_u64,11001897852721827553_u64,17026598525995108618_u64,4726060487950404980_u64];
_6 = 7_usize as f32;
Goto(bb4)
}
bb4 = {
_7 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = false;
_7 = _3;
_6 = 14728440857834142678_u64 as f32;
_9 = [91053966972584016659089418022830988122_i128,23170348243059977359922329966357214891_i128,161307449154411242306236168742615964130_i128,130848390597077331882765124883668120099_i128,(-164905221069643573656774187460953039943_i128),(-153209804023215187326730549506369540366_i128),(-42512689855869326626783279890882306984_i128)];
_7 = _1;
_6 = 1248347187_u32 as f32;
_5 = [18024076203496970379_u64,4067816522469579954_u64,9569968094285899700_u64,3058815402910821135_u64,1244764151219296826_u64];
_7 = _3;
_7 = _1;
Goto(bb5)
}
bb5 = {
_11 = Field::<bool>(Variant(_2, 0), 0);
_11 = !Field::<bool>(Variant(_2, 0), 0);
_13 = 252405737867542002178313027870494463861_u128 as i8;
_13 = (-25_i8);
_5 = [6289194617070731520_u64,16885792348417518616_u64,15984433400707712543_u64,9292699295804492096_u64,4437764537854906197_u64];
SetDiscriminant(_2, 2);
_9 = [(-133190055612844639007943007915843296729_i128),(-114587531591366828684607597914659863039_i128),(-65755200607487564131989525149180983893_i128),(-149550679946833575261201532297086898843_i128),(-101618101615317214154056677827301178250_i128),100881828465879417665644901135023787525_i128,(-76701928085418258959282744174002006117_i128)];
_11 = !true;
_12 = 5965_u16 as isize;
_1 = _3;
place!(Field::<i128>(Variant(_2, 2), 3)) = (-142103886903298083474731754266909356161_i128);
_9 = [Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3)];
_7 = _1;
_2 = Adt30::Variant0 { fld0: _11 };
_7 = _1;
_9 = [99234397920653403830217027204381441243_i128,(-60059177220691136875202992419053863286_i128),(-21364110469036083978801587828098106154_i128),(-67943004843852020305382265617876137894_i128),(-32371298027007599072189678187606856716_i128),(-150711059629628346020987489745004094268_i128),77225670372386859679449975970491676502_i128];
_7 = _3;
_14 = _6;
_10 = !1604794237_i32;
Goto(bb6)
}
bb6 = {
_5 = [2691007894072242548_u64,6981710701838780279_u64,15548667595305811476_u64,7414558949059563182_u64,15901046537834938503_u64];
Goto(bb7)
}
bb7 = {
_1 = _3;
_1 = _3;
_10 = _12 as i32;
_5 = [766550676826056823_u64,17571304910896516108_u64,2317208248020056587_u64,9249165946638793152_u64,12056338189942960527_u64];
_14 = _6;
SetDiscriminant(_2, 1);
_16.2.0 = 232_u8;
place!(Field::<i32>(Variant(_2, 1), 0)) = -_10;
Goto(bb8)
}
bb8 = {
_16.0 = &_16.2.0;
_7 = _3;
_13 = (-88_i8) * 122_i8;
_5 = [14782409296552745586_u64,12543501880566151133_u64,6424421490432965233_u64,18109209797101960818_u64,17221739892469345760_u64];
_16.0 = &_16.2.0;
_15 = -_12;
_16.2.0 = 186_u8 + 177_u8;
_17 = 11070_u16 as isize;
_1 = _3;
Goto(bb9)
}
bb9 = {
_9 = [117554836548410241349190747725988693643_i128,8497924265119689108951295252969771530_i128,(-160835534503769783076121824722371596709_i128),107739332460476877753354374285843452721_i128,(-12985667616834830091366751833293007410_i128),(-110620634040394811571363649040634885814_i128),119608579197275505844092855222003556091_i128];
_10 = Field::<i32>(Variant(_2, 1), 0);
_16.0 = &_16.2.0;
_11 = true;
_18 = (-137703714429413516726081602680773847842_i128) ^ (-155703999580074688913826269562783666651_i128);
_20 = core::ptr::addr_of_mut!(_13);
_6 = _18 as f32;
_16.3 = _16.2.0 & _16.2.0;
_5 = [15426665528320039927_u64,1064396896227712648_u64,13681281509897379_u64,3896025186541591951_u64,5065913152991078386_u64];
_16.2.0 = _16.3 ^ _16.3;
_12 = (*_20) as isize;
_16.2.2 = !(-22799_i16);
_3 = _1;
Goto(bb10)
}
bb10 = {
_2 = Adt30::Variant0 { fld0: _11 };
SetDiscriminant(_2, 0);
place!(Field::<bool>(Variant(_2, 0), 0)) = _16.2.0 >= _16.2.0;
_6 = _14 + _14;
_20 = core::ptr::addr_of_mut!((*_20));
_18 = -1821431785787107733704215116457201156_i128;
_19 = _10;
(*_20) = !125_i8;
_10 = _19;
_15 = !_12;
_20 = core::ptr::addr_of_mut!(_13);
_16.2.1 = Adt20::Variant0 { fld0: Move(_20),fld1: (-643401760762566018_i64),fld2: 15053515648507913377_u64,fld3: 1_usize };
place!(Field::<u64>(Variant(_16.2.1, 0), 2)) = 12829412507993904160_u64 >> _10;
_11 = Field::<bool>(Variant(_2, 0), 0) == Field::<bool>(Variant(_2, 0), 0);
_18 = Field::<u64>(Variant(_16.2.1, 0), 2) as i128;
_5 = [Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2)];
_12 = _15 & _15;
place!(Field::<usize>(Variant(_16.2.1, 0), 3)) = !6_usize;
_20 = Move(Field::<*mut i8>(Variant(_16.2.1, 0), 0));
_7 = _3;
_17 = _16.2.0 as isize;
place!(Field::<bool>(Variant(_2, 0), 0)) = !_11;
_11 = Field::<bool>(Variant(_2, 0), 0);
_16.2.2 = (-15933_i16);
match _16.2.2 {
0 => bb1,
1 => bb7,
2 => bb9,
3 => bb8,
4 => bb5,
5 => bb11,
340282366920938463463374607431768195523 => bb13,
_ => bb12
}
}
bb11 = {
_5 = [2691007894072242548_u64,6981710701838780279_u64,15548667595305811476_u64,7414558949059563182_u64,15901046537834938503_u64];
Goto(bb7)
}
bb12 = {
_3 = _1;
_2 = Adt30::Variant0 { fld0: false };
_3 = _1;
_5 = [8238718643338016793_u64,8588381705681169985_u64,11468270523801752991_u64,10923873456727486863_u64,18139237797559426241_u64];
_5 = [16870305926743997653_u64,6239795514909765311_u64,16301477203074821538_u64,13681675167344583615_u64,6591438011545562601_u64];
_5 = [13178796095315808552_u64,584689977813606018_u64,17995516494738266609_u64,906969850624079840_u64,13495510840966374790_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = !false;
_2 = Adt30::Variant0 { fld0: true };
_5 = [11433682641424013335_u64,4854298281784758437_u64,12033952376739922706_u64,14736971811170261585_u64,4887171629926815540_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_1 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = _3 >= _3;
Goto(bb2)
}
bb13 = {
_9 = [_18,_18,_18,_18,_18,_18,_18];
SetDiscriminant(_2, 0);
_9 = [_18,_18,_18,_18,_18,_18,_18];
_17 = _12;
place!(Field::<bool>(Variant(_2, 0), 0)) = _11;
_17 = _16.2.2 as isize;
_5 = [Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2)];
_15 = !_12;
_15 = _12 ^ _12;
_14 = -_6;
_16.3 = _16.2.0 & _16.2.0;
_16.1 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),_11,Field::<bool>(Variant(_2, 0), 0),_11];
_16.3 = _15 as u8;
place!(Field::<i64>(Variant(_16.2.1, 0), 1)) = -(-8832926129315016752_i64);
_3 = _1;
_19 = !_10;
_15 = _6 as isize;
_16.2.0 = !_16.3;
_16.3 = _16.2.0 << _13;
_9 = [_18,_18,_18,_18,_18,_18,_18];
_23 = _9;
_18 = _12 as i128;
Goto(bb14)
}
bb14 = {
_17 = _15 + _12;
_14 = _6 * _6;
_11 = _1 == _7;
_1 = _3;
_16.1 = [Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0)];
_12 = _17;
_11 = !Field::<bool>(Variant(_2, 0), 0);
_17 = 102894221579198373710832631507168722512_u128 as isize;
_25 = [_16.2.2,_16.2.2,_16.2.2,_16.2.2,_16.2.2,_16.2.2,_16.2.2];
SetDiscriminant(_2, 1);
_15 = _12;
place!(Field::<usize>(Variant(_16.2.1, 0), 3)) = !10497239452390364921_usize;
place!(Field::<i64>(Variant(_16.2.1, 0), 1)) = (-8723240107126623719_i64);
_16.2.0 = !_16.3;
_16.2.2 = (-1193_i16);
_16.1 = [_11,_11,_11,_11,_11];
_27 = [75427004829329425276096480426855304769_u128,81587193493305845936600896231075926801_u128,301622132963666899998998745269265527740_u128,203336692540362869986367823554204020644_u128,9065574495641815241401469280273636538_u128,309821554579008962526232296570157745625_u128,204674583612090896274503261283847958216_u128,45894727234736625074107342814717692913_u128];
match Field::<i64>(Variant(_16.2.1, 0), 1) {
0 => bb13,
1 => bb2,
2 => bb6,
3 => bb4,
340282366920938463454651367324641587737 => bb15,
_ => bb11
}
}
bb15 = {
_16.3 = _16.2.0;
_24 = [_13,_13,_13];
_1 = _3;
_5 = [Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2)];
place!(Field::<*mut i8>(Variant(_16.2.1, 0), 0)) = core::ptr::addr_of_mut!(_13);
_21 = -_14;
_22 = 2520_u16 | 23896_u16;
_4 = core::ptr::addr_of_mut!(_24);
_10 = !_19;
place!(Field::<u16>(Variant(_2, 1), 1)) = _22;
_16.0 = &_16.2.0;
_18 = (-109054545215992234043926719399414179604_i128);
_15 = Field::<usize>(Variant(_16.2.1, 0), 3) as isize;
_4 = core::ptr::addr_of_mut!((*_4));
_11 = false;
_12 = Field::<u64>(Variant(_16.2.1, 0), 2) as isize;
_29 = _3;
_11 = _1 == _29;
_17 = -_12;
place!(Field::<u16>(Variant(_2, 1), 1)) = _22;
_23 = _9;
SetDiscriminant(_16.2.1, 1);
place!(Field::<i32>(Variant(_2, 1), 0)) = 62033128393717333726118372346502512662_u128 as i32;
_28.0.0 = [Field::<i32>(Variant(_2, 1), 0),_10,Field::<i32>(Variant(_2, 1), 0),_19];
_3 = _1;
_32.1.2 = !_16.2.2;
match _18 {
0 => bb1,
1 => bb2,
2 => bb12,
3 => bb16,
231227821704946229419447888032354031852 => bb18,
_ => bb17
}
}
bb16 = {
_3 = _1;
_2 = Adt30::Variant0 { fld0: false };
_3 = _1;
_5 = [8238718643338016793_u64,8588381705681169985_u64,11468270523801752991_u64,10923873456727486863_u64,18139237797559426241_u64];
_5 = [16870305926743997653_u64,6239795514909765311_u64,16301477203074821538_u64,13681675167344583615_u64,6591438011545562601_u64];
_5 = [13178796095315808552_u64,584689977813606018_u64,17995516494738266609_u64,906969850624079840_u64,13495510840966374790_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = !false;
_2 = Adt30::Variant0 { fld0: true };
_5 = [11433682641424013335_u64,4854298281784758437_u64,12033952376739922706_u64,14736971811170261585_u64,4887171629926815540_u64];
place!(Field::<bool>(Variant(_2, 0), 0)) = true;
_1 = _3;
place!(Field::<bool>(Variant(_2, 0), 0)) = _3 >= _3;
Goto(bb2)
}
bb17 = {
_2 = Adt30::Variant0 { fld0: _11 };
SetDiscriminant(_2, 0);
place!(Field::<bool>(Variant(_2, 0), 0)) = _16.2.0 >= _16.2.0;
_6 = _14 + _14;
_20 = core::ptr::addr_of_mut!((*_20));
_18 = -1821431785787107733704215116457201156_i128;
_19 = _10;
(*_20) = !125_i8;
_10 = _19;
_15 = !_12;
_20 = core::ptr::addr_of_mut!(_13);
_16.2.1 = Adt20::Variant0 { fld0: Move(_20),fld1: (-643401760762566018_i64),fld2: 15053515648507913377_u64,fld3: 1_usize };
place!(Field::<u64>(Variant(_16.2.1, 0), 2)) = 12829412507993904160_u64 >> _10;
_11 = Field::<bool>(Variant(_2, 0), 0) == Field::<bool>(Variant(_2, 0), 0);
_18 = Field::<u64>(Variant(_16.2.1, 0), 2) as i128;
_5 = [Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2)];
_12 = _15 & _15;
place!(Field::<usize>(Variant(_16.2.1, 0), 3)) = !6_usize;
_20 = Move(Field::<*mut i8>(Variant(_16.2.1, 0), 0));
_7 = _3;
_17 = _16.2.0 as isize;
place!(Field::<bool>(Variant(_2, 0), 0)) = !_11;
_11 = Field::<bool>(Variant(_2, 0), 0);
_16.2.2 = (-15933_i16);
match _16.2.2 {
0 => bb1,
1 => bb7,
2 => bb9,
3 => bb8,
4 => bb5,
5 => bb11,
340282366920938463463374607431768195523 => bb13,
_ => bb12
}
}
bb18 = {
place!(Field::<*const u8>(Variant(_2, 1), 2)) = core::ptr::addr_of!(place!(Field::<u8>(Variant(_16.2.1, 1), 2)));
_7 = _3;
SetDiscriminant(_2, 0);
match _18 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb14,
231227821704946229419447888032354031852 => bb19,
_ => bb15
}
}
bb19 = {
place!(Field::<f32>(Variant(_16.2.1, 1), 3)) = 14298817372481698747_usize as f32;
place!(Field::<bool>(Variant(_2, 0), 0)) = _11;
_4 = core::ptr::addr_of_mut!(_24);
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = Field::<bool>(Variant(_2, 0), 0) as u32;
_20 = core::ptr::addr_of_mut!(_13);
_32.1.0 = _32.1.2 | _16.2.2;
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = !2569732911991274673_u64;
place!(Field::<i64>(Variant(_16.2.1, 1), 6)) = Field::<u64>(Variant(_16.2.1, 1), 0) as i64;
_33 = !_10;
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = 237011868012630484339549681068530013919_u128 ^ 7506707626436257333779221094080367458_u128;
(*_4) = [(*_20),(*_20),(*_20)];
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = !16343004107541301718_u64;
_12 = Field::<u32>(Variant(_16.2.1, 1), 4) as isize;
_16.1 = [_11,_11,Field::<bool>(Variant(_2, 0), 0),Field::<bool>(Variant(_2, 0), 0),_11];
(*_20) = -99_i8;
SetDiscriminant(_2, 1);
place!(Field::<i32>(Variant(_2, 1), 0)) = _33;
place!(Field::<*const u8>(Variant(_2, 1), 2)) = core::ptr::addr_of!(_16.2.0);
place!(Field::<i32>(Variant(_2, 1), 0)) = _10;
_11 = Field::<f32>(Variant(_16.2.1, 1), 3) == _14;
_37 = (_32.1.2, _12, _16.2.2);
_38 = Field::<u128>(Variant(_16.2.1, 1), 1);
_5 = [Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0)];
_27 = [Field::<u128>(Variant(_16.2.1, 1), 1),Field::<u128>(Variant(_16.2.1, 1), 1),_38,Field::<u128>(Variant(_16.2.1, 1), 1),_38,_38,Field::<u128>(Variant(_16.2.1, 1), 1),_38];
Goto(bb20)
}
bb20 = {
_12 = _21 as isize;
place!(Field::<u16>(Variant(_2, 1), 1)) = _22 << _38;
_37.2 = Field::<i64>(Variant(_16.2.1, 1), 6) as i16;
_34 = _6 as i16;
_34 = !_32.1.2;
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = !_38;
_22 = Field::<u16>(Variant(_2, 1), 1);
_17 = _12 << Field::<u128>(Variant(_16.2.1, 1), 1);
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = 4728224763338709748_u64;
_32 = (Field::<u16>(Variant(_2, 1), 1), _37);
SetDiscriminant(_2, 2);
place!(Field::<i128>(Variant(_2, 2), 3)) = _18 & _18;
_7 = _1;
Goto(bb21)
}
bb21 = {
place!(Field::<u8>(Variant(_16.2.1, 1), 2)) = _16.3 * _16.2.0;
Call(_37.0 = core::intrinsics::transmute(_16.2.2), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
place!(Field::<u64>(Variant(_2, 2), 0)) = !Field::<u64>(Variant(_16.2.1, 1), 0);
_32.1.1 = _12 * _15;
(*_4) = [_13,(*_20),_13];
place!(Field::<u64>(Variant(_2, 2), 0)) = Field::<u64>(Variant(_16.2.1, 1), 0) | Field::<u64>(Variant(_16.2.1, 1), 0);
_3 = _7;
_5 = [Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_2, 2), 0)];
_31 = -_17;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)) = (_37.2, _17, _34);
_6 = _21 + Field::<f32>(Variant(_16.2.1, 1), 3);
_32 = (_22, Field::<(i16, isize, i16)>(Variant(_2, 2), 1));
_23 = [_18,Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3),_18,Field::<i128>(Variant(_2, 2), 3),Field::<i128>(Variant(_2, 2), 3)];
_27 = [Field::<u128>(Variant(_16.2.1, 1), 1),_38,_38,_38,_38,Field::<u128>(Variant(_16.2.1, 1), 1),_38,Field::<u128>(Variant(_16.2.1, 1), 1)];
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = Field::<u8>(Variant(_16.2.1, 1), 2) as u32;
_17 = -_32.1.1;
Goto(bb23)
}
bb23 = {
_41.1 = Adt20::Variant0 { fld0: Move(_20),fld1: Field::<i64>(Variant(_16.2.1, 1), 6),fld2: Field::<u64>(Variant(_16.2.1, 1), 0),fld3: 15104487391006426512_usize };
_22 = _32.0;
_41.0 = Field::<u8>(Variant(_16.2.1, 1), 2);
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = 5293820913726334049_usize as u128;
_36 = [_13,_13,_13];
place!(Field::<i32>(Variant(_16.2.1, 1), 5)) = _10 >> _41.0;
_39 = _31 - _31;
_4 = core::ptr::addr_of_mut!((*_4));
place!(Field::<f32>(Variant(_16.2.1, 1), 3)) = _21 + _14;
_33 = _7 as i32;
_3 = _1;
_32.1 = (_37.2, _31, Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0);
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = 4108418757_u32;
_13 = !(-109_i8);
Goto(bb24)
}
bb24 = {
_16.3 = 0_usize as u8;
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = Field::<u64>(Variant(_41.1, 0), 2) - Field::<u64>(Variant(_2, 2), 0);
place!(Field::<u64>(Variant(_41.1, 0), 2)) = Field::<u64>(Variant(_16.2.1, 1), 0) * Field::<u64>(Variant(_16.2.1, 1), 0);
_32.1.0 = -_32.1.2;
_41.1 = Move(_16.2.1);
_32.1.1 = _39 ^ _37.1;
_44.1.2 = Field::<i128>(Variant(_2, 2), 3) as i16;
_29 = _1;
_24 = _36;
_44 = (_32.0, _32.1);
place!(Field::<i64>(Variant(_41.1, 1), 6)) = 8425193716150274252_i64;
Goto(bb25)
}
bb25 = {
_3 = _29;
_45 = &(*_4);
_16.2.1 = Move(_41.1);
_26 = _41.0 as u16;
_40 = -_39;
_16.2.2 = _34;
_32 = _44;
_49 = _29;
_41.0 = !Field::<u8>(Variant(_16.2.1, 1), 2);
_44.1 = (_37.2, _17, _16.2.2);
_35 = _29 as isize;
match Field::<i64>(Variant(_16.2.1, 1), 6) {
0 => bb1,
1 => bb22,
2 => bb20,
3 => bb4,
4 => bb5,
8425193716150274252 => bb26,
_ => bb15
}
}
bb26 = {
_28.0.0 = [Field::<i32>(Variant(_16.2.1, 1), 5),Field::<i32>(Variant(_16.2.1, 1), 5),Field::<i32>(Variant(_16.2.1, 1), 5),Field::<i32>(Variant(_16.2.1, 1), 5)];
_16.2.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_2, 2), 0),fld1: _38,fld2: _41.0,fld3: _6,fld4: 3376154225_u32,fld5: _33,fld6: 4486118300312467078_i64 };
_44.1.2 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0 >> _41.0;
_37.0 = _44.1.2;
_37.0 = _44.1.2;
_22 = 4030960157968529450_i64 as u16;
_10 = 1521643207881920544_i64 as i32;
_16.0 = &_16.3;
_11 = false;
_41.2 = _13 as i16;
_17 = 967439995300432563_i64 as isize;
_16.3 = _41.0;
_36 = [_13,_13,_13];
_5 = [Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_2, 2), 0)];
_44.1.2 = _34;
_34 = _21 as i16;
_40 = _11 as isize;
_44.1.2 = _37.0;
_37.0 = Field::<u64>(Variant(_16.2.1, 1), 0) as i16;
_57.0 = [_19,_10,_10,_33];
_46 = [Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_2, 2), 0),Field::<u64>(Variant(_2, 2), 0)];
place!(Field::<u16>(Variant(_2, 2), 2)) = _26 & _26;
_57.0 = _28.0.0;
_19 = !Field::<i32>(Variant(_16.2.1, 1), 5);
_37.0 = _13 as i16;
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = !Field::<u64>(Variant(_2, 2), 0);
SetDiscriminant(_2, 1);
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = _18 as u32;
Goto(bb27)
}
bb27 = {
_51 = [_34,_44.1.2,_44.1.2,_41.2,_37.0,_37.0,_44.1.2];
_31 = -_44.1.1;
_33 = _19;
_16.3 = _16.2.0 + Field::<u8>(Variant(_16.2.1, 1), 2);
_9 = _23;
_16.1 = [_11,_11,_11,_11,_11];
place!(Field::<f32>(Variant(_16.2.1, 1), 3)) = _21;
_37 = (_32.1.0, _31, _44.1.2);
_20 = core::ptr::addr_of_mut!(_13);
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = _38 << _32.1.1;
_38 = !Field::<u128>(Variant(_16.2.1, 1), 1);
_31 = _44.1.1;
_28 = (_57,);
_22 = _26 >> _39;
_44.1 = (_37.2, _39, _37.2);
_60 = _3;
place!(Field::<i32>(Variant(_2, 1), 0)) = _33 ^ _33;
place!(Field::<*const u8>(Variant(_2, 1), 2)) = core::ptr::addr_of!(_16.3);
_48 = [_37.2,_44.1.2,_44.1.2,_44.1.0];
_43 = [Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0),Field::<u64>(Variant(_16.2.1, 1), 0)];
_52 = (*_20) - (*_20);
Goto(bb28)
}
bb28 = {
_32.1.1 = _39 * _17;
_16.2.1 = Adt20::Variant1 { fld0: 6247166659013590627_u64,fld1: _38,fld2: _16.3,fld3: _14,fld4: 2693035658_u32,fld5: _33,fld6: 9094660550766900296_i64 };
_28.0 = (_57.0,);
_54 = Move(_45);
_49 = _29;
_56.1 = Adt20::Variant1 { fld0: 15782057561732506372_u64,fld1: _38,fld2: Field::<u8>(Variant(_16.2.1, 1), 2),fld3: Field::<f32>(Variant(_16.2.1, 1), 3),fld4: 4065232172_u32,fld5: Field::<i32>(Variant(_16.2.1, 1), 5),fld6: 4039528878054776341_i64 };
_65 = Field::<f32>(Variant(_56.1, 1), 3) + _21;
_57.0 = _28.0.0;
_32.1.0 = _18 as i16;
place!(Field::<i64>(Variant(_56.1, 1), 6)) = (-6237323272715119601_i64) - (-1012357138296835389_i64);
_59 = [10146095387775089183_u64,14098169946582100688_u64,10612182540636385109_u64];
_42 = [(*_20),(*_20),_52];
Goto(bb29)
}
bb29 = {
_16.2.0 = _18 as u8;
_2 = Adt30::Variant2 { fld0: 11103217793392585248_u64,fld1: _32.1,fld2: _22,fld3: _18 };
_31 = _49 as isize;
_43 = _59;
_59 = _43;
_46 = _5;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).0 = _44.1.0 + _44.1.0;
_32 = _44;
_73.0 = !Field::<u8>(Variant(_16.2.1, 1), 2);
_36 = [_52,(*_20),_13];
_11 = true;
Goto(bb30)
}
bb30 = {
_29 = _3;
_54 = &(*_4);
place!(Field::<u8>(Variant(_16.2.1, 1), 2)) = !_41.0;
_73.1 = Adt20::Variant1 { fld0: 7505101742756788289_u64,fld1: Field::<u128>(Variant(_16.2.1, 1), 1),fld2: Field::<u8>(Variant(_16.2.1, 1), 2),fld3: _6,fld4: 2344451590_u32,fld5: _33,fld6: Field::<i64>(Variant(_56.1, 1), 6) };
place!(Field::<u64>(Variant(_56.1, 1), 0)) = Field::<u16>(Variant(_2, 2), 2) as u64;
place!(Field::<u64>(Variant(_2, 2), 0)) = Field::<u64>(Variant(_56.1, 1), 0);
_41.1 = Adt20::Variant0 { fld0: Move(_20),fld1: Field::<i64>(Variant(_73.1, 1), 6),fld2: Field::<u64>(Variant(_56.1, 1), 0),fld3: 9494013652615532275_usize };
place!(Field::<u8>(Variant(_56.1, 1), 2)) = _16.3;
_44.1.1 = _32.1.1 ^ _12;
_16.0 = &_41.0;
_32.0 = 3_usize as u16;
_72 = &_38;
place!(Field::<i64>(Variant(_73.1, 1), 6)) = _32.1.0 as i64;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)) = _32.1;
_73.2 = _34 >> _73.0;
_18 = Field::<u64>(Variant(_2, 2), 0) as i128;
place!(Field::<i64>(Variant(_73.1, 1), 6)) = Field::<i64>(Variant(_56.1, 1), 6);
SetDiscriminant(_2, 0);
_28.0.0 = [_33,_10,Field::<i32>(Variant(_73.1, 1), 5),Field::<i32>(Variant(_56.1, 1), 5)];
place!(Field::<i32>(Variant(_73.1, 1), 5)) = -Field::<i32>(Variant(_56.1, 1), 5);
place!(Field::<u128>(Variant(_73.1, 1), 1)) = Field::<u128>(Variant(_16.2.1, 1), 1);
_54 = &_24;
Goto(bb31)
}
bb31 = {
place!(Field::<u64>(Variant(_56.1, 1), 0)) = Field::<u64>(Variant(_41.1, 0), 2) >> Field::<u8>(Variant(_56.1, 1), 2);
_44 = (_22, _37);
_39 = _12 << _44.0;
_28.0 = (_57.0,);
place!(Field::<u64>(Variant(_73.1, 1), 0)) = Field::<u64>(Variant(_41.1, 0), 2) * Field::<u64>(Variant(_56.1, 1), 0);
place!(Field::<i32>(Variant(_73.1, 1), 5)) = Field::<u64>(Variant(_41.1, 0), 2) as i32;
_68 = _52 != _52;
_2 = Adt30::Variant2 { fld0: Field::<u64>(Variant(_73.1, 1), 0),fld1: _44.1,fld2: _26,fld3: _18 };
_37.1 = _32.1.1;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).2 = 3034807974_u32 as i16;
place!(Field::<u8>(Variant(_73.1, 1), 2)) = _16.2.0;
_29 = _1;
_13 = Field::<u128>(Variant(_56.1, 1), 1) as i8;
_60 = _1;
Call(place!(Field::<usize>(Variant(_41.1, 0), 3)) = core::intrinsics::transmute(Field::<u64>(Variant(_56.1, 1), 0)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).0 = 2332035998_u32 as i16;
_26 = Field::<u16>(Variant(_2, 2), 2) | _44.0;
place!(Field::<u64>(Variant(_41.1, 0), 2)) = Field::<u64>(Variant(_73.1, 1), 0);
_41.0 = !_73.0;
SetDiscriminant(_41.1, 1);
place!(Field::<u32>(Variant(_56.1, 1), 4)) = 887095372_u32;
_75 = _27;
place!(Field::<u8>(Variant(_73.1, 1), 2)) = Field::<u8>(Variant(_16.2.1, 1), 2) | Field::<u8>(Variant(_56.1, 1), 2);
_37.2 = !_73.2;
_27 = [Field::<u128>(Variant(_56.1, 1), 1),(*_72),Field::<u128>(Variant(_56.1, 1), 1),_38,Field::<u128>(Variant(_16.2.1, 1), 1),Field::<u128>(Variant(_56.1, 1), 1),Field::<u128>(Variant(_73.1, 1), 1),Field::<u128>(Variant(_73.1, 1), 1)];
_9 = _23;
place!(Field::<i64>(Variant(_73.1, 1), 6)) = _73.0 as i64;
place!(Field::<i32>(Variant(_16.2.1, 1), 5)) = Field::<i32>(Variant(_73.1, 1), 5);
_44.1.1 = _39;
_45 = Move(_54);
_13 = _52 + _52;
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = Field::<u128>(Variant(_73.1, 1), 1) * Field::<u128>(Variant(_56.1, 1), 1);
SetDiscriminant(_2, 0);
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = Field::<u32>(Variant(_56.1, 1), 4) * Field::<u32>(Variant(_56.1, 1), 4);
_44.1 = (_73.2, _39, _73.2);
_47 = _73.2 & _44.1.0;
place!(Field::<u64>(Variant(_41.1, 1), 0)) = !Field::<u64>(Variant(_73.1, 1), 0);
_4 = core::ptr::addr_of_mut!((*_4));
_58 = core::ptr::addr_of_mut!(_59);
Goto(bb33)
}
bb33 = {
_39 = _44.1.1 | _32.1.1;
_24 = _36;
SetDiscriminant(_56.1, 0);
Goto(bb34)
}
bb34 = {
place!(Field::<u64>(Variant(_41.1, 1), 0)) = Field::<u64>(Variant(_73.1, 1), 0);
_5 = _46;
_46 = [Field::<u64>(Variant(_41.1, 1), 0),Field::<u64>(Variant(_41.1, 1), 0),Field::<u64>(Variant(_73.1, 1), 0),Field::<u64>(Variant(_41.1, 1), 0),Field::<u64>(Variant(_41.1, 1), 0)];
_56.0 = !_16.3;
place!(Field::<bool>(Variant(_2, 0), 0)) = !_68;
_7 = _3;
_76 = Field::<u32>(Variant(_16.2.1, 1), 4);
_28.0.0 = [Field::<i32>(Variant(_16.2.1, 1), 5),Field::<i32>(Variant(_16.2.1, 1), 5),Field::<i32>(Variant(_73.1, 1), 5),Field::<i32>(Variant(_73.1, 1), 5)];
SetDiscriminant(_2, 0);
place!(Field::<i32>(Variant(_73.1, 1), 5)) = -_19;
_3 = _1;
_32.1.2 = _65 as i16;
Goto(bb35)
}
bb35 = {
place!(Field::<*mut i8>(Variant(_56.1, 0), 0)) = core::ptr::addr_of_mut!(_52);
_53 = [_52];
_41.0 = _56.0 - Field::<u8>(Variant(_16.2.1, 1), 2);
_60 = _1;
_61 = !_37.1;
Goto(bb36)
}
bb36 = {
_36 = [_13,_52,_13];
_41.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_73.1, 1), 0),fld1: Field::<u128>(Variant(_16.2.1, 1), 1),fld2: _73.0,fld3: Field::<f32>(Variant(_16.2.1, 1), 3),fld4: _76,fld5: Field::<i32>(Variant(_16.2.1, 1), 5),fld6: Field::<i64>(Variant(_73.1, 1), 6) };
_7 = _49;
Goto(bb37)
}
bb37 = {
place!(Field::<bool>(Variant(_2, 0), 0)) = !_11;
Goto(bb38)
}
bb38 = {
_44.0 = !_26;
place!(Field::<u32>(Variant(_41.1, 1), 4)) = _37.1 as u32;
SetDiscriminant(_41.1, 1);
SetDiscriminant(_2, 0);
_29 = _49;
_90 = -_18;
_6 = _14 * Field::<f32>(Variant(_16.2.1, 1), 3);
_16.2.1 = Adt20::Variant0 { fld0: Move(Field::<*mut i8>(Variant(_56.1, 0), 0)),fld1: Field::<i64>(Variant(_73.1, 1), 6),fld2: Field::<u64>(Variant(_73.1, 1), 0),fld3: 741850802070920958_usize };
Goto(bb39)
}
bb39 = {
_77 = Adt27::Variant0 { fld0: _40 };
_79 = &_16.2.0;
_67 = _41.0 < _56.0;
place!(Field::<i64>(Variant(_56.1, 0), 1)) = Field::<i64>(Variant(_16.2.1, 0), 1) & Field::<i64>(Variant(_73.1, 1), 6);
_38 = !Field::<u128>(Variant(_73.1, 1), 1);
place!(Field::<usize>(Variant(_56.1, 0), 3)) = 2425028514737413918_usize + 15089315355986015981_usize;
place!(Field::<u64>(Variant(_56.1, 0), 2)) = !Field::<u64>(Variant(_16.2.1, 0), 2);
_42 = [_13,_52,_13];
_63 = -_37.1;
place!(Field::<u8>(Variant(_41.1, 1), 2)) = _41.0;
_98 = [_13];
_32.1.1 = _15 | _44.1.1;
_6 = Field::<i64>(Variant(_73.1, 1), 6) as f32;
_44.1.2 = _73.2 + _73.2;
_97 = !Field::<u64>(Variant(_56.1, 0), 2);
_45 = &_36;
_86 = _38 & Field::<u128>(Variant(_73.1, 1), 1);
_44.0 = _26 & _26;
_92 = !_67;
_86 = !_38;
place!(Field::<i64>(Variant(_41.1, 1), 6)) = !Field::<i64>(Variant(_73.1, 1), 6);
_23 = [_18,_18,_90,_18,_18,_90,_18];
_68 = _92 | _92;
_55 = -_90;
_44.1 = _32.1;
_69 = _10 - _10;
_59 = _43;
place!(Field::<u64>(Variant(_41.1, 1), 0)) = Field::<u64>(Variant(_16.2.1, 0), 2);
Goto(bb40)
}
bb40 = {
_39 = _32.1.1 + _32.1.1;
_73.2 = _37.2;
place!(Field::<f32>(Variant(_41.1, 1), 3)) = -_65;
_75 = [Field::<u128>(Variant(_73.1, 1), 1),Field::<u128>(Variant(_73.1, 1), 1),Field::<u128>(Variant(_73.1, 1), 1),_86,Field::<u128>(Variant(_73.1, 1), 1),_38,_38,_86];
_64 = _60;
_88 = _55 >> _13;
_81 = Field::<u128>(Variant(_73.1, 1), 1);
place!(Field::<u32>(Variant(_73.1, 1), 4)) = !_76;
_21 = _6 - Field::<f32>(Variant(_41.1, 1), 3);
_100 = &_38;
_44.0 = _26 & _22;
_46 = [_97,Field::<u64>(Variant(_73.1, 1), 0),Field::<u64>(Variant(_16.2.1, 0), 2),Field::<u64>(Variant(_56.1, 0), 2),Field::<u64>(Variant(_16.2.1, 0), 2)];
_100 = &(*_100);
_69 = _33 | _19;
_81 = !_38;
_13 = !_52;
_44 = (_22, _37);
_28.0.0 = [_69,_10,Field::<i32>(Variant(_73.1, 1), 5),_69];
_28.0 = (_57.0,);
_71 = Move(_77);
_29 = _60;
_16.2 = Move(_73);
place!(Field::<u8>(Variant(_16.2.1, 1), 2)) = _56.0 * _16.2.0;
Goto(bb41)
}
bb41 = {
_88 = -_18;
_76 = _68 as u32;
_94.0 = _26;
_99 = Field::<u128>(Variant(_16.2.1, 1), 1) == _81;
place!(Field::<u128>(Variant(_41.1, 1), 1)) = _81 ^ (*_100);
_78 = &_16;
_86 = _38 >> Field::<i64>(Variant(_56.1, 0), 1);
_32.1.2 = _86 as i16;
_61 = _39;
_3 = _29;
_41.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant((*_78).2.1, 1), 0),fld1: _81,fld2: _56.0,fld3: _21,fld4: _76,fld5: _69,fld6: Field::<i64>(Variant(_56.1, 0), 1) };
_104 = Field::<u64>(Variant(_16.2.1, 1), 0) ^ Field::<u64>(Variant((*_78).2.1, 1), 0);
_4 = core::ptr::addr_of_mut!(_36);
place!(Field::<i64>(Variant(_56.1, 0), 1)) = -Field::<i64>(Variant((*_78).2.1, 1), 6);
_29 = _49;
_16.0 = Move(_79);
place!(Field::<isize>(Variant(_71, 0), 0)) = Field::<u8>(Variant((*_78).2.1, 1), 2) as isize;
place!(Field::<f32>(Variant(_16.2.1, 1), 3)) = _6 * _21;
_73.2 = _68 as i16;
place!(Field::<i32>(Variant(_41.1, 1), 5)) = !_10;
place!(Field::<i32>(Variant(_41.1, 1), 5)) = !_10;
_44.1.1 = !_61;
place!(Field::<i64>(Variant(_56.1, 0), 1)) = Field::<i64>(Variant(_16.2.1, 1), 6) - Field::<i64>(Variant(_41.1, 1), 6);
_94.1.2 = _73.2 - _47;
SetDiscriminant(_71, 0);
Goto(bb42)
}
bb42 = {
place!(Field::<u128>(Variant(_41.1, 1), 1)) = Field::<u128>(Variant((*_78).2.1, 1), 1) ^ _81;
_103.0.0 = &(*_78).2.2;
_34 = _99 as i16;
_67 = _68;
(*_58) = _43;
_101 = &place!(Field::<u64>(Variant(_41.1, 1), 0));
Goto(bb43)
}
bb43 = {
_83 = _99;
_108 = core::ptr::addr_of_mut!(_52);
_44.1.0 = _32.1.2;
(*_58) = [Field::<u64>(Variant(_41.1, 1), 0),Field::<u64>(Variant((*_78).2.1, 1), 0),Field::<u64>(Variant((*_78).2.1, 1), 0)];
_30 = Move(_78);
_94.0 = _44.0;
place!(Field::<i32>(Variant(_41.1, 1), 5)) = _10;
SetDiscriminant(_16.2.1, 1);
_80 = !_56.0;
_71 = Adt27::Variant0 { fld0: _32.1.1 };
_10 = Field::<i32>(Variant(_41.1, 1), 5);
(*_58) = [Field::<u64>(Variant(_41.1, 1), 0),_97,(*_101)];
_103.2 = _104 << _104;
Goto(bb44)
}
bb44 = {
_22 = !_26;
_23 = [_55,_55,_18,_88,_88,_55,_18];
_28.0.0 = [_33,_69,_10,_69];
_19 = _32.1.1 as i32;
_72 = Move(_100);
_54 = Move(_45);
_103.1 = _76;
_108 = core::ptr::addr_of_mut!((*_108));
_98 = _53;
_94.1.0 = _65 as i16;
place!(Field::<*mut i8>(Variant(_56.1, 0), 0)) = Move(_108);
place!(Field::<bool>(Variant(_2, 0), 0)) = Field::<u32>(Variant(_41.1, 1), 4) == _103.1;
_37 = (_47, _44.1.1, _47);
_16.0 = &place!(Field::<u8>(Variant(_41.1, 1), 2));
_102 = core::ptr::addr_of!(_69);
_32.1.1 = _44.1.1;
_53 = [_13];
_63 = _86 as isize;
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = _73.2 as u128;
_76 = !_103.1;
_103.0.0 = &_94.1.2;
_103.0.3 = _19 as i64;
_100 = &place!(Field::<u128>(Variant(_41.1, 1), 1));
_73.1 = Adt20::Variant0 { fld0: Move(Field::<*mut i8>(Variant(_56.1, 0), 0)),fld1: Field::<i64>(Variant(_41.1, 1), 6),fld2: _103.2,fld3: Field::<usize>(Variant(_56.1, 0), 3) };
place!(Field::<u32>(Variant(_16.2.1, 1), 4)) = _103.1;
_103.1 = Field::<i64>(Variant(_41.1, 1), 6) as u32;
Goto(bb45)
}
bb45 = {
_106 = Move(_71);
SetDiscriminant(_73.1, 0);
place!(Field::<u64>(Variant(_73.1, 0), 2)) = !(*_101);
place!(Field::<u64>(Variant(_16.2.1, 1), 0)) = Field::<u64>(Variant(_56.1, 0), 2);
_50 = Adt76::Variant2 { fld0: Move(_41),fld1: _76,fld2: _63,fld3: _13,fld4: (*_58),fld5: _23 };
_37.2 = !_32.1.2;
SetDiscriminant(_2, 2);
_52 = Field::<i8>(Variant(_50, 2), 3) ^ Field::<i8>(Variant(_50, 2), 3);
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)).0 = Field::<u32>(Variant(_16.2.1, 1), 4) as i16;
_9 = [_18,_55,_88,_88,_90,_55,_88];
Goto(bb46)
}
bb46 = {
place!(Field::<u32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_50, 2), 0)).1, 1), 4)) = _6 as u32;
_73.1 = Move(Field::<(u8, Adt20, i16)>(Variant(_50, 2), 0).1);
SetDiscriminant(_73.1, 1);
_69 = _19;
_94.1.2 = _37.2;
place!(Field::<(i16, isize, i16)>(Variant(_2, 2), 1)) = _32.1;
_116.3 = _37.1 as i8;
_102 = core::ptr::addr_of!(_10);
_33 = _88 as i32;
_21 = -_65;
_31 = _61 << _103.2;
place!(Field::<i8>(Variant(_50, 2), 3)) = !_116.3;
_46 = _5;
_73.0 = _60 as u8;
place!(Field::<i32>(Variant(_73.1, 1), 5)) = -_33;
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = _81 >> _32.1.1;
_33 = _69;
_61 = -_44.1.1;
_103.0.2 = _64;
_44.1.2 = Field::<usize>(Variant(_56.1, 0), 3) as i16;
place!(Field::<u8>(Variant(_16.2.1, 1), 2)) = Field::<(u8, Adt20, i16)>(Variant(_50, 2), 0).0;
place!(Field::<f32>(Variant(_73.1, 1), 3)) = _31 as f32;
_53 = [Field::<i8>(Variant(_50, 2), 3)];
_20 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_50, 2), 3)));
_73.1 = Adt20::Variant1 { fld0: _103.2,fld1: Field::<u128>(Variant(_16.2.1, 1), 1),fld2: Field::<u8>(Variant(_16.2.1, 1), 2),fld3: _65,fld4: Field::<u32>(Variant(_16.2.1, 1), 4),fld5: _33,fld6: _103.0.3 };
_18 = _88;
Goto(bb47)
}
bb47 = {
place!(Field::<u128>(Variant(_16.2.1, 1), 1)) = _64 as u128;
_82 = _47 as isize;
_43 = (*_58);
_94.0 = _22;
_1 = _64;
_97 = _44.0 as u64;
_56.2 = _47 | _94.1.2;
_25 = _51;
_101 = &_104;
_114 = [(*_20)];
_73.1 = Adt20::Variant1 { fld0: (*_101),fld1: _38,fld2: Field::<(u8, Adt20, i16)>(Variant(_50, 2), 0).0,fld3: _6,fld4: _76,fld5: _69,fld6: Field::<i64>(Variant(_56.1, 0), 1) };
_103.3 = _37.0 as f64;
_94 = _32;
_116.1 = [_68,_92,_67,_68,_68];
_120 = Field::<f32>(Variant(_73.1, 1), 3) * Field::<f32>(Variant(_73.1, 1), 3);
SetDiscriminant(_73.1, 1);
place!(Field::<i64>(Variant(_56.1, 0), 1)) = -_103.0.3;
_24 = [(*_20),Field::<i8>(Variant(_50, 2), 3),Field::<i8>(Variant(_50, 2), 3)];
_123 = _103.0.3;
_63 = _86 as isize;
_12 = _37.1 ^ _17;
_119 = _120 * _65;
_96 = core::ptr::addr_of!(_103);
_32.1 = (_37.0, _31, _73.2);
_27 = [_81,_86,_86,_86,_38,_38,_86,_86];
place!(Field::<f32>(Variant(_73.1, 1), 3)) = -_120;
Goto(bb48)
}
bb48 = {
_59 = [_104,_103.2,(*_101)];
_41.1 = Adt20::Variant1 { fld0: (*_101),fld1: _86,fld2: _16.2.0,fld3: _65,fld4: Field::<u32>(Variant(_16.2.1, 1), 4),fld5: _69,fld6: (*_96).0.3 };
_81 = _86;
Goto(bb49)
}
bb49 = {
_70 = [_44.0,_26,_22,_44.0];
(*_96).1 = Field::<u32>(Variant(_41.1, 1), 4) + Field::<u32>(Variant(_16.2.1, 1), 4);
_121 = (*_20) as isize;
_124 = _31;
_16.2.2 = Field::<(i16, isize, i16)>(Variant(_2, 2), 1).2;
(*_96).0.2 = _29;
SetDiscriminant(_106, 1);
_103.0.3 = _123 ^ _123;
Goto(bb50)
}
bb50 = {
SetDiscriminant(_41.1, 0);
_42 = [_116.3,(*_20),_116.3];
_69 = _33;
place!(Field::<i64>(Variant(_16.2.1, 1), 6)) = !_103.0.3;
_41.0 = Field::<(u8, Adt20, i16)>(Variant(_50, 2), 0).0;
_7 = (*_96).0.2;
place!(Field::<(u8, Adt20, i16)>(Variant(_106, 1), 2)).2 = !_32.1.2;
(*_96).1 = Field::<u32>(Variant(_16.2.1, 1), 4);
_68 = !_83;
_95 = !Field::<usize>(Variant(_56.1, 0), 3);
place!(Field::<(u8, Adt20, i16)>(Variant(_106, 1), 2)).0 = _80;
place!(Field::<u8>(Variant(_106, 1), 4)) = _41.0;
_65 = _120 + _120;
_10 = !_33;
place!(Field::<(u8, Adt20, i16)>(Variant(_106, 1), 2)).1 = Adt20::Variant0 { fld0: Move(_20),fld1: (*_96).0.3,fld2: (*_101),fld3: Field::<usize>(Variant(_56.1, 0), 3) };
_80 = _56.0;
_49 = _64;
_16.1 = _116.1;
Goto(bb51)
}
bb51 = {
_94.1.2 = _7 as i16;
place!(Field::<i64>(Variant(_16.2.1, 1), 6)) = Field::<i64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_106, 1), 2).1, 0), 1) - (*_96).0.3;
_48 = [_32.1.2,_16.2.2,_56.2,Field::<(i16, isize, i16)>(Variant(_2, 2), 1).0];
(*_96).1 = Field::<u8>(Variant(_16.2.1, 1), 2) as u32;
_117 = core::ptr::addr_of!(_20);
_77 = Adt27::Variant1 { fld0: (*_101),fld1: _103.3,fld2: Move(Field::<(u8, Adt20, i16)>(Variant(_106, 1), 2)),fld3: Field::<usize>(Variant(_56.1, 0), 3),fld4: _16.2.0 };
_16.0 = &_16.3;
SetDiscriminant(Field::<(u8, Adt20, i16)>(Variant(_77, 1), 2).1, 0);
place!(Field::<*mut i8>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_77, 1), 2)).1, 0), 0)) = core::ptr::addr_of_mut!(_13);
_88 = Field::<u64>(Variant(_56.1, 0), 2) as i128;
Goto(bb52)
}
bb52 = {
_93 = Field::<u32>(Variant(_50, 2), 1) as f64;
place!(Field::<*mut i8>(Variant(_41.1, 0), 0)) = core::ptr::addr_of_mut!(_52);
_98 = [_116.3];
place!(Field::<u16>(Variant(_2, 2), 2)) = _22 - _26;
Goto(bb53)
}
bb53 = {
place!(Field::<u64>(Variant(_2, 2), 0)) = _104;
_120 = _86 as f32;
_123 = Field::<i64>(Variant(_56.1, 0), 1);
place!(Field::<usize>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_77, 1), 2)).1, 0), 3)) = _49 as usize;
_28.0.0 = [_33,_10,_19,_33];
Goto(bb54)
}
bb54 = {
_47 = -_94.1.0;
_59 = [_104,(*_101),_104];
_32.0 = _26 & Field::<u16>(Variant(_2, 2), 2);
_83 = _92;
place!(Field::<u64>(Variant(_2, 2), 0)) = _104;
_67 = _92;
place!(Field::<i64>(Variant(_41.1, 0), 1)) = -_103.0.3;
_36 = [_116.3,_116.3,_116.3];
_116.1 = [_92,_92,_83,_67,_68];
_106 = Adt27::Variant0 { fld0: _124 };
_20 = Move(Field::<*mut i8>(Variant(_41.1, 0), 0));
SetDiscriminant(_106, 1);
_20 = Move(Field::<*mut i8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_77, 1), 2).1, 0), 0));
_124 = !_32.1.1;
place!(Field::<u8>(Variant(_73.1, 1), 2)) = Field::<u8>(Variant(_16.2.1, 1), 2) + _80;
_132 = &_38;
_76 = Field::<u32>(Variant(_16.2.1, 1), 4);
_111 = core::ptr::addr_of!(_69);
RET = core::ptr::addr_of_mut!(_117);
_3 = _103.0.2;
_117 = core::ptr::addr_of!(place!(Field::<*mut i8>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_77, 1), 2)).1, 0), 0)));
_133 = _37.1;
place!(Field::<u8>(Variant(_106, 1), 4)) = _32.0 as u8;
Goto(bb55)
}
bb55 = {
Call(_139 = dump_var(19_usize, 49_usize, Move(_49), 51_usize, Move(_51), 3_usize, Move(_3), 38_usize, Move(_38)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_139 = dump_var(19_usize, 104_usize, Move(_104), 86_usize, Move(_86), 64_usize, Move(_64), 55_usize, Move(_55)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_139 = dump_var(19_usize, 95_usize, Move(_95), 60_usize, Move(_60), 34_usize, Move(_34), 46_usize, Move(_46)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_139 = dump_var(19_usize, 75_usize, Move(_75), 28_usize, Move(_28), 26_usize, Move(_26), 10_usize, Move(_10)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_139 = dump_var(19_usize, 12_usize, Move(_12), 44_usize, Move(_44), 90_usize, Move(_90), 19_usize, Move(_19)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_139 = dump_var(19_usize, 67_usize, Move(_67), 82_usize, Move(_82), 59_usize, Move(_59), 24_usize, Move(_24)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_139 = dump_var(19_usize, 17_usize, Move(_17), 35_usize, Move(_35), 114_usize, Move(_114), 18_usize, Move(_18)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_139 = dump_var(19_usize, 123_usize, Move(_123), 32_usize, Move(_32), 98_usize, Move(_98), 29_usize, Move(_29)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_139 = dump_var(19_usize, 68_usize, Move(_68), 81_usize, Move(_81), 76_usize, Move(_76), 25_usize, Move(_25)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn20(mut _1: Adt30) -> *mut *const *mut i8 {
mir! {
type RET = *mut *const *mut i8;
let _2: &'static f64;
let _3: [i8; 3];
let _4: ((u8, Adt20, i16), *mut u128);
let _5: isize;
let _6: f64;
let _7: i128;
let _8: [u16; 8];
let _9: bool;
let _10: Adt43;
let _11: (u16, (i16, isize, i16));
let _12: isize;
let _13: (i64, Adt30);
let _14: i128;
let _15: i32;
let _16: u16;
let _17: ([isize; 3], i8);
let _18: *const i32;
let _19: (u16, (i16, isize, i16));
let _20: [i128; 7];
let _21: isize;
let _22: i64;
let _23: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _24: (f32, [bool; 5], u128, i8);
let _25: u16;
let _26: ([i32; 4],);
let _27: (([i32; 4],),);
let _28: isize;
let _29: [i8; 3];
let _30: (*const u8, i16);
let _31: i32;
let _32: u16;
let _33: u8;
let _34: (i64, Adt30);
let _35: (u8, Adt20, i16);
let _36: Adt43;
let _37: (*const u8, i16);
let _38: Adt29;
let _39: isize;
let _40: bool;
let _41: &'static u64;
let _42: isize;
let _43: [i8; 2];
let _44: f64;
let _45: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _46: *mut [u64; 3];
let _47: bool;
let _48: isize;
let _49: Adt20;
let _50: &'static *const *mut i8;
let _51: isize;
let _52: i32;
let _53: isize;
let _54: f32;
let _55: f32;
let _56: (f32, [bool; 5], u128, i8);
let _57: (i64, Adt30);
let _58: &'static u64;
let _59: [bool; 5];
let _60: [i32; 4];
let _61: Adt76;
let _62: [i8; 3];
let _63: (i16, isize, i16);
let _64: u128;
let _65: f32;
let _66: u128;
let _67: *const *mut i8;
let _68: [u128; 8];
let _69: *const ((&'static i16, u16, char, i64), u32, u64, f64);
let _70: &'static *const *mut i8;
let _71: &'static u128;
let _72: (*const u8, i16);
let _73: f32;
let _74: i8;
let _75: (i16, isize, i16);
let _76: u32;
let _77: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _78: (&'static i16, u16, char, i64);
let _79: i128;
let _80: *const *mut i8;
let _81: isize;
let _82: (f32, [bool; 5], u128, i8);
let _83: (f32, [bool; 5], u128, i8);
let _84: &'static i16;
let _85: f64;
let _86: usize;
let _87: *mut i8;
let _88: isize;
let _89: [u128; 8];
let _90: Adt73;
let _91: char;
let _92: (u16, (i16, isize, i16));
let _93: u32;
let _94: f64;
let _95: f64;
let _96: [i8; 1];
let _97: [u64; 5];
let _98: (f32, [bool; 5], u128, i8);
let _99: (i64, Adt30);
let _100: *const Adt27;
let _101: f32;
let _102: i64;
let _103: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _104: ((u8, Adt20, i16), *mut u128);
let _105: bool;
let _106: char;
let _107: [u8; 6];
let _108: [i8; 3];
let _109: *mut [i8; 3];
let _110: u64;
let _111: f32;
let _112: u32;
let _113: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _114: [u64; 5];
let _115: isize;
let _116: [u64; 5];
let _117: ();
let _118: ();
{
place!(Field::<bool>(Variant(_1, 0), 0)) = true;
_1 = Adt30::Variant0 { fld0: false };
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
place!(Field::<bool>(Variant(_1, 0), 0)) = false;
place!(Field::<bool>(Variant(_1, 0), 0)) = false | true;
Goto(bb1)
}
bb1 = {
place!(Field::<bool>(Variant(_1, 0), 0)) = false & true;
place!(Field::<bool>(Variant(_1, 0), 0)) = true;
place!(Field::<bool>(Variant(_1, 0), 0)) = 1048708163_u32 < 4045664989_u32;
place!(Field::<bool>(Variant(_1, 0), 0)) = false;
place!(Field::<bool>(Variant(_1, 0), 0)) = 3444856353223322678_i64 < (-1222518089714469989_i64);
place!(Field::<bool>(Variant(_1, 0), 0)) = false;
place!(Field::<bool>(Variant(_1, 0), 0)) = !true;
_1 = Adt30::Variant0 { fld0: false };
_1 = Adt30::Variant0 { fld0: false };
place!(Field::<bool>(Variant(_1, 0), 0)) = 12598346908191140503815228669044410598_i128 < (-131716484213838339172956982522637390319_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = false;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
place!(Field::<bool>(Variant(_1, 0), 0)) = !true;
place!(Field::<bool>(Variant(_1, 0), 0)) = '\u{4c1ae}' < '\u{99ef3}';
_1 = Adt30::Variant0 { fld0: false };
_3 = [79_i8,(-67_i8),101_i8];
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_4.0.0 = !27_u8;
_5 = 9223372036854775807_isize << _4.0.0;
_5 = 38_isize >> _4.0.0;
_4.0.2 = (-111533943467787864384691026888164211399_i128) as i16;
_3 = [25_i8,120_i8,43_i8];
_4.0.0 = 140_u8 - 126_u8;
_4.0.2 = 745_i16 ^ (-21382_i16);
SetDiscriminant(_1, 2);
_3 = [16_i8,14_i8,(-84_i8)];
_3 = [41_i8,(-28_i8),(-78_i8)];
_4.0.0 = 213_u8;
Goto(bb2)
}
bb2 = {
place!(Field::<(i16, isize, i16)>(Variant(_1, 2), 1)).2 = 9439_u16 as i16;
_1 = Adt30::Variant0 { fld0: true };
_7 = _4.0.0 as i128;
_6 = (-2029688219_i32) as f64;
_4.0.2 = 9445_i16 >> _5;
place!(Field::<bool>(Variant(_1, 0), 0)) = _6 != _6;
SetDiscriminant(_1, 0);
_5 = (-9223372036854775808_isize) - (-61_isize);
_7 = 89382403688351364457501394557179484239_i128;
place!(Field::<bool>(Variant(_1, 0), 0)) = _7 > _7;
_6 = 3353539762_u32 as f64;
_2 = &_6;
Call(place!(Field::<bool>(Variant(_1, 0), 0)) = fn21(Move(_2), _7, _4.0.2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4.0.0 = 6712955495133204860_i64 as u8;
_4.0.2 = -10882_i16;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_1 = Adt30::Variant0 { fld0: false };
_8 = [51575_u16,35772_u16,27798_u16,37678_u16,34525_u16,24276_u16,5692_u16,1150_u16];
_2 = &_6;
_7 = (-152157109362745601450915208232027587916_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = _4.0.2 <= _4.0.2;
_9 = !Field::<bool>(Variant(_1, 0), 0);
_7 = 152786469934630591207959645755595453832_i128 & (-151889614291804005924358931080831548465_i128);
Goto(bb4)
}
bb4 = {
_11.1.1 = _5;
_11.0 = !46020_u16;
_11.1.0 = _4.0.2;
_13 = ((-1878333017864944608_i64), Move(_1));
_11.1.2 = _11.1.0 + _11.1.0;
_12 = _11.1.1 >> _7;
_12 = _5;
_14 = _7 + _7;
_9 = Field::<bool>(Variant(_13.1, 0), 0);
_11.1.0 = _11.1.2;
SetDiscriminant(_13.1, 2);
_12 = _11.1.1 - _11.1.1;
_6 = (-100_i8) as f64;
_4.0.0 = 211_u8;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).1 = _5 >> _12;
_14 = _7 ^ _7;
_4.0.2 = _11.1.2;
_15 = (-1935737165_i32);
_6 = 85_i8 as f64;
_2 = &_6;
Call(place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = core::intrinsics::bswap(_11.1.0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _11.1.0 << _12;
_17.0 = [Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1,_5,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 4082859689509005534_u64 - 17507575352069693333_u64;
_4.0.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_11.1.1 = Field::<u64>(Variant(_13.1, 2), 0) as isize;
_19.0 = _11.0;
_19.0 = _11.0 & _11.0;
_18 = core::ptr::addr_of!(_15);
_16 = !_19.0;
_19.1.2 = _4.0.0 as i16;
_19.1.0 = !_4.0.2;
Call(_11.1.1 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = [_16,_11.0,_16,_16,_19.0,_16,_16,_19.0];
place!(Field::<i128>(Variant(_13.1, 2), 3)) = _14 ^ _7;
_17.1 = 30_i8;
_11.1.1 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_11.1 = (_4.0.2, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_20 = [Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3)];
_2 = &_6;
_17.0 = [_5,_11.1.1,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)) = (_4.0.2, _11.1.1, _19.1.0);
_5 = _19.0 as isize;
_6 = _17.1 as f64;
_11.0 = _19.0;
_20 = [_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),_7];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 13352099489595297184976827468469774765_u128 as u64;
_19.1.2 = 9931718492063501456_usize as i16;
Goto(bb7)
}
bb7 = {
place!(Field::<i128>(Variant(_13.1, 2), 3)) = 1323329685_u32 as i128;
_23.0 = &_4.0.0;
_19 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.2.0 = 84982114_u32 as u8;
_4.0.0 = !_23.2.0;
_11 = (_19.0, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.0 = &_4.0.0;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _19.1.2;
_22 = -_13.0;
_22 = -_13.0;
_11.1.2 = !_19.1.2;
_21 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_15 = -1209617857_i32;
_9 = _11.1.1 <= _21;
_11 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_11.1.2 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_23.3 = !_23.2.0;
_17.0 = [_19.1.1,_19.1.1,_19.1.1];
_4.1 = core::ptr::addr_of_mut!(_24.2);
_11.1.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).2;
_12 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1 - Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
match _17.1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
30 => bb13,
_ => bb12
}
}
bb8 = {
_8 = [_16,_11.0,_16,_16,_19.0,_16,_16,_19.0];
place!(Field::<i128>(Variant(_13.1, 2), 3)) = _14 ^ _7;
_17.1 = 30_i8;
_11.1.1 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_11.1 = (_4.0.2, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_20 = [Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3)];
_2 = &_6;
_17.0 = [_5,_11.1.1,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)) = (_4.0.2, _11.1.1, _19.1.0);
_5 = _19.0 as isize;
_6 = _17.1 as f64;
_11.0 = _19.0;
_20 = [_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),_7];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 13352099489595297184976827468469774765_u128 as u64;
_19.1.2 = 9931718492063501456_usize as i16;
Goto(bb7)
}
bb9 = {
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _11.1.0 << _12;
_17.0 = [Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1,_5,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 4082859689509005534_u64 - 17507575352069693333_u64;
_4.0.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_11.1.1 = Field::<u64>(Variant(_13.1, 2), 0) as isize;
_19.0 = _11.0;
_19.0 = _11.0 & _11.0;
_18 = core::ptr::addr_of!(_15);
_16 = !_19.0;
_19.1.2 = _4.0.0 as i16;
_19.1.0 = !_4.0.2;
Call(_11.1.1 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb10 = {
_11.1.1 = _5;
_11.0 = !46020_u16;
_11.1.0 = _4.0.2;
_13 = ((-1878333017864944608_i64), Move(_1));
_11.1.2 = _11.1.0 + _11.1.0;
_12 = _11.1.1 >> _7;
_12 = _5;
_14 = _7 + _7;
_9 = Field::<bool>(Variant(_13.1, 0), 0);
_11.1.0 = _11.1.2;
SetDiscriminant(_13.1, 2);
_12 = _11.1.1 - _11.1.1;
_6 = (-100_i8) as f64;
_4.0.0 = 211_u8;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).1 = _5 >> _12;
_14 = _7 ^ _7;
_4.0.2 = _11.1.2;
_15 = (-1935737165_i32);
_6 = 85_i8 as f64;
_2 = &_6;
Call(place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = core::intrinsics::bswap(_11.1.0), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_4.0.0 = 6712955495133204860_i64 as u8;
_4.0.2 = -10882_i16;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_1 = Adt30::Variant0 { fld0: false };
_8 = [51575_u16,35772_u16,27798_u16,37678_u16,34525_u16,24276_u16,5692_u16,1150_u16];
_2 = &_6;
_7 = (-152157109362745601450915208232027587916_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = _4.0.2 <= _4.0.2;
_9 = !Field::<bool>(Variant(_1, 0), 0);
_7 = 152786469934630591207959645755595453832_i128 & (-151889614291804005924358931080831548465_i128);
Goto(bb4)
}
bb12 = {
place!(Field::<(i16, isize, i16)>(Variant(_1, 2), 1)).2 = 9439_u16 as i16;
_1 = Adt30::Variant0 { fld0: true };
_7 = _4.0.0 as i128;
_6 = (-2029688219_i32) as f64;
_4.0.2 = 9445_i16 >> _5;
place!(Field::<bool>(Variant(_1, 0), 0)) = _6 != _6;
SetDiscriminant(_1, 0);
_5 = (-9223372036854775808_isize) - (-61_isize);
_7 = 89382403688351364457501394557179484239_i128;
place!(Field::<bool>(Variant(_1, 0), 0)) = _7 > _7;
_6 = 3353539762_u32 as f64;
_2 = &_6;
Call(place!(Field::<bool>(Variant(_1, 0), 0)) = fn21(Move(_2), _7, _4.0.2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_19.1 = (_4.0.2, _11.1.1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_25 = _16;
_11.1.1 = -_12;
_18 = core::ptr::addr_of!((*_18));
_24.1 = [_9,_9,_9,_9,_9];
_13.0 = (*_18) as i64;
_19 = (_16, _11.1);
_5 = !_12;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)) = (_19.1.0, _11.1.1, _11.1.0);
_3 = [_17.1,_17.1,_17.1];
_28 = -_12;
_23.1 = [_9,_9,_9,_9,_9];
_14 = _25 as i128;
Goto(bb14)
}
bb14 = {
(*_18) = 3386416657_u32 as i32;
place!(Field::<u16>(Variant(_13.1, 2), 2)) = _16;
_22 = _9 as i64;
_3 = [_17.1,_17.1,_17.1];
_19.1 = (Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0, _11.1.1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_23.1 = _24.1;
Goto(bb15)
}
bb15 = {
_20 = [_7,_14,_14,_14,_7,_14,Field::<i128>(Variant(_13.1, 2), 3)];
_24.1 = [_9,_9,_9,_9,_9];
_24.1 = [_9,_9,_9,_9,_9];
_24.1 = [_9,_9,_9,_9,_9];
match _17.1 {
0 => bb8,
1 => bb16,
2 => bb17,
30 => bb19,
_ => bb18
}
}
bb16 = {
_4.0.0 = 6712955495133204860_i64 as u8;
_4.0.2 = -10882_i16;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_1 = Adt30::Variant0 { fld0: false };
_8 = [51575_u16,35772_u16,27798_u16,37678_u16,34525_u16,24276_u16,5692_u16,1150_u16];
_2 = &_6;
_7 = (-152157109362745601450915208232027587916_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = _4.0.2 <= _4.0.2;
_9 = !Field::<bool>(Variant(_1, 0), 0);
_7 = 152786469934630591207959645755595453832_i128 & (-151889614291804005924358931080831548465_i128);
Goto(bb4)
}
bb17 = {
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _11.1.0 << _12;
_17.0 = [Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1,_5,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 4082859689509005534_u64 - 17507575352069693333_u64;
_4.0.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_11.1.1 = Field::<u64>(Variant(_13.1, 2), 0) as isize;
_19.0 = _11.0;
_19.0 = _11.0 & _11.0;
_18 = core::ptr::addr_of!(_15);
_16 = !_19.0;
_19.1.2 = _4.0.0 as i16;
_19.1.0 = !_4.0.2;
Call(_11.1.1 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb18 = {
place!(Field::<(i16, isize, i16)>(Variant(_1, 2), 1)).2 = 9439_u16 as i16;
_1 = Adt30::Variant0 { fld0: true };
_7 = _4.0.0 as i128;
_6 = (-2029688219_i32) as f64;
_4.0.2 = 9445_i16 >> _5;
place!(Field::<bool>(Variant(_1, 0), 0)) = _6 != _6;
SetDiscriminant(_1, 0);
_5 = (-9223372036854775808_isize) - (-61_isize);
_7 = 89382403688351364457501394557179484239_i128;
place!(Field::<bool>(Variant(_1, 0), 0)) = _7 > _7;
_6 = 3353539762_u32 as f64;
_2 = &_6;
Call(place!(Field::<bool>(Variant(_1, 0), 0)) = fn21(Move(_2), _7, _4.0.2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb19 = {
_4.0.2 = _11.1.2 - Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).2;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)) = _11.1;
_30.1 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_23.3 = _23.2.0;
_13.0 = _17.1 as i64;
_34.0 = _9 as i64;
place!(Field::<u16>(Variant(_13.1, 2), 2)) = _16;
_2 = &_6;
_34.1 = Adt30::Variant0 { fld0: _9 };
match _17.1 {
0 => bb17,
1 => bb2,
2 => bb13,
3 => bb16,
4 => bb20,
5 => bb21,
30 => bb23,
_ => bb22
}
}
bb20 = {
_11.1.1 = _5;
_11.0 = !46020_u16;
_11.1.0 = _4.0.2;
_13 = ((-1878333017864944608_i64), Move(_1));
_11.1.2 = _11.1.0 + _11.1.0;
_12 = _11.1.1 >> _7;
_12 = _5;
_14 = _7 + _7;
_9 = Field::<bool>(Variant(_13.1, 0), 0);
_11.1.0 = _11.1.2;
SetDiscriminant(_13.1, 2);
_12 = _11.1.1 - _11.1.1;
_6 = (-100_i8) as f64;
_4.0.0 = 211_u8;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).1 = _5 >> _12;
_14 = _7 ^ _7;
_4.0.2 = _11.1.2;
_15 = (-1935737165_i32);
_6 = 85_i8 as f64;
_2 = &_6;
Call(place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = core::intrinsics::bswap(_11.1.0), ReturnTo(bb5), UnwindUnreachable())
}
bb21 = {
_8 = [_16,_11.0,_16,_16,_19.0,_16,_16,_19.0];
place!(Field::<i128>(Variant(_13.1, 2), 3)) = _14 ^ _7;
_17.1 = 30_i8;
_11.1.1 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_11.1 = (_4.0.2, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_20 = [Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3)];
_2 = &_6;
_17.0 = [_5,_11.1.1,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)) = (_4.0.2, _11.1.1, _19.1.0);
_5 = _19.0 as isize;
_6 = _17.1 as f64;
_11.0 = _19.0;
_20 = [_14,Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),Field::<i128>(Variant(_13.1, 2), 3),_14,Field::<i128>(Variant(_13.1, 2), 3),_7];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 13352099489595297184976827468469774765_u128 as u64;
_19.1.2 = 9931718492063501456_usize as i16;
Goto(bb7)
}
bb22 = {
(*_18) = 3386416657_u32 as i32;
place!(Field::<u16>(Variant(_13.1, 2), 2)) = _16;
_22 = _9 as i64;
_3 = [_17.1,_17.1,_17.1];
_19.1 = (Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0, _11.1.1, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0);
_23.1 = _24.1;
Goto(bb15)
}
bb23 = {
_15 = 41662702_i32;
_31 = _34.0 as i32;
_28 = !_12;
_23.3 = _4.0.0 + _23.2.0;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).2 = !Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_2 = &(*_2);
_24.2 = '\u{703c3}' as u128;
_16 = _19.0;
_13.0 = _34.0;
_15 = _31 ^ _31;
_32 = _16;
_13.1 = Adt30::Variant0 { fld0: Field::<bool>(Variant(_34.1, 0), 0) };
_34 = (_13.0, Move(_13.1));
_4.0.0 = !_23.3;
_8 = [_11.0,_19.0,_11.0,_32,_25,_11.0,_32,_32];
_1 = Adt30::Variant0 { fld0: _9 };
_13.1 = Move(_34.1);
match _17.1 {
0 => bb14,
1 => bb21,
2 => bb11,
30 => bb24,
_ => bb9
}
}
bb24 = {
_23.2.0 = !_23.3;
_11 = (_19.0, _19.1);
_4.0.2 = Field::<bool>(Variant(_13.1, 0), 0) as i16;
Call(_21 = core::intrinsics::transmute(_19.1.1), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_24.0 = _25 as f32;
_26.0 = [(*_18),_15,_15,(*_18)];
_29 = _3;
_24.2 = 273057601906795573877997491655307912877_u128;
_23.2.1 = Adt20::Variant1 { fld0: 11445168455994024332_u64,fld1: _24.2,fld2: _23.3,fld3: _24.0,fld4: 3619930565_u32,fld5: _15,fld6: _22 };
place!(Field::<u64>(Variant(_23.2.1, 1), 0)) = 2765683286_u32 as u64;
_23.0 = &_4.0.0;
_13 = (_34.0, Move(_1));
_11 = (_16, _19.1);
SetDiscriminant(_13.1, 1);
_23.2.1 = Adt20::Variant1 { fld0: 11521250720721215759_u64,fld1: _24.2,fld2: _4.0.0,fld3: _24.0,fld4: 1178851329_u32,fld5: _15,fld6: _13.0 };
_11.1.0 = _4.0.2 - _30.1;
_11.1.2 = _4.0.2 >> (*_18);
_27 = (_26,);
place!(Field::<u16>(Variant(_13.1, 1), 1)) = _25 & _19.0;
Goto(bb26)
}
bb26 = {
place!(Field::<i32>(Variant(_13.1, 1), 0)) = _9 as i32;
place!(Field::<i32>(Variant(_23.2.1, 1), 5)) = (*_18);
_12 = _21;
_6 = _23.3 as f64;
_11 = (Field::<u16>(Variant(_13.1, 1), 1), _19.1);
_24.3 = _15 as i8;
_42 = _24.2 as isize;
_4.0.2 = _19.1.0 + _11.1.2;
_40 = _9 | _9;
_27.0 = (_26.0,);
_34.0 = -Field::<i64>(Variant(_23.2.1, 1), 6);
_40 = _24.2 > Field::<u128>(Variant(_23.2.1, 1), 1);
place!(Field::<u32>(Variant(_23.2.1, 1), 4)) = !2710493822_u32;
_27.0.0 = [_15,(*_18),(*_18),_31];
_43 = [_24.3,_24.3];
_1 = Adt30::Variant2 { fld0: 11025074383095234174_u64,fld1: _11.1,fld2: Field::<u16>(Variant(_13.1, 1), 1),fld3: _7 };
Goto(bb27)
}
bb27 = {
_1 = Adt30::Variant0 { fld0: _9 };
_30.1 = Field::<i64>(Variant(_23.2.1, 1), 6) as i16;
_11 = _19;
_30.0 = core::ptr::addr_of!(_33);
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = _23.3 - _4.0.0;
place!(Field::<u128>(Variant(_23.2.1, 1), 1)) = _24.2;
_27 = (_26,);
_32 = Field::<bool>(Variant(_1, 0), 0) as u16;
_34.1 = Move(_1);
_33 = _23.2.0;
SetDiscriminant(_34.1, 0);
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = _32 as u8;
_11.1.2 = _19.1.2;
_10 = Adt43::Variant2 { fld0: (*_18),fld1: _19.1.2,fld2: Move(_30) };
_35.1 = Adt20::Variant1 { fld0: 696198848245214165_u64,fld1: _24.2,fld2: Field::<u8>(Variant(_23.2.1, 1), 2),fld3: Field::<f32>(Variant(_23.2.1, 1), 3),fld4: Field::<u32>(Variant(_23.2.1, 1), 4),fld5: (*_18),fld6: Field::<i64>(Variant(_23.2.1, 1), 6) };
_23.2.2 = _11.1.0 << Field::<i32>(Variant(_23.2.1, 1), 5);
_34.0 = '\u{77e1d}' as i64;
_19.1.2 = Field::<u32>(Variant(_35.1, 1), 4) as i16;
place!(Field::<u64>(Variant(_35.1, 1), 0)) = !6389757474115912655_u64;
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = !Field::<u8>(Variant(_35.1, 1), 2);
_23.2 = (Field::<u8>(Variant(_35.1, 1), 2), Move(_35.1), Field::<(*const u8, i16)>(Variant(_10, 2), 2).1);
_37.1 = _23.2.2 << _24.3;
_20 = [_7,_7,_7,_7,_7,_7,_14];
_35 = (_23.2.0, Move(_23.2.1), _37.1);
_7 = _14;
match Field::<u128>(Variant(_35.1, 1), 1) {
0 => bb23,
1 => bb13,
2 => bb11,
3 => bb25,
4 => bb21,
5 => bb10,
273057601906795573877997491655307912877 => bb28,
_ => bb12
}
}
bb28 = {
_4.0.0 = _11.1.2 as u8;
_11.1.1 = _28 & _12;
place!(Field::<*const u8>(Variant(_13.1, 1), 2)) = core::ptr::addr_of!(_35.0);
_24.3 = _6 as i8;
_4.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_35.1, 1), 0),fld1: Field::<u128>(Variant(_35.1, 1), 1),fld2: _23.2.0,fld3: _24.0,fld4: Field::<u32>(Variant(_35.1, 1), 4),fld5: (*_18),fld6: _22 };
_28 = _19.1.1;
_6 = Field::<i32>(Variant(_13.1, 1), 0) as f64;
_34 = (_22, Move(_13.1));
_21 = _12 - _12;
_21 = !_28;
_35.0 = _23.2.0 & _4.0.0;
_1 = Move(_34.1);
_56.0 = -Field::<f32>(Variant(_35.1, 1), 3);
_57 = (_13.0, Move(_1));
match _17.1 {
0 => bb13,
1 => bb10,
2 => bb8,
30 => bb29,
_ => bb23
}
}
bb29 = {
SetDiscriminant(_4.0.1, 1);
_55 = -_56.0;
SetDiscriminant(_35.1, 1);
_13.1 = Move(_57.1);
_30.1 = _37.1 >> _31;
_34.0 = _22;
_56.1 = [_9,_40,_9,_9,_9];
place!(Field::<i64>(Variant(_35.1, 1), 6)) = -_13.0;
_56.2 = _24.2 - _24.2;
_42 = _12 & _28;
_19.1.0 = Field::<(*const u8, i16)>(Variant(_10, 2), 2).1;
place!(Field::<u64>(Variant(_4.0.1, 1), 0)) = 17373526309220416298_u64;
_1 = Adt30::Variant0 { fld0: _9 };
place!(Field::<i32>(Variant(_13.1, 1), 0)) = -_31;
_41 = &place!(Field::<u64>(Variant(_4.0.1, 1), 0));
place!(Field::<u64>(Variant(_35.1, 1), 0)) = Field::<u64>(Variant(_4.0.1, 1), 0);
_27 = (_26,);
_55 = _7 as f32;
_57.0 = _22;
match (*_41) {
0 => bb27,
1 => bb2,
2 => bb7,
3 => bb19,
4 => bb17,
5 => bb12,
17373526309220416298 => bb31,
_ => bb30
}
}
bb30 = {
place!(Field::<i32>(Variant(_13.1, 1), 0)) = _9 as i32;
place!(Field::<i32>(Variant(_23.2.1, 1), 5)) = (*_18);
_12 = _21;
_6 = _23.3 as f64;
_11 = (Field::<u16>(Variant(_13.1, 1), 1), _19.1);
_24.3 = _15 as i8;
_42 = _24.2 as isize;
_4.0.2 = _19.1.0 + _11.1.2;
_40 = _9 | _9;
_27.0 = (_26.0,);
_34.0 = -Field::<i64>(Variant(_23.2.1, 1), 6);
_40 = _24.2 > Field::<u128>(Variant(_23.2.1, 1), 1);
place!(Field::<u32>(Variant(_23.2.1, 1), 4)) = !2710493822_u32;
_27.0.0 = [_15,(*_18),(*_18),_31];
_43 = [_24.3,_24.3];
_1 = Adt30::Variant2 { fld0: 11025074383095234174_u64,fld1: _11.1,fld2: Field::<u16>(Variant(_13.1, 1), 1),fld3: _7 };
Goto(bb27)
}
bb31 = {
_7 = !_14;
_32 = _56.2 as u16;
place!(Field::<u128>(Variant(_4.0.1, 1), 1)) = !_56.2;
_57.1 = Adt30::Variant2 { fld0: (*_41),fld1: _11.1,fld2: Field::<u16>(Variant(_13.1, 1), 1),fld3: _7 };
_63.2 = -_37.1;
_35.0 = !_23.2.0;
place!(Field::<u128>(Variant(_35.1, 1), 1)) = Field::<u128>(Variant(_4.0.1, 1), 1) % _24.2;
_4.0.0 = _11.1.2 as u8;
_51 = !_28;
_48 = !_12;
place!(Field::<i32>(Variant(_4.0.1, 1), 5)) = -_15;
match Field::<u64>(Variant(_57.1, 2), 0) {
0 => bb1,
1 => bb2,
2 => bb13,
3 => bb25,
17373526309220416298 => bb32,
_ => bb5
}
}
bb32 = {
_37.1 = Field::<(i16, isize, i16)>(Variant(_57.1, 2), 1).1 as i16;
Goto(bb33)
}
bb33 = {
_36 = Move(_10);
_4.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_57.1, 2), 0),fld1: _56.2,fld2: _23.3,fld3: _24.0,fld4: 2745965748_u32,fld5: (*_18),fld6: Field::<i64>(Variant(_35.1, 1), 6) };
_11.1.0 = _35.2;
_21 = _28 * _12;
SetDiscriminant(_36, 1);
_30.0 = core::ptr::addr_of!(_23.2.0);
_63.0 = _30.1 + _37.1;
_47 = Field::<bool>(Variant(_1, 0), 0);
(*_18) = '\u{d54e1}' as i32;
_37 = (Move(_30.0), _35.2);
_56.1 = [_47,_47,_9,Field::<bool>(Variant(_1, 0), 0),_9];
place!(Field::<u64>(Variant(_35.1, 1), 0)) = Field::<u64>(Variant(_4.0.1, 1), 0) ^ Field::<u64>(Variant(_4.0.1, 1), 0);
_21 = _19.1.1;
SetDiscriminant(_13.1, 1);
_30.0 = Move(_37.0);
_63.2 = !_37.1;
Goto(bb34)
}
bb34 = {
_37.0 = Move(_30.0);
_39 = _11.1.1;
RET = core::ptr::addr_of_mut!(_67);
_24.2 = Field::<u128>(Variant(_4.0.1, 1), 1) | _56.2;
_22 = _57.0;
_24 = (Field::<f32>(Variant(_4.0.1, 1), 3), _23.1, Field::<u128>(Variant(_4.0.1, 1), 1), _17.1);
(*_18) = !Field::<i32>(Variant(_4.0.1, 1), 5);
_59 = [_47,_9,_9,_9,Field::<bool>(Variant(_1, 0), 0)];
match _24.3 {
0 => bb35,
1 => bb36,
2 => bb37,
30 => bb39,
_ => bb38
}
}
bb35 = {
_4.0.0 = 6712955495133204860_i64 as u8;
_4.0.2 = -10882_i16;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_1 = Adt30::Variant0 { fld0: false };
_8 = [51575_u16,35772_u16,27798_u16,37678_u16,34525_u16,24276_u16,5692_u16,1150_u16];
_2 = &_6;
_7 = (-152157109362745601450915208232027587916_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = _4.0.2 <= _4.0.2;
_9 = !Field::<bool>(Variant(_1, 0), 0);
_7 = 152786469934630591207959645755595453832_i128 & (-151889614291804005924358931080831548465_i128);
Goto(bb4)
}
bb36 = {
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _11.1.0 << _12;
_17.0 = [Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1,_5,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 4082859689509005534_u64 - 17507575352069693333_u64;
_4.0.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_11.1.1 = Field::<u64>(Variant(_13.1, 2), 0) as isize;
_19.0 = _11.0;
_19.0 = _11.0 & _11.0;
_18 = core::ptr::addr_of!(_15);
_16 = !_19.0;
_19.1.2 = _4.0.0 as i16;
_19.1.0 = !_4.0.2;
Call(_11.1.1 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb37 = {
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _11.1.0 << _12;
_17.0 = [Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1,_5,Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1];
place!(Field::<u64>(Variant(_13.1, 2), 0)) = 4082859689509005534_u64 - 17507575352069693333_u64;
_4.0.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_11.1.1 = Field::<u64>(Variant(_13.1, 2), 0) as isize;
_19.0 = _11.0;
_19.0 = _11.0 & _11.0;
_18 = core::ptr::addr_of!(_15);
_16 = !_19.0;
_19.1.2 = _4.0.0 as i16;
_19.1.0 = !_4.0.2;
Call(_11.1.1 = core::intrinsics::transmute(_12), ReturnTo(bb6), UnwindUnreachable())
}
bb38 = {
_24.0 = _25 as f32;
_26.0 = [(*_18),_15,_15,(*_18)];
_29 = _3;
_24.2 = 273057601906795573877997491655307912877_u128;
_23.2.1 = Adt20::Variant1 { fld0: 11445168455994024332_u64,fld1: _24.2,fld2: _23.3,fld3: _24.0,fld4: 3619930565_u32,fld5: _15,fld6: _22 };
place!(Field::<u64>(Variant(_23.2.1, 1), 0)) = 2765683286_u32 as u64;
_23.0 = &_4.0.0;
_13 = (_34.0, Move(_1));
_11 = (_16, _19.1);
SetDiscriminant(_13.1, 1);
_23.2.1 = Adt20::Variant1 { fld0: 11521250720721215759_u64,fld1: _24.2,fld2: _4.0.0,fld3: _24.0,fld4: 1178851329_u32,fld5: _15,fld6: _13.0 };
_11.1.0 = _4.0.2 - _30.1;
_11.1.2 = _4.0.2 >> (*_18);
_27 = (_26,);
place!(Field::<u16>(Variant(_13.1, 1), 1)) = _25 & _19.0;
Goto(bb26)
}
bb39 = {
place!(Field::<(i16, isize, i16)>(Variant(_57.1, 2), 1)).1 = _24.0 as isize;
_43 = [_24.3,_17.1];
place!(Field::<(i16, isize, i16)>(Variant(_57.1, 2), 1)) = (_63.0, _11.1.1, _63.0);
place!(Field::<i32>(Variant(_13.1, 1), 0)) = (*_18) & (*_18);
_58 = &place!(Field::<u64>(Variant(_57.1, 2), 0));
_15 = _24.3 as i32;
place!(Field::<i32>(Variant(_35.1, 1), 5)) = Field::<i32>(Variant(_13.1, 1), 0);
_60 = [Field::<i32>(Variant(_35.1, 1), 5),_31,Field::<i32>(Variant(_35.1, 1), 5),Field::<i32>(Variant(_13.1, 1), 0)];
place!(Field::<u128>(Variant(_35.1, 1), 1)) = _24.2;
_52 = _24.3 as i32;
_48 = _19.0 as isize;
place!(Field::<u128>(Variant(_35.1, 1), 1)) = _56.2;
_38 = Adt29::Variant1 { fld0: Field::<i64>(Variant(_35.1, 1), 6),fld1: _11.0,fld2: Move(_37),fld3: Field::<i32>(Variant(_13.1, 1), 0) };
_30.1 = Field::<(i16, isize, i16)>(Variant(_57.1, 2), 1).2;
SetDiscriminant(_57.1, 0);
_66 = !_24.2;
SetDiscriminant(_1, 0);
_20 = [_7,_14,_14,_7,_7,_7,_7];
_72.0 = core::ptr::addr_of!(_35.0);
_4.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_35.1, 1), 0),fld1: _56.2,fld2: _35.0,fld3: _55,fld4: 1436444326_u32,fld5: Field::<i32>(Variant(_38, 1), 3),fld6: Field::<i64>(Variant(_35.1, 1), 6) };
Goto(bb40)
}
bb40 = {
_40 = _47;
SetDiscriminant(_38, 2);
_13.0 = !Field::<i64>(Variant(_4.0.1, 1), 6);
_73 = _55 + _56.0;
_57.1 = Adt30::Variant1 { fld0: Field::<i32>(Variant(_35.1, 1), 5),fld1: _19.0,fld2: Move(_72.0) };
place!(Field::<u8>(Variant(_35.1, 1), 2)) = !Field::<u8>(Variant(_4.0.1, 1), 2);
_37 = (Move(Field::<*const u8>(Variant(_57.1, 1), 2)), _30.1);
place!(Field::<u8>(Variant(_4.0.1, 1), 2)) = _35.0;
_72.0 = Move(_37.0);
_59 = [_9,_47,_9,_9,_9];
_13.1 = Adt30::Variant0 { fld0: _40 };
Goto(bb41)
}
bb41 = {
_4.0.2 = _19.1.0 + _30.1;
_15 = Field::<i32>(Variant(_57.1, 1), 0) * Field::<i32>(Variant(_57.1, 1), 0);
_11.1.1 = _21 & _42;
_5 = _51 & _21;
_13.1 = Adt30::Variant1 { fld0: (*_18),fld1: _11.0,fld2: Move(_72.0) };
place!(Field::<u8>(Variant(_4.0.1, 1), 2)) = _4.0.0 >> _63.0;
_23.1 = _59;
_78.1 = Field::<u8>(Variant(_4.0.1, 1), 2) as u16;
_30.1 = _23.2.2;
_49 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_4.0.1, 1), 0),fld1: _56.2,fld2: _23.2.0,fld3: _73,fld4: 515946913_u32,fld5: Field::<i32>(Variant(_13.1, 1), 0),fld6: _22 };
_74 = _7 as i8;
_75.1 = -_11.1.1;
_23.2.2 = _4.0.2 * _4.0.2;
_30.0 = Move(Field::<*const u8>(Variant(_13.1, 1), 2));
Goto(bb42)
}
bb42 = {
_11.0 = _78.1;
_23.3 = !Field::<u8>(Variant(_4.0.1, 1), 2);
_35.2 = _37.1;
_77.2.0 = Field::<u8>(Variant(_4.0.1, 1), 2);
place!(Field::<i16>(Variant(_38, 2), 4)) = _63.0 & _4.0.2;
_14 = _7 & _7;
RET = core::ptr::addr_of_mut!(_67);
place!(Field::<u64>(Variant(_49, 1), 0)) = Field::<u64>(Variant(_4.0.1, 1), 0) >> _15;
place!(Field::<i32>(Variant(_57.1, 1), 0)) = Field::<i64>(Variant(_4.0.1, 1), 6) as i32;
_37.1 = _24.2 as i16;
_19.1 = (Field::<i16>(Variant(_38, 2), 4), _21, _63.0);
place!(Field::<u128>(Variant(_38, 2), 1)) = Field::<u128>(Variant(_35.1, 1), 1) * Field::<u128>(Variant(_49, 1), 1);
_82 = _24;
_34.1 = Adt30::Variant0 { fld0: _47 };
SetDiscriminant(_34.1, 2);
place!(Field::<u128>(Variant(_4.0.1, 1), 1)) = Field::<i32>(Variant(_13.1, 1), 0) as u128;
_75.0 = _63.0;
_12 = _39;
_83.0 = 3936155897_u32 as f32;
_5 = _82.3 as isize;
_24.3 = !_74;
_63.1 = _75.1 | _75.1;
_84 = &_4.0.2;
match _82.3 {
0 => bb38,
1 => bb16,
2 => bb43,
30 => bb45,
_ => bb44
}
}
bb43 = {
place!(Field::<(i16, isize, i16)>(Variant(_1, 2), 1)).2 = 9439_u16 as i16;
_1 = Adt30::Variant0 { fld0: true };
_7 = _4.0.0 as i128;
_6 = (-2029688219_i32) as f64;
_4.0.2 = 9445_i16 >> _5;
place!(Field::<bool>(Variant(_1, 0), 0)) = _6 != _6;
SetDiscriminant(_1, 0);
_5 = (-9223372036854775808_isize) - (-61_isize);
_7 = 89382403688351364457501394557179484239_i128;
place!(Field::<bool>(Variant(_1, 0), 0)) = _7 > _7;
_6 = 3353539762_u32 as f64;
_2 = &_6;
Call(place!(Field::<bool>(Variant(_1, 0), 0)) = fn21(Move(_2), _7, _4.0.2, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb44 = {
_1 = Adt30::Variant0 { fld0: _9 };
_30.1 = Field::<i64>(Variant(_23.2.1, 1), 6) as i16;
_11 = _19;
_30.0 = core::ptr::addr_of!(_33);
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = _23.3 - _4.0.0;
place!(Field::<u128>(Variant(_23.2.1, 1), 1)) = _24.2;
_27 = (_26,);
_32 = Field::<bool>(Variant(_1, 0), 0) as u16;
_34.1 = Move(_1);
_33 = _23.2.0;
SetDiscriminant(_34.1, 0);
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = _32 as u8;
_11.1.2 = _19.1.2;
_10 = Adt43::Variant2 { fld0: (*_18),fld1: _19.1.2,fld2: Move(_30) };
_35.1 = Adt20::Variant1 { fld0: 696198848245214165_u64,fld1: _24.2,fld2: Field::<u8>(Variant(_23.2.1, 1), 2),fld3: Field::<f32>(Variant(_23.2.1, 1), 3),fld4: Field::<u32>(Variant(_23.2.1, 1), 4),fld5: (*_18),fld6: Field::<i64>(Variant(_23.2.1, 1), 6) };
_23.2.2 = _11.1.0 << Field::<i32>(Variant(_23.2.1, 1), 5);
_34.0 = '\u{77e1d}' as i64;
_19.1.2 = Field::<u32>(Variant(_35.1, 1), 4) as i16;
place!(Field::<u64>(Variant(_35.1, 1), 0)) = !6389757474115912655_u64;
place!(Field::<u8>(Variant(_23.2.1, 1), 2)) = !Field::<u8>(Variant(_35.1, 1), 2);
_23.2 = (Field::<u8>(Variant(_35.1, 1), 2), Move(_35.1), Field::<(*const u8, i16)>(Variant(_10, 2), 2).1);
_37.1 = _23.2.2 << _24.3;
_20 = [_7,_7,_7,_7,_7,_7,_14];
_35 = (_23.2.0, Move(_23.2.1), _37.1);
_7 = _14;
match Field::<u128>(Variant(_35.1, 1), 1) {
0 => bb23,
1 => bb13,
2 => bb11,
3 => bb25,
4 => bb21,
5 => bb10,
273057601906795573877997491655307912877 => bb28,
_ => bb12
}
}
bb45 = {
_22 = _34.0;
_16 = _11.0 << _11.0;
_85 = Field::<u8>(Variant(_4.0.1, 1), 2) as f64;
_60 = _26.0;
place!(Field::<i64>(Variant(_35.1, 1), 6)) = _34.0;
place!(Field::<u64>(Variant(_35.1, 1), 0)) = _40 as u64;
_62 = [_17.1,_82.3,_74];
_78.2 = '\u{8d825}';
_75 = (_19.1.2, _28, _19.1.2);
_86 = 3407726271916412304_usize - 0_usize;
_85 = _6;
place!(Field::<f32>(Variant(_49, 1), 3)) = _83.0 - _56.0;
_47 = _40;
place!(Field::<i64>(Variant(_4.0.1, 1), 6)) = _75.1 as i64;
_11 = _19;
place!(Field::<isize>(Variant(_38, 2), 2)) = 927528296_u32 as isize;
_11.1.1 = _12 * _21;
_11.1.1 = _63.1 * _63.1;
_4.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_35.1, 1), 1)));
place!(Field::<(i16, isize, i16)>(Variant(_34.1, 2), 1)).1 = _63.1 * _63.1;
_63.1 = !_11.1.1;
_51 = !_63.1;
_77.1 = [_40,_40,_40,_9,_9];
_18 = core::ptr::addr_of!(place!(Field::<i32>(Variant(_13.1, 1), 0)));
_39 = Field::<u64>(Variant(_49, 1), 0) as isize;
place!(Field::<u32>(Variant(_4.0.1, 1), 4)) = Field::<u64>(Variant(_49, 1), 0) as u32;
_81 = -_63.1;
_78 = (Move(_84), _16, '\u{e2a80}', _57.0);
Call(_30.1 = core::intrinsics::bswap(_23.2.2), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
_83.2 = !Field::<u128>(Variant(_4.0.1, 1), 1);
match _17.1 {
0 => bb24,
1 => bb2,
2 => bb34,
3 => bb25,
4 => bb21,
5 => bb47,
30 => bb49,
_ => bb48
}
}
bb47 = {
place!(Field::<i128>(Variant(_13.1, 2), 3)) = 1323329685_u32 as i128;
_23.0 = &_4.0.0;
_19 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.2.0 = 84982114_u32 as u8;
_4.0.0 = !_23.2.0;
_11 = (_19.0, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.0 = &_4.0.0;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _19.1.2;
_22 = -_13.0;
_22 = -_13.0;
_11.1.2 = !_19.1.2;
_21 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_15 = -1209617857_i32;
_9 = _11.1.1 <= _21;
_11 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_11.1.2 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_23.3 = !_23.2.0;
_17.0 = [_19.1.1,_19.1.1,_19.1.1];
_4.1 = core::ptr::addr_of_mut!(_24.2);
_11.1.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).2;
_12 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1 - Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
match _17.1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
30 => bb13,
_ => bb12
}
}
bb48 = {
_24.0 = _25 as f32;
_26.0 = [(*_18),_15,_15,(*_18)];
_29 = _3;
_24.2 = 273057601906795573877997491655307912877_u128;
_23.2.1 = Adt20::Variant1 { fld0: 11445168455994024332_u64,fld1: _24.2,fld2: _23.3,fld3: _24.0,fld4: 3619930565_u32,fld5: _15,fld6: _22 };
place!(Field::<u64>(Variant(_23.2.1, 1), 0)) = 2765683286_u32 as u64;
_23.0 = &_4.0.0;
_13 = (_34.0, Move(_1));
_11 = (_16, _19.1);
SetDiscriminant(_13.1, 1);
_23.2.1 = Adt20::Variant1 { fld0: 11521250720721215759_u64,fld1: _24.2,fld2: _4.0.0,fld3: _24.0,fld4: 1178851329_u32,fld5: _15,fld6: _13.0 };
_11.1.0 = _4.0.2 - _30.1;
_11.1.2 = _4.0.2 >> (*_18);
_27 = (_26,);
place!(Field::<u16>(Variant(_13.1, 1), 1)) = _25 & _19.0;
Goto(bb26)
}
bb49 = {
_24.2 = _83.2;
place!(Field::<i32>(Variant(_49, 1), 5)) = _14 as i32;
_24.2 = Field::<u128>(Variant(_49, 1), 1) | Field::<u128>(Variant(_4.0.1, 1), 1);
_86 = 4_usize;
place!(Field::<i128>(Variant(_34.1, 2), 3)) = _7 << _23.2.0;
_25 = _78.1;
place!(Field::<f32>(Variant(_35.1, 1), 3)) = -_83.0;
SetDiscriminant(_4.0.1, 1);
place!(Field::<i64>(Variant(_35.1, 1), 6)) = -_34.0;
_83.2 = _24.2 * _24.2;
_14 = !Field::<i128>(Variant(_34.1, 2), 3);
Goto(bb50)
}
bb50 = {
_57.0 = -Field::<i64>(Variant(_35.1, 1), 6);
_37 = (Move(_30.0), _19.1.0);
place!(Field::<bool>(Variant(_1, 0), 0)) = !_59[_86];
_62 = [_24.3,_74,_82.3];
_83.3 = _81 as i8;
place!(Field::<f32>(Variant(_49, 1), 3)) = _56.0;
_92.1 = (_19.1.2, _63.1, _11.1.0);
Goto(bb51)
}
bb51 = {
_24.1[_86] = !_23.1[_86];
place!(Field::<(i16, isize, i16)>(Variant(_34.1, 2), 1)) = _11.1;
_13.1 = Adt30::Variant0 { fld0: _24.1[_86] };
_79 = _9 as i128;
_92.0 = _78.1 & _78.1;
place!(Field::<i32>(Variant(_38, 2), 5)) = -_15;
place!(Field::<i32>(Variant(_4.0.1, 1), 5)) = Field::<i32>(Variant(_35.1, 1), 5) | Field::<i32>(Variant(_38, 2), 5);
place!(Field::<u8>(Variant(_4.0.1, 1), 2)) = !Field::<u8>(Variant(_49, 1), 2);
SetDiscriminant(_1, 0);
SetDiscriminant(_13.1, 2);
place!(Field::<u16>(Variant(_34.1, 2), 2)) = !_92.0;
place!(Field::<i32>(Variant(_35.1, 1), 5)) = _15;
_28 = _85 as isize;
_43 = [_83.3,_83.3];
place!(Field::<u32>(Variant(_4.0.1, 1), 4)) = !4111132987_u32;
_72.1 = -_4.0.2;
_13.1 = Adt30::Variant1 { fld0: Field::<i32>(Variant(_4.0.1, 1), 5),fld1: _78.1,fld2: Move(_37.0) };
_76 = Field::<u32>(Variant(_4.0.1, 1), 4);
SetDiscriminant(_13.1, 2);
_61 = Adt76::Variant0 { fld0: _19.1.0,fld1: _14,fld2: _85 };
_77.3 = !_23.3;
_57.0 = -_78.3;
_19.1 = (_75.2, _63.1, _92.1.0);
_25 = !_16;
match _82.3 {
0 => bb1,
1 => bb49,
2 => bb37,
3 => bb19,
4 => bb26,
5 => bb27,
30 => bb53,
_ => bb52
}
}
bb52 = {
_37.1 = Field::<(i16, isize, i16)>(Variant(_57.1, 2), 1).1 as i16;
Goto(bb33)
}
bb53 = {
_63 = (_75.2, _12, _19.1.2);
_67 = core::ptr::addr_of!(_87);
place!(Field::<(i16, isize, i16)>(Variant(_34.1, 2), 1)).1 = !_92.1.1;
_98.2 = _92.0 as u128;
_82.2 = Field::<u64>(Variant(_49, 1), 0) as u128;
_18 = core::ptr::addr_of!(_15);
_98.1[_86] = _56.1[_86];
_99.0 = _34.0;
place!(Field::<u8>(Variant(_49, 1), 2)) = !_23.3;
_97 = [Field::<u64>(Variant(_49, 1), 0),Field::<u64>(Variant(_49, 1), 0),Field::<u64>(Variant(_49, 1), 0),Field::<u64>(Variant(_49, 1), 0),Field::<u64>(Variant(_49, 1), 0)];
(*RET) = core::ptr::addr_of!((*_67));
_1 = Adt30::Variant0 { fld0: _82.1[_86] };
_89[_86] = !_83.2;
place!(Field::<i64>(Variant(_35.1, 1), 6)) = -_34.0;
place!(Field::<f32>(Variant(_36, 1), 0)) = _56.0 - _56.0;
_4.0.0 = _92.0 as u8;
_23.3 = _77.3;
place!(Field::<u32>(Variant(_49, 1), 4)) = !_76;
_98.3 = !_83.3;
_8[_86] = !_92.0;
_37.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_4.0.1, 1), 2)));
_24.3 = _98.3;
_99.0 = _22;
Goto(bb54)
}
bb54 = {
_23.2.2 = Field::<i64>(Variant(_35.1, 1), 6) as i16;
_4.0.1 = Move(_49);
_56 = _82;
_15 = -Field::<i32>(Variant(_35.1, 1), 5);
_44 = _6 - Field::<f64>(Variant(_61, 0), 2);
place!(Field::<u16>(Variant(_13.1, 2), 2)) = _78.2 as u16;
_50 = &_67;
_75.1 = _39 | _92.1.1;
place!(Field::<u32>(Variant(_4.0.1, 1), 4)) = !_76;
_30.0 = core::ptr::addr_of!(_103.3);
_72.0 = core::ptr::addr_of!(_104.0.0);
place!(Field::<u64>(Variant(_34.1, 2), 0)) = _97[_86];
_27 = (_26,);
_8 = [Field::<u16>(Variant(_13.1, 2), 2),_16,_92.0,Field::<u16>(Variant(_13.1, 2), 2),Field::<u16>(Variant(_13.1, 2), 2),Field::<u16>(Variant(_34.1, 2), 2),_92.0,_92.0];
_93 = _76 ^ Field::<u32>(Variant(_4.0.1, 1), 4);
_54 = -_83.0;
_80 = core::ptr::addr_of!((*_67));
match _56.3 {
0 => bb7,
30 => bb55,
_ => bb43
}
}
bb55 = {
_109 = core::ptr::addr_of_mut!(_62);
Goto(bb56)
}
bb56 = {
_20 = [_79,Field::<i128>(Variant(_61, 0), 1),_79,Field::<i128>(Variant(_34.1, 2), 3),Field::<i128>(Variant(_61, 0), 1),Field::<i128>(Variant(_34.1, 2), 3),_79];
place!(Field::<f32>(Variant(_4.0.1, 1), 3)) = -Field::<f32>(Variant(_35.1, 1), 3);
place!(Field::<*const u8>(Variant(_57.1, 1), 2)) = core::ptr::addr_of!(_77.3);
(*_18) = _86 as i32;
_53 = _19.1.1 << _98.3;
_77.2 = (_23.3, Move(_4.0.1), _35.2);
(*_67) = core::ptr::addr_of_mut!(_17.1);
SetDiscriminant(_57.1, 1);
_4.0 = Move(_77.2);
_103.0 = Move(_23.0);
_78.2 = '\u{1d153}';
place!(Field::<i32>(Variant(_38, 2), 5)) = _31 + Field::<i32>(Variant(_35.1, 1), 5);
_104 = (Move(_4.0), Move(_4.1));
_63.1 = -_53;
match (*_87) {
0 => bb57,
1 => bb58,
2 => bb59,
3 => bb60,
4 => bb61,
30 => bb63,
_ => bb62
}
}
bb57 = {
place!(Field::<i128>(Variant(_13.1, 2), 3)) = 1323329685_u32 as i128;
_23.0 = &_4.0.0;
_19 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.2.0 = 84982114_u32 as u8;
_4.0.0 = !_23.2.0;
_11 = (_19.0, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.0 = &_4.0.0;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _19.1.2;
_22 = -_13.0;
_22 = -_13.0;
_11.1.2 = !_19.1.2;
_21 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_15 = -1209617857_i32;
_9 = _11.1.1 <= _21;
_11 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_11.1.2 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_23.3 = !_23.2.0;
_17.0 = [_19.1.1,_19.1.1,_19.1.1];
_4.1 = core::ptr::addr_of_mut!(_24.2);
_11.1.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).2;
_12 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1 - Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
match _17.1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
30 => bb13,
_ => bb12
}
}
bb58 = {
_20 = [_7,_14,_14,_14,_7,_14,Field::<i128>(Variant(_13.1, 2), 3)];
_24.1 = [_9,_9,_9,_9,_9];
_24.1 = [_9,_9,_9,_9,_9];
_24.1 = [_9,_9,_9,_9,_9];
match _17.1 {
0 => bb8,
1 => bb16,
2 => bb17,
30 => bb19,
_ => bb18
}
}
bb59 = {
_4.0.0 = 6712955495133204860_i64 as u8;
_4.0.2 = -10882_i16;
place!(Field::<bool>(Variant(_1, 0), 0)) = !false;
_1 = Adt30::Variant0 { fld0: false };
_8 = [51575_u16,35772_u16,27798_u16,37678_u16,34525_u16,24276_u16,5692_u16,1150_u16];
_2 = &_6;
_7 = (-152157109362745601450915208232027587916_i128);
place!(Field::<bool>(Variant(_1, 0), 0)) = _4.0.2 <= _4.0.2;
_9 = !Field::<bool>(Variant(_1, 0), 0);
_7 = 152786469934630591207959645755595453832_i128 & (-151889614291804005924358931080831548465_i128);
Goto(bb4)
}
bb60 = {
_11.0 = _78.1;
_23.3 = !Field::<u8>(Variant(_4.0.1, 1), 2);
_35.2 = _37.1;
_77.2.0 = Field::<u8>(Variant(_4.0.1, 1), 2);
place!(Field::<i16>(Variant(_38, 2), 4)) = _63.0 & _4.0.2;
_14 = _7 & _7;
RET = core::ptr::addr_of_mut!(_67);
place!(Field::<u64>(Variant(_49, 1), 0)) = Field::<u64>(Variant(_4.0.1, 1), 0) >> _15;
place!(Field::<i32>(Variant(_57.1, 1), 0)) = Field::<i64>(Variant(_4.0.1, 1), 6) as i32;
_37.1 = _24.2 as i16;
_19.1 = (Field::<i16>(Variant(_38, 2), 4), _21, _63.0);
place!(Field::<u128>(Variant(_38, 2), 1)) = Field::<u128>(Variant(_35.1, 1), 1) * Field::<u128>(Variant(_49, 1), 1);
_82 = _24;
_34.1 = Adt30::Variant0 { fld0: _47 };
SetDiscriminant(_34.1, 2);
place!(Field::<u128>(Variant(_4.0.1, 1), 1)) = Field::<i32>(Variant(_13.1, 1), 0) as u128;
_75.0 = _63.0;
_12 = _39;
_83.0 = 3936155897_u32 as f32;
_5 = _82.3 as isize;
_24.3 = !_74;
_63.1 = _75.1 | _75.1;
_84 = &_4.0.2;
match _82.3 {
0 => bb38,
1 => bb16,
2 => bb43,
30 => bb45,
_ => bb44
}
}
bb61 = {
_11.1.1 = _5;
_11.0 = !46020_u16;
_11.1.0 = _4.0.2;
_13 = ((-1878333017864944608_i64), Move(_1));
_11.1.2 = _11.1.0 + _11.1.0;
_12 = _11.1.1 >> _7;
_12 = _5;
_14 = _7 + _7;
_9 = Field::<bool>(Variant(_13.1, 0), 0);
_11.1.0 = _11.1.2;
SetDiscriminant(_13.1, 2);
_12 = _11.1.1 - _11.1.1;
_6 = (-100_i8) as f64;
_4.0.0 = 211_u8;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).1 = _5 >> _12;
_14 = _7 ^ _7;
_4.0.2 = _11.1.2;
_15 = (-1935737165_i32);
_6 = 85_i8 as f64;
_2 = &_6;
Call(place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = core::intrinsics::bswap(_11.1.0), ReturnTo(bb5), UnwindUnreachable())
}
bb62 = {
place!(Field::<i128>(Variant(_13.1, 2), 3)) = 1323329685_u32 as i128;
_23.0 = &_4.0.0;
_19 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.2.0 = 84982114_u32 as u8;
_4.0.0 = !_23.2.0;
_11 = (_19.0, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_23.0 = &_4.0.0;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = _19.1.2;
_22 = -_13.0;
_22 = -_13.0;
_11.1.2 = !_19.1.2;
_21 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
_15 = -1209617857_i32;
_9 = _11.1.1 <= _21;
_11 = (_16, Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1));
_11.1.2 = -Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).0;
_23.3 = !_23.2.0;
_17.0 = [_19.1.1,_19.1.1,_19.1.1];
_4.1 = core::ptr::addr_of_mut!(_24.2);
_11.1.2 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).2;
_12 = Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1 - Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1).1;
match _17.1 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
30 => bb13,
_ => bb12
}
}
bb63 = {
place!(Field::<i128>(Variant(_13.1, 2), 3)) = _14 & _7;
_68[_86] = !_82.2;
_4.0.1 = Adt20::Variant0 { fld0: Move((*_67)),fld1: _78.3,fld2: Field::<u64>(Variant(_104.0.1, 1), 0),fld3: _86 };
_85 = -_44;
_83 = (_73, _77.1, _56.2, _98.3);
_34.1 = Adt30::Variant2 { fld0: _97[_86],fld1: _75,fld2: _8[_86],fld3: _14 };
_68[_86] = _98.2 << Field::<i16>(Variant(_61, 0), 0);
place!(Field::<*const u8>(Variant(_57.1, 1), 2)) = Move(_37.0);
_65 = Field::<f32>(Variant(_104.0.1, 1), 3) + _82.0;
_94 = Field::<i32>(Variant(_38, 2), 5) as f64;
place!(Field::<(i16, isize, i16)>(Variant(_13.1, 2), 1)).0 = -Field::<(i16, isize, i16)>(Variant(_34.1, 2), 1).0;
_11 = _92;
_88 = -_81;
_111 = -_73;
_17.1 = _75.0 as i8;
place!(Field::<i32>(Variant(_35.1, 1), 5)) = !Field::<i32>(Variant(_38, 2), 5);
_103.3 = _104.0.0;
_78.2 = '\u{e6b4c}';
_81 = _42 + _42;
Goto(bb64)
}
bb64 = {
Call(_117 = dump_var(20_usize, 60_usize, Move(_60), 32_usize, Move(_32), 42_usize, Move(_42), 26_usize, Move(_26)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_117 = dump_var(20_usize, 17_usize, Move(_17), 15_usize, Move(_15), 31_usize, Move(_31), 47_usize, Move(_47)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_117 = dump_var(20_usize, 20_usize, Move(_20), 21_usize, Move(_21), 63_usize, Move(_63), 5_usize, Move(_5)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Call(_117 = dump_var(20_usize, 22_usize, Move(_22), 25_usize, Move(_25), 76_usize, Move(_76), 3_usize, Move(_3)), ReturnTo(bb68), UnwindUnreachable())
}
bb68 = {
Call(_117 = dump_var(20_usize, 9_usize, Move(_9), 28_usize, Move(_28), 92_usize, Move(_92), 8_usize, Move(_8)), ReturnTo(bb69), UnwindUnreachable())
}
bb69 = {
Call(_117 = dump_var(20_usize, 33_usize, Move(_33), 66_usize, Move(_66), 59_usize, Move(_59), 118_usize, _118), ReturnTo(bb70), UnwindUnreachable())
}
bb70 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn21(mut _1: &'static f64,mut _2: i128,mut _3: i16,mut _4: isize) -> bool {
mir! {
type RET = bool;
let _5: &'static &'static (i16, isize, i16);
let _6: *mut u128;
let _7: [i16; 4];
let _8: i16;
let _9: &'static *const *mut i8;
let _10: *mut *const *mut i8;
let _11: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _12: f32;
let _13: isize;
let _14: u64;
let _15: i16;
let _16: usize;
let _17: Adt44;
let _18: (*const u8, i16);
let _19: ([isize; 3], i8);
let _20: f32;
let _21: isize;
let _22: *const u8;
let _23: (u8, Adt20, i16);
let _24: Adt20;
let _25: i128;
let _26: [u128; 8];
let _27: u128;
let _28: ((u8, Adt20, i16), *mut u128);
let _29: f32;
let _30: f64;
let _31: Adt27;
let _32: [i8; 2];
let _33: i128;
let _34: char;
let _35: [u16; 4];
let _36: Adt27;
let _37: &'static *const &'static f64;
let _38: &'static f64;
let _39: i128;
let _40: (u8, Adt20, i16);
let _41: isize;
let _42: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _43: [u64; 5];
let _44: [i16; 7];
let _45: bool;
let _46: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _47: i8;
let _48: f64;
let _49: isize;
let _50: i128;
let _51: &'static (i16, isize, i16);
let _52: Adt29;
let _53: f64;
let _54: (([i32; 4],),);
let _55: u16;
let _56: ((&'static i16, u16, char, i64), u32, u64, f64);
let _57: ((u8, Adt20, i16), *mut u128);
let _58: u8;
let _59: *const &'static f64;
let _60: usize;
let _61: u64;
let _62: bool;
let _63: f32;
let _64: f64;
let _65: u32;
let _66: f32;
let _67: [i16; 4];
let _68: ();
let _69: ();
{
_2 = (-81444960589095231112058887873535125402_i128);
_3 = (-685019070_i32) as i16;
_7 = [_3,_3,_3,_3];
_2 = _4 as i128;
_2 = 66364733393314441116460156991687881562_i128 | (-169390435510280334972424732013723000096_i128);
_4 = 52239_u16 as isize;
_2 = 528305374229935764_u64 as i128;
_2 = 28553901450615123329201428201890749346_u128 as i128;
RET = false;
_2 = 83488357400273526014348917314835479046_i128 + 156519091440987335231406604906140960626_i128;
RET = _4 >= _4;
RET = _4 != _4;
_4 = 396292329456611284_u64 as isize;
RET = _4 > _4;
_3 = (-4540_i16) - (-29649_i16);
_3 = -25468_i16;
Goto(bb1)
}
bb1 = {
_7 = [_3,_3,_3,_3];
_8 = _3;
_8 = _3;
_4 = '\u{8071c}' as isize;
RET = true;
RET = true | true;
RET = !false;
Goto(bb2)
}
bb2 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_16 = !17043458336224858949_usize;
_7 = [_8,_8,_8,_3];
_13 = -_4;
RET = _14 == _14;
_2 = 3649533979_u32 as i128;
_17 = Adt44::Variant2 { fld0: _14 };
_15 = _3 * _3;
RET = _3 < _8;
_3 = -_15;
_3 = 1498642030_u32 as i16;
_14 = 40_i8 as u64;
SetDiscriminant(_17, 3);
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
_2 = 148041218105042333449451991967584825845_i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = 137_u8;
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_8 = _3 << _15;
_8 = _15 >> _14;
RET = !false;
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
148041218105042333449451991967584825845 => bb11,
_ => bb10
}
}
bb4 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_7 = [_3,_3,_3,_3];
_8 = _3;
_8 = _3;
_4 = '\u{8071c}' as isize;
RET = true;
RET = true | true;
RET = !false;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
place!(Field::<f32>(Variant(_17, 3), 0)) = _12 + _12;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = !59_u8;
_19.1 = (-115_i8) - (-60_i8);
_18.0 = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0);
place!(Field::<u128>(Variant(_17, 3), 1)) = 196769597544239159444528777334852946631_u128;
_17 = Adt44::Variant2 { fld0: _14 };
_19.0 = [_4,_4,_13];
_18.1 = !_15;
_16 = !15499502273181433513_usize;
_15 = _8 + _8;
place!(Field::<u64>(Variant(_17, 2), 0)) = _14 * _14;
_8 = -_15;
_16 = 15718536448816829792_usize;
_15 = _8;
match _16 {
15718536448816829792 => bb12,
_ => bb3
}
}
bb12 = {
_20 = 103_u8 as f32;
Call(_3 = core::intrinsics::transmute(_8), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_3 = _19.1 as i16;
RET = !false;
_19.0 = [_4,_4,_4];
_19.1 = _2 as i8;
_2 = 98376810192804387461665953652246133437_i128 + 136698258473121208937325754855822140585_i128;
_8 = RET as i16;
_15 = _20 as i16;
_2 = (-104374031747143534154524652396313132438_i128) ^ (-29423070110723515658617119112014148288_i128);
_4 = -_13;
_15 = _8 ^ _8;
_23.1 = Adt20::Variant1 { fld0: _14,fld1: 269641232861073573497148293149344273249_u128,fld2: 20_u8,fld3: _12,fld4: 2213330466_u32,fld5: (-545635345_i32),fld6: (-2566990620679416179_i64) };
SetDiscriminant(_17, 3);
_3 = -_15;
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.1, 1), 1)));
_19.0 = [_4,_13,_4];
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.1, 1), 1)));
_8 = _18.1 & _18.1;
_23.0 = 141_u8 | 98_u8;
_10 = core::ptr::addr_of_mut!((*_10));
_4 = -_13;
_22 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_23.1, 1), 2)));
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).2 = 1320825253914456202_i64 as i16;
_14 = 3886363570_u32 as u64;
Goto(bb14)
}
bb14 = {
place!(Field::<u128>(Variant(_23.1, 1), 1)) = _19.1 as u128;
_21 = _4 - _4;
_23.1 = Adt20::Variant1 { fld0: _14,fld1: 27881759605725728405169692797640067485_u128,fld2: _23.0,fld3: _20,fld4: 2287213471_u32,fld5: (-164653494_i32),fld6: 4751555714561124027_i64 };
_16 = RET as usize;
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
Goto(bb15)
}
bb15 = {
_7 = [_8,_8,_15,_18.1];
_15 = _19.1 as i16;
_16 = 7_usize >> _21;
Goto(bb16)
}
bb16 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb17 = {
_25 = _2;
place!(Field::<u128>(Variant(_23.1, 1), 1)) = !(*_6);
_4 = -_13;
_14 = Field::<u64>(Variant(_23.1, 1), 0);
_21 = _13;
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = -Field::<f32>(Variant(_23.1, 1), 3);
_4 = _13 << Field::<u32>(Variant(_23.1, 1), 4);
place!(Field::<f32>(Variant(_23.1, 1), 3)) = _20 + _29;
_25 = !_2;
place!(Field::<u16>(Variant(place!(Field::<Adt30>(Variant(_17, 3), 2)), 2), 2)) = 39576_u16;
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.1, 1), 1)));
_27 = !(*_6);
_18.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_28.0.1, 1), 2)));
_14 = Field::<u64>(Variant(_23.1, 1), 0) * Field::<u64>(Variant(_28.0.1, 1), 0);
place!(Field::<u64>(Variant(_28.0.1, 1), 0)) = _14;
_20 = -Field::<f32>(Variant(_28.0.1, 1), 3);
_39 = Field::<u32>(Variant(_28.0.1, 1), 4) as i128;
_39 = -_2;
match Field::<u32>(Variant(_23.1, 1), 4) {
0 => bb18,
1 => bb19,
2 => bb20,
1827233399 => bb22,
_ => bb21
}
}
bb18 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb19 = {
Return()
}
bb20 = {
place!(Field::<u128>(Variant(_23.1, 1), 1)) = _19.1 as u128;
_21 = _4 - _4;
_23.1 = Adt20::Variant1 { fld0: _14,fld1: 27881759605725728405169692797640067485_u128,fld2: _23.0,fld3: _20,fld4: 2287213471_u32,fld5: (-164653494_i32),fld6: 4751555714561124027_i64 };
_16 = RET as usize;
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
Goto(bb15)
}
bb21 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb22 = {
_19.0 = [_4,_4,_4];
_4 = -_13;
_21 = _13;
(*_6) = Field::<u128>(Variant(_17, 3), 1);
_36 = Adt27::Variant0 { fld0: _21 };
_34 = '\u{eb600}';
place!(Field::<u64>(Variant(_28.0.1, 1), 0)) = _14;
_23.2 = _8 >> _8;
_20 = -_12;
place!(Field::<u128>(Variant(_23.1, 1), 1)) = !_27;
_28.0.0 = !Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).0;
_18.0 = core::ptr::addr_of!(_40.0);
_31 = Move(_36);
place!(Field::<u64>(Variant(place!(Field::<Adt30>(Variant(_17, 3), 2)), 2), 0)) = !Field::<u64>(Variant(_28.0.1, 1), 0);
_24 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_23.1, 1), 0),fld1: _27,fld2: Field::<u8>(Variant(_23.1, 1), 2),fld3: Field::<f32>(Variant(_23.1, 1), 3),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 567302171_i32,fld6: Field::<i64>(Variant(_28.0.1, 1), 6) };
place!(Field::<i32>(Variant(_23.1, 1), 5)) = -516991742_i32;
place!(Field::<f32>(Variant(_24, 1), 3)) = -Field::<f32>(Variant(_23.1, 1), 3);
place!(Field::<u8>(Variant(_28.0.1, 1), 2)) = Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).0 << (*_6);
_3 = _15;
match Field::<u32>(Variant(_28.0.1, 1), 4) {
0 => bb23,
1 => bb24,
2 => bb25,
1827233399 => bb27,
_ => bb26
}
}
bb23 = {
Return()
}
bb24 = {
Return()
}
bb25 = {
_25 = _2;
place!(Field::<u128>(Variant(_23.1, 1), 1)) = !(*_6);
_4 = -_13;
_14 = Field::<u64>(Variant(_23.1, 1), 0);
_21 = _13;
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = -Field::<f32>(Variant(_23.1, 1), 3);
_4 = _13 << Field::<u32>(Variant(_23.1, 1), 4);
place!(Field::<f32>(Variant(_23.1, 1), 3)) = _20 + _29;
_25 = !_2;
place!(Field::<u16>(Variant(place!(Field::<Adt30>(Variant(_17, 3), 2)), 2), 2)) = 39576_u16;
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_23.1, 1), 1)));
_27 = !(*_6);
_18.0 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_28.0.1, 1), 2)));
_14 = Field::<u64>(Variant(_23.1, 1), 0) * Field::<u64>(Variant(_28.0.1, 1), 0);
place!(Field::<u64>(Variant(_28.0.1, 1), 0)) = _14;
_20 = -Field::<f32>(Variant(_28.0.1, 1), 3);
_39 = Field::<u32>(Variant(_28.0.1, 1), 4) as i128;
_39 = -_2;
match Field::<u32>(Variant(_23.1, 1), 4) {
0 => bb18,
1 => bb19,
2 => bb20,
1827233399 => bb22,
_ => bb21
}
}
bb26 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb27 = {
place!(Field::<f32>(Variant(_17, 3), 0)) = _20 - _29;
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<f32>(Variant(_24, 1), 3) as u128;
place!(Field::<i128>(Variant(place!(Field::<Adt30>(Variant(_17, 3), 2)), 2), 3)) = !_2;
place!(Field::<Adt29>(Variant(_17, 3), 4)) = Adt29::Variant1 { fld0: Field::<i64>(Variant(_28.0.1, 1), 6),fld1: Field::<u16>(Variant(Field::<Adt30>(Variant(_17, 3), 2), 2), 2),fld2: Move(_18),fld3: Field::<i32>(Variant(_23.1, 1), 5) };
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
place!(Field::<u8>(Variant(_23.1, 1), 2)) = Field::<u128>(Variant(_23.1, 1), 1) as u8;
match Field::<u32>(Variant(_23.1, 1), 4) {
0 => bb28,
1 => bb29,
1827233399 => bb31,
_ => bb30
}
}
bb28 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb29 = {
_16 = !17043458336224858949_usize;
_7 = [_8,_8,_8,_3];
_13 = -_4;
RET = _14 == _14;
_2 = 3649533979_u32 as i128;
_17 = Adt44::Variant2 { fld0: _14 };
_15 = _3 * _3;
RET = _3 < _8;
_3 = -_15;
_3 = 1498642030_u32 as i16;
_14 = 40_i8 as u64;
SetDiscriminant(_17, 3);
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
_2 = 148041218105042333449451991967584825845_i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = 137_u8;
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_8 = _3 << _15;
_8 = _15 >> _14;
RET = !false;
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
148041218105042333449451991967584825845 => bb11,
_ => bb10
}
}
bb30 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb31 = {
_40.0 = Field::<u8>(Variant(_24, 1), 2) << Field::<u128>(Variant(_17, 3), 1);
place!(Field::<f32>(Variant(_24, 1), 3)) = _2 as f32;
place!(Field::<i32>(Variant(_28.0.1, 1), 5)) = Field::<u32>(Variant(_24, 1), 4) as i32;
_29 = -Field::<f32>(Variant(_28.0.1, 1), 3);
_45 = !Field::<bool>(Variant(Field::<Adt30>(Variant(_17, 3), 2), 0), 0);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = Field::<u8>(Variant(_28.0.1, 1), 2) - Field::<u8>(Variant(_28.0.1, 1), 2);
SetDiscriminant(_28.0.1, 0);
place!(Field::<i32>(Variant(_24, 1), 5)) = Field::<i32>(Variant(_23.1, 1), 5) * Field::<i32>(Variant(_23.1, 1), 5);
_33 = -_39;
place!(Field::<u32>(Variant(_24, 1), 4)) = Field::<u32>(Variant(_23.1, 1), 4);
_35 = [Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1),Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1),Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1),Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1)];
_28.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_23.1, 1), 0),fld1: (*_6),fld2: Field::<u8>(Variant(_23.1, 1), 2),fld3: _20,fld4: Field::<u32>(Variant(_24, 1), 4),fld5: Field::<i32>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 3),fld6: Field::<i64>(Variant(_24, 1), 6) };
place!(Field::<u32>(Variant(_28.0.1, 1), 4)) = _16 as u32;
(*_6) = _27 ^ Field::<u128>(Variant(_17, 3), 1);
Goto(bb32)
}
bb32 = {
place!(Field::<u128>(Variant(_28.0.1, 1), 1)) = _15 as u128;
_26 = [Field::<u128>(Variant(_24, 1), 1),_27,(*_6),Field::<u128>(Variant(_23.1, 1), 1),(*_6),Field::<u128>(Variant(_23.1, 1), 1),_27,_27];
_36 = Move(_31);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = -Field::<i64>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 0);
match Field::<u32>(Variant(_24, 1), 4) {
0 => bb14,
1 => bb33,
2 => bb34,
3 => bb35,
4 => bb36,
1827233399 => bb38,
_ => bb37
}
}
bb33 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb34 = {
_19.0 = [_4,_4,_4];
_4 = -_13;
_21 = _13;
(*_6) = Field::<u128>(Variant(_17, 3), 1);
_36 = Adt27::Variant0 { fld0: _21 };
_34 = '\u{eb600}';
place!(Field::<u64>(Variant(_28.0.1, 1), 0)) = _14;
_23.2 = _8 >> _8;
_20 = -_12;
place!(Field::<u128>(Variant(_23.1, 1), 1)) = !_27;
_28.0.0 = !Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).0;
_18.0 = core::ptr::addr_of!(_40.0);
_31 = Move(_36);
place!(Field::<u64>(Variant(place!(Field::<Adt30>(Variant(_17, 3), 2)), 2), 0)) = !Field::<u64>(Variant(_28.0.1, 1), 0);
_24 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_23.1, 1), 0),fld1: _27,fld2: Field::<u8>(Variant(_23.1, 1), 2),fld3: Field::<f32>(Variant(_23.1, 1), 3),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 567302171_i32,fld6: Field::<i64>(Variant(_28.0.1, 1), 6) };
place!(Field::<i32>(Variant(_23.1, 1), 5)) = -516991742_i32;
place!(Field::<f32>(Variant(_24, 1), 3)) = -Field::<f32>(Variant(_23.1, 1), 3);
place!(Field::<u8>(Variant(_28.0.1, 1), 2)) = Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).0 << (*_6);
_3 = _15;
match Field::<u32>(Variant(_28.0.1, 1), 4) {
0 => bb23,
1 => bb24,
2 => bb25,
1827233399 => bb27,
_ => bb26
}
}
bb35 = {
place!(Field::<u128>(Variant(_23.1, 1), 1)) = _19.1 as u128;
_21 = _4 - _4;
_23.1 = Adt20::Variant1 { fld0: _14,fld1: 27881759605725728405169692797640067485_u128,fld2: _23.0,fld3: _20,fld4: 2287213471_u32,fld5: (-164653494_i32),fld6: 4751555714561124027_i64 };
_16 = RET as usize;
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
Goto(bb15)
}
bb36 = {
_16 = !17043458336224858949_usize;
_7 = [_8,_8,_8,_3];
_13 = -_4;
RET = _14 == _14;
_2 = 3649533979_u32 as i128;
_17 = Adt44::Variant2 { fld0: _14 };
_15 = _3 * _3;
RET = _3 < _8;
_3 = -_15;
_3 = 1498642030_u32 as i16;
_14 = 40_i8 as u64;
SetDiscriminant(_17, 3);
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
_2 = 148041218105042333449451991967584825845_i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = 137_u8;
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_8 = _3 << _15;
_8 = _15 >> _14;
RET = !false;
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
148041218105042333449451991967584825845 => bb11,
_ => bb10
}
}
bb37 = {
place!(Field::<f32>(Variant(_17, 3), 0)) = _12 + _12;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = !59_u8;
_19.1 = (-115_i8) - (-60_i8);
_18.0 = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0);
place!(Field::<u128>(Variant(_17, 3), 1)) = 196769597544239159444528777334852946631_u128;
_17 = Adt44::Variant2 { fld0: _14 };
_19.0 = [_4,_4,_13];
_18.1 = !_15;
_16 = !15499502273181433513_usize;
_15 = _8 + _8;
place!(Field::<u64>(Variant(_17, 2), 0)) = _14 * _14;
_8 = -_15;
_16 = 15718536448816829792_usize;
_15 = _8;
match _16 {
15718536448816829792 => bb12,
_ => bb3
}
}
bb38 = {
place!(Field::<i64>(Variant(_24, 1), 6)) = Field::<i64>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 0) >> Field::<u8>(Variant(_23.1, 1), 2);
Goto(bb39)
}
bb39 = {
_18.1 = _8;
place!(Field::<(*const u8, i16)>(Variant(place!(Field::<Adt29>(Variant(_17, 3), 4)), 1), 2)).1 = Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1) as i16;
_56.0.2 = _34;
_44 = [_23.2,_18.1,_3,_15,_18.1,_3,_18.1];
_44 = [_23.2,Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2,Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2,_23.2,_23.2,_18.1,_3];
_31 = Adt27::Variant0 { fld0: _21 };
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).1 = Move(_28.0.1);
_8 = -_23.2;
_40 = Move(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3));
_40.2 = Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1) as i16;
_2 = !_33;
place!(Field::<i64>(Variant(_40.1, 1), 6)) = Field::<i64>(Variant(_24, 1), 6);
_22 = core::ptr::addr_of!(_23.0);
_41 = _8 as isize;
match Field::<u32>(Variant(_23.1, 1), 4) {
0 => bb1,
1 => bb40,
2 => bb41,
3 => bb42,
4 => bb43,
5 => bb44,
6 => bb45,
1827233399 => bb47,
_ => bb46
}
}
bb40 = {
_7 = [_3,_3,_3,_3];
_8 = _3;
_8 = _3;
_4 = '\u{8071c}' as isize;
RET = true;
RET = true | true;
RET = !false;
Goto(bb2)
}
bb41 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb42 = {
place!(Field::<u128>(Variant(_23.1, 1), 1)) = _19.1 as u128;
_21 = _4 - _4;
_23.1 = Adt20::Variant1 { fld0: _14,fld1: 27881759605725728405169692797640067485_u128,fld2: _23.0,fld3: _20,fld4: 2287213471_u32,fld5: (-164653494_i32),fld6: 4751555714561124027_i64 };
_16 = RET as usize;
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
Goto(bb15)
}
bb43 = {
Return()
}
bb44 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb45 = {
_8 = 685475697_u32 as i16;
place!(Field::<u32>(Variant(_23.1, 1), 4)) = 1827233399_u32;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_2 = (-114919003561613707112340439155341293831_i128) ^ (-159728470867994005470727144781122877530_i128);
place!(Field::<u128>(Variant(_17, 3), 1)) = Field::<u8>(Variant(_23.1, 1), 2) as u128;
_20 = -Field::<f32>(Variant(_23.1, 1), 3);
_6 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_17, 3), 1)));
_6 = core::ptr::addr_of_mut!(_27);
place!(Field::<Adt30>(Variant(_17, 3), 2)) = Adt30::Variant0 { fld0: RET };
_14 = Field::<u64>(Variant(_23.1, 1), 0) << _19.1;
_18 = (Move(_22), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
_19.0 = [_21,_13,_4];
_28.0.1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _23.0,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(_23.1, 1), 4),fld5: 1690810993_i32,fld6: 8850476090335017241_i64 };
SetDiscriminant(Field::<Adt30>(Variant(_17, 3), 2), 2);
place!(Field::<i64>(Variant(_28.0.1, 1), 6)) = _19.1 as i64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = Field::<u8>(Variant(_28.0.1, 1), 2);
place!(Field::<u8>(Variant(_23.1, 1), 2)) = !Field::<u8>(Variant(_28.0.1, 1), 2);
_13 = Field::<u128>(Variant(_17, 3), 1) as isize;
(*_6) = Field::<u128>(Variant(_28.0.1, 1), 1) * Field::<u128>(Variant(_28.0.1, 1), 1);
place!(Field::<f32>(Variant(_28.0.1, 1), 3)) = Field::<f32>(Variant(_17, 3), 0);
_29 = Field::<f32>(Variant(_17, 3), 0);
Goto(bb17)
}
bb46 = {
_16 = !17043458336224858949_usize;
_7 = [_8,_8,_8,_3];
_13 = -_4;
RET = _14 == _14;
_2 = 3649533979_u32 as i128;
_17 = Adt44::Variant2 { fld0: _14 };
_15 = _3 * _3;
RET = _3 < _8;
_3 = -_15;
_3 = 1498642030_u32 as i16;
_14 = 40_i8 as u64;
SetDiscriminant(_17, 3);
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
_2 = 148041218105042333449451991967584825845_i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = 137_u8;
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_8 = _3 << _15;
_8 = _15 >> _14;
RET = !false;
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
148041218105042333449451991967584825845 => bb11,
_ => bb10
}
}
bb47 = {
_14 = Field::<u128>(Variant(_23.1, 1), 1) as u64;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_24, 1), 0),fld1: Field::<u128>(Variant(_24, 1), 1),fld2: (*_22),fld3: _12,fld4: Field::<u32>(Variant(_40.1, 1), 4),fld5: Field::<i32>(Variant(_24, 1), 5),fld6: Field::<i64>(Variant(_40.1, 1), 6) };
_57.0 = Move(_40);
_48 = Field::<u128>(Variant(_17, 3), 1) as f64;
_40.2 = Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1 ^ _8;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).1 = Move(_24);
place!(Field::<u128>(Variant(_23.1, 1), 1)) = !Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).1, 1), 1);
_3 = Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1;
_23 = (Field::<u8>(Variant(_57.0.1, 1), 2), Move(_57.0.1), _40.2);
_58 = !Field::<u8>(Variant(_23.1, 1), 2);
_57.0.1 = Move(_23.1);
_10 = core::ptr::addr_of_mut!((*_10));
_57.0 = (_58, Move(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).1), Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1);
place!(Field::<isize>(Variant(_36, 0), 0)) = _25 as isize;
_56.0.0 = &place!(Field::<(*const u8, i16)>(Variant(place!(Field::<Adt29>(Variant(_17, 3), 4)), 1), 2)).1;
_23.0 = _58 << Field::<u8>(Variant(_57.0.1, 1), 2);
SetDiscriminant(_36, 0);
_19.0 = [_21,_21,_13];
match Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1) {
0 => bb48,
1 => bb49,
39576 => bb51,
_ => bb50
}
}
bb48 = {
_16 = !17043458336224858949_usize;
_7 = [_8,_8,_8,_3];
_13 = -_4;
RET = _14 == _14;
_2 = 3649533979_u32 as i128;
_17 = Adt44::Variant2 { fld0: _14 };
_15 = _3 * _3;
RET = _3 < _8;
_3 = -_15;
_3 = 1498642030_u32 as i16;
_14 = 40_i8 as u64;
SetDiscriminant(_17, 3);
place!(Field::<f32>(Variant(_17, 3), 0)) = _12;
_2 = 148041218105042333449451991967584825845_i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = 137_u8;
_10 = core::ptr::addr_of_mut!(place!(Field::<*const *mut i8>(Variant(_17, 3), 5)));
_8 = _3 << _15;
_8 = _15 >> _14;
RET = !false;
match _2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
148041218105042333449451991967584825845 => bb11,
_ => bb10
}
}
bb49 = {
RET = !true;
_7 = [_8,_3,_8,_3];
_8 = 16604236548605247518_usize as i16;
_12 = 2646055505738359142_i64 as f32;
_12 = _2 as f32;
_8 = RET as i16;
_14 = 4868732638570774909_u64 >> _2;
_7 = [_3,_8,_8,_3];
RET = false & true;
Call(RET = fn22(_4, _8, _2, _12, _4, _12, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb50 = {
place!(Field::<f32>(Variant(_17, 3), 0)) = _12 + _12;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = !59_u8;
_19.1 = (-115_i8) - (-60_i8);
_18.0 = core::ptr::addr_of!(place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0);
place!(Field::<u128>(Variant(_17, 3), 1)) = 196769597544239159444528777334852946631_u128;
_17 = Adt44::Variant2 { fld0: _14 };
_19.0 = [_4,_4,_13];
_18.1 = !_15;
_16 = !15499502273181433513_usize;
_15 = _8 + _8;
place!(Field::<u64>(Variant(_17, 2), 0)) = _14 * _14;
_8 = -_15;
_16 = 15718536448816829792_usize;
_15 = _8;
match _16 {
15718536448816829792 => bb12,
_ => bb3
}
}
bb51 = {
place!(Field::<(*const u8, i16)>(Variant(place!(Field::<Adt29>(Variant(_17, 3), 4)), 1), 2)) = (Move(_22), _23.2);
_19.1 = (-93_i8);
_2 = Field::<u16>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 1) as i128;
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).2 = _14 as i16;
_27 = Field::<u128>(Variant(_57.0.1, 1), 1) ^ Field::<u128>(Variant(_17, 3), 1);
_40 = (_58, Move(_57.0.1), Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).2);
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).0 = _58;
_40.0 = _28.0.0 ^ _57.0.0;
Goto(bb52)
}
bb52 = {
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).1 = Adt20::Variant1 { fld0: _14,fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _40.0,fld3: _12,fld4: Field::<u32>(Variant(_40.1, 1), 4),fld5: Field::<i32>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 3),fld6: Field::<i64>(Variant(_40.1, 1), 6) };
_2 = -_39;
_7 = [Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1,Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1,_23.2,Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1];
_62 = _8 != Field::<(*const u8, i16)>(Variant(Field::<Adt29>(Variant(_17, 3), 4), 1), 2).1;
_27 = !Field::<u128>(Variant(_17, 3), 1);
_36 = Adt27::Variant1 { fld0: _14,fld1: _48,fld2: Move(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)),fld3: _16,fld4: _28.0.0 };
_12 = Field::<f32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1, 1), 3);
_24 = Move(_40.1);
_61 = !Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1, 1), 0);
place!(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3)).1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1, 1), 0),fld1: Field::<u128>(Variant(_17, 3), 1),fld2: _58,fld3: Field::<f32>(Variant(_17, 3), 0),fld4: Field::<u32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1, 1), 4),fld5: Field::<i32>(Variant(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1, 1), 5),fld6: Field::<i64>(Variant(_24, 1), 6) };
_57.0 = (_58, Move(Field::<(u8, Adt20, i16)>(Variant(_36, 1), 2).1), _40.2);
SetDiscriminant(Field::<Adt29>(Variant(_17, 3), 4), 0);
RET = Field::<u8>(Variant(_57.0.1, 1), 2) >= Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_17, 3), 3).1, 1), 2);
Goto(bb53)
}
bb53 = {
Call(_68 = dump_var(21_usize, 8_usize, Move(_8), 3_usize, Move(_3), 39_usize, Move(_39), 44_usize, Move(_44)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_68 = dump_var(21_usize, 21_usize, Move(_21), 62_usize, Move(_62), 13_usize, Move(_13), 41_usize, Move(_41)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_68 = dump_var(21_usize, 33_usize, Move(_33), 2_usize, Move(_2), 27_usize, Move(_27), 16_usize, Move(_16)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn22(mut _1: isize,mut _2: i16,mut _3: i128,mut _4: f32,mut _5: isize,mut _6: f32,mut _7: i16) -> bool {
mir! {
type RET = bool;
let _8: bool;
let _9: [isize; 3];
let _10: ((u8, Adt20, i16), *mut u128);
let _11: (f32, [bool; 5], u128, i8);
let _12: ((u8, Adt20, i16), *mut u128);
let _13: [i16; 4];
let _14: u32;
let _15: &'static u64;
let _16: &'static f64;
let _17: *const &'static f64;
let _18: &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _19: *const u8;
let _20: bool;
let _21: f64;
let _22: f64;
let _23: bool;
let _24: char;
let _25: Adt29;
let _26: isize;
let _27: Adt29;
let _28: i64;
let _29: Adt73;
let _30: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _31: u128;
let _32: usize;
let _33: &'static u8;
let _34: isize;
let _35: usize;
let _36: isize;
let _37: [u16; 4];
let _38: [u64; 3];
let _39: &'static (f32, [bool; 5], u128, i8);
let _40: isize;
let _41: bool;
let _42: u128;
let _43: [u16; 4];
let _44: (u8, Adt20, i16);
let _45: ();
let _46: ();
{
_6 = _7 as f32;
RET = !false;
_5 = 15885427639157895144_u64 as isize;
_2 = _7 ^ _7;
_3 = (-11211355357004820303820751909083811166_i128);
_3 = (-109971167653336535174933432401333736009_i128) + 77275015997434222080748824413229008951_i128;
_8 = RET;
RET = _8;
_11.3 = !40_i8;
_12.1 = core::ptr::addr_of_mut!(_11.2);
RET = !_8;
_10.0.2 = 1038317882_u32 as i16;
_10.1 = core::ptr::addr_of_mut!(_11.2);
_11.1 = [RET,RET,_8,RET,_8];
_10.0.2 = _7;
_9 = [_1,_1,_1];
_14 = !3716738850_u32;
_7 = _2 | _2;
_5 = _1;
_11.2 = !277315034772763081150812151062999238499_u128;
_9 = [_5,_5,_5];
Call(_12.0.2 = core::intrinsics::transmute(_7), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11.0 = -_4;
_4 = -_11.0;
_10.0.0 = !170_u8;
RET = !_8;
Call(_12.0.1 = fn23(_7, _12.0.2, _11, _2, _10.0.2, _11, RET, Move(_10.1), _11.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_3 = -123881642706849238877028321694884494783_i128;
SetDiscriminant(_12.0.1, 1);
_10.1 = core::ptr::addr_of_mut!(_11.2);
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _10.0.0;
_13 = [_12.0.2,_2,_7,_7];
_12.0.2 = _7;
place!(Field::<u32>(Variant(_12.0.1, 1), 4)) = _14 | _14;
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _3 as u8;
_3 = 105787609062348877204068380218559062768_i128 << _7;
Call(_2 = fn24(_13, _7, Move(_10.1)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(place!(Field::<f32>(Variant(_12.0.1, 1), 3)) = core::intrinsics::transmute(_14), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_13 = [_10.0.2,_12.0.2,_2,_12.0.2];
_8 = _3 > _3;
_10.0.0 = !Field::<u8>(Variant(_12.0.1, 1), 2);
_11.0 = (-5814654504783854138_i64) as f32;
_9 = [_5,_1,_1];
_10.1 = Move(_12.1);
_10.0.2 = _7 - _2;
_5 = _1;
_12.0.0 = 11202268485348763598_u64 as u8;
_12.1 = core::ptr::addr_of_mut!(_11.2);
Goto(bb5)
}
bb5 = {
_1 = _5 * _5;
place!(Field::<f32>(Variant(_12.0.1, 1), 3)) = _6;
_6 = _3 as f32;
_20 = !_8;
_21 = Field::<u32>(Variant(_12.0.1, 1), 4) as f64;
_14 = 1725313729226283797_i64 as u32;
_10.0.0 = Field::<u8>(Variant(_12.0.1, 1), 2);
_19 = core::ptr::addr_of!(_10.0.0);
_11.0 = _6 - _6;
_11.1 = [_20,_20,_20,_20,_20];
_24 = '\u{9c0a4}';
_11.2 = 9891308186518085004108489162000219974_u128 - 33151415494687892542393865810794561228_u128;
(*_19) = Field::<u32>(Variant(_12.0.1, 1), 4) as u8;
_16 = &_21;
_11.2 = !119229618111135007442143094579768759979_u128;
Goto(bb6)
}
bb6 = {
place!(Field::<i64>(Variant(_12.0.1, 1), 6)) = (-6854962524455886785_i64);
RET = !_8;
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = (*_19);
RET = !_8;
_5 = _1;
Goto(bb7)
}
bb7 = {
_10.0.1 = Adt20::Variant1 { fld0: 8104442556748808303_u64,fld1: _11.2,fld2: _12.0.0,fld3: _11.0,fld4: _14,fld5: (-2073615159_i32),fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
_10.0.1 = Adt20::Variant1 { fld0: 5990122029900895342_u64,fld1: _11.2,fld2: _10.0.0,fld3: _11.0,fld4: _14,fld5: (-1648862186_i32),fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
place!(Field::<i32>(Variant(_10.0.1, 1), 5)) = (-676493820_i32) << _3;
place!(Field::<u128>(Variant(_12.0.1, 1), 1)) = Field::<u128>(Variant(_10.0.1, 1), 1);
_20 = RET == RET;
_13 = [_10.0.2,_2,_10.0.2,_10.0.2];
place!(Field::<u8>(Variant(_10.0.1, 1), 2)) = _12.0.0;
_20 = _8;
_10.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_10.0.1, 1), 1)));
place!(Field::<u64>(Variant(_10.0.1, 1), 0)) = 3312443812969286466_u64;
_3 = 9203516890425341980_usize as i128;
_28 = Field::<i64>(Variant(_12.0.1, 1), 6);
_11.0 = Field::<u32>(Variant(_10.0.1, 1), 4) as f32;
match _28 {
0 => bb8,
1 => bb9,
340282366920938463456519644907312324671 => bb11,
_ => bb10
}
}
bb8 = {
place!(Field::<i64>(Variant(_12.0.1, 1), 6)) = (-6854962524455886785_i64);
RET = !_8;
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = (*_19);
RET = !_8;
_5 = _1;
Goto(bb7)
}
bb9 = {
_3 = -123881642706849238877028321694884494783_i128;
SetDiscriminant(_12.0.1, 1);
_10.1 = core::ptr::addr_of_mut!(_11.2);
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _10.0.0;
_13 = [_12.0.2,_2,_7,_7];
_12.0.2 = _7;
place!(Field::<u32>(Variant(_12.0.1, 1), 4)) = _14 | _14;
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _3 as u8;
_3 = 105787609062348877204068380218559062768_i128 << _7;
Call(_2 = fn24(_13, _7, Move(_10.1)), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_11.0 = -_4;
_4 = -_11.0;
_10.0.0 = !170_u8;
RET = !_8;
Call(_12.0.1 = fn23(_7, _12.0.2, _11, _2, _10.0.2, _11, RET, Move(_10.1), _11.0), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_11.3 = Field::<i64>(Variant(_10.0.1, 1), 6) as i8;
SetDiscriminant(_10.0.1, 0);
match Field::<i64>(Variant(_12.0.1, 1), 6) {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463456519644907312324671 => bb19,
_ => bb18
}
}
bb12 = {
_11.0 = -_4;
_4 = -_11.0;
_10.0.0 = !170_u8;
RET = !_8;
Call(_12.0.1 = fn23(_7, _12.0.2, _11, _2, _10.0.2, _11, RET, Move(_10.1), _11.0), ReturnTo(bb2), UnwindUnreachable())
}
bb13 = {
_11.0 = -_4;
_4 = -_11.0;
_10.0.0 = !170_u8;
RET = !_8;
Call(_12.0.1 = fn23(_7, _12.0.2, _11, _2, _10.0.2, _11, RET, Move(_10.1), _11.0), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_3 = -123881642706849238877028321694884494783_i128;
SetDiscriminant(_12.0.1, 1);
_10.1 = core::ptr::addr_of_mut!(_11.2);
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _10.0.0;
_13 = [_12.0.2,_2,_7,_7];
_12.0.2 = _7;
place!(Field::<u32>(Variant(_12.0.1, 1), 4)) = _14 | _14;
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _3 as u8;
_3 = 105787609062348877204068380218559062768_i128 << _7;
Call(_2 = fn24(_13, _7, Move(_10.1)), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_10.0.1 = Adt20::Variant1 { fld0: 8104442556748808303_u64,fld1: _11.2,fld2: _12.0.0,fld3: _11.0,fld4: _14,fld5: (-2073615159_i32),fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
_10.0.1 = Adt20::Variant1 { fld0: 5990122029900895342_u64,fld1: _11.2,fld2: _10.0.0,fld3: _11.0,fld4: _14,fld5: (-1648862186_i32),fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
place!(Field::<i32>(Variant(_10.0.1, 1), 5)) = (-676493820_i32) << _3;
place!(Field::<u128>(Variant(_12.0.1, 1), 1)) = Field::<u128>(Variant(_10.0.1, 1), 1);
_20 = RET == RET;
_13 = [_10.0.2,_2,_10.0.2,_10.0.2];
place!(Field::<u8>(Variant(_10.0.1, 1), 2)) = _12.0.0;
_20 = _8;
_10.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_10.0.1, 1), 1)));
place!(Field::<u64>(Variant(_10.0.1, 1), 0)) = 3312443812969286466_u64;
_3 = 9203516890425341980_usize as i128;
_28 = Field::<i64>(Variant(_12.0.1, 1), 6);
_11.0 = Field::<u32>(Variant(_10.0.1, 1), 4) as f32;
match _28 {
0 => bb8,
1 => bb9,
340282366920938463456519644907312324671 => bb11,
_ => bb10
}
}
bb16 = {
Call(place!(Field::<f32>(Variant(_12.0.1, 1), 3)) = core::intrinsics::transmute(_14), ReturnTo(bb4), UnwindUnreachable())
}
bb17 = {
_1 = _5 * _5;
place!(Field::<f32>(Variant(_12.0.1, 1), 3)) = _6;
_6 = _3 as f32;
_20 = !_8;
_21 = Field::<u32>(Variant(_12.0.1, 1), 4) as f64;
_14 = 1725313729226283797_i64 as u32;
_10.0.0 = Field::<u8>(Variant(_12.0.1, 1), 2);
_19 = core::ptr::addr_of!(_10.0.0);
_11.0 = _6 - _6;
_11.1 = [_20,_20,_20,_20,_20];
_24 = '\u{9c0a4}';
_11.2 = 9891308186518085004108489162000219974_u128 - 33151415494687892542393865810794561228_u128;
(*_19) = Field::<u32>(Variant(_12.0.1, 1), 4) as u8;
_16 = &_21;
_11.2 = !119229618111135007442143094579768759979_u128;
Goto(bb6)
}
bb18 = {
_13 = [_10.0.2,_12.0.2,_2,_12.0.2];
_8 = _3 > _3;
_10.0.0 = !Field::<u8>(Variant(_12.0.1, 1), 2);
_11.0 = (-5814654504783854138_i64) as f32;
_9 = [_5,_1,_1];
_10.1 = Move(_12.1);
_10.0.2 = _7 - _2;
_5 = _1;
_12.0.0 = 11202268485348763598_u64 as u8;
_12.1 = core::ptr::addr_of_mut!(_11.2);
Goto(bb5)
}
bb19 = {
place!(Field::<i64>(Variant(_10.0.1, 0), 1)) = -_28;
_10.0.2 = -_12.0.2;
_10.0.1 = Adt20::Variant1 { fld0: 11235235819642804597_u64,fld1: Field::<u128>(Variant(_12.0.1, 1), 1),fld2: (*_19),fld3: _6,fld4: Field::<u32>(Variant(_12.0.1, 1), 4),fld5: 173852708_i32,fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
_10.0.2 = -_2;
place!(Field::<f32>(Variant(_12.0.1, 1), 3)) = _11.0;
_11.1 = [_20,RET,RET,_20,RET];
_31 = Field::<u128>(Variant(_12.0.1, 1), 1) << _11.3;
place!(Field::<u64>(Variant(_10.0.1, 1), 0)) = 9821335500763252417_u64 * 15912895354222431830_u64;
place!(Field::<u128>(Variant(_10.0.1, 1), 1)) = !_11.2;
_17 = core::ptr::addr_of!(_16);
place!(Field::<i32>(Variant(_10.0.1, 1), 5)) = _10.0.2 as i32;
_28 = Field::<i64>(Variant(_12.0.1, 1), 6);
_24 = '\u{c8f0}';
_34 = !_5;
_12.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_10.0.1, 1), 0),fld1: _31,fld2: _12.0.0,fld3: Field::<f32>(Variant(_10.0.1, 1), 3),fld4: Field::<u32>(Variant(_10.0.1, 1), 4),fld5: Field::<i32>(Variant(_10.0.1, 1), 5),fld6: _28 };
_28 = Field::<i64>(Variant(_12.0.1, 1), 6) | Field::<i64>(Variant(_12.0.1, 1), 6);
(*_19) = _31 as u8;
_3 = -(-47934906980388352323399279963150509262_i128);
_32 = _11.3 as usize;
_23 = _20;
_31 = Field::<u128>(Variant(_12.0.1, 1), 1);
_2 = _7 | _10.0.2;
match Field::<i64>(Variant(_10.0.1, 1), 6) {
0 => bb5,
340282366920938463456519644907312324671 => bb21,
_ => bb20
}
}
bb20 = {
_11.3 = Field::<i64>(Variant(_10.0.1, 1), 6) as i8;
SetDiscriminant(_10.0.1, 0);
match Field::<i64>(Variant(_12.0.1, 1), 6) {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463456519644907312324671 => bb19,
_ => bb18
}
}
bb21 = {
_10.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_12.0.1, 1), 0),fld1: _11.2,fld2: _12.0.0,fld3: _4,fld4: Field::<u32>(Variant(_12.0.1, 1), 4),fld5: Field::<i32>(Variant(_12.0.1, 1), 5),fld6: Field::<i64>(Variant(_12.0.1, 1), 6) };
_4 = -Field::<f32>(Variant(_12.0.1, 1), 3);
_12 = (Move(_10.0), Move(_10.1));
_11.1 = [_23,_20,_20,_8,RET];
_10.0.2 = !_12.0.2;
_20 = Field::<u64>(Variant(_12.0.1, 1), 0) < Field::<u64>(Variant(_12.0.1, 1), 0);
SetDiscriminant(_12.0.1, 1);
(*_17) = &(*_16);
(*_19) = _12.0.0;
_19 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_12.0.1, 1), 2)));
place!(Field::<i64>(Variant(_12.0.1, 1), 6)) = _28;
_2 = _12.0.2 >> _12.0.2;
_37 = [35046_u16,35490_u16,2096_u16,28416_u16];
_12.0.1 = Adt20::Variant1 { fld0: 5306996523461145811_u64,fld1: _31,fld2: _12.0.0,fld3: _6,fld4: _14,fld5: (-962174460_i32),fld6: _28 };
_28 = _3 as i64;
_35 = _24 as usize;
_36 = !_1;
_12.0.1 = Adt20::Variant1 { fld0: 4501052172425531221_u64,fld1: _31,fld2: _12.0.0,fld3: _6,fld4: _14,fld5: (-242635169_i32),fld6: _28 };
place!(Field::<u8>(Variant(_12.0.1, 1), 2)) = _12.0.0;
_8 = _3 >= _3;
Goto(bb22)
}
bb22 = {
_10.1 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_12.0.1, 1), 1)));
_12.0.2 = !_2;
Goto(bb23)
}
bb23 = {
_21 = _31 as f64;
(*_17) = &_21;
_10.0.2 = _7 ^ _7;
_23 = !RET;
_17 = core::ptr::addr_of!(_16);
place!(Field::<u64>(Variant(_12.0.1, 1), 0)) = 4433141605976324462_u64 + 3090426729162301780_u64;
_17 = core::ptr::addr_of!((*_17));
_26 = !_36;
_11.0 = -Field::<f32>(Variant(_12.0.1, 1), 3);
_11.3 = 64_i8 << _2;
_12.0.0 = !Field::<u8>(Variant(_12.0.1, 1), 2);
(*_17) = &(*_16);
_11.0 = _14 as f32;
_28 = Field::<i64>(Variant(_12.0.1, 1), 6) ^ Field::<i64>(Variant(_12.0.1, 1), 6);
_8 = !_23;
_39 = &_11;
_25 = Adt29::Variant2 { fld0: Field::<u64>(Variant(_12.0.1, 1), 0),fld1: Field::<u128>(Variant(_12.0.1, 1), 1),fld2: _34,fld3: 53481_u16,fld4: _10.0.2,fld5: 1339639530_i32 };
place!(Field::<i64>(Variant(_12.0.1, 1), 6)) = -_28;
_4 = -_6;
place!(Field::<i32>(Variant(_12.0.1, 1), 5)) = -1086468290_i32;
_10.0.1 = Move(_12.0.1);
_12.0 = Move(_10.0);
_22 = (*_16);
_22 = (*_16);
SetDiscriminant(_12.0.1, 0);
_21 = -_22;
_17 = core::ptr::addr_of!((*_17));
_20 = !_8;
_24 = '\u{e64a7}';
_33 = &_12.0.0;
Goto(bb24)
}
bb24 = {
_28 = !(-1177704527357324645_i64);
_23 = _20;
Goto(bb25)
}
bb25 = {
_4 = _2 as f32;
RET = _12.0.2 < Field::<i16>(Variant(_25, 2), 4);
_7 = !_12.0.2;
_34 = _26 + _26;
_11.1 = [RET,RET,_23,_20,_23];
_7 = _12.0.2 | Field::<i16>(Variant(_25, 2), 4);
_8 = _4 <= _4;
_23 = _4 == _4;
_5 = Field::<isize>(Variant(_25, 2), 2);
_42 = _8 as u128;
_10.0.2 = -_7;
_12.0.1 = Adt20::Variant1 { fld0: Field::<u64>(Variant(_25, 2), 0),fld1: _42,fld2: _12.0.0,fld3: _4,fld4: _14,fld5: 1741965613_i32,fld6: _28 };
place!(Field::<isize>(Variant(_25, 2), 2)) = _26;
place!(Field::<i64>(Variant(_12.0.1, 1), 6)) = _28;
_26 = _21 as isize;
_43 = [40661_u16,45849_u16,13231_u16,56750_u16];
place!(Field::<u16>(Variant(_25, 2), 3)) = 11944_u16;
Goto(bb26)
}
bb26 = {
Call(_45 = dump_var(22_usize, 23_usize, Move(_23), 32_usize, Move(_32), 8_usize, Move(_8), 31_usize, Move(_31)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_45 = dump_var(22_usize, 20_usize, Move(_20), 7_usize, Move(_7), 14_usize, Move(_14), 28_usize, Move(_28)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_45 = dump_var(22_usize, 24_usize, Move(_24), 36_usize, Move(_36), 34_usize, Move(_34), 46_usize, _46), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn23(mut _1: i16,mut _2: i16,mut _3: (f32, [bool; 5], u128, i8),mut _4: i16,mut _5: i16,mut _6: (f32, [bool; 5], u128, i8),mut _7: bool,mut _8: *mut u128,mut _9: f32) -> Adt20 {
mir! {
type RET = Adt20;
let _10: i16;
let _11: *mut *const u8;
let _12: (u16, (i16, isize, i16));
let _13: Adt73;
let _14: [u16; 8];
let _15: u64;
let _16: u16;
let _17: [i8; 2];
let _18: bool;
let _19: &'static (f32, [bool; 5], u128, i8);
let _20: ();
let _21: ();
{
_6.2 = !_3.2;
_6.0 = _3.0;
_5 = _4 - _1;
_9 = _6.3 as f32;
_6 = (_3.0, _3.1, _3.2, _3.3);
_10 = _4;
RET = Adt20::Variant1 { fld0: 1831764566648379700_u64,fld1: _6.2,fld2: 239_u8,fld3: _3.0,fld4: 2095132512_u32,fld5: (-238306121_i32),fld6: 6702643862202055601_i64 };
_6.2 = _3.2;
place!(Field::<u64>(Variant(RET, 1), 0)) = 6072118671816662122_u64;
match Field::<u64>(Variant(RET, 1), 0) {
0 => bb1,
6072118671816662122 => bb3,
_ => bb2
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
place!(Field::<u32>(Variant(RET, 1), 4)) = !1347505069_u32;
_3.2 = Field::<u128>(Variant(RET, 1), 1);
place!(Field::<i32>(Variant(RET, 1), 5)) = (-75707537_i32) ^ (-252590251_i32);
_12.0 = !5167_u16;
_12.1.2 = _2 >> _3.3;
_12.1 = (_2, 9223372036854775807_isize, _5);
place!(Field::<u8>(Variant(RET, 1), 2)) = !115_u8;
_1 = _12.1.1 as i16;
Goto(bb4)
}
bb4 = {
_8 = core::ptr::addr_of_mut!(_3.2);
place!(Field::<u64>(Variant(RET, 1), 0)) = !15456197842237349383_u64;
_6.3 = _6.0 as i8;
place!(Field::<f32>(Variant(RET, 1), 3)) = _9;
place!(Field::<i64>(Variant(RET, 1), 6)) = Field::<u32>(Variant(RET, 1), 4) as i64;
_12.1.2 = _5 & _1;
place!(Field::<u128>(Variant(RET, 1), 1)) = (*_8);
(*_8) = _7 as u128;
SetDiscriminant(RET, 1);
_12.0 = 11431_u16 << _1;
_6.3 = 2446851553_u32 as i8;
_6.3 = _5 as i8;
place!(Field::<i32>(Variant(RET, 1), 5)) = -1973874191_i32;
place!(Field::<u64>(Variant(RET, 1), 0)) = 6748867100869817097_u64 << _12.0;
RET = Adt20::Variant1 { fld0: 15993684735208107187_u64,fld1: _3.2,fld2: 246_u8,fld3: _3.0,fld4: 2143445015_u32,fld5: (-334267644_i32),fld6: 9177803263744883227_i64 };
place!(Field::<i64>(Variant(RET, 1), 6)) = !7511709603452588784_i64;
place!(Field::<i32>(Variant(RET, 1), 5)) = 14148902527823599393_u64 as i32;
_4 = 7779997113950463938_usize as i16;
RET = Adt20::Variant1 { fld0: 8485760311166265794_u64,fld1: _3.2,fld2: 189_u8,fld3: _6.0,fld4: 3152494873_u32,fld5: (-1761629743_i32),fld6: (-445428428266339768_i64) };
place!(Field::<u32>(Variant(RET, 1), 4)) = 2781472549_u32 | 269944950_u32;
_7 = !false;
_14 = [_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0,_12.0];
_9 = 719722219_i32 as f32;
_3.1 = [_7,_7,_7,_7,_7];
_3 = (_6.0, _6.1, _6.2, _6.3);
place!(Field::<u64>(Variant(RET, 1), 0)) = 9919153579768171442_u64 + 6964770258737900478_u64;
Goto(bb5)
}
bb5 = {
_6.1 = _3.1;
place!(Field::<f32>(Variant(RET, 1), 3)) = _6.0;
RET = Adt20::Variant1 { fld0: 9860936310192812211_u64,fld1: (*_8),fld2: 149_u8,fld3: _3.0,fld4: 2190255845_u32,fld5: 2120076160_i32,fld6: 6970660873364139349_i64 };
_6.0 = -_3.0;
_3.1 = _6.1;
_10 = _12.1.2 | _12.1.2;
place!(Field::<u32>(Variant(RET, 1), 4)) = 1401622382_u32;
place!(Field::<f32>(Variant(RET, 1), 3)) = _6.0;
place!(Field::<u64>(Variant(RET, 1), 0)) = 16731460460548296582_u64;
(*_8) = Field::<u128>(Variant(RET, 1), 1) * Field::<u128>(Variant(RET, 1), 1);
_2 = _3.0 as i16;
_18 = _7;
_6 = (_3.0, _3.1, Field::<u128>(Variant(RET, 1), 1), _3.3);
_3.1 = [_18,_7,_18,_18,_7];
place!(Field::<u128>(Variant(RET, 1), 1)) = _10 as u128;
_9 = _12.1.2 as f32;
_12.1 = (_10, (-9223372036854775808_isize), _10);
_7 = _18;
place!(Field::<i32>(Variant(RET, 1), 5)) = (-1561966446_i32) | 993980091_i32;
_10 = -_5;
_3.3 = !_6.3;
_6 = (_9, _3.1, Field::<u128>(Variant(RET, 1), 1), _3.3);
_17 = [_6.3,_6.3];
_3.3 = (-991360968459111494_i64) as i8;
place!(Field::<u8>(Variant(RET, 1), 2)) = !140_u8;
place!(Field::<i64>(Variant(RET, 1), 6)) = 1332763036938786540_i64;
Goto(bb6)
}
bb6 = {
Call(_20 = dump_var(23_usize, 18_usize, Move(_18), 14_usize, Move(_14), 10_usize, Move(_10), 12_usize, Move(_12)), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Call(_20 = dump_var(23_usize, 4_usize, Move(_4), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn24(mut _1: [i16; 4],mut _2: i16,mut _3: *mut u128) -> i16 {
mir! {
type RET = i16;
let _4: ([i32; 4],);
let _5: f64;
let _6: u32;
let _7: i128;
let _8: usize;
let _9: i8;
let _10: isize;
let _11: &'static u128;
let _12: char;
let _13: isize;
let _14: bool;
let _15: u64;
let _16: isize;
let _17: i64;
let _18: [u8; 6];
let _19: u64;
let _20: u32;
let _21: isize;
let _22: char;
let _23: [i8; 2];
let _24: u64;
let _25: [i16; 4];
let _26: bool;
let _27: ([i32; 4],);
let _28: i64;
let _29: [i32; 4];
let _30: i8;
let _31: [i8; 1];
let _32: *const *mut i8;
let _33: i16;
let _34: [u64; 5];
let _35: bool;
let _36: i128;
let _37: i8;
let _38: f64;
let _39: i32;
let _40: *mut [i8; 3];
let _41: ([i32; 4],);
let _42: i128;
let _43: char;
let _44: isize;
let _45: char;
let _46: char;
let _47: [u8; 6];
let _48: usize;
let _49: &'static f64;
let _50: bool;
let _51: [i8; 2];
let _52: bool;
let _53: f64;
let _54: i64;
let _55: usize;
let _56: char;
let _57: f32;
let _58: Adt43;
let _59: &'static [i8; 3];
let _60: [u128; 8];
let _61: char;
let _62: ([i32; 4],);
let _63: u32;
let _64: [u64; 3];
let _65: f32;
let _66: (i16, isize, i16);
let _67: bool;
let _68: Adt27;
let _69: [i16; 4];
let _70: char;
let _71: u8;
let _72: u32;
let _73: *const &'static (&'static i16, u16, char, i64);
let _74: &'static *const *mut i8;
let _75: bool;
let _76: &'static [i8; 3];
let _77: isize;
let _78: u64;
let _79: isize;
let _80: (i64, Adt30);
let _81: isize;
let _82: char;
let _83: *const &'static f64;
let _84: u32;
let _85: Adt76;
let _86: *mut [u64; 3];
let _87: bool;
let _88: i128;
let _89: [u8; 6];
let _90: [u16; 8];
let _91: u8;
let _92: [bool; 5];
let _93: isize;
let _94: f32;
let _95: [i8; 3];
let _96: char;
let _97: bool;
let _98: *const &'static f64;
let _99: u32;
let _100: char;
let _101: bool;
let _102: &'static f64;
let _103: [u64; 3];
let _104: f32;
let _105: Adt30;
let _106: *const Adt27;
let _107: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _108: i16;
let _109: [i8; 1];
let _110: Adt73;
let _111: Adt44;
let _112: *const i32;
let _113: bool;
let _114: char;
let _115: ();
let _116: ();
{
RET = _2;
_2 = (-86463027791392628432719015200101538021_i128) as i16;
_4.0 = [(-20250633_i32),75268488_i32,1932119979_i32,(-1115983259_i32)];
_4.0 = [56520875_i32,1729424046_i32,1030848598_i32,(-763434605_i32)];
RET = !_2;
Goto(bb1)
}
bb1 = {
_4.0 = [(-749904582_i32),291054934_i32,995658161_i32,(-1445830941_i32)];
_4.0 = [(-152859251_i32),981719013_i32,2073722153_i32,2127231837_i32];
RET = !_2;
_5 = 10146697092113603440_u64 as f64;
RET = 11498_u16 as i16;
_5 = (-60_isize) as f64;
_5 = (-1446786755_i32) as f64;
_2 = RET << RET;
_1 = [_2,_2,RET,RET];
_2 = RET;
_5 = 2073893974_i32 as f64;
_1 = [_2,_2,RET,RET];
_2 = RET + RET;
RET = 53985_u16 as i16;
_1 = [_2,_2,_2,_2];
RET = false as i16;
_6 = 1510103548_u32 - 4136478903_u32;
_5 = _6 as f64;
_6 = 7206335274890993627_i64 as u32;
RET = _6 as i16;
_7 = -106505592511415038207631732467427408694_i128;
_2 = RET;
_7 = 3_usize as i128;
_2 = RET + RET;
_6 = 4_usize as u32;
_2 = !RET;
Call(RET = core::intrinsics::bswap(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = -_2;
_6 = !2525459774_u32;
_8 = !3_usize;
_2 = RET;
_4.0 = [(-1285505214_i32),687188889_i32,(-708725692_i32),(-283111475_i32)];
_5 = (-9223372036854775808_isize) as f64;
RET = _2 + _2;
RET = _2;
_5 = 106444960414445209788207269534145519837_u128 as f64;
_1 = [_2,RET,_2,RET];
Call(_7 = core::intrinsics::bswap((-89220182435572355111933939626188870629_i128)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8 = 87_u8 as usize;
_8 = !11620166986017137649_usize;
_2 = RET + RET;
RET = -_2;
RET = _2;
_4.0 = [(-664960327_i32),(-475538751_i32),1497727238_i32,1668891264_i32];
_2 = RET;
_7 = 4338813029279600442819504208767821084_i128;
_4.0 = [1492672884_i32,982685164_i32,1493179791_i32,(-1197830097_i32)];
_4.0 = [1744180976_i32,1528732887_i32,1935927982_i32,890810254_i32];
Call(_7 = core::intrinsics::transmute(_4.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_5 = 4714002777466616191_i64 as f64;
_9 = 21_i8 & 18_i8;
RET = !_2;
_10 = !9223372036854775807_isize;
_12 = '\u{14b48}';
_4.0 = [52716774_i32,(-245540850_i32),588404231_i32,(-2015504197_i32)];
_10 = !9223372036854775807_isize;
_13 = 89_u8 as isize;
RET = _2 * _2;
_6 = 1899671202_u32;
_7 = (-5618014340724124266145675083652488136_i128) & (-136476518638519087910141832643575099643_i128);
Goto(bb5)
}
bb5 = {
_4.0 = [664623866_i32,(-774245056_i32),2036150162_i32,(-69363717_i32)];
_1 = [_2,RET,_2,RET];
_6 = !116125499_u32;
_2 = RET;
_4.0 = [(-1281100010_i32),2760796_i32,(-1431679387_i32),518415300_i32];
_10 = !_13;
_14 = false;
_4.0 = [(-1433387121_i32),1862518654_i32,596026403_i32,625561399_i32];
_8 = 18130991727395035047_usize >> _2;
Goto(bb6)
}
bb6 = {
_13 = _10 << _7;
RET = _2 & _2;
_1 = [RET,_2,RET,RET];
_9 = (-21_i8) & (-74_i8);
_9 = 80_i8;
_13 = _6 as isize;
_1 = [_2,RET,RET,RET];
_6 = 1996344087_u32 * 825668926_u32;
RET = _5 as i16;
RET = _2 >> _8;
_10 = _13;
_7 = _5 as i128;
RET = _2;
Call(_9 = core::intrinsics::transmute(_14), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_14 = false ^ true;
_14 = !true;
_15 = _10 as u64;
_10 = _12 as isize;
_10 = _7 as isize;
_15 = 16627322596869531553_u64 | 653890984697616266_u64;
_13 = 290019557629791786491679617061784222974_u128 as isize;
Goto(bb8)
}
bb8 = {
_16 = 50_u8 as isize;
_14 = false;
_17 = _6 as i64;
_13 = -_16;
_1 = [RET,_2,RET,RET];
_18 = [115_u8,205_u8,152_u8,205_u8,115_u8,203_u8];
Goto(bb9)
}
bb9 = {
_20 = !_6;
_16 = _10;
_20 = _6 - _6;
_7 = 139854002914184511264417312895807738891_i128;
_12 = '\u{5a7aa}';
_13 = !_16;
_14 = !true;
_6 = !_20;
_14 = true ^ false;
_5 = _20 as f64;
_22 = _12;
_17 = 635147283400781200_i64 & 6687983425593758855_i64;
_23 = [_9,_9];
_19 = _15 & _15;
_7 = !(-141905357502604919584226960700534539503_i128);
_21 = _5 as isize;
RET = _2;
_23 = [_9,_9];
_21 = !_13;
_24 = _15 ^ _19;
_7 = (-79736992642124688645960238828170219093_i128) - (-52413466369488924722945048882158026912_i128);
_17 = !4739423262227656203_i64;
_8 = _7 as usize;
Goto(bb10)
}
bb10 = {
_25 = [RET,_2,_2,RET];
_13 = _21 | _21;
_8 = !4970183245460256217_usize;
_26 = _24 != _19;
RET = _2 & _2;
_25 = _1;
_6 = _20 & _20;
_26 = !_14;
_7 = 75728624071467391612884005080461117287_i128;
_28 = _17;
_22 = _12;
_5 = 102312312_i32 as f64;
_27 = _4;
_4 = (_27.0,);
RET = _2 + _2;
Goto(bb11)
}
bb11 = {
_27.0 = _4.0;
_29 = [120911624_i32,(-1527675022_i32),1624357699_i32,(-1710367662_i32)];
_28 = _17 ^ _17;
_23 = [_9,_9];
_7 = (-151026540684637451492053776903774481633_i128) >> _2;
_8 = 44443_u16 as usize;
_2 = _7 as i16;
Goto(bb12)
}
bb12 = {
_21 = -_16;
_5 = 30968_u16 as f64;
_4.0 = _29;
_6 = _20;
_2 = 41807_u16 as i16;
_28 = _17;
_29 = [1132732317_i32,893937443_i32,(-1148358660_i32),1146923765_i32];
_4 = (_29,);
_6 = _20 - _20;
_20 = _6 * _6;
_5 = _6 as f64;
RET = _2;
RET = -_2;
_16 = _10 * _13;
_25 = _1;
_12 = _22;
_30 = _9 ^ _9;
Goto(bb13)
}
bb13 = {
_9 = _30 - _30;
_6 = _13 as u32;
_16 = _21;
_4.0 = _29;
_20 = !_6;
_26 = !_14;
_5 = 14137_u16 as f64;
_1 = _25;
Call(_10 = fn25(), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_18 = [239_u8,235_u8,30_u8,181_u8,88_u8,142_u8];
_10 = _9 as isize;
_15 = _10 as u64;
_9 = !_30;
_30 = _19 as i8;
_28 = _17;
Goto(bb15)
}
bb15 = {
_34 = [_19,_24,_15,_24,_24];
_10 = _21;
_29 = _4.0;
_16 = !_13;
Goto(bb16)
}
bb16 = {
_37 = -_9;
_12 = _22;
Call(_8 = core::intrinsics::transmute(_15), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_38 = -_5;
_23 = [_37,_30];
_38 = _5;
Call(_37 = core::intrinsics::bswap(_9), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
_24 = _8 as u64;
_29 = [(-2029463156_i32),89729353_i32,1059534198_i32,1140988803_i32];
_16 = _13 << _13;
_10 = _16;
_16 = -_21;
_23 = [_30,_30];
_39 = !(-1574479099_i32);
_4.0 = [_39,_39,_39,_39];
_5 = _38;
_7 = -(-19401089135233474244498611678109948689_i128);
_13 = _21;
_27 = _4;
_33 = RET | _2;
_31 = [_37];
Goto(bb19)
}
bb19 = {
RET = !_33;
RET = _33 << _2;
_17 = !_28;
_41.0 = [_39,_39,_39,_39];
_13 = _21;
_44 = _13 & _21;
_12 = _22;
_36 = -_7;
_27 = (_29,);
_36 = _22 as i128;
_30 = !_37;
_43 = _12;
_21 = _44 | _16;
Goto(bb20)
}
bb20 = {
_1 = [RET,_33,_2,RET];
_12 = _22;
_19 = _7 as u64;
_18 = [18_u8,217_u8,157_u8,83_u8,83_u8,35_u8];
_38 = _5;
_42 = _36;
_15 = _24;
_33 = RET | RET;
_5 = -_38;
_25 = _1;
_4.0 = [_39,_39,_39,_39];
_6 = !_20;
_35 = _14;
_4 = (_29,);
_29 = _27.0;
_50 = _26;
_4 = (_27.0,);
_10 = _21;
_45 = _22;
_8 = 7_usize;
_45 = _12;
_49 = &_5;
_45 = _12;
_21 = _8 as isize;
_49 = &_38;
_28 = _6 as i64;
match _8 {
0 => bb1,
1 => bb12,
2 => bb19,
3 => bb18,
4 => bb21,
7 => bb23,
_ => bb22
}
}
bb21 = {
_21 = -_16;
_5 = 30968_u16 as f64;
_4.0 = _29;
_6 = _20;
_2 = 41807_u16 as i16;
_28 = _17;
_29 = [1132732317_i32,893937443_i32,(-1148358660_i32),1146923765_i32];
_4 = (_29,);
_6 = _20 - _20;
_20 = _6 * _6;
_5 = _6 as f64;
RET = _2;
RET = -_2;
_16 = _10 * _13;
_25 = _1;
_12 = _22;
_30 = _9 ^ _9;
Goto(bb13)
}
bb22 = {
_4.0 = [664623866_i32,(-774245056_i32),2036150162_i32,(-69363717_i32)];
_1 = [_2,RET,_2,RET];
_6 = !116125499_u32;
_2 = RET;
_4.0 = [(-1281100010_i32),2760796_i32,(-1431679387_i32),518415300_i32];
_10 = !_13;
_14 = false;
_4.0 = [(-1433387121_i32),1862518654_i32,596026403_i32,625561399_i32];
_8 = 18130991727395035047_usize >> _2;
Goto(bb6)
}
bb23 = {
_44 = _10 ^ _21;
_25 = [_33,_33,RET,_33];
_9 = -_37;
_51 = _23;
_4 = (_29,);
_27 = (_4.0,);
RET = -_2;
_15 = !_24;
RET = _39 as i16;
_51 = [_9,_37];
_18 = [30_u8,47_u8,175_u8,57_u8,28_u8,193_u8];
_4 = (_27.0,);
_6 = _9 as u32;
_50 = !_26;
_2 = !_33;
_10 = _13 * _44;
_39 = !1625001947_i32;
_16 = _45 as isize;
Call(_23 = core::intrinsics::transmute(_51), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_1 = [_2,_33,_2,RET];
_24 = _5 as u64;
_36 = _7 & _42;
_6 = _20;
_14 = _50;
_46 = _45;
_23 = [_30,_30];
_27 = (_29,);
_12 = _45;
_27 = (_29,);
_52 = _21 != _10;
_8 = 4_usize;
_33 = _2;
_15 = _8 as u64;
_53 = _38;
_19 = !_34[_8];
_31 = [_30];
Call(_48 = core::intrinsics::transmute(_19), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_41 = (_4.0,);
_34 = [_15,_19,_19,_19,_24];
_54 = _28;
_41.0 = [_39,_39,_39,_39];
_55 = _6 as usize;
_6 = _36 as u32;
_47[_8] = !_18[_8];
_24 = _21 as u64;
_55 = _48 & _48;
_57 = _37 as f32;
_47 = _18;
_35 = _52;
_52 = _14;
_14 = _35;
_29 = _4.0;
match _47[_8] {
0 => bb17,
1 => bb2,
2 => bb6,
3 => bb9,
4 => bb5,
5 => bb26,
28 => bb28,
_ => bb27
}
}
bb26 = {
_14 = false ^ true;
_14 = !true;
_15 = _10 as u64;
_10 = _12 as isize;
_10 = _7 as isize;
_15 = 16627322596869531553_u64 | 653890984697616266_u64;
_13 = 290019557629791786491679617061784222974_u128 as isize;
Goto(bb8)
}
bb27 = {
_44 = _10 ^ _21;
_25 = [_33,_33,RET,_33];
_9 = -_37;
_51 = _23;
_4 = (_29,);
_27 = (_4.0,);
RET = -_2;
_15 = !_24;
RET = _39 as i16;
_51 = [_9,_37];
_18 = [30_u8,47_u8,175_u8,57_u8,28_u8,193_u8];
_4 = (_27.0,);
_6 = _9 as u32;
_50 = !_26;
_2 = !_33;
_10 = _13 * _44;
_39 = !1625001947_i32;
_16 = _45 as isize;
Call(_23 = core::intrinsics::transmute(_51), ReturnTo(bb24), UnwindUnreachable())
}
bb28 = {
_47[_8] = _18[_8];
_41 = (_4.0,);
RET = _6 as i16;
_55 = _36 as usize;
_10 = !_13;
_57 = _19 as f32;
_33 = RET;
_12 = _43;
_23 = [_9,_37];
_36 = 190065438583212761004308592386112708194_u128 as i128;
_10 = -_44;
_48 = !_8;
_15 = _24 ^ _34[_8];
_53 = _38 - _38;
_27 = (_4.0,);
_8 = _55;
_18 = _47;
_37 = _30;
_8 = _55;
_43 = _22;
_60 = [203856106995820240331470279850444957767_u128,256433702061276256623294021629885898530_u128,4438578587655214791872827060971167051_u128,321210861091222331422174761791864664754_u128,138865495936062832402152309134926538327_u128,124327620317200211481366043619703521021_u128,199982172916173004202568844842091287886_u128,114938084304704726048464010054894138783_u128];
_8 = _22 as usize;
RET = !_2;
_7 = _33 as i128;
_34 = [_24,_19,_15,_19,_19];
Goto(bb29)
}
bb29 = {
_46 = _22;
_44 = _10;
_19 = !_15;
_39 = !751654315_i32;
_21 = _44 & _10;
_10 = _39 as isize;
_28 = _39 as i64;
_14 = _35 | _35;
_39 = -1314877436_i32;
Goto(bb30)
}
bb30 = {
_53 = -(*_49);
_63 = !_6;
_50 = _52;
_66.2 = _33 + RET;
_62.0 = [_39,_39,_39,_39];
_62 = (_41.0,);
_17 = 153_u8 as i64;
_61 = _22;
Goto(bb31)
}
bb31 = {
_45 = _22;
_41.0 = [_39,_39,_39,_39];
_12 = _45;
_47 = [124_u8,147_u8,35_u8,116_u8,13_u8,220_u8];
_66 = (_2, _44, _2);
_42 = !_7;
_14 = _21 == _66.1;
_54 = _17 << _21;
_14 = _30 != _30;
_19 = _15;
_61 = _12;
Goto(bb32)
}
bb32 = {
_33 = _66.0;
_51 = _23;
_49 = &_53;
_27.0 = [_39,_39,_39,_39];
_27 = _62;
_27 = (_4.0,);
_35 = _50;
_66 = (RET, _10, _2);
_21 = _10 << _15;
_66.1 = _21;
Call(_42 = core::intrinsics::transmute(_41.0), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_23 = [_37,_9];
_30 = _9 + _37;
_4.0 = [_39,_39,_39,_39];
_72 = _6;
_12 = _45;
_77 = !_21;
_17 = _54;
_1 = [_66.2,RET,_66.2,_33];
_56 = _46;
_12 = _22;
Goto(bb34)
}
bb34 = {
_35 = !_14;
_17 = !_54;
_4 = (_62.0,);
_20 = _63;
_61 = _56;
_29 = _27.0;
_48 = _8;
_26 = !_52;
_38 = -(*_49);
_31 = [_37];
_10 = _21;
_75 = _26;
_1 = [_66.0,RET,_66.2,_66.2];
_22 = _45;
_80.1 = Adt30::Variant2 { fld0: _15,fld1: _66,fld2: 21048_u16,fld3: _36 };
_67 = !_75;
_78 = Field::<u64>(Variant(_80.1, 2), 0) + Field::<u64>(Variant(_80.1, 2), 0);
_33 = _2;
place!(Field::<u16>(Variant(_80.1, 2), 2)) = !54713_u16;
_6 = _20 * _72;
_48 = _55 & _55;
_57 = _17 as f32;
_38 = (*_49);
_2 = RET;
_19 = _30 as u64;
_62.0 = [_39,_39,_39,_39];
_24 = Field::<u64>(Variant(_80.1, 2), 0);
_5 = _38;
Goto(bb35)
}
bb35 = {
_39 = !(-1871218481_i32);
Call(_80.0 = core::intrinsics::transmute(_21), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_55 = _48 << _63;
_16 = _6 as isize;
_45 = _12;
_81 = _13;
Call(_66.2 = core::intrinsics::transmute(Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1).0), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
_38 = -(*_49);
_15 = _19;
_33 = _78 as i16;
_84 = _6;
_70 = _43;
_71 = _46 as u8;
_82 = _56;
_49 = &(*_49);
_45 = _12;
_53 = _5;
Goto(bb38)
}
bb38 = {
_21 = !_16;
_63 = _84;
_84 = _63 >> Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1).0;
place!(Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1)) = _66;
_13 = _35 as isize;
Call(_55 = core::intrinsics::bswap(_48), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
_37 = _30 >> _2;
_67 = !_14;
_66.2 = !_33;
_54 = -_17;
_41.0 = [_39,_39,_39,_39];
Goto(bb40)
}
bb40 = {
_41 = (_27.0,);
_33 = Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1).0;
_84 = !_72;
_48 = _53 as usize;
Goto(bb41)
}
bb41 = {
_34 = [_78,_78,_19,_15,_15];
_8 = !_55;
_9 = !_30;
_10 = _66.1;
place!(Field::<u64>(Variant(_80.1, 2), 0)) = _53 as u64;
_5 = _55 as f64;
_68 = Adt27::Variant0 { fld0: _77 };
_67 = _52;
_77 = !_13;
_6 = _33 as u32;
_81 = _10;
_62.0 = [_39,_39,_39,_39];
_30 = _37;
_36 = !_42;
_86 = core::ptr::addr_of_mut!(_64);
_50 = !_67;
_84 = _6;
_43 = _61;
_61 = _82;
_71 = _12 as u8;
_66.0 = _66.2 * _66.2;
_22 = _12;
Goto(bb42)
}
bb42 = {
_93 = -_16;
_87 = _14;
place!(Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1)).2 = _66.0 * RET;
place!(Field::<(i16, isize, i16)>(Variant(_80.1, 2), 1)) = (_2, _21, _2);
_39 = _38 as i32;
SetDiscriminant(_80.1, 0);
_17 = _54 ^ _54;
_14 = !_87;
_8 = _55 - _55;
_95 = [_30,_30,_9];
_86 = core::ptr::addr_of_mut!((*_86));
_71 = !241_u8;
_89 = _47;
_21 = _8 as isize;
_46 = _45;
_25 = [_33,_66.2,_33,_66.0];
_20 = !_6;
_62.0 = [_39,_39,_39,_39];
Call(_69 = fn29(Move(_49), _61, _35, _21, _37, _44, _5, _35, _30, _24, _46), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_77 = _81 + _16;
_99 = _71 as u32;
_36 = _7 << _54;
_17 = -_80.0;
_68 = Adt27::Variant0 { fld0: _10 };
_23 = _51;
Goto(bb44)
}
bb44 = {
_8 = _55 ^ _55;
_9 = !_30;
_41 = (_62.0,);
Goto(bb45)
}
bb45 = {
_66.0 = !RET;
_76 = &_95;
_100 = _56;
_79 = _71 as isize;
_57 = _36 as f32;
_95 = [_9,_30,_9];
_46 = _100;
Call(_4.0 = core::intrinsics::transmute(_7), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
(*_86) = [_19,_78,_19];
_13 = _5 as isize;
_65 = 5080_u16 as f32;
_7 = _8 as i128;
_87 = _75;
_59 = &_95;
_28 = RET as i64;
SetDiscriminant(_68, 0);
_31 = [_30];
_35 = _75 & _67;
_78 = _19;
_4 = _62;
_27.0 = [_39,_39,_39,_39];
_34 = [_78,_15,_24,_15,_24];
_92 = [_35,_87,_52,_52,_35];
_64 = [_78,_15,_19];
_104 = _57;
_106 = core::ptr::addr_of!(_68);
_54 = _8 as i64;
_56 = _45;
(*_106) = Adt27::Variant0 { fld0: _66.1 };
_84 = _6 >> _77;
_95 = [_9,_30,_37];
_41 = _27;
Goto(bb47)
}
bb47 = {
_77 = _21;
_30 = _9;
_51 = [_30,_30];
_22 = _56;
(*_86) = [_24,_15,_15];
_86 = core::ptr::addr_of_mut!((*_86));
_31 = [_9];
_53 = -_5;
_80.0 = _17 >> _17;
RET = _7 as i16;
_79 = _93;
_56 = _12;
_77 = _21 - _93;
_2 = _55 as i16;
(*_86) = [_24,_24,_15];
Goto(bb48)
}
bb48 = {
Call(_115 = dump_var(24_usize, 82_usize, Move(_82), 60_usize, Move(_60), 33_usize, Move(_33), 10_usize, Move(_10)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
Call(_115 = dump_var(24_usize, 14_usize, Move(_14), 30_usize, Move(_30), 47_usize, Move(_47), 52_usize, Move(_52)), ReturnTo(bb50), UnwindUnreachable())
}
bb50 = {
Call(_115 = dump_var(24_usize, 24_usize, Move(_24), 7_usize, Move(_7), 75_usize, Move(_75), 43_usize, Move(_43)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_115 = dump_var(24_usize, 78_usize, Move(_78), 4_usize, Move(_4), 54_usize, Move(_54), 93_usize, Move(_93)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_115 = dump_var(24_usize, 62_usize, Move(_62), 23_usize, Move(_23), 56_usize, Move(_56), 87_usize, Move(_87)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_115 = dump_var(24_usize, 2_usize, Move(_2), 84_usize, Move(_84), 95_usize, Move(_95), 42_usize, Move(_42)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_115 = dump_var(24_usize, 46_usize, Move(_46), 15_usize, Move(_15), 67_usize, Move(_67), 66_usize, Move(_66)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_115 = dump_var(24_usize, 100_usize, Move(_100), 31_usize, Move(_31), 29_usize, Move(_29), 92_usize, Move(_92)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_115 = dump_var(24_usize, 35_usize, Move(_35), 41_usize, Move(_41), 13_usize, Move(_13), 45_usize, Move(_45)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn25() -> isize {
mir! {
type RET = isize;
let _1: (&'static i16, u16, char, i64);
let _2: [u16; 8];
let _3: f32;
let _4: &'static u128;
let _5: [isize; 3];
let _6: *mut i8;
let _7: bool;
let _8: &'static (f32, [bool; 5], u128, i8);
let _9: usize;
let _10: [u64; 5];
let _11: *mut *const u8;
let _12: &'static u8;
let _13: [i8; 3];
let _14: (i64, Adt30);
let _15: f32;
let _16: [bool; 5];
let _17: [isize; 3];
let _18: ([i32; 4],);
let _19: *mut [u64; 3];
let _20: isize;
let _21: [i8; 1];
let _22: isize;
let _23: isize;
let _24: [i16; 7];
let _25: i128;
let _26: (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _27: *const u8;
let _28: [isize; 3];
let _29: ([isize; 3], i8);
let _30: f64;
let _31: i64;
let _32: &'static [i8; 3];
let _33: (([i32; 4],),);
let _34: f32;
let _35: bool;
let _36: [i8; 2];
let _37: ([i32; 4],);
let _38: f64;
let _39: f64;
let _40: f64;
let _41: i128;
let _42: u16;
let _43: f32;
let _44: [u16; 4];
let _45: [bool; 5];
let _46: (i64, Adt30);
let _47: u128;
let _48: &'static u64;
let _49: isize;
let _50: bool;
let _51: *mut u128;
let _52: [i16; 4];
let _53: bool;
let _54: (f32, [bool; 5], u128, i8);
let _55: (*const u8, i16);
let _56: *mut [u64; 3];
let _57: [bool; 5];
let _58: &'static Adt20;
let _59: usize;
let _60: &'static u128;
let _61: i8;
let _62: [i8; 1];
let _63: Adt76;
let _64: u16;
let _65: (([i32; 4],),);
let _66: *const i32;
let _67: *const [u16; 4];
let _68: char;
let _69: bool;
let _70: char;
let _71: Adt44;
let _72: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _73: u128;
let _74: char;
let _75: char;
let _76: Adt76;
let _77: &'static (&'static i16, u16, char, i64);
let _78: Adt76;
let _79: char;
let _80: f64;
let _81: ((&'static i16, u16, char, i64), u32, u64, f64);
let _82: bool;
let _83: f64;
let _84: bool;
let _85: ();
let _86: ();
{
RET = -(-9223372036854775808_isize);
RET = 9223372036854775807_isize << 18853_u16;
RET = 23_u8 as isize;
_1.3 = 20251_u16 as i64;
_1.1 = 25534_u16;
RET = (-9223372036854775808_isize) - (-103_isize);
Goto(bb1)
}
bb1 = {
_1.3 = _1.1 as i64;
_1.1 = !18061_u16;
RET = 81557535993822221903373435515694604341_u128 as isize;
RET = (-9223372036854775808_isize);
_1.3 = (-7608497311156730508_i64);
RET = (-9223372036854775808_isize);
_1.2 = '\u{7fbc7}';
RET = (-9223372036854775808_isize) | 46_isize;
_1.3 = 6748027825341639122_u64 as i64;
RET = (-119_isize) | (-9223372036854775808_isize);
Goto(bb2)
}
bb2 = {
_1.3 = (-6180972605334733867_i64) >> RET;
RET = (-9223372036854775808_isize);
_1.3 = 169_u8 as i64;
RET = 4125136123_u32 as isize;
_1.2 = '\u{63c43}';
RET = (-9223372036854775808_isize);
_1.3 = (-5910767759353240651_i64) >> _1.1;
_3 = 2278246351452123596_u64 as f32;
_1.2 = '\u{10844f}';
_1.2 = '\u{96ed3}';
Goto(bb3)
}
bb3 = {
_1.1 = 45432_u16 + 17532_u16;
_1.3 = !803951985889826818_i64;
RET = 9223372036854775807_isize;
RET = (-10259847529399743063465725152941398169_i128) as isize;
Goto(bb4)
}
bb4 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{105490}';
RET = _1.2 as isize;
_1.2 = '\u{8861e}';
Goto(bb5)
}
bb5 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.1 = 9163_u16;
_1.3 = 9179847252376841429_usize as i64;
RET = _1.2 as isize;
_1.2 = '\u{10e795}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
Goto(bb6)
}
bb6 = {
_3 = 14085243677909902141_usize as f32;
RET = !9223372036854775807_isize;
_1.2 = '\u{d3181}';
_1.3 = -6484714806372274599_i64;
RET = -81_isize;
_3 = (-122_i8) as f32;
_5 = [RET,RET,RET];
_1.1 = 55_u16;
RET = !(-9223372036854775808_isize);
RET = true as isize;
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = _1.1 as isize;
RET = (-9223372036854775808_isize);
_1.1 = false as u16;
match RET {
0 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb7 = {
_1.3 = (-6180972605334733867_i64) >> RET;
RET = (-9223372036854775808_isize);
_1.3 = 169_u8 as i64;
RET = 4125136123_u32 as isize;
_1.2 = '\u{63c43}';
RET = (-9223372036854775808_isize);
_1.3 = (-5910767759353240651_i64) >> _1.1;
_3 = 2278246351452123596_u64 as f32;
_1.2 = '\u{10844f}';
_1.2 = '\u{96ed3}';
Goto(bb3)
}
bb8 = {
_1.3 = _1.1 as i64;
_1.1 = !18061_u16;
RET = 81557535993822221903373435515694604341_u128 as isize;
RET = (-9223372036854775808_isize);
_1.3 = (-7608497311156730508_i64);
RET = (-9223372036854775808_isize);
_1.2 = '\u{7fbc7}';
RET = (-9223372036854775808_isize) | 46_isize;
_1.3 = 6748027825341639122_u64 as i64;
RET = (-119_isize) | (-9223372036854775808_isize);
Goto(bb2)
}
bb9 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb10 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_1.1 = 10887834657582702112_u64 as u16;
RET = -(-9223372036854775808_isize);
RET = (-29_isize);
_9 = 5_usize << RET;
_1.1 = RET as u16;
_1.2 = '\u{baac7}';
_9 = !1598426529424530165_usize;
RET = 9223372036854775807_isize;
_5 = [RET,RET,RET];
RET = (-9223372036854775808_isize) ^ 69_isize;
RET = (-35_isize);
_10 = [8975454015132867972_u64,11954185116044876276_u64,13377720803158288734_u64,17413458623100523746_u64,16653918621635860671_u64];
RET = 4_isize | 93_isize;
RET = 67305461757848384345944183140654001202_u128 as isize;
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = !33_isize;
_9 = 12373199254141954705_u64 as usize;
RET = !68_isize;
RET = _9 as isize;
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = (-1971362722_i32) as isize;
_1.2 = '\u{f8d0f}';
Goto(bb11)
}
bb11 = {
_1.3 = _9 as i64;
RET = 101553059750233029957485885957750196447_i128 as isize;
RET = -(-122_isize);
_9 = !2_usize;
_1.2 = '\u{aabfe}';
_3 = _9 as f32;
_5 = [RET,RET,RET];
RET = (-9223372036854775808_isize);
_3 = _1.1 as f32;
RET = -(-9223372036854775808_isize);
RET = !89_isize;
_1.2 = '\u{2498b}';
_7 = false;
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_3 = 216740960234089570958507838344331505700_u128 as f32;
_1.3 = _9 as i64;
_9 = _7 as usize;
RET = 36_isize - 9223372036854775807_isize;
_14.0 = -_1.3;
_3 = 19124_i16 as f32;
_14.0 = _1.3 >> RET;
_14.1 = Adt30::Variant0 { fld0: _7 };
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_5 = [RET,RET,RET];
_13 = [65_i8,99_i8,(-87_i8)];
_7 = Field::<bool>(Variant(_14.1, 0), 0);
_9 = 1_usize;
match _10[_9] {
0 => bb12,
11954185116044876276 => bb14,
_ => bb13
}
}
bb12 = {
_1.1 = 45432_u16 + 17532_u16;
_1.3 = !803951985889826818_i64;
RET = 9223372036854775807_isize;
RET = (-10259847529399743063465725152941398169_i128) as isize;
Goto(bb4)
}
bb13 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb14 = {
_6 = core::ptr::addr_of_mut!(_13[_9]);
(*_6) = -6_i8;
_14.1 = Adt30::Variant0 { fld0: _7 };
_14.0 = _1.3 | _1.3;
_14.1 = Adt30::Variant0 { fld0: _7 };
_14.0 = _1.3;
_1.3 = _14.0;
_14.0 = !_1.3;
_13[_9] = 40_i8 * 25_i8;
_7 = !Field::<bool>(Variant(_14.1, 0), 0);
_9 = !16623051713404412400_usize;
_16 = [_7,_7,_7,_7,_7];
_10 = [10220575666015898593_u64,10501785917811867542_u64,5918175804280648185_u64,6410529597413168287_u64,13593870669973609939_u64];
(*_6) = _1.2 as i8;
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_5 = [RET,RET,RET];
(*_6) = (-53_i8) << _1.1;
_14.0 = _1.3;
_15 = 899749426_i32 as f32;
_9 = (-42542860774608572356239872275134985497_i128) as usize;
_10 = [2276820440523761180_u64,16862568427118418193_u64,1618015740552407587_u64,14413864063715654258_u64,7746008164674205210_u64];
_14.1 = Adt30::Variant0 { fld0: _7 };
(*_6) = (-52_i8) << _14.0;
RET = -9223372036854775807_isize;
_13 = [120_i8,(-126_i8),(-9_i8)];
_17 = [RET,RET,RET];
match (*_6) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb12,
4 => bb5,
5 => bb6,
340282366920938463463374607431768211330 => bb15,
_ => bb13
}
}
bb15 = {
RET = (-121_isize) >> (*_6);
_1.3 = _14.0 - _14.0;
RET = (-9223372036854775808_isize);
_9 = 796006764_i32 as usize;
SetDiscriminant(_14.1, 0);
place!(Field::<bool>(Variant(_14.1, 0), 0)) = !_7;
RET = !9223372036854775807_isize;
_1.1 = _1.2 as u16;
_3 = _15;
_3 = _15;
_16 = [_7,Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0),_7,_7];
_6 = core::ptr::addr_of_mut!((*_6));
Goto(bb16)
}
bb16 = {
_5 = [RET,RET,RET];
_10 = [2611911591648697956_u64,18270408452085745646_u64,16105504103059766440_u64,8723946296238360830_u64,2793978734278776275_u64];
_16 = [_7,_7,Field::<bool>(Variant(_14.1, 0), 0),_7,Field::<bool>(Variant(_14.1, 0), 0)];
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_7 = !Field::<bool>(Variant(_14.1, 0), 0);
_7 = Field::<bool>(Variant(_14.1, 0), 0);
_1.2 = '\u{dd6f4}';
_13 = [61_i8,(-126_i8),108_i8];
_15 = _3 + _3;
_16 = [_7,Field::<bool>(Variant(_14.1, 0), 0),_7,_7,_7];
match (*_6) {
340282366920938463463374607431768211330 => bb18,
_ => bb17
}
}
bb17 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{105490}';
RET = _1.2 as isize;
_1.2 = '\u{8861e}';
Goto(bb5)
}
bb18 = {
_16 = [Field::<bool>(Variant(_14.1, 0), 0),_7,_7,_7,_7];
_5 = [RET,RET,RET];
RET = (-26893160864607665138648962093551122008_i128) as isize;
Goto(bb19)
}
bb19 = {
place!(Field::<bool>(Variant(_14.1, 0), 0)) = !_7;
place!(Field::<bool>(Variant(_14.1, 0), 0)) = !_7;
RET = (-9223372036854775808_isize);
_6 = core::ptr::addr_of_mut!((*_6));
SetDiscriminant(_14.1, 1);
_11 = core::ptr::addr_of_mut!(place!(Field::<*const u8>(Variant(_14.1, 1), 2)));
_20 = RET;
_14.1 = Adt30::Variant0 { fld0: _7 };
_1.1 = 50647_u16;
_14.0 = -_1.3;
_1.2 = '\u{d60ae}';
_6 = core::ptr::addr_of_mut!((*_6));
RET = _20;
_5 = [_20,_20,_20];
_18.0 = [(-177352576_i32),99296346_i32,829062118_i32,(-682362526_i32)];
match (*_6) {
0 => bb18,
1 => bb2,
340282366920938463463374607431768211330 => bb21,
_ => bb20
}
}
bb20 = {
_1.3 = (-6180972605334733867_i64) >> RET;
RET = (-9223372036854775808_isize);
_1.3 = 169_u8 as i64;
RET = 4125136123_u32 as isize;
_1.2 = '\u{63c43}';
RET = (-9223372036854775808_isize);
_1.3 = (-5910767759353240651_i64) >> _1.1;
_3 = 2278246351452123596_u64 as f32;
_1.2 = '\u{10844f}';
_1.2 = '\u{96ed3}';
Goto(bb3)
}
bb21 = {
_13 = [70_i8,123_i8,0_i8];
_20 = -RET;
_13 = [43_i8,2_i8,65_i8];
_3 = _15 * _15;
_15 = -_3;
_14.0 = _9 as i64;
_14.1 = Adt30::Variant0 { fld0: _7 };
_14.1 = Adt30::Variant0 { fld0: _7 };
_14.0 = _1.3;
_21 = [(*_6)];
_6 = core::ptr::addr_of_mut!((*_6));
_16 = [_7,Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0)];
_17 = [_20,_20,RET];
_20 = !RET;
_9 = 1_usize;
Call((*_6) = core::intrinsics::bswap(97_i8), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
(*_6) = _18.0[_9] as i8;
_16[_9] = !_7;
_16[_9] = _7;
_5[_9] = RET ^ RET;
SetDiscriminant(_14.1, 2);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)) = ((-25130_i16), _5[_9], (-11840_i16));
_16[_9] = _15 <= _3;
_22 = !_5[_9];
_17 = [RET,_5[_9],_22];
_3 = _15 - _15;
_5 = [RET,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).1,_20];
_3 = _15;
place!(Field::<u16>(Variant(_14.1, 2), 2)) = _2[_9] << _17[_9];
match _10[_9] {
0 => bb6,
1 => bb11,
2 => bb10,
18270408452085745646 => bb23,
_ => bb16
}
}
bb23 = {
_25 = (-141783147483711812202605237755264237649_i128) >> _18.0[_9];
_16 = [_7,_7,_7,_7,_7];
_15 = -_3;
(*_6) = _7 as i8;
_11 = core::ptr::addr_of_mut!(_27);
_26.1 = [_7,_7,_16[_9],_16[_9],_7];
(*_6) = !(-95_i8);
_29.1 = (*_6) + (*_6);
_14.1 = Adt30::Variant0 { fld0: _7 };
_24 = [24834_i16,(-6425_i16),7518_i16,(-26759_i16),4044_i16,7615_i16,23325_i16];
_9 = _1.3 as usize;
_27 = core::ptr::addr_of!(_26.3);
(*_6) = !_29.1;
_23 = _22;
match RET {
0 => bb16,
1 => bb24,
340282366920938463454151235394913435648 => bb26,
_ => bb25
}
}
bb24 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{105490}';
RET = _1.2 as isize;
_1.2 = '\u{8861e}';
Goto(bb5)
}
bb25 = {
_1.3 = (-6180972605334733867_i64) >> RET;
RET = (-9223372036854775808_isize);
_1.3 = 169_u8 as i64;
RET = 4125136123_u32 as isize;
_1.2 = '\u{63c43}';
RET = (-9223372036854775808_isize);
_1.3 = (-5910767759353240651_i64) >> _1.1;
_3 = 2278246351452123596_u64 as f32;
_1.2 = '\u{10844f}';
_1.2 = '\u{96ed3}';
Goto(bb3)
}
bb26 = {
RET = -_23;
SetDiscriminant(_14.1, 0);
_29.0 = [_22,RET,_20];
_1.2 = '\u{e919a}';
(*_11) = core::ptr::addr_of!((*_27));
_26.3 = 8_u8;
place!(Field::<bool>(Variant(_14.1, 0), 0)) = _7;
_26.1 = [Field::<bool>(Variant(_14.1, 0), 0),_7,Field::<bool>(Variant(_14.1, 0), 0),_7,_7];
_29 = (_5, (*_6));
RET = -_20;
SetDiscriminant(_14.1, 2);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2 = 4728_i16 - (-25_i16);
_26.0 = &_26.3;
_37.0 = _18.0;
Goto(bb27)
}
bb27 = {
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = RET;
_12 = Move(_26.0);
_25 = 52422762213994265279687543047482844933_i128;
match (*_27) {
8 => bb28,
_ => bb9
}
}
bb28 = {
_28 = [_22,_22,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).1];
_29.0 = [_22,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).1,_20];
place!(Field::<u16>(Variant(_14.1, 2), 2)) = _1.1;
(*_27) = !22_u8;
RET = _20 & _22;
(*_11) = core::ptr::addr_of!((*_27));
_27 = core::ptr::addr_of!((*_27));
_30 = (*_27) as f64;
_34 = -_3;
_37.0 = [1615800058_i32,523821289_i32,1793303707_i32,(-400531900_i32)];
(*_6) = _29.1;
place!(Field::<u64>(Variant(_14.1, 2), 0)) = _20 as u64;
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2 = (-22266_i16) + (-24407_i16);
_35 = _34 >= _15;
_15 = _3;
_26.2.0 = (*_27) & (*_27);
(*_11) = core::ptr::addr_of!((*_27));
_39 = _29.1 as f64;
_17 = [RET,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).1,_23];
_41 = (*_6) as i128;
_23 = Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2 as isize;
_26.2.1 = Adt20::Variant0 { fld0: Move(_6),fld1: _14.0,fld2: Field::<u64>(Variant(_14.1, 2), 0),fld3: _9 };
_10 = [Field::<u64>(Variant(_14.1, 2), 0),Field::<u64>(Variant(_14.1, 2), 0),Field::<u64>(Variant(_26.2.1, 0), 2),Field::<u64>(Variant(_14.1, 2), 0),Field::<u64>(Variant(_14.1, 2), 0)];
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = _1.2 as isize;
_25 = !_41;
_32 = &_13;
_1.0 = &place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2;
Goto(bb29)
}
bb29 = {
_24 = [Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2];
_41 = _25 + _25;
_2 = [_1.1,Field::<u16>(Variant(_14.1, 2), 2),Field::<u16>(Variant(_14.1, 2), 2),Field::<u16>(Variant(_14.1, 2), 2),Field::<u16>(Variant(_14.1, 2), 2),_1.1,_1.1,_1.1];
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = RET;
_26.3 = _26.2.0;
match _1.1 {
0 => bb8,
1 => bb2,
2 => bb15,
3 => bb4,
4 => bb30,
5 => bb31,
50647 => bb33,
_ => bb32
}
}
bb30 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb31 = {
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = RET;
_12 = Move(_26.0);
_25 = 52422762213994265279687543047482844933_i128;
match (*_27) {
8 => bb28,
_ => bb9
}
}
bb32 = {
_25 = (-141783147483711812202605237755264237649_i128) >> _18.0[_9];
_16 = [_7,_7,_7,_7,_7];
_15 = -_3;
(*_6) = _7 as i8;
_11 = core::ptr::addr_of_mut!(_27);
_26.1 = [_7,_7,_16[_9],_16[_9],_7];
(*_6) = !(-95_i8);
_29.1 = (*_6) + (*_6);
_14.1 = Adt30::Variant0 { fld0: _7 };
_24 = [24834_i16,(-6425_i16),7518_i16,(-26759_i16),4044_i16,7615_i16,23325_i16];
_9 = _1.3 as usize;
_27 = core::ptr::addr_of!(_26.3);
(*_6) = !_29.1;
_23 = _22;
match RET {
0 => bb16,
1 => bb24,
340282366920938463454151235394913435648 => bb26,
_ => bb25
}
}
bb33 = {
_29.0 = [RET,_20,RET];
_40 = _39;
_35 = _30 >= _40;
_42 = _1.1 ^ _1.1;
_43 = _34 * _34;
_2 = [Field::<u16>(Variant(_14.1, 2), 2),Field::<u16>(Variant(_14.1, 2), 2),_42,_1.1,_1.1,Field::<u16>(Variant(_14.1, 2), 2),Field::<u16>(Variant(_14.1, 2), 2),_42];
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2 = 12560_i16 >> Field::<i64>(Variant(_26.2.1, 0), 1);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)) = (30364_i16, RET, 8874_i16);
_36 = [_29.1,_29.1];
_14.1 = Adt30::Variant0 { fld0: _35 };
_29.1 = 127_i8 + 61_i8;
(*_11) = core::ptr::addr_of!((*_27));
_31 = Field::<i64>(Variant(_26.2.1, 0), 1);
_1.3 = !_14.0;
_6 = core::ptr::addr_of_mut!(_29.1);
_21 = [(*_6)];
_36 = [(*_6),(*_6)];
_1.1 = _42 + _42;
_36 = [(*_6),(*_6)];
Goto(bb34)
}
bb34 = {
_38 = _40;
_35 = Field::<bool>(Variant(_14.1, 0), 0);
_47 = Field::<bool>(Variant(_14.1, 0), 0) as u128;
_47 = 308876280609236127929035951736694439924_u128;
_13 = [(*_6),(*_6),_29.1];
_46.1 = Adt30::Variant0 { fld0: Field::<bool>(Variant(_14.1, 0), 0) };
_40 = _39 + _38;
_15 = _43 * _34;
SetDiscriminant(_14.1, 2);
_27 = core::ptr::addr_of!(_26.3);
_33 = (_37,);
SetDiscriminant(_26.2.1, 0);
match _47 {
0 => bb20,
1 => bb31,
2 => bb28,
3 => bb35,
4 => bb36,
5 => bb37,
308876280609236127929035951736694439924 => bb39,
_ => bb38
}
}
bb35 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb36 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.1 = 9163_u16;
_1.3 = 9179847252376841429_usize as i64;
RET = _1.2 as isize;
_1.2 = '\u{10e795}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
Goto(bb6)
}
bb37 = {
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = RET;
_12 = Move(_26.0);
_25 = 52422762213994265279687543047482844933_i128;
match (*_27) {
8 => bb28,
_ => bb9
}
}
bb38 = {
_1.1 = 45432_u16 + 17532_u16;
_1.3 = !803951985889826818_i64;
RET = 9223372036854775807_isize;
RET = (-10259847529399743063465725152941398169_i128) as isize;
Goto(bb4)
}
bb39 = {
(*_6) = (-67_i8);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).0 = 16977_i16;
_5 = [RET,RET,_22];
_26.2.2 = Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0;
_26.2.2 = -Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0;
_26.3 = Field::<bool>(Variant(_46.1, 0), 0) as u8;
_26.2.1 = Adt20::Variant0 { fld0: Move(_6),fld1: _31,fld2: 14081970285846695818_u64,fld3: _9 };
_18 = _33.0;
_29 = (_28, 15_i8);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2 = Field::<usize>(Variant(_26.2.1, 0), 3) as i16;
_42 = _35 as u16;
place!(Field::<i128>(Variant(_14.1, 2), 3)) = -_41;
_42 = !_1.1;
_45 = _16;
place!(Field::<u64>(Variant(_26.2.1, 0), 2)) = _35 as u64;
_41 = Field::<i128>(Variant(_14.1, 2), 3) >> _1.3;
_14.0 = !Field::<i64>(Variant(_26.2.1, 0), 1);
_39 = _40;
_54.0 = _15;
_21 = [_29.1];
match _29.1 {
0 => bb9,
1 => bb16,
2 => bb38,
3 => bb12,
4 => bb40,
5 => bb41,
15 => bb43,
_ => bb42
}
}
bb40 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb41 = {
_25 = (-141783147483711812202605237755264237649_i128) >> _18.0[_9];
_16 = [_7,_7,_7,_7,_7];
_15 = -_3;
(*_6) = _7 as i8;
_11 = core::ptr::addr_of_mut!(_27);
_26.1 = [_7,_7,_16[_9],_16[_9],_7];
(*_6) = !(-95_i8);
_29.1 = (*_6) + (*_6);
_14.1 = Adt30::Variant0 { fld0: _7 };
_24 = [24834_i16,(-6425_i16),7518_i16,(-26759_i16),4044_i16,7615_i16,23325_i16];
_9 = _1.3 as usize;
_27 = core::ptr::addr_of!(_26.3);
(*_6) = !_29.1;
_23 = _22;
match RET {
0 => bb16,
1 => bb24,
340282366920938463454151235394913435648 => bb26,
_ => bb25
}
}
bb42 = {
_38 = _40;
_35 = Field::<bool>(Variant(_14.1, 0), 0);
_47 = Field::<bool>(Variant(_14.1, 0), 0) as u128;
_47 = 308876280609236127929035951736694439924_u128;
_13 = [(*_6),(*_6),_29.1];
_46.1 = Adt30::Variant0 { fld0: Field::<bool>(Variant(_14.1, 0), 0) };
_40 = _39 + _38;
_15 = _43 * _34;
SetDiscriminant(_14.1, 2);
_27 = core::ptr::addr_of!(_26.3);
_33 = (_37,);
SetDiscriminant(_26.2.1, 0);
match _47 {
0 => bb20,
1 => bb31,
2 => bb28,
3 => bb35,
4 => bb36,
5 => bb37,
308876280609236127929035951736694439924 => bb39,
_ => bb38
}
}
bb43 = {
_21 = [_29.1];
_14 = (Field::<i64>(Variant(_26.2.1, 0), 1), Move(_46.1));
_16 = _26.1;
_49 = _22;
_23 = _22;
_16 = [_35,_35,_7,Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0)];
_1.0 = &_26.2.2;
_18.0 = _37.0;
_38 = -_39;
_26.2.2 = (-27194_i16);
_14.0 = Field::<u64>(Variant(_26.2.1, 0), 2) as i64;
_10 = [Field::<u64>(Variant(_26.2.1, 0), 2),Field::<u64>(Variant(_26.2.1, 0), 2),Field::<u64>(Variant(_26.2.1, 0), 2),Field::<u64>(Variant(_26.2.1, 0), 2),Field::<u64>(Variant(_26.2.1, 0), 2)];
_16 = [Field::<bool>(Variant(_14.1, 0), 0),_7,_35,Field::<bool>(Variant(_14.1, 0), 0),Field::<bool>(Variant(_14.1, 0), 0)];
RET = !_22;
_14.0 = _1.3;
_18 = (_37.0,);
_1.2 = '\u{ebac0}';
_44 = [_1.1,_42,_42,_1.1];
_37 = _18;
_47 = !31070228582903656664151569296098193999_u128;
_17 = [_22,_22,_23];
_26.2.0 = !_26.3;
match _29.1 {
0 => bb29,
1 => bb34,
2 => bb35,
15 => bb44,
_ => bb16
}
}
bb44 = {
_57 = [_7,_35,_35,_35,_35];
_59 = Field::<u64>(Variant(_26.2.1, 0), 2) as usize;
_47 = 323764987520691429272262597204455203929_u128 - 36038777741138673313334663455984577780_u128;
_32 = &_13;
_30 = _40 * _39;
SetDiscriminant(_14.1, 2);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).0 = _26.2.2 << _22;
_7 = _35;
_65 = (_33.0,);
_46.0 = _1.3 - Field::<i64>(Variant(_26.2.1, 0), 1);
(*_11) = core::ptr::addr_of!(_26.2.0);
_24 = [_26.2.2,_26.2.2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0,_26.2.2];
SetDiscriminant(_26.2.1, 0);
_60 = &_47;
_65 = (_37,);
_37 = _65.0;
place!(Field::<i64>(Variant(_26.2.1, 0), 1)) = _46.0 & _14.0;
_72.1 = &_1;
_6 = core::ptr::addr_of_mut!(_61);
_46.0 = !_31;
_29.0 = _5;
_32 = &(*_32);
_54.0 = _43;
_10 = [2838090797277299139_u64,17129104020020989140_u64,14198065424085806954_u64,8103503618464464404_u64,7455678937269338473_u64];
_54.2 = RET as u128;
place!(Field::<*mut i8>(Variant(_26.2.1, 0), 0)) = core::ptr::addr_of_mut!(_29.1);
Goto(bb45)
}
bb45 = {
_29.0 = [RET,_49,RET];
_62 = _21;
_71 = Adt44::Variant2 { fld0: 9969867921629964367_u64 };
_55.1 = _1.1 as i16;
_54.2 = (*_60);
_2 = [_42,_42,_42,_42,_1.1,_42,_1.1,_42];
_26.2.2 = _59 as i16;
_15 = 9879353020416989878_u64 as f32;
_29 = (_5, (-13_i8));
_54.0 = (-1027566351_i32) as f32;
_57 = _26.1;
_64 = _42 | _42;
_11 = core::ptr::addr_of_mut!(_55.0);
_39 = _30;
_54 = (_34, _16, (*_60), _29.1);
_26.2.2 = _55.1;
_73 = (*_60) | (*_60);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)) = (_26.2.2, _49, _55.1);
_52 = [Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).2,_26.2.2];
place!(Field::<u64>(Variant(_26.2.1, 0), 2)) = !3068939666667357154_u64;
Goto(bb46)
}
bb46 = {
(*_11) = core::ptr::addr_of!((*_27));
_35 = _59 != _59;
_41 = _25;
Goto(bb47)
}
bb47 = {
_33.0.0 = [416263650_i32,1942705598_i32,(-317660585_i32),(-228860507_i32)];
_78 = Adt76::Variant0 { fld0: _55.1,fld1: _41,fld2: _30 };
match _54.3 {
0 => bb48,
1 => bb49,
2 => bb50,
3 => bb51,
4 => bb52,
5 => bb53,
340282366920938463463374607431768211443 => bb55,
_ => bb54
}
}
bb48 = {
_25 = (-141783147483711812202605237755264237649_i128) >> _18.0[_9];
_16 = [_7,_7,_7,_7,_7];
_15 = -_3;
(*_6) = _7 as i8;
_11 = core::ptr::addr_of_mut!(_27);
_26.1 = [_7,_7,_16[_9],_16[_9],_7];
(*_6) = !(-95_i8);
_29.1 = (*_6) + (*_6);
_14.1 = Adt30::Variant0 { fld0: _7 };
_24 = [24834_i16,(-6425_i16),7518_i16,(-26759_i16),4044_i16,7615_i16,23325_i16];
_9 = _1.3 as usize;
_27 = core::ptr::addr_of!(_26.3);
(*_6) = !_29.1;
_23 = _22;
match RET {
0 => bb16,
1 => bb24,
340282366920938463454151235394913435648 => bb26,
_ => bb25
}
}
bb49 = {
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).1 = RET;
_12 = Move(_26.0);
_25 = 52422762213994265279687543047482844933_i128;
match (*_27) {
8 => bb28,
_ => bb9
}
}
bb50 = {
(*_6) = (-67_i8);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).0 = 16977_i16;
_5 = [RET,RET,_22];
_26.2.2 = Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0;
_26.2.2 = -Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1).0;
_26.3 = Field::<bool>(Variant(_46.1, 0), 0) as u8;
_26.2.1 = Adt20::Variant0 { fld0: Move(_6),fld1: _31,fld2: 14081970285846695818_u64,fld3: _9 };
_18 = _33.0;
_29 = (_28, 15_i8);
place!(Field::<(i16, isize, i16)>(Variant(_14.1, 2), 1)).2 = Field::<usize>(Variant(_26.2.1, 0), 3) as i16;
_42 = _35 as u16;
place!(Field::<i128>(Variant(_14.1, 2), 3)) = -_41;
_42 = !_1.1;
_45 = _16;
place!(Field::<u64>(Variant(_26.2.1, 0), 2)) = _35 as u64;
_41 = Field::<i128>(Variant(_14.1, 2), 3) >> _1.3;
_14.0 = !Field::<i64>(Variant(_26.2.1, 0), 1);
_39 = _40;
_54.0 = _15;
_21 = [_29.1];
match _29.1 {
0 => bb9,
1 => bb16,
2 => bb38,
3 => bb12,
4 => bb40,
5 => bb41,
15 => bb43,
_ => bb42
}
}
bb51 = {
_5 = [RET,RET,RET];
_10 = [2611911591648697956_u64,18270408452085745646_u64,16105504103059766440_u64,8723946296238360830_u64,2793978734278776275_u64];
_16 = [_7,_7,Field::<bool>(Variant(_14.1, 0), 0),_7,Field::<bool>(Variant(_14.1, 0), 0)];
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_7 = !Field::<bool>(Variant(_14.1, 0), 0);
_7 = Field::<bool>(Variant(_14.1, 0), 0);
_1.2 = '\u{dd6f4}';
_13 = [61_i8,(-126_i8),108_i8];
_15 = _3 + _3;
_16 = [_7,Field::<bool>(Variant(_14.1, 0), 0),_7,_7,_7];
match (*_6) {
340282366920938463463374607431768211330 => bb18,
_ => bb17
}
}
bb52 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
RET = 9223372036854775807_isize;
_7 = !true;
_1.2 = '\u{f995e}';
_1.2 = '\u{2fb22}';
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{ccc27}';
_3 = 221_u8 as f32;
RET = (-9223372036854775808_isize);
_3 = RET as f32;
_1.1 = !63953_u16;
_1.3 = _1.2 as i64;
RET = !(-9223372036854775808_isize);
Goto(bb10)
}
bb53 = {
_1.3 = (-6180972605334733867_i64) >> RET;
RET = (-9223372036854775808_isize);
_1.3 = 169_u8 as i64;
RET = 4125136123_u32 as isize;
_1.2 = '\u{63c43}';
RET = (-9223372036854775808_isize);
_1.3 = (-5910767759353240651_i64) >> _1.1;
_3 = 2278246351452123596_u64 as f32;
_1.2 = '\u{10844f}';
_1.2 = '\u{96ed3}';
Goto(bb3)
}
bb54 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{105490}';
RET = _1.2 as isize;
_1.2 = '\u{8861e}';
Goto(bb5)
}
bb55 = {
_33.0 = (_37.0,);
SetDiscriminant(_78, 3);
_68 = _1.2;
_59 = _9;
_35 = _41 < _25;
_1.3 = Field::<i64>(Variant(_26.2.1, 0), 1);
place!(Field::<i8>(Variant(_78, 3), 3)) = _29.1 + _29.1;
_26.0 = &_26.2.0;
place!(Field::<*mut *const u8>(Variant(_78, 3), 0)) = core::ptr::addr_of_mut!((*_11));
Goto(bb56)
}
bb56 = {
_81.0.2 = _68;
match _29.1 {
340282366920938463463374607431768211443 => bb58,
_ => bb57
}
}
bb57 = {
_2 = [_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1,_1.1];
_1.2 = '\u{105490}';
RET = _1.2 as isize;
_1.2 = '\u{8861e}';
Goto(bb5)
}
bb58 = {
_77 = Move(_72.1);
_81.1 = !3753077737_u32;
(*_27) = _26.3 | _26.3;
(*_27) = _7 as u8;
_41 = _25;
Call(_75 = fn26(Move(_1.0), Move(_32)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
_84 = _35;
_81.3 = -_38;
(*_11) = Move(_27);
_51 = core::ptr::addr_of_mut!(_73);
_70 = _75;
_65 = (_37,);
_40 = _38;
_74 = _68;
_29.1 = !_54.3;
_4 = &(*_60);
_51 = core::ptr::addr_of_mut!(_54.2);
_50 = _7;
Goto(bb60)
}
bb60 = {
Call(_85 = dump_var(25_usize, 9_usize, Move(_9), 28_usize, Move(_28), 65_usize, Move(_65), 20_usize, Move(_20)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_85 = dump_var(25_usize, 84_usize, Move(_84), 64_usize, Move(_64), 31_usize, Move(_31), 36_usize, Move(_36)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_85 = dump_var(25_usize, 37_usize, Move(_37), 13_usize, Move(_13), 59_usize, Move(_59), 73_usize, Move(_73)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_85 = dump_var(25_usize, 68_usize, Move(_68), 10_usize, Move(_10), 49_usize, Move(_49), 2_usize, Move(_2)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_85 = dump_var(25_usize, 70_usize, Move(_70), 50_usize, Move(_50), 42_usize, Move(_42), 23_usize, Move(_23)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn26(mut _1: &'static i16,mut _2: &'static [i8; 3]) -> char {
mir! {
type RET = char;
let _3: u8;
let _4: [isize; 3];
let _5: (i16, isize, i16);
let _6: u16;
let _7: Adt27;
let _8: char;
let _9: u32;
let _10: i64;
let _11: f32;
let _12: f32;
let _13: [u8; 6];
let _14: u128;
let _15: char;
let _16: i128;
let _17: [i8; 1];
let _18: u64;
let _19: f64;
let _20: [u16; 4];
let _21: (i16, isize, i16);
let _22: [i16; 7];
let _23: &'static *const *mut i8;
let _24: char;
let _25: [i8; 1];
let _26: [i16; 7];
let _27: i16;
let _28: *const &'static f64;
let _29: [isize; 3];
let _30: &'static &'static ((&'static i16, u16, char, i64), u32, u64, f64);
let _31: f32;
let _32: ((&'static i16, u16, char, i64), u32, u64, f64);
let _33: usize;
let _34: u8;
let _35: Adt43;
let _36: char;
let _37: f32;
let _38: *const &'static (&'static i16, u16, char, i64);
let _39: char;
let _40: (u16, (i16, isize, i16));
let _41: [u64; 3];
let _42: usize;
let _43: [i16; 7];
let _44: f64;
let _45: i64;
let _46: i128;
let _47: ([isize; 3], i8);
let _48: &'static (i16, isize, i16);
let _49: ((u8, Adt20, i16), *mut u128);
let _50: &'static Adt20;
let _51: i128;
let _52: f64;
let _53: f32;
let _54: (&'static i16, u16, char, i64);
let _55: Adt27;
let _56: &'static u128;
let _57: isize;
let _58: [u64; 5];
let _59: [u128; 8];
let _60: *const &'static f64;
let _61: u16;
let _62: f32;
let _63: u16;
let _64: *const [u16; 4];
let _65: f64;
let _66: isize;
let _67: *mut *const u8;
let _68: (&'static i16, u16, char, i64);
let _69: i64;
let _70: isize;
let _71: char;
let _72: [i16; 7];
let _73: &'static *const *mut i8;
let _74: f32;
let _75: isize;
let _76: ([i32; 4],);
let _77: (Adt27, &'static (&'static i16, u16, char, i64), usize);
let _78: [u8; 6];
let _79: &'static &'static (i16, isize, i16);
let _80: isize;
let _81: [u16; 4];
let _82: isize;
let _83: [u64; 5];
let _84: *const Adt27;
let _85: i128;
let _86: *const i32;
let _87: u8;
let _88: char;
let _89: [i32; 4];
let _90: f64;
let _91: *const Adt27;
let _92: i32;
let _93: Adt76;
let _94: isize;
let _95: f32;
let _96: ();
let _97: ();
{
RET = '\u{dbb70}';
RET = '\u{a1e26}';
RET = '\u{b6cdb}';
RET = '\u{78246}';
_3 = 51_u8 >> (-3695133503533497994_i64);
Goto(bb1)
}
bb1 = {
RET = '\u{a1c2}';
RET = '\u{1b29}';
RET = '\u{4868d}';
RET = '\u{2ec79}';
_4 = [92_isize,1_isize,(-68_isize)];
RET = '\u{e67f7}';
_4 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_3 = 188_u8 ^ 171_u8;
RET = '\u{5389b}';
RET = '\u{8c936}';
_3 = !251_u8;
RET = '\u{73813}';
_3 = 207_u8;
_5.1 = 46_isize;
_5.0 = -(-3524_i16);
_5.0 = 883747432_u32 as i16;
_1 = &_5.0;
RET = '\u{69f7a}';
_5 = ((-20968_i16), (-9223372036854775808_isize), (-18523_i16));
_5.0 = false as i16;
_3 = 95_u8 & 249_u8;
_5.2 = -_5.0;
_5.0 = _5.2 >> _5.1;
_4 = [_5.1,_5.1,_5.1];
match _5.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = '\u{651f4}';
_5.2 = _5.0;
RET = '\u{f6e8}';
_6 = _5.2 as u16;
RET = '\u{af6a9}';
_5 = ((-17322_i16), (-9223372036854775808_isize), 20471_i16);
_5.2 = 25424987220019621818490755105135479436_u128 as i16;
RET = '\u{2c423}';
_7 = Adt27::Variant0 { fld0: _5.1 };
RET = '\u{918e5}';
_5.0 = _3 as i16;
_8 = RET;
_5 = (25079_i16, Field::<isize>(Variant(_7, 0), 0), 2893_i16);
_5 = (22670_i16, Field::<isize>(Variant(_7, 0), 0), 10624_i16);
RET = _8;
_4 = [Field::<isize>(Variant(_7, 0), 0),Field::<isize>(Variant(_7, 0), 0),_5.1];
RET = _8;
_1 = &_5.2;
match _5.2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
10624 => bb9,
_ => bb5
}
}
bb9 = {
Goto(bb10)
}
bb10 = {
_5 = ((-14930_i16), Field::<isize>(Variant(_7, 0), 0), 30683_i16);
place!(Field::<isize>(Variant(_7, 0), 0)) = !_5.1;
SetDiscriminant(_7, 1);
RET = _8;
_6 = 50074_u16 + 55307_u16;
_10 = !2546153407953357034_i64;
_5 = ((-25059_i16), 9223372036854775807_isize, (-11749_i16));
_9 = 1558114966_u32 & 4142493363_u32;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _5.0 & _5.2;
_11 = (-1096043527_i32) as f32;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _11 as i16;
_9 = !4088168199_u32;
_8 = RET;
match _5.2 {
340282366920938463463374607431768199707 => bb11,
_ => bb9
}
}
bb11 = {
_14 = 316587834943350337159019183815780064916_u128;
_5.2 = _8 as i16;
place!(Field::<u8>(Variant(_7, 1), 4)) = !_3;
_5.1 = (-9223372036854775808_isize);
_13 = [_3,_3,_3,Field::<u8>(Variant(_7, 1), 4),Field::<u8>(Variant(_7, 1), 4),Field::<u8>(Variant(_7, 1), 4)];
_12 = _11;
_16 = !(-93162821770128193560873142082774020708_i128);
_5.2 = _5.1 as i16;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).0 = Field::<u8>(Variant(_7, 1), 4) - _3;
RET = _8;
RET = _8;
_4 = [_5.1,_5.1,_5.1];
place!(Field::<f64>(Variant(_7, 1), 1)) = Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0 as f64;
place!(Field::<u64>(Variant(_7, 1), 0)) = 15805985937196476082_u64 & 13391399895896023548_u64;
_14 = Field::<f64>(Variant(_7, 1), 1) as u128;
_1 = &_5.0;
_15 = RET;
_18 = _10 as u64;
_5 = (Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2, (-15_isize), Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2);
Call(_5.0 = fn27(Field::<f64>(Variant(_7, 1), 1), RET, Field::<u64>(Variant(_7, 1), 0), _8, _4, Field::<f64>(Variant(_7, 1), 1)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_5.2 = Field::<u64>(Variant(_7, 1), 0) as i16;
_4 = [_5.1,_5.1,_5.1];
_20 = [_6,_6,_6,_6];
_6 = _14 as u16;
_10 = 105_i8 as i64;
place!(Field::<f64>(Variant(_7, 1), 1)) = _3 as f64;
_17 = [(-21_i8)];
_5.2 = 18391570896973853871_usize as i16;
_5.2 = _5.0 | _5.0;
_1 = &place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2;
place!(Field::<u64>(Variant(_7, 1), 0)) = _18 & _18;
_16 = !(-143705516034031245366415927832658328019_i128);
_19 = -Field::<f64>(Variant(_7, 1), 1);
_21.1 = -_5.1;
Call(_5.2 = core::intrinsics::transmute(_5.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_17 = [(-124_i8)];
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _5.2;
_21.2 = _5.0 ^ _5.2;
_22 = [_5.2,_21.2,_5.0,_5.0,_5.0,_21.2,_5.0];
_22 = [_5.0,_21.2,_5.2,_5.2,_5.2,_21.2,_5.0];
_14 = 324888055183394765875361434362601779587_u128;
_18 = _5.0 as u64;
_11 = _14 as f32;
_22 = [Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_21.2,_5.0,_21.2,_5.2,_21.2,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2];
_24 = _15;
_13 = [_3,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,_3,_3];
place!(Field::<u8>(Variant(_7, 1), 4)) = _9 as u8;
_4 = [_21.1,_21.1,_5.1];
_21.2 = _18 as i16;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1 = Adt20::Variant1 { fld0: _18,fld1: _14,fld2: Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,fld3: _12,fld4: _9,fld5: (-1587834210_i32),fld6: _10 };
_27 = false as i16;
RET = _8;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).0 = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).1, 1), 2);
place!(Field::<u8>(Variant(_7, 1), 4)) = Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0 - Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0;
_21.0 = Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2;
Goto(bb14)
}
bb14 = {
_6 = !15732_u16;
_5.1 = _21.1 & _21.1;
_5 = _21;
place!(Field::<i32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1, 1), 5)) = 1878317144_i32 + (-1436898250_i32);
_16 = 42113730803794255267333246560409695857_i128;
_21.0 = _5.2 - Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2;
_26 = [_21.0,_5.0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_21.2,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_5.0,_21.0];
_32.3 = Field::<f64>(Variant(_7, 1), 1) + _19;
SetDiscriminant(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).1, 0);
_19 = Field::<f64>(Variant(_7, 1), 1) - Field::<f64>(Variant(_7, 1), 1);
_5 = (Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2, _21.1, _21.0);
place!(Field::<usize>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1, 0), 3)) = 9366060518172635130_usize - 2_usize;
_25 = [(-115_i8)];
match _14 {
0 => bb10,
1 => bb2,
2 => bb12,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb15,
324888055183394765875361434362601779587 => bb17,
_ => bb16
}
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_7 = Adt27::Variant0 { fld0: _5.1 };
_32.0.1 = _6;
_13 = [_3,_3,_3,_3,_3,_3];
_25 = [(-63_i8)];
_19 = 358976434_i32 as f64;
_31 = -_12;
_5 = (_21.0, Field::<isize>(Variant(_7, 0), 0), _21.0);
_25 = [(-65_i8)];
_18 = 10391839016632510719_u64 | 12070103662190526442_u64;
_5 = _21;
_31 = -_12;
_4 = [_5.1,Field::<isize>(Variant(_7, 0), 0),_5.1];
_18 = !10785065653080018295_u64;
_32.0.2 = _8;
_22 = _26;
Goto(bb18)
}
bb18 = {
match _14 {
0 => bb8,
1 => bb3,
2 => bb19,
3 => bb20,
4 => bb21,
5 => bb22,
6 => bb23,
324888055183394765875361434362601779587 => bb25,
_ => bb24
}
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
Return()
}
bb22 = {
_6 = !15732_u16;
_5.1 = _21.1 & _21.1;
_5 = _21;
place!(Field::<i32>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1, 1), 5)) = 1878317144_i32 + (-1436898250_i32);
_16 = 42113730803794255267333246560409695857_i128;
_21.0 = _5.2 - Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2;
_26 = [_21.0,_5.0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_21.2,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_5.0,_21.0];
_32.3 = Field::<f64>(Variant(_7, 1), 1) + _19;
SetDiscriminant(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).1, 0);
_19 = Field::<f64>(Variant(_7, 1), 1) - Field::<f64>(Variant(_7, 1), 1);
_5 = (Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2, _21.1, _21.0);
place!(Field::<usize>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1, 0), 3)) = 9366060518172635130_usize - 2_usize;
_25 = [(-115_i8)];
match _14 {
0 => bb10,
1 => bb2,
2 => bb12,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb15,
324888055183394765875361434362601779587 => bb17,
_ => bb16
}
}
bb23 = {
_17 = [(-124_i8)];
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _5.2;
_21.2 = _5.0 ^ _5.2;
_22 = [_5.2,_21.2,_5.0,_5.0,_5.0,_21.2,_5.0];
_22 = [_5.0,_21.2,_5.2,_5.2,_5.2,_21.2,_5.0];
_14 = 324888055183394765875361434362601779587_u128;
_18 = _5.0 as u64;
_11 = _14 as f32;
_22 = [Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2,_21.2,_5.0,_21.2,_5.2,_21.2,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2];
_24 = _15;
_13 = [_3,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,_3,_3];
place!(Field::<u8>(Variant(_7, 1), 4)) = _9 as u8;
_4 = [_21.1,_21.1,_5.1];
_21.2 = _18 as i16;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).1 = Adt20::Variant1 { fld0: _18,fld1: _14,fld2: Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0,fld3: _12,fld4: _9,fld5: (-1587834210_i32),fld6: _10 };
_27 = false as i16;
RET = _8;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).0 = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).1, 1), 2);
place!(Field::<u8>(Variant(_7, 1), 4)) = Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0 - Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).0;
_21.0 = Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2).2;
Goto(bb14)
}
bb24 = {
_5 = ((-14930_i16), Field::<isize>(Variant(_7, 0), 0), 30683_i16);
place!(Field::<isize>(Variant(_7, 0), 0)) = !_5.1;
SetDiscriminant(_7, 1);
RET = _8;
_6 = 50074_u16 + 55307_u16;
_10 = !2546153407953357034_i64;
_5 = ((-25059_i16), 9223372036854775807_isize, (-11749_i16));
_9 = 1558114966_u32 & 4142493363_u32;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _5.0 & _5.2;
_11 = (-1096043527_i32) as f32;
place!(Field::<(u8, Adt20, i16)>(Variant(_7, 1), 2)).2 = _11 as i16;
_9 = !4088168199_u32;
_8 = RET;
match _5.2 {
340282366920938463463374607431768199707 => bb11,
_ => bb9
}
}
bb25 = {
_40 = (_6, _21);
_37 = _11 * _11;
place!(Field::<isize>(Variant(_7, 0), 0)) = _18 as isize;
_5.2 = _21.0;
_37 = -_11;
_32.0.0 = &_5.0;
_32.0.3 = !_10;
_32.0.2 = _15;
_32.0.1 = !_40.0;
_3 = 204_u8 >> _5.2;
SetDiscriminant(_7, 0);
_40.1.2 = _9 as i16;
_3 = 177_u8 | 189_u8;
_26 = [_21.0,_5.0,_5.2,_21.0,_5.2,_21.2,_5.0];
_24 = RET;
_36 = RET;
place!(Field::<isize>(Variant(_7, 0), 0)) = _14 as isize;
Goto(bb26)
}
bb26 = {
_20 = [_40.0,_40.0,_32.0.1,_32.0.1];
_39 = _24;
SetDiscriminant(_7, 1);
_7 = Adt27::Variant0 { fld0: _5.1 };
_41 = [_18,_18,_18];
_4 = [_21.1,Field::<isize>(Variant(_7, 0), 0),_21.1];
_16 = (-7827823057646864999714902866972220405_i128);
_1 = Move(_32.0.0);
_32.1 = 263134687_i32 as u32;
_8 = _24;
_40.1.0 = -_5.2;
_40.1.1 = _21.1;
_40 = (_6, _5);
RET = _24;
_32.1 = !_9;
_32.0.0 = &_40.1.0;
_26 = [_21.2,_5.2,_5.2,_21.0,_21.2,_5.2,_40.1.2];
SetDiscriminant(_7, 0);
_37 = _16 as f32;
_32.0.0 = &_21.2;
_21.2 = !_21.0;
_33 = 4205383578300289206_usize;
Goto(bb27)
}
bb27 = {
_18 = !18277827709117041898_u64;
_32.0.3 = !_10;
_42 = true as usize;
_32.0.1 = !_6;
_22 = [_40.1.0,_5.2,_21.0,_40.1.0,_5.2,_5.0,_21.0];
_42 = _33;
_17 = [88_i8];
_22 = [_21.0,_21.2,_5.0,_5.0,_5.2,_40.1.0,_5.2];
_32.2 = _18;
_5.1 = _21.1;
_43 = [_21.2,_5.2,_21.0,_40.1.0,_5.0,_40.1.0,_40.1.2];
_49.0.0 = _3 >> _21.0;
_42 = !_33;
_32.3 = _32.0.3 as f64;
_47.1 = -120_i8;
_32.0.3 = _10 ^ _10;
_51 = _9 as i128;
_34 = !_49.0.0;
_40.1.2 = _40.1.0 * _21.2;
_19 = _32.3;
_46 = _51 + _51;
_21 = (_40.1.0, _5.1, _40.1.2);
_24 = _32.0.2;
Goto(bb28)
}
bb28 = {
_8 = _24;
_7 = Adt27::Variant0 { fld0: _5.1 };
_9 = !_32.1;
_26 = [_40.1.2,_21.0,_21.0,_21.2,_21.2,_21.0,_40.1.2];
_52 = -_32.3;
_7 = Adt27::Variant0 { fld0: _40.1.1 };
_40.0 = false as u16;
Goto(bb29)
}
bb29 = {
_49.0.2 = _16 as i16;
_32.1 = !_9;
_1 = &_5.0;
_49.0.1 = Adt20::Variant1 { fld0: _18,fld1: _14,fld2: _34,fld3: _37,fld4: _32.1,fld5: (-798825129_i32),fld6: _10 };
_5.1 = _40.1.1;
_5.0 = _42 as i16;
_47.0 = _4;
_13 = [_34,_49.0.0,Field::<u8>(Variant(_49.0.1, 1), 2),Field::<u8>(Variant(_49.0.1, 1), 2),_49.0.0,_49.0.0];
_43 = [_40.1.0,_21.0,_21.2,_40.1.2,_40.1.2,_21.2,_40.1.0];
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = 546316141_i32;
_57 = Field::<isize>(Variant(_7, 0), 0) >> _5.2;
_32.0 = (Move(_1), _40.0, _15, Field::<i64>(Variant(_49.0.1, 1), 6));
_43 = [_40.1.0,_40.1.2,_21.0,_21.2,_21.0,_5.2,_21.2];
_4 = [_57,_57,_57];
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = _47.1 as i32;
_51 = !_46;
_21.1 = !_57;
_49.1 = core::ptr::addr_of_mut!(_14);
_53 = _12;
_34 = _49.0.0;
SetDiscriminant(_49.0.1, 1);
Goto(bb30)
}
bb30 = {
_5.2 = _37 as i16;
place!(Field::<f32>(Variant(_49.0.1, 1), 3)) = _31 - _31;
_55 = Adt27::Variant0 { fld0: _57 };
_56 = &_14;
_15 = _8;
match _14 {
0 => bb6,
1 => bb23,
2 => bb13,
3 => bb16,
4 => bb26,
5 => bb31,
6 => bb32,
324888055183394765875361434362601779587 => bb34,
_ => bb33
}
}
bb31 = {
Return()
}
bb32 = {
Return()
}
bb33 = {
match _14 {
0 => bb8,
1 => bb3,
2 => bb19,
3 => bb20,
4 => bb21,
5 => bb22,
6 => bb23,
324888055183394765875361434362601779587 => bb25,
_ => bb24
}
}
bb34 = {
_47 = (_4, (-104_i8));
_55 = Adt27::Variant0 { fld0: _57 };
_47 = (_4, (-36_i8));
_58 = [_32.2,_18,_18,_32.2,_32.2];
_12 = _31 * Field::<f32>(Variant(_49.0.1, 1), 3);
_21.0 = _21.2;
Goto(bb35)
}
bb35 = {
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = (-1827389526_i32);
_18 = !_32.2;
_43 = [_40.1.2,_40.1.2,_40.1.0,_40.1.2,_40.1.2,_21.0,_21.2];
_32.0.1 = _47.1 as u16;
_48 = &_5;
place!(Field::<i64>(Variant(_49.0.1, 1), 6)) = _32.0.3 | _32.0.3;
_21.0 = -_40.1.0;
match _47.1 {
0 => bb33,
1 => bb21,
2 => bb12,
3 => bb10,
340282366920938463463374607431768211420 => bb36,
_ => bb5
}
}
bb36 = {
_33 = _42;
_12 = Field::<f32>(Variant(_49.0.1, 1), 3) - Field::<f32>(Variant(_49.0.1, 1), 3);
_29 = [_57,Field::<isize>(Variant(_55, 0), 0),Field::<isize>(Variant(_55, 0), 0)];
_62 = _18 as f32;
_5.2 = _32.0.1 as i16;
place!(Field::<u128>(Variant(_49.0.1, 1), 1)) = (*_56);
_49.0.0 = _34 * _34;
_51 = _46;
place!(Field::<u8>(Variant(_49.0.1, 1), 2)) = _34 + _49.0.0;
place!(Field::<i64>(Variant(_49.0.1, 1), 6)) = !_10;
_5.1 = !_57;
_3 = _10 as u8;
_36 = _8;
_1 = &(*_48).0;
Goto(bb37)
}
bb37 = {
_16 = _51;
_26 = [_21.2,_40.1.2,_5.2,_40.1.0,_21.2,_5.2,_40.1.0];
_45 = _32.0.3;
_21.2 = -_40.1.2;
_32.0.3 = Field::<i64>(Variant(_49.0.1, 1), 6);
_12 = _40.1.2 as f32;
_32.0.2 = _39;
_1 = &_21.2;
place!(Field::<u64>(Variant(_49.0.1, 1), 0)) = _32.2;
_51 = _16 ^ _16;
_46 = _51 << Field::<isize>(Variant(_55, 0), 0);
_65 = _52 + _52;
Goto(bb38)
}
bb38 = {
_3 = _65 as u8;
_46 = _51;
_34 = Field::<u8>(Variant(_49.0.1, 1), 2) * _49.0.0;
_51 = _46;
_68.3 = !_32.0.3;
_11 = _53 + _12;
SetDiscriminant(_55, 1);
_9 = !_32.1;
_63 = _21.2 as u16;
_68.2 = RET;
_48 = &_5;
_39 = _32.0.2;
_49.0.2 = (*_48).2;
place!(Field::<u32>(Variant(_49.0.1, 1), 4)) = !_32.1;
_42 = !_33;
_63 = _32.0.1 + _32.0.1;
place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)) = (_34, Move(_49.0.1), (*_1));
_19 = -_65;
_54.2 = _39;
_3 = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 2) ^ _49.0.0;
_44 = _32.3;
match _47.1 {
0 => bb17,
1 => bb39,
2 => bb40,
3 => bb41,
340282366920938463463374607431768211420 => bb43,
_ => bb42
}
}
bb39 = {
Return()
}
bb40 = {
Return()
}
bb41 = {
_49.0.2 = _16 as i16;
_32.1 = !_9;
_1 = &_5.0;
_49.0.1 = Adt20::Variant1 { fld0: _18,fld1: _14,fld2: _34,fld3: _37,fld4: _32.1,fld5: (-798825129_i32),fld6: _10 };
_5.1 = _40.1.1;
_5.0 = _42 as i16;
_47.0 = _4;
_13 = [_34,_49.0.0,Field::<u8>(Variant(_49.0.1, 1), 2),Field::<u8>(Variant(_49.0.1, 1), 2),_49.0.0,_49.0.0];
_43 = [_40.1.0,_21.0,_21.2,_40.1.2,_40.1.2,_21.2,_40.1.0];
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = 546316141_i32;
_57 = Field::<isize>(Variant(_7, 0), 0) >> _5.2;
_32.0 = (Move(_1), _40.0, _15, Field::<i64>(Variant(_49.0.1, 1), 6));
_43 = [_40.1.0,_40.1.2,_21.0,_21.2,_21.0,_5.2,_21.2];
_4 = [_57,_57,_57];
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = _47.1 as i32;
_51 = !_46;
_21.1 = !_57;
_49.1 = core::ptr::addr_of_mut!(_14);
_53 = _12;
_34 = _49.0.0;
SetDiscriminant(_49.0.1, 1);
Goto(bb30)
}
bb42 = {
RET = '\u{a1c2}';
RET = '\u{1b29}';
RET = '\u{4868d}';
RET = '\u{2ec79}';
_4 = [92_isize,1_isize,(-68_isize)];
RET = '\u{e67f7}';
_4 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize];
_3 = 188_u8 ^ 171_u8;
RET = '\u{5389b}';
RET = '\u{8c936}';
_3 = !251_u8;
RET = '\u{73813}';
_3 = 207_u8;
_5.1 = 46_isize;
_5.0 = -(-3524_i16);
_5.0 = 883747432_u32 as i16;
_1 = &_5.0;
RET = '\u{69f7a}';
_5 = ((-20968_i16), (-9223372036854775808_isize), (-18523_i16));
_5.0 = false as i16;
_3 = 95_u8 & 249_u8;
_5.2 = -_5.0;
_5.0 = _5.2 >> _5.1;
_4 = [_5.1,_5.1,_5.1];
match _5.1 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
340282366920938463454151235394913435648 => bb8,
_ => bb7
}
}
bb43 = {
_70 = _57;
_6 = !_32.0.1;
_59 = [(*_56),(*_56),_14,(*_56),(*_56),(*_56),_14,(*_56)];
_54.1 = !_6;
_15 = _8;
_32.0.0 = Move(_1);
_32.0.1 = (*_48).1 as u16;
_54.3 = _10;
place!(Field::<u8>(Variant(_55, 1), 4)) = !_34;
_5.1 = !_21.1;
_1 = &_21.2;
_21.0 = (*_48).2 + (*_48).2;
_32.0.2 = _54.2;
place!(Field::<u64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)).1, 1), 0)) = _49.0.2 as u64;
place!(Field::<u64>(Variant(_55, 1), 0)) = Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 0) & Field::<u64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 0);
place!(Field::<u8>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)).1, 1), 2)) = _12 as u8;
_17 = _25;
_54.3 = -_10;
_21.1 = _70 >> Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).2;
_49.1 = core::ptr::addr_of_mut!((*_56));
place!(Field::<i64>(Variant(place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)).1, 1), 6)) = _68.3 + _10;
_47 = (_29, 99_i8);
_49.1 = core::ptr::addr_of_mut!((*_56));
Goto(bb44)
}
bb44 = {
_49.0.2 = _63 as i16;
_14 = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 1);
_69 = Field::<i64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 6);
place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)).0 = _39 as u8;
_32.0.3 = _65 as i64;
_14 = Field::<u128>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 1);
_40.1.2 = Field::<i64>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 6) as i16;
_51 = _16 * _46;
_49.0.1 = Move(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1);
_31 = _11;
_36 = _54.2;
_77.0 = Move(_7);
place!(Field::<usize>(Variant(_55, 1), 3)) = _33 + _42;
place!(Field::<f64>(Variant(_55, 1), 1)) = _32.3 * _52;
_54.2 = _15;
place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)).1 = Move(_49.0.1);
match _47.1 {
0 => bb45,
1 => bb46,
99 => bb48,
_ => bb47
}
}
bb45 = {
Return()
}
bb46 = {
_33 = _42;
_12 = Field::<f32>(Variant(_49.0.1, 1), 3) - Field::<f32>(Variant(_49.0.1, 1), 3);
_29 = [_57,Field::<isize>(Variant(_55, 0), 0),Field::<isize>(Variant(_55, 0), 0)];
_62 = _18 as f32;
_5.2 = _32.0.1 as i16;
place!(Field::<u128>(Variant(_49.0.1, 1), 1)) = (*_56);
_49.0.0 = _34 * _34;
_51 = _46;
place!(Field::<u8>(Variant(_49.0.1, 1), 2)) = _34 + _49.0.0;
place!(Field::<i64>(Variant(_49.0.1, 1), 6)) = !_10;
_5.1 = !_57;
_3 = _10 as u8;
_36 = _8;
_1 = &(*_48).0;
Goto(bb37)
}
bb47 = {
_20 = [_40.0,_40.0,_32.0.1,_32.0.1];
_39 = _24;
SetDiscriminant(_7, 1);
_7 = Adt27::Variant0 { fld0: _5.1 };
_41 = [_18,_18,_18];
_4 = [_21.1,Field::<isize>(Variant(_7, 0), 0),_21.1];
_16 = (-7827823057646864999714902866972220405_i128);
_1 = Move(_32.0.0);
_32.1 = 263134687_i32 as u32;
_8 = _24;
_40.1.0 = -_5.2;
_40.1.1 = _21.1;
_40 = (_6, _5);
RET = _24;
_32.1 = !_9;
_32.0.0 = &_40.1.0;
_26 = [_21.2,_5.2,_5.2,_21.0,_21.2,_5.2,_40.1.2];
SetDiscriminant(_7, 0);
_37 = _16 as f32;
_32.0.0 = &_21.2;
_21.2 = !_21.0;
_33 = 4205383578300289206_usize;
Goto(bb27)
}
bb48 = {
_52 = _19;
_54.1 = _46 as u16;
_54 = (Move(_1), _63, _39, _69);
_1 = &(*_48).2;
_49.0.1 = Move(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1);
_32.3 = _52 - _19;
_55 = Adt27::Variant0 { fld0: _70 };
SetDiscriminant(_49.0.1, 1);
_32.0.0 = &_5.0;
_44 = -_32.3;
_32.3 = _52;
_40.1.0 = !(*_48).2;
_79 = &_48;
_82 = _70;
_77.1 = &_32.0;
Goto(bb49)
}
bb49 = {
_68.3 = _54.3;
_29 = [_57,_70,_57];
_6 = _54.1;
_84 = core::ptr::addr_of!(_7);
_32.3 = -_19;
_40.1.1 = !_5.1;
_21.1 = !_57;
place!(Field::<u8>(Variant(_49.0.1, 1), 2)) = _32.0.1 as u8;
_64 = core::ptr::addr_of!(_81);
_18 = _32.2;
_43 = [(*_48).2,(*_48).2,_21.2,_21.2,(*_1),_21.0,_21.2];
_85 = _42 as i128;
Goto(bb50)
}
bb50 = {
_4 = [_57,_21.1,_21.1];
_47 = (_29, (-84_i8));
_13 = [Field::<u8>(Variant(_49.0.1, 1), 2),_34,_49.0.0,_3,_49.0.0,_3];
_39 = RET;
RET = _36;
_61 = _6 * _6;
_81 = _20;
_32.1 = _9 & _9;
_40.1.2 = -(*_48).2;
_68.2 = _39;
_1 = Move(_32.0.0);
(*_64) = _20;
_83 = [_32.2,_18,_18,_32.2,_32.2];
match _47.1 {
0 => bb39,
1 => bb28,
2 => bb16,
340282366920938463463374607431768211372 => bb51,
_ => bb24
}
}
bb51 = {
_22 = [_40.1.2,_21.0,_21.2,(*_48).2,(*_48).2,_40.1.2,_21.0];
_40 = (_63, _21);
_54.2 = _32.0.2;
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = (-1494693877_i32);
match _47.1 {
0 => bb23,
1 => bb20,
2 => bb24,
3 => bb16,
340282366920938463463374607431768211372 => bb52,
_ => bb27
}
}
bb52 = {
_53 = _21.0 as f32;
match _47.1 {
0 => bb1,
1 => bb53,
2 => bb54,
3 => bb55,
4 => bb56,
5 => bb57,
340282366920938463463374607431768211372 => bb59,
_ => bb58
}
}
bb53 = {
_22 = [_40.1.2,_21.0,_21.2,(*_48).2,(*_48).2,_40.1.2,_21.0];
_40 = (_63, _21);
_54.2 = _32.0.2;
place!(Field::<i32>(Variant(_49.0.1, 1), 5)) = (-1494693877_i32);
match _47.1 {
0 => bb23,
1 => bb20,
2 => bb24,
3 => bb16,
340282366920938463463374607431768211372 => bb52,
_ => bb27
}
}
bb54 = {
_4 = [_57,_21.1,_21.1];
_47 = (_29, (-84_i8));
_13 = [Field::<u8>(Variant(_49.0.1, 1), 2),_34,_49.0.0,_3,_49.0.0,_3];
_39 = RET;
RET = _36;
_61 = _6 * _6;
_81 = _20;
_32.1 = _9 & _9;
_40.1.2 = -(*_48).2;
_68.2 = _39;
_1 = Move(_32.0.0);
(*_64) = _20;
_83 = [_32.2,_18,_18,_32.2,_32.2];
match _47.1 {
0 => bb39,
1 => bb28,
2 => bb16,
340282366920938463463374607431768211372 => bb51,
_ => bb24
}
}
bb55 = {
_68.3 = _54.3;
_29 = [_57,_70,_57];
_6 = _54.1;
_84 = core::ptr::addr_of!(_7);
_32.3 = -_19;
_40.1.1 = !_5.1;
_21.1 = !_57;
place!(Field::<u8>(Variant(_49.0.1, 1), 2)) = _32.0.1 as u8;
_64 = core::ptr::addr_of!(_81);
_18 = _32.2;
_43 = [(*_48).2,(*_48).2,_21.2,_21.2,(*_1),_21.0,_21.2];
_85 = _42 as i128;
Goto(bb50)
}
bb56 = {
Return()
}
bb57 = {
_3 = _65 as u8;
_46 = _51;
_34 = Field::<u8>(Variant(_49.0.1, 1), 2) * _49.0.0;
_51 = _46;
_68.3 = !_32.0.3;
_11 = _53 + _12;
SetDiscriminant(_55, 1);
_9 = !_32.1;
_63 = _21.2 as u16;
_68.2 = RET;
_48 = &_5;
_39 = _32.0.2;
_49.0.2 = (*_48).2;
place!(Field::<u32>(Variant(_49.0.1, 1), 4)) = !_32.1;
_42 = !_33;
_63 = _32.0.1 + _32.0.1;
place!(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2)) = (_34, Move(_49.0.1), (*_1));
_19 = -_65;
_54.2 = _39;
_3 = Field::<u8>(Variant(Field::<(u8, Adt20, i16)>(Variant(_55, 1), 2).1, 1), 2) ^ _49.0.0;
_44 = _32.3;
match _47.1 {
0 => bb17,
1 => bb39,
2 => bb40,
3 => bb41,
340282366920938463463374607431768211420 => bb43,
_ => bb42
}
}
bb58 = {
_16 = _51;
_26 = [_21.2,_40.1.2,_5.2,_40.1.0,_21.2,_5.2,_40.1.0];
_45 = _32.0.3;
_21.2 = -_40.1.2;
_32.0.3 = Field::<i64>(Variant(_49.0.1, 1), 6);
_12 = _40.1.2 as f32;
_32.0.2 = _39;
_1 = &_21.2;
place!(Field::<u64>(Variant(_49.0.1, 1), 0)) = _32.2;
_51 = _16 ^ _16;
_46 = _51 << Field::<isize>(Variant(_55, 0), 0);
_65 = _52 + _52;
Goto(bb38)
}
bb59 = {
_66 = !_82;
place!(Field::<u32>(Variant(_49.0.1, 1), 4)) = _51 as u32;
_21.0 = (*_48).2 + _40.1.2;
_53 = -_12;
place!(Field::<i64>(Variant(_49.0.1, 1), 6)) = !_32.0.3;
SetDiscriminant(_55, 0);
_68.3 = _10 & _32.0.3;
_68.2 = _8;
_32.0.2 = _24;
_11 = _61 as f32;
_83 = [_32.2,_32.2,_32.2,_18,_18];
_84 = core::ptr::addr_of!(_77.0);
_92 = _63 as i32;
_77.0 = Adt27::Variant0 { fld0: _5.1 };
_47.0 = [_70,_57,_5.1];
_54.3 = _45;
_47.1 = 20_i8 + 53_i8;
_74 = Field::<u8>(Variant(_49.0.1, 1), 2) as f32;
_62 = _42 as f32;
_21.0 = _40.1.0;
Goto(bb60)
}
bb60 = {
Call(_96 = dump_var(26_usize, 24_usize, Move(_24), 83_usize, Move(_83), 14_usize, Move(_14), 59_usize, Move(_59)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_96 = dump_var(26_usize, 6_usize, Move(_6), 3_usize, Move(_3), 85_usize, Move(_85), 21_usize, Move(_21)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_96 = dump_var(26_usize, 9_usize, Move(_9), 40_usize, Move(_40), 57_usize, Move(_57), 43_usize, Move(_43)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_96 = dump_var(26_usize, 8_usize, Move(_8), 42_usize, Move(_42), 46_usize, Move(_46), 70_usize, Move(_70)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_96 = dump_var(26_usize, 10_usize, Move(_10), 47_usize, Move(_47), 20_usize, Move(_20), 5_usize, Move(_5)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_96 = dump_var(26_usize, 17_usize, Move(_17), 63_usize, Move(_63), 58_usize, Move(_58), 97_usize, _97), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn27(mut _1: f64,mut _2: char,mut _3: u64,mut _4: char,mut _5: [isize; 3],mut _6: f64) -> i16 {
mir! {
type RET = i16;
let _7: [u64; 5];
let _8: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _9: &'static &'static (i16, isize, i16);
let _10: (*const u8, i16);
let _11: (i16, isize, i16);
let _12: bool;
let _13: bool;
let _14: isize;
let _15: bool;
let _16: f64;
let _17: &'static &'static (i16, isize, i16);
let _18: isize;
let _19: ();
let _20: ();
{
_6 = 1885897529_i32 as f64;
RET = -(-7099_i16);
_2 = _4;
_1 = _6;
_4 = _2;
_11.0 = RET;
_1 = _6;
_7 = [_3,_3,_3,_3,_3];
RET = _3 as i16;
RET = _11.0;
_11 = (RET, (-9223372036854775808_isize), RET);
_12 = !true;
_11.2 = -RET;
_11 = (RET, 9223372036854775807_isize, RET);
_7 = [_3,_3,_3,_3,_3];
_11.1 = (-60_isize);
_6 = 1690317060_i32 as f64;
Call(_11 = fn28(_5), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = _6 * _6;
RET = !_11.0;
_6 = (-49924989_i32) as f64;
RET = _11.0 - _11.2;
_11.0 = RET * RET;
_7 = [_3,_3,_3,_3,_3];
_11 = (RET, (-57_isize), RET);
RET = _11.0;
_6 = _11.1 as f64;
_11.2 = RET;
_14 = _11.1 - _11.1;
_13 = _1 >= _6;
RET = !_11.2;
_11.1 = 8769159867874502516_usize as isize;
_10.1 = _6 as i16;
RET = _13 as i16;
_13 = _12;
_11.1 = _10.1 as isize;
_11.1 = !_14;
_11.2 = _10.1;
_4 = _2;
_16 = -_6;
_14 = 86_u8 as isize;
_10.1 = RET;
_5 = [_11.1,_11.1,_11.1];
Goto(bb2)
}
bb2 = {
Call(_19 = dump_var(27_usize, 14_usize, Move(_14), 7_usize, Move(_7), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn28(mut _1: [isize; 3]) -> (i16, isize, i16) {
mir! {
type RET = (i16, isize, i16);
let _2: isize;
let _3: u128;
let _4: [i8; 3];
let _5: f32;
let _6: (u8, Adt20, i16);
let _7: [i8; 1];
let _8: *const u8;
let _9: ([i32; 4],);
let _10: *mut u128;
let _11: isize;
let _12: f32;
let _13: [i32; 4];
let _14: [bool; 5];
let _15: ([i32; 4],);
let _16: f32;
let _17: usize;
let _18: (i16, isize, i16);
let _19: isize;
let _20: isize;
let _21: i8;
let _22: (u16, (i16, isize, i16));
let _23: [i8; 1];
let _24: [i16; 7];
let _25: [u128; 8];
let _26: &'static *const *mut i8;
let _27: &'static &'static (&'static u8, [bool; 5], (u8, Adt20, i16), u8);
let _28: ();
let _29: ();
{
RET = (9066_i16, 9223372036854775807_isize, 19272_i16);
RET = ((-1295_i16), 116_isize, 5644_i16);
RET.0 = 288024893587830863216039950155842109206_u128 as i16;
Goto(bb1)
}
bb1 = {
_4 = [(-24_i8),(-74_i8),111_i8];
RET.1 = 46_isize;
RET.1 = !111_isize;
_5 = RET.1 as f32;
_3 = !281662133872740169542400414779758551380_u128;
RET = ((-2576_i16), (-124_isize), 17945_i16);
_1 = [RET.1,RET.1,RET.1];
_3 = 322525066723964989705794143538774130288_u128;
_3 = 329520015207332520205720607265781053128_u128 >> RET.1;
_2 = _5 as isize;
RET.0 = -RET.2;
RET.2 = '\u{14c1c}' as i16;
RET.2 = true as i16;
_1 = [RET.1,_2,RET.1];
RET = (16121_i16, _2, (-1949_i16));
RET.1 = !_2;
_3 = 282363187428730159979969593763521268681_u128;
_5 = 121_i8 as f32;
RET.0 = RET.2;
_1 = [RET.1,_2,RET.1];
RET.1 = -_2;
_1 = [_2,RET.1,_2];
match RET.2 {
340282366920938463463374607431768209507 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
RET = (8255_i16, _2, 6604_i16);
RET.1 = '\u{10ade5}' as isize;
_5 = 585270673_i32 as f32;
_6.2 = RET.0 & RET.2;
RET = (_6.2, _2, _6.2);
RET = (_6.2, _2, _6.2);
_6.0 = !66_u8;
_6.2 = !RET.2;
_4 = [(-109_i8),(-33_i8),(-11_i8)];
_9.0 = [(-368050602_i32),910432806_i32,(-753729976_i32),1497023544_i32];
_6.1 = Adt20::Variant1 { fld0: 18421809465029252075_u64,fld1: _3,fld2: _6.0,fld3: _5,fld4: 2087985212_u32,fld5: (-1762420547_i32),fld6: 5228265240628396449_i64 };
_4 = [84_i8,(-39_i8),95_i8];
_5 = Field::<f32>(Variant(_6.1, 1), 3) + Field::<f32>(Variant(_6.1, 1), 3);
place!(Field::<i32>(Variant(_6.1, 1), 5)) = (-280900131_i32);
_11 = _2 << RET.2;
match Field::<u128>(Variant(_6.1, 1), 1) {
0 => bb1,
282363187428730159979969593763521268681 => bb4,
_ => bb2
}
}
bb4 = {
RET.1 = -_11;
RET.2 = 43744196100064312890447400038211086681_i128 as i16;
_7 = [8_i8];
place!(Field::<f32>(Variant(_6.1, 1), 3)) = -_5;
_11 = !RET.1;
_4 = [(-39_i8),115_i8,1_i8];
_10 = core::ptr::addr_of_mut!(place!(Field::<u128>(Variant(_6.1, 1), 1)));
_5 = -Field::<f32>(Variant(_6.1, 1), 3);
_13 = [Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5)];
RET.1 = _11 >> _2;
place!(Field::<u64>(Variant(_6.1, 1), 0)) = !17200619852413259025_u64;
place!(Field::<u32>(Variant(_6.1, 1), 4)) = (*_10) as u32;
_12 = 57710_u16 as f32;
_15 = (_9.0,);
Goto(bb5)
}
bb5 = {
(*_10) = !_3;
_11 = _2;
_15.0 = [Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5),Field::<i32>(Variant(_6.1, 1), 5)];
_10 = core::ptr::addr_of_mut!((*_10));
_5 = -Field::<f32>(Variant(_6.1, 1), 3);
RET = (_6.2, _11, _6.2);
_18 = RET;
(*_10) = _3 >> RET.0;
_18.1 = RET.1;
_17 = 3133628872063906140_i64 as usize;
_1 = [RET.1,RET.1,_11];
_13 = _15.0;
place!(Field::<u64>(Variant(_6.1, 1), 0)) = 1125168210882192968_u64;
place!(Field::<i64>(Variant(_6.1, 1), 6)) = 67_i8 as i64;
_9 = (_15.0,);
_1 = [_11,_18.1,_2];
place!(Field::<u32>(Variant(_6.1, 1), 4)) = !680693620_u32;
_8 = core::ptr::addr_of!(place!(Field::<u8>(Variant(_6.1, 1), 2)));
_3 = Field::<u128>(Variant(_6.1, 1), 1);
_4 = [(-95_i8),77_i8,98_i8];
_6.1 = Adt20::Variant1 { fld0: 12521741935208407247_u64,fld1: _3,fld2: _6.0,fld3: _5,fld4: 3367879588_u32,fld5: (-1540054530_i32),fld6: (-9190340434378549494_i64) };
place!(Field::<u64>(Variant(_6.1, 1), 0)) = !8264096611192057463_u64;
place!(Field::<i64>(Variant(_6.1, 1), 6)) = -1753000456485399945_i64;
_18.0 = Field::<u64>(Variant(_6.1, 1), 0) as i16;
_3 = !Field::<u128>(Variant(_6.1, 1), 1);
Goto(bb6)
}
bb6 = {
_20 = -_11;
place!(Field::<u128>(Variant(_6.1, 1), 1)) = _3 + _3;
RET.2 = (-79_i8) as i16;
place!(Field::<f32>(Variant(_6.1, 1), 3)) = -_5;
_14 = [false,true,false,false,false];
_22.1 = RET;
place!(Field::<u32>(Variant(_6.1, 1), 4)) = 368544711_u32 - 1255687611_u32;
_22.1.0 = _6.2 + _18.0;
RET.1 = !_2;
_11 = !_20;
Goto(bb7)
}
bb7 = {
_22.1.1 = !RET.1;
_24 = [_22.1.2,_22.1.0,_18.2,_6.2,RET.0,_22.1.0,_6.2];
RET.1 = _11;
RET.1 = _11 + _22.1.1;
place!(Field::<u8>(Variant(_6.1, 1), 2)) = (-126106802696721119908614944266461704872_i128) as u8;
_22.1.1 = _11;
_24 = [_18.0,_18.2,_18.2,RET.0,_18.2,_6.2,_18.2];
_7 = [20_i8];
_22.1.0 = RET.0 << _18.2;
_20 = RET.1;
RET.1 = _11;
Goto(bb8)
}
bb8 = {
RET.0 = _18.2 | _18.2;
Goto(bb9)
}
bb9 = {
Call(_28 = dump_var(28_usize, 17_usize, Move(_17), 24_usize, Move(_24), 11_usize, Move(_11), 9_usize, Move(_9)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_28 = dump_var(28_usize, 3_usize, Move(_3), 1_usize, Move(_1), 13_usize, Move(_13), 29_usize, _29), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn29(mut _1: &'static f64,mut _2: char,mut _3: bool,mut _4: isize,mut _5: i8,mut _6: isize,mut _7: f64,mut _8: bool,mut _9: i8,mut _10: u64,mut _11: char) -> [i16; 4] {
mir! {
type RET = [i16; 4];
let _12: (u16, (i16, isize, i16));
let _13: Adt44;
let _14: (*const u8, i16);
let _15: [u8; 6];
let _16: char;
let _17: (i16, isize, i16);
let _18: f32;
let _19: [bool; 5];
let _20: u8;
let _21: ([isize; 3], i8);
let _22: ();
let _23: ();
{
_12.1 = (2468_i16, _4, (-28055_i16));
_12.1.1 = _4;
_1 = &_7;
_12.0 = (*_1) as u16;
_1 = &_7;
_7 = 164_u8 as f64;
_1 = &_7;
_12.0 = 1691_u16;
_12.1.1 = -_4;
_14.1 = (-110712909945744310714249061020614645530_i128) as i16;
_12.1.1 = !_4;
_10 = (*_1) as u64;
_15 = [63_u8,148_u8,77_u8,74_u8,96_u8,213_u8];
RET = [_12.1.2,_12.1.2,_12.1.0,_12.1.2];
_14.1 = _12.1.0;
_17.0 = _14.1;
_14.0 = core::ptr::addr_of!(_20);
_4 = _6;
Goto(bb1)
}
bb1 = {
Call(_22 = dump_var(29_usize, 9_usize, Move(_9), 4_usize, Move(_4), 2_usize, Move(_2), 3_usize, Move(_3)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_22 = dump_var(29_usize, 6_usize, Move(_6), 23_usize, _23, 23_usize, _23, 23_usize, _23), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(7509986664038081906_u64), std::hint::black_box(32_u8), std::hint::black_box(83427315586058893738805279662593365388_u128), std::hint::black_box(120_i8), std::hint::black_box((-68650936451478709817228768360827326396_i128)), std::hint::black_box((-841674818_i32)), std::hint::black_box((-7117708532213235233_i64)));
                
            }
#[derive(Debug)]
pub enum Adt20 {
Variant0{
fld0: *mut i8,
fld1: i64,
fld2: u64,
fld3: usize,

},
Variant1{
fld0: u64,
fld1: u128,
fld2: u8,
fld3: f32,
fld4: u32,
fld5: i32,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt27 {
Variant0{
fld0: isize,

},
Variant1{
fld0: u64,
fld1: f64,
fld2: (u8, Adt20, i16),
fld3: usize,
fld4: u8,

}}
#[derive(Debug)]
pub enum Adt29 {
Variant0{
fld0: u16,
fld1: char,
fld2: isize,
fld3: i8,
fld4: (u8, Adt20, i16),
fld5: Adt27,
fld6: i64,
fld7: [bool; 5],

},
Variant1{
fld0: i64,
fld1: u16,
fld2: (*const u8, i16),
fld3: i32,

},
Variant2{
fld0: u64,
fld1: u128,
fld2: isize,
fld3: u16,
fld4: i16,
fld5: i32,

}}
#[derive(Debug)]
pub enum Adt30 {
Variant0{
fld0: bool,

},
Variant1{
fld0: i32,
fld1: u16,
fld2: *const u8,

},
Variant2{
fld0: u64,
fld1: (i16, isize, i16),
fld2: u16,
fld3: i128,

}}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: *mut i8,
fld1: (f32, [bool; 5], u128, i8),
fld2: [bool; 5],

},
Variant1{
fld0: f32,
fld1: *const u8,

},
Variant2{
fld0: i32,
fld1: i16,
fld2: (*const u8, i16),

}}
#[derive(Debug)]
pub enum Adt44 {
Variant0{
fld0: f32,
fld1: usize,
fld2: Adt27,
fld3: f64,

},
Variant1{
fld0: *const *mut i8,
fld1: [bool; 5],
fld2: usize,
fld3: *mut i8,
fld4: Adt30,

},
Variant2{
fld0: u64,

},
Variant3{
fld0: f32,
fld1: u128,
fld2: Adt30,
fld3: (u8, Adt20, i16),
fld4: Adt29,
fld5: *const *mut i8,

}}
#[derive(Debug)]
pub enum Adt73 {
Variant0{
fld0: u128,
fld1: f64,
fld2: [i16; 4],
fld3: [u16; 4],

},
Variant1{
fld0: bool,
fld1: u16,
fld2: (i16, isize, i16),
fld3: u32,
fld4: [isize; 3],
fld5: f64,
fld6: u128,

},
Variant2{
fld0: u16,
fld1: (u8, Adt20, i16),
fld2: u128,
fld3: (u16, (i16, isize, i16)),
fld4: *const *mut i8,
fld5: [bool; 5],
fld6: Adt29,

}}
#[derive(Debug)]
pub enum Adt76 {
Variant0{
fld0: i16,
fld1: i128,
fld2: f64,

},
Variant1{
fld0: f64,
fld1: (i64, Adt30),
fld2: *mut i8,
fld3: *const *mut i8,
fld4: [isize; 3],
fld5: ([i32; 4],),

},
Variant2{
fld0: (u8, Adt20, i16),
fld1: u32,
fld2: isize,
fld3: i8,
fld4: [u64; 3],
fld5: [i128; 7],

},
Variant3{
fld0: *mut *const u8,
fld1: Adt27,
fld2: isize,
fld3: i8,
fld4: Adt43,
fld5: f32,

}}

