#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u128,mut _2: char,mut _3: isize,mut _4: i8,mut _5: u16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: u32,mut _10: u64) -> i8 {
mir! {
type RET = i8;
let _11: [char; 8];
let _12: i32;
let _13: u8;
let _14: f64;
let _15: *const *mut bool;
let _16: bool;
let _17: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _18: Adt17;
let _19: u32;
let _20: Adt36;
let _21: &'static *const [u16; 3];
let _22: *const u128;
let _23: &'static mut &'static *mut bool;
let _24: (&'static mut u32, [i8; 8], u32);
let _25: isize;
let _26: &'static Adt25;
let _27: *const f64;
let _28: isize;
let _29: &'static mut u64;
let _30: *mut u8;
let _31: isize;
let _32: (u32, *mut i32, isize);
let _33: [u64; 4];
let _34: *const (u32, *mut i32, isize);
let _35: [i64; 1];
let _36: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _37: &'static *const Adt17;
let _38: *const [i8; 8];
let _39: Adt36;
let _40: *mut i32;
let _41: *const [i8; 7];
let _42: u16;
let _43: i32;
let _44: bool;
let _45: (u32, bool, u64, Adt36);
let _46: u128;
let _47: &'static Adt29;
let _48: [i8; 7];
let _49: Adt36;
let _50: &'static mut u16;
let _51: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _52: *mut [u16; 3];
let _53: u128;
let _54: i32;
let _55: f32;
let _56: *const *mut bool;
let _57: i16;
let _58: [u16; 3];
let _59: char;
let _60: i8;
let _61: &'static u32;
let _62: *mut f32;
let _63: *mut u64;
let _64: Adt23;
let _65: &'static Adt29;
let _66: &'static *const [i8; 8];
let _67: [bool; 4];
let _68: char;
let _69: isize;
let _70: u8;
let _71: ();
let _72: ();
{
_2 = '\u{4f943}';
RET = (-115_i8) - (-23_i8);
_5 = 25498_u16 >> RET;
_10 = 10309203758540499464_u64 >> RET;
_8 = -(-58017670966782351380737248794467747910_i128);
_1 = 201303303993651846932370491863416030933_u128;
RET = 126_i8 - 105_i8;
_9 = 1432722292_u32 - 111246340_u32;
_4 = RET >> _5;
_3 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_5 = 54572_u16;
_3 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_10 = 13389125291999432546_u64;
RET = !_4;
_5 = !17209_u16;
_10 = !17502477341310688311_u64;
_3 = (-9223372036854775808_isize);
_3 = 9223372036854775807_isize ^ 80_isize;
_7 = 3873353789791469364_i64 ^ (-3687985092143430924_i64);
RET = -_4;
RET = 223_u8 as i8;
_13 = RET as u8;
_4 = RET * RET;
_13 = 174_u8;
Goto(bb1)
}
bb1 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb2 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb3 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb4 = {
RET = _12 as i8;
_16 = !false;
_16 = !true;
_1 = 162524227797741271046605731740644960163_u128 ^ 210507711262867603596357563336306791325_u128;
_8 = !133706931067469661541439435008604616121_i128;
_12 = _6 + _6;
_14 = _7 as f64;
RET = _4 & _4;
_17.1.3.fld2.0 = _3 << RET;
_13 = 11711_i16 as u8;
_17.1.3.fld0.fld4 = 4631_i16;
_17.3 = _9;
_17.1.3.fld2.0 = _3 * _3;
_10 = 4023944547771939801_u64;
_17.1.3.fld1 = _2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_11 = [_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1];
_16 = !false;
_17.1.0 = !_17.3;
_17.1.3.fld2.1 = _3 > _17.1.3.fld2.0;
_13 = 119_u8 * 56_u8;
match _9 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
143258316 => bb10,
_ => bb9
}
}
bb5 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb6 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb7 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_1 = 115947717426643326089724198827090587095_u128 ^ 301674835970616435292770947914599053112_u128;
_9 = _17.1.0;
_8 = (-24276579948775083130104130894082219998_i128) << _4;
_17.1.3.fld3 = core::ptr::addr_of!(_9);
_17.1.1 = !_17.1.3.fld2.1;
_17.1.3.fld1 = _2;
_7 = (-366855084713350485_i64) ^ (-4098975722543953519_i64);
match _17.1.3.fld0.fld4 {
0 => bb7,
1 => bb3,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
4631 => bb17,
_ => bb16
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb14 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb15 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb16 = {
RET = _12 as i8;
_16 = !false;
_16 = !true;
_1 = 162524227797741271046605731740644960163_u128 ^ 210507711262867603596357563336306791325_u128;
_8 = !133706931067469661541439435008604616121_i128;
_12 = _6 + _6;
_14 = _7 as f64;
RET = _4 & _4;
_17.1.3.fld2.0 = _3 << RET;
_13 = 11711_i16 as u8;
_17.1.3.fld0.fld4 = 4631_i16;
_17.3 = _9;
_17.1.3.fld2.0 = _3 * _3;
_10 = 4023944547771939801_u64;
_17.1.3.fld1 = _2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_11 = [_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1];
_16 = !false;
_17.1.0 = !_17.3;
_17.1.3.fld2.1 = _3 > _17.1.3.fld2.0;
_13 = 119_u8 * 56_u8;
match _9 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
143258316 => bb10,
_ => bb9
}
}
bb17 = {
_6 = _12 ^ _12;
_6 = RET as i32;
_1 = !315376907543265815917367411672831642715_u128;
_18.fld0 = _5 >> _6;
_17.1.3.fld4 = Adt24::Variant3 { fld0: _13,fld1: _10 };
_17.1.3.fld2.1 = _14 >= _14;
_18.fld2 = _14 + _14;
_11 = [_2,_2,_17.1.3.fld1,_2,_2,_2,_2,_17.1.3.fld1];
Goto(bb18)
}
bb18 = {
RET = _17.1.3.fld1 as i8;
_7 = !(-5091136120841722818_i64);
match Field::<u64>(Variant(_17.1.3.fld4, 3), 1) {
0 => bb3,
1 => bb19,
4023944547771939801 => bb21,
_ => bb20
}
}
bb19 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb20 = {
_1 = 115947717426643326089724198827090587095_u128 ^ 301674835970616435292770947914599053112_u128;
_9 = _17.1.0;
_8 = (-24276579948775083130104130894082219998_i128) << _4;
_17.1.3.fld3 = core::ptr::addr_of!(_9);
_17.1.1 = !_17.1.3.fld2.1;
_17.1.3.fld1 = _2;
_7 = (-366855084713350485_i64) ^ (-4098975722543953519_i64);
match _17.1.3.fld0.fld4 {
0 => bb7,
1 => bb3,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
6 => bb15,
4631 => bb17,
_ => bb16
}
}
bb21 = {
_17.1.3.fld0.fld1 = core::ptr::addr_of_mut!(_18);
_4 = RET;
_4 = _1 as i8;
_17.1.2 = !_10;
_19 = _9 / _17.3;
_20.fld0.fld0 = 0_usize - 935777162946116366_usize;
_20.fld0.fld2 = _17.1.2;
_20.fld2.0 = _3 * _17.1.3.fld2.0;
_20.fld0.fld4 = _6 as i16;
match _17.1.3.fld0.fld4 {
0 => bb20,
1 => bb2,
2 => bb6,
3 => bb4,
4 => bb11,
5 => bb22,
6 => bb23,
4631 => bb25,
_ => bb24
}
}
bb22 = {
RET = _12 as i8;
_16 = !false;
_16 = !true;
_1 = 162524227797741271046605731740644960163_u128 ^ 210507711262867603596357563336306791325_u128;
_8 = !133706931067469661541439435008604616121_i128;
_12 = _6 + _6;
_14 = _7 as f64;
RET = _4 & _4;
_17.1.3.fld2.0 = _3 << RET;
_13 = 11711_i16 as u8;
_17.1.3.fld0.fld4 = 4631_i16;
_17.3 = _9;
_17.1.3.fld2.0 = _3 * _3;
_10 = 4023944547771939801_u64;
_17.1.3.fld1 = _2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_11 = [_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1];
_16 = !false;
_17.1.0 = !_17.3;
_17.1.3.fld2.1 = _3 > _17.1.3.fld2.0;
_13 = 119_u8 * 56_u8;
match _9 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
143258316 => bb10,
_ => bb9
}
}
bb23 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb24 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb25 = {
_17.1.3.fld2.2 = _17.1.3.fld2.1 as i16;
_20.fld3 = core::ptr::addr_of!(_18.fld1);
_20.fld0.fld0 = !3_usize;
_18.fld1 = _17.1.0;
match _10 {
0 => bb8,
1 => bb12,
2 => bb24,
4023944547771939801 => bb27,
_ => bb26
}
}
bb26 = {
RET = _12 as i8;
_16 = !false;
_16 = !true;
_1 = 162524227797741271046605731740644960163_u128 ^ 210507711262867603596357563336306791325_u128;
_8 = !133706931067469661541439435008604616121_i128;
_12 = _6 + _6;
_14 = _7 as f64;
RET = _4 & _4;
_17.1.3.fld2.0 = _3 << RET;
_13 = 11711_i16 as u8;
_17.1.3.fld0.fld4 = 4631_i16;
_17.3 = _9;
_17.1.3.fld2.0 = _3 * _3;
_10 = 4023944547771939801_u64;
_17.1.3.fld1 = _2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_11 = [_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1];
_16 = !false;
_17.1.0 = !_17.3;
_17.1.3.fld2.1 = _3 > _17.1.3.fld2.0;
_13 = 119_u8 * 56_u8;
match _9 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
143258316 => bb10,
_ => bb9
}
}
bb27 = {
_20.fld0.fld3 = !_1;
_17.1.3.fld0.fld0 = _20.fld0.fld0;
_17.1.3.fld0.fld3 = _17.1.3.fld0.fld0 as u128;
_20.fld2.1 = _16 ^ _17.1.3.fld2.1;
_20.fld2.3 = core::ptr::addr_of_mut!(_12);
_1 = _20.fld0.fld3;
place!(Field::<u64>(Variant(_17.1.3.fld4, 3), 1)) = _17.1.2 + _17.1.2;
_18.fld2 = _14;
_3 = -_20.fld2.0;
_17.1.0 = _18.fld1;
_19 = _17.1.3.fld1 as u32;
_17.1.3.fld2.1 = _18.fld0 < _18.fld0;
_17.1.1 = _17.1.2 > _20.fld0.fld2;
_20.fld4 = Move(_17.1.3.fld4);
_20.fld2.3 = core::ptr::addr_of_mut!(_6);
_20.fld3 = Move(_17.1.3.fld3);
_20.fld1 = _2;
_1 = _20.fld0.fld3 ^ _20.fld0.fld3;
_2 = _20.fld1;
_14 = _18.fld2 + _18.fld2;
Call(_14 = fn1(Move(_17.1.3.fld2), Move(_20.fld3), Field::<u64>(Variant(_20.fld4, 3), 1), Move(_17.1.3.fld0.fld1), _12, Move(_20.fld2.3), _18.fld0, _20.fld0.fld2, _6, _2), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
_20.fld3 = core::ptr::addr_of!(_17.3);
_10 = !_17.1.2;
RET = _4 ^ _4;
place!(Field::<u64>(Variant(_20.fld4, 3), 1)) = _20.fld0.fld2 & _10;
_12 = _6;
_17.1.3.fld0.fld3 = _1 >> _8;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_24.0 = &mut _18.fld1;
RET = _4;
match _17.3 {
0 => bb4,
143258316 => bb29,
_ => bb25
}
}
bb29 = {
_9 = _19 - _19;
_20.fld2.2 = _17.1.3.fld0.fld0 as i16;
_29 = &mut place!(Field::<u64>(Variant(_20.fld4, 3), 1));
_25 = !_3;
_10 = (*_29) - (*_29);
_9 = _5 as u32;
_8 = _7 as i128;
(*_29) = _10 ^ _10;
_17.1.3.fld1 = _2;
_32.0 = _19 >> (*_29);
_4 = RET | RET;
_33 = [(*_29),(*_29),(*_29),(*_29)];
_34 = core::ptr::addr_of!(_32);
(*_34).0 = _3 as u32;
(*_34).1 = core::ptr::addr_of_mut!(_6);
_17.1.3.fld2.0 = _25 ^ _3;
(*_29) = _10 * _10;
(*_34).0 = _13 as u32;
_17.1.3.fld2.2 = _17.1.3.fld0.fld4 | _17.1.3.fld0.fld4;
(*_34).2 = _25 | _17.1.3.fld2.0;
match _17.3 {
0 => bb12,
1 => bb23,
143258316 => bb31,
_ => bb30
}
}
bb30 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb31 = {
(*_34).2 = !_25;
_17.1.3.fld0.fld0 = !15641798050188654141_usize;
(*_34).1 = Move(_17.1.3.fld2.3);
_32.1 = core::ptr::addr_of_mut!(_12);
(*_34).2 = _25;
_36.1.3.fld0.fld3 = _17.1.3.fld0.fld3;
_7 = (-1355389766318456444_i64) ^ 676853456506036468_i64;
_36.1.1 = (*_34).2 != (*_34).2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_6);
_35 = [_7];
(*_34) = (_9, Move(_17.1.3.fld2.3), _25);
(*_34).2 = -_17.1.3.fld2.0;
(*_34).1 = core::ptr::addr_of_mut!(_12);
(*_34).1 = core::ptr::addr_of_mut!(_6);
_6 = _12 & _12;
(*_34).1 = core::ptr::addr_of_mut!(_6);
_17.1.3.fld4 = Adt24::Variant3 { fld0: _13,fld1: (*_29) };
match _17.1.3.fld0.fld4 {
0 => bb32,
1 => bb33,
4631 => bb35,
_ => bb34
}
}
bb32 = {
_3 = _14 as isize;
_9 = 143258316_u32;
_4 = RET - RET;
RET = _4 & _4;
_10 = !3184186198708152985_u64;
_14 = 1472782123692177153_usize as f64;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
_6 = _12 - _12;
_8 = -(-112570821524434734269333956041515045867_i128);
_3 = _8 as isize;
_6 = _8 as i32;
_3 = 9223372036854775807_isize + 9223372036854775807_isize;
RET = _4;
_11 = [_2,_2,_2,_2,_2,_2,_2,_2];
match _1 {
0 => bb1,
201303303993651846932370491863416030933 => bb4,
_ => bb3
}
}
bb33 = {
_20.fld0.fld3 = !_1;
_17.1.3.fld0.fld0 = _20.fld0.fld0;
_17.1.3.fld0.fld3 = _17.1.3.fld0.fld0 as u128;
_20.fld2.1 = _16 ^ _17.1.3.fld2.1;
_20.fld2.3 = core::ptr::addr_of_mut!(_12);
_1 = _20.fld0.fld3;
place!(Field::<u64>(Variant(_17.1.3.fld4, 3), 1)) = _17.1.2 + _17.1.2;
_18.fld2 = _14;
_3 = -_20.fld2.0;
_17.1.0 = _18.fld1;
_19 = _17.1.3.fld1 as u32;
_17.1.3.fld2.1 = _18.fld0 < _18.fld0;
_17.1.1 = _17.1.2 > _20.fld0.fld2;
_20.fld4 = Move(_17.1.3.fld4);
_20.fld2.3 = core::ptr::addr_of_mut!(_6);
_20.fld3 = Move(_17.1.3.fld3);
_20.fld1 = _2;
_1 = _20.fld0.fld3 ^ _20.fld0.fld3;
_2 = _20.fld1;
_14 = _18.fld2 + _18.fld2;
Call(_14 = fn1(Move(_17.1.3.fld2), Move(_20.fld3), Field::<u64>(Variant(_20.fld4, 3), 1), Move(_17.1.3.fld0.fld1), _12, Move(_20.fld2.3), _18.fld0, _20.fld0.fld2, _6, _2), ReturnTo(bb28), UnwindUnreachable())
}
bb34 = {
_12 = (-1724171692_i32) >> _1;
_2 = '\u{10bd9}';
_10 = 8007995973464592553_u64;
RET = _4;
_12 = _1 as i32;
_2 = '\u{eb1b7}';
_5 = 46465_u16 * 27045_u16;
RET = _4;
_12 = 787913189_i32 >> _13;
_14 = _12 as f64;
_7 = (-7192227156873004656_i64) + 4822127919030761866_i64;
_6 = _12 >> _3;
_14 = _3 as f64;
Goto(bb2)
}
bb35 = {
_36.3 = _32.0 ^ (*_34).0;
_25 = (*_34).2;
_19 = !_9;
match _17.3 {
0 => bb14,
1 => bb2,
2 => bb17,
3 => bb13,
4 => bb8,
5 => bb16,
6 => bb34,
143258316 => bb37,
_ => bb36
}
}
bb36 = {
_17.1.3.fld2.2 = _17.1.3.fld2.1 as i16;
_20.fld3 = core::ptr::addr_of!(_18.fld1);
_20.fld0.fld0 = !3_usize;
_18.fld1 = _17.1.0;
match _10 {
0 => bb8,
1 => bb12,
2 => bb24,
4023944547771939801 => bb27,
_ => bb26
}
}
bb37 = {
(*_34).2 = _17.1.3.fld2.0;
_39.fld2.0 = (*_34).2 ^ _25;
_38 = core::ptr::addr_of!(_24.1);
_17.1.3.fld0.fld2 = !(*_29);
_36.3 = (*_34).0 >> _25;
_39.fld3 = core::ptr::addr_of!((*_34).0);
(*_34).1 = core::ptr::addr_of_mut!(_6);
_13 = Field::<u8>(Variant(_17.1.3.fld4, 3), 0) | Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
_36.1.3.fld2.2 = _17.1.3.fld2.2 << (*_34).2;
(*_34).1 = core::ptr::addr_of_mut!(_12);
_17.1.1 = _36.1.1;
(*_34).1 = core::ptr::addr_of_mut!(_6);
_30 = core::ptr::addr_of_mut!(_13);
_24.2 = (*_34).0;
Call((*_34).0 = core::intrinsics::bswap(_36.3), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
(*_38) = [_4,_4,_4,RET,RET,_4,_4,RET];
_8 = 32828986952258738125422245355323851765_i128 & (-43939652216327485987409611463979391262_i128);
_28 = !(*_34).2;
(*_29) = _10 + Field::<u64>(Variant(_17.1.3.fld4, 3), 1);
_39.fld1 = _17.1.3.fld1;
_17.1.3.fld2 = (_28, _17.1.1, _36.1.3.fld2.2, Move((*_34).1));
_24.0 = &mut (*_34).0;
_36.1.2 = (*_29) * (*_29);
_2 = _39.fld1;
_45.3.fld2.1 = !_36.1.1;
_45.3.fld2 = ((*_34).2, _17.1.3.fld2.1, _36.1.3.fld2.2, Move(_17.1.3.fld2.3));
(*_34).1 = core::ptr::addr_of_mut!(_12);
(*_34).2 = _25 << (*_30);
_39.fld0.fld4 = !_36.1.3.fld2.2;
_36.1.3.fld2.3 = core::ptr::addr_of_mut!(_6);
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_43);
_12 = -_6;
_45.3.fld0.fld3 = (*_34).2 as u128;
(*_30) = !Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
Goto(bb39)
}
bb39 = {
(*_38) = [RET,RET,_4,_4,_4,_4,RET,_4];
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
_17.1.3.fld2.2 = -_45.3.fld2.2;
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0) * Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
(*_34).2 = _28;
(*_29) = _36.1.2 + _36.1.2;
(*_29) = !_36.1.2;
(*_34).2 = !_3;
(*_38) = [RET,_4,RET,RET,_4,_4,_4,_4];
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0) - Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
Goto(bb40)
}
bb40 = {
(*_34).1 = Move(_45.3.fld2.3);
(*_34).2 = _7 as isize;
_36.1.3.fld2.3 = Move((*_34).1);
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0) - Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
_36.1.3.fld2.0 = !_25;
(*_30) = !Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
(*_34).2 = _39.fld2.0;
_39.fld2.2 = _45.3.fld2.2;
(*_38) = [_4,_4,_4,_4,_4,_4,_4,_4];
(*_38) = [_4,RET,_4,RET,_4,_4,RET,_4];
(*_34).1 = core::ptr::addr_of_mut!(_6);
(*_38) = [_4,_4,_4,_4,_4,_4,RET,RET];
_49.fld2 = Move(_17.1.3.fld2);
_39.fld2.3 = Move((*_34).1);
_49.fld0.fld0 = !_17.1.3.fld0.fld0;
_39.fld2.1 = _45.3.fld2.1;
_14 = _8 as f64;
_39.fld0.fld0 = _17.1.3.fld0.fld0;
(*_34).1 = core::ptr::addr_of_mut!(_12);
(*_29) = _36.1.2 - _36.1.2;
(*_34).1 = core::ptr::addr_of_mut!(_43);
Call(place!(Field::<u8>(Variant(_17.1.3.fld4, 3), 0)) = core::intrinsics::bswap((*_30)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
_49.fld0.fld4 = _36.1.3.fld2.2 | _36.1.3.fld2.2;
(*_38) = [_4,_4,_4,RET,_4,_4,_4,RET];
_42 = _5 << (*_29);
_51.3 = _8 as u32;
_6 = _12;
_43 = _6 << (*_34).2;
(*_34).1 = core::ptr::addr_of_mut!(_43);
(*_38) = [_4,_4,RET,_4,_4,_4,_4,RET];
(*_38) = [RET,_4,_4,RET,RET,RET,_4,_4];
(*_29) = _4 as u64;
_48 = [RET,RET,_4,_4,RET,_4,_4];
(*_30) = Field::<u8>(Variant(_17.1.3.fld4, 3), 0) >> _45.3.fld2.2;
(*_34).1 = core::ptr::addr_of_mut!(_12);
_51.1.3.fld2.2 = _49.fld0.fld4;
_51.1.3.fld0.fld3 = _45.3.fld0.fld3 - _36.1.3.fld0.fld3;
_53 = _45.3.fld0.fld3 | _17.1.3.fld0.fld3;
_9 = _24.2;
(*_34).2 = (*_30) as isize;
(*_34).2 = _39.fld2.0;
(*_30) = !Field::<u8>(Variant(_17.1.3.fld4, 3), 0);
_36.1.3.fld2.1 = !_17.1.1;
_35 = [_7];
(*_38) = [_4,_4,_4,_4,_4,RET,RET,_4];
(*_34).2 = _39.fld2.0 & _3;
_45.3.fld4 = Move(_17.1.3.fld4);
(*_38) = [_4,RET,_4,RET,_4,RET,_4,RET];
_16 = _39.fld2.1 & _45.3.fld2.1;
Goto(bb42)
}
bb42 = {
_51.1.3.fld2.0 = -(*_34).2;
_45.3.fld1 = _39.fld1;
_41 = core::ptr::addr_of!(_48);
(*_34).1 = core::ptr::addr_of_mut!(_43);
_45.3.fld1 = _17.1.3.fld1;
(*_34).1 = core::ptr::addr_of_mut!(_12);
_51.1.3.fld2.0 = -(*_34).2;
(*_30) = _16 as u8;
Goto(bb43)
}
bb43 = {
_36.1.3.fld0.fld3 = _53 * _45.3.fld0.fld3;
_51.1.3.fld0.fld2 = (*_29);
_51.1.3.fld4 = Move(_45.3.fld4);
_36.1.3.fld2.3 = core::ptr::addr_of_mut!(_6);
_19 = _17.1.3.fld1 as u32;
(*_29) = _36.1.2 + _10;
_17.1.1 = (*_29) > Field::<u64>(Variant(_51.1.3.fld4, 3), 1);
_49.fld0.fld3 = !_53;
_51.1.3.fld0.fld2 = (*_29) ^ (*_29);
_46 = !_36.1.3.fld0.fld3;
(*_41) = [RET,RET,_4,_4,RET,_4,_4];
(*_30) = _42 as u8;
_39.fld2.1 = !_17.1.1;
_45.3.fld2.3 = core::ptr::addr_of_mut!(_12);
(*_34).2 = _36.1.3.fld2.0 | _45.3.fld2.0;
(*_34).2 = -_3;
_53 = !_46;
(*_34).2 = (*_29) as isize;
_22 = core::ptr::addr_of!(_17.1.3.fld0.fld3);
(*_38) = [RET,_4,RET,_4,_4,_4,_4,_4];
(*_41) = [RET,_4,RET,_4,_4,RET,_4];
(*_34).1 = core::ptr::addr_of_mut!(_6);
Goto(bb44)
}
bb44 = {
(*_38) = [_4,RET,_4,_4,_4,_4,_4,RET];
_49.fld2.0 = _45.3.fld1 as isize;
Goto(bb45)
}
bb45 = {
_49.fld3 = core::ptr::addr_of!(_9);
_45.3.fld0.fld3 = _8 as u128;
(*_22) = _49.fld0.fld3 >> (*_30);
_36.1.3.fld2.0 = (*_34).2;
(*_30) = (*_29) as u8;
(*_22) = _46;
(*_34).1 = core::ptr::addr_of_mut!(_12);
(*_30) = Field::<u8>(Variant(_51.1.3.fld4, 3), 0) + Field::<u8>(Variant(_51.1.3.fld4, 3), 0);
(*_34).1 = core::ptr::addr_of_mut!(_54);
(*_30) = (*_34).2 as u8;
_13 = !Field::<u8>(Variant(_51.1.3.fld4, 3), 0);
(*_41) = [_4,_4,_4,RET,_4,_4,_4];
(*_41) = [_4,_4,_4,_4,RET,_4,RET];
_43 = _4 as i32;
(*_34).2 = _39.fld2.0;
(*_30) = !Field::<u8>(Variant(_51.1.3.fld4, 3), 0);
(*_41) = [_4,_4,_4,_4,_4,_4,_4];
(*_34).2 = _25 >> (*_22);
_45.3.fld4 = Adt24::Variant3 { fld0: Field::<u8>(Variant(_51.1.3.fld4, 3), 0),fld1: _51.1.3.fld0.fld2 };
_45.3.fld2.1 = !_17.1.1;
(*_38) = [_4,RET,RET,RET,_4,_4,_4,_4];
_46 = !(*_22);
_36.3 = !_17.3;
_39.fld4 = Adt24::Variant3 { fld0: (*_30),fld1: _17.1.3.fld0.fld2 };
_17.1.3.fld3 = core::ptr::addr_of!(_36.1.0);
(*_30) = (*_34).2 as u8;
_51.1.3.fld0.fld0 = _53 as usize;
_36.1.3.fld4 = Move(_45.3.fld4);
(*_29) = _36.1.2;
(*_41) = [_4,_4,_4,_4,_4,_4,_4];
Goto(bb46)
}
bb46 = {
(*_38) = [_4,_4,_4,_4,_4,_4,_4,RET];
(*_22) = _36.1.3.fld0.fld3 << (*_30);
place!(Field::<u64>(Variant(_39.fld4, 3), 1)) = (*_29) ^ (*_29);
(*_29) = !Field::<u64>(Variant(_39.fld4, 3), 1);
_5 = _42 << (*_34).2;
_50 = &mut _42;
_51.1.1 = !_39.fld2.1;
_36.1.3.fld2.0 = (*_34).2 + (*_34).2;
(*_50) = _5 ^ _5;
(*_41) = [RET,RET,RET,_4,RET,_4,_4];
_45.1 = !_17.1.1;
_49.fld2 = Move(_36.1.3.fld2);
_51.1.3.fld2.3 = Move(_49.fld2.3);
_17.2 = core::ptr::addr_of_mut!(_55);
(*_34).2 = !_51.1.3.fld2.0;
(*_38) = [_4,_4,_4,RET,_4,_4,_4,RET];
match _17.1.3.fld0.fld4 {
0 => bb18,
1 => bb4,
2 => bb35,
3 => bb47,
4631 => bb49,
_ => bb48
}
}
bb47 = {
Return()
}
bb48 = {
RET = _12 as i8;
_16 = !false;
_16 = !true;
_1 = 162524227797741271046605731740644960163_u128 ^ 210507711262867603596357563336306791325_u128;
_8 = !133706931067469661541439435008604616121_i128;
_12 = _6 + _6;
_14 = _7 as f64;
RET = _4 & _4;
_17.1.3.fld2.0 = _3 << RET;
_13 = 11711_i16 as u8;
_17.1.3.fld0.fld4 = 4631_i16;
_17.3 = _9;
_17.1.3.fld2.0 = _3 * _3;
_10 = 4023944547771939801_u64;
_17.1.3.fld1 = _2;
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_12);
_11 = [_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1,_17.1.3.fld1];
_16 = !false;
_17.1.0 = !_17.3;
_17.1.3.fld2.1 = _3 > _17.1.3.fld2.0;
_13 = 119_u8 * 56_u8;
match _9 {
0 => bb3,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
143258316 => bb10,
_ => bb9
}
}
bb49 = {
(*_29) = Field::<u64>(Variant(_39.fld4, 3), 1) - Field::<u64>(Variant(_39.fld4, 3), 1);
place!(Field::<u64>(Variant(_39.fld4, 3), 1)) = (*_29) & (*_29);
place!(Field::<u64>(Variant(_36.1.3.fld4, 3), 1)) = _7 as u64;
(*_22) = _36.1.3.fld0.fld3;
(*_22) = _36.1.3.fld0.fld3;
(*_30) = Field::<u8>(Variant(_51.1.3.fld4, 3), 0) & Field::<u8>(Variant(_36.1.3.fld4, 3), 0);
(*_22) = _36.1.3.fld0.fld3 ^ _36.1.3.fld0.fld3;
_51.1.3.fld2 = ((*_34).2, _49.fld2.1, _39.fld0.fld4, Move(_45.3.fld2.3));
_17.1.3.fld2.3 = core::ptr::addr_of_mut!(_6);
_63 = core::ptr::addr_of_mut!((*_29));
(*_22) = _17.3 as u128;
(*_38) = [_4,_4,_4,RET,RET,_4,RET,_4];
(*_38) = [_4,_4,RET,_4,_4,_4,RET,_4];
(*_41) = [_4,RET,RET,RET,RET,_4,RET];
_49.fld1 = _17.1.3.fld1;
_40 = core::ptr::addr_of_mut!(_12);
_17.1.1 = (*_34).2 > (*_34).2;
_24.1 = [RET,_4,_4,_4,_4,RET,RET,RET];
_36.1.3.fld2 = Move(_39.fld2);
(*_22) = _36.1.3.fld0.fld3 | _53;
_46 = !(*_22);
Goto(bb50)
}
bb50 = {
Call(_71 = dump_var(0_usize, 6_usize, Move(_6), 42_usize, Move(_42), 16_usize, Move(_16), 1_usize, Move(_1)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_71 = dump_var(0_usize, 28_usize, Move(_28), 48_usize, Move(_48), 43_usize, Move(_43), 46_usize, Move(_46)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_71 = dump_var(0_usize, 19_usize, Move(_19), 12_usize, Move(_12), 4_usize, Move(_4), 11_usize, Move(_11)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: (isize, bool, i16, *mut i32),mut _2: *const u32,mut _3: u64,mut _4: *mut Adt17,mut _5: i32,mut _6: *mut i32,mut _7: u16,mut _8: u64,mut _9: i32,mut _10: char) -> f64 {
mir! {
type RET = f64;
let _11: f32;
let _12: f32;
let _13: (u32, *mut i32, isize);
let _14: f32;
let _15: Adt79;
let _16: char;
let _17: (u32, *mut i32, isize);
let _18: *mut [u16; 3];
let _19: isize;
let _20: u128;
let _21: &'static &'static mut u64;
let _22: f64;
let _23: isize;
let _24: &'static Adt23;
let _25: usize;
let _26: Adt68;
let _27: f32;
let _28: isize;
let _29: isize;
let _30: *const Adt17;
let _31: f64;
let _32: ();
let _33: ();
{
_9 = 7345313184832606546_i64 as i32;
Goto(bb1)
}
bb1 = {
RET = 115_i8 as f64;
_10 = '\u{623da}';
_9 = _5;
_5 = !_9;
_5 = 17783337320693140555_usize as i32;
Call(_1.2 = fn2(Move(_6), Move(_2), _1.1, Move(_1.3), Move(_4), _7, _5, _10, _3, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1.1 = true;
_6 = core::ptr::addr_of_mut!(_5);
(*_6) = _9 - _9;
_5 = _9;
(*_6) = _9 & _9;
_8 = _3;
Goto(bb3)
}
bb3 = {
_1.2 = 4765_i16;
_1.0 = 55_isize;
_11 = RET as f32;
(*_6) = _9 * _9;
(*_6) = _9 + _9;
_10 = '\u{b626f}';
_10 = '\u{6852e}';
(*_6) = _9 ^ _9;
_1 = (9223372036854775807_isize, true, 16034_i16, Move(_6));
_1.1 = _1.2 >= _1.2;
_11 = 3091400927_u32 as f32;
_7 = 39916_u16;
match _1.0 {
0 => bb4,
1 => bb5,
9223372036854775807 => bb7,
_ => bb6
}
}
bb4 = {
_1.1 = true;
_6 = core::ptr::addr_of_mut!(_5);
(*_6) = _9 - _9;
_5 = _9;
(*_6) = _9 & _9;
_8 = _3;
Goto(bb3)
}
bb5 = {
RET = 115_i8 as f64;
_10 = '\u{623da}';
_9 = _5;
_5 = !_9;
_5 = 17783337320693140555_usize as i32;
Call(_1.2 = fn2(Move(_6), Move(_2), _1.1, Move(_1.3), Move(_4), _7, _5, _10, _3, _9), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
_10 = '\u{ec029}';
_1.2 = !(-32284_i16);
_9 = 7_u8 as i32;
_1.2 = 28260_i16;
_1.0 = (-9223372036854775808_isize) >> _8;
RET = 184_u8 as f64;
_6 = core::ptr::addr_of_mut!(_9);
(*_6) = _5 & _5;
_6 = core::ptr::addr_of_mut!((*_6));
_9 = _5 >> _1.2;
(*_6) = _5 & _5;
_1.3 = core::ptr::addr_of_mut!((*_6));
_11 = 2572014446_u32 as f32;
_1 = (9223372036854775807_isize, true, (-21076_i16), Move(_6));
_13.1 = Move(_1.3);
_7 = 40152_u16 << _3;
_5 = _9;
_8 = _1.2 as u64;
_13.2 = _1.0 << _8;
_11 = _8 as f32;
_3 = _1.1 as u64;
_17.0 = !993611500_u32;
Goto(bb8)
}
bb8 = {
_5 = _9 & _9;
_17.0 = 2752361045_u32;
_10 = '\u{fd2bd}';
_1.2 = 1981_i16;
_13.1 = core::ptr::addr_of_mut!(_5);
_17.1 = core::ptr::addr_of_mut!(_9);
_13.0 = !_17.0;
_13 = (_17.0, Move(_17.1), _1.0);
_2 = core::ptr::addr_of!(_17.0);
_17.0 = !_13.0;
_6 = core::ptr::addr_of_mut!(_5);
_12 = 85782801063946193822133234675101494768_u128 as f32;
(*_6) = _9;
(*_2) = (*_6) as u32;
(*_6) = _9 | _9;
(*_6) = _9;
(*_6) = _9;
(*_2) = _13.0 & _13.0;
(*_2) = _13.0 + _13.0;
(*_6) = _9 & _9;
_6 = Move(_13.1);
_1.1 = !false;
_17.1 = Move(_6);
_1.1 = false ^ true;
Goto(bb9)
}
bb9 = {
_13.0 = !(*_2);
_19 = _11 as isize;
(*_2) = _13.0 - _13.0;
_3 = _8 & _8;
(*_2) = RET as u32;
(*_2) = _3 as u32;
Goto(bb10)
}
bb10 = {
_2 = core::ptr::addr_of!((*_2));
_17.0 = _13.0 ^ _13.0;
_20 = 124823504376412509134335890992953414654_u128 << _1.0;
(*_2) = _13.0 & _13.0;
_13 = ((*_2), Move(_17.1), _19);
_20 = 92396088259625820625236935238589399410_u128 >> _13.2;
(*_2) = (-140508526421426778215145665740838779704_i128) as u32;
(*_2) = _13.0 << _5;
_11 = _12 + _12;
_1 = (_13.2, true, 15299_i16, Move(_13.1));
_3 = _8 ^ _8;
(*_2) = _13.0;
(*_2) = _13.0;
(*_2) = _13.0 + _13.0;
_23 = -_19;
match _1.2 {
15299 => bb12,
_ => bb11
}
}
bb11 = {
_5 = _9 & _9;
_17.0 = 2752361045_u32;
_10 = '\u{fd2bd}';
_1.2 = 1981_i16;
_13.1 = core::ptr::addr_of_mut!(_5);
_17.1 = core::ptr::addr_of_mut!(_9);
_13.0 = !_17.0;
_13 = (_17.0, Move(_17.1), _1.0);
_2 = core::ptr::addr_of!(_17.0);
_17.0 = !_13.0;
_6 = core::ptr::addr_of_mut!(_5);
_12 = 85782801063946193822133234675101494768_u128 as f32;
(*_6) = _9;
(*_2) = (*_6) as u32;
(*_6) = _9 | _9;
(*_6) = _9;
(*_6) = _9;
(*_2) = _13.0 & _13.0;
(*_2) = _13.0 + _13.0;
(*_6) = _9 & _9;
_6 = Move(_13.1);
_1.1 = !false;
_17.1 = Move(_6);
_1.1 = false ^ true;
Goto(bb9)
}
bb12 = {
_2 = core::ptr::addr_of!((*_2));
_7 = !26475_u16;
(*_2) = _13.0 >> _1.2;
_1.1 = _5 > _9;
(*_2) = _13.0 >> _20;
_13.1 = core::ptr::addr_of_mut!(_9);
_3 = _1.1 as u64;
_11 = -_12;
(*_2) = _13.0 & _13.0;
_13.0 = !(*_2);
_19 = _1.0 << (*_2);
_12 = _11;
_10 = '\u{57719}';
_20 = 298234913462076906645103369726871550264_u128;
_17.2 = _19 ^ _23;
(*_2) = _13.0 << _1.2;
Goto(bb13)
}
bb13 = {
_28 = -_23;
RET = _3 as f64;
_23 = _28;
_9 = _5 >> _28;
_17 = Move(_13);
(*_2) = _17.2 as u32;
_10 = '\u{10e09}';
_5 = 244_u8 as i32;
_1.2 = 15559_i16 + 9834_i16;
_14 = _3 as f32;
_7 = 11654_u16 * 56204_u16;
_3 = _1.2 as u64;
_25 = 0_usize;
(*_2) = 2018206107_u32;
(*_2) = 4120089633_u32 >> _28;
(*_2) = 3301169132_u32 ^ 2248234330_u32;
_13.1 = core::ptr::addr_of_mut!(_5);
(*_2) = 3037695016_u32 & 2213581316_u32;
_27 = _14 - _14;
(*_2) = 3402108451_u32 & 1945603490_u32;
Goto(bb14)
}
bb14 = {
Call(_32 = dump_var(1_usize, 23_usize, Move(_23), 19_usize, Move(_19), 8_usize, Move(_8), 9_usize, Move(_9)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_32 = dump_var(1_usize, 5_usize, Move(_5), 33_usize, _33, 33_usize, _33, 33_usize, _33), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: *mut i32,mut _2: *const u32,mut _3: bool,mut _4: *mut i32,mut _5: *mut Adt17,mut _6: u16,mut _7: i32,mut _8: char,mut _9: u64,mut _10: i32) -> i16 {
mir! {
type RET = i16;
let _11: isize;
let _12: i64;
let _13: f32;
let _14: Adt68;
let _15: isize;
let _16: Adt29;
let _17: &'static mut u16;
let _18: isize;
let _19: &'static u32;
let _20: i32;
let _21: char;
let _22: bool;
let _23: isize;
let _24: *const u128;
let _25: *const u128;
let _26: bool;
let _27: &'static Adt36;
let _28: u64;
let _29: (u32, *mut i32, isize);
let _30: isize;
let _31: isize;
let _32: *const u128;
let _33: char;
let _34: isize;
let _35: i32;
let _36: i32;
let _37: isize;
let _38: isize;
let _39: u128;
let _40: Adt29;
let _41: &'static Adt25;
let _42: *mut [u16; 3];
let _43: char;
let _44: &'static mut u16;
let _45: char;
let _46: [u64; 4];
let _47: [u32; 1];
let _48: &'static Adt29;
let _49: [i8; 7];
let _50: &'static mut u16;
let _51: *const f64;
let _52: u8;
let _53: [i8; 8];
let _54: *mut &'static mut &'static *mut bool;
let _55: [u16; 3];
let _56: &'static *const [i8; 8];
let _57: *mut i32;
let _58: u64;
let _59: f32;
let _60: i8;
let _61: f32;
let _62: *const f64;
let _63: char;
let _64: u128;
let _65: isize;
let _66: u32;
let _67: f64;
let _68: (&'static mut u32, [i8; 8], u32);
let _69: *mut [u16; 3];
let _70: *const Adt17;
let _71: (isize, bool, i16, *mut i32);
let _72: &'static Adt29;
let _73: f32;
let _74: f64;
let _75: &'static Adt25;
let _76: isize;
let _77: i128;
let _78: f64;
let _79: char;
let _80: (&'static mut u32, [i8; 8], u32);
let _81: i64;
let _82: (u32, *mut i32, isize);
let _83: isize;
let _84: Adt24;
let _85: i32;
let _86: *const f64;
let _87: &'static Adt36;
let _88: i128;
let _89: &'static &'static mut u64;
let _90: (isize, bool, i16, *mut i32);
let _91: u32;
let _92: usize;
let _93: f64;
let _94: *const Adt17;
let _95: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _96: f64;
let _97: f32;
let _98: char;
let _99: i32;
let _100: bool;
let _101: *mut u64;
let _102: *mut Adt17;
let _103: bool;
let _104: *mut &'static mut &'static *mut bool;
let _105: f64;
let _106: ();
let _107: ();
{
_4 = core::ptr::addr_of_mut!(_7);
(*_4) = (-9223372036854775808_isize) as i32;
(*_4) = _6 as i32;
(*_4) = _10 * _10;
(*_4) = _10;
_6 = _3 as u16;
(*_4) = _3 as i32;
(*_4) = _10 + _10;
(*_4) = 1824094156_u32 as i32;
_10 = (*_4) + (*_4);
(*_4) = _10 << _6;
_6 = !62523_u16;
(*_4) = _10 ^ _10;
(*_4) = 3340005055173992945_usize as i32;
(*_4) = _10 | _10;
_1 = core::ptr::addr_of_mut!((*_4));
(*_1) = _10 ^ _10;
_8 = '\u{51e38}';
Goto(bb1)
}
bb1 = {
_10 = (*_1) << (*_4);
_11 = (-60_isize) | 9223372036854775807_isize;
(*_1) = _10;
(*_1) = -_10;
(*_1) = _10;
_12 = 540143668156738116_i64 << (*_4);
(*_4) = _10 | _10;
(*_4) = _8 as i32;
(*_4) = (-18171381559996760986159831936995258137_i128) as i32;
(*_4) = _11 as i32;
_3 = (*_4) <= (*_4);
_9 = 8513945412227214954_u64 << _12;
(*_4) = _10 + _10;
(*_4) = _10 | _10;
(*_4) = _10 + _10;
_11 = 9223372036854775807_isize;
_4 = Move(_1);
_4 = core::ptr::addr_of_mut!(_10);
_6 = 49352_u16 - 39516_u16;
(*_4) = _6 as i32;
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_1 = core::ptr::addr_of_mut!((*_4));
(*_1) = (-58305345525079300084502205887424104706_i128) as i32;
(*_1) = 2690747492_u32 as i32;
RET = !(-19839_i16);
_6 = !21644_u16;
(*_4) = _7 + _7;
_15 = _9 as isize;
_1 = core::ptr::addr_of_mut!(_7);
_17 = &mut _6;
(*_1) = (*_17) as i32;
(*_1) = -_10;
_12 = 1314167186541309429_i64 & (-3257383512419932182_i64);
_13 = _9 as f32;
(*_4) = (*_1) | (*_1);
(*_17) = _9 as u16;
(*_17) = _8 as u16;
_10 = -(*_1);
(*_1) = (*_4);
_13 = 78_u8 as f32;
(*_1) = 293202326439555952305764028639022991401_u128 as i32;
RET = 1738_i16;
(*_4) = -(*_1);
(*_4) = (*_1) * (*_1);
(*_17) = 35378_u16;
(*_4) = (*_1);
RET = 8130_i16 - 17900_i16;
(*_1) = -(*_4);
match (*_17) {
0 => bb1,
1 => bb4,
35378 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
_11 = (*_17) as isize;
(*_17) = 304053426225312731578146106918319864668_u128 as u16;
(*_4) = !(*_1);
(*_17) = 8494_u16 & 35121_u16;
(*_4) = (*_1) + (*_1);
(*_17) = 51561_u16;
(*_17) = 523_u16;
(*_4) = (*_1) & (*_1);
_7 = _10 >> (*_4);
_4 = core::ptr::addr_of_mut!((*_1));
(*_17) = 40951_u16;
(*_17) = 15274_u16 + 60086_u16;
(*_1) = _15 as i32;
(*_17) = 118_u8 as u16;
(*_17) = 52_i8 as u16;
(*_1) = _15 as i32;
(*_1) = -_10;
(*_1) = -_10;
_3 = true | false;
Goto(bb12)
}
bb12 = {
_4 = core::ptr::addr_of_mut!((*_1));
(*_1) = _10 + _10;
(*_1) = _10 + _10;
(*_17) = _11 as u16;
(*_1) = _10 << _9;
_9 = 4172280751984161829_u64;
_9 = _12 as u64;
(*_1) = _10 * _10;
(*_17) = 60_i8 as u16;
_8 = '\u{fe243}';
(*_17) = 60098_u16 - 29380_u16;
_13 = 19773376018439439558729815198641573606_i128 as f32;
(*_1) = !_10;
(*_17) = 57142_u16;
(*_17) = _13 as u16;
(*_1) = _10 - _10;
(*_1) = _10 << RET;
_21 = _8;
(*_17) = 52864_u16 - 6639_u16;
Call(_9 = core::intrinsics::transmute(_15), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
(*_17) = !23731_u16;
_20 = (*_1);
(*_17) = _20 as u16;
_22 = _7 <= (*_1);
(*_17) = 49308_u16;
(*_17) = 22747_u16;
(*_17) = 19449894600484182624293915800597918659_i128 as u16;
(*_1) = _10 | _20;
Call(_15 = fn3(), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_10 = -(*_1);
(*_17) = _12 as u16;
(*_1) = -_10;
(*_1) = _10 + _20;
_26 = !_3;
(*_1) = !_10;
(*_17) = 33344_u16 << (*_1);
_23 = _21 as isize;
_9 = _15 as u64;
(*_17) = 3835657771_u32 as u16;
(*_17) = 52097_u16;
(*_1) = 171534400395036648875697406234075649623_u128 as i32;
(*_17) = 14551_u16 >> _15;
(*_1) = -_20;
_30 = _15;
(*_17) = 33968_u16 << _9;
(*_1) = _20 + _10;
(*_17) = 60718_u16;
Goto(bb15)
}
bb15 = {
(*_17) = 53317_u16 & 9035_u16;
(*_17) = 107327735028659119213178159915205614944_u128 as u16;
(*_17) = 23751_u16;
(*_1) = _10;
(*_1) = -_10;
(*_1) = _10;
_21 = _8;
_33 = _21;
Goto(bb16)
}
bb16 = {
_12 = 0_usize as i64;
(*_17) = 61962_u16 | 25014_u16;
_29 = (2035454431_u32, Move(_1), _15);
_34 = _33 as isize;
(*_17) = 7199_u16 >> _15;
(*_17) = _8 as u16;
_12 = _29.0 as i64;
(*_17) = 44815_u16 >> _29.0;
_28 = _9;
_29.2 = _15;
_11 = _29.2;
_18 = !_23;
_31 = _30 & _15;
(*_17) = 50132_u16 - 59402_u16;
(*_17) = 25137_u16 ^ 48283_u16;
_35 = _22 as i32;
_26 = _22;
_11 = _29.0 as isize;
_35 = -_20;
_39 = 282341690933721491595968246651437078771_u128 ^ 243218524478559471034663869107223167907_u128;
_24 = core::ptr::addr_of!(_39);
(*_24) = 328128604956154498375283207669129953685_u128;
(*_24) = 101719236513386941466140204419454106085_u128;
(*_17) = 2421_u16 & 50400_u16;
(*_17) = 10448_u16 * 40210_u16;
(*_24) = _13 as u128;
match _29.0 {
0 => bb12,
1 => bb5,
2 => bb3,
2035454431 => bb17,
_ => bb14
}
}
bb17 = {
(*_17) = 5738_u16 >> (*_24);
(*_17) = !51229_u16;
_33 = _8;
_9 = _28 << _11;
_36 = _20;
_33 = _21;
(*_17) = 58157_u16 * 53118_u16;
(*_24) = 54135486375288936487791810444086110375_i128 as u128;
(*_24) = !298975681193610817582167112956376090957_u128;
_39 = !23816291108160557063187662072401301786_u128;
_37 = _31 >> (*_24);
_29.0 = 70394935_u32;
(*_17) = 184_u8 as u16;
_7 = _35;
(*_17) = 12013_u16 << _31;
(*_24) = 227997333907199213960865475042943441830_u128 << _12;
_22 = _9 == _9;
_25 = core::ptr::addr_of!((*_24));
(*_25) = _29.0 as u128;
_38 = -_37;
(*_25) = 273207920126230197262718839117520521189_u128;
_4 = Move(_29.1);
_36 = _7;
_31 = _38;
(*_17) = 5_usize as u16;
_38 = !_37;
Goto(bb18)
}
bb18 = {
(*_25) = 308097195802980300149849433930437079601_u128 << _31;
(*_25) = (-32261319869947119331570264718960217737_i128) as u128;
(*_25) = 109990298093366922746234611964101009184_u128 - 91055287334799007815048254895917346767_u128;
_26 = _22 ^ _22;
(*_25) = _13 as u128;
_30 = -_38;
_38 = _13 as isize;
(*_24) = _26 as u128;
(*_24) = 72_u8 as u128;
(*_17) = !32141_u16;
_9 = _28;
(*_24) = _35 as u128;
RET = _33 as i16;
(*_17) = 25175_u16 >> _12;
Call((*_17) = core::intrinsics::transmute(RET), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
(*_17) = 55000_u16;
_29 = (3728885454_u32, Move(_4), _11);
(*_17) = _35 as u16;
(*_24) = !224306793640204125278567336893226656133_u128;
_30 = !_11;
(*_17) = 20234_u16 + 51239_u16;
_22 = !_26;
(*_17) = 40525_u16;
_9 = _28;
(*_24) = 68008279846204348443307136245321864500_u128 ^ 337437249164220411663767835041844985883_u128;
(*_24) = 265004963578740278993581330484717507938_u128;
(*_17) = 43276_u16;
_35 = _10 * _10;
_9 = _28;
_39 = 31837472526621735987687673035707821247_u128 + 310528564394919373435723951953695642456_u128;
(*_24) = 339868967758487443026964526887396530409_u128 & 79042455836037228701832711526378747326_u128;
_47 = [_29.0];
_46 = [_28,_9,_9,_9];
(*_17) = 27137_u16;
Goto(bb20)
}
bb20 = {
_44 = &mut (*_17);
(*_24) = !101987102773670405516475021184636869448_u128;
_45 = _33;
_35 = _20 + _7;
(*_24) = 1358199514789000782585498290244703501_u128 | 247675338544064076019647561964853184191_u128;
_22 = !_26;
(*_44) = !14176_u16;
(*_44) = 9539_u16 << _12;
_32 = Move(_24);
(*_44) = 35294_u16 & 45234_u16;
_18 = _15;
_3 = _29.0 == _29.0;
(*_44) = 48862_u16 | 2141_u16;
_18 = _30 - _37;
_10 = _35 - _35;
_38 = _3 as isize;
_9 = _28;
_18 = _31;
_33 = _21;
Call(_28 = core::intrinsics::bswap(_9), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_22 = _26 | _3;
_49 = [112_i8,(-60_i8),(-31_i8),84_i8,(-113_i8),(-72_i8),49_i8];
_9 = _28 + _28;
_18 = _15 >> _38;
(*_44) = 4141578688103003835_usize as u16;
_38 = _37;
_24 = core::ptr::addr_of!(_39);
_11 = (*_24) as isize;
(*_44) = !50042_u16;
_46 = [_28,_9,_9,_9];
(*_44) = 25996_u16 - 24227_u16;
(*_44) = 60373_u16 - 5044_u16;
(*_24) = _12 as u128;
_45 = _33;
(*_44) = 20575_u16;
_1 = Move(_29.1);
_8 = _45;
_55 = [(*_44),(*_44),(*_44)];
match (*_44) {
0 => bb7,
20575 => bb23,
_ => bb22
}
}
bb22 = {
(*_17) = 55000_u16;
_29 = (3728885454_u32, Move(_4), _11);
(*_17) = _35 as u16;
(*_24) = !224306793640204125278567336893226656133_u128;
_30 = !_11;
(*_17) = 20234_u16 + 51239_u16;
_22 = !_26;
(*_17) = 40525_u16;
_9 = _28;
(*_24) = 68008279846204348443307136245321864500_u128 ^ 337437249164220411663767835041844985883_u128;
(*_24) = 265004963578740278993581330484717507938_u128;
(*_17) = 43276_u16;
_35 = _10 * _10;
_9 = _28;
_39 = 31837472526621735987687673035707821247_u128 + 310528564394919373435723951953695642456_u128;
(*_24) = 339868967758487443026964526887396530409_u128 & 79042455836037228701832711526378747326_u128;
_47 = [_29.0];
_46 = [_28,_9,_9,_9];
(*_17) = 27137_u16;
Goto(bb20)
}
bb23 = {
_9 = _28 & _28;
_43 = _45;
(*_44) = 64259_u16 ^ 58828_u16;
(*_44) = 60423_u16 >> (*_24);
_42 = core::ptr::addr_of_mut!(_55);
_39 = 214655367584863076959487058856745000289_u128 - 37107568785445790052345450027658053026_u128;
_3 = (*_44) <= (*_44);
_57 = core::ptr::addr_of_mut!(_36);
_19 = &_29.0;
_52 = (*_57) as u8;
(*_57) = _10 + _20;
_29 = (1739645142_u32, Move(_57), _18);
_58 = !_9;
_53 = [(-50_i8),93_i8,14_i8,(-26_i8),47_i8,64_i8,(-67_i8),77_i8];
_58 = _28;
_8 = _45;
(*_44) = 2651_u16 - 25875_u16;
(*_44) = 23638_u16 >> _38;
_43 = _8;
_8 = _45;
_3 = (*_44) == (*_44);
(*_44) = 48852_u16 * 1181_u16;
(*_42) = [(*_44),(*_44),(*_44)];
match _29.0 {
0 => bb20,
1 => bb21,
2 => bb16,
1739645142 => bb24,
_ => bb18
}
}
bb24 = {
(*_44) = 19546_u16 | 37983_u16;
(*_24) = !2606153055981706187390575147047092553_u128;
(*_44) = !2409_u16;
(*_42) = [(*_44),(*_44),(*_44)];
_63 = _45;
_20 = !_36;
_64 = !(*_24);
_52 = (-30_i8) as u8;
_58 = _52 as u64;
(*_44) = 6347_u16 | 1981_u16;
_1 = Move(_29.1);
(*_42) = [(*_44),(*_44),(*_44)];
(*_44) = _29.0 as u16;
match _29.0 {
0 => bb7,
1 => bb17,
1739645142 => bb25,
_ => bb4
}
}
bb25 = {
_17 = Move(_44);
_29 = (1628657854_u32, Move(_1), _18);
_69 = core::ptr::addr_of_mut!((*_42));
_46 = [_28,_9,_9,_9];
(*_24) = _64;
_42 = core::ptr::addr_of_mut!(_55);
_38 = !_18;
_10 = _20;
_59 = -_13;
(*_42) = [43053_u16,62494_u16,31414_u16];
(*_69) = [44696_u16,50682_u16,8846_u16];
(*_69) = [34674_u16,18301_u16,21986_u16];
_74 = _29.2 as f64;
(*_69) = [22298_u16,43826_u16,30780_u16];
_24 = core::ptr::addr_of!((*_24));
(*_24) = _64 << _29.0;
_39 = _64 * _64;
_9 = _58 - _28;
(*_24) = _64;
(*_69) = [15175_u16,45308_u16,26238_u16];
(*_69) = [28315_u16,17395_u16,10349_u16];
(*_69) = [48479_u16,30487_u16,20906_u16];
_32 = core::ptr::addr_of!((*_24));
(*_32) = _64;
match _29.0 {
1628657854 => bb27,
_ => bb26
}
}
bb26 = {
(*_44) = 19546_u16 | 37983_u16;
(*_24) = !2606153055981706187390575147047092553_u128;
(*_44) = !2409_u16;
(*_42) = [(*_44),(*_44),(*_44)];
_63 = _45;
_20 = !_36;
_64 = !(*_24);
_52 = (-30_i8) as u8;
_58 = _52 as u64;
(*_44) = 6347_u16 | 1981_u16;
_1 = Move(_29.1);
(*_42) = [(*_44),(*_44),(*_44)];
(*_44) = _29.0 as u16;
match _29.0 {
0 => bb7,
1 => bb17,
1739645142 => bb25,
_ => bb4
}
}
bb27 = {
_68.2 = !_29.0;
(*_24) = !_64;
_66 = _74 as u32;
_49 = [(-89_i8),28_i8,72_i8,(-84_i8),45_i8,125_i8,(-63_i8)];
_8 = _45;
_15 = _36 as isize;
(*_69) = [12035_u16,18670_u16,21424_u16];
_71.1 = _68.2 <= _66;
_68.0 = &mut _29.0;
_40 = Adt29::Variant0 { fld0: _46,fld1: _43,fld2: _13,fld3: 44097_u16,fld4: _52,fld5: _36,fld6: _28,fld7: (-86211914810833696764785879904057739215_i128) };
_42 = core::ptr::addr_of_mut!((*_69));
_28 = !_9;
_73 = _13 * _59;
_37 = _38 & _31;
_25 = core::ptr::addr_of!((*_24));
_61 = _59 - Field::<f32>(Variant(_40, 0), 2);
Goto(bb28)
}
bb28 = {
(*_42) = [37230_u16,63583_u16,347_u16];
_74 = (-37_i8) as f64;
(*_42) = [45674_u16,50239_u16,1764_u16];
_68.0 = &mut _66;
(*_25) = _64 * _64;
RET = (-2980_i16);
(*_42) = [14351_u16,48362_u16,55045_u16];
(*_25) = _64;
_34 = -_38;
_51 = core::ptr::addr_of!(_67);
_12 = _9 as i64;
(*_24) = _64 << _34;
(*_51) = _74;
_60 = (-117_i8) + (-63_i8);
_68.2 = !3421682812_u32;
_65 = _37;
(*_69) = [20287_u16,22195_u16,8201_u16];
(*_24) = !_64;
_64 = (*_24);
_9 = _28;
_1 = core::ptr::addr_of_mut!(_10);
(*_24) = _64;
place!(Field::<u64>(Variant(_40, 0), 6)) = _9;
(*_51) = _74;
match RET {
0 => bb29,
1 => bb30,
2 => bb31,
3 => bb32,
4 => bb33,
5 => bb34,
340282366920938463463374607431768208476 => bb36,
_ => bb35
}
}
bb29 = {
Return()
}
bb30 = {
Return()
}
bb31 = {
(*_25) = 308097195802980300149849433930437079601_u128 << _31;
(*_25) = (-32261319869947119331570264718960217737_i128) as u128;
(*_25) = 109990298093366922746234611964101009184_u128 - 91055287334799007815048254895917346767_u128;
_26 = _22 ^ _22;
(*_25) = _13 as u128;
_30 = -_38;
_38 = _13 as isize;
(*_24) = _26 as u128;
(*_24) = 72_u8 as u128;
(*_17) = !32141_u16;
_9 = _28;
(*_24) = _35 as u128;
RET = _33 as i16;
(*_17) = 25175_u16 >> _12;
Call((*_17) = core::intrinsics::transmute(RET), ReturnTo(bb19), UnwindUnreachable())
}
bb32 = {
Return()
}
bb33 = {
_10 = (*_1) << (*_4);
_11 = (-60_isize) | 9223372036854775807_isize;
(*_1) = _10;
(*_1) = -_10;
(*_1) = _10;
_12 = 540143668156738116_i64 << (*_4);
(*_4) = _10 | _10;
(*_4) = _8 as i32;
(*_4) = (-18171381559996760986159831936995258137_i128) as i32;
(*_4) = _11 as i32;
_3 = (*_4) <= (*_4);
_9 = 8513945412227214954_u64 << _12;
(*_4) = _10 + _10;
(*_4) = _10 | _10;
(*_4) = _10 + _10;
_11 = 9223372036854775807_isize;
_4 = Move(_1);
_4 = core::ptr::addr_of_mut!(_10);
_6 = 49352_u16 - 39516_u16;
(*_4) = _6 as i32;
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
9223372036854775807 => bb9,
_ => bb8
}
}
bb34 = {
(*_17) = 55000_u16;
_29 = (3728885454_u32, Move(_4), _11);
(*_17) = _35 as u16;
(*_24) = !224306793640204125278567336893226656133_u128;
_30 = !_11;
(*_17) = 20234_u16 + 51239_u16;
_22 = !_26;
(*_17) = 40525_u16;
_9 = _28;
(*_24) = 68008279846204348443307136245321864500_u128 ^ 337437249164220411663767835041844985883_u128;
(*_24) = 265004963578740278993581330484717507938_u128;
(*_17) = 43276_u16;
_35 = _10 * _10;
_9 = _28;
_39 = 31837472526621735987687673035707821247_u128 + 310528564394919373435723951953695642456_u128;
(*_24) = 339868967758487443026964526887396530409_u128 & 79042455836037228701832711526378747326_u128;
_47 = [_29.0];
_46 = [_28,_9,_9,_9];
(*_17) = 27137_u16;
Goto(bb20)
}
bb35 = {
_10 = -(*_1);
(*_17) = _12 as u16;
(*_1) = -_10;
(*_1) = _10 + _20;
_26 = !_3;
(*_1) = !_10;
(*_17) = 33344_u16 << (*_1);
_23 = _21 as isize;
_9 = _15 as u64;
(*_17) = 3835657771_u32 as u16;
(*_17) = 52097_u16;
(*_1) = 171534400395036648875697406234075649623_u128 as i32;
(*_17) = 14551_u16 >> _15;
(*_1) = -_20;
_30 = _15;
(*_17) = 33968_u16 << _9;
(*_1) = _20 + _10;
(*_17) = 60718_u16;
Goto(bb15)
}
bb36 = {
_63 = _8;
_78 = _67;
(*_51) = _78;
_12 = _15 as i64;
_26 = _71.1 < _3;
Goto(bb37)
}
bb37 = {
_26 = _34 >= _37;
(*_1) = _35 - Field::<i32>(Variant(_40, 0), 5);
(*_51) = _78 * _78;
_38 = _9 as isize;
(*_51) = -_74;
(*_69) = [8289_u16,31321_u16,8215_u16];
_71.1 = !_22;
_71.3 = core::ptr::addr_of_mut!((*_1));
_42 = core::ptr::addr_of_mut!((*_69));
(*_24) = (*_1) as u128;
(*_42) = [3988_u16,27707_u16,40455_u16];
(*_69) = [42760_u16,43795_u16,58869_u16];
Goto(bb38)
}
bb38 = {
_39 = _64 | _64;
_71 = (_65, _26, RET, Move(_1));
_33 = _21;
_68.1 = [_60,_60,_60,_60,_60,_60,_60,_60];
_82.1 = core::ptr::addr_of_mut!(_36);
_15 = _34;
(*_69) = [16819_u16,53132_u16,48146_u16];
(*_24) = !_64;
(*_51) = -_74;
(*_51) = _74 - _78;
place!(Field::<i128>(Variant(_40, 0), 7)) = 2705345126329590594256164731970039405_i128 << _37;
_3 = _26;
_80.2 = Field::<u8>(Variant(_40, 0), 4) as u32;
Goto(bb39)
}
bb39 = {
_68.2 = _80.2;
_46 = [_28,_28,_28,Field::<u64>(Variant(_40, 0), 6)];
place!(Field::<u16>(Variant(_40, 0), 3)) = 31509_u16 & 8439_u16;
place!(Field::<f32>(Variant(_40, 0), 2)) = _59 + _73;
_32 = Move(_24);
place!(Field::<f32>(Variant(_40, 0), 2)) = _61 * _13;
_76 = Field::<i128>(Variant(_40, 0), 7) as isize;
(*_69) = [Field::<u16>(Variant(_40, 0), 3),Field::<u16>(Variant(_40, 0), 3),Field::<u16>(Variant(_40, 0), 3)];
_38 = _37;
_88 = Field::<u16>(Variant(_40, 0), 3) as i128;
_35 = -_20;
_69 = Move(_42);
_50 = &mut place!(Field::<u16>(Variant(_40, 0), 3));
_37 = _18;
(*_51) = _78 + _74;
(*_51) = -_74;
(*_51) = _74 * _74;
match RET {
0 => bb29,
1 => bb26,
2 => bb23,
3 => bb28,
340282366920938463463374607431768208476 => bb41,
_ => bb40
}
}
bb40 = {
(*_42) = [37230_u16,63583_u16,347_u16];
_74 = (-37_i8) as f64;
(*_42) = [45674_u16,50239_u16,1764_u16];
_68.0 = &mut _66;
(*_25) = _64 * _64;
RET = (-2980_i16);
(*_42) = [14351_u16,48362_u16,55045_u16];
(*_25) = _64;
_34 = -_38;
_51 = core::ptr::addr_of!(_67);
_12 = _9 as i64;
(*_24) = _64 << _34;
(*_51) = _74;
_60 = (-117_i8) + (-63_i8);
_68.2 = !3421682812_u32;
_65 = _37;
(*_69) = [20287_u16,22195_u16,8201_u16];
(*_24) = !_64;
_64 = (*_24);
_9 = _28;
_1 = core::ptr::addr_of_mut!(_10);
(*_24) = _64;
place!(Field::<u64>(Variant(_40, 0), 6)) = _9;
(*_51) = _74;
match RET {
0 => bb29,
1 => bb30,
2 => bb31,
3 => bb32,
4 => bb33,
5 => bb34,
340282366920938463463374607431768208476 => bb36,
_ => bb35
}
}
bb41 = {
(*_50) = 61526_u16;
(*_51) = _59 as f64;
_47 = [_80.2];
_20 = _36 | _10;
_36 = _10 - _20;
_32 = Move(_25);
_80.0 = &mut _68.2;
(*_50) = 41562_u16;
_26 = _71.1 ^ _22;
(*_51) = _74 + _78;
_78 = (*_51) - _74;
(*_51) = _78 * _74;
_47 = [_80.2];
_62 = core::ptr::addr_of!((*_51));
_71.3 = core::ptr::addr_of_mut!(_35);
match (*_50) {
0 => bb29,
1 => bb33,
2 => bb42,
41562 => bb44,
_ => bb43
}
}
bb42 = {
_10 = -(*_1);
(*_17) = _12 as u16;
(*_1) = -_10;
(*_1) = _10 + _20;
_26 = !_3;
(*_1) = !_10;
(*_17) = 33344_u16 << (*_1);
_23 = _21 as isize;
_9 = _15 as u64;
(*_17) = 3835657771_u32 as u16;
(*_17) = 52097_u16;
(*_1) = 171534400395036648875697406234075649623_u128 as i32;
(*_17) = 14551_u16 >> _15;
(*_1) = -_20;
_30 = _15;
(*_17) = 33968_u16 << _9;
(*_1) = _20 + _10;
(*_17) = 60718_u16;
Goto(bb15)
}
bb43 = {
Return()
}
bb44 = {
(*_62) = -_78;
_57 = Move(_82.1);
(*_62) = _78 * _74;
_82.2 = _31 + _15;
(*_62) = _74 + _78;
Goto(bb45)
}
bb45 = {
_42 = core::ptr::addr_of_mut!(_55);
_37 = _34 | _38;
_22 = !_26;
(*_51) = _78 + _78;
_53 = [_60,_60,_60,_60,_60,_60,_60,_60];
_24 = core::ptr::addr_of!(_39);
(*_24) = _64;
_17 = &mut (*_50);
(*_42) = [(*_17),(*_17),(*_17)];
(*_42) = [(*_17),(*_17),(*_17)];
_65 = _71.0;
_4 = core::ptr::addr_of_mut!(_20);
_83 = _82.2;
_95.3 = &mut _58;
(*_42) = [(*_17),(*_17),(*_17)];
(*_17) = 64131_u16 & 25271_u16;
_85 = (*_17) as i32;
_64 = !(*_24);
_81 = _52 as i64;
match RET {
0 => bb32,
1 => bb46,
2 => bb47,
3 => bb48,
4 => bb49,
5 => bb50,
340282366920938463463374607431768208476 => bb52,
_ => bb51
}
}
bb46 = {
_22 = _26 | _3;
_49 = [112_i8,(-60_i8),(-31_i8),84_i8,(-113_i8),(-72_i8),49_i8];
_9 = _28 + _28;
_18 = _15 >> _38;
(*_44) = 4141578688103003835_usize as u16;
_38 = _37;
_24 = core::ptr::addr_of!(_39);
_11 = (*_24) as isize;
(*_44) = !50042_u16;
_46 = [_28,_9,_9,_9];
(*_44) = 25996_u16 - 24227_u16;
(*_44) = 60373_u16 - 5044_u16;
(*_24) = _12 as u128;
_45 = _33;
(*_44) = 20575_u16;
_1 = Move(_29.1);
_8 = _45;
_55 = [(*_44),(*_44),(*_44)];
match (*_44) {
0 => bb7,
20575 => bb23,
_ => bb22
}
}
bb47 = {
(*_17) = 55000_u16;
_29 = (3728885454_u32, Move(_4), _11);
(*_17) = _35 as u16;
(*_24) = !224306793640204125278567336893226656133_u128;
_30 = !_11;
(*_17) = 20234_u16 + 51239_u16;
_22 = !_26;
(*_17) = 40525_u16;
_9 = _28;
(*_24) = 68008279846204348443307136245321864500_u128 ^ 337437249164220411663767835041844985883_u128;
(*_24) = 265004963578740278993581330484717507938_u128;
(*_17) = 43276_u16;
_35 = _10 * _10;
_9 = _28;
_39 = 31837472526621735987687673035707821247_u128 + 310528564394919373435723951953695642456_u128;
(*_24) = 339868967758487443026964526887396530409_u128 & 79042455836037228701832711526378747326_u128;
_47 = [_29.0];
_46 = [_28,_9,_9,_9];
(*_17) = 27137_u16;
Goto(bb20)
}
bb48 = {
Return()
}
bb49 = {
_39 = _64 | _64;
_71 = (_65, _26, RET, Move(_1));
_33 = _21;
_68.1 = [_60,_60,_60,_60,_60,_60,_60,_60];
_82.1 = core::ptr::addr_of_mut!(_36);
_15 = _34;
(*_69) = [16819_u16,53132_u16,48146_u16];
(*_24) = !_64;
(*_51) = -_74;
(*_51) = _74 - _78;
place!(Field::<i128>(Variant(_40, 0), 7)) = 2705345126329590594256164731970039405_i128 << _37;
_3 = _26;
_80.2 = Field::<u8>(Variant(_40, 0), 4) as u32;
Goto(bb39)
}
bb50 = {
_9 = _28 & _28;
_43 = _45;
(*_44) = 64259_u16 ^ 58828_u16;
(*_44) = 60423_u16 >> (*_24);
_42 = core::ptr::addr_of_mut!(_55);
_39 = 214655367584863076959487058856745000289_u128 - 37107568785445790052345450027658053026_u128;
_3 = (*_44) <= (*_44);
_57 = core::ptr::addr_of_mut!(_36);
_19 = &_29.0;
_52 = (*_57) as u8;
(*_57) = _10 + _20;
_29 = (1739645142_u32, Move(_57), _18);
_58 = !_9;
_53 = [(-50_i8),93_i8,14_i8,(-26_i8),47_i8,64_i8,(-67_i8),77_i8];
_58 = _28;
_8 = _45;
(*_44) = 2651_u16 - 25875_u16;
(*_44) = 23638_u16 >> _38;
_43 = _8;
_8 = _45;
_3 = (*_44) == (*_44);
(*_44) = 48852_u16 * 1181_u16;
(*_42) = [(*_44),(*_44),(*_44)];
match _29.0 {
0 => bb20,
1 => bb21,
2 => bb16,
1739645142 => bb24,
_ => bb18
}
}
bb51 = {
Return()
}
bb52 = {
_34 = _80.2 as isize;
_95.2 = core::ptr::addr_of!((*_42));
_51 = core::ptr::addr_of!((*_51));
_71.2 = RET & RET;
_38 = _18 + _76;
_99 = (*_4) ^ (*_4);
_100 = _26 >= _3;
_90.2 = _71.2;
_82 = (_80.2, Move(_4), _30);
(*_24) = !_64;
Goto(bb53)
}
bb53 = {
Call(_106 = dump_var(2_usize, 99_usize, Move(_99), 28_usize, Move(_28), 39_usize, Move(_39), 88_usize, Move(_88)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_106 = dump_var(2_usize, 66_usize, Move(_66), 11_usize, Move(_11), 36_usize, Move(_36), 43_usize, Move(_43)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_106 = dump_var(2_usize, 20_usize, Move(_20), 23_usize, Move(_23), 9_usize, Move(_9), 10_usize, Move(_10)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_106 = dump_var(2_usize, 31_usize, Move(_31), 22_usize, Move(_22), 18_usize, Move(_18), 85_usize, Move(_85)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_106 = dump_var(2_usize, 30_usize, Move(_30), 12_usize, Move(_12), 100_usize, Move(_100), 64_usize, Move(_64)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_106 = dump_var(2_usize, 38_usize, Move(_38), 3_usize, Move(_3), 8_usize, Move(_8), 107_usize, _107), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3() -> isize {
mir! {
type RET = isize;
let _1: isize;
let _2: Adt23;
let _3: &'static Adt36;
let _4: f64;
let _5: [u64; 4];
let _6: Adt68;
let _7: Adt25;
let _8: char;
let _9: [u64; 4];
let _10: u16;
let _11: &'static mut bool;
let _12: &'static mut u16;
let _13: bool;
let _14: i16;
let _15: &'static Adt25;
let _16: i64;
let _17: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _18: f32;
let _19: f32;
let _20: &'static mut bool;
let _21: &'static mut u32;
let _22: i16;
let _23: *const [i8; 7];
let _24: i64;
let _25: Adt36;
let _26: u8;
let _27: i8;
let _28: f32;
let _29: &'static &'static mut u64;
let _30: char;
let _31: [i8; 7];
let _32: f64;
let _33: ();
let _34: ();
{
RET = 33_isize;
RET = 39741705861872932792754784695631739453_i128 as isize;
RET = 1787245752_i32 as isize;
RET = 9223372036854775807_isize;
RET = 89_isize ^ 54_isize;
RET = (-4730586557413940221_i64) as isize;
RET = (-115_isize) & (-9223372036854775808_isize);
RET = 9223372036854775807_isize ^ 9223372036854775807_isize;
RET = -9223372036854775807_isize;
RET = -9223372036854775807_isize;
_1 = RET ^ RET;
_1 = RET ^ RET;
_2 = Adt23::Variant0 { fld0: 13100411570136904092_u64,fld1: 17374_i16,fld2: 194_u8 };
place!(Field::<u8>(Variant(_2, 0), 2)) = (-9654559557131422834425486755286013506_i128) as u8;
_2 = Adt23::Variant0 { fld0: 17594570694293730839_u64,fld1: 14448_i16,fld2: 137_u8 };
RET = _1;
_4 = 49052_u16 as f64;
place!(Field::<i16>(Variant(_2, 0), 1)) = !(-14364_i16);
RET = _1 >> _1;
place!(Field::<u64>(Variant(_2, 0), 0)) = 257634819907191902_u64 | 7119142091036523345_u64;
place!(Field::<u64>(Variant(_2, 0), 0)) = 4136308560997904935_u64 * 1628762993213791634_u64;
place!(Field::<u8>(Variant(_2, 0), 2)) = 40_u8 + 100_u8;
_5 = [Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
_5 = [Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
Goto(bb1)
}
bb1 = {
_5 = [Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
_8 = '\u{ad80a}';
place!(Field::<u8>(Variant(_2, 0), 2)) = 72_u8 << RET;
RET = _1 & _1;
_1 = !RET;
place!(Field::<u8>(Variant(_2, 0), 2)) = 97_u8 >> _1;
_1 = RET;
_5 = [Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
_8 = '\u{c20c5}';
_9 = [Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
_10 = 25497_u16 * 59830_u16;
_10 = 32866839372436880801145912491646241061_i128 as u16;
_7.fld2 = Field::<u64>(Variant(_2, 0), 0);
_7.fld4 = Field::<i16>(Variant(_2, 0), 1) | Field::<i16>(Variant(_2, 0), 1);
_7.fld0 = _7.fld4 as usize;
Call(_9 = fn4(Field::<u64>(Variant(_2, 0), 0)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_7.fld0 = !2_usize;
_7.fld3 = !162602905620329037600136033730896080009_u128;
_8 = '\u{55927}';
RET = -_1;
_7.fld3 = 122391309525935182704351971294165501682_u128 & 262861748084432214102912006769097969919_u128;
_1 = RET << RET;
place!(Field::<u64>(Variant(_2, 0), 0)) = _7.fld2 >> Field::<i16>(Variant(_2, 0), 1);
_7.fld4 = -Field::<i16>(Variant(_2, 0), 1);
RET = _1;
_12 = &mut _10;
_5 = [Field::<u64>(Variant(_2, 0), 0),_7.fld2,Field::<u64>(Variant(_2, 0), 0),Field::<u64>(Variant(_2, 0), 0)];
_9 = _5;
(*_12) = 54193_u16 ^ 1132_u16;
_7.fld2 = !Field::<u64>(Variant(_2, 0), 0);
_14 = 6696756053491068173_i64 as i16;
(*_12) = 43544_u16 | 21374_u16;
place!(Field::<i16>(Variant(_2, 0), 1)) = _7.fld4 + _14;
_7.fld2 = Field::<u64>(Variant(_2, 0), 0);
place!(Field::<u8>(Variant(_2, 0), 2)) = 211_u8 | 62_u8;
_8 = '\u{ee92a}';
place!(Field::<i16>(Variant(_2, 0), 1)) = _7.fld4;
(*_12) = 3757_u16 << Field::<u8>(Variant(_2, 0), 2);
(*_12) = !40949_u16;
(*_12) = 15669_u16 >> _1;
Goto(bb3)
}
bb3 = {
(*_12) = 38554_u16 | 57393_u16;
(*_12) = 55143_u16 >> Field::<u64>(Variant(_2, 0), 0);
place!(Field::<u64>(Variant(_2, 0), 0)) = !_7.fld2;
(*_12) = 54593_u16 | 65326_u16;
_1 = RET;
(*_12) = Field::<u8>(Variant(_2, 0), 2) as u16;
(*_12) = _8 as u16;
(*_12) = 55919_u16;
(*_12) = !18726_u16;
(*_12) = !40686_u16;
(*_12) = 61216_u16 << Field::<u64>(Variant(_2, 0), 0);
_14 = _7.fld4 ^ _7.fld4;
(*_12) = 48677_u16 - 35681_u16;
_7.fld3 = 44230204962449178633690432539800409169_u128 << _7.fld2;
(*_12) = 1602_u16 & 57416_u16;
(*_12) = 11788_u16;
_1 = RET;
(*_12) = _4 as u16;
(*_12) = 57256_u16;
(*_12) = 14935_u16 << RET;
(*_12) = !35878_u16;
Call((*_12) = core::intrinsics::transmute(Field::<i16>(Variant(_2, 0), 1)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_8 = '\u{fb95c}';
place!(Field::<i16>(Variant(_2, 0), 1)) = _7.fld4 & _7.fld4;
_13 = Field::<i16>(Variant(_2, 0), 1) == Field::<i16>(Variant(_2, 0), 1);
_7.fld4 = Field::<i16>(Variant(_2, 0), 1) ^ _14;
_11 = &mut _13;
(*_11) = true | false;
(*_11) = false | false;
(*_12) = 49050_u16;
_16 = (-2852116373494136661_i64) >> RET;
(*_12) = 11885_u16 ^ 61231_u16;
(*_12) = 28866_u16;
(*_12) = _1 as u16;
_8 = '\u{57969}';
(*_12) = !63910_u16;
Call((*_12) = core::intrinsics::bswap(48946_u16), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
(*_11) = _7.fld3 <= _7.fld3;
(*_11) = false ^ false;
_14 = Field::<i16>(Variant(_2, 0), 1) * Field::<i16>(Variant(_2, 0), 1);
(*_12) = 23607_u16;
_20 = Move(_11);
(*_12) = 53400_u16;
(*_12) = 21587_u16 & 57735_u16;
(*_12) = !22004_u16;
(*_12) = !26626_u16;
_14 = Field::<i16>(Variant(_2, 0), 1);
(*_12) = 42369_u16 << _1;
_19 = _7.fld2 as f32;
(*_12) = 21406_u16;
(*_12) = 34571_u16 << _7.fld2;
(*_12) = _8 as u16;
_7.fld2 = Field::<u64>(Variant(_2, 0), 0);
(*_12) = !46105_u16;
(*_12) = !5576_u16;
(*_12) = !27351_u16;
place!(Field::<i16>(Variant(_2, 0), 1)) = -_14;
(*_12) = 40112_u16 >> Field::<u64>(Variant(_2, 0), 0);
_9 = [_7.fld2,_7.fld2,_7.fld2,_7.fld2];
_19 = _7.fld3 as f32;
_7.fld4 = -_14;
_17.3 = &mut place!(Field::<u64>(Variant(_2, 0), 0));
(*_12) = 13797_u16;
Goto(bb6)
}
bb6 = {
_5 = [_7.fld2,_7.fld2,_7.fld2,_7.fld2];
(*_12) = RET as u16;
(*_12) = 30436_u16 ^ 8947_u16;
_17.0 = _5;
(*_12) = !54079_u16;
_7.fld2 = 17867199146610733932_u64;
(*_12) = _7.fld0 as u16;
(*_12) = !43333_u16;
(*_12) = 56894_u16 * 45001_u16;
(*_12) = _7.fld3 as u16;
match _7.fld2 {
17867199146610733932 => bb7,
_ => bb4
}
}
bb7 = {
_7.fld2 = 1443462900458938923_u64 - 12646470528453147455_u64;
RET = -_1;
(*_12) = 60721_u16 | 2809_u16;
(*_12) = 29055_u16;
_18 = _19 - _19;
_17.1 = _18;
RET = 916191662_i32 as isize;
Goto(bb8)
}
bb8 = {
(*_12) = 16235_u16 | 19215_u16;
_17.3 = &mut _7.fld2;
_5 = [13382871789602056320_u64,14258773799754571498_u64,3270393658577061319_u64,643864513237720441_u64];
_14 = 4680_i16;
_22 = _14 ^ _14;
(*_12) = 15812_u16;
(*_12) = 33447_u16 * 51909_u16;
(*_12) = _4 as u16;
(*_12) = _16 as u16;
_25.fld0.fld2 = 9924145217666028023_usize as u64;
_25.fld0.fld4 = _22 | _22;
(*_12) = !4901_u16;
_25.fld0.fld0 = 558782679888298120_usize ^ 4_usize;
_25.fld1 = _8;
(*_12) = !27712_u16;
(*_12) = 17492_u16;
(*_12) = 29578_u16;
Goto(bb9)
}
bb9 = {
(*_12) = 52343_u16 + 42095_u16;
_17.3 = &mut _25.fld0.fld2;
(*_12) = 209_u8 as u16;
(*_12) = 34599_u16 | 32536_u16;
(*_12) = 22582_u16 | 27843_u16;
RET = _1 & _1;
_30 = _8;
_30 = _8;
_27 = true as i8;
_17.0 = _5;
(*_12) = 15673_u16;
(*_12) = 3119_u16 << _1;
(*_12) = !49086_u16;
(*_12) = 35954_u16;
_5 = [12142464130518449508_u64,14264819723821926354_u64,3765220952667276282_u64,1639328516459383172_u64];
Goto(bb10)
}
bb10 = {
Call(_33 = dump_var(3_usize, 9_usize, Move(_9), 5_usize, Move(_5), 16_usize, Move(_16), 27_usize, Move(_27)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_33 = dump_var(3_usize, 14_usize, Move(_14), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: u64) -> [u64; 4] {
mir! {
type RET = [u64; 4];
let _2: *const [u16; 3];
let _3: (u32, *mut i32, isize);
let _4: &'static *const [u16; 3];
let _5: i128;
let _6: usize;
let _7: &'static *mut bool;
let _8: u8;
let _9: u8;
let _10: i128;
let _11: bool;
let _12: isize;
let _13: [i64; 1];
let _14: *const [u16; 3];
let _15: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _16: &'static mut Adt36;
let _17: *mut u8;
let _18: &'static Adt29;
let _19: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _20: Adt79;
let _21: *const Adt17;
let _22: *const *mut bool;
let _23: &'static *const [i8; 8];
let _24: &'static mut u32;
let _25: Adt17;
let _26: *const [i8; 7];
let _27: *mut i32;
let _28: *mut Adt17;
let _29: *const f64;
let _30: f64;
let _31: Adt68;
let _32: *const u128;
let _33: (Adt17, u64, &'static u32, u64);
let _34: [i64; 1];
let _35: bool;
let _36: [i8; 7];
let _37: f64;
let _38: isize;
let _39: [i64; 1];
let _40: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _41: &'static Adt29;
let _42: f32;
let _43: u32;
let _44: *const [i8; 8];
let _45: i128;
let _46: &'static mut u64;
let _47: &'static *const [i8; 8];
let _48: [char; 8];
let _49: isize;
let _50: char;
let _51: bool;
let _52: *const [u16; 3];
let _53: i16;
let _54: char;
let _55: Adt36;
let _56: f64;
let _57: i16;
let _58: &'static mut u32;
let _59: &'static Adt23;
let _60: [i8; 7];
let _61: (u32, *mut i32, isize);
let _62: *mut Adt17;
let _63: *mut u8;
let _64: char;
let _65: isize;
let _66: char;
let _67: i64;
let _68: &'static mut u64;
let _69: bool;
let _70: *const [u16; 3];
let _71: *mut u128;
let _72: *mut i32;
let _73: char;
let _74: bool;
let _75: char;
let _76: &'static *const [u16; 3];
let _77: f64;
let _78: isize;
let _79: [isize; 1];
let _80: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _81: char;
let _82: [u32; 1];
let _83: *const u128;
let _84: Adt36;
let _85: f32;
let _86: *const *mut bool;
let _87: i32;
let _88: &'static Adt23;
let _89: f32;
let _90: f64;
let _91: u64;
let _92: (&'static mut u32, [i8; 8], u32);
let _93: f32;
let _94: (Adt17, u64, &'static u32, u64);
let _95: *mut u128;
let _96: &'static &'static mut u64;
let _97: [u64; 4];
let _98: [i64; 1];
let _99: i128;
let _100: char;
let _101: &'static *mut bool;
let _102: i16;
let _103: char;
let _104: Adt29;
let _105: Adt36;
let _106: &'static mut u32;
let _107: Adt24;
let _108: *mut isize;
let _109: (Adt17, u64, &'static u32, u64);
let _110: [i8; 7];
let _111: isize;
let _112: *const u128;
let _113: bool;
let _114: isize;
let _115: i16;
let _116: [i64; 1];
let _117: u8;
let _118: Adt23;
let _119: *mut u64;
let _120: *mut isize;
let _121: &'static i64;
let _122: bool;
let _123: f32;
let _124: f64;
let _125: &'static Adt29;
let _126: i32;
let _127: *const u128;
let _128: *const u32;
let _129: char;
let _130: ();
let _131: ();
{
RET = [_1,_1,_1,_1];
_3.0 = 3745967464_u32 | 1261766322_u32;
_1 = !13630633168763963373_u64;
_3.2 = 9223372036854775807_isize;
RET = [_1,_1,_1,_1];
_1 = 9998436886407871916_u64;
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
RET = [_1,_1,_1,_1];
_3.0 = 1078899838_u32 + 700191283_u32;
_1 = 1436649122071432149_u64;
_3.2 = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_3.2 = !73_isize;
RET = [_1,_1,_1,_1];
_3.0 = 576013988_u32;
_1 = !14279629815418109349_u64;
_1 = !9540782497440912855_u64;
_3.2 = -(-9223372036854775808_isize);
_3.0 = 2732426322_u32 << _1;
RET = [_1,_1,_1,_1];
Goto(bb1)
}
bb1 = {
_1 = !12383985791158371636_u64;
_3.2 = 137677591110757838212017147354918769825_u128 as isize;
_1 = 7083622719582087654_u64 + 146857765904564085_u64;
_5 = 51293645683815288450714665833684270284_i128 >> _3.0;
_3.0 = 2258815113_u32;
_5 = -82922842423086568962445831567012300532_i128;
_3.2 = _1 as isize;
_5 = 101802879561460271365648613343619878299_i128 - 124757863823617135811712971791852671831_i128;
RET = [_1,_1,_1,_1];
_5 = (-156910896744343182185869124664212177382_i128) * (-79573399004718151521597242987027485788_i128);
_1 = !17859857306850870695_u64;
_3.0 = 2332312637_u32;
_6 = (-67135590_i32) as usize;
_5 = 42221532767993719957630295943614566400_i128 & (-25396505986369211960146956341898229226_i128);
_1 = !3458253906637999227_u64;
_6 = _3.2 as usize;
_3.0 = !1527993896_u32;
RET = [_1,_1,_1,_1];
_3.0 = 2710965262_u32 * 3796596425_u32;
_9 = !235_u8;
_1 = 3055904762035049960_u64 + 13465087473148051809_u64;
_6 = 2_usize & 5856108794794224411_usize;
_9 = 177825374903236735206722933825151876475_u128 as u8;
Call(_3 = fn5(_1, _6, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = _9 >> _3.2;
RET = [_1,_1,_1,_1];
_5 = (-55991239427917505681199619653591568212_i128) >> _8;
_9 = '\u{1e4c8}' as u8;
_10 = !_5;
_5 = _10 * _10;
_8 = 60904_u16 as u8;
_1 = 13628160111824821356_u64;
_5 = _10 - _10;
_5 = !_10;
_3.2 = (-9223372036854775808_isize) | (-12_isize);
_11 = _5 < _10;
RET = [_1,_1,_1,_1];
match _1 {
0 => bb3,
1 => bb4,
13628160111824821356 => bb6,
_ => bb5
}
}
bb3 = {
_1 = !12383985791158371636_u64;
_3.2 = 137677591110757838212017147354918769825_u128 as isize;
_1 = 7083622719582087654_u64 + 146857765904564085_u64;
_5 = 51293645683815288450714665833684270284_i128 >> _3.0;
_3.0 = 2258815113_u32;
_5 = -82922842423086568962445831567012300532_i128;
_3.2 = _1 as isize;
_5 = 101802879561460271365648613343619878299_i128 - 124757863823617135811712971791852671831_i128;
RET = [_1,_1,_1,_1];
_5 = (-156910896744343182185869124664212177382_i128) * (-79573399004718151521597242987027485788_i128);
_1 = !17859857306850870695_u64;
_3.0 = 2332312637_u32;
_6 = (-67135590_i32) as usize;
_5 = 42221532767993719957630295943614566400_i128 & (-25396505986369211960146956341898229226_i128);
_1 = !3458253906637999227_u64;
_6 = _3.2 as usize;
_3.0 = !1527993896_u32;
RET = [_1,_1,_1,_1];
_3.0 = 2710965262_u32 * 3796596425_u32;
_9 = !235_u8;
_1 = 3055904762035049960_u64 + 13465087473148051809_u64;
_6 = 2_usize & 5856108794794224411_usize;
_9 = 177825374903236735206722933825151876475_u128 as u8;
Call(_3 = fn5(_1, _6, RET), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12 = _3.2;
_6 = 6_usize - 3_usize;
_3.0 = 1566849320_u32 >> _10;
_8 = _9;
_1 = 13704401809458393270_u64 & 11513900877057105639_u64;
_3.2 = (-30489_i16) as isize;
_10 = _11 as i128;
_3.2 = 959802478_i32 as isize;
_10 = _5;
_10 = _5 ^ _5;
_11 = !false;
_1 = 6227785459869896179_i64 as u64;
_5 = 8955182173828617157_i64 as i128;
_3.2 = !_12;
_11 = false & true;
_15.1.2 = _1 - _1;
_15.1.1 = _11;
_15.1.3.fld2.3 = Move(_3.1);
_15.1.0 = _3.0 & _3.0;
_10 = !_5;
_13 = [5623734620657204775_i64];
Call(_15.1.3.fld0.fld3 = core::intrinsics::transmute(_10), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_5 = 41266_u16 as i128;
_13 = [(-534313203798440990_i64)];
_15.1.0 = _3.0 >> _3.0;
_15.2 = core::ptr::addr_of_mut!(_19.1);
_15.1.3.fld0.fld4 = !(-29205_i16);
_15.1.3.fld2.2 = _15.1.3.fld0.fld4 & _15.1.3.fld0.fld4;
_12 = !_3.2;
_15.1.3.fld0.fld2 = _15.1.2 * _15.1.2;
_15.1.3.fld2.2 = _15.1.3.fld0.fld4;
_8 = _9;
_3.1 = Move(_15.1.3.fld2.3);
_19.1 = 9048044472672569211_i64 as f32;
_19.0 = [_15.1.2,_15.1.3.fld0.fld2,_15.1.3.fld0.fld2,_15.1.3.fld0.fld2];
_17 = core::ptr::addr_of_mut!(_8);
_25.fld2 = 101_i8 as f64;
(*_17) = _9 | _9;
_9 = !(*_17);
_19.1 = _10 as f32;
Goto(bb8)
}
bb8 = {
_15.1.3.fld2.3 = Move(_3.1);
_15.2 = core::ptr::addr_of_mut!(_19.1);
_24 = &mut _15.1.0;
_19.0 = RET;
_12 = _3.2 ^ _3.2;
_1 = !16446743504635269853_u64;
(*_24) = _3.0;
_1 = !8540417521395090844_u64;
(*_24) = !_3.0;
(*_17) = _9;
(*_17) = _9 ^ _9;
(*_24) = _3.0 << _3.0;
(*_17) = !_9;
Goto(bb9)
}
bb9 = {
(*_17) = _9;
_21 = core::ptr::addr_of!(_25);
(*_21).fld1 = !(*_24);
_19.0 = [_1,_1,_1,_1];
(*_21).fld1 = (*_24);
(*_21).fld0 = (*_21).fld2 as u16;
(*_21).fld2 = _1 as f64;
(*_17) = _10 as u8;
(*_17) = _9 | _9;
(*_24) = (*_17) as u32;
_5 = _10;
(*_21).fld0 = 9465_u16;
_19.0 = [_1,_1,_1,_1];
(*_21).fld1 = (*_24) - (*_24);
_3.2 = _12;
(*_24) = (*_21).fld1;
(*_24) = !_3.0;
(*_21).fld0 = 49363_u16;
(*_21).fld2 = (*_24) as f64;
_12 = !_3.2;
_17 = core::ptr::addr_of_mut!((*_17));
(*_21).fld1 = _1 as u32;
match (*_21).fld0 {
0 => bb7,
1 => bb6,
2 => bb8,
3 => bb4,
49363 => bb10,
_ => bb5
}
}
bb10 = {
(*_21).fld0 = (*_21).fld2 as u16;
(*_21).fld2 = (*_17) as f64;
(*_21).fld0 = 165251568437352204141513516549198333898_u128 as u16;
(*_21).fld0 = (-19029_i16) as u16;
(*_21).fld1 = !(*_24);
(*_24) = (*_21).fld1 * (*_21).fld1;
(*_21).fld2 = (-72_i8) as f64;
(*_21).fld0 = 48087_u16;
(*_21).fld0 = _6 as u16;
(*_17) = _1 as u8;
(*_24) = (*_21).fld1;
_3.2 = -_12;
(*_21).fld1 = !(*_24);
Goto(bb11)
}
bb11 = {
_25.fld1 = (*_24) & (*_24);
(*_21).fld1 = 82237543900589912010700969048174160717_u128 as u32;
(*_21).fld1 = (*_24) << (*_24);
(*_21).fld2 = _5 as f64;
(*_17) = !_9;
_13 = [311350450588135834_i64];
(*_21).fld0 = _3.2 as u16;
(*_21).fld0 = 4187_u16 & 37444_u16;
(*_24) = _25.fld1 - (*_21).fld1;
(*_21).fld1 = (*_24) ^ (*_24);
(*_21).fld0 = 36392_u16 >> (*_21).fld1;
(*_21).fld0 = 19630_u16 | 20768_u16;
(*_24) = _10 as u32;
(*_17) = _9 | _9;
(*_24) = (*_21).fld1;
(*_21).fld1 = !(*_24);
(*_17) = _9;
_19.0 = RET;
(*_24) = (-7946078602125607708_i64) as u32;
(*_21).fld0 = !23588_u16;
_33.0 = Adt17 { fld0: (*_21).fld0,fld1: (*_21).fld1,fld2: (*_21).fld2 };
_35 = (*_21).fld1 > (*_21).fld1;
Call(_33.3 = core::intrinsics::transmute(_12), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_21) = Adt17 { fld0: _33.0.fld0,fld1: _33.0.fld1,fld2: _33.0.fld2 };
(*_21).fld1 = (*_17) as u32;
(*_21).fld0 = _33.0.fld0 & _33.0.fld0;
_33.1 = _3.2 as u64;
(*_21).fld1 = !_3.0;
(*_17) = !_9;
(*_24) = 194444387004617510613064775993518952355_u128 as u32;
(*_24) = !(*_21).fld1;
(*_17) = _33.3 as u8;
(*_21).fld2 = _33.0.fld2 - _33.0.fld2;
_39 = _13;
(*_21) = Move(_33.0);
(*_24) = (*_21).fld1;
(*_21).fld0 = _10 as u16;
(*_24) = (*_21).fld1 ^ (*_21).fld1;
_33.0.fld0 = (*_21).fld0;
_34 = _13;
(*_21).fld0 = _33.0.fld0 ^ _33.0.fld0;
(*_17) = _9 ^ _9;
Goto(bb13)
}
bb13 = {
_40.1.3.fld3 = core::ptr::addr_of!((*_24));
(*_21).fld1 = (*_24) * (*_24);
_40.1.3.fld2.2 = _35 as i16;
_24 = &mut (*_21).fld1;
(*_17) = _9;
_40.1.2 = _33.1;
(*_21).fld0 = _33.0.fld0 - _33.0.fld0;
_33.2 = &(*_24);
(*_17) = !_9;
_19.1 = (-4765297810226008415_i64) as f32;
(*_17) = _9;
(*_24) = _3.0 + _3.0;
(*_21).fld2 = 123975764355478466348018188301601468039_u128 as f64;
_12 = _3.2 & _3.2;
_40.1.3.fld3 = core::ptr::addr_of!(_3.0);
Goto(bb14)
}
bb14 = {
(*_17) = _9 * _9;
_19.3 = &mut _40.1.2;
(*_21).fld0 = !_33.0.fld0;
_24 = &mut _3.0;
(*_17) = _9;
(*_17) = (-127_i8) as u8;
(*_24) = 554167955_u32 << _12;
_29 = core::ptr::addr_of!((*_21).fld2);
(*_17) = _9 + _9;
(*_21).fld0 = _33.0.fld0;
Goto(bb15)
}
bb15 = {
(*_21).fld2 = _5 as f64;
(*_24) = 20690_i16 as u32;
(*_17) = (*_21).fld0 as u8;
_28 = core::ptr::addr_of_mut!(_33.0);
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _9 * _9;
(*_21).fld0 = !(*_28).fld0;
RET = _19.0;
(*_24) = _11 as u32;
(*_28).fld0 = (*_21).fld0 + (*_21).fld0;
(*_28).fld0 = (*_28).fld2 as u16;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_38 = -_12;
(*_21).fld2 = 138273102795352400548726326544963761866_u128 as f64;
_1 = !_33.3;
Goto(bb16)
}
bb16 = {
(*_28).fld0 = (*_28).fld1 as u16;
(*_17) = !_9;
_39 = [(-3231728712213906980_i64)];
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld2 = _12 as f64;
_5 = 48676296218510845957663744876263954857_u128 as i128;
(*_28).fld0 = _33.3 as u16;
(*_21).fld0 = (-2284885632124929238_i64) as u16;
(*_28).fld0 = !(*_21).fld0;
(*_21).fld0 = !(*_28).fld0;
Goto(bb17)
}
bb17 = {
_39 = [(-4690119866914038855_i64)];
(*_21).fld2 = -(*_28).fld2;
(*_21).fld0 = !(*_28).fld0;
(*_21).fld2 = (*_28).fld2;
(*_28).fld0 = (*_21).fld0 >> (*_28).fld1;
(*_21).fld2 = (*_28).fld2 * (*_28).fld2;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _6 as u8;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_28).fld1 = !(*_24);
(*_28).fld1 = _10 as u32;
(*_28).fld1 = !(*_24);
(*_28).fld0 = (*_17) as u16;
_36 = [3_i8,(-97_i8),25_i8,55_i8,35_i8,30_i8,(-125_i8)];
(*_28).fld0 = (*_21).fld0 - (*_21).fld0;
(*_28).fld2 = (*_21).fld2;
(*_17) = '\u{48766}' as u8;
_50 = '\u{212f0}';
(*_28).fld0 = _35 as u16;
(*_28).fld2 = -(*_21).fld2;
Goto(bb18)
}
bb18 = {
(*_28).fld0 = (*_21).fld0 * (*_21).fld0;
(*_28).fld2 = (*_21).fld2;
(*_28).fld1 = !(*_24);
_19.0 = [_33.1,_1,_33.1,_33.3];
_50 = '\u{cde36}';
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_49 = _12 ^ _12;
_38 = -_12;
(*_21).fld0 = !(*_28).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _9 << _12;
(*_28).fld0 = (*_21).fld0;
(*_28).fld1 = (*_24);
_17 = core::ptr::addr_of_mut!((*_17));
(*_28).fld1 = _6 as u32;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld0 = 29945_i16 as u16;
(*_21).fld0 = (*_28).fld0;
(*_17) = _1 as u8;
(*_17) = _9 * _9;
(*_24) = (*_28).fld2 as u32;
(*_28).fld0 = !(*_21).fld0;
_12 = _49;
Goto(bb19)
}
bb19 = {
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_43 = (*_28).fld1 + (*_28).fld1;
(*_21).fld2 = (*_28).fld2 - (*_28).fld2;
Goto(bb20)
}
bb20 = {
_55.fld2.0 = _49;
(*_28).fld0 = (*_21).fld0;
_26 = core::ptr::addr_of!(_36);
(*_21).fld0 = (*_28).fld0 | (*_28).fld0;
_57 = (-28116_i16);
(*_17) = !_9;
(*_28).fld1 = _10 as u32;
(*_28).fld1 = (*_24) ^ (*_24);
(*_17) = 125_i8 as u8;
(*_28).fld0 = (*_21).fld0 + (*_21).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_28).fld0 = (*_21).fld0;
_55.fld3 = core::ptr::addr_of!((*_24));
(*_26) = [8_i8,(-124_i8),74_i8,4_i8,(-118_i8),(-47_i8),1_i8];
(*_17) = _9;
(*_26) = [(-55_i8),88_i8,(-105_i8),47_i8,(-71_i8),(-3_i8),(-10_i8)];
(*_28).fld1 = (*_24) - (*_24);
(*_21).fld2 = (*_28).fld2 - (*_28).fld2;
(*_21).fld2 = -(*_28).fld2;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_24) = !(*_28).fld1;
(*_21).fld2 = -(*_28).fld2;
(*_24) = (*_28).fld1 << (*_17);
_39 = _34;
(*_28).fld2 = -(*_21).fld2;
(*_17) = _12 as u8;
_17 = core::ptr::addr_of_mut!((*_17));
(*_24) = (*_28).fld1 * (*_28).fld1;
Goto(bb21)
}
bb21 = {
_55.fld0.fld4 = _57 + _57;
(*_21).fld0 = _5 as u16;
(*_21).fld0 = (*_28).fld0 * (*_28).fld0;
(*_21).fld2 = -(*_28).fld2;
(*_21).fld2 = (*_28).fld2 * (*_28).fld2;
(*_28).fld0 = (*_21).fld0;
(*_28).fld1 = !(*_24);
(*_24) = (*_28).fld1 ^ (*_28).fld1;
(*_24) = _43;
_55.fld0.fld0 = _6;
_61.2 = _12;
(*_17) = _9 ^ _9;
(*_24) = (*_28).fld1 ^ (*_28).fld1;
(*_28).fld2 = (*_21).fld2 - (*_21).fld2;
_33.3 = 9_i8 as u64;
(*_28).fld2 = (*_21).fld2 - (*_21).fld2;
(*_28).fld0 = (*_21).fld0;
_55.fld0.fld1 = core::ptr::addr_of_mut!((*_28));
(*_26) = [(-100_i8),40_i8,25_i8,91_i8,21_i8,74_i8,26_i8];
_19.3 = &mut _33.3;
_57 = _55.fld0.fld4 + _55.fld0.fld4;
(*_21).fld0 = (*_28).fld0 * (*_28).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_61.0 = (*_28).fld1 * (*_28).fld1;
(*_24) = _61.0 - (*_28).fld1;
(*_26) = [(-83_i8),104_i8,64_i8,82_i8,23_i8,(-122_i8),72_i8];
Goto(bb22)
}
bb22 = {
(*_28).fld1 = (*_24);
_55.fld0.fld2 = !_1;
(*_21).fld0 = !(*_28).fld0;
(*_21).fld0 = (*_28).fld0;
_48 = [_50,_50,_50,_50,_50,_50,_50,_50];
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld2 = (*_28).fld2 + (*_28).fld2;
_19.0 = [_55.fld0.fld2,_1,_1,_55.fld0.fld2];
_55.fld0.fld2 = _1 & _1;
(*_28).fld1 = (*_24);
(*_17) = _9 ^ _9;
_42 = (-47_i8) as f32;
_55.fld2.2 = _35 as i16;
(*_17) = _9 << _55.fld2.2;
_55.fld2.2 = 2903300006679216465_i64 as i16;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _9;
Goto(bb23)
}
bb23 = {
_66 = _50;
(*_28).fld2 = (*_21).fld2 + (*_21).fld2;
(*_28).fld1 = !(*_24);
_19.3 = &mut _55.fld0.fld2;
Goto(bb24)
}
bb24 = {
(*_26) = [0_i8,(-81_i8),90_i8,(-87_i8),(-40_i8),(-96_i8),86_i8];
Goto(bb25)
}
bb25 = {
(*_26) = [(-85_i8),40_i8,124_i8,(-67_i8),(-1_i8),(-105_i8),(-85_i8)];
(*_21).fld0 = (*_28).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_5 = _12 as i128;
Goto(bb26)
}
bb26 = {
(*_28).fld0 = (*_21).fld0;
_68 = &mut _1;
(*_21).fld0 = (*_28).fld0 << (*_28).fld0;
_61.2 = -_49;
(*_21).fld0 = (*_28).fld0 * (*_28).fld0;
_9 = (*_17) * (*_17);
(*_21).fld2 = -(*_28).fld2;
(*_21).fld2 = (*_28).fld2 + (*_28).fld2;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld2 = -(*_28).fld2;
(*_17) = !_9;
_6 = _5 as usize;
_58 = &mut (*_28).fld1;
(*_28).fld2 = (*_21).fld2 + (*_21).fld2;
(*_21).fld2 = (*_28).fld2 - (*_28).fld2;
(*_58) = (*_24);
_61.0 = (*_58) & (*_58);
(*_17) = !_9;
(*_24) = !(*_58);
(*_28).fld2 = (*_21).fld2;
Goto(bb27)
}
bb27 = {
(*_21).fld2 = (*_28).fld2;
(*_26) = [68_i8,(-45_i8),(-22_i8),1_i8,(-33_i8),34_i8,(-101_i8)];
(*_28).fld2 = -(*_21).fld2;
(*_21).fld0 = _6 as u16;
_51 = (*_28).fld2 != (*_21).fld2;
(*_26) = [47_i8,46_i8,41_i8,(-31_i8),(-52_i8),(-13_i8),105_i8];
(*_28).fld2 = (*_21).fld2;
(*_17) = (-59_i8) as u8;
(*_21).fld2 = (*_28).fld2 + (*_28).fld2;
(*_28).fld2 = (*_21).fld2 * (*_21).fld2;
(*_68) = !13402172389777981217_u64;
_36 = [(-15_i8),(-10_i8),(-117_i8),(-127_i8),(-33_i8),(-100_i8),(-20_i8)];
(*_21).fld0 = (*_28).fld0 & (*_28).fld0;
_30 = (*_21).fld2 + (*_28).fld2;
(*_28).fld2 = (*_21).fld2;
(*_21).fld0 = _12 as u16;
(*_26) = [(-101_i8),102_i8,(-7_i8),(-79_i8),(-120_i8),34_i8,30_i8];
Goto(bb28)
}
bb28 = {
_61.0 = !(*_58);
(*_21).fld0 = (*_28).fld0 << (*_58);
(*_28).fld0 = (*_21).fld0;
Goto(bb29)
}
bb29 = {
_19.0 = RET;
(*_28).fld0 = !(*_21).fld0;
(*_68) = 4374189532534305653_u64 - 13419468336327698453_u64;
_63 = core::ptr::addr_of_mut!((*_17));
(*_68) = 3834907057557906663_u64;
(*_28).fld0 = (*_68) as u16;
_80.0 = [(*_68),(*_68),(*_68),(*_68)];
_63 = core::ptr::addr_of_mut!((*_63));
(*_28).fld0 = (*_21).fld0 >> (*_24);
(*_68) = 3288812362907316282_u64 & 11271182861949568334_u64;
_82 = [(*_24)];
_57 = _6 as i16;
(*_26) = [(-125_i8),62_i8,(-54_i8),13_i8,(-82_i8),67_i8,(-28_i8)];
(*_24) = (*_58) - (*_58);
(*_28).fld2 = (*_21).fld2 + _30;
(*_26) = [(-55_i8),115_i8,(-42_i8),(-116_i8),104_i8,(-70_i8),8_i8];
(*_68) = 5498705674789980163_u64 * 13261358426227380464_u64;
Goto(bb30)
}
bb30 = {
(*_17) = _9;
(*_68) = 16639414575530618530_u64;
_84.fld2.0 = (*_17) as isize;
_9 = (*_17) & (*_17);
(*_21).fld0 = (*_28).fld0;
_84.fld0 = Adt25 { fld0: _6,fld1: Move(_28),fld2: (*_68),fld3: 273231869036783297218858572902607570433_u128,fld4: _57 };
_84.fld3 = core::ptr::addr_of!((*_58));
(*_21).fld0 = 98_i8 as u16;
Goto(bb31)
}
bb31 = {
(*_21).fld0 = 26672_u16 >> (*_24);
(*_24) = (*_58);
(*_24) = (*_58);
(*_21).fld2 = _84.fld2.0 as f64;
(*_21).fld2 = _30 * _30;
(*_24) = _84.fld0.fld3 as u32;
(*_21).fld0 = 22707_u16 << (*_24);
(*_21).fld2 = _30 - _30;
_75 = _50;
(*_17) = _9;
_60 = [(-41_i8),74_i8,(-72_i8),64_i8,(-72_i8),(-109_i8),(-26_i8)];
(*_26) = [(-28_i8),76_i8,(-104_i8),85_i8,27_i8,99_i8,28_i8];
(*_21).fld0 = 11710_u16;
_45 = _35 as i128;
(*_58) = !(*_24);
(*_26) = [122_i8,(-52_i8),29_i8,(-97_i8),(-86_i8),(-48_i8),96_i8];
(*_17) = _9 & _9;
(*_24) = !(*_58);
(*_24) = (*_58) * (*_58);
(*_58) = (*_24) ^ (*_24);
(*_21).fld0 = !12187_u16;
_69 = _35;
(*_21).fld0 = 32322_u16;
_74 = !_51;
(*_26) = [(-99_i8),(-89_i8),(-92_i8),87_i8,38_i8,124_i8,59_i8];
(*_17) = (-94_i8) as u8;
Goto(bb32)
}
bb32 = {
(*_17) = _9 ^ _9;
_90 = -(*_21).fld2;
_87 = !1511746006_i32;
(*_21).fld2 = _90 * _30;
(*_26) = [(-126_i8),80_i8,(-30_i8),(-62_i8),118_i8,(-92_i8),(-86_i8)];
(*_24) = (*_68) as u32;
(*_68) = _84.fld0.fld2 & _84.fld0.fld2;
match (*_21).fld0 {
0 => bb19,
1 => bb20,
32322 => bb33,
_ => bb16
}
}
bb33 = {
_69 = !_35;
_84.fld3 = core::ptr::addr_of!((*_24));
(*_17) = _9;
(*_24) = _19.1 as u32;
(*_21).fld2 = -_90;
(*_17) = _9 | _9;
(*_58) = !_61.0;
(*_21).fld2 = -_30;
(*_24) = (*_58) ^ _61.0;
(*_24) = (*_58) - (*_58);
_83 = core::ptr::addr_of!(_84.fld0.fld3);
_54 = _75;
_9 = !(*_17);
(*_26) = [(-72_i8),90_i8,3_i8,4_i8,51_i8,(-17_i8),17_i8];
_32 = Move(_83);
_53 = -_84.fld0.fld4;
_61.0 = (*_24) | (*_58);
(*_26) = [25_i8,(-45_i8),(-125_i8),95_i8,(-61_i8),33_i8,85_i8];
_13 = _34;
(*_26) = [(-89_i8),12_i8,61_i8,8_i8,(-72_i8),(-99_i8),(-46_i8)];
(*_21).fld0 = !45126_u16;
match _84.fld0.fld3 {
0 => bb34,
1 => bb35,
273231869036783297218858572902607570433 => bb37,
_ => bb36
}
}
bb34 = {
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_43 = (*_28).fld1 + (*_28).fld1;
(*_21).fld2 = (*_28).fld2 - (*_28).fld2;
Goto(bb20)
}
bb35 = {
_15.1.3.fld2.3 = Move(_3.1);
_15.2 = core::ptr::addr_of_mut!(_19.1);
_24 = &mut _15.1.0;
_19.0 = RET;
_12 = _3.2 ^ _3.2;
_1 = !16446743504635269853_u64;
(*_24) = _3.0;
_1 = !8540417521395090844_u64;
(*_24) = !_3.0;
(*_17) = _9;
(*_17) = _9 ^ _9;
(*_24) = _3.0 << _3.0;
(*_17) = !_9;
Goto(bb9)
}
bb36 = {
_19.0 = RET;
(*_28).fld0 = !(*_21).fld0;
(*_68) = 4374189532534305653_u64 - 13419468336327698453_u64;
_63 = core::ptr::addr_of_mut!((*_17));
(*_68) = 3834907057557906663_u64;
(*_28).fld0 = (*_68) as u16;
_80.0 = [(*_68),(*_68),(*_68),(*_68)];
_63 = core::ptr::addr_of_mut!((*_63));
(*_28).fld0 = (*_21).fld0 >> (*_24);
(*_68) = 3288812362907316282_u64 & 11271182861949568334_u64;
_82 = [(*_24)];
_57 = _6 as i16;
(*_26) = [(-125_i8),62_i8,(-54_i8),13_i8,(-82_i8),67_i8,(-28_i8)];
(*_24) = (*_58) - (*_58);
(*_28).fld2 = (*_21).fld2 + _30;
(*_26) = [(-55_i8),115_i8,(-42_i8),(-116_i8),104_i8,(-70_i8),8_i8];
(*_68) = 5498705674789980163_u64 * 13261358426227380464_u64;
Goto(bb30)
}
bb37 = {
(*_26) = _60;
(*_24) = _61.0 - (*_58);
_84.fld0.fld3 = 237154691613433331563547725109762806368_u128;
(*_17) = _9 << (*_24);
_78 = 19_i8 as isize;
_75 = _54;
(*_58) = _61.0 ^ (*_24);
_19.0 = [(*_68),(*_68),(*_68),(*_68)];
_34 = [(-8065231567074827155_i64)];
_61.2 = _12 * _12;
(*_21).fld2 = _90;
(*_21).fld0 = !33429_u16;
(*_26) = [(-111_i8),(-122_i8),95_i8,(-44_i8),1_i8,(-54_i8),(-89_i8)];
_94.0.fld0 = (*_21).fld2 as u16;
(*_26) = [(-40_i8),(-60_i8),(-29_i8),(-36_i8),65_i8,(-15_i8),31_i8];
_91 = !(*_68);
(*_58) = (*_24);
Goto(bb38)
}
bb38 = {
(*_24) = (*_58) + (*_58);
(*_21).fld0 = _94.0.fld0 ^ _94.0.fld0;
_81 = _75;
_84.fld4 = Adt24::Variant2 { fld0: 12_i8,fld1: _19.0 };
(*_21).fld0 = _94.0.fld0 & _94.0.fld0;
(*_26) = [(-66_i8),(-44_i8),(-61_i8),47_i8,34_i8,(-6_i8),(-72_i8)];
_37 = (*_21).fld2 - (*_21).fld2;
(*_24) = (*_58);
_19.3 = &mut _91;
_36 = _60;
(*_21).fld2 = _90 - _90;
(*_24) = _42 as u32;
(*_58) = _61.0 & _43;
_74 = (*_21).fld0 > (*_21).fld0;
_94.1 = (*_68);
_105.fld0.fld3 = _84.fld0.fld3 % _84.fld0.fld3;
(*_58) = !_61.0;
_102 = !_57;
(*_26) = [107_i8,(-55_i8),95_i8,103_i8,35_i8,(-112_i8),(-62_i8)];
_105.fld2.3 = core::ptr::addr_of_mut!(_87);
_90 = (*_21).fld2;
(*_24) = (*_58) + (*_58);
(*_21).fld0 = _94.0.fld0 - _94.0.fld0;
Goto(bb39)
}
bb39 = {
_84.fld2.3 = core::ptr::addr_of_mut!(_87);
_84.fld0.fld4 = -_57;
(*_26) = _60;
(*_21).fld2 = _37 + _30;
_93 = (*_24) as f32;
_19.0 = [(*_68),(*_68),_84.fld0.fld2,(*_68)];
(*_58) = (*_24) * (*_24);
_17 = Move(_63);
(*_24) = (*_58);
_81 = _75;
(*_21).fld2 = _8 as f64;
_103 = _50;
(*_68) = _94.1 - _94.1;
_84.fld2.2 = _57;
_71 = core::ptr::addr_of_mut!(_105.fld0.fld3);
Goto(bb40)
}
bb40 = {
_105.fld2.3 = core::ptr::addr_of_mut!(_87);
(*_68) = !_84.fld0.fld2;
_83 = Move(_32);
(*_24) = (*_58) | (*_58);
_109.0 = Adt17 { fld0: (*_21).fld0,fld1: (*_58),fld2: (*_21).fld2 };
(*_58) = (*_24) & (*_24);
(*_21).fld2 = -_90;
_92.0 = &mut (*_24);
(*_58) = _109.0.fld1 >> (*_21).fld0;
place!(Field::<[u64; 4]>(Variant(_84.fld4, 2), 1)) = RET;
(*_26) = _60;
_112 = core::ptr::addr_of!((*_71));
_105.fld4 = Adt24::Variant3 { fld0: _8,fld1: _94.1 };
_105.fld1 = _81;
_105.fld2.1 = (*_21).fld0 < (*_21).fld0;
_64 = _75;
_98 = _39;
match _84.fld0.fld3 {
0 => bb5,
1 => bb36,
2 => bb23,
237154691613433331563547725109762806368 => bb41,
_ => bb10
}
}
bb41 = {
(*_68) = Field::<u64>(Variant(_105.fld4, 3), 1);
_84.fld2 = (_49, _35, _102, Move(_105.fld2.3));
(*_112) = _84.fld0.fld3 >> (*_58);
_80.0 = _19.0;
(*_71) = _37 as u128;
Goto(bb42)
}
bb42 = {
_105.fld1 = _75;
_93 = _42;
(*_68) = _84.fld0.fld0 as u64;
_67 = (-2482621283545707008_i64) * 1184106937007064424_i64;
_105.fld0.fld4 = _105.fld0.fld3 as i16;
_109.3 = (*_68);
_105.fld2.3 = core::ptr::addr_of_mut!(_87);
(*_68) = _19.1 as u64;
_108 = core::ptr::addr_of_mut!(_12);
(*_58) = _109.0.fld1 * _109.0.fld1;
_65 = _38 << (*_71);
(*_21).fld2 = _37 + _30;
(*_71) = _84.fld0.fld3 >> _109.0.fld1;
(*_21).fld2 = _84.fld0.fld0 as f64;
_84.fld0.fld4 = _105.fld0.fld4 >> (*_21).fld0;
(*_108) = Field::<u8>(Variant(_105.fld4, 3), 0) as isize;
_94.0.fld1 = (*_58) >> (*_58);
(*_71) = _84.fld0.fld3 << (*_108);
_115 = _105.fld0.fld4 & _53;
match _84.fld0.fld2 {
0 => bb8,
1 => bb25,
2 => bb16,
3 => bb43,
4 => bb44,
5 => bb45,
6 => bb46,
16639414575530618530 => bb48,
_ => bb47
}
}
bb43 = {
(*_21).fld2 = _5 as f64;
(*_24) = 20690_i16 as u32;
(*_17) = (*_21).fld0 as u8;
_28 = core::ptr::addr_of_mut!(_33.0);
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _9 * _9;
(*_21).fld0 = !(*_28).fld0;
RET = _19.0;
(*_24) = _11 as u32;
(*_28).fld0 = (*_21).fld0 + (*_21).fld0;
(*_28).fld0 = (*_28).fld2 as u16;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_38 = -_12;
(*_21).fld2 = 138273102795352400548726326544963761866_u128 as f64;
_1 = !_33.3;
Goto(bb16)
}
bb44 = {
(*_28).fld0 = (*_21).fld0 * (*_21).fld0;
(*_28).fld2 = (*_21).fld2;
(*_28).fld1 = !(*_24);
_19.0 = [_33.1,_1,_33.1,_33.3];
_50 = '\u{cde36}';
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_49 = _12 ^ _12;
_38 = -_12;
(*_21).fld0 = !(*_28).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_17) = _9 << _12;
(*_28).fld0 = (*_21).fld0;
(*_28).fld1 = (*_24);
_17 = core::ptr::addr_of_mut!((*_17));
(*_28).fld1 = _6 as u32;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld0 = 29945_i16 as u16;
(*_21).fld0 = (*_28).fld0;
(*_17) = _1 as u8;
(*_17) = _9 * _9;
(*_24) = (*_28).fld2 as u32;
(*_28).fld0 = !(*_21).fld0;
_12 = _49;
Goto(bb19)
}
bb45 = {
(*_26) = [(-85_i8),40_i8,124_i8,(-67_i8),(-1_i8),(-105_i8),(-85_i8)];
(*_21).fld0 = (*_28).fld0;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
_5 = _12 as i128;
Goto(bb26)
}
bb46 = {
(*_28).fld0 = (*_28).fld1 as u16;
(*_17) = !_9;
_39 = [(-3231728712213906980_i64)];
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_24),fld2: (*_21).fld2 };
(*_21).fld2 = _12 as f64;
_5 = 48676296218510845957663744876263954857_u128 as i128;
(*_28).fld0 = _33.3 as u16;
(*_21).fld0 = (-2284885632124929238_i64) as u16;
(*_28).fld0 = !(*_21).fld0;
(*_21).fld0 = !(*_28).fld0;
Goto(bb17)
}
bb47 = {
_5 = 41266_u16 as i128;
_13 = [(-534313203798440990_i64)];
_15.1.0 = _3.0 >> _3.0;
_15.2 = core::ptr::addr_of_mut!(_19.1);
_15.1.3.fld0.fld4 = !(-29205_i16);
_15.1.3.fld2.2 = _15.1.3.fld0.fld4 & _15.1.3.fld0.fld4;
_12 = !_3.2;
_15.1.3.fld0.fld2 = _15.1.2 * _15.1.2;
_15.1.3.fld2.2 = _15.1.3.fld0.fld4;
_8 = _9;
_3.1 = Move(_15.1.3.fld2.3);
_19.1 = 9048044472672569211_i64 as f32;
_19.0 = [_15.1.2,_15.1.3.fld0.fld2,_15.1.3.fld0.fld2,_15.1.3.fld0.fld2];
_17 = core::ptr::addr_of_mut!(_8);
_25.fld2 = 101_i8 as f64;
(*_17) = _9 | _9;
_9 = !(*_17);
_19.1 = _10 as f32;
Goto(bb8)
}
bb48 = {
(*_71) = !_84.fld0.fld3;
_85 = _42;
_43 = (*_58) - (*_58);
(*_21).fld2 = _30 - _109.0.fld2;
(*_21).fld2 = Field::<u8>(Variant(_105.fld4, 3), 0) as f64;
_72 = Move(_105.fld2.3);
(*_21).fld0 = (*_71) as u16;
(*_108) = _65 * _61.2;
_9 = Field::<u8>(Variant(_105.fld4, 3), 0) & Field::<u8>(Variant(_105.fld4, 3), 0);
(*_68) = _94.1 % _84.fld0.fld2;
_53 = _105.fld0.fld4;
_99 = !_45;
_69 = (*_21).fld2 > (*_21).fld2;
_79 = [(*_108)];
_74 = !_35;
(*_68) = !_109.3;
_92.2 = (*_58);
_92.0 = &mut _94.0.fld1;
_43 = _19.1 as u32;
_105.fld0.fld0 = _6 & _6;
_111 = _105.fld0.fld0 as isize;
_28 = core::ptr::addr_of_mut!(_109.0);
Call((*_28).fld1 = core::intrinsics::bswap((*_58)), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
(*_28).fld0 = (*_21).fld0 * (*_21).fld0;
(*_28).fld2 = -(*_21).fld2;
_113 = !_74;
_30 = _45 as f64;
(*_28).fld2 = (*_21).fld2 * (*_21).fld2;
_92.1 = [(-2_i8),(-82_i8),(-88_i8),8_i8,(-5_i8),12_i8,(-101_i8),(-53_i8)];
(*_71) = _84.fld0.fld3;
(*_28).fld2 = (*_21).fld2 - (*_21).fld2;
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_58),fld2: _90 };
_122 = (*_108) < (*_108);
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_58),fld2: (*_21).fld2 };
(*_28) = Adt17 { fld0: (*_21).fld0,fld1: (*_58),fld2: (*_21).fld2 };
(*_21).fld2 = (*_28).fld2 + (*_28).fld2;
(*_58) = (*_28).fld1;
(*_28).fld1 = (*_58) ^ (*_58);
_111 = (*_71) as isize;
Goto(bb50)
}
bb50 = {
Call(_130 = dump_var(4_usize, 102_usize, Move(_102), 51_usize, Move(_51), 36_usize, Move(_36), 49_usize, Move(_49)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_130 = dump_var(4_usize, 98_usize, Move(_98), 111_usize, Move(_111), 54_usize, Move(_54), 103_usize, Move(_103)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_130 = dump_var(4_usize, 115_usize, Move(_115), 13_usize, Move(_13), 5_usize, Move(_5), 65_usize, Move(_65)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_130 = dump_var(4_usize, 64_usize, Move(_64), 38_usize, Move(_38), 10_usize, Move(_10), 39_usize, Move(_39)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_130 = dump_var(4_usize, 1_usize, Move(_1), 66_usize, Move(_66), 99_usize, Move(_99), 69_usize, Move(_69)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_130 = dump_var(4_usize, 34_usize, Move(_34), 12_usize, Move(_12), 131_usize, _131, 131_usize, _131), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: u64,mut _2: usize,mut _3: [u64; 4]) -> (u32, *mut i32, isize) {
mir! {
type RET = (u32, *mut i32, isize);
let _4: [i8; 8];
let _5: u16;
let _6: i8;
let _7: *mut u8;
let _8: *mut u128;
let _9: isize;
let _10: Adt17;
let _11: isize;
let _12: Adt29;
let _13: [u16; 3];
let _14: *mut u128;
let _15: u16;
let _16: bool;
let _17: isize;
let _18: *const &'static i64;
let _19: i32;
let _20: Adt29;
let _21: &'static Adt23;
let _22: Adt29;
let _23: i128;
let _24: bool;
let _25: &'static Adt25;
let _26: Adt17;
let _27: i16;
let _28: [u16; 3];
let _29: bool;
let _30: f64;
let _31: f64;
let _32: &'static mut u32;
let _33: char;
let _34: i128;
let _35: i32;
let _36: Adt17;
let _37: [i8; 7];
let _38: f32;
let _39: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _40: ();
let _41: ();
{
Call(RET.2 = fn6(_3, _3, _3, _3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.2 = (-9223372036854775808_isize);
_5 = 7804_u16 ^ 62095_u16;
_1 = !15207473940314487987_u64;
_3 = [_1,_1,_1,_1];
_2 = 12372435740432618204_usize;
RET.0 = !2993682773_u32;
_1 = !650943572037691504_u64;
_1 = !4178453937272496766_u64;
_4 = [(-51_i8),59_i8,122_i8,(-15_i8),(-77_i8),(-70_i8),8_i8,(-88_i8)];
RET.2 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_2 = 85_u8 as usize;
_9 = !RET.2;
RET.2 = _9;
_4 = [(-40_i8),(-115_i8),(-119_i8),(-66_i8),(-113_i8),(-77_i8),63_i8,6_i8];
RET.0 = 4226087052_u32 & 165850977_u32;
RET.2 = _9 * _9;
_10.fld1 = !RET.0;
_11 = !_9;
_10.fld0 = _5;
Goto(bb2)
}
bb2 = {
_5 = _10.fld0 * _10.fld0;
_11 = (-6347_i16) as isize;
_3 = [_1,_1,_1,_1];
_6 = 109_i8 & (-77_i8);
_9 = !RET.2;
_1 = 14610803880118253458591673888426419917_u128 as u64;
_10.fld0 = !_5;
_10.fld1 = RET.0;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
RET.2 = _11;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
_1 = 17496552209373331578_u64 ^ 15806802737694386118_u64;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
_2 = 7_usize * 4_usize;
RET.0 = !_10.fld1;
_10.fld0 = !_5;
_10.fld0 = !_5;
_1 = 9665693935492130360_u64 - 13786272108414599083_u64;
_10.fld0 = _5 & _5;
_1 = !16971385269331849315_u64;
_13 = [_5,_10.fld0,_10.fld0];
_2 = !16981047748663976020_usize;
_10.fld0 = _5 >> _9;
Call(_15 = core::intrinsics::transmute(_10.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = (-4981105573193736735_i64) as usize;
_10.fld1 = RET.0;
_13 = [_10.fld0,_5,_5];
_9 = RET.2 << RET.0;
_2 = 4398469233723256500_usize - 146251276106283284_usize;
RET.0 = !_10.fld1;
_11 = _9 * _9;
_10.fld2 = _1 as f64;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
_11 = RET.2 >> RET.2;
_10.fld2 = _6 as f64;
_17 = !_9;
_3 = [_1,_1,_1,_1];
_3 = [_1,_1,_1,_1];
_16 = _9 != _17;
RET.2 = _11 & _17;
_16 = _10.fld0 < _10.fld0;
_16 = _2 >= _2;
_15 = _10.fld0 | _10.fld0;
_2 = 5_usize;
_3 = [_1,_1,_1,_1];
_2 = 4289882808679450192_usize;
_11 = _9 >> _15;
_13 = [_15,_5,_5];
_10.fld1 = RET.0 >> _11;
_6 = (-102_i8) >> _10.fld0;
match _2 {
0 => bb1,
1 => bb2,
2 => bb4,
4289882808679450192 => bb6,
_ => bb5
}
}
bb4 = {
_5 = _10.fld0 * _10.fld0;
_11 = (-6347_i16) as isize;
_3 = [_1,_1,_1,_1];
_6 = 109_i8 & (-77_i8);
_9 = !RET.2;
_1 = 14610803880118253458591673888426419917_u128 as u64;
_10.fld0 = !_5;
_10.fld1 = RET.0;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
RET.2 = _11;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
_1 = 17496552209373331578_u64 ^ 15806802737694386118_u64;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
_2 = 7_usize * 4_usize;
RET.0 = !_10.fld1;
_10.fld0 = !_5;
_10.fld0 = !_5;
_1 = 9665693935492130360_u64 - 13786272108414599083_u64;
_10.fld0 = _5 & _5;
_1 = !16971385269331849315_u64;
_13 = [_5,_10.fld0,_10.fld0];
_2 = !16981047748663976020_usize;
_10.fld0 = _5 >> _9;
Call(_15 = core::intrinsics::transmute(_10.fld0), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET.2 = (-9223372036854775808_isize);
_5 = 7804_u16 ^ 62095_u16;
_1 = !15207473940314487987_u64;
_3 = [_1,_1,_1,_1];
_2 = 12372435740432618204_usize;
RET.0 = !2993682773_u32;
_1 = !650943572037691504_u64;
_1 = !4178453937272496766_u64;
_4 = [(-51_i8),59_i8,122_i8,(-15_i8),(-77_i8),(-70_i8),8_i8,(-88_i8)];
RET.2 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_2 = 85_u8 as usize;
_9 = !RET.2;
RET.2 = _9;
_4 = [(-40_i8),(-115_i8),(-119_i8),(-66_i8),(-113_i8),(-77_i8),63_i8,6_i8];
RET.0 = 4226087052_u32 & 165850977_u32;
RET.2 = _9 * _9;
_10.fld1 = !RET.0;
_11 = !_9;
_10.fld0 = _5;
Goto(bb2)
}
bb6 = {
Call(_22 = fn7(Move(_10), _15, RET.0, _5, _11, _2, _17, _1, _15, _9), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_10.fld1 = RET.0;
_10.fld0 = !Field::<u16>(Variant(_22, 0), 3);
_2 = !17492706030473332516_usize;
_12 = Adt29::Variant0 { fld0: Field::<[u64; 4]>(Variant(_22, 0), 0),fld1: Field::<char>(Variant(_22, 0), 1),fld2: Field::<f32>(Variant(_22, 0), 2),fld3: Field::<u16>(Variant(_22, 0), 3),fld4: Field::<u8>(Variant(_22, 0), 4),fld5: Field::<i32>(Variant(_22, 0), 5),fld6: Field::<u64>(Variant(_22, 0), 6),fld7: Field::<i128>(Variant(_22, 0), 7) };
RET.2 = _11 - _17;
_10.fld0 = Field::<u16>(Variant(_12, 0), 3);
_3 = [Field::<u64>(Variant(_12, 0), 6),Field::<u64>(Variant(_12, 0), 6),Field::<u64>(Variant(_12, 0), 6),Field::<u64>(Variant(_12, 0), 6)];
place!(Field::<f32>(Variant(_12, 0), 2)) = Field::<f32>(Variant(_22, 0), 2);
_19 = !Field::<i32>(Variant(_22, 0), 5);
_22 = Move(_12);
_1 = Field::<u64>(Variant(_22, 0), 6) >> Field::<i128>(Variant(_22, 0), 7);
RET.0 = _10.fld1 + _10.fld1;
_12 = Adt29::Variant0 { fld0: Field::<[u64; 4]>(Variant(_22, 0), 0),fld1: Field::<char>(Variant(_22, 0), 1),fld2: Field::<f32>(Variant(_22, 0), 2),fld3: Field::<u16>(Variant(_22, 0), 3),fld4: Field::<u8>(Variant(_22, 0), 4),fld5: _19,fld6: _1,fld7: Field::<i128>(Variant(_22, 0), 7) };
place!(Field::<[u64; 4]>(Variant(_12, 0), 0)) = _3;
_10.fld2 = 1294687158263033530599822183834713488_u128 as f64;
_10.fld2 = Field::<u64>(Variant(_22, 0), 6) as f64;
_24 = _16 | _16;
place!(Field::<i32>(Variant(_12, 0), 5)) = _10.fld1 as i32;
_20 = Move(_22);
_19 = -Field::<i32>(Variant(_20, 0), 5);
place!(Field::<[u64; 4]>(Variant(_20, 0), 0)) = [Field::<u64>(Variant(_20, 0), 6),Field::<u64>(Variant(_20, 0), 6),Field::<u64>(Variant(_20, 0), 6),Field::<u64>(Variant(_20, 0), 6)];
_22 = Adt29::Variant0 { fld0: Field::<[u64; 4]>(Variant(_20, 0), 0),fld1: Field::<char>(Variant(_12, 0), 1),fld2: Field::<f32>(Variant(_20, 0), 2),fld3: _10.fld0,fld4: Field::<u8>(Variant(_20, 0), 4),fld5: _19,fld6: Field::<u64>(Variant(_12, 0), 6),fld7: Field::<i128>(Variant(_12, 0), 7) };
_2 = 7_usize;
RET.0 = Field::<i32>(Variant(_20, 0), 5) as u32;
Goto(bb8)
}
bb8 = {
_20 = Move(_22);
_10.fld0 = Field::<u16>(Variant(_20, 0), 3);
_2 = 1072575101060421202_usize * 1_usize;
_24 = _16;
_26 = Move(_10);
_24 = Field::<i32>(Variant(_20, 0), 5) >= _19;
_28 = [Field::<u16>(Variant(_12, 0), 3),Field::<u16>(Variant(_12, 0), 3),Field::<u16>(Variant(_12, 0), 3)];
_10 = Move(_26);
_23 = -Field::<i128>(Variant(_12, 0), 7);
_26.fld0 = Field::<u16>(Variant(_12, 0), 3) & _10.fld0;
_16 = _24 ^ _24;
_26.fld1 = RET.0 - _10.fld1;
place!(Field::<u8>(Variant(_12, 0), 4)) = Field::<u8>(Variant(_20, 0), 4) + Field::<u8>(Variant(_20, 0), 4);
_10.fld1 = _26.fld1 | _26.fld1;
_26 = Move(_10);
place!(Field::<u16>(Variant(_20, 0), 3)) = _26.fld1 as u16;
_10.fld1 = _6 as u32;
Goto(bb9)
}
bb9 = {
place!(Field::<char>(Variant(_20, 0), 1)) = Field::<char>(Variant(_12, 0), 1);
_31 = 29338_i16 as f64;
place!(Field::<u8>(Variant(_20, 0), 4)) = Field::<u8>(Variant(_12, 0), 4) >> Field::<u64>(Variant(_20, 0), 6);
RET.2 = _11 + _11;
RET.1 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_12, 0), 5)));
_26 = Adt17 { fld0: Field::<u16>(Variant(_20, 0), 3),fld1: _10.fld1,fld2: _31 };
_3 = Field::<[u64; 4]>(Variant(_12, 0), 0);
_16 = _24 ^ _24;
place!(Field::<i32>(Variant(_20, 0), 5)) = _19;
_4 = [_6,_6,_6,_6,_6,_6,_6,_6];
RET.1 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_20, 0), 5)));
_10 = Adt17 { fld0: Field::<u16>(Variant(_12, 0), 3),fld1: _26.fld1,fld2: _31 };
_26.fld0 = _10.fld0 + Field::<u16>(Variant(_20, 0), 3);
_34 = Field::<i128>(Variant(_12, 0), 7);
_37 = [_6,_6,_6,_6,_6,_6,_6];
_37 = [_6,_6,_6,_6,_6,_6,_6];
_11 = RET.2 << _19;
place!(Field::<u64>(Variant(_20, 0), 6)) = _1 - Field::<u64>(Variant(_12, 0), 6);
place!(Field::<u16>(Variant(_12, 0), 3)) = _5;
_26.fld1 = !RET.0;
_17 = _11 + _11;
_15 = _23 as u16;
place!(Field::<char>(Variant(_12, 0), 1)) = Field::<char>(Variant(_20, 0), 1);
_39.1.3.fld4 = Adt24::Variant0 { fld0: _19,fld1: Move(_26) };
_39.1.3.fld0.fld4 = 284643719504389268572846221025084837054_u128 as i16;
Goto(bb10)
}
bb10 = {
Call(_40 = dump_var(5_usize, 5_usize, Move(_5), 23_usize, Move(_23), 13_usize, Move(_13), 17_usize, Move(_17)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_40 = dump_var(5_usize, 2_usize, Move(_2), 28_usize, Move(_28), 37_usize, Move(_37), 16_usize, Move(_16)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_40 = dump_var(5_usize, 3_usize, Move(_3), 41_usize, _41, 41_usize, _41, 41_usize, _41), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [u64; 4],mut _2: [u64; 4],mut _3: [u64; 4],mut _4: [u64; 4],mut _5: [u64; 4]) -> isize {
mir! {
type RET = isize;
let _6: *mut f32;
let _7: &'static mut u16;
let _8: *mut isize;
let _9: f32;
let _10: i32;
let _11: &'static mut Adt36;
let _12: [isize; 1];
let _13: *mut u128;
let _14: i8;
let _15: i16;
let _16: f64;
let _17: (isize, bool, i16, *mut i32);
let _18: bool;
let _19: u32;
let _20: *mut f32;
let _21: u128;
let _22: u8;
let _23: u64;
let _24: f32;
let _25: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _26: u64;
let _27: *const *mut bool;
let _28: bool;
let _29: &'static u32;
let _30: f32;
let _31: f32;
let _32: isize;
let _33: isize;
let _34: &'static mut u64;
let _35: f32;
let _36: f32;
let _37: ();
let _38: ();
{
_1 = [16656585588009318066_u64,4614433313308477275_u64,11428700623357841334_u64,5485870729202356420_u64];
_4 = _2;
_1 = [15311447306090292426_u64,3236662272323228523_u64,14793138474435173564_u64,1192862762893688521_u64];
_2 = [836512070619618818_u64,13755834198360923422_u64,9979038036545654251_u64,18001999404167015147_u64];
_3 = [3220463920716914788_u64,11009792975589548943_u64,13283118697163608604_u64,4645849902970441553_u64];
_3 = _5;
RET = 35385341874129658754727841888382382918_u128 as isize;
_4 = _1;
_4 = [17075622964065232742_u64,11988985915703618200_u64,16307906030165035484_u64,5562022480864911197_u64];
_3 = [6531535379401494129_u64,4515597311249401499_u64,5689963552883206749_u64,6658066846086731081_u64];
RET = -(-9223372036854775808_isize);
_4 = [15892098887216240776_u64,10290033813149968763_u64,4785062345901197056_u64,736476656846389671_u64];
_2 = _4;
_4 = [5643487720669397082_u64,8073549180588145224_u64,16005176892902032799_u64,4328142835412069197_u64];
RET = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_3 = [15850446641399031089_u64,15927102143609293798_u64,15113418628991545986_u64,2552999715649257531_u64];
_4 = _2;
_5 = _3;
Goto(bb1)
}
bb1 = {
_3 = _4;
_2 = [18101998510360791245_u64,5757650409417344416_u64,3420263880181812781_u64,9214187820790154076_u64];
_3 = _2;
_2 = [9617840496784996600_u64,12134090795414761128_u64,8336249598233364666_u64,12428204460888231933_u64];
_4 = _1;
_3 = [9727393390926341369_u64,17025323953274650857_u64,7921717603068664669_u64,14179119847435054758_u64];
_6 = core::ptr::addr_of_mut!(_9);
Goto(bb2)
}
bb2 = {
(*_6) = 96586636172092191621588670718346851197_u128 as f32;
(*_6) = 31862_u16 as f32;
_10 = (-1156540148_i32) >> RET;
_10 = (-1565567331_i32) * 39426768_i32;
(*_6) = 1255475011_u32 as f32;
(*_6) = 120205212123218632098250714869914336862_u128 as f32;
_14 = (-76_i8);
(*_6) = 2996095531445144445_i64 as f32;
(*_6) = (-18683_i16) as f32;
_12 = [RET];
_1 = [11336851582912514775_u64,11376646728534952486_u64,7351885999724312141_u64,3956701587858578872_u64];
(*_6) = 139477099537138208479185976529842926420_i128 as f32;
(*_6) = 237_u8 as f32;
(*_6) = 313542335324460356844034294879350047279_u128 as f32;
_15 = 3528225246078093621_u64 as i16;
(*_6) = 9159_u16 as f32;
RET = 17226186112485678811_u64 as isize;
(*_6) = 44370_u16 as f32;
_16 = _15 as f64;
(*_6) = 2020978473_u32 as f32;
_15 = -7654_i16;
(*_6) = _14 as f32;
_17.3 = core::ptr::addr_of_mut!(_10);
match _14 {
340282366920938463463374607431768211380 => bb3,
_ => bb1
}
}
bb3 = {
RET = (-9223372036854775808_isize);
_17.0 = -RET;
(*_6) = _14 as f32;
_9 = 3317767735_u32 as f32;
(*_6) = (-836408647694717730_i64) as f32;
_4 = _5;
_17.2 = _15;
_4 = _5;
Call((*_6) = core::intrinsics::transmute(_10), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_20 = core::ptr::addr_of_mut!((*_6));
(*_20) = _17.2 as f32;
_17.0 = RET >> _10;
(*_6) = 9293365982933152433_usize as f32;
_17.3 = core::ptr::addr_of_mut!(_10);
_8 = core::ptr::addr_of_mut!(RET);
(*_6) = 7600911701689417986_usize as f32;
_21 = 332263058485551586562013158949769859447_u128 * 286283050570416387520551278603176645762_u128;
_6 = Move(_20);
(*_8) = _17.0;
_10 = 119035784_i32 | (-1125757286_i32);
_21 = 221455619446647768948672680010676886034_u128;
_17.1 = (*_8) > (*_8);
(*_8) = _16 as isize;
(*_8) = _16 as isize;
_5 = [2161385864932463872_u64,12656370425168967943_u64,11515364152797260845_u64,3849806516321110615_u64];
(*_8) = _17.0;
_22 = 118_u8 * 5_u8;
_18 = (*_8) >= (*_8);
Goto(bb5)
}
bb5 = {
_10 = 1458041736_i32 + (-984656406_i32);
_5 = [16620642915894483862_u64,13967980481096085647_u64,5083551767214444594_u64,3135374579387240598_u64];
(*_8) = _17.0;
_19 = 4223018357_u32 + 3630245575_u32;
_29 = &_19;
_10 = (-122246588_i32) & (-711726436_i32);
(*_8) = _17.0 - _17.0;
_6 = core::ptr::addr_of_mut!(_24);
_23 = 679437861614233648_u64 << (*_8);
(*_8) = !_17.0;
(*_6) = _9;
(*_8) = _17.0;
Goto(bb6)
}
bb6 = {
_26 = _23 * _23;
(*_8) = _17.0 - _17.0;
(*_8) = (-933946604199028655_i64) as isize;
_18 = (*_8) != _17.0;
_31 = -(*_6);
_12 = [(*_8)];
(*_8) = _17.0 - _17.0;
(*_6) = _16 as f32;
(*_6) = -_9;
_34 = &mut _26;
_25.3 = &mut (*_34);
_33 = -(*_8);
_21 = (-782599762240341441_i64) as u128;
_25.0 = [_23,_23,_23,_23];
(*_6) = _9 + _31;
(*_8) = _33 << _33;
_34 = &mut _23;
_25.1 = (*_6) - (*_6);
Goto(bb7)
}
bb7 = {
Call(_37 = dump_var(6_usize, 21_usize, Move(_21), 4_usize, Move(_4), 22_usize, Move(_22), 5_usize, Move(_5)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_37 = dump_var(6_usize, 12_usize, Move(_12), 26_usize, Move(_26), 1_usize, Move(_1), 14_usize, Move(_14)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: Adt17,mut _2: u16,mut _3: u32,mut _4: u16,mut _5: isize,mut _6: usize,mut _7: isize,mut _8: u64,mut _9: u16,mut _10: isize) -> Adt29 {
mir! {
type RET = Adt29;
let _11: f32;
let _12: f64;
let _13: bool;
let _14: *const [i8; 8];
let _15: Adt36;
let _16: *mut Adt17;
let _17: (Adt17, u64, &'static u32, u64);
let _18: i32;
let _19: i8;
let _20: char;
let _21: Adt23;
let _22: *mut i32;
let _23: &'static mut &'static *mut bool;
let _24: *mut i32;
let _25: isize;
let _26: *mut Adt17;
let _27: [i8; 8];
let _28: &'static Adt29;
let _29: *mut isize;
let _30: *const [i8; 8];
let _31: *mut u8;
let _32: *const Adt17;
let _33: f64;
let _34: (i32,);
let _35: [u16; 3];
let _36: [i8; 8];
let _37: Adt36;
let _38: [u64; 4];
let _39: &'static *const [i8; 8];
let _40: *const Adt17;
let _41: &'static *mut bool;
let _42: (u32, *mut i32, isize);
let _43: i8;
let _44: char;
let _45: *const *mut bool;
let _46: isize;
let _47: *const &'static i64;
let _48: u32;
let _49: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _50: bool;
let _51: Adt23;
let _52: [u16; 3];
let _53: char;
let _54: char;
let _55: char;
let _56: &'static Adt23;
let _57: *mut f32;
let _58: i32;
let _59: *mut isize;
let _60: char;
let _61: u32;
let _62: [i8; 7];
let _63: &'static mut u16;
let _64: f64;
let _65: &'static mut u32;
let _66: char;
let _67: u16;
let _68: isize;
let _69: &'static *const [i8; 8];
let _70: (isize, bool, i16, *mut i32);
let _71: Adt68;
let _72: &'static Adt36;
let _73: *mut &'static *const [u16; 3];
let _74: *const u32;
let _75: u64;
let _76: bool;
let _77: i8;
let _78: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _79: *mut bool;
let _80: &'static Adt36;
let _81: (isize, bool, i16, *mut i32);
let _82: *const Adt17;
let _83: i32;
let _84: char;
let _85: *const u32;
let _86: i128;
let _87: &'static mut u16;
let _88: i32;
let _89: Adt23;
let _90: char;
let _91: *mut Adt17;
let _92: bool;
let _93: *const u32;
let _94: *const &'static i64;
let _95: f32;
let _96: bool;
let _97: *const Adt36;
let _98: isize;
let _99: *const *mut bool;
let _100: &'static *mut bool;
let _101: bool;
let _102: i8;
let _103: (i32,);
let _104: i128;
let _105: isize;
let _106: i16;
let _107: f32;
let _108: *mut Adt17;
let _109: u64;
let _110: &'static Adt29;
let _111: *const u32;
let _112: [u64; 4];
let _113: Adt23;
let _114: *mut i32;
let _115: (u32, *mut i32, isize);
let _116: ();
let _117: ();
{
_1.fld2 = (-1086267417_i32) as f64;
_2 = _9;
_6 = 5_usize * 6_usize;
_11 = 247471219059471087014354012732110767995_u128 as f32;
_3 = _1.fld1;
_2 = _1.fld0 | _9;
_6 = 13085013881533899054_usize;
_3 = _1.fld1 - _1.fld1;
_3 = _1.fld1 << _5;
_2 = _9 - _9;
_8 = 15417868208994457930_u64;
_3 = _1.fld1 - _1.fld1;
_4 = !_9;
_10 = -_5;
_8 = 2670256315549989408_u64 & 14543591843568671625_u64;
_9 = !_4;
_10 = _7;
_13 = _9 == _1.fld0;
_1.fld0 = _2 * _2;
_3 = _1.fld1;
_2 = !_1.fld0;
_1.fld0 = !_2;
_15.fld0.fld2 = _8 << _2;
Goto(bb1)
}
bb1 = {
_15.fld1 = '\u{9dc1d}';
_15.fld1 = '\u{ff4b3}';
_17.0 = Adt17 { fld0: _2,fld1: _3,fld2: _1.fld2 };
_15.fld3 = core::ptr::addr_of!(_1.fld1);
_15.fld3 = core::ptr::addr_of!(_3);
_1.fld0 = (-6005_i16) as u16;
_18 = -(-1040682076_i32);
_15.fld2.1 = _4 < _2;
_18 = _15.fld0.fld2 as i32;
_15.fld0.fld4 = 3359_i16;
_15.fld0.fld4 = 10098_i16;
_17.0.fld2 = _1.fld2 - _1.fld2;
_15.fld2.1 = _15.fld0.fld2 == _15.fld0.fld2;
_4 = _2 << _15.fld0.fld2;
_13 = _17.0.fld0 <= _2;
_4 = _17.0.fld0 - _2;
_18 = 381524987_i32 - (-1106135110_i32);
_15.fld2.0 = 228555856854157291682085032405821490581_u128 as isize;
_15.fld2.1 = _13 | _13;
_15.fld0.fld1 = core::ptr::addr_of_mut!(_1);
_19 = _1.fld1 as i8;
match _6 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
13085013881533899054 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_8 = _15.fld0.fld2;
_27 = [_19,_19,_19,_19,_19,_19,_19,_19];
_26 = core::ptr::addr_of_mut!(_17.0);
(*_26) = Adt17 { fld0: _4,fld1: _1.fld1,fld2: _1.fld2 };
(*_26).fld1 = _1.fld1 * _3;
_26 = core::ptr::addr_of_mut!((*_26));
_1.fld1 = (*_26).fld1 - (*_26).fld1;
(*_26).fld0 = _19 as u16;
(*_26).fld2 = _1.fld2 + _1.fld2;
(*_26).fld0 = _4 * _2;
(*_26).fld2 = -_1.fld2;
_1.fld1 = (*_26).fld1 << (*_26).fld0;
_12 = (*_26).fld2 - (*_26).fld2;
_11 = 47225548216225002265632078416219834946_i128 as f32;
_15.fld0.fld4 = (-30555_i16) | 25807_i16;
(*_26) = Move(_1);
Goto(bb8)
}
bb8 = {
(*_26).fld1 = _19 as u32;
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
_17.0.fld0 = _4 ^ _4;
_16 = Move(_15.fld0.fld1);
(*_26) = Adt17 { fld0: _2,fld1: _3,fld2: _12 };
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
_15.fld0 = Adt25 { fld0: _6,fld1: Move(_16),fld2: _8,fld3: 269823795865045733934374126776169634488_u128,fld4: 30699_i16 };
_15.fld2.3 = core::ptr::addr_of_mut!(_18);
_17.1 = _8 - _8;
_15.fld2.3 = core::ptr::addr_of_mut!(_18);
_17.1 = !_8;
_17.0.fld0 = _4 << _15.fld0.fld4;
_15.fld2.0 = _10;
(*_26).fld0 = _4 - _2;
Goto(bb9)
}
bb9 = {
(*_26).fld0 = _9 << _4;
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
Call((*_26).fld0 = core::intrinsics::bswap(_4), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
(*_26).fld0 = _17.1 as u16;
_15.fld0.fld3 = 281640771335559686034056234433973919219_u128;
_17.3 = !_15.fld0.fld2;
_13 = (*_26).fld0 == (*_26).fld0;
_1.fld1 = !(*_26).fld1;
(*_26).fld0 = _4 << (*_26).fld1;
match _15.fld0.fld4 {
0 => bb6,
1 => bb2,
2 => bb5,
3 => bb11,
30699 => bb13,
_ => bb12
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
(*_26).fld1 = _15.fld2.1 as u32;
_29 = core::ptr::addr_of_mut!(_7);
(*_26).fld2 = _12 + _12;
Goto(bb14)
}
bb14 = {
_37.fld0 = Move(_15.fld0);
_6 = _37.fld0.fld0;
_15.fld2.0 = _5 << (*_26).fld0;
_37.fld2 = (_15.fld2.0, _13, _37.fld0.fld4, Move(_15.fld2.3));
match _37.fld0.fld4 {
0 => bb8,
1 => bb6,
2 => bb15,
3 => bb16,
30699 => bb18,
_ => bb17
}
}
bb15 = {
Return()
}
bb16 = {
(*_26).fld0 = _9 << _4;
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
Call((*_26).fld0 = core::intrinsics::bswap(_4), ReturnTo(bb10), UnwindUnreachable())
}
bb17 = {
Return()
}
bb18 = {
(*_26).fld2 = (-1577860016186176478_i64) as f64;
_37.fld3 = core::ptr::addr_of!((*_26).fld1);
(*_26).fld2 = _12 + _12;
_37.fld2.1 = (*_26).fld1 > (*_26).fld1;
_15.fld0 = Adt25 { fld0: _6,fld1: Move(_37.fld0.fld1),fld2: _17.1,fld3: _37.fld0.fld3,fld4: _37.fld0.fld4 };
(*_26) = Adt17 { fld0: _9,fld1: _3,fld2: _12 };
_15.fld0.fld4 = _37.fld2.2 | _37.fld0.fld4;
_37.fld0.fld0 = _15.fld0.fld0;
_17.2 = &(*_26).fld1;
(*_26).fld2 = _12;
(*_26).fld2 = _12 + _12;
_15.fld2.1 = _4 < (*_26).fld0;
_34 = (_18,);
_33 = (*_26).fld2;
_37.fld0 = Adt25 { fld0: _15.fld0.fld0,fld1: Move(_15.fld0.fld1),fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _37.fld2.2 };
_34 = (_18,);
(*_26).fld0 = (*_26).fld2 as u16;
_24 = Move(_37.fld2.3);
_3 = (*_26).fld1 + (*_26).fld1;
Call((*_26).fld0 = fn8((*_26).fld1), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
_3 = (*_26).fld1 * (*_26).fld1;
(*_26).fld0 = _19 as u16;
Call((*_26) = fn10((*_29), Move(_29), Move(_15.fld3), Move(_37.fld0.fld1), Move(_24), (*_29), _34.0, (*_29), _37.fld2.0), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
_15.fld0.fld2 = _17.1 ^ _8;
(*_26).fld1 = _1.fld1 ^ _1.fld1;
_17.0.fld0 = _4;
(*_26).fld2 = _33;
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _12 };
_42.2 = (*_26).fld0 as isize;
(*_26).fld0 = _4;
_14 = core::ptr::addr_of!(_36);
_22 = core::ptr::addr_of_mut!(_34.0);
_37.fld0.fld3 = _15.fld0.fld3 | _15.fld0.fld3;
(*_26).fld2 = _12 + _33;
(*_22) = _18;
(*_26) = Adt17 { fld0: _2,fld1: _3,fld2: _33 };
_22 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _33 };
_1.fld2 = (*_26).fld2;
_25 = _10 + _37.fld2.0;
_2 = (*_26).fld0 * (*_26).fld0;
(*_26).fld1 = _3;
(*_26).fld2 = _12 * _33;
_3 = (*_26).fld1;
_37.fld0 = Adt25 { fld0: _6,fld1: Move(_26),fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _37.fld2.2 };
(*_14) = _27;
(*_22) = _18 - _18;
_42 = (_17.0.fld1, Move(_22), _37.fld2.0);
(*_14) = [_19,_19,_19,_19,_19,_19,_19,_19];
_3 = _17.0.fld1;
_15.fld4 = Adt24::Variant0 { fld0: _18,fld1: Move(_17.0) };
Call((*_14) = core::intrinsics::transmute(_27), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_27 = [_19,_19,_19,_19,_19,_19,_19,_19];
_22 = core::ptr::addr_of_mut!(_18);
place!(Field::<Adt17>(Variant(_15.fld4, 0), 1)).fld0 = _4 - _2;
_17.0.fld0 = _2 ^ Field::<Adt17>(Variant(_15.fld4, 0), 1).fld0;
(*_22) = Field::<i32>(Variant(_15.fld4, 0), 0) - Field::<i32>(Variant(_15.fld4, 0), 0);
_10 = _42.2 + _25;
(*_22) = _34.0;
_25 = Field::<Adt17>(Variant(_15.fld4, 0), 1).fld2 as isize;
_37.fld0.fld3 = _15.fld0.fld3 * _15.fld0.fld3;
_15.fld2 = (_5, _37.fld2.1, _37.fld2.2, Move(_22));
_30 = Move(_14);
_26 = core::ptr::addr_of_mut!(_1);
_35 = [_9,_4,_4];
(*_26) = Adt17 { fld0: Field::<Adt17>(Variant(_15.fld4, 0), 1).fld0,fld1: Field::<Adt17>(Variant(_15.fld4, 0), 1).fld1,fld2: Field::<Adt17>(Variant(_15.fld4, 0), 1).fld2 };
_49.1.0 = (*_26).fld1 << _4;
_33 = _19 as f64;
_22 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_15.fld4, 0), 0)));
(*_22) = _34.0;
_49.1.3.fld1 = _15.fld1;
Goto(bb22)
}
bb22 = {
_33 = 208_u8 as f64;
(*_26) = Move(Field::<Adt17>(Variant(_15.fld4, 0), 1));
_17.0.fld1 = _1.fld1 << (*_26).fld1;
(*_26).fld1 = !_3;
_26 = core::ptr::addr_of_mut!((*_26));
(*_22) = -_18;
_17.0.fld0 = (*_26).fld0 & (*_26).fld0;
_37.fld2.3 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _17.0.fld0,fld1: _17.0.fld1,fld2: _12 };
match _37.fld2.2 {
0 => bb4,
30699 => bb24,
_ => bb23
}
}
bb23 = {
(*_26).fld0 = _9 << _4;
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
Call((*_26).fld0 = core::intrinsics::bswap(_4), ReturnTo(bb10), UnwindUnreachable())
}
bb24 = {
place!(Field::<Adt17>(Variant(_15.fld4, 0), 1)) = Adt17 { fld0: (*_26).fld0,fld1: (*_26).fld1,fld2: (*_26).fld2 };
_17.0.fld2 = (*_26).fld2 - (*_26).fld2;
_37.fld0 = Adt25 { fld0: _15.fld0.fld0,fld1: Move(_26),fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _15.fld0.fld4 };
_37.fld1 = _49.1.3.fld1;
_32 = core::ptr::addr_of!(place!(Field::<Adt17>(Variant(_15.fld4, 0), 1)));
_46 = _10 - _42.2;
match _37.fld2.2 {
30699 => bb25,
_ => bb13
}
}
bb25 = {
_16 = core::ptr::addr_of_mut!((*_32));
(*_16).fld2 = -_12;
(*_32).fld2 = _17.0.fld2;
(*_32).fld2 = _1.fld2 - _1.fld2;
(*_32) = Move(_1);
_49.1.3.fld2.3 = core::ptr::addr_of_mut!(_34.0);
(*_22) = _18;
_37.fld3 = core::ptr::addr_of!((*_32).fld1);
_37.fld3 = core::ptr::addr_of!((*_32).fld1);
_49.1.3.fld0.fld0 = _15.fld0.fld0;
_22 = core::ptr::addr_of_mut!((*_22));
_10 = _25;
_16 = Move(_37.fld0.fld1);
_49.2 = core::ptr::addr_of_mut!(_11);
_19 = -(-86_i8);
_15.fld1 = _49.1.3.fld1;
(*_22) = _18 & _34.0;
_37.fld2 = (_42.2, _15.fld2.1, _15.fld0.fld4, Move(_49.1.3.fld2.3));
(*_32) = Adt17 { fld0: _17.0.fld0,fld1: _3,fld2: _12 };
_42.1 = core::ptr::addr_of_mut!((*_22));
(*_32).fld1 = !_17.0.fld1;
match _15.fld2.2 {
0 => bb4,
1 => bb15,
2 => bb9,
30699 => bb27,
_ => bb26
}
}
bb26 = {
(*_26).fld0 = _9 << _4;
(*_26) = Adt17 { fld0: _4,fld1: _3,fld2: _12 };
Call((*_26).fld0 = core::intrinsics::bswap(_4), ReturnTo(bb10), UnwindUnreachable())
}
bb27 = {
(*_32).fld2 = _17.0.fld2;
_15.fld2.1 = (*_32).fld0 == (*_32).fld0;
_9 = (*_32).fld0 | (*_32).fld0;
_27 = [_19,_19,_19,_19,_19,_19,_19,_19];
_15.fld0 = Adt25 { fld0: _49.1.3.fld0.fld0,fld1: Move(_16),fld2: _8,fld3: _37.fld0.fld3,fld4: _37.fld0.fld4 };
place!(Field::<i32>(Variant(_15.fld4, 0), 0)) = _18;
_17.1 = !_37.fld0.fld2;
(*_32).fld1 = _42.0 - _17.0.fld1;
(*_22) = _34.0;
(*_22) = _18 | _18;
_49.1.3.fld0.fld2 = !_8;
_1 = Adt17 { fld0: (*_32).fld0,fld1: (*_32).fld1,fld2: Field::<Adt17>(Variant(_15.fld4, 0), 1).fld2 };
_42 = (Field::<Adt17>(Variant(_15.fld4, 0), 1).fld1, Move(_22), _15.fld2.0);
(*_32).fld2 = _1.fld2;
(*_32).fld1 = _49.1.3.fld0.fld2 as u32;
Call((*_32).fld1 = core::intrinsics::bswap(_17.0.fld1), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
_40 = core::ptr::addr_of!((*_32));
(*_32).fld0 = _37.fld2.1 as u16;
_12 = (*_32).fld2;
_16 = core::ptr::addr_of_mut!((*_32));
_49.1.3.fld0.fld2 = _49.1.3.fld1 as u64;
_49.1.3.fld2.3 = core::ptr::addr_of_mut!(_18);
_50 = (*_32).fld0 == (*_16).fld0;
(*_16).fld2 = _19 as f64;
(*_16).fld1 = !_49.1.0;
(*_32).fld0 = 7324083343654945659_i64 as u16;
(*_32).fld0 = (*_40).fld1 as u16;
(*_16).fld1 = _19 as u32;
Goto(bb29)
}
bb29 = {
(*_32) = Adt17 { fld0: _4,fld1: _3,fld2: _33 };
_37.fld1 = _49.1.3.fld1;
match _15.fld2.2 {
0 => bb13,
1 => bb22,
2 => bb30,
3 => bb31,
30699 => bb33,
_ => bb32
}
}
bb30 = {
Return()
}
bb31 = {
_8 = _15.fld0.fld2;
_27 = [_19,_19,_19,_19,_19,_19,_19,_19];
_26 = core::ptr::addr_of_mut!(_17.0);
(*_26) = Adt17 { fld0: _4,fld1: _1.fld1,fld2: _1.fld2 };
(*_26).fld1 = _1.fld1 * _3;
_26 = core::ptr::addr_of_mut!((*_26));
_1.fld1 = (*_26).fld1 - (*_26).fld1;
(*_26).fld0 = _19 as u16;
(*_26).fld2 = _1.fld2 + _1.fld2;
(*_26).fld0 = _4 * _2;
(*_26).fld2 = -_1.fld2;
_1.fld1 = (*_26).fld1 << (*_26).fld0;
_12 = (*_26).fld2 - (*_26).fld2;
_11 = 47225548216225002265632078416219834946_i128 as f32;
_15.fld0.fld4 = (-30555_i16) | 25807_i16;
(*_26) = Move(_1);
Goto(bb8)
}
bb32 = {
Return()
}
bb33 = {
_15.fld2.2 = _37.fld2.2;
place!(Field::<Adt17>(Variant(_15.fld4, 0), 1)).fld2 = _17.0.fld2;
_53 = _15.fld1;
_66 = _15.fld1;
_39 = &_30;
_19 = (-73_i8);
_60 = _53;
_34.0 = 149840066471294528638575210593695740169_i128 as i32;
_55 = _53;
_26 = core::ptr::addr_of_mut!((*_32));
_60 = _37.fld1;
_55 = _53;
(*_32) = Move(_1);
_57 = core::ptr::addr_of_mut!(_11);
_18 = Field::<i32>(Variant(_15.fld4, 0), 0) * Field::<i32>(Variant(_15.fld4, 0), 0);
_15.fld0 = Adt25 { fld0: _49.1.3.fld0.fld0,fld1: Move(_26),fld2: _37.fld0.fld2,fld3: _37.fld0.fld3,fld4: _37.fld0.fld4 };
(*_57) = (*_32).fld2 as f32;
_63 = &mut (*_32).fld0;
_34.0 = _18 + _18;
(*_57) = _19 as f32;
(*_57) = _19 as f32;
(*_32).fld2 = -_17.0.fld2;
_38 = [_17.3,_37.fld0.fld2,_8,_8];
match _19 {
0 => bb17,
1 => bb8,
2 => bb15,
3 => bb29,
340282366920938463463374607431768211383 => bb34,
_ => bb7
}
}
bb34 = {
(*_63) = _9 | _9;
_69 = &(*_39);
Goto(bb35)
}
bb35 = {
_61 = (*_32).fld1 + (*_32).fld1;
_49.1.3.fld2.3 = Move(_37.fld2.3);
_43 = _19 * _19;
(*_57) = _33 as f32;
_24 = Move(_42.1);
_14 = core::ptr::addr_of!(_36);
_49.1.1 = (*_32).fld1 == (*_32).fld1;
_61 = _17.0.fld1 ^ (*_32).fld1;
_65 = &mut _17.0.fld1;
_1.fld0 = !(*_63);
_70.2 = _37.fld0.fld4;
_49.1.3.fld0 = Adt25 { fld0: _6,fld1: Move(_16),fld2: _37.fld0.fld2,fld3: _37.fld0.fld3,fld4: _37.fld0.fld4 };
(*_57) = _49.1.3.fld0.fld4 as f32;
_37.fld0.fld1 = core::ptr::addr_of_mut!(_1);
_77 = _43 & _19;
_74 = core::ptr::addr_of!((*_65));
(*_63) = _9;
(*_14) = [_77,_43,_77,_77,_77,_77,_77,_77];
_52 = [(*_63),_4,_4];
_50 = !_49.1.1;
(*_65) = _49.1.3.fld0.fld0 as u32;
_43 = -_19;
_37.fld2.1 = _49.1.1 ^ _49.1.1;
_37.fld4 = Adt24::Variant2 { fld0: _77,fld1: _38 };
(*_32).fld1 = _42.0 >> (*_63);
(*_14) = [_19,_77,Field::<i8>(Variant(_37.fld4, 2), 0),_77,_19,Field::<i8>(Variant(_37.fld4, 2), 0),Field::<i8>(Variant(_37.fld4, 2), 0),_19];
_49.1.3.fld2.2 = _37.fld2.2 | _37.fld2.2;
_49.1.3.fld0.fld4 = !_37.fld2.2;
Goto(bb36)
}
bb36 = {
_1.fld1 = (*_57) as u32;
_50 = !_37.fld2.1;
_32 = core::ptr::addr_of!(_1);
_29 = core::ptr::addr_of_mut!(_25);
(*_14) = _27;
match _6 {
0 => bb22,
1 => bb27,
2 => bb6,
3 => bb37,
4 => bb38,
5 => bb39,
13085013881533899054 => bb41,
_ => bb40
}
}
bb37 = {
Return()
}
bb38 = {
_15.fld0.fld2 = _17.1 ^ _8;
(*_26).fld1 = _1.fld1 ^ _1.fld1;
_17.0.fld0 = _4;
(*_26).fld2 = _33;
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _12 };
_42.2 = (*_26).fld0 as isize;
(*_26).fld0 = _4;
_14 = core::ptr::addr_of!(_36);
_22 = core::ptr::addr_of_mut!(_34.0);
_37.fld0.fld3 = _15.fld0.fld3 | _15.fld0.fld3;
(*_26).fld2 = _12 + _33;
(*_22) = _18;
(*_26) = Adt17 { fld0: _2,fld1: _3,fld2: _33 };
_22 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _33 };
_1.fld2 = (*_26).fld2;
_25 = _10 + _37.fld2.0;
_2 = (*_26).fld0 * (*_26).fld0;
(*_26).fld1 = _3;
(*_26).fld2 = _12 * _33;
_3 = (*_26).fld1;
_37.fld0 = Adt25 { fld0: _6,fld1: Move(_26),fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _37.fld2.2 };
(*_14) = _27;
(*_22) = _18 - _18;
_42 = (_17.0.fld1, Move(_22), _37.fld2.0);
(*_14) = [_19,_19,_19,_19,_19,_19,_19,_19];
_3 = _17.0.fld1;
_15.fld4 = Adt24::Variant0 { fld0: _18,fld1: Move(_17.0) };
Call((*_14) = core::intrinsics::transmute(_27), ReturnTo(bb21), UnwindUnreachable())
}
bb39 = {
_33 = 208_u8 as f64;
(*_26) = Move(Field::<Adt17>(Variant(_15.fld4, 0), 1));
_17.0.fld1 = _1.fld1 << (*_26).fld1;
(*_26).fld1 = !_3;
_26 = core::ptr::addr_of_mut!((*_26));
(*_22) = -_18;
_17.0.fld0 = (*_26).fld0 & (*_26).fld0;
_37.fld2.3 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _17.0.fld0,fld1: _17.0.fld1,fld2: _12 };
match _37.fld2.2 {
0 => bb4,
30699 => bb24,
_ => bb23
}
}
bb40 = {
Return()
}
bb41 = {
(*_32).fld1 = _49.1.0 & _42.0;
(*_57) = _37.fld0.fld0 as f32;
_58 = _18 - _34.0;
(*_32).fld1 = _46 as u32;
_44 = _66;
(*_57) = 139870554196003472047095589924520183187_i128 as f32;
_78.2 = core::ptr::addr_of!(_35);
_42.1 = core::ptr::addr_of_mut!(_58);
(*_63) = _49.1.3.fld0.fld2 as u16;
(*_65) = _77 as u32;
(*_29) = _37.fld2.0 & _37.fld2.0;
(*_32).fld2 = _12;
_75 = _49.1.3.fld0.fld2;
(*_32).fld1 = _49.1.0;
(*_63) = (*_32).fld0 + (*_32).fld0;
_85 = Move(_37.fld3);
(*_32) = Adt17 { fld0: _9,fld1: _61,fld2: _12 };
_52 = _35;
_19 = _77 << _70.2;
_42.2 = -_46;
(*_32).fld2 = -_12;
match _49.1.3.fld0.fld0 {
0 => bb20,
1 => bb26,
2 => bb21,
3 => bb8,
4 => bb42,
5 => bb43,
6 => bb44,
13085013881533899054 => bb46,
_ => bb45
}
}
bb42 = {
(*_32).fld2 = _17.0.fld2;
_15.fld2.1 = (*_32).fld0 == (*_32).fld0;
_9 = (*_32).fld0 | (*_32).fld0;
_27 = [_19,_19,_19,_19,_19,_19,_19,_19];
_15.fld0 = Adt25 { fld0: _49.1.3.fld0.fld0,fld1: Move(_16),fld2: _8,fld3: _37.fld0.fld3,fld4: _37.fld0.fld4 };
place!(Field::<i32>(Variant(_15.fld4, 0), 0)) = _18;
_17.1 = !_37.fld0.fld2;
(*_32).fld1 = _42.0 - _17.0.fld1;
(*_22) = _34.0;
(*_22) = _18 | _18;
_49.1.3.fld0.fld2 = !_8;
_1 = Adt17 { fld0: (*_32).fld0,fld1: (*_32).fld1,fld2: Field::<Adt17>(Variant(_15.fld4, 0), 1).fld2 };
_42 = (Field::<Adt17>(Variant(_15.fld4, 0), 1).fld1, Move(_22), _15.fld2.0);
(*_32).fld2 = _1.fld2;
(*_32).fld1 = _49.1.3.fld0.fld2 as u32;
Call((*_32).fld1 = core::intrinsics::bswap(_17.0.fld1), ReturnTo(bb28), UnwindUnreachable())
}
bb43 = {
_33 = 208_u8 as f64;
(*_26) = Move(Field::<Adt17>(Variant(_15.fld4, 0), 1));
_17.0.fld1 = _1.fld1 << (*_26).fld1;
(*_26).fld1 = !_3;
_26 = core::ptr::addr_of_mut!((*_26));
(*_22) = -_18;
_17.0.fld0 = (*_26).fld0 & (*_26).fld0;
_37.fld2.3 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _17.0.fld0,fld1: _17.0.fld1,fld2: _12 };
match _37.fld2.2 {
0 => bb4,
30699 => bb24,
_ => bb23
}
}
bb44 = {
Return()
}
bb45 = {
_15.fld0.fld2 = _17.1 ^ _8;
(*_26).fld1 = _1.fld1 ^ _1.fld1;
_17.0.fld0 = _4;
(*_26).fld2 = _33;
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _12 };
_42.2 = (*_26).fld0 as isize;
(*_26).fld0 = _4;
_14 = core::ptr::addr_of!(_36);
_22 = core::ptr::addr_of_mut!(_34.0);
_37.fld0.fld3 = _15.fld0.fld3 | _15.fld0.fld3;
(*_26).fld2 = _12 + _33;
(*_22) = _18;
(*_26) = Adt17 { fld0: _2,fld1: _3,fld2: _33 };
_22 = core::ptr::addr_of_mut!((*_22));
(*_26) = Adt17 { fld0: _2,fld1: _1.fld1,fld2: _33 };
_1.fld2 = (*_26).fld2;
_25 = _10 + _37.fld2.0;
_2 = (*_26).fld0 * (*_26).fld0;
(*_26).fld1 = _3;
(*_26).fld2 = _12 * _33;
_3 = (*_26).fld1;
_37.fld0 = Adt25 { fld0: _6,fld1: Move(_26),fld2: _15.fld0.fld2,fld3: _15.fld0.fld3,fld4: _37.fld2.2 };
(*_14) = _27;
(*_22) = _18 - _18;
_42 = (_17.0.fld1, Move(_22), _37.fld2.0);
(*_14) = [_19,_19,_19,_19,_19,_19,_19,_19];
_3 = _17.0.fld1;
_15.fld4 = Adt24::Variant0 { fld0: _18,fld1: Move(_17.0) };
Call((*_14) = core::intrinsics::transmute(_27), ReturnTo(bb21), UnwindUnreachable())
}
bb46 = {
_75 = _37.fld0.fld2 ^ _37.fld0.fld2;
_51 = Adt23::Variant1 { fld0: (*_32).fld0,fld1: Move(_42.1) };
_10 = (*_29);
(*_32).fld0 = (*_63) | (*_63);
(*_63) = !(*_32).fld0;
(*_63) = (*_32).fld0 | (*_32).fld0;
_52 = [(*_63),(*_63),(*_32).fld0];
_42 = ((*_32).fld1, Move(Field::<*mut i32>(Variant(_51, 1), 1)), _46);
_49.1.3.fld3 = core::ptr::addr_of!((*_65));
_78.3 = &mut _75;
_89 = Adt23::Variant0 { fld0: _49.1.3.fld0.fld2,fld1: _49.1.3.fld2.2,fld2: 27_u8 };
_19 = Field::<i8>(Variant(_37.fld4, 2), 0);
(*_65) = (*_32).fld1 & _1.fld1;
(*_32).fld0 = _4 - (*_63);
Goto(bb47)
}
bb47 = {
(*_63) = (*_57) as u16;
_37.fld0.fld1 = core::ptr::addr_of_mut!((*_32));
_12 = _19 as f64;
(*_57) = (-139295673953844865610320757603992560229_i128) as f32;
_49.1.1 = (*_32).fld0 < (*_32).fld0;
_31 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_89, 0), 2)));
(*_32) = Adt17 { fld0: _2,fld1: (*_65),fld2: _33 };
(*_31) = 191_u8 ^ 253_u8;
place!(Field::<u16>(Variant(_51, 1), 0)) = (*_32).fld0;
(*_32).fld0 = _4 & _4;
(*_31) = 169313017975823700860380066862965711368_i128 as u8;
_81.2 = _70.2 * _37.fld0.fld4;
(*_32).fld1 = (*_65);
_62 = [_77,Field::<i8>(Variant(_37.fld4, 2), 0),Field::<i8>(Variant(_37.fld4, 2), 0),_19,_19,Field::<i8>(Variant(_37.fld4, 2), 0),Field::<i8>(Variant(_37.fld4, 2), 0)];
Goto(bb48)
}
bb48 = {
_57 = Move(_49.2);
(*_32).fld2 = _12;
(*_32).fld1 = !(*_65);
(*_63) = (*_32).fld0 | (*_32).fld0;
place!(Field::<u16>(Variant(_51, 1), 0)) = !(*_32).fld0;
(*_63) = (*_32).fld0;
Goto(bb49)
}
bb49 = {
_93 = core::ptr::addr_of!((*_32).fld1);
(*_93) = !(*_65);
(*_63) = _8 as u16;
(*_32).fld1 = (*_65) >> (*_63);
_65 = &mut _61;
_20 = _44;
_49.2 = core::ptr::addr_of_mut!(_78.1);
_78.2 = core::ptr::addr_of!(_35);
(*_32) = Adt17 { fld0: _9,fld1: (*_65),fld2: _12 };
_88 = _58 | _34.0;
(*_32).fld0 = (*_63) << (*_29);
RET = Adt29::Variant0 { fld0: _38,fld1: _49.1.3.fld1,fld2: _11,fld3: (*_63),fld4: (*_31),fld5: _34.0,fld6: _49.1.3.fld0.fld2,fld7: 8416679374315309986492740577751822166_i128 };
_78.2 = core::ptr::addr_of!(_35);
(*_32).fld2 = _12 + _12;
(*_32).fld2 = _12 + _12;
_67 = !(*_32).fld0;
_81 = (_10, _49.1.1, _37.fld0.fld4, Move(_24));
(*_31) = Field::<u8>(Variant(RET, 0), 4);
(*_29) = -_5;
_49.1.1 = _13;
place!(Field::<u8>(Variant(RET, 0), 4)) = (*_31) + (*_31);
_81.1 = (*_63) >= (*_63);
(*_32).fld0 = !(*_63);
_70.1 = (*_65) < _1.fld1;
(*_14) = _27;
match _49.1.3.fld0.fld0 {
0 => bb41,
1 => bb42,
13085013881533899054 => bb51,
_ => bb50
}
}
bb50 = {
(*_63) = (*_57) as u16;
_37.fld0.fld1 = core::ptr::addr_of_mut!((*_32));
_12 = _19 as f64;
(*_57) = (-139295673953844865610320757603992560229_i128) as f32;
_49.1.1 = (*_32).fld0 < (*_32).fld0;
_31 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_89, 0), 2)));
(*_32) = Adt17 { fld0: _2,fld1: (*_65),fld2: _33 };
(*_31) = 191_u8 ^ 253_u8;
place!(Field::<u16>(Variant(_51, 1), 0)) = (*_32).fld0;
(*_32).fld0 = _4 & _4;
(*_31) = 169313017975823700860380066862965711368_i128 as u8;
_81.2 = _70.2 * _37.fld0.fld4;
(*_32).fld1 = (*_65);
_62 = [_77,Field::<i8>(Variant(_37.fld4, 2), 0),Field::<i8>(Variant(_37.fld4, 2), 0),_19,_19,Field::<i8>(Variant(_37.fld4, 2), 0),Field::<i8>(Variant(_37.fld4, 2), 0)];
Goto(bb48)
}
bb51 = {
_49.1.3.fld2 = Move(_81);
_37.fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(RET, 0), 5)));
(*_31) = Field::<u8>(Variant(RET, 0), 4) << _49.1.3.fld0.fld4;
_76 = _37.fld2.1;
_37.fld0.fld0 = _6 | _6;
(*_32).fld2 = _12 - _33;
_96 = !_70.1;
Goto(bb52)
}
bb52 = {
_79 = core::ptr::addr_of_mut!(_76);
_81 = ((*_29), (*_79), _49.1.3.fld2.2, Move(_42.1));
(*_29) = _37.fld0.fld3 as isize;
_49.1.3 = Adt36 { fld0: Move(_37.fld0),fld1: _37.fld1,fld2: Move(_37.fld2),fld3: Move(_93),fld4: Move(_37.fld4) };
_90 = Field::<char>(Variant(RET, 0), 1);
(*_65) = (*_32).fld1;
(*_32).fld1 = (*_65) & (*_65);
_49.1.3.fld0.fld3 = 270623245740474122186756477558471177370_u128 | 209990228133675203853316015717803949481_u128;
match _6 {
0 => bb26,
1 => bb37,
2 => bb30,
3 => bb27,
4 => bb35,
5 => bb53,
6 => bb54,
13085013881533899054 => bb56,
_ => bb55
}
}
bb53 = {
_37.fld0 = Move(_15.fld0);
_6 = _37.fld0.fld0;
_15.fld2.0 = _5 << (*_26).fld0;
_37.fld2 = (_15.fld2.0, _13, _37.fld0.fld4, Move(_15.fld2.3));
match _37.fld0.fld4 {
0 => bb8,
1 => bb6,
2 => bb15,
3 => bb16,
30699 => bb18,
_ => bb17
}
}
bb54 = {
_40 = core::ptr::addr_of!((*_32));
(*_32).fld0 = _37.fld2.1 as u16;
_12 = (*_32).fld2;
_16 = core::ptr::addr_of_mut!((*_32));
_49.1.3.fld0.fld2 = _49.1.3.fld1 as u64;
_49.1.3.fld2.3 = core::ptr::addr_of_mut!(_18);
_50 = (*_32).fld0 == (*_16).fld0;
(*_16).fld2 = _19 as f64;
(*_16).fld1 = !_49.1.0;
(*_32).fld0 = 7324083343654945659_i64 as u16;
(*_32).fld0 = (*_40).fld1 as u16;
(*_16).fld1 = _19 as u32;
Goto(bb29)
}
bb55 = {
Return()
}
bb56 = {
(*_32).fld2 = _12 - _12;
(*_65) = _1.fld1 << (*_32).fld1;
_92 = (*_79) ^ _76;
(*_32).fld1 = !(*_65);
(*_32).fld0 = 85919659385487761397103999812177994739_i128 as u16;
_85 = core::ptr::addr_of!(_3);
(*_32).fld0 = (*_63) >> _4;
(*_85) = !(*_32).fld1;
_64 = (*_32).fld2 * (*_32).fld2;
(*_14) = [_19,Field::<i8>(Variant(_49.1.3.fld4, 2), 0),_77,Field::<i8>(Variant(_49.1.3.fld4, 2), 0),_77,_77,_77,_19];
(*_85) = _18 as u32;
(*_14) = _27;
_2 = !(*_63);
(*_32).fld2 = _64 + _64;
(*_31) = Field::<u8>(Variant(RET, 0), 4) | Field::<u8>(Variant(RET, 0), 4);
_82 = Move(_40);
_96 = (*_79) & (*_79);
(*_79) = (*_31) > (*_31);
(*_31) = !Field::<u8>(Variant(RET, 0), 4);
_76 = Field::<i16>(Variant(_89, 0), 1) <= _70.2;
_29 = core::ptr::addr_of_mut!((*_29));
_83 = _88 >> (*_32).fld0;
(*_65) = !(*_32).fld1;
(*_14) = [Field::<i8>(Variant(_49.1.3.fld4, 2), 0),_43,_77,Field::<i8>(Variant(_49.1.3.fld4, 2), 0),_19,_77,_77,_19];
(*_31) = Field::<u8>(Variant(RET, 0), 4);
_80 = &_49.1.3;
place!(Field::<u8>(Variant(_89, 0), 2)) = Field::<u8>(Variant(RET, 0), 4);
(*_32).fld1 = (*_85) >> (*_63);
Goto(bb57)
}
bb57 = {
(*_32) = Adt17 { fld0: _9,fld1: (*_85),fld2: _64 };
(*_63) = (*_32).fld0 & Field::<u16>(Variant(RET, 0), 3);
_92 = (*_80).fld2.1;
(*_32).fld1 = (*_65) | _49.1.0;
(*_65) = (*_32).fld1 >> (*_80).fld2.0;
_67 = _8 as u16;
(*_63) = (*_32).fld0 | Field::<u16>(Variant(RET, 0), 3);
_42.1 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(RET, 0), 5)));
(*_79) = (*_80).fld2.2 >= (*_80).fld2.2;
_34 = (_58,);
(*_65) = _1.fld1;
(*_14) = [Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant(_49.1.3.fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0)];
_81 = ((*_80).fld2.0, _50, (*_80).fld0.fld4, Move(_42.1));
_62 = [Field::<i8>(Variant((*_80).fld4, 2), 0),_77,_77,Field::<i8>(Variant(_49.1.3.fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0)];
_39 = &_14;
match _6 {
0 => bb24,
1 => bb17,
2 => bb48,
3 => bb32,
13085013881533899054 => bb59,
_ => bb58
}
}
bb58 = {
Return()
}
bb59 = {
place!(Field::<[u64; 4]>(Variant(RET, 0), 0)) = [(*_80).fld0.fld2,(*_80).fld0.fld2,(*_80).fld0.fld2,(*_80).fld0.fld2];
_37.fld0.fld2 = (*_80).fld0.fld2 & (*_80).fld0.fld2;
_54 = (*_80).fld1;
Goto(bb60)
}
bb60 = {
place!(Field::<i128>(Variant(RET, 0), 7)) = 11813217841948195067767690229226617535_i128 << (*_32).fld1;
_8 = (*_80).fld0.fld2;
(*_14) = [Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant(_49.1.3.fld4, 2), 0)];
(*_63) = (*_32).fld0;
_13 = (*_80).fld2.1;
(*_85) = _49.1.0;
(*_32).fld0 = _4;
_42.1 = Move(_49.1.3.fld2.3);
(*_32).fld2 = -_64;
(*_32) = Adt17 { fld0: (*_63),fld1: (*_85),fld2: _64 };
_37.fld3 = core::ptr::addr_of!((*_85));
(*_14) = [Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0)];
_70.3 = Move(_81.3);
(*_85) = !_49.1.0;
_6 = (*_63) as usize;
_95 = Field::<f32>(Variant(RET, 0), 2) - Field::<f32>(Variant(RET, 0), 2);
place!(Field::<*mut i32>(Variant(_51, 1), 1)) = core::ptr::addr_of_mut!(_34.0);
(*_32).fld1 = (*_80).fld1 as u32;
_41 = &_79;
_56 = &_89;
place!(Field::<u64>(Variant(RET, 0), 6)) = !Field::<u64>(Variant((*_56), 0), 0);
(*_32).fld2 = Field::<i16>(Variant((*_56), 0), 1) as f64;
_113 = Adt23::Variant0 { fld0: (*_80).fld0.fld2,fld1: Field::<i16>(Variant((*_56), 0), 1),fld2: Field::<u8>(Variant((*_56), 0), 2) };
(*_14) = [Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),_77,_19,_77,Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0),Field::<i8>(Variant((*_80).fld4, 2), 0)];
_1 = Adt17 { fld0: (*_63),fld1: _42.0,fld2: _12 };
Goto(bb61)
}
bb61 = {
Call(_116 = dump_var(7_usize, 19_usize, Move(_19), 83_usize, Move(_83), 44_usize, Move(_44), 53_usize, Move(_53)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_116 = dump_var(7_usize, 7_usize, Move(_7), 35_usize, Move(_35), 55_usize, Move(_55), 43_usize, Move(_43)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_116 = dump_var(7_usize, 36_usize, Move(_36), 5_usize, Move(_5), 96_usize, Move(_96), 50_usize, Move(_50)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_116 = dump_var(7_usize, 2_usize, Move(_2), 6_usize, Move(_6), 46_usize, Move(_46), 3_usize, Move(_3)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_116 = dump_var(7_usize, 88_usize, Move(_88), 52_usize, Move(_52), 90_usize, Move(_90), 20_usize, Move(_20)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: u32) -> u16 {
mir! {
type RET = u16;
let _2: isize;
let _3: u16;
let _4: *mut bool;
let _5: usize;
let _6: *const (u32, *mut i32, isize);
let _7: ();
let _8: ();
{
RET = '\u{980f7}' as u16;
_1 = !405493870_u32;
_2 = (-106_isize) & 9223372036854775807_isize;
_1 = 165633059532727246118763923638507544979_i128 as u32;
_2 = 9223372036854775807_isize;
_1 = 1757507293_u32;
_1 = 1797509537_u32;
RET = 59493_u16 + 22848_u16;
_3 = RET * RET;
RET = _3 + _3;
_1 = 927764637_u32;
_3 = RET | RET;
_2 = -(-85_isize);
_3 = RET;
RET = !_3;
_2 = (-78_isize) >> _1;
_2 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
RET = (-81796754_i32) as u16;
_1 = 2845846919_u32 >> _2;
_3 = (-10048_i16) as u16;
_2 = 17_isize & 78_isize;
Call(_3 = fn9(_2, RET, _1, _2, _2, _1, RET, RET), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = _3 ^ _3;
_3 = RET | RET;
_2 = !9223372036854775807_isize;
_3 = (-115966673939546451232621518706161330432_i128) as u16;
_1 = 4_usize as u32;
RET = _3 + _3;
RET = _3 >> _1;
_3 = !RET;
_3 = !RET;
RET = !_3;
RET = (-6625755093855200748_i64) as u16;
_3 = RET;
_1 = 2676803357_u32 | 1440068551_u32;
_2 = (-9223372036854775808_isize);
RET = _3 >> _1;
_3 = RET & RET;
_3 = RET * RET;
_5 = 4504110139792313381_usize | 5937715621592059138_usize;
RET = _3;
_3 = !RET;
_2 = (-92_isize);
_3 = RET;
_2 = 9223372036854775807_isize << _3;
_2 = 9223372036854775807_isize | (-9223372036854775808_isize);
RET = _3 << _2;
RET = _3 * _3;
_1 = !3943032411_u32;
_3 = !RET;
Goto(bb2)
}
bb2 = {
Call(_7 = dump_var(8_usize, 1_usize, Move(_1), 3_usize, Move(_3), 8_usize, _8, 8_usize, _8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: isize,mut _2: u16,mut _3: u32,mut _4: isize,mut _5: isize,mut _6: u32,mut _7: u16,mut _8: u16) -> u16 {
mir! {
type RET = u16;
let _9: (u32, *mut i32, isize);
let _10: u32;
let _11: char;
let _12: u64;
let _13: *const [u16; 3];
let _14: [i64; 1];
let _15: (isize, bool, i16, *mut i32);
let _16: (u32, bool, u64, Adt36);
let _17: *const *mut bool;
let _18: (isize, bool, i16, *mut i32);
let _19: f64;
let _20: u128;
let _21: i32;
let _22: *const &'static i64;
let _23: *mut u64;
let _24: ();
let _25: ();
{
_8 = _5 as u16;
_2 = (-632349222_i32) as u16;
RET = 140197889531728946616677575604922469047_i128 as u16;
_4 = -_1;
_10 = _6 << _3;
_9.0 = '\u{f0b81}' as u32;
_9.2 = !_4;
_2 = 3625212895958666371_u64 as u16;
RET = _8 & _8;
Goto(bb1)
}
bb1 = {
_2 = RET << _10;
_5 = _9.2;
_4 = -_5;
_6 = _3;
_6 = _10;
_8 = _3 as u16;
_7 = 242225696066791653259934886978537750224_u128 as u16;
_4 = !_1;
_9.0 = (-69783188544331512283989481732597939352_i128) as u32;
_11 = '\u{1a550}';
_4 = -_9.2;
_6 = _10;
_9.2 = _1 >> _2;
_7 = _8 >> _9.2;
_3 = _6 | _6;
_8 = _7 | _7;
_8 = RET | _2;
_3 = _10 * _6;
_10 = _3;
_12 = 6845557684340672096_u64 & 3307776919114988194_u64;
_1 = !_9.2;
_8 = !_7;
_14 = [4384520760997307612_i64];
_9.2 = _10 as isize;
_8 = (-30889_i16) as u16;
_9.2 = _10 as isize;
_2 = _7 * _7;
Call(_9.2 = core::intrinsics::bswap(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_11 = '\u{fe29e}';
_11 = '\u{5378d}';
RET = (-16881_i16) as u16;
_11 = '\u{a23a0}';
_9.0 = !_3;
_5 = !_1;
_4 = -_5;
_1 = (-42532136322691858239573379390212351747_i128) as isize;
_8 = _2 ^ _2;
_9.0 = _10;
Goto(bb3)
}
bb3 = {
_16.3.fld0.fld2 = !_12;
_5 = -_9.2;
_16.3.fld0.fld2 = _12;
_16.3.fld3 = core::ptr::addr_of!(_3);
_1 = _4 ^ _5;
_15.0 = 37932910642648654041183056251088754978_i128 as isize;
_15.1 = !true;
_18.2 = (-156466581172865633836552340211239425074_i128) as i16;
_15.2 = _18.2 * _18.2;
_18.0 = _4 * _4;
_4 = _1 ^ _9.2;
_20 = 24847109897135050494169295675991548402_u128 * 240873042181910774683895919170586249948_u128;
_16.3.fld0.fld2 = _15.1 as u64;
_11 = '\u{32c86}';
RET = _8;
_15.1 = true | false;
_2 = 255_u8 as u16;
Goto(bb4)
}
bb4 = {
Call(_24 = dump_var(9_usize, 3_usize, Move(_3), 6_usize, Move(_6), 20_usize, Move(_20), 1_usize, Move(_1)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_24 = dump_var(9_usize, 11_usize, Move(_11), 2_usize, Move(_2), 25_usize, _25, 25_usize, _25), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: isize,mut _2: *mut isize,mut _3: *const u32,mut _4: *mut Adt17,mut _5: *mut i32,mut _6: isize,mut _7: i32,mut _8: isize,mut _9: isize) -> Adt17 {
mir! {
type RET = Adt17;
let _10: u8;
let _11: u128;
let _12: Adt23;
let _13: char;
let _14: &'static *const [u16; 3];
let _15: *mut u8;
let _16: f32;
let _17: *const Adt36;
let _18: i128;
let _19: *mut i32;
let _20: &'static i64;
let _21: *const u128;
let _22: *const *mut bool;
let _23: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _24: i8;
let _25: i64;
let _26: isize;
let _27: isize;
let _28: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _29: [u16; 3];
let _30: *mut u128;
let _31: [u16; 3];
let _32: *const [u16; 3];
let _33: [u32; 1];
let _34: f32;
let _35: *const [i8; 7];
let _36: char;
let _37: i64;
let _38: i128;
let _39: ();
let _40: ();
{
_1 = !_9;
_1 = _9;
_3 = core::ptr::addr_of!(RET.fld1);
_5 = core::ptr::addr_of_mut!(_7);
_6 = 3992821468842677090_u64 as isize;
(*_3) = (*_5) as u32;
(*_5) = -290001813_i32;
(*_5) = (-553004993_i32);
(*_3) = !2487706217_u32;
_9 = -_1;
(*_3) = 2730278961_u32 ^ 1699315681_u32;
_9 = !_1;
(*_5) = (-1028300587_i32) + 1323943024_i32;
(*_5) = (-698000297_i32) & 238367614_i32;
RET.fld0 = 187_u8 as u16;
_10 = 103_u8 * 140_u8;
_11 = 2032312350841278918385789416191840631_u128 + 100583564879564750552268728552700545371_u128;
(*_3) = 978339293_u32 | 3941582042_u32;
Goto(bb1)
}
bb1 = {
_7 = 7944751156808350571_i64 as i32;
(*_3) = 4077119351_u32;
(*_3) = 3524192998_u32;
(*_3) = 15126257023424944385_u64 as u32;
_5 = core::ptr::addr_of_mut!((*_5));
(*_5) = (-1460652699_i32) & (-1502626117_i32);
_9 = _1 | _1;
(*_5) = 1205248577_i32 * (-97850377_i32);
(*_3) = 2847121745_u32;
(*_3) = false as u32;
(*_5) = (-1703170294_i32);
(*_5) = 1139047500_i32;
_1 = _9 << _9;
(*_5) = _10 as i32;
(*_3) = 10588_i16 as u32;
_8 = _9 ^ _9;
_13 = '\u{6482b}';
_11 = 255973421339533700983655969681044534638_u128 & 181731325009725900945423849878320420551_u128;
_12 = Adt23::Variant0 { fld0: 13628826547662321216_u64,fld1: (-23646_i16),fld2: _10 };
(*_3) = RET.fld0 as u32;
_5 = core::ptr::addr_of_mut!((*_5));
(*_5) = (-628191959_i32) - 1330937363_i32;
_5 = core::ptr::addr_of_mut!((*_5));
Call(place!(Field::<u8>(Variant(_12, 0), 2)) = core::intrinsics::transmute(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_5) = 2115251390_i32 & (-1992589384_i32);
_21 = core::ptr::addr_of!(_11);
(*_21) = (-32_i8) as u128;
(*_5) = (-1455902771_i32);
RET.fld1 = 1273420191_u32;
(*_3) = 1300113734_u32 ^ 409544134_u32;
_2 = core::ptr::addr_of_mut!(_8);
(*_21) = 17770334967802760998_usize as u128;
place!(Field::<i16>(Variant(_12, 0), 1)) = 16625_i16 ^ (-11633_i16);
_24 = (*_2) as i8;
(*_21) = RET.fld0 as u128;
(*_3) = 1986115357_u32;
(*_3) = (*_21) as u32;
RET.fld0 = !17636_u16;
(*_5) = !852952413_i32;
_8 = 7059956956111584334_usize as isize;
Goto(bb3)
}
bb3 = {
(*_5) = Field::<i16>(Variant(_12, 0), 1) as i32;
(*_21) = 16402329850466969587_usize as u128;
(*_3) = _24 as u32;
(*_3) = 4016366128_u32 << _24;
(*_2) = _9 << (*_3);
(*_2) = (-6080840025452125035_i64) as isize;
(*_5) = RET.fld0 as i32;
(*_3) = 1804172677_u32;
(*_2) = (*_3) as isize;
_28.3 = _24 as u32;
_28.2 = core::ptr::addr_of_mut!(_16);
(*_3) = _28.3;
place!(Field::<u8>(Variant(_12, 0), 2)) = _10 << (*_3);
_7 = (-1773362612_i32) + (-1462469119_i32);
Goto(bb4)
}
bb4 = {
(*_3) = (-7877821593869524295_i64) as u32;
(*_21) = 33854501199163968456634256780548773420_u128 & 140229029747495757397704115622245456270_u128;
(*_21) = _24 as u128;
(*_3) = (*_5) as u32;
(*_5) = (-670894145_i32);
(*_3) = (*_2) as u32;
(*_21) = 5_usize as u128;
_17 = core::ptr::addr_of!(_28.1.3);
Call((*_17).fld4 = fn11((*_3), (*_21), Move(_4), (*_3), (*_2), Move(_17), (*_2), (*_21), Move(_2)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_28.1.1 = _24 > _24;
(*_5) = (-172731740_i32) ^ (-893581681_i32);
(*_5) = (-649340931_i32) * 1135891767_i32;
_28.1.3.fld2.2 = Field::<i16>(Variant(_12, 0), 1) & Field::<i16>(Variant(_12, 0), 1);
(*_21) = !85171158964522480190594235256724461078_u128;
_28.1.2 = Field::<u64>(Variant(_28.1.3.fld4, 3), 1) & Field::<u64>(Variant(_28.1.3.fld4, 3), 1);
(*_3) = _28.3 | _28.3;
(*_3) = !_28.3;
(*_5) = _28.1.1 as i32;
place!(Field::<u8>(Variant(_28.1.3.fld4, 3), 0)) = (*_3) as u8;
(*_5) = 1724938260_i32;
_19 = Move(_5);
(*_21) = 79387617090093793571025096691696175574_u128 - 168659245211663015965690301797878907008_u128;
_28.1.3.fld0.fld3 = (*_21);
(*_3) = _28.3;
_13 = '\u{169e1}';
_28.1.3.fld1 = _13;
(*_3) = _28.3;
(*_21) = !_28.1.3.fld0.fld3;
(*_21) = !_28.1.3.fld0.fld3;
_27 = _9;
_4 = core::ptr::addr_of_mut!(RET);
match _7 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
1724938260 => bb11,
_ => bb10
}
}
bb6 = {
(*_3) = (-7877821593869524295_i64) as u32;
(*_21) = 33854501199163968456634256780548773420_u128 & 140229029747495757397704115622245456270_u128;
(*_21) = _24 as u128;
(*_3) = (*_5) as u32;
(*_5) = (-670894145_i32);
(*_3) = (*_2) as u32;
(*_21) = 5_usize as u128;
_17 = core::ptr::addr_of!(_28.1.3);
Call((*_17).fld4 = fn11((*_3), (*_21), Move(_4), (*_3), (*_2), Move(_17), (*_2), (*_21), Move(_2)), ReturnTo(bb5), UnwindUnreachable())
}
bb7 = {
(*_5) = Field::<i16>(Variant(_12, 0), 1) as i32;
(*_21) = 16402329850466969587_usize as u128;
(*_3) = _24 as u32;
(*_3) = 4016366128_u32 << _24;
(*_2) = _9 << (*_3);
(*_2) = (-6080840025452125035_i64) as isize;
(*_5) = RET.fld0 as i32;
(*_3) = 1804172677_u32;
(*_2) = (*_3) as isize;
_28.3 = _24 as u32;
_28.2 = core::ptr::addr_of_mut!(_16);
(*_3) = _28.3;
place!(Field::<u8>(Variant(_12, 0), 2)) = _10 << (*_3);
_7 = (-1773362612_i32) + (-1462469119_i32);
Goto(bb4)
}
bb8 = {
(*_5) = 2115251390_i32 & (-1992589384_i32);
_21 = core::ptr::addr_of!(_11);
(*_21) = (-32_i8) as u128;
(*_5) = (-1455902771_i32);
RET.fld1 = 1273420191_u32;
(*_3) = 1300113734_u32 ^ 409544134_u32;
_2 = core::ptr::addr_of_mut!(_8);
(*_21) = 17770334967802760998_usize as u128;
place!(Field::<i16>(Variant(_12, 0), 1)) = 16625_i16 ^ (-11633_i16);
_24 = (*_2) as i8;
(*_21) = RET.fld0 as u128;
(*_3) = 1986115357_u32;
(*_3) = (*_21) as u32;
RET.fld0 = !17636_u16;
(*_5) = !852952413_i32;
_8 = 7059956956111584334_usize as isize;
Goto(bb3)
}
bb9 = {
_7 = 7944751156808350571_i64 as i32;
(*_3) = 4077119351_u32;
(*_3) = 3524192998_u32;
(*_3) = 15126257023424944385_u64 as u32;
_5 = core::ptr::addr_of_mut!((*_5));
(*_5) = (-1460652699_i32) & (-1502626117_i32);
_9 = _1 | _1;
(*_5) = 1205248577_i32 * (-97850377_i32);
(*_3) = 2847121745_u32;
(*_3) = false as u32;
(*_5) = (-1703170294_i32);
(*_5) = 1139047500_i32;
_1 = _9 << _9;
(*_5) = _10 as i32;
(*_3) = 10588_i16 as u32;
_8 = _9 ^ _9;
_13 = '\u{6482b}';
_11 = 255973421339533700983655969681044534638_u128 & 181731325009725900945423849878320420551_u128;
_12 = Adt23::Variant0 { fld0: 13628826547662321216_u64,fld1: (-23646_i16),fld2: _10 };
(*_3) = RET.fld0 as u32;
_5 = core::ptr::addr_of_mut!((*_5));
(*_5) = (-628191959_i32) - 1330937363_i32;
_5 = core::ptr::addr_of_mut!((*_5));
Call(place!(Field::<u8>(Variant(_12, 0), 2)) = core::intrinsics::transmute(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
_27 = _1 + _1;
(*_4).fld2 = 4_usize as f64;
(*_4).fld1 = _28.3;
(*_4).fld1 = _28.3 & _28.3;
(*_4).fld1 = _28.3 - _28.3;
(*_3) = _28.3 * _28.3;
_28.1.3.fld2 = (_9, _28.1.1, Field::<i16>(Variant(_12, 0), 1), Move(_19));
(*_4).fld2 = 1_usize as f64;
(*_4).fld0 = 34164_u16 | 41602_u16;
(*_21) = _28.1.3.fld0.fld3 >> _28.3;
_23.0 = [_28.1.2,_28.1.2,Field::<u64>(Variant(_28.1.3.fld4, 3), 1),Field::<u64>(Variant(_28.1.3.fld4, 3), 1)];
_33 = [(*_3)];
(*_21) = _28.1.3.fld0.fld3;
_28.1.3.fld0.fld1 = core::ptr::addr_of_mut!(RET);
(*_4).fld2 = _27 as f64;
(*_3) = _28.3;
(*_4).fld0 = !8511_u16;
(*_21) = _28.1.3.fld0.fld3 + _28.1.3.fld0.fld3;
_29 = [(*_4).fld0,(*_4).fld0,(*_4).fld0];
_6 = (*_21) as isize;
Goto(bb12)
}
bb12 = {
Call(_39 = dump_var(10_usize, 10_usize, Move(_10), 9_usize, Move(_9), 24_usize, Move(_24), 8_usize, Move(_8)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_39 = dump_var(10_usize, 33_usize, Move(_33), 11_usize, Move(_11), 40_usize, _40, 40_usize, _40), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: u32,mut _2: u128,mut _3: *mut Adt17,mut _4: u32,mut _5: isize,mut _6: *const Adt36,mut _7: isize,mut _8: u128,mut _9: *mut isize) -> Adt24 {
mir! {
type RET = Adt24;
let _10: Adt25;
let _11: f64;
let _12: f64;
let _13: *const (u32, *mut i32, isize);
let _14: f64;
let _15: (i32,);
let _16: isize;
let _17: f64;
let _18: *const [i8; 7];
let _19: isize;
let _20: &'static mut u64;
let _21: &'static Adt36;
let _22: (u32, bool, u64, Adt36);
let _23: (Adt17, u64, &'static u32, u64);
let _24: &'static *const [u16; 3];
let _25: char;
let _26: f64;
let _27: (isize, bool, i16, *mut i32);
let _28: [u64; 4];
let _29: f64;
let _30: &'static mut &'static *mut bool;
let _31: (Adt17, u64, &'static u32, u64);
let _32: Adt17;
let _33: ();
let _34: ();
{
_10.fld2 = 14717408076646448134_u64 | 4524237214497205463_u64;
_1 = _4 ^ _4;
_10 = Adt25 { fld0: 0_usize,fld1: Move(_3),fld2: 14523652773058992625_u64,fld3: _8,fld4: (-26211_i16) };
_7 = 52_u8 as isize;
_10.fld2 = 5138919327844115789_u64 + 6584563953658864163_u64;
_4 = !_1;
_12 = _4 as f64;
_10.fld0 = 0_usize & 0_usize;
_2 = _8;
_10.fld4 = -6832_i16;
_10.fld4 = !(-14355_i16);
_1 = _4;
_5 = -_7;
_8 = _2 << _10.fld2;
_7 = _5;
_10.fld2 = 1799531132765478167_u64 | 14171151896595266689_u64;
_8 = _10.fld3 & _10.fld3;
_10.fld3 = !_8;
Call(_3 = fn12(Move(_10.fld1), Move(_6), Move(_9), _10.fld0, _10.fld4, _7, _1, _10.fld0, _2, _10.fld4, _10.fld4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = Adt24::Variant3 { fld0: 97_u8,fld1: _10.fld2 };
place!(Field::<u8>(Variant(RET, 3), 0)) = 99_u8;
_7 = _5 | _5;
_10.fld0 = 1_usize & 4061868447498785739_usize;
_9 = core::ptr::addr_of_mut!(_5);
(*_9) = false as isize;
_1 = !_4;
(*_9) = _7;
_4 = _1 ^ _1;
(*_9) = _7;
_7 = (*_9) & (*_9);
Call((*_9) = fn13(), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_9) = -_7;
(*_9) = _7 - _7;
place!(Field::<u8>(Variant(RET, 3), 0)) = 149_u8 + 100_u8;
_14 = _12;
(*_9) = !_7;
(*_9) = _7 | _7;
_11 = _14 * _14;
_10.fld3 = _4 as u128;
Goto(bb3)
}
bb3 = {
_5 = _7 + _7;
_4 = !_1;
_1 = _4 & _4;
(*_9) = _7 + _7;
_16 = (*_9) - (*_9);
_10.fld4 = _8 as i16;
_10.fld1 = Move(_3);
_11 = _10.fld2 as f64;
_8 = _10.fld3;
_1 = _4;
place!(Field::<u8>(Variant(RET, 3), 0)) = 155_u8 >> (*_9);
(*_9) = _16;
_1 = _4 & _4;
_15 = (1831825270_i32,);
_4 = 5695860323532947031_i64 as u32;
(*_9) = _1 as isize;
(*_9) = -_16;
_10.fld4 = 31440_i16;
_7 = -(*_9);
(*_9) = _7 & _16;
(*_9) = !_7;
_8 = _10.fld3;
Goto(bb4)
}
bb4 = {
_15 = ((-182237405_i32),);
_16 = Field::<u8>(Variant(RET, 3), 0) as isize;
_10.fld0 = 18117201906651841544_usize;
_17 = _12;
(*_9) = !_7;
match _15.0 {
340282366920938463463374607431585974051 => bb5,
_ => bb3
}
}
bb5 = {
(*_9) = false as isize;
_10.fld4 = -(-11959_i16);
_10.fld2 = !Field::<u64>(Variant(RET, 3), 1);
_17 = _12 * _11;
_10.fld4 = 7117_i16 + (-25318_i16);
_3 = Move(_10.fld1);
_10.fld3 = _8 << _16;
_15 = (1419739120_i32,);
(*_9) = _7;
(*_9) = -_7;
(*_9) = true as isize;
_10.fld1 = Move(_3);
(*_9) = _12 as isize;
(*_9) = _7 << Field::<u8>(Variant(RET, 3), 0);
_15.0 = !(-1546326055_i32);
Call((*_9) = core::intrinsics::bswap(_7), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_10.fld3 = !_8;
(*_9) = !_16;
_15.0 = !1399216128_i32;
(*_9) = _7 >> _16;
(*_9) = _16;
_11 = 787_u16 as f64;
_10.fld4 = '\u{72185}' as i16;
_7 = (*_9);
_15.0 = 294552078_i32 | 762564177_i32;
_20 = &mut _10.fld2;
(*_9) = _16;
(*_20) = !Field::<u64>(Variant(RET, 3), 1);
Goto(bb7)
}
bb7 = {
(*_20) = Field::<u64>(Variant(RET, 3), 1);
_15.0 = (-245454332_i32) ^ 1736992670_i32;
_14 = Field::<u8>(Variant(RET, 3), 0) as f64;
(*_20) = Field::<u64>(Variant(RET, 3), 1) | Field::<u64>(Variant(RET, 3), 1);
(*_20) = Field::<u64>(Variant(RET, 3), 1);
Goto(bb8)
}
bb8 = {
place!(Field::<u64>(Variant(RET, 3), 1)) = (*_20);
(*_20) = (*_9) as u64;
place!(Field::<u64>(Variant(RET, 3), 1)) = (-65_i8) as u64;
(*_20) = Field::<u64>(Variant(RET, 3), 1);
_14 = _17 * _12;
_22.3.fld2.1 = false | false;
(*_9) = -_16;
(*_20) = !Field::<u64>(Variant(RET, 3), 1);
(*_9) = !_16;
_20 = &mut place!(Field::<u64>(Variant(RET, 3), 1));
_19 = (*_9);
(*_9) = _7 * _7;
_22.3.fld0.fld2 = (*_20);
_14 = -_11;
(*_9) = _19;
_22.3.fld2.3 = core::ptr::addr_of_mut!(_15.0);
_12 = _17 - _17;
_22.2 = (*_20);
(*_9) = !_7;
_1 = _2 as u32;
_2 = !_8;
(*_20) = _22.2 | _22.2;
_7 = !(*_9);
(*_9) = !_16;
(*_9) = _16;
_19 = 0_usize as isize;
(*_9) = _7;
_22.0 = _4 & _4;
(*_20) = _22.2 & _22.3.fld0.fld2;
Goto(bb9)
}
bb9 = {
(*_20) = !_22.2;
_23.2 = &_22.0;
_17 = -_12;
Goto(bb10)
}
bb10 = {
_22.3.fld2.2 = !(-6288_i16);
(*_9) = _16 + _7;
Call((*_9) = core::intrinsics::bswap(_7), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_1 = _22.0 * _22.0;
_23.1 = (*_20) + (*_20);
_22.3.fld2.0 = (*_9) + (*_9);
_15 = (1056781910_i32,);
(*_9) = _15.0 as isize;
(*_9) = (-113_i8) as isize;
_19 = _7;
(*_20) = _23.1 - _23.1;
(*_20) = !_22.3.fld0.fld2;
_6 = core::ptr::addr_of!(_22.3);
(*_6).fld0.fld3 = 4224321763024870950_i64 as u128;
_27.0 = (*_6).fld2.0 ^ (*_6).fld2.0;
(*_6).fld0.fld3 = _4 as u128;
(*_6).fld0.fld2 = !(*_20);
(*_6).fld2.2 = 27687_i16 - (-26753_i16);
(*_6).fld4 = Adt24::Variant3 { fld0: 194_u8,fld1: (*_6).fld0.fld2 };
Call((*_6).fld0.fld0 = core::intrinsics::bswap(9311937108182100281_usize), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
(*_6).fld2.2 = 14643_i16;
(*_6).fld0.fld1 = core::ptr::addr_of_mut!(_23.0);
(*_9) = -(*_6).fld2.0;
place!(Field::<u64>(Variant((*_6).fld4, 3), 1)) = (*_20);
place!(Field::<u8>(Variant((*_6).fld4, 3), 0)) = 35_u8;
(*_6).fld2.1 = false ^ false;
(*_20) = Field::<u64>(Variant((*_6).fld4, 3), 1);
(*_6).fld3 = core::ptr::addr_of!(_1);
(*_9) = !(*_6).fld2.0;
(*_20) = !Field::<u64>(Variant((*_6).fld4, 3), 1);
(*_6).fld0.fld2 = Field::<u64>(Variant((*_6).fld4, 3), 1) << (*_9);
_22.3.fld3 = core::ptr::addr_of!(_1);
_23.3 = (*_6).fld0.fld2 | (*_6).fld0.fld2;
(*_6).fld2.2 = (-28123_i16) << (*_9);
(*_6).fld0.fld3 = (*_6).fld2.1 as u128;
(*_6).fld0.fld4 = (*_6).fld2.2 + (*_6).fld2.2;
(*_6).fld1 = '\u{a28fc}';
(*_6).fld0.fld0 = (*_9) as usize;
(*_6).fld2.1 = !false;
match Field::<u8>(Variant((*_6).fld4, 3), 0) {
0 => bb5,
1 => bb6,
2 => bb3,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
35 => bb18,
_ => bb17
}
}
bb13 = {
_5 = _7 + _7;
_4 = !_1;
_1 = _4 & _4;
(*_9) = _7 + _7;
_16 = (*_9) - (*_9);
_10.fld4 = _8 as i16;
_10.fld1 = Move(_3);
_11 = _10.fld2 as f64;
_8 = _10.fld3;
_1 = _4;
place!(Field::<u8>(Variant(RET, 3), 0)) = 155_u8 >> (*_9);
(*_9) = _16;
_1 = _4 & _4;
_15 = (1831825270_i32,);
_4 = 5695860323532947031_i64 as u32;
(*_9) = _1 as isize;
(*_9) = -_16;
_10.fld4 = 31440_i16;
_7 = -(*_9);
(*_9) = _7 & _16;
(*_9) = !_7;
_8 = _10.fld3;
Goto(bb4)
}
bb14 = {
_22.3.fld2.2 = !(-6288_i16);
(*_9) = _16 + _7;
Call((*_9) = core::intrinsics::bswap(_7), ReturnTo(bb11), UnwindUnreachable())
}
bb15 = {
(*_20) = !_22.2;
_23.2 = &_22.0;
_17 = -_12;
Goto(bb10)
}
bb16 = {
place!(Field::<u64>(Variant(RET, 3), 1)) = (*_20);
(*_20) = (*_9) as u64;
place!(Field::<u64>(Variant(RET, 3), 1)) = (-65_i8) as u64;
(*_20) = Field::<u64>(Variant(RET, 3), 1);
_14 = _17 * _12;
_22.3.fld2.1 = false | false;
(*_9) = -_16;
(*_20) = !Field::<u64>(Variant(RET, 3), 1);
(*_9) = !_16;
_20 = &mut place!(Field::<u64>(Variant(RET, 3), 1));
_19 = (*_9);
(*_9) = _7 * _7;
_22.3.fld0.fld2 = (*_20);
_14 = -_11;
(*_9) = _19;
_22.3.fld2.3 = core::ptr::addr_of_mut!(_15.0);
_12 = _17 - _17;
_22.2 = (*_20);
(*_9) = !_7;
_1 = _2 as u32;
_2 = !_8;
(*_20) = _22.2 | _22.2;
_7 = !(*_9);
(*_9) = !_16;
(*_9) = _16;
_19 = 0_usize as isize;
(*_9) = _7;
_22.0 = _4 & _4;
(*_20) = _22.2 & _22.3.fld0.fld2;
Goto(bb9)
}
bb17 = {
_15 = ((-182237405_i32),);
_16 = Field::<u8>(Variant(RET, 3), 0) as isize;
_10.fld0 = 18117201906651841544_usize;
_17 = _12;
(*_9) = !_7;
match _15.0 {
340282366920938463463374607431585974051 => bb5,
_ => bb3
}
}
bb18 = {
(*_6).fld0.fld3 = _8;
place!(Field::<u8>(Variant((*_6).fld4, 3), 0)) = 190_u8 ^ 8_u8;
_8 = Field::<u8>(Variant((*_6).fld4, 3), 0) as u128;
place!(Field::<u64>(Variant((*_6).fld4, 3), 1)) = !(*_6).fld0.fld2;
match _15.0 {
0 => bb19,
1 => bb20,
2 => bb21,
3 => bb22,
4 => bb23,
5 => bb24,
1056781910 => bb26,
_ => bb25
}
}
bb19 = {
_15 = ((-182237405_i32),);
_16 = Field::<u8>(Variant(RET, 3), 0) as isize;
_10.fld0 = 18117201906651841544_usize;
_17 = _12;
(*_9) = !_7;
match _15.0 {
340282366920938463463374607431585974051 => bb5,
_ => bb3
}
}
bb20 = {
place!(Field::<u64>(Variant(RET, 3), 1)) = (*_20);
(*_20) = (*_9) as u64;
place!(Field::<u64>(Variant(RET, 3), 1)) = (-65_i8) as u64;
(*_20) = Field::<u64>(Variant(RET, 3), 1);
_14 = _17 * _12;
_22.3.fld2.1 = false | false;
(*_9) = -_16;
(*_20) = !Field::<u64>(Variant(RET, 3), 1);
(*_9) = !_16;
_20 = &mut place!(Field::<u64>(Variant(RET, 3), 1));
_19 = (*_9);
(*_9) = _7 * _7;
_22.3.fld0.fld2 = (*_20);
_14 = -_11;
(*_9) = _19;
_22.3.fld2.3 = core::ptr::addr_of_mut!(_15.0);
_12 = _17 - _17;
_22.2 = (*_20);
(*_9) = !_7;
_1 = _2 as u32;
_2 = !_8;
(*_20) = _22.2 | _22.2;
_7 = !(*_9);
(*_9) = !_16;
(*_9) = _16;
_19 = 0_usize as isize;
(*_9) = _7;
_22.0 = _4 & _4;
(*_20) = _22.2 & _22.3.fld0.fld2;
Goto(bb9)
}
bb21 = {
_22.3.fld2.2 = !(-6288_i16);
(*_9) = _16 + _7;
Call((*_9) = core::intrinsics::bswap(_7), ReturnTo(bb11), UnwindUnreachable())
}
bb22 = {
RET = Adt24::Variant3 { fld0: 97_u8,fld1: _10.fld2 };
place!(Field::<u8>(Variant(RET, 3), 0)) = 99_u8;
_7 = _5 | _5;
_10.fld0 = 1_usize & 4061868447498785739_usize;
_9 = core::ptr::addr_of_mut!(_5);
(*_9) = false as isize;
_1 = !_4;
(*_9) = _7;
_4 = _1 ^ _1;
(*_9) = _7;
_7 = (*_9) & (*_9);
Call((*_9) = fn13(), ReturnTo(bb2), UnwindUnreachable())
}
bb23 = {
_5 = _7 + _7;
_4 = !_1;
_1 = _4 & _4;
(*_9) = _7 + _7;
_16 = (*_9) - (*_9);
_10.fld4 = _8 as i16;
_10.fld1 = Move(_3);
_11 = _10.fld2 as f64;
_8 = _10.fld3;
_1 = _4;
place!(Field::<u8>(Variant(RET, 3), 0)) = 155_u8 >> (*_9);
(*_9) = _16;
_1 = _4 & _4;
_15 = (1831825270_i32,);
_4 = 5695860323532947031_i64 as u32;
(*_9) = _1 as isize;
(*_9) = -_16;
_10.fld4 = 31440_i16;
_7 = -(*_9);
(*_9) = _7 & _16;
(*_9) = !_7;
_8 = _10.fld3;
Goto(bb4)
}
bb24 = {
(*_20) = !_22.2;
_23.2 = &_22.0;
_17 = -_12;
Goto(bb10)
}
bb25 = {
_5 = _7 + _7;
_4 = !_1;
_1 = _4 & _4;
(*_9) = _7 + _7;
_16 = (*_9) - (*_9);
_10.fld4 = _8 as i16;
_10.fld1 = Move(_3);
_11 = _10.fld2 as f64;
_8 = _10.fld3;
_1 = _4;
place!(Field::<u8>(Variant(RET, 3), 0)) = 155_u8 >> (*_9);
(*_9) = _16;
_1 = _4 & _4;
_15 = (1831825270_i32,);
_4 = 5695860323532947031_i64 as u32;
(*_9) = _1 as isize;
(*_9) = -_16;
_10.fld4 = 31440_i16;
_7 = -(*_9);
(*_9) = _7 & _16;
(*_9) = !_7;
_8 = _10.fld3;
Goto(bb4)
}
bb26 = {
(*_6).fld3 = core::ptr::addr_of!(_4);
(*_6).fld1 = '\u{d86f2}';
(*_6).fld1 = '\u{108dc8}';
place!(Field::<u8>(Variant((*_6).fld4, 3), 0)) = 82_u8 & 142_u8;
(*_6).fld1 = '\u{93b35}';
_23.0.fld2 = (*_6).fld0.fld4 as f64;
(*_6).fld2.2 = _23.0.fld2 as i16;
_11 = -_23.0.fld2;
place!(Field::<u64>(Variant((*_6).fld4, 3), 1)) = (*_6).fld0.fld2;
(*_20) = (*_6).fld0.fld2;
Goto(bb27)
}
bb27 = {
Call(_33 = dump_var(11_usize, 8_usize, Move(_8), 2_usize, Move(_2), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: *mut Adt17,mut _2: *const Adt36,mut _3: *mut isize,mut _4: usize,mut _5: i16,mut _6: isize,mut _7: u32,mut _8: usize,mut _9: u128,mut _10: i16,mut _11: i16) -> *mut Adt17 {
mir! {
type RET = *mut Adt17;
let _12: [char; 8];
let _13: u128;
let _14: isize;
let _15: bool;
let _16: u128;
let _17: *const [i8; 8];
let _18: u64;
let _19: Adt68;
let _20: f32;
let _21: u128;
let _22: bool;
let _23: bool;
let _24: char;
let _25: *const f64;
let _26: i32;
let _27: Adt36;
let _28: *mut u128;
let _29: f64;
let _30: *const u32;
let _31: isize;
let _32: &'static mut u16;
let _33: (&'static mut u32, [i8; 8], u32);
let _34: ();
let _35: ();
{
_3 = core::ptr::addr_of_mut!(_6);
_8 = _4;
_4 = _8;
(*_3) = !(-9223372036854775808_isize);
_9 = !38719951129361934514644066381173298737_u128;
(*_3) = 9223372036854775807_isize * 9223372036854775807_isize;
Goto(bb1)
}
bb1 = {
(*_3) = 43_isize;
(*_3) = 9223372036854775807_isize + (-9223372036854775808_isize);
(*_3) = 9223372036854775807_isize;
Goto(bb2)
}
bb2 = {
_7 = !2949829718_u32;
_5 = _10 >> (*_3);
(*_3) = (-9223372036854775808_isize);
(*_3) = !(-12_isize);
_8 = _4;
(*_3) = (-9223372036854775808_isize);
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = 37_i8 as isize;
(*_3) = (-111_isize) & 9223372036854775807_isize;
_4 = !_8;
(*_3) = !(-9223372036854775808_isize);
_10 = !_5;
_8 = _4 + _4;
_3 = core::ptr::addr_of_mut!((*_3));
_4 = _9 as usize;
(*_3) = !(-9223372036854775808_isize);
(*_3) = (-9223372036854775808_isize) + 9223372036854775807_isize;
(*_3) = (-9223372036854775808_isize) >> _8;
_12 = ['\u{106227}','\u{fd216}','\u{54a75}','\u{6566e}','\u{3f92f}','\u{d2a21}','\u{33fe0}','\u{d45bf}'];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = !(-9223372036854775808_isize);
(*_3) = _7 as isize;
(*_3) = (-9223372036854775808_isize) * (-78_isize);
(*_3) = 14020459684696442984_u64 as isize;
_8 = !_4;
(*_3) = (-109_isize);
_3 = core::ptr::addr_of_mut!((*_3));
Goto(bb3)
}
bb3 = {
(*_3) = !(-9223372036854775808_isize);
(*_3) = !(-9223372036854775808_isize);
(*_3) = 9223372036854775807_isize << _10;
(*_3) = 9223372036854775807_isize;
_14 = (*_3) ^ (*_3);
_7 = !827740913_u32;
_18 = 17254260081956578066_u64 + 11508825002461035420_u64;
(*_3) = _14 ^ _14;
_3 = core::ptr::addr_of_mut!((*_3));
_13 = 175_u8 as u128;
_18 = 15463640978894853395_u64;
_6 = !_14;
_21 = _9 ^ _9;
(*_3) = _14 << _8;
(*_3) = !_14;
(*_3) = _14 << _18;
(*_3) = -_14;
_3 = core::ptr::addr_of_mut!((*_3));
_22 = true;
(*_3) = _14 ^ _14;
match _18 {
15463640978894853395 => bb4,
_ => bb2
}
}
bb4 = {
_18 = !9090421639600032324_u64;
_15 = (*_3) > (*_3);
_5 = !_10;
_6 = _14;
(*_3) = _14 + _14;
(*_3) = 109_i8 as isize;
_15 = _14 > (*_3);
_15 = (*_3) == (*_3);
_8 = _4 | _4;
_16 = _21;
(*_3) = _14 - _14;
_13 = !_16;
_9 = !_21;
_18 = 4355774284582602412_u64 & 16295147405038162805_u64;
(*_3) = _14 + _14;
_18 = 35_u8 as u64;
(*_3) = _14 * _14;
(*_3) = _15 as isize;
_26 = _5 as i32;
(*_3) = _14 >> _9;
_24 = '\u{f7f72}';
_13 = !_21;
Call((*_3) = core::intrinsics::bswap(_14), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
(*_3) = _14 - _14;
_12 = [_24,_24,_24,_24,_24,_24,_24,_24];
(*_3) = !_14;
_23 = !_15;
(*_3) = 54466_u16 as isize;
(*_3) = _14;
_27.fld2.3 = core::ptr::addr_of_mut!(_26);
_20 = _21 as f32;
(*_3) = !_14;
_22 = _23;
(*_3) = 1365123587272588909_i64 as isize;
(*_3) = _14;
_27.fld2.0 = (*_3);
(*_3) = _27.fld2.0;
_27.fld0.fld1 = Move(_1);
_28 = core::ptr::addr_of_mut!(_9);
_13 = (*_28);
(*_28) = _26 as u128;
(*_3) = _27.fld2.0 + _27.fld2.0;
(*_28) = !_13;
(*_28) = _13 ^ _21;
(*_3) = _14 - _14;
(*_28) = _21;
(*_3) = _14 * _14;
_6 = _14 * _14;
Goto(bb6)
}
bb6 = {
_27.fld2.2 = (-5166395289301151582_i64) as i16;
_29 = _20 as f64;
(*_3) = _27.fld2.0 | _27.fld2.0;
(*_3) = !_27.fld2.0;
(*_28) = !_21;
RET = Move(_27.fld0.fld1);
(*_3) = _27.fld2.0 ^ _14;
_26 = (-1138638123_i32);
_9 = 45068_u16 as u128;
(*_28) = _13 | _13;
(*_28) = !_13;
_8 = _4;
_4 = (*_28) as usize;
_26 = (-212054524_i32) + 510197653_i32;
(*_3) = _7 as isize;
_31 = !(*_3);
_12 = [_24,_24,_24,_24,_24,_24,_24,_24];
(*_28) = _16 | _13;
(*_28) = _21 + _21;
_27.fld0.fld0 = !_4;
(*_28) = _13 >> _11;
_33.1 = [28_i8,(-25_i8),(-123_i8),(-22_i8),(-76_i8),25_i8,(-79_i8),34_i8];
(*_28) = _16 ^ _13;
(*_28) = !_16;
_4 = _8 + _8;
Goto(bb7)
}
bb7 = {
Call(_34 = dump_var(12_usize, 24_usize, Move(_24), 6_usize, Move(_6), 21_usize, Move(_21), 5_usize, Move(_5)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_34 = dump_var(12_usize, 22_usize, Move(_22), 9_usize, Move(_9), 15_usize, Move(_15), 14_usize, Move(_14)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_34 = dump_var(12_usize, 23_usize, Move(_23), 7_usize, Move(_7), 35_usize, _35, 35_usize, _35), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13() -> isize {
mir! {
type RET = isize;
let _1: &'static mut bool;
let _2: *const Adt36;
let _3: &'static mut u64;
let _4: Adt68;
let _5: &'static *const [i8; 8];
let _6: (u32, bool, u64, Adt36);
let _7: usize;
let _8: &'static Adt25;
let _9: [char; 8];
let _10: u8;
let _11: f64;
let _12: &'static *mut bool;
let _13: u16;
let _14: u128;
let _15: usize;
let _16: (i32,);
let _17: u8;
let _18: Adt17;
let _19: isize;
let _20: *const Adt36;
let _21: (isize, bool, i16, *mut i32);
let _22: isize;
let _23: isize;
let _24: (Adt17, u64, &'static u32, u64);
let _25: *const Adt36;
let _26: char;
let _27: *const (u32, *mut i32, isize);
let _28: *mut f32;
let _29: bool;
let _30: i32;
let _31: isize;
let _32: usize;
let _33: bool;
let _34: [char; 8];
let _35: usize;
let _36: u128;
let _37: [i8; 8];
let _38: *mut f32;
let _39: usize;
let _40: bool;
let _41: f64;
let _42: *const (u32, *mut i32, isize);
let _43: &'static mut &'static *mut bool;
let _44: usize;
let _45: *const (u32, *mut i32, isize);
let _46: (Adt17, u64, &'static u32, u64);
let _47: &'static mut &'static *mut bool;
let _48: &'static mut &'static *mut bool;
let _49: *const *mut bool;
let _50: i8;
let _51: isize;
let _52: char;
let _53: u32;
let _54: *mut &'static mut &'static *mut bool;
let _55: [isize; 1];
let _56: u32;
let _57: [char; 8];
let _58: [i8; 8];
let _59: isize;
let _60: &'static mut u32;
let _61: i64;
let _62: *mut bool;
let _63: i16;
let _64: ();
let _65: ();
{
RET = 9223372036854775807_isize >> 6011628852623153743_u64;
RET = '\u{813ca}' as isize;
Goto(bb1)
}
bb1 = {
RET = 9223372036854775807_isize << (-79_i8);
RET = (-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
RET = 109_isize - (-9223372036854775808_isize);
RET = 1951011101_i32 as isize;
RET = (-29_isize);
RET = 70_isize >> 169939730717559623023231200515541186061_u128;
RET = (-32_isize) - 9223372036854775807_isize;
RET = 9223372036854775807_isize;
RET = 112_isize;
RET = 99_u8 as isize;
RET = 9223372036854775807_isize;
RET = (-9223372036854775808_isize) | (-9223372036854775808_isize);
RET = 123_isize >> 59315_u16;
RET = (-84_isize);
RET = (-105551214_i32) as isize;
RET = (-9223372036854775808_isize);
RET = (-9223372036854775808_isize);
RET = 12648275579410855838_u64 as isize;
RET = 4634491721030141027_i64 as isize;
RET = 75263736045346499680769005182672888264_i128 as isize;
RET = 9223372036854775807_isize >> 106_isize;
RET = (-109_isize) * (-73_isize);
RET = -9223372036854775807_isize;
RET = 10_isize;
RET = 117_isize << 50_u8;
Goto(bb2)
}
bb2 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb3 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb5 = {
_10 = Field::<u8>(Variant((*_2).fld4, 3), 0);
(*_2).fld2.1 = true;
(*_2).fld2.1 = !false;
match Field::<u8>(Variant((*_2).fld4, 3), 0) {
0 => bb4,
1 => bb2,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
231 => bb12,
_ => bb11
}
}
bb6 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb7 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb9 = {
RET = 9223372036854775807_isize << (-79_i8);
RET = (-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
RET = 109_isize - (-9223372036854775808_isize);
RET = 1951011101_i32 as isize;
RET = (-29_isize);
RET = 70_isize >> 169939730717559623023231200515541186061_u128;
RET = (-32_isize) - 9223372036854775807_isize;
RET = 9223372036854775807_isize;
RET = 112_isize;
RET = 99_u8 as isize;
RET = 9223372036854775807_isize;
RET = (-9223372036854775808_isize) | (-9223372036854775808_isize);
RET = 123_isize >> 59315_u16;
RET = (-84_isize);
RET = (-105551214_i32) as isize;
RET = (-9223372036854775808_isize);
RET = (-9223372036854775808_isize);
RET = 12648275579410855838_u64 as isize;
RET = 4634491721030141027_i64 as isize;
RET = 75263736045346499680769005182672888264_i128 as isize;
RET = 9223372036854775807_isize >> 106_isize;
RET = (-109_isize) * (-73_isize);
RET = -9223372036854775807_isize;
RET = 10_isize;
RET = 117_isize << 50_u8;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld2 = 41953_u16 as u64;
(*_2).fld0.fld4 = (*_2).fld2.2;
(*_2).fld2.1 = (*_2).fld0.fld2 != Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 + _10;
(*_2).fld0.fld4 = (*_2).fld2.2 ^ (*_2).fld2.2;
(*_2).fld1 = '\u{fab18}';
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1) ^ Field::<u64>(Variant(_6.3.fld4, 3), 1);
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = 32015_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld4 > (*_2).fld2.2;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !_10;
(*_2).fld2.0 = -RET;
(*_2).fld2.1 = !true;
(*_2).fld0.fld3 = 218404005286846906308955967370034116100_u128;
(*_2).fld1 = '\u{dbaa8}';
(*_2).fld0.fld3 = (*_2).fld1 as u128;
_6.0 = 650790938_u32;
_6.3.fld0.fld0 = (*_2).fld0.fld3 as usize;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1) << (*_2).fld0.fld4;
Goto(bb13)
}
bb13 = {
(*_2).fld0.fld0 = 381804458222656944_usize - 3224060899125718477_usize;
(*_2).fld2.0 = RET + RET;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 & (*_2).fld0.fld2;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld2.1 = !true;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !_10;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_i8 as u8;
(*_2).fld0.fld3 = 274215843749291235956266326496748758741_u128 ^ 244956280643715523333916849070108411253_u128;
(*_2).fld4 = Adt24::Variant3 { fld0: _10,fld1: (*_2).fld0.fld2 };
(*_2).fld0.fld2 = Field::<u64>(Variant(_6.3.fld4, 3), 1) ^ Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2;
match Field::<u8>(Variant(_6.3.fld4, 3), 0) {
0 => bb14,
231 => bb16,
_ => bb15
}
}
bb14 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb15 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb16 = {
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 & (*_2).fld0.fld2;
(*_2).fld2.1 = true | true;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld0 = 7_usize + 2_usize;
(*_2).fld2.0 = (*_2).fld0.fld4 as isize;
_6.3.fld2.2 = _6.3.fld0.fld4 & (*_2).fld0.fld4;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = _6.3.fld0.fld2;
(*_2).fld0.fld4 = -(*_2).fld2.2;
(*_2).fld0.fld2 = !Field::<u64>(Variant((*_2).fld4, 3), 1);
_14 = (*_2).fld0.fld3 - (*_2).fld0.fld3;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld4 = (*_2).fld2.2 * (*_2).fld2.2;
(*_2).fld0.fld0 = (-4830542162982303868_i64) as usize;
(*_2).fld2.1 = false ^ false;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
(*_2).fld0.fld4 = (*_2).fld2.2 * (*_2).fld2.2;
(*_2).fld2.2 = (*_2).fld0.fld4 >> Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld2.2 = !(*_2).fld0.fld4;
(*_2).fld0.fld4 = (*_2).fld2.2 | (*_2).fld2.2;
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
match _10 {
231 => bb18,
_ => bb17
}
}
bb17 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb18 = {
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = (-76_i8) as u8;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
(*_2).fld0.fld0 = 4_usize - 9206530939512094393_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: _10,fld1: (*_2).fld0.fld2 };
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
(*_2).fld0.fld0 = (*_2).fld2.1 as usize;
_6.1 = !(*_2).fld2.1;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 - (*_2).fld0.fld2;
(*_2).fld0.fld3 = _14;
(*_2).fld0.fld3 = _14;
_18.fld0 = !37822_u16;
(*_2).fld0.fld2 = !Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld4 = (*_2).fld2.2 ^ (*_2).fld2.2;
(*_2).fld2.1 = _6.1 | _6.1;
_22 = !(*_2).fld2.0;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << Field::<u64>(Variant((*_2).fld4, 3), 1);
_6.1 = !(*_2).fld2.1;
(*_2).fld2.2 = (*_2).fld0.fld4 | (*_2).fld0.fld4;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (-7454104569361042398_i64) as u64;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << (*_2).fld0.fld2;
_6.3.fld2.0 = _22 << (*_2).fld2.2;
_6.3.fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1) >> (*_2).fld2.0;
(*_2).fld1 = '\u{1d458}';
match _6.0 {
0 => bb17,
1 => bb2,
2 => bb7,
3 => bb10,
4 => bb19,
650790938 => bb21,
_ => bb20
}
}
bb19 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb20 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb21 = {
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 ^ (*_2).fld0.fld2;
(*_2).fld0.fld3 = _14;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
_2 = core::ptr::addr_of!((*_2));
(*_2).fld4 = Adt24::Variant3 { fld0: _10,fld1: (*_2).fld0.fld2 };
(*_2).fld3 = core::ptr::addr_of!(_24.0.fld1);
(*_2).fld1 = '\u{e4242}';
_13 = _18.fld0 + _18.fld0;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = (*_2).fld1 as u8;
(*_2).fld2.0 = _22;
match _6.0 {
0 => bb18,
1 => bb7,
2 => bb8,
3 => bb20,
4 => bb22,
650790938 => bb24,
_ => bb23
}
}
bb22 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb23 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb24 = {
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld1 = '\u{bfcc5}';
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
_20 = core::ptr::addr_of!((*_2));
(*_2).fld0.fld2 = Field::<u64>(Variant((*_20).fld4, 3), 1) << (*_20).fld2.2;
_21.2 = (*_20).fld2.2;
(*_2).fld2.1 = _6.1 ^ _6.1;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_24.0);
place!(Field::<u64>(Variant((*_20).fld4, 3), 1)) = (*_2).fld0.fld2;
(*_20).fld2.2 = (*_20).fld0.fld4;
match _6.0 {
0 => bb3,
1 => bb25,
2 => bb26,
3 => bb27,
4 => bb28,
650790938 => bb30,
_ => bb29
}
}
bb25 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb26 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb27 = {
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = (-76_i8) as u8;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
(*_2).fld0.fld0 = 4_usize - 9206530939512094393_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: _10,fld1: (*_2).fld0.fld2 };
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
(*_2).fld0.fld0 = (*_2).fld2.1 as usize;
_6.1 = !(*_2).fld2.1;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 - (*_2).fld0.fld2;
(*_2).fld0.fld3 = _14;
(*_2).fld0.fld3 = _14;
_18.fld0 = !37822_u16;
(*_2).fld0.fld2 = !Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld4 = (*_2).fld2.2 ^ (*_2).fld2.2;
(*_2).fld2.1 = _6.1 | _6.1;
_22 = !(*_2).fld2.0;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << Field::<u64>(Variant((*_2).fld4, 3), 1);
_6.1 = !(*_2).fld2.1;
(*_2).fld2.2 = (*_2).fld0.fld4 | (*_2).fld0.fld4;
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (-7454104569361042398_i64) as u64;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << (*_2).fld0.fld2;
_6.3.fld2.0 = _22 << (*_2).fld2.2;
_6.3.fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1) >> (*_2).fld2.0;
(*_2).fld1 = '\u{1d458}';
match _6.0 {
0 => bb17,
1 => bb2,
2 => bb7,
3 => bb10,
4 => bb19,
650790938 => bb21,
_ => bb20
}
}
bb28 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb29 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb30 = {
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !_10;
place!(Field::<u64>(Variant((*_20).fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(_18);
(*_2).fld2.0 = !_22;
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_20).fld0.fld4 = (*_20).fld2.2;
(*_20).fld0.fld4 = (*_20).fld2.2 ^ _21.2;
(*_2).fld2.1 = (*_20).fld2.2 <= (*_20).fld2.2;
_24.0.fld2 = 56044413542857136542226680245604306476_i128 as f64;
(*_2).fld0.fld0 = 17705355506827589130_usize | 1_usize;
_23 = (*_2).fld2.0;
_19 = !_22;
(*_2).fld0.fld4 = (*_20).fld2.2;
place!(Field::<u64>(Variant((*_20).fld4, 3), 1)) = !_6.3.fld0.fld2;
(*_2).fld2.1 = !_6.1;
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_2).fld2.3 = core::ptr::addr_of_mut!(_30);
(*_2).fld3 = core::ptr::addr_of!(_24.0.fld1);
(*_2).fld0.fld0 = 0_usize;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
_18 = Adt17 { fld0: _13,fld1: _6.0,fld2: _24.0.fld2 };
_24.0.fld0 = _18.fld0;
Goto(bb31)
}
bb31 = {
(*_2).fld2.1 = _6.1 & _6.1;
(*_2).fld3 = core::ptr::addr_of!(_18.fld1);
(*_2).fld0.fld4 = !(*_20).fld2.2;
(*_20).fld0.fld3 = _14 - _14;
(*_20).fld0.fld3 = _14 * _14;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10;
(*_2).fld0.fld3 = _14 & _14;
(*_2).fld0.fld3 = _14;
_11 = _24.0.fld2 + _24.0.fld2;
Goto(bb32)
}
bb32 = {
_32 = (*_2).fld0.fld0 | (*_2).fld0.fld0;
(*_2).fld0.fld4 = (*_20).fld2.2 + _6.3.fld2.2;
_21.3 = core::ptr::addr_of_mut!(_30);
place!(Field::<u64>(Variant((*_20).fld4, 3), 1)) = _6.3.fld0.fld2;
(*_2).fld3 = core::ptr::addr_of!(_18.fld1);
(*_2).fld2.1 = (*_20).fld2.2 > (*_2).fld0.fld4;
match Field::<u8>(Variant((*_2).fld4, 3), 0) {
0 => bb33,
1 => bb34,
2 => bb35,
3 => bb36,
4 => bb37,
231 => bb39,
_ => bb38
}
}
bb33 = {
(*_2).fld2.1 = _6.1 & _6.1;
(*_2).fld3 = core::ptr::addr_of!(_18.fld1);
(*_2).fld0.fld4 = !(*_20).fld2.2;
(*_20).fld0.fld3 = _14 - _14;
(*_20).fld0.fld3 = _14 * _14;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10;
(*_2).fld0.fld3 = _14 & _14;
(*_2).fld0.fld3 = _14;
_11 = _24.0.fld2 + _24.0.fld2;
Goto(bb32)
}
bb34 = {
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = (*_2).fld0.fld2 & (*_2).fld0.fld2;
(*_2).fld2.1 = true | true;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = _10 << Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld0 = 7_usize + 2_usize;
(*_2).fld2.0 = (*_2).fld0.fld4 as isize;
_6.3.fld2.2 = _6.3.fld0.fld4 & (*_2).fld0.fld4;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = _6.3.fld0.fld2;
(*_2).fld0.fld4 = -(*_2).fld2.2;
(*_2).fld0.fld2 = !Field::<u64>(Variant((*_2).fld4, 3), 1);
_14 = (*_2).fld0.fld3 - (*_2).fld0.fld3;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld0.fld4 = (*_2).fld2.2 * (*_2).fld2.2;
(*_2).fld0.fld0 = (-4830542162982303868_i64) as usize;
(*_2).fld2.1 = false ^ false;
(*_2).fld3 = core::ptr::addr_of!(_6.0);
(*_2).fld0.fld4 = (*_2).fld2.2 * (*_2).fld2.2;
(*_2).fld2.2 = (*_2).fld0.fld4 >> Field::<u64>(Variant((*_2).fld4, 3), 1);
(*_2).fld2.2 = !(*_2).fld0.fld4;
(*_2).fld0.fld4 = (*_2).fld2.2 | (*_2).fld2.2;
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_2).fld2.3 = core::ptr::addr_of_mut!(_16.0);
match _10 {
231 => bb18,
_ => bb17
}
}
bb35 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb36 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb37 = {
(*_2).fld2.0 = RET * RET;
(*_2).fld1 = '\u{10a772}';
Goto(bb5)
}
bb38 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb39 = {
place!(Field::<u64>(Variant((*_20).fld4, 3), 1)) = (*_2).fld0.fld2 << (*_20).fld2.2;
_19 = (*_2).fld2.0 << (*_2).fld0.fld2;
(*_2).fld4 = Adt24::Variant0 { fld0: 774941131_i32,fld1: Move(_18) };
Goto(bb40)
}
bb40 = {
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = 1289301176_i32;
(*_2).fld2.1 = !_6.1;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant(_6.3.fld4, 0), 1)));
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _13,fld1: _6.0,fld2: _11 };
_6.3.fld0.fld0 = _32 << (*_2).fld0.fld4;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
(*_20).fld2.2 = !(*_2).fld0.fld4;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _24.0.fld0,fld1: _6.0,fld2: _24.0.fld2 };
_9 = [(*_20).fld1,(*_20).fld1,(*_2).fld1,(*_20).fld1,(*_2).fld1,(*_20).fld1,(*_20).fld1,(*_2).fld1];
(*_2).fld1 = '\u{f7863}';
(*_2).fld2.2 = (*_2).fld0.fld4 ^ (*_2).fld0.fld4;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld0.fld4 = !(*_2).fld2.2;
(*_2).fld2.2 = -_21.2;
(*_2).fld2.1 = (*_2).fld0.fld4 <= (*_2).fld0.fld4;
(*_2).fld0.fld3 = _14;
_33 = (*_2).fld2.2 >= (*_2).fld2.2;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = _24.0.fld0 - _13;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld2.1 = (*_2).fld0.fld2 <= (*_2).fld0.fld2;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = (-1314896245_i32) + 389351944_i32;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld2.1 = !_33;
match _6.0 {
0 => bb28,
1 => bb9,
650790938 => bb41,
_ => bb7
}
}
bb41 = {
(*_2).fld0.fld0 = _32;
(*_2).fld2.2 = (*_2).fld0.fld4 << (*_2).fld0.fld2;
(*_2).fld0.fld4 = -_21.2;
(*_2).fld0.fld2 = 12976326152382890534_u64;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld2.2 = -(*_2).fld0.fld4;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = 1498312619_i32 ^ (-1494601828_i32);
match Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1 {
0 => bb34,
1 => bb29,
2 => bb21,
3 => bb42,
4 => bb43,
650790938 => bb45,
_ => bb44
}
}
bb42 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb43 = {
(*_2).fld0.fld3 = 106999769038965251646864332133441496048_u128 >> (*_2).fld2.2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 101_u8 & 53_u8;
(*_2).fld0.fld2 = Field::<u64>(Variant((*_2).fld4, 3), 1);
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = 231_u8;
(*_2).fld0.fld0 = 3_usize * 5556166952847663995_usize;
Call((*_2).fld2.3 = fn14(), ReturnTo(bb4), UnwindUnreachable())
}
bb44 = {
RET = false as isize;
_2 = core::ptr::addr_of!(_6.3);
(*_2).fld1 = '\u{c9d42}';
(*_2).fld0.fld2 = 17620093014903995674_u64;
(*_2).fld0.fld0 = 2_usize * 134703520940803892_usize;
(*_2).fld4 = Adt24::Variant3 { fld0: 89_u8,fld1: (*_2).fld0.fld2 };
place!(Field::<u64>(Variant((*_2).fld4, 3), 1)) = !(*_2).fld0.fld2;
place!(Field::<u8>(Variant((*_2).fld4, 3), 0)) = !194_u8;
(*_2).fld2.2 = 22455_i16 + (-3304_i16);
(*_2).fld2.1 = !true;
place!(Field::<u64>(Variant(_6.3.fld4, 3), 1)) = (*_2).fld0.fld2;
(*_2).fld0.fld2 = 52079_u16 as u64;
(*_2).fld2.1 = (*_2).fld0.fld0 < _6.3.fld0.fld0;
(*_2).fld2.1 = !true;
(*_2).fld1 = '\u{59857}';
(*_2).fld2.2 = (-27318_i16) & 31533_i16;
Goto(bb3)
}
bb45 = {
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = _24.0.fld0;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = (-1597054100_i32);
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = _13;
(*_2).fld2.0 = _19 << _19;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _24.0.fld0,fld1: _6.0,fld2: _24.0.fld2 };
(*_2).fld2.0 = _19 * _23;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = !_24.0.fld0;
_41 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld2 - Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld2;
(*_2).fld0.fld3 = !_14;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
(*_2).fld0.fld3 = _10 as u128;
(*_2).fld1 = '\u{f730c}';
(*_2).fld0.fld4 = -(*_2).fld2.2;
(*_2).fld0.fld0 = !_32;
(*_2).fld1 = '\u{fab0a}';
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
(*_2).fld0.fld0 = !_32;
Goto(bb46)
}
bb46 = {
(*_2).fld3 = core::ptr::addr_of!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld1);
_34 = [(*_2).fld1,(*_2).fld1,(*_2).fld1,(*_2).fld1,(*_2).fld1,(*_2).fld1,(*_2).fld1,(*_2).fld1];
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = _6.3.fld0.fld3 as i32;
_18.fld0 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld0 ^ Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld0;
_6.3.fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_6.3.fld4, 0), 0)));
_24.0.fld0 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld0;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = (*_2).fld2.1 as i32;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _24.0.fld0,fld1: _6.0,fld2: _24.0.fld2 };
(*_2).fld2.1 = Field::<i32>(Variant((*_2).fld4, 0), 0) >= Field::<i32>(Variant((*_2).fld4, 0), 0);
_37 = [33_i8,109_i8,59_i8,(-68_i8),82_i8,(-110_i8),(-61_i8),(-102_i8)];
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = !1269708631_i32;
_46.3 = (*_2).fld2.1 as u64;
_46.0.fld0 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld0 << (*_2).fld2.2;
_11 = -Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld2;
_44 = (*_2).fld0.fld0;
_6.3.fld2.1 = _19 >= (*_2).fld2.0;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = 51_i8 as i32;
(*_2).fld2.1 = _33;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _46.0.fld0,fld1: _6.0,fld2: _41 };
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _46.0.fld0,fld1: _6.0,fld2: _41 };
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = (-7_i8) as u16;
match Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1 {
650790938 => bb47,
_ => bb25
}
}
bb47 = {
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld2 = -_11;
_18.fld1 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1 % Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1;
(*_2).fld3 = core::ptr::addr_of!(_18.fld1);
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _46.0.fld0,fld1: _6.0,fld2: _11 };
(*_2).fld0.fld3 = (-124527648207129390674238858653206532138_i128) as u128;
_6.2 = _14 as u64;
(*_2).fld0.fld3 = _14 << (*_2).fld2.0;
(*_2).fld3 = core::ptr::addr_of!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld1);
(*_2).fld0.fld2 = _46.3;
(*_2).fld2.2 = (*_2).fld0.fld4 + (*_2).fld0.fld4;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
_50 = 34_i8 ^ 51_i8;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld2 = _41;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = (-313623190_i32);
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld2 = _41 * _11;
_30 = Field::<i32>(Variant((*_2).fld4, 0), 0);
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = !_30;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld0 = _46.0.fld0;
match Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1 {
0 => bb6,
650790938 => bb48,
_ => bb33
}
}
bb48 = {
(*_2).fld0.fld2 = _46.3 << (*_2).fld2.2;
(*_2).fld2.1 = (*_2).fld0.fld2 == _46.3;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
_17 = _50 as u8;
(*_2).fld0.fld2 = _46.3 ^ _46.3;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)) = Adt17 { fld0: _46.0.fld0,fld1: _6.0,fld2: _41 };
Goto(bb49)
}
bb49 = {
(*_2).fld2.2 = (*_2).fld0.fld4;
(*_2).fld2 = (_19, _33, (*_2).fld0.fld4, Move(_21.3));
(*_2).fld0.fld0 = _32 - _32;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
_6.3.fld3 = core::ptr::addr_of!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld1);
(*_2).fld2.2 = (*_2).fld0.fld4;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
_46.2 = &place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld1;
_6.3.fld0.fld2 = _46.3 - _46.3;
(*_2).fld0.fld1 = core::ptr::addr_of_mut!(place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)));
(*_2).fld0.fld0 = !_32;
(*_2).fld2.2 = (*_2).fld0.fld4 & (*_2).fld0.fld4;
_24.0.fld1 = Field::<Adt17>(Variant((*_2).fld4, 0), 1).fld1;
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld1 = _18.fld1 ^ _6.0;
(*_2).fld0.fld3 = _14 + _14;
(*_2).fld2.0 = !_19;
(*_2).fld0.fld0 = _44 - _44;
_8 = &(*_2).fld0;
(*_2).fld1 = '\u{5a547}';
_59 = -(*_2).fld2.0;
(*_2).fld0.fld4 = (*_2).fld2.2 >> (*_2).fld2.2;
(*_2).fld0.fld4 = (*_2).fld2.2 << (*_2).fld2.0;
place!(Field::<i32>(Variant((*_2).fld4, 0), 0)) = _30 | _30;
(*_2).fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant((*_2).fld4, 0), 0)));
place!(Field::<Adt17>(Variant((*_2).fld4, 0), 1)).fld2 = -_41;
Goto(bb50)
}
bb50 = {
Call(_64 = dump_var(13_usize, 59_usize, Move(_59), 30_usize, Move(_30), 33_usize, Move(_33), 10_usize, Move(_10)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_64 = dump_var(13_usize, 13_usize, Move(_13), 22_usize, Move(_22), 17_usize, Move(_17), 44_usize, Move(_44)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14() -> *mut i32 {
mir! {
type RET = *mut i32;
let _1: f32;
let _2: [u16; 3];
let _3: &'static Adt25;
let _4: char;
let _5: u128;
let _6: (&'static mut u32, [i8; 8], u32);
let _7: [isize; 1];
let _8: bool;
let _9: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _10: *const (u32, *mut i32, isize);
let _11: isize;
let _12: isize;
let _13: Adt25;
let _14: *const u32;
let _15: &'static mut Adt36;
let _16: (i32,);
let _17: i8;
let _18: isize;
let _19: u8;
let _20: Adt68;
let _21: u16;
let _22: char;
let _23: f64;
let _24: u16;
let _25: &'static Adt25;
let _26: char;
let _27: *const [i8; 7];
let _28: u64;
let _29: Adt25;
let _30: &'static mut u64;
let _31: (i32,);
let _32: i16;
let _33: isize;
let _34: *const f64;
let _35: &'static mut u32;
let _36: *const &'static mut u64;
let _37: Adt23;
let _38: Adt36;
let _39: u8;
let _40: Adt23;
let _41: isize;
let _42: i32;
let _43: f32;
let _44: isize;
let _45: bool;
let _46: isize;
let _47: u8;
let _48: [u16; 3];
let _49: *mut f32;
let _50: f32;
let _51: isize;
let _52: f64;
let _53: *mut [u16; 3];
let _54: *mut u64;
let _55: &'static *const [u16; 3];
let _56: (u32, bool, u64, Adt36);
let _57: (i32,);
let _58: *mut &'static mut &'static *mut bool;
let _59: [i64; 1];
let _60: &'static Adt23;
let _61: *mut &'static *const [u16; 3];
let _62: isize;
let _63: *const f64;
let _64: *mut u8;
let _65: u16;
let _66: i8;
let _67: *mut u64;
let _68: f64;
let _69: &'static i64;
let _70: char;
let _71: &'static Adt36;
let _72: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _73: ([u64; 4], f32, *const [u16; 3], &'static mut u64);
let _74: i16;
let _75: char;
let _76: &'static mut Adt36;
let _77: bool;
let _78: usize;
let _79: *mut f32;
let _80: (i32,);
let _81: [char; 8];
let _82: [i8; 7];
let _83: (u32, bool, u64, Adt36);
let _84: &'static u32;
let _85: isize;
let _86: Adt36;
let _87: isize;
let _88: u32;
let _89: u64;
let _90: *const [i8; 7];
let _91: *const *mut bool;
let _92: *mut isize;
let _93: &'static *const [i8; 8];
let _94: f32;
let _95: i8;
let _96: *const Adt17;
let _97: bool;
let _98: isize;
let _99: isize;
let _100: *mut bool;
let _101: Adt68;
let _102: (&'static mut u32, [i8; 8], u32);
let _103: &'static *const [u16; 3];
let _104: *mut u128;
let _105: &'static *const [i8; 8];
let _106: *const [i8; 8];
let _107: *mut u8;
let _108: i64;
let _109: char;
let _110: char;
let _111: u16;
let _112: Adt79;
let _113: ();
let _114: ();
{
_1 = (-98_isize) as f32;
_1 = 261228225739304919080514975511824267809_u128 as f32;
_1 = 8572_u16 as f32;
_1 = 36476_u16 as f32;
_1 = 2286118035_u32 as f32;
_1 = 261034082146836412_i64 as f32;
_1 = 502902039_u32 as f32;
_1 = (-125_i8) as f32;
_1 = 72_i8 as f32;
_1 = (-9223372036854775808_isize) as f32;
_1 = (-7899982014635783339_i64) as f32;
_1 = 1302064089_u32 as f32;
_2 = [962_u16,25430_u16,26714_u16];
_2 = [56663_u16,60498_u16,60772_u16];
_1 = (-1129763319_i32) as f32;
_1 = 3039657418_u32 as f32;
_1 = 15681_u16 as f32;
_1 = 330452130_i32 as f32;
Goto(bb1)
}
bb1 = {
_2 = [468_u16,45692_u16,58513_u16];
_1 = (-3906414818111200209_i64) as f32;
_1 = 221428857569695249751997625629089631055_u128 as f32;
_2 = [24690_u16,52971_u16,3671_u16];
_2 = [10004_u16,30686_u16,26733_u16];
Goto(bb2)
}
bb2 = {
_4 = '\u{5de1f}';
_5 = _1 as u128;
_4 = '\u{7c1d6}';
_2 = [21053_u16,37416_u16,8668_u16];
_6.1 = [58_i8,(-10_i8),(-10_i8),(-109_i8),49_i8,26_i8,(-111_i8),(-100_i8)];
_1 = 7425_i16 as f32;
_6.1 = [65_i8,(-6_i8),12_i8,127_i8,(-102_i8),63_i8,(-20_i8),(-73_i8)];
_2 = [5323_u16,53249_u16,15464_u16];
_1 = 2844164167_u32 as f32;
_5 = 17652414646899929265281912814586769725_u128 ^ 316375413108312492710599523587673923404_u128;
_6.2 = 3896951031_u32 * 1866846593_u32;
_1 = 15493466377380140337_u64 as f32;
_6.1 = [(-39_i8),61_i8,(-97_i8),(-70_i8),(-62_i8),(-128_i8),82_i8,103_i8];
_5 = 292790153699025256607950502636032256339_u128 - 325016509826330216398993379729043956774_u128;
_8 = false | true;
_6.0 = &mut _6.2;
_7 = [(-9223372036854775808_isize)];
_2 = [63504_u16,54875_u16,35456_u16];
_1 = _5 as f32;
_1 = 9223372036854775807_isize as f32;
_4 = '\u{597c8}';
_9.2 = core::ptr::addr_of!(_2);
_2 = [15757_u16,54743_u16,44668_u16];
_9.0 = [9888865475188665378_u64,1372789358687605610_u64,8192590865196407276_u64,6057709624284607801_u64];
_4 = '\u{b3491}';
Goto(bb3)
}
bb3 = {
_9.1 = _1 - _1;
_9.1 = _1;
_9.0 = [13331190508637875939_u64,8490714838907178337_u64,7302999919259304837_u64,18310994126266382859_u64];
_9.1 = _1 + _1;
_8 = false;
_9.2 = core::ptr::addr_of!(_2);
_9.0 = [4459288938622379327_u64,30846316445064995_u64,5841164195527112237_u64,209618994479545813_u64];
_2 = [37216_u16,65362_u16,19895_u16];
_8 = _4 >= _4;
_9.1 = _1 - _1;
_8 = _9.1 <= _9.1;
_2 = [28155_u16,9762_u16,61437_u16];
_5 = 255655543481421266506792837994798355923_u128 << 24584_u16;
_2 = [52200_u16,21537_u16,42187_u16];
_9.2 = core::ptr::addr_of!(_2);
_2 = [16892_u16,48060_u16,49805_u16];
_5 = 71546215833105030260387303487226821707_u128 ^ 49845128677846686207135135894321492409_u128;
_5 = 98379355630899567153612055725444301473_u128 >> 255_u8;
_5 = 131353280530729394477925355784636750033_u128 + 129289465341934545333185482389781372930_u128;
_1 = 3510153021297656611_u64 as f32;
_4 = '\u{f685a}';
_11 = !3_isize;
_9.0 = [1307545161890516463_u64,6972826118389791195_u64,12702963019419597660_u64,14440642564982132219_u64];
_7 = [_11];
_11 = -9223372036854775807_isize;
Goto(bb4)
}
bb4 = {
_5 = 280145905346815686050182333310439229377_u128 + 77876975845989755280709581572290411283_u128;
_8 = !false;
Goto(bb5)
}
bb5 = {
_5 = 145941370733391620985753745819443491999_u128 - 171445358684314473956378744947104311426_u128;
_5 = !284230025656748049553511325820588844457_u128;
_1 = _9.1 * _9.1;
_9.0 = [4808099821528808839_u64,16743153959046163539_u64,5110556205757926022_u64,16174871911237765569_u64];
_2 = [10176_u16,46677_u16,52006_u16];
_9.2 = core::ptr::addr_of!(_2);
_13.fld4 = (-25550_i16) + 17235_i16;
_2 = [63535_u16,60429_u16,9807_u16];
_9.0 = [17776798958547304432_u64,13926009523552376962_u64,9959081695767734216_u64,2124360819729313127_u64];
_13.fld0 = 0_usize << _5;
_9.1 = 16953886307675112901_u64 as f32;
_13.fld0 = 17827040054012895834_usize;
_9.2 = core::ptr::addr_of!(_2);
_7 = [_11];
_4 = '\u{fc94e}';
_13.fld3 = !_5;
_7 = [_11];
_13.fld2 = 16026228996625862966_u64 | 16494132611165359774_u64;
_9.3 = &mut _13.fld2;
_12 = _11;
_9.0 = [10380465666909561595_u64,15341374339590159517_u64,8596688498296702914_u64,615623754116603126_u64];
_5 = 229122311466243933573880522848064261111_u128 << _11;
Goto(bb6)
}
bb6 = {
_11 = _12;
_12 = _1 as isize;
_9.2 = core::ptr::addr_of!(_2);
_5 = 3158414645041825263119304842773848497_u128;
Goto(bb7)
}
bb7 = {
RET = core::ptr::addr_of_mut!(_16.0);
_5 = (-16938_i16) as u128;
(*RET) = (-1066782999_i32) ^ (-542316032_i32);
(*RET) = (-66102297_i32);
(*RET) = (-553163029_i32);
_2 = [31866_u16,50336_u16,24784_u16];
(*RET) = (-2035139490_i32) & (-27673394_i32);
_2 = [36746_u16,48877_u16,40119_u16];
(*RET) = 252415835_i32;
_4 = '\u{c1eaf}';
_5 = 259098595995887477985702641702517388019_u128;
(*RET) = -(-1641016489_i32);
(*RET) = 1061614182_i32;
_4 = '\u{c0b32}';
(*RET) = !(-876820423_i32);
_5 = !254897912880260167873291598999125210153_u128;
_9.1 = 166694372524662924178204900052598096919_i128 as f32;
(*RET) = !(-1302688284_i32);
(*RET) = 942658918_i32 + (-1031370356_i32);
(*RET) = -1202356460_i32;
_9.2 = core::ptr::addr_of!(_2);
(*RET) = 1688839831_i32;
_16 = (1868858633_i32,);
_18 = _12 * _11;
Goto(bb8)
}
bb8 = {
_12 = _18;
_5 = !212118981417199103966987758874591625572_u128;
_22 = _4;
(*RET) = 1391473589_i32 & (-1871729512_i32);
_17 = 43868_u16 as i8;
_23 = 106_u8 as f64;
_16 = ((-494561937_i32),);
_22 = _4;
_18 = _12 & _11;
_2 = [54230_u16,53699_u16,32938_u16];
(*RET) = -(-2063356383_i32);
(*RET) = 1880894132_i32 ^ (-96372879_i32);
(*RET) = 188820754_i32 - (-346069739_i32);
_2 = [37505_u16,7141_u16,51067_u16];
_4 = _22;
_4 = _22;
_16.0 = 755928665_i32;
(*RET) = !1983962746_i32;
_8 = false & true;
(*RET) = 213_u8 as i32;
(*RET) = (-652081114_i32);
_8 = !true;
(*RET) = 2117955394_i32 | 1181332200_i32;
_16 = (351863439_i32,);
_16 = (1916267990_i32,);
_17 = -(-6_i8);
_11 = 14780_i16 as isize;
_21 = 849425553_u32 as u16;
Goto(bb9)
}
bb9 = {
(*RET) = (-1848252388_i32) + (-710436597_i32);
(*RET) = (-355586550_i32);
_24 = _21 ^ _21;
_19 = !239_u8;
(*RET) = -1005296252_i32;
(*RET) = _18 as i32;
_26 = _22;
(*RET) = (-1933556725_i32) & 64526968_i32;
_1 = -_9.1;
(*RET) = (-84724619726491126592457908059411692126_i128) as i32;
Call((*RET) = core::intrinsics::transmute(_26), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
(*RET) = 1878333618_i32;
(*RET) = -(-1480914581_i32);
(*RET) = 1350136503_i32 << _21;
(*RET) = 1200058188_i32 - (-162301439_i32);
(*RET) = _24 as i32;
(*RET) = -210609669_i32;
(*RET) = 2039608777_i32 & (-1990980341_i32);
(*RET) = (-680775992_i32) | 1393313822_i32;
_18 = _12;
(*RET) = -(-762586807_i32);
_31.0 = (*RET) + (*RET);
_30 = Move(_9.3);
_2 = [_24,_21,_21];
_11 = _12;
_31 = ((*RET),);
Call(_10 = fn15((*RET), _12), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
(*RET) = _31.0 * _31.0;
(*RET) = _31.0 ^ _31.0;
(*RET) = _31.0 - _31.0;
_22 = _26;
_24 = _5 as u16;
_32 = 11594_i16 * (-8859_i16);
_24 = _21 + _21;
(*RET) = _31.0 ^ _31.0;
_16.0 = -_31.0;
(*RET) = _31.0 << _31.0;
_29.fld3 = _5;
(*RET) = _31.0 & _31.0;
_23 = _18 as f64;
(*RET) = !_31.0;
(*RET) = !_31.0;
(*RET) = 555012058_u32 as i32;
_1 = -_9.1;
(*RET) = _31.0 + _31.0;
_17 = (-114_i8) ^ 47_i8;
_22 = _4;
_9.2 = core::ptr::addr_of!(_2);
Goto(bb12)
}
bb12 = {
_33 = _11;
(*RET) = 1384618182_u32 as i32;
_29.fld2 = !5824573424190343351_u64;
(*RET) = -_31.0;
_31 = ((*RET),);
_29.fld0 = 5_usize + 9105792464953749913_usize;
_34 = core::ptr::addr_of!(_23);
_22 = _26;
(*_34) = _19 as f64;
(*RET) = _29.fld3 as i32;
_29.fld3 = _5 & _5;
(*_34) = (-6014115069591468950_i64) as f64;
_9.0 = [_29.fld2,_29.fld2,_29.fld2,_29.fld2];
(*RET) = _31.0;
(*_34) = 734367198_u32 as f64;
(*_34) = _29.fld3 as f64;
(*_34) = _19 as f64;
_31 = _16;
(*RET) = !_31.0;
_11 = -_18;
_26 = _4;
(*RET) = !_31.0;
(*RET) = _31.0;
_38.fld0.fld4 = _32;
(*_34) = 1913168764_u32 as f64;
_38.fld1 = _26;
Goto(bb13)
}
bb13 = {
(*_34) = _38.fld0.fld4 as f64;
_28 = _29.fld2 ^ _29.fld2;
_18 = _11 + _12;
_31.0 = (*RET) + (*RET);
_29.fld4 = !_38.fld0.fld4;
_38.fld2 = (_18, _8, _29.fld4, Move(RET));
_37 = Adt23::Variant1 { fld0: _24,fld1: Move(_38.fld2.3) };
_9.3 = &mut _29.fld2;
_38.fld2 = (_18, _8, _32, Move(Field::<*mut i32>(Variant(_37, 1), 1)));
_34 = core::ptr::addr_of!((*_34));
(*_34) = 3169389802168395527_i64 as f64;
(*_34) = _38.fld2.2 as f64;
_1 = _38.fld2.0 as f32;
RET = core::ptr::addr_of_mut!(_31.0);
_39 = !_19;
_9.0 = [_28,_28,_28,_28];
_19 = !_39;
Call(_42 = core::intrinsics::bswap((*RET)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_38.fld0.fld0 = 22566065573324789_usize >> _38.fld2.0;
(*RET) = _16.0 | _16.0;
(*RET) = _16.0;
(*RET) = -_16.0;
_38.fld0.fld0 = 3_usize;
_26 = _38.fld1;
_37 = Adt23::Variant0 { fld0: _28,fld1: _38.fld0.fld4,fld2: _19 };
_45 = _38.fld2.1;
(*RET) = _16.0 + _16.0;
_9.2 = core::ptr::addr_of!(_2);
_37 = Adt23::Variant1 { fld0: _24,fld1: Move(_38.fld2.3) };
(*_34) = _38.fld0.fld0 as f64;
_39 = _17 as u8;
_2 = [_24,Field::<u16>(Variant(_37, 1), 0),_24];
_38.fld2 = (_11, _45, _32, Move(Field::<*mut i32>(Variant(_37, 1), 1)));
_2 = [_24,_24,_24];
_40 = Adt23::Variant0 { fld0: _28,fld1: _38.fld2.2,fld2: _39 };
place!(Field::<i16>(Variant(_40, 0), 1)) = _38.fld2.2;
(*RET) = _16.0 - _16.0;
(*_34) = _5 as f64;
match _38.fld0.fld0 {
0 => bb11,
1 => bb2,
2 => bb7,
4 => bb16,
5 => bb17,
3 => bb19,
_ => bb18
}
}
bb15 = {
(*_34) = _38.fld0.fld4 as f64;
_28 = _29.fld2 ^ _29.fld2;
_18 = _11 + _12;
_31.0 = (*RET) + (*RET);
_29.fld4 = !_38.fld0.fld4;
_38.fld2 = (_18, _8, _29.fld4, Move(RET));
_37 = Adt23::Variant1 { fld0: _24,fld1: Move(_38.fld2.3) };
_9.3 = &mut _29.fld2;
_38.fld2 = (_18, _8, _32, Move(Field::<*mut i32>(Variant(_37, 1), 1)));
_34 = core::ptr::addr_of!((*_34));
(*_34) = 3169389802168395527_i64 as f64;
(*_34) = _38.fld2.2 as f64;
_1 = _38.fld2.0 as f32;
RET = core::ptr::addr_of_mut!(_31.0);
_39 = !_19;
_9.0 = [_28,_28,_28,_28];
_19 = !_39;
Call(_42 = core::intrinsics::bswap((*RET)), ReturnTo(bb14), UnwindUnreachable())
}
bb16 = {
_5 = 145941370733391620985753745819443491999_u128 - 171445358684314473956378744947104311426_u128;
_5 = !284230025656748049553511325820588844457_u128;
_1 = _9.1 * _9.1;
_9.0 = [4808099821528808839_u64,16743153959046163539_u64,5110556205757926022_u64,16174871911237765569_u64];
_2 = [10176_u16,46677_u16,52006_u16];
_9.2 = core::ptr::addr_of!(_2);
_13.fld4 = (-25550_i16) + 17235_i16;
_2 = [63535_u16,60429_u16,9807_u16];
_9.0 = [17776798958547304432_u64,13926009523552376962_u64,9959081695767734216_u64,2124360819729313127_u64];
_13.fld0 = 0_usize << _5;
_9.1 = 16953886307675112901_u64 as f32;
_13.fld0 = 17827040054012895834_usize;
_9.2 = core::ptr::addr_of!(_2);
_7 = [_11];
_4 = '\u{fc94e}';
_13.fld3 = !_5;
_7 = [_11];
_13.fld2 = 16026228996625862966_u64 | 16494132611165359774_u64;
_9.3 = &mut _13.fld2;
_12 = _11;
_9.0 = [10380465666909561595_u64,15341374339590159517_u64,8596688498296702914_u64,615623754116603126_u64];
_5 = 229122311466243933573880522848064261111_u128 << _11;
Goto(bb6)
}
bb17 = {
_9.1 = _1 - _1;
_9.1 = _1;
_9.0 = [13331190508637875939_u64,8490714838907178337_u64,7302999919259304837_u64,18310994126266382859_u64];
_9.1 = _1 + _1;
_8 = false;
_9.2 = core::ptr::addr_of!(_2);
_9.0 = [4459288938622379327_u64,30846316445064995_u64,5841164195527112237_u64,209618994479545813_u64];
_2 = [37216_u16,65362_u16,19895_u16];
_8 = _4 >= _4;
_9.1 = _1 - _1;
_8 = _9.1 <= _9.1;
_2 = [28155_u16,9762_u16,61437_u16];
_5 = 255655543481421266506792837994798355923_u128 << 24584_u16;
_2 = [52200_u16,21537_u16,42187_u16];
_9.2 = core::ptr::addr_of!(_2);
_2 = [16892_u16,48060_u16,49805_u16];
_5 = 71546215833105030260387303487226821707_u128 ^ 49845128677846686207135135894321492409_u128;
_5 = 98379355630899567153612055725444301473_u128 >> 255_u8;
_5 = 131353280530729394477925355784636750033_u128 + 129289465341934545333185482389781372930_u128;
_1 = 3510153021297656611_u64 as f32;
_4 = '\u{f685a}';
_11 = !3_isize;
_9.0 = [1307545161890516463_u64,6972826118389791195_u64,12702963019419597660_u64,14440642564982132219_u64];
_7 = [_11];
_11 = -9223372036854775807_isize;
Goto(bb4)
}
bb18 = {
_12 = _18;
_5 = !212118981417199103966987758874591625572_u128;
_22 = _4;
(*RET) = 1391473589_i32 & (-1871729512_i32);
_17 = 43868_u16 as i8;
_23 = 106_u8 as f64;
_16 = ((-494561937_i32),);
_22 = _4;
_18 = _12 & _11;
_2 = [54230_u16,53699_u16,32938_u16];
(*RET) = -(-2063356383_i32);
(*RET) = 1880894132_i32 ^ (-96372879_i32);
(*RET) = 188820754_i32 - (-346069739_i32);
_2 = [37505_u16,7141_u16,51067_u16];
_4 = _22;
_4 = _22;
_16.0 = 755928665_i32;
(*RET) = !1983962746_i32;
_8 = false & true;
(*RET) = 213_u8 as i32;
(*RET) = (-652081114_i32);
_8 = !true;
(*RET) = 2117955394_i32 | 1181332200_i32;
_16 = (351863439_i32,);
_16 = (1916267990_i32,);
_17 = -(-6_i8);
_11 = 14780_i16 as isize;
_21 = 849425553_u32 as u16;
Goto(bb9)
}
bb19 = {
RET = core::ptr::addr_of_mut!(_31.0);
(*RET) = _23 as i32;
_1 = _9.1 * _9.1;
RET = core::ptr::addr_of_mut!((*RET));
_47 = Field::<u8>(Variant(_40, 0), 2) | _19;
(*RET) = _16.0 >> _38.fld2.2;
(*RET) = _16.0 * _16.0;
(*RET) = _16.0;
(*RET) = (-3866215844517516706_i64) as i32;
(*_34) = _39 as f64;
_22 = _4;
_12 = _18 >> (*RET);
_18 = _12;
(*RET) = _16.0 & _16.0;
(*_34) = _9.1 as f64;
_1 = _9.1;
_38.fld0.fld2 = !Field::<u64>(Variant(_40, 0), 0);
_43 = _9.1;
_26 = _22;
(*RET) = _16.0 << Field::<i16>(Variant(_40, 0), 1);
_7 = [_11];
_38.fld0.fld3 = _5 + _5;
Goto(bb20)
}
bb20 = {
_38.fld0.fld4 = -_38.fld2.2;
(*RET) = _16.0 + _16.0;
(*RET) = _39 as i32;
(*RET) = _16.0;
_46 = _18 ^ _18;
_16.0 = !(*RET);
_40 = Adt23::Variant0 { fld0: _38.fld0.fld2,fld1: _38.fld2.2,fld2: _19 };
_45 = _46 != _12;
(*RET) = -_16.0;
_38.fld0.fld3 = _5 * _5;
(*RET) = !_16.0;
(*_34) = 1891261563834855399_i64 as f64;
(*RET) = _16.0;
(*_34) = (-49292448687431982538163377161292839213_i128) as f64;
_33 = _4 as isize;
match _38.fld0.fld0 {
0 => bb1,
1 => bb12,
2 => bb17,
4 => bb5,
3 => bb22,
_ => bb21
}
}
bb21 = {
_2 = [468_u16,45692_u16,58513_u16];
_1 = (-3906414818111200209_i64) as f32;
_1 = 221428857569695249751997625629089631055_u128 as f32;
_2 = [24690_u16,52971_u16,3671_u16];
_2 = [10004_u16,30686_u16,26733_u16];
Goto(bb2)
}
bb22 = {
(*RET) = -_16.0;
(*RET) = _16.0 * _16.0;
_38.fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*RET) = _16.0 << _11;
_38.fld2.1 = _45 ^ _45;
_22 = _38.fld1;
Goto(bb23)
}
bb23 = {
(*RET) = _16.0 & _16.0;
(*_34) = _38.fld0.fld0 as f64;
_38.fld2.3 = core::ptr::addr_of_mut!((*RET));
_11 = _38.fld0.fld0 as isize;
_49 = core::ptr::addr_of_mut!(_1);
(*_49) = _9.1;
_48 = [_24,Field::<u16>(Variant(_37, 1), 0),Field::<u16>(Variant(_37, 1), 0)];
_9.2 = core::ptr::addr_of!(_48);
match _38.fld0.fld0 {
3 => bb24,
_ => bb6
}
}
bb24 = {
_51 = _18;
Goto(bb25)
}
bb25 = {
(*_49) = -_43;
_42 = (*RET);
(*_34) = _39 as f64;
_51 = _12 << (*RET);
_37 = Adt23::Variant1 { fld0: _24,fld1: Move(_38.fld2.3) };
(*RET) = _42;
(*_49) = _9.1;
(*RET) = _42;
_38.fld1 = _22;
(*_34) = _5 as f64;
(*_34) = (-4281267371479735392_i64) as f64;
(*RET) = !_16.0;
(*RET) = 7518111864577116696_i64 as i32;
(*RET) = _42 & _42;
_38.fld0.fld4 = _32 << (*RET);
_38.fld0.fld0 = (*_49) as usize;
Goto(bb26)
}
bb26 = {
_43 = (*_49) - (*_49);
_30 = &mut _28;
(*_34) = Field::<u64>(Variant(_40, 0), 0) as f64;
_9.1 = (*_49) + (*_49);
(*_30) = Field::<u64>(Variant(_40, 0), 0) + _38.fld0.fld2;
(*RET) = (-84477040870154253808792831882237576433_i128) as i32;
(*_34) = _39 as f64;
_54 = core::ptr::addr_of_mut!((*_30));
(*_54) = Field::<u64>(Variant(_40, 0), 0) >> _31.0;
place!(Field::<u8>(Variant(_40, 0), 2)) = _47 + _19;
_50 = -(*_49);
(*_30) = _38.fld0.fld2;
(*_49) = _43 - _9.1;
(*_34) = _38.fld0.fld0 as f64;
(*_49) = -_50;
Goto(bb27)
}
bb27 = {
_56.3.fld0.fld4 = -_38.fld0.fld4;
_38.fld0.fld3 = !_5;
(*_34) = (*RET) as f64;
(*_34) = _5 as f64;
(*_34) = _11 as f64;
place!(Field::<u16>(Variant(_37, 1), 0)) = !_24;
_18 = 2085807951_u32 as isize;
_55 = &_9.2;
_2 = _48;
(*RET) = _42 * _16.0;
(*_49) = Field::<u8>(Variant(_40, 0), 2) as f32;
(*_30) = _38.fld2.1 as u64;
_53 = core::ptr::addr_of_mut!(_2);
(*_34) = (-40681350737837094594490641145436482718_i128) as f64;
_56.3.fld2.3 = Move(RET);
(*_53) = [_24,Field::<u16>(Variant(_37, 1), 0),Field::<u16>(Variant(_37, 1), 0)];
(*_34) = (*_49) as f64;
_24 = _38.fld2.1 as u16;
(*_53) = [_24,_24,_24];
(*_30) = _38.fld0.fld2 * _38.fld0.fld2;
_1 = _43 - _50;
_56.3.fld2 = (_18, _38.fld2.1, _38.fld2.2, Move(Field::<*mut i32>(Variant(_37, 1), 1)));
Goto(bb28)
}
bb28 = {
(*_53) = [_24,_24,_24];
_31.0 = _17 as i32;
(*_49) = (*_30) as f32;
Call(_39 = core::intrinsics::transmute(_56.3.fld2.1), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_57.0 = _16.0;
(*_49) = -_9.1;
_38.fld2.3 = Move(_56.3.fld2.3);
(*_53) = [_24,_24,_24];
_38.fld4 = Adt24::Variant2 { fld0: _17,fld1: _9.0 };
(*_34) = _24 as f64;
_38.fld0.fld4 = _38.fld2.2;
_56.3.fld0.fld0 = _38.fld0.fld0 * _38.fld0.fld0;
_59 = [5294454682231453524_i64];
_36 = core::ptr::addr_of!(_9.3);
_56.1 = _56.3.fld2.1;
(*_34) = (*_30) as f64;
_34 = core::ptr::addr_of!((*_34));
(*_34) = 1985759321_u32 as f64;
(*_36) = &mut (*_30);
_18 = -_46;
(*_49) = _43 * _9.1;
(*_34) = 348489024_u32 as f64;
_26 = _38.fld1;
_56.0 = !743517879_u32;
(*_53) = [_24,_24,_24];
(*_36) = Move(_30);
_9.1 = (*_49) - (*_49);
place!(Field::<*mut i32>(Variant(_37, 1), 1)) = core::ptr::addr_of_mut!(_57.0);
_56.3.fld4 = Move(_38.fld4);
_63 = core::ptr::addr_of!((*_34));
Goto(bb30)
}
bb30 = {
_14 = core::ptr::addr_of!(_56.0);
Goto(bb31)
}
bb31 = {
_31 = (_42,);
_22 = _4;
_9.0 = [Field::<u64>(Variant(_40, 0), 0),Field::<u64>(Variant(_40, 0), 0),Field::<u64>(Variant(_40, 0), 0),_38.fld0.fld2];
(*_34) = _18 as f64;
(*_53) = [_24,_24,_24];
_56.1 = _39 <= _39;
(*_49) = _9.1 - _9.1;
_62 = _18 << _24;
(*_34) = (*_14) as f64;
Goto(bb32)
}
bb32 = {
_23 = _17 as f64;
_56.3.fld0.fld2 = _38.fld0.fld2 ^ _38.fld0.fld2;
_68 = -(*_34);
(*_53) = [_24,_24,_24];
(*_49) = _43 + _9.1;
_52 = -(*_34);
(*_36) = &mut _56.3.fld0.fld2;
_45 = _24 <= _24;
(*_36) = &mut _38.fld0.fld2;
_72 = (_9.0, (*_49), Move(_9.2), Move((*_36)));
_65 = !_24;
(*_49) = _9.1 - _72.1;
(*_36) = &mut place!(Field::<u64>(Variant(_40, 0), 0));
_73.0 = _9.0;
(*_34) = _52 * _68;
_7 = [_12];
_9.2 = core::ptr::addr_of!((*_53));
_39 = _4 as u8;
(*_34) = -_68;
(*_14) = 2269127086_u32 | 2756372893_u32;
(*_34) = -_68;
_12 = (*_34) as isize;
_66 = _17 + _17;
_9.1 = (*_49) * (*_49);
_60 = &_37;
place!(Field::<*mut i32>(Variant(_37, 1), 1)) = core::ptr::addr_of_mut!(_16.0);
Goto(bb33)
}
bb33 = {
(*_34) = -_52;
(*_53) = [_24,Field::<u16>(Variant((*_60), 1), 0),_24];
_24 = _65 >> _65;
(*_34) = _68;
(*_53) = [_24,_24,_24];
(*_34) = _68 + _52;
_67 = Move(_54);
_11 = 7231092771448412595_u64 as isize;
(*_49) = _9.1 + _9.1;
(*_34) = _32 as f64;
(*_53) = [Field::<u16>(Variant((*_60), 1), 0),_24,_24];
_54 = Move(_67);
_67 = Move(_54);
(*_34) = _52;
(*_34) = -_52;
_70 = _4;
(*_49) = _72.1 * _9.1;
(*_53) = _48;
_54 = Move(_67);
(*_53) = _48;
Goto(bb34)
}
bb34 = {
(*_34) = _52;
_67 = Move(_54);
(*_34) = -_52;
(*_53) = [Field::<u16>(Variant((*_60), 1), 0),_65,_65];
_72 = (_73.0, (*_49), Move(_9.2), Move((*_36)));
_78 = 12840935536508439016_usize >> _62;
(*_14) = _62 as u32;
_66 = _78 as i8;
(*_53) = [_24,Field::<u16>(Variant((*_60), 1), 0),_65];
(*_49) = _72.1 - _72.1;
_73.2 = core::ptr::addr_of!((*_53));
_75 = _26;
(*_53) = _48;
_74 = _32 ^ _32;
(*_53) = [_24,Field::<u16>(Variant((*_60), 1), 0),Field::<u16>(Variant((*_60), 1), 0)];
Call(_5 = core::intrinsics::bswap(64031219057108938607685566807646947051_u128), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
_72.1 = -(*_49);
_33 = _62 ^ _62;
_41 = (-3004550370651484585_i64) as isize;
(*_49) = _9.1 + _9.1;
_53 = core::ptr::addr_of_mut!((*_53));
_22 = _4;
(*_53) = [_24,_65,_24];
(*_53) = [Field::<u16>(Variant((*_60), 1), 0),_24,_24];
place!(Field::<u16>(Variant(_37, 1), 0)) = _24 >> (*_14);
(*_49) = _72.1;
_80 = (_42,);
(*_34) = _68 * _68;
(*_14) = 3170303348_u32 | 44561977_u32;
(*_49) = _9.1 * _72.1;
_77 = (*_49) != (*_49);
_73.1 = (*_49) + (*_49);
_64 = core::ptr::addr_of_mut!(_39);
_2 = [_24,Field::<u16>(Variant(_37, 1), 0),_24];
_80.0 = _16.0 - _42;
_57 = (_80.0,);
_1 = _72.1;
(*_34) = _68 - _52;
(*_64) = _47 - _47;
Call((*_53) = fn19(Move(_36), (*_14), Move(Field::<*mut i32>(Variant(_37, 1), 1)), (*_64)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_81 = [_22,_70,_70,_75,_70,_26,_75,_26];
_5 = 25983662809393127137195454136639269916_u128 & 272388247880900148263082104309071532910_u128;
_32 = _74 | _74;
_83.3.fld1 = _22;
_73.2 = core::ptr::addr_of!((*_53));
_83.3.fld2.1 = (*_49) <= (*_49);
_57.0 = _80.0;
Goto(bb37)
}
bb37 = {
(*_34) = _52 + _68;
_42 = !_57.0;
_31 = (_42,);
(*_34) = _52;
(*_49) = (*_14) as f32;
(*_64) = _33 as u8;
_57.0 = _74 as i32;
_83.3.fld2.0 = _18;
_50 = (*_49);
_86.fld0.fld4 = _74 & _32;
_24 = Field::<u16>(Variant(_37, 1), 0) + Field::<u16>(Variant(_37, 1), 0);
_83.3.fld0.fld2 = _26 as u64;
(*_34) = _68;
_86.fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_49) = _73.1;
(*_49) = 8088987101830407692_i64 as f32;
(*_34) = -_52;
_72.1 = -_73.1;
_50 = _72.1 - _9.1;
Call((*_34) = core::intrinsics::fmaf64(_52, _52, _68), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
_24 = (*_34) as u16;
_83.3.fld2 = (_46, _77, _86.fld0.fld4, Move(_86.fld2.3));
_21 = Field::<u16>(Variant(_37, 1), 0) + _65;
(*_34) = -_68;
_55 = &_72.2;
(*_49) = _73.1 + _72.1;
_80.0 = _42;
(*_64) = _47 - _47;
_64 = core::ptr::addr_of_mut!((*_64));
_9.1 = -(*_49);
_83.0 = (*_14);
_66 = _17;
_72.2 = core::ptr::addr_of!((*_53));
_35 = &mut (*_14);
_87 = _16.0 as isize;
_33 = -_62;
Goto(bb39)
}
bb39 = {
(*_64) = (-36450027651449391195002911757550439010_i128) as u8;
_2 = [Field::<u16>(Variant(_37, 1), 0),Field::<u16>(Variant(_37, 1), 0),_21];
_79 = core::ptr::addr_of_mut!(_1);
_70 = _4;
_31 = (_80.0,);
_34 = core::ptr::addr_of!((*_34));
_21 = Field::<u16>(Variant(_37, 1), 0);
(*_64) = _47 >> _18;
(*_35) = _83.0 - _83.0;
_54 = core::ptr::addr_of_mut!(_86.fld0.fld2);
_19 = _66 as u8;
Goto(bb40)
}
bb40 = {
(*_49) = -_50;
(*_53) = _48;
(*_54) = !_83.3.fld0.fld2;
(*_53) = _48;
(*_64) = !_19;
_86.fld3 = core::ptr::addr_of!((*_35));
_26 = _75;
(*_64) = _19 & _19;
place!(Field::<u16>(Variant(_37, 1), 0)) = _21 - _21;
_53 = core::ptr::addr_of_mut!((*_53));
_62 = -_33;
_90 = core::ptr::addr_of!(_82);
_16 = (_31.0,);
_31.0 = _42 | _57.0;
Goto(bb41)
}
bb41 = {
_104 = core::ptr::addr_of_mut!(_5);
_80 = (_42,);
_34 = Move(_63);
_86.fld2.0 = _33 ^ _33;
_86.fld0.fld0 = _78;
(*_104) = !295938478232901521488823537567214797578_u128;
Goto(bb42)
}
bb42 = {
_43 = _52 as f32;
_86.fld2.0 = _46 & _18;
(*_64) = _19 + _19;
_65 = _77 as u16;
_46 = _33 - _86.fld2.0;
Goto(bb43)
}
bb43 = {
(*_53) = _48;
_83.3.fld0.fld0 = _86.fld0.fld0 + _86.fld0.fld0;
_16 = (_80.0,);
(*_54) = _83.3.fld0.fld2;
_85 = !_33;
_31.0 = _16.0;
(*_90) = [_17,_66,_66,_66,_17,_17,_17];
_84 = &(*_35);
_79 = core::ptr::addr_of_mut!((*_49));
(*_53) = [_65,_21,_65];
_51 = _85 | _62;
_73.0 = [(*_54),(*_54),(*_54),(*_54)];
_86.fld2.3 = core::ptr::addr_of_mut!(_16.0);
(*_35) = _83.0 | _83.0;
(*_90) = [_66,_66,_66,_17,_17,_66,_66];
(*_104) = 17442641189939067221484609707869830044_u128 & 298411028432704629698478465982448839222_u128;
(*_79) = _50;
(*_104) = 274808987598022645526080789307861844569_u128;
_83.3.fld4 = Adt24::Variant3 { fld0: (*_64),fld1: (*_54) };
(*_35) = _23 as u32;
(*_49) = _50 * _9.1;
Goto(bb44)
}
bb44 = {
_77 = _45;
_86.fld4 = Move(_83.3.fld4);
_44 = _51 & _86.fld2.0;
(*_64) = (-79861835879929761669390279418027247379_i128) as u8;
_83.3.fld4 = Adt24::Variant2 { fld0: _66,fld1: _72.0 };
(*_104) = 101150231577498572486190990533933463989_u128;
_21 = Field::<u16>(Variant(_37, 1), 0) >> _51;
(*_90) = [Field::<i8>(Variant(_83.3.fld4, 2), 0),Field::<i8>(Variant(_83.3.fld4, 2), 0),_66,_17,_66,_66,Field::<i8>(Variant(_83.3.fld4, 2), 0)];
_86.fld2 = Move(_83.3.fld2);
(*_35) = _83.0 * _83.0;
(*_49) = _9.1;
_14 = core::ptr::addr_of!((*_35));
_73.2 = core::ptr::addr_of!((*_53));
_86.fld2.1 = _77;
(*_35) = !_83.0;
(*_49) = _50 - _50;
match (*_104) {
0 => bb1,
1 => bb2,
101150231577498572486190990533933463989 => bb46,
_ => bb45
}
}
bb45 = {
_14 = core::ptr::addr_of!(_56.0);
Goto(bb31)
}
bb46 = {
(*_54) = _83.3.fld0.fld2;
_9.3 = &mut (*_54);
(*_90) = [_17,_66,Field::<i8>(Variant(_83.3.fld4, 2), 0),_17,_17,_17,_66];
_31 = (_16.0,);
_72.3 = &mut _83.3.fld0.fld2;
(*_35) = 2507716287_u32;
(*_104) = !269364384780906000922726994078305880272_u128;
_7 = [_46];
_63 = Move(_34);
(*_49) = _73.1 * _72.1;
(*_35) = !1983302696_u32;
_110 = _70;
_103 = Move(_55);
(*_35) = 2003353033_u32;
(*_64) = _70 as u8;
_30 = Move(_72.3);
(*_104) = 67965036554324574206451676532207387999_u128;
(*_90) = [_66,_17,_17,_17,_17,_66,_66];
(*_64) = _19 >> _65;
_37 = Adt23::Variant0 { fld0: 12072382531287373925_u64,fld1: _32,fld2: (*_64) };
place!(Field::<u8>(Variant(_37, 0), 2)) = (*_64) ^ (*_64);
RET = core::ptr::addr_of_mut!(_80.0);
(*_35) = 1976182543_u32 >> (*_64);
_73.0 = [7067596812374665135_u64,3649792755941588044_u64,6742327194123104433_u64,11819325955603970544_u64];
(*_53) = [_21,_21,_21];
_53 = core::ptr::addr_of_mut!(_2);
Goto(bb47)
}
bb47 = {
(*_90) = [_66,_17,_17,_17,_17,_17,_17];
_42 = !(*RET);
_1 = _50 * _73.1;
(*_64) = Field::<u8>(Variant(_37, 0), 2);
_109 = _22;
(*_64) = Field::<u8>(Variant(_37, 0), 2);
_11 = -_44;
(*RET) = _65 as i32;
_88 = (*_35);
Goto(bb48)
}
bb48 = {
_45 = _77;
(*_35) = _88 * _88;
_67 = Move(_54);
(*RET) = _16.0;
(*_90) = [_17,_66,_66,_66,_17,_17,_17];
(*_90) = [_17,_17,_66,_66,_17,_17,_66];
(*RET) = -_57.0;
(*_90) = [_66,_17,_17,_17,_66,_17,_66];
_75 = _22;
(*_104) = 4618446997783747344_u64 as u128;
_108 = 8131458990996926172_i64 * 4845009008227930903_i64;
(*_53) = _48;
_80.0 = _42 >> (*_35);
_47 = 91025710943816013502985737413961481503_i128 as u8;
(*_90) = [_66,_66,_17,_17,_17,_66,_17];
_24 = _21 + _65;
(*RET) = _42;
_80 = (_31.0,);
_99 = -_62;
_34 = core::ptr::addr_of!(_23);
(*_64) = Field::<u8>(Variant(_37, 0), 2);
_66 = _17 * _17;
Goto(bb49)
}
bb49 = {
_9.1 = (*_49);
(*_49) = 14654189955924722361_u64 as f32;
Goto(bb50)
}
bb50 = {
Call(_113 = dump_var(14_usize, 88_usize, Move(_88), 42_usize, Move(_42), 19_usize, Move(_19), 8_usize, Move(_8)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_113 = dump_var(14_usize, 33_usize, Move(_33), 77_usize, Move(_77), 59_usize, Move(_59), 5_usize, Move(_5)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_113 = dump_var(14_usize, 57_usize, Move(_57), 99_usize, Move(_99), 31_usize, Move(_31), 18_usize, Move(_18)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_113 = dump_var(14_usize, 21_usize, Move(_21), 26_usize, Move(_26), 110_usize, Move(_110), 51_usize, Move(_51)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_113 = dump_var(14_usize, 81_usize, Move(_81), 24_usize, Move(_24), 11_usize, Move(_11), 65_usize, Move(_65)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_113 = dump_var(14_usize, 28_usize, Move(_28), 85_usize, Move(_85), 46_usize, Move(_46), 80_usize, Move(_80)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: i32,mut _2: isize) -> *const (u32, *mut i32, isize) {
mir! {
type RET = *const (u32, *mut i32, isize);
let _3: Adt24;
let _4: *mut &'static mut &'static *mut bool;
let _5: [i64; 1];
let _6: (i32,);
let _7: (Adt17, u64, &'static u32, u64);
let _8: u32;
let _9: i64;
let _10: isize;
let _11: Adt23;
let _12: isize;
let _13: &'static *const Adt17;
let _14: &'static Adt25;
let _15: *mut Adt17;
let _16: *mut u8;
let _17: &'static mut u32;
let _18: (isize, bool, i16, *mut i32);
let _19: usize;
let _20: usize;
let _21: [u32; 1];
let _22: u16;
let _23: &'static &'static mut u64;
let _24: *const (u32, *mut i32, isize);
let _25: *mut isize;
let _26: i32;
let _27: &'static mut Adt36;
let _28: i8;
let _29: [i8; 7];
let _30: Adt68;
let _31: u32;
let _32: *const &'static mut u64;
let _33: [i64; 1];
let _34: isize;
let _35: *mut f32;
let _36: i16;
let _37: [bool; 4];
let _38: char;
let _39: isize;
let _40: u64;
let _41: Adt23;
let _42: isize;
let _43: u64;
let _44: &'static mut u32;
let _45: *const u128;
let _46: i32;
let _47: *const &'static i64;
let _48: u8;
let _49: [u32; 1];
let _50: isize;
let _51: *const &'static i64;
let _52: u64;
let _53: [i8; 8];
let _54: u64;
let _55: Adt68;
let _56: bool;
let _57: *const &'static i64;
let _58: &'static mut Adt36;
let _59: Adt17;
let _60: u128;
let _61: isize;
let _62: &'static u32;
let _63: bool;
let _64: *const [i8; 7];
let _65: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _66: i64;
let _67: bool;
let _68: &'static Adt23;
let _69: char;
let _70: Adt24;
let _71: *const u128;
let _72: i64;
let _73: [char; 8];
let _74: *const Adt17;
let _75: i8;
let _76: isize;
let _77: &'static i64;
let _78: isize;
let _79: char;
let _80: *const Adt17;
let _81: (u32, bool, u64, Adt36);
let _82: isize;
let _83: [u64; 4];
let _84: *const u128;
let _85: char;
let _86: f64;
let _87: i8;
let _88: char;
let _89: f32;
let _90: &'static u32;
let _91: *const *mut bool;
let _92: *mut isize;
let _93: isize;
let _94: &'static mut u32;
let _95: Adt24;
let _96: f32;
let _97: char;
let _98: *mut Adt17;
let _99: *mut i32;
let _100: bool;
let _101: isize;
let _102: bool;
let _103: (u32, *mut i32, isize);
let _104: isize;
let _105: f64;
let _106: [u64; 4];
let _107: *mut u128;
let _108: &'static &'static mut u64;
let _109: &'static Adt23;
let _110: char;
let _111: f64;
let _112: Adt68;
let _113: isize;
let _114: Adt23;
let _115: &'static mut u16;
let _116: *mut isize;
let _117: bool;
let _118: *const *mut bool;
let _119: char;
let _120: *const &'static mut u64;
let _121: f64;
let _122: *const [i8; 8];
let _123: [isize; 1];
let _124: Adt29;
let _125: Adt36;
let _126: char;
let _127: [i64; 1];
let _128: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _129: *const Adt36;
let _130: &'static *const Adt17;
let _131: (i32,);
let _132: ();
let _133: ();
{
Goto(bb1)
}
bb1 = {
_2 = 92_isize - (-9223372036854775808_isize);
_2 = (-69_i8) as isize;
_2 = (-53_isize);
_1 = !961105354_i32;
_2 = (-9223372036854775808_isize) & 70_isize;
_5 = [2343175017880431406_i64];
_2 = 9223372036854775807_isize + (-9223372036854775808_isize);
_2 = -109_isize;
_1 = (-481181869_i32) - 1536462389_i32;
_6.0 = -_1;
_6.0 = _1;
_2 = 198733707220267701738746695636471227463_u128 as isize;
_1 = -_6.0;
_6 = (_1,);
_7.1 = 5508313849392234691_u64 * 3285994092783769215_u64;
_3 = Adt24::Variant3 { fld0: 30_u8,fld1: _7.1 };
_7.1 = !Field::<u64>(Variant(_3, 3), 1);
_7.0.fld0 = 15568_u16 ^ 59946_u16;
_7.3 = _7.1 + _7.1;
_7.0.fld2 = 12086_i16 as f64;
_7.0.fld0 = 39489_u16 & 4691_u16;
_7.0.fld0 = 7097_u16 * 37453_u16;
_7.0.fld1 = '\u{9a2d0}' as u32;
Goto(bb2)
}
bb2 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb3 = {
_7.0.fld1 = _8;
_7.0.fld2 = _1 as f64;
_6 = (_1,);
place!(Field::<u8>(Variant(_3, 3), 0)) = 164_u8 ^ 179_u8;
_7.3 = _7.1 + Field::<u64>(Variant(_3, 3), 1);
_7.0.fld2 = (-27627_i16) as f64;
_7.1 = _7.3 ^ _7.3;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: 23100_i16,fld2: Field::<u8>(Variant(_3, 3), 0) };
match _2 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb4 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb5 = {
_2 = 92_isize - (-9223372036854775808_isize);
_2 = (-69_i8) as isize;
_2 = (-53_isize);
_1 = !961105354_i32;
_2 = (-9223372036854775808_isize) & 70_isize;
_5 = [2343175017880431406_i64];
_2 = 9223372036854775807_isize + (-9223372036854775808_isize);
_2 = -109_isize;
_1 = (-481181869_i32) - 1536462389_i32;
_6.0 = -_1;
_6.0 = _1;
_2 = 198733707220267701738746695636471227463_u128 as isize;
_1 = -_6.0;
_6 = (_1,);
_7.1 = 5508313849392234691_u64 * 3285994092783769215_u64;
_3 = Adt24::Variant3 { fld0: 30_u8,fld1: _7.1 };
_7.1 = !Field::<u64>(Variant(_3, 3), 1);
_7.0.fld0 = 15568_u16 ^ 59946_u16;
_7.3 = _7.1 + _7.1;
_7.0.fld2 = 12086_i16 as f64;
_7.0.fld0 = 39489_u16 & 4691_u16;
_7.0.fld0 = 7097_u16 * 37453_u16;
_7.0.fld1 = '\u{9a2d0}' as u32;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6.0 = _1;
place!(Field::<u64>(Variant(_11, 0), 0)) = _7.1 >> _1;
_2 = _10 - _12;
_7.3 = !Field::<u64>(Variant(_11, 0), 0);
_6.0 = _1 & _1;
_7.3 = _7.1;
_16 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_11, 0), 2)));
_12 = _2;
Goto(bb11)
}
bb11 = {
_9 = (-7727548715524973758_i64) * 4716815785168399584_i64;
(*_16) = Field::<u8>(Variant(_3, 3), 0);
place!(Field::<u8>(Variant(_11, 0), 2)) = Field::<u8>(Variant(_3, 3), 0) ^ Field::<u8>(Variant(_3, 3), 0);
_7.0.fld2 = _7.0.fld0 as f64;
place!(Field::<i16>(Variant(_11, 0), 1)) = '\u{cf484}' as i16;
_5 = [_9];
_6 = (_1,);
(*_16) = Field::<u8>(Variant(_3, 3), 0) ^ Field::<u8>(Variant(_3, 3), 0);
_18.3 = core::ptr::addr_of_mut!(_1);
_18.1 = _7.3 != Field::<u64>(Variant(_11, 0), 0);
_17 = &mut _7.0.fld1;
Goto(bb12)
}
bb12 = {
(*_17) = _8 + _8;
_18.0 = Field::<u64>(Variant(_11, 0), 0) as isize;
(*_17) = _1 as u32;
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = !Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0);
_20 = 4_usize + 5207893467125014111_usize;
(*_16) = _2 as u8;
(*_17) = _8 | _8;
_9 = 4719962520689567847_i64 + 7897881424323193208_i64;
(*_17) = _8 - _8;
(*_17) = _6.0 as u32;
(*_16) = Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0) + Field::<u8>(Variant(_3, 3), 0);
_1 = _18.1 as i32;
_2 = _18.0 - _12;
(*_16) = Field::<u8>(Variant(_3, 3), 0) - Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0);
_11 = Adt23::Variant1 { fld0: 12200_u16,fld1: Move(_18.3) };
_17 = &mut _8;
(*_17) = 2521662992_u32 >> _2;
(*_17) = 605445396_u32;
_21 = [(*_17)];
(*_17) = 555089657_u32;
Call((*_17) = fn16(Move(_16), _10, Move(Field::<*mut i32>(Variant(_11, 1), 1)), _18.1, _21), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_20 = _12 as usize;
(*_17) = 4189855810_u32;
(*_17) = '\u{c9a2b}' as u32;
(*_17) = _12 as u32;
_22 = Field::<u64>(Variant(_3, 3), 1) as u16;
Goto(bb14)
}
bb14 = {
_18.2 = (-15446_i16);
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
(*_17) = 2197188097_u32 ^ 565936703_u32;
(*_17) = !1469997173_u32;
(*_17) = 3521158608_u32;
_18.3 = core::ptr::addr_of_mut!(_6.0);
Goto(bb15)
}
bb15 = {
(*_17) = !2915937338_u32;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
_2 = _18.1 as isize;
_21 = [(*_17)];
place!(Field::<u8>(Variant(_3, 3), 0)) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
_6 = (_1,);
_18.2 = Field::<i16>(Variant(_11, 0), 1) << _18.0;
match Field::<i16>(Variant(_11, 0), 1) {
340282366920938463463374607431768196010 => bb16,
_ => bb7
}
}
bb16 = {
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_11, 0), 2);
_6.0 = _1 - _1;
(*_17) = 1912003056_u32 & 3648788446_u32;
Call(place!(Field::<u64>(Variant(_3, 3), 1)) = core::intrinsics::transmute(_9), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
place!(Field::<u8>(Variant(_11, 0), 2)) = !Field::<u8>(Variant(_3, 3), 0);
_16 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_3, 3), 0)));
(*_17) = 3472756569_u32 | 2271353187_u32;
_18.3 = core::ptr::addr_of_mut!(_6.0);
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
(*_17) = 1202946733_u32 & 1677427197_u32;
_29 = [20_i8,66_i8,(-123_i8),61_i8,(-51_i8),(-12_i8),(-4_i8)];
(*_17) = 121_i8 as u32;
(*_17) = 2150293660_u32 << _6.0;
_26 = _1 - _6.0;
(*_16) = Field::<u8>(Variant(_11, 0), 2) | Field::<u8>(Variant(_11, 0), 2);
_25 = core::ptr::addr_of_mut!(_12);
(*_25) = _1 as isize;
(*_25) = (*_16) as isize;
(*_25) = _22 as isize;
(*_16) = 254017624481403622876929536312875301986_u128 as u8;
(*_16) = Field::<u8>(Variant(_11, 0), 2);
(*_17) = 2990605480_u32;
(*_17) = !3272972862_u32;
_19 = (-145771480581431882230816153235504650314_i128) as usize;
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
(*_25) = _18.0 | _2;
Goto(bb18)
}
bb18 = {
_12 = _2 | _18.0;
_6 = (_1,);
(*_25) = _18.0 << (*_16);
(*_25) = _2 ^ _10;
(*_25) = _10 ^ _2;
Goto(bb19)
}
bb19 = {
(*_16) = 99_u8 * 19_u8;
(*_17) = 1210001749_u32 >> (*_25);
(*_25) = _2 | _2;
_16 = core::ptr::addr_of_mut!((*_16));
(*_25) = (*_16) as isize;
_6 = (_26,);
Goto(bb20)
}
bb20 = {
(*_25) = !_2;
(*_17) = 4245001295_u32 + 240680219_u32;
(*_25) = _2;
(*_25) = _20 as isize;
(*_16) = 113_u8 & 176_u8;
(*_25) = _18.0 * _2;
(*_25) = 102592935717910733908393566110574480510_u128 as isize;
_18 = ((*_25), true, (-11647_i16), Move(Field::<*mut i32>(Variant(_11, 1), 1)));
(*_25) = _10 >> _26;
match _18.2 {
0 => bb10,
1 => bb15,
340282366920938463463374607431768199809 => bb21,
_ => bb16
}
}
bb21 = {
(*_25) = -_2;
_10 = _2 - (*_25);
(*_25) = (*_16) as isize;
(*_25) = _2 ^ _10;
_37 = [_18.1,_18.1,_18.1,_18.1];
(*_25) = _2;
(*_16) = 198_u8 & 216_u8;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: (*_16) };
(*_16) = Field::<u8>(Variant(_11, 0), 2);
_18.2 = !Field::<i16>(Variant(_11, 0), 1);
_36 = _22 as i16;
(*_17) = 711837946_u32;
(*_17) = !2142436518_u32;
(*_16) = Field::<u8>(Variant(_11, 0), 2) + Field::<u8>(Variant(_11, 0), 2);
_34 = -(*_25);
_26 = -_6.0;
(*_16) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
(*_17) = 1919242736_u32;
(*_16) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
_43 = Field::<u64>(Variant(_11, 0), 0) | Field::<u64>(Variant(_11, 0), 0);
(*_25) = !_10;
match Field::<i16>(Variant(_11, 0), 1) {
0 => bb10,
1 => bb6,
2 => bb19,
3 => bb17,
4 => bb22,
5 => bb23,
6 => bb24,
340282366920938463463374607431768199809 => bb26,
_ => bb25
}
}
bb22 = {
_7.0.fld1 = _8;
_7.0.fld2 = _1 as f64;
_6 = (_1,);
place!(Field::<u8>(Variant(_3, 3), 0)) = 164_u8 ^ 179_u8;
_7.3 = _7.1 + Field::<u64>(Variant(_3, 3), 1);
_7.0.fld2 = (-27627_i16) as f64;
_7.1 = _7.3 ^ _7.3;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: 23100_i16,fld2: Field::<u8>(Variant(_3, 3), 0) };
match _2 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb23 = {
Return()
}
bb24 = {
_12 = _2 | _18.0;
_6 = (_1,);
(*_25) = _18.0 << (*_16);
(*_25) = _2 ^ _10;
(*_25) = _10 ^ _2;
Goto(bb19)
}
bb25 = {
place!(Field::<u8>(Variant(_11, 0), 2)) = !Field::<u8>(Variant(_3, 3), 0);
_16 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_3, 3), 0)));
(*_17) = 3472756569_u32 | 2271353187_u32;
_18.3 = core::ptr::addr_of_mut!(_6.0);
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
(*_17) = 1202946733_u32 & 1677427197_u32;
_29 = [20_i8,66_i8,(-123_i8),61_i8,(-51_i8),(-12_i8),(-4_i8)];
(*_17) = 121_i8 as u32;
(*_17) = 2150293660_u32 << _6.0;
_26 = _1 - _6.0;
(*_16) = Field::<u8>(Variant(_11, 0), 2) | Field::<u8>(Variant(_11, 0), 2);
_25 = core::ptr::addr_of_mut!(_12);
(*_25) = _1 as isize;
(*_25) = (*_16) as isize;
(*_25) = _22 as isize;
(*_16) = 254017624481403622876929536312875301986_u128 as u8;
(*_16) = Field::<u8>(Variant(_11, 0), 2);
(*_17) = 2990605480_u32;
(*_17) = !3272972862_u32;
_19 = (-145771480581431882230816153235504650314_i128) as usize;
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
(*_25) = _18.0 | _2;
Goto(bb18)
}
bb26 = {
(*_16) = Field::<u8>(Variant(_11, 0), 2) - Field::<u8>(Variant(_11, 0), 2);
_2 = _10 * (*_25);
_42 = -(*_25);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_37 = [_18.1,_18.1,_18.1,_18.1];
_41 = Adt23::Variant0 { fld0: _43,fld1: _18.2,fld2: (*_16) };
_44 = &mut (*_17);
_39 = (*_25);
(*_44) = 4114145334_u32;
(*_16) = Field::<u8>(Variant(_41, 0), 2) ^ Field::<u8>(Variant(_41, 0), 2);
(*_44) = 407021303_u32 & 2614279529_u32;
(*_44) = _18.1 as u32;
(*_25) = _42;
Goto(bb27)
}
bb27 = {
_38 = '\u{161c5}';
place!(Field::<i16>(Variant(_41, 0), 1)) = _18.2;
_34 = (*_25);
_31 = (*_44);
_1 = _26;
Goto(bb28)
}
bb28 = {
(*_44) = _31 >> (*_25);
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_29 = [(-56_i8),30_i8,55_i8,(-116_i8),(-121_i8),(-73_i8),(-107_i8)];
(*_16) = Field::<u8>(Variant(_41, 0), 2) * Field::<u8>(Variant(_41, 0), 2);
(*_25) = _42;
_40 = _43 ^ Field::<u64>(Variant(_3, 3), 1);
(*_44) = !_31;
_28 = (-47_i8);
_12 = _10 << (*_44);
place!(Field::<u8>(Variant(_3, 3), 0)) = Field::<u8>(Variant(_41, 0), 2) ^ Field::<u8>(Variant(_41, 0), 2);
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
(*_44) = _31 | _31;
(*_44) = _31 ^ _31;
(*_16) = 275759943233296159479775113196979487156_u128 as u8;
(*_25) = _10;
_12 = _2;
_46 = !_1;
place!(Field::<u8>(Variant(_41, 0), 2)) = (*_16) << _18.2;
(*_44) = _18.2 as u32;
(*_16) = Field::<u8>(Variant(_41, 0), 2);
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_46 = _26 >> (*_25);
_9 = (-196392391917403457_i64);
_49 = _21;
(*_16) = _38 as u8;
(*_25) = _10 - _2;
match _9 {
0 => bb21,
1 => bb17,
2 => bb11,
3 => bb12,
4 => bb29,
5 => bb30,
6 => bb31,
340282366920938463463178215039850807999 => bb33,
_ => bb32
}
}
bb29 = {
_7.0.fld1 = _8;
_7.0.fld2 = _1 as f64;
_6 = (_1,);
place!(Field::<u8>(Variant(_3, 3), 0)) = 164_u8 ^ 179_u8;
_7.3 = _7.1 + Field::<u64>(Variant(_3, 3), 1);
_7.0.fld2 = (-27627_i16) as f64;
_7.1 = _7.3 ^ _7.3;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: 23100_i16,fld2: Field::<u8>(Variant(_3, 3), 0) };
match _2 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb30 = {
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_11, 0), 2);
_6.0 = _1 - _1;
(*_17) = 1912003056_u32 & 3648788446_u32;
Call(place!(Field::<u64>(Variant(_3, 3), 1)) = core::intrinsics::transmute(_9), ReturnTo(bb17), UnwindUnreachable())
}
bb31 = {
(*_16) = 99_u8 * 19_u8;
(*_17) = 1210001749_u32 >> (*_25);
(*_25) = _2 | _2;
_16 = core::ptr::addr_of_mut!((*_16));
(*_25) = (*_16) as isize;
_6 = (_26,);
Goto(bb20)
}
bb32 = {
_12 = _2 | _18.0;
_6 = (_1,);
(*_25) = _18.0 << (*_16);
(*_25) = _2 ^ _10;
(*_25) = _10 ^ _2;
Goto(bb19)
}
bb33 = {
_19 = _20 * _20;
_12 = (*_44) as isize;
_36 = Field::<i16>(Variant(_41, 0), 1);
_43 = Field::<u64>(Variant(_41, 0), 0);
(*_44) = _31;
(*_25) = !_10;
(*_16) = Field::<u8>(Variant(_41, 0), 2);
(*_16) = 47319033761600098455908448536181320281_i128 as u8;
(*_16) = Field::<u8>(Variant(_41, 0), 2) << (*_44);
(*_25) = _42;
(*_25) = _2;
_50 = _1 as isize;
(*_44) = _22 as u32;
_18.2 = _36 - _36;
(*_16) = Field::<u8>(Variant(_41, 0), 2) - Field::<u8>(Variant(_41, 0), 2);
(*_25) = _2;
(*_25) = _42 & _2;
(*_25) = _50;
_49 = [(*_44)];
_2 = (*_25) - (*_25);
_26 = -_46;
_11 = Move(_41);
_41 = Move(_11);
_36 = _18.2 << _50;
(*_44) = _31 & _31;
(*_25) = -_50;
_31 = (-12107239171347354480765995306502958834_i128) as u32;
match _9 {
0 => bb10,
1 => bb22,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb6,
340282366920938463463178215039850807999 => bb34,
_ => bb7
}
}
bb34 = {
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = Field::<u8>(Variant(_41, 0), 2) | Field::<u8>(Variant(_41, 0), 2);
(*_25) = !_34;
(*_44) = !_31;
_6 = (_46,);
_34 = (*_25) + (*_25);
(*_25) = _39;
(*_16) = (-99447493034028405762872688981280303230_i128) as u8;
_2 = (*_25) & (*_25);
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_18.0 = (*_25) | _42;
(*_44) = _31 | _31;
(*_25) = _42;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44);
_31 = !(*_44);
(*_16) = Field::<u8>(Variant(_41, 0), 2) * Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
(*_16) = Field::<u8>(Variant(_41, 0), 2) & Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
_49 = _21;
_56 = _18.1;
(*_44) = _31 - _31;
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_41, 0), 2);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_54 = _43;
match _9 {
0 => bb25,
1 => bb2,
2 => bb23,
3 => bb21,
4 => bb5,
5 => bb17,
6 => bb30,
340282366920938463463178215039850807999 => bb35,
_ => bb8
}
}
bb35 = {
_52 = _9 as u64;
_25 = core::ptr::addr_of_mut!((*_25));
(*_44) = !_31;
(*_44) = _31 * _31;
_41 = Adt23::Variant0 { fld0: _43,fld1: _36,fld2: (*_16) };
(*_25) = -_39;
_53 = [_28,_28,_28,_28,_28,_28,_28,_28];
_18.3 = Move(Field::<*mut i32>(Variant(_11, 1), 1));
(*_25) = _18.0 ^ _50;
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
(*_16) = (*_25) as u8;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44) & (*_44);
(*_25) = _18.0 & _2;
(*_25) = _2;
(*_44) = _31;
_38 = '\u{c724a}';
_45 = core::ptr::addr_of!(_60);
(*_25) = _9 as isize;
(*_44) = _18.1 as u32;
(*_45) = !125187740643490154897268117822028466225_u128;
(*_16) = Field::<u64>(Variant(_41, 0), 0) as u8;
(*_25) = _2;
(*_25) = !_18.0;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
Goto(bb36)
}
bb36 = {
_41 = Adt23::Variant0 { fld0: _40,fld1: _36,fld2: (*_16) };
(*_25) = (*_44) as isize;
_6.0 = _26 - _26;
_18 = ((*_25), _56, _36, Move(Field::<*mut i32>(Variant(_11, 1), 1)));
_20 = _19 - _19;
_62 = &(*_44);
(*_44) = _31;
_17 = &mut _31;
_45 = core::ptr::addr_of!((*_45));
_25 = core::ptr::addr_of_mut!(_39);
(*_25) = _2 | _2;
_62 = &(*_17);
(*_25) = _2 & _18.0;
(*_44) = (*_17);
_44 = &mut (*_17);
(*_16) = Field::<i16>(Variant(_41, 0), 1) as u8;
(*_25) = _12 * _2;
_61 = (*_25);
(*_25) = -_12;
_37 = [_56,_56,_56,_56];
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_11 = Move(_41);
_39 = _28 as isize;
match _28 {
340282366920938463463374607431768211409 => bb38,
_ => bb37
}
}
bb37 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb38 = {
(*_45) = 18520593265107009267406851323313769942_u128;
(*_45) = !166203805592834193499717027166733069936_u128;
_65.1.3.fld2.1 = (*_16) == (*_16);
_40 = _43 & Field::<u64>(Variant(_11, 0), 0);
_65.1.3.fld1 = _38;
_65.1.3.fld0.fld2 = _65.1.3.fld1 as u64;
_65.1.3.fld0.fld0 = !_20;
_48 = (*_16) << Field::<i16>(Variant(_11, 0), 1);
_59.fld2 = _22 as f64;
_18.3 = core::ptr::addr_of_mut!(_1);
_63 = Field::<i16>(Variant(_11, 0), 1) > _18.2;
_65.1.3.fld0.fld1 = core::ptr::addr_of_mut!(_59);
(*_25) = _18.0 + _42;
_25 = core::ptr::addr_of_mut!((*_25));
(*_16) = !_48;
(*_16) = _22 as u8;
_19 = _20;
(*_16) = Field::<u8>(Variant(_11, 0), 2);
Goto(bb39)
}
bb39 = {
(*_45) = _28 as u128;
Goto(bb40)
}
bb40 = {
(*_16) = !_48;
(*_25) = _18.0 << _26;
_65.1.2 = Field::<u64>(Variant(_3, 3), 1);
(*_16) = !_48;
(*_16) = !_48;
_65.1.3.fld0.fld1 = core::ptr::addr_of_mut!(_59);
_67 = _1 < _6.0;
_65.1.1 = !_18.1;
(*_25) = _63 as isize;
(*_45) = 57874413275485882813144400229712599014_u128 - 193245225332195988119335727984043950499_u128;
_65.1.3.fld2 = Move(_18);
_65.1.3.fld2.2 = Field::<i16>(Variant(_11, 0), 1);
_44 = Move(_17);
(*_16) = Field::<u8>(Variant(_11, 0), 2) - _48;
_65.1.3.fld2.1 = (*_16) == (*_16);
Goto(bb41)
}
bb41 = {
(*_25) = _2 * _34;
(*_45) = 258055900837688725834707102303748921149_u128;
_65.1.3.fld2.1 = _63;
_18.2 = (*_45) as i16;
_46 = _26 ^ _26;
_66 = _9 & _9;
(*_45) = 246274483884501330726355580104448090598_u128 & 77374792678613372159730879100728215429_u128;
(*_25) = _61 >> (*_16);
match _28 {
0 => bb42,
1 => bb43,
340282366920938463463374607431768211409 => bb45,
_ => bb44
}
}
bb42 = {
Return()
}
bb43 = {
(*_45) = _28 as u128;
Goto(bb40)
}
bb44 = {
_7.0.fld1 = _8;
_7.0.fld2 = _1 as f64;
_6 = (_1,);
place!(Field::<u8>(Variant(_3, 3), 0)) = 164_u8 ^ 179_u8;
_7.3 = _7.1 + Field::<u64>(Variant(_3, 3), 1);
_7.0.fld2 = (-27627_i16) as f64;
_7.1 = _7.3 ^ _7.3;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: 23100_i16,fld2: Field::<u8>(Variant(_3, 3), 0) };
match _2 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb45 = {
(*_45) = 257686172194578991593680770971999054956_u128;
_65.3 = !1237742087_u32;
(*_45) = 166803785176088124713004640748230055002_u128;
_59.fld1 = _65.3 | _65.3;
_65.1.1 = _56;
_65.1.3.fld0.fld4 = Field::<i16>(Variant(_11, 0), 1) - _65.1.3.fld2.2;
_29 = [_28,_28,_28,_28,_28,_28,_28];
_65.1.3.fld2.0 = _59.fld2 as isize;
(*_25) = _61 << (*_16);
(*_25) = _61;
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
_50 = _39;
(*_45) = 110074493502875505295536560429686362641_u128 | 136460753013027164570302019569273485422_u128;
_50 = _2 - (*_25);
_65.1.3.fld2.3 = core::ptr::addr_of_mut!(_46);
_61 = (*_25);
(*_16) = Field::<u8>(Variant(_11, 0), 2) << _10;
_70 = Move(_3);
_65.1.3.fld0.fld3 = _67 as u128;
(*_45) = _65.1.3.fld0.fld3 >> (*_25);
(*_25) = !_12;
(*_45) = _26 as u128;
match _9 {
0 => bb28,
1 => bb46,
2 => bb47,
3 => bb48,
340282366920938463463178215039850807999 => bb50,
_ => bb49
}
}
bb46 = {
(*_45) = _28 as u128;
Goto(bb40)
}
bb47 = {
(*_17) = !2915937338_u32;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
_2 = _18.1 as isize;
_21 = [(*_17)];
place!(Field::<u8>(Variant(_3, 3), 0)) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
_6 = (_1,);
_18.2 = Field::<i16>(Variant(_11, 0), 1) << _18.0;
match Field::<i16>(Variant(_11, 0), 1) {
340282366920938463463374607431768196010 => bb16,
_ => bb7
}
}
bb48 = {
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_11, 0), 2);
_6.0 = _1 - _1;
(*_17) = 1912003056_u32 & 3648788446_u32;
Call(place!(Field::<u64>(Variant(_3, 3), 1)) = core::intrinsics::transmute(_9), ReturnTo(bb17), UnwindUnreachable())
}
bb49 = {
(*_16) = 99_u8 * 19_u8;
(*_17) = 1210001749_u32 >> (*_25);
(*_25) = _2 | _2;
_16 = core::ptr::addr_of_mut!((*_16));
(*_25) = (*_16) as isize;
_6 = (_26,);
Goto(bb20)
}
bb50 = {
_19 = _65.1.3.fld0.fld0 >> (*_45);
_19 = _65.1.3.fld0.fld0;
(*_45) = (-82403364313868391664929251191650284340_i128) as u128;
match _9 {
0 => bb37,
1 => bb51,
2 => bb52,
3 => bb53,
4 => bb54,
340282366920938463463178215039850807999 => bb56,
_ => bb55
}
}
bb51 = {
_41 = Adt23::Variant0 { fld0: _40,fld1: _36,fld2: (*_16) };
(*_25) = (*_44) as isize;
_6.0 = _26 - _26;
_18 = ((*_25), _56, _36, Move(Field::<*mut i32>(Variant(_11, 1), 1)));
_20 = _19 - _19;
_62 = &(*_44);
(*_44) = _31;
_17 = &mut _31;
_45 = core::ptr::addr_of!((*_45));
_25 = core::ptr::addr_of_mut!(_39);
(*_25) = _2 | _2;
_62 = &(*_17);
(*_25) = _2 & _18.0;
(*_44) = (*_17);
_44 = &mut (*_17);
(*_16) = Field::<i16>(Variant(_41, 0), 1) as u8;
(*_25) = _12 * _2;
_61 = (*_25);
(*_25) = -_12;
_37 = [_56,_56,_56,_56];
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_11 = Move(_41);
_39 = _28 as isize;
match _28 {
340282366920938463463374607431768211409 => bb38,
_ => bb37
}
}
bb52 = {
(*_17) = !2915937338_u32;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
_2 = _18.1 as isize;
_21 = [(*_17)];
place!(Field::<u8>(Variant(_3, 3), 0)) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
_6 = (_1,);
_18.2 = Field::<i16>(Variant(_11, 0), 1) << _18.0;
match Field::<i16>(Variant(_11, 0), 1) {
340282366920938463463374607431768196010 => bb16,
_ => bb7
}
}
bb53 = {
(*_17) = !2915937338_u32;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
_2 = _18.1 as isize;
_21 = [(*_17)];
place!(Field::<u8>(Variant(_3, 3), 0)) = Field::<u8>(Variant(_11, 0), 2) & Field::<u8>(Variant(_11, 0), 2);
_6 = (_1,);
_18.2 = Field::<i16>(Variant(_11, 0), 1) << _18.0;
match Field::<i16>(Variant(_11, 0), 1) {
340282366920938463463374607431768196010 => bb16,
_ => bb7
}
}
bb54 = {
(*_17) = _8 + _8;
_18.0 = Field::<u64>(Variant(_11, 0), 0) as isize;
(*_17) = _1 as u32;
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = !Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0);
_20 = 4_usize + 5207893467125014111_usize;
(*_16) = _2 as u8;
(*_17) = _8 | _8;
_9 = 4719962520689567847_i64 + 7897881424323193208_i64;
(*_17) = _8 - _8;
(*_17) = _6.0 as u32;
(*_16) = Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0) + Field::<u8>(Variant(_3, 3), 0);
_1 = _18.1 as i32;
_2 = _18.0 - _12;
(*_16) = Field::<u8>(Variant(_3, 3), 0) - Field::<u8>(Variant(_3, 3), 0);
(*_16) = Field::<u8>(Variant(_3, 3), 0);
_11 = Adt23::Variant1 { fld0: 12200_u16,fld1: Move(_18.3) };
_17 = &mut _8;
(*_17) = 2521662992_u32 >> _2;
(*_17) = 605445396_u32;
_21 = [(*_17)];
(*_17) = 555089657_u32;
Call((*_17) = fn16(Move(_16), _10, Move(Field::<*mut i32>(Variant(_11, 1), 1)), _18.1, _21), ReturnTo(bb13), UnwindUnreachable())
}
bb55 = {
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = Field::<u8>(Variant(_41, 0), 2) | Field::<u8>(Variant(_41, 0), 2);
(*_25) = !_34;
(*_44) = !_31;
_6 = (_46,);
_34 = (*_25) + (*_25);
(*_25) = _39;
(*_16) = (-99447493034028405762872688981280303230_i128) as u8;
_2 = (*_25) & (*_25);
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_18.0 = (*_25) | _42;
(*_44) = _31 | _31;
(*_25) = _42;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44);
_31 = !(*_44);
(*_16) = Field::<u8>(Variant(_41, 0), 2) * Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
(*_16) = Field::<u8>(Variant(_41, 0), 2) & Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
_49 = _21;
_56 = _18.1;
(*_44) = _31 - _31;
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_41, 0), 2);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_54 = _43;
match _9 {
0 => bb25,
1 => bb2,
2 => bb23,
3 => bb21,
4 => bb5,
5 => bb17,
6 => bb30,
340282366920938463463178215039850807999 => bb35,
_ => bb8
}
}
bb56 = {
_65.1.3.fld2.3 = core::ptr::addr_of_mut!(_26);
_18.1 = _63;
_65.1.3.fld0.fld2 = _65.1.2 ^ _54;
(*_45) = !_65.1.3.fld0.fld3;
_65.1.3.fld3 = core::ptr::addr_of!(_65.1.0);
_25 = core::ptr::addr_of_mut!((*_25));
(*_16) = Field::<u8>(Variant(_70, 3), 0) << (*_45);
(*_16) = _48 << (*_45);
Goto(bb57)
}
bb57 = {
_65.1.3.fld2.2 = _65.1.3.fld0.fld4 * Field::<i16>(Variant(_11, 0), 1);
_43 = _54 ^ _65.1.3.fld0.fld2;
(*_16) = _67 as u8;
_6 = (_26,);
_68 = &_11;
(*_45) = _28 as u128;
_21 = _49;
_33 = [_66];
(*_25) = _34;
(*_25) = -_61;
_73 = [_65.1.3.fld1,_38,_65.1.3.fld1,_38,_38,_38,_38,_38];
(*_45) = _1 as u128;
_19 = _65.1.3.fld0.fld0;
match _9 {
0 => bb36,
1 => bb49,
2 => bb35,
3 => bb58,
4 => bb59,
5 => bb60,
6 => bb61,
340282366920938463463178215039850807999 => bb63,
_ => bb62
}
}
bb58 = {
_65.1.3.fld2.3 = core::ptr::addr_of_mut!(_26);
_18.1 = _63;
_65.1.3.fld0.fld2 = _65.1.2 ^ _54;
(*_45) = !_65.1.3.fld0.fld3;
_65.1.3.fld3 = core::ptr::addr_of!(_65.1.0);
_25 = core::ptr::addr_of_mut!((*_25));
(*_16) = Field::<u8>(Variant(_70, 3), 0) << (*_45);
(*_16) = _48 << (*_45);
Goto(bb57)
}
bb59 = {
_18.2 = (-15446_i16);
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: _18.2,fld2: Field::<u8>(Variant(_3, 3), 0) };
(*_17) = 2197188097_u32 ^ 565936703_u32;
(*_17) = !1469997173_u32;
(*_17) = 3521158608_u32;
_18.3 = core::ptr::addr_of_mut!(_6.0);
Goto(bb15)
}
bb60 = {
_52 = _9 as u64;
_25 = core::ptr::addr_of_mut!((*_25));
(*_44) = !_31;
(*_44) = _31 * _31;
_41 = Adt23::Variant0 { fld0: _43,fld1: _36,fld2: (*_16) };
(*_25) = -_39;
_53 = [_28,_28,_28,_28,_28,_28,_28,_28];
_18.3 = Move(Field::<*mut i32>(Variant(_11, 1), 1));
(*_25) = _18.0 ^ _50;
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
(*_16) = (*_25) as u8;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44) & (*_44);
(*_25) = _18.0 & _2;
(*_25) = _2;
(*_44) = _31;
_38 = '\u{c724a}';
_45 = core::ptr::addr_of!(_60);
(*_25) = _9 as isize;
(*_44) = _18.1 as u32;
(*_45) = !125187740643490154897268117822028466225_u128;
(*_16) = Field::<u64>(Variant(_41, 0), 0) as u8;
(*_25) = _2;
(*_25) = !_18.0;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
Goto(bb36)
}
bb61 = {
Return()
}
bb62 = {
(*_16) = Field::<u8>(Variant(_11, 0), 2) - Field::<u8>(Variant(_11, 0), 2);
_2 = _10 * (*_25);
_42 = -(*_25);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_37 = [_18.1,_18.1,_18.1,_18.1];
_41 = Adt23::Variant0 { fld0: _43,fld1: _18.2,fld2: (*_16) };
_44 = &mut (*_17);
_39 = (*_25);
(*_44) = 4114145334_u32;
(*_16) = Field::<u8>(Variant(_41, 0), 2) ^ Field::<u8>(Variant(_41, 0), 2);
(*_44) = 407021303_u32 & 2614279529_u32;
(*_44) = _18.1 as u32;
(*_25) = _42;
Goto(bb27)
}
bb63 = {
(*_25) = _2 - _12;
_56 = _65.1.3.fld2.2 >= Field::<i16>(Variant((*_68), 0), 1);
(*_16) = _19 as u8;
_64 = core::ptr::addr_of!(_29);
(*_25) = !_2;
_78 = (*_25) ^ (*_25);
_75 = _28 | _28;
(*_45) = _26 as u128;
_76 = (*_25);
(*_16) = _65.1.3.fld2.2 as u8;
_18 = (_10, _63, Field::<i16>(Variant((*_68), 0), 1), Move(_65.1.3.fld2.3));
_18.2 = Field::<i16>(Variant((*_68), 0), 1) | Field::<i16>(Variant((*_68), 0), 1);
(*_16) = _48 << (*_45);
_16 = core::ptr::addr_of_mut!((*_16));
_25 = core::ptr::addr_of_mut!(_50);
_17 = &mut _59.fld1;
_77 = &_66;
(*_45) = (*_77) as u128;
_18.2 = !Field::<i16>(Variant((*_68), 0), 1);
_83 = [Field::<u64>(Variant((*_68), 0), 0),Field::<u64>(Variant((*_68), 0), 0),Field::<u64>(Variant((*_68), 0), 0),Field::<u64>(Variant((*_68), 0), 0)];
_81.3.fld2.0 = Field::<i16>(Variant((*_68), 0), 1) as isize;
place!(Field::<u8>(Variant(_70, 3), 0)) = Field::<u8>(Variant((*_68), 0), 2);
(*_45) = !_65.1.3.fld0.fld3;
_81.3.fld2.3 = core::ptr::addr_of_mut!(_26);
_81.3.fld2.2 = Field::<i16>(Variant((*_68), 0), 1) - Field::<i16>(Variant((*_68), 0), 1);
_60 = _65.1.3.fld0.fld3;
Call(_81.3.fld0.fld3 = core::intrinsics::transmute((*_45)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
_25 = core::ptr::addr_of_mut!((*_25));
_26 = -_6.0;
_60 = (-149322199432092387464886905971092610877_i128) as u128;
_81.0 = (*_17) >> Field::<u8>(Variant((*_68), 0), 2);
(*_17) = (*_16) as u32;
(*_17) = Field::<u64>(Variant((*_68), 0), 0) as u32;
_15 = Move(_65.1.3.fld0.fld1);
(*_45) = _81.3.fld0.fld3;
(*_25) = _81.3.fld2.0 << (*_45);
Goto(bb65)
}
bb65 = {
_69 = _65.1.3.fld1;
(*_45) = _65.1.3.fld0.fld3 & _81.3.fld0.fld3;
(*_16) = Field::<u8>(Variant((*_68), 0), 2) | Field::<u8>(Variant((*_68), 0), 2);
(*_16) = Field::<u8>(Variant((*_68), 0), 2) * _48;
_25 = core::ptr::addr_of_mut!((*_25));
_81.3.fld2.3 = core::ptr::addr_of_mut!(_26);
_52 = Field::<u64>(Variant((*_68), 0), 0);
(*_25) = !_12;
(*_16) = !Field::<u8>(Variant((*_68), 0), 2);
_6.0 = _26;
_81.3.fld4 = Move(_70);
(*_45) = _65.1.3.fld0.fld3;
(*_25) = _42 + _81.3.fld2.0;
_38 = _69;
place!(Field::<u8>(Variant(_81.3.fld4, 3), 0)) = !(*_16);
(*_45) = !_65.1.3.fld0.fld3;
(*_45) = _65.1.3.fld0.fld3 & _81.3.fld0.fld3;
match _28 {
0 => bb58,
1 => bb66,
2 => bb67,
3 => bb68,
340282366920938463463374607431768211409 => bb70,
_ => bb69
}
}
bb66 = {
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = Field::<u8>(Variant(_41, 0), 2) | Field::<u8>(Variant(_41, 0), 2);
(*_25) = !_34;
(*_44) = !_31;
_6 = (_46,);
_34 = (*_25) + (*_25);
(*_25) = _39;
(*_16) = (-99447493034028405762872688981280303230_i128) as u8;
_2 = (*_25) & (*_25);
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_18.0 = (*_25) | _42;
(*_44) = _31 | _31;
(*_25) = _42;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44);
_31 = !(*_44);
(*_16) = Field::<u8>(Variant(_41, 0), 2) * Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
(*_16) = Field::<u8>(Variant(_41, 0), 2) & Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
_49 = _21;
_56 = _18.1;
(*_44) = _31 - _31;
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_41, 0), 2);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_54 = _43;
match _9 {
0 => bb25,
1 => bb2,
2 => bb23,
3 => bb21,
4 => bb5,
5 => bb17,
6 => bb30,
340282366920938463463178215039850807999 => bb35,
_ => bb8
}
}
bb67 = {
_2 = 92_isize - (-9223372036854775808_isize);
_2 = (-69_i8) as isize;
_2 = (-53_isize);
_1 = !961105354_i32;
_2 = (-9223372036854775808_isize) & 70_isize;
_5 = [2343175017880431406_i64];
_2 = 9223372036854775807_isize + (-9223372036854775808_isize);
_2 = -109_isize;
_1 = (-481181869_i32) - 1536462389_i32;
_6.0 = -_1;
_6.0 = _1;
_2 = 198733707220267701738746695636471227463_u128 as isize;
_1 = -_6.0;
_6 = (_1,);
_7.1 = 5508313849392234691_u64 * 3285994092783769215_u64;
_3 = Adt24::Variant3 { fld0: 30_u8,fld1: _7.1 };
_7.1 = !Field::<u64>(Variant(_3, 3), 1);
_7.0.fld0 = 15568_u16 ^ 59946_u16;
_7.3 = _7.1 + _7.1;
_7.0.fld2 = 12086_i16 as f64;
_7.0.fld0 = 39489_u16 & 4691_u16;
_7.0.fld0 = 7097_u16 * 37453_u16;
_7.0.fld1 = '\u{9a2d0}' as u32;
Goto(bb2)
}
bb68 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb69 = {
_41 = Adt23::Variant0 { fld0: _40,fld1: _36,fld2: (*_16) };
(*_25) = (*_44) as isize;
_6.0 = _26 - _26;
_18 = ((*_25), _56, _36, Move(Field::<*mut i32>(Variant(_11, 1), 1)));
_20 = _19 - _19;
_62 = &(*_44);
(*_44) = _31;
_17 = &mut _31;
_45 = core::ptr::addr_of!((*_45));
_25 = core::ptr::addr_of_mut!(_39);
(*_25) = _2 | _2;
_62 = &(*_17);
(*_25) = _2 & _18.0;
(*_44) = (*_17);
_44 = &mut (*_17);
(*_16) = Field::<i16>(Variant(_41, 0), 1) as u8;
(*_25) = _12 * _2;
_61 = (*_25);
(*_25) = -_12;
_37 = [_56,_56,_56,_56];
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_11 = Move(_41);
_39 = _28 as isize;
match _28 {
340282366920938463463374607431768211409 => bb38,
_ => bb37
}
}
bb70 = {
_82 = _81.3.fld2.0 + (*_25);
_11 = Adt23::Variant0 { fld0: _40,fld1: _65.1.3.fld2.2,fld2: _48 };
(*_17) = _81.0 ^ _81.0;
_81.3.fld0.fld3 = (*_45) | (*_45);
_75 = -_28;
(*_17) = _81.0 + _81.0;
_81.3.fld0 = Adt25 { fld0: _19,fld1: Move(_15),fld2: Field::<u64>(Variant(_11, 0), 0),fld3: (*_45),fld4: _65.1.3.fld0.fld4 };
_14 = &_81.3.fld0;
_65.1.1 = _63 & _18.1;
(*_45) = Field::<i16>(Variant(_11, 0), 1) as u128;
Call((*_45) = core::intrinsics::bswap((*_14).fld3), ReturnTo(bb71), UnwindUnreachable())
}
bb71 = {
(*_45) = (*_14).fld3 ^ (*_14).fld3;
_81.1 = _18.1;
(*_64) = [_75,_75,_28,_75,_75,_28,_28];
(*_45) = (*_14).fld3 - (*_14).fld3;
_29 = [_28,_28,_75,_75,_75,_28,_75];
Goto(bb72)
}
bb72 = {
_65.1.0 = (*_17) | (*_17);
(*_25) = !_78;
match _9 {
0 => bb4,
1 => bb56,
2 => bb73,
3 => bb74,
4 => bb75,
5 => bb76,
6 => bb77,
340282366920938463463178215039850807999 => bb79,
_ => bb78
}
}
bb73 = {
_65.1.3.fld2.3 = core::ptr::addr_of_mut!(_26);
_18.1 = _63;
_65.1.3.fld0.fld2 = _65.1.2 ^ _54;
(*_45) = !_65.1.3.fld0.fld3;
_65.1.3.fld3 = core::ptr::addr_of!(_65.1.0);
_25 = core::ptr::addr_of_mut!((*_25));
(*_16) = Field::<u8>(Variant(_70, 3), 0) << (*_45);
(*_16) = _48 << (*_45);
Goto(bb57)
}
bb74 = {
_12 = _2 | _18.0;
_6 = (_1,);
(*_25) = _18.0 << (*_16);
(*_25) = _2 ^ _10;
(*_25) = _10 ^ _2;
Goto(bb19)
}
bb75 = {
(*_25) = _2 * _34;
(*_45) = 258055900837688725834707102303748921149_u128;
_65.1.3.fld2.1 = _63;
_18.2 = (*_45) as i16;
_46 = _26 ^ _26;
_66 = _9 & _9;
(*_45) = 246274483884501330726355580104448090598_u128 & 77374792678613372159730879100728215429_u128;
(*_25) = _61 >> (*_16);
match _28 {
0 => bb42,
1 => bb43,
340282366920938463463374607431768211409 => bb45,
_ => bb44
}
}
bb76 = {
_7.0.fld1 = _8;
_7.0.fld2 = _1 as f64;
_6 = (_1,);
place!(Field::<u8>(Variant(_3, 3), 0)) = 164_u8 ^ 179_u8;
_7.3 = _7.1 + Field::<u64>(Variant(_3, 3), 1);
_7.0.fld2 = (-27627_i16) as f64;
_7.1 = _7.3 ^ _7.3;
_11 = Adt23::Variant0 { fld0: Field::<u64>(Variant(_3, 3), 1),fld1: 23100_i16,fld2: Field::<u8>(Variant(_3, 3), 0) };
match _2 {
0 => bb2,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb77 = {
_38 = '\u{161c5}';
place!(Field::<i16>(Variant(_41, 0), 1)) = _18.2;
_34 = (*_25);
_31 = (*_44);
_1 = _26;
Goto(bb28)
}
bb78 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb79 = {
_76 = _61;
(*_64) = [_28,_75,_75,_28,_28,_75,_28];
(*_16) = _48 * Field::<u8>(Variant(_11, 0), 2);
_11 = Adt23::Variant0 { fld0: (*_14).fld2,fld1: _65.1.3.fld0.fld4,fld2: (*_16) };
_90 = Move(_62);
(*_17) = _65.1.0;
(*_17) = _65.1.0;
_90 = &(*_17);
_51 = core::ptr::addr_of!(_77);
_96 = (*_16) as f32;
(*_17) = _81.0 >> (*_14).fld4;
_78 = !(*_25);
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
Goto(bb80)
}
bb80 = {
_92 = core::ptr::addr_of_mut!(_78);
(*_16) = Field::<u8>(Variant(_11, 0), 2);
_40 = (*_14).fld2 ^ Field::<u64>(Variant(_11, 0), 0);
_49 = _21;
Call(_81.2 = core::intrinsics::bswap(_65.1.2), ReturnTo(bb81), UnwindUnreachable())
}
bb81 = {
(*_92) = _65.1.3.fld2.1 as isize;
(*_51) = &_9;
_81.3.fld4 = Adt24::Variant2 { fld0: _75,fld1: _83 };
_83 = Field::<[u64; 4]>(Variant(_81.3.fld4, 2), 1);
(*_17) = (*_16) as u32;
_51 = core::ptr::addr_of!((*_51));
_65.1.2 = !(*_14).fld2;
(*_64) = [_28,Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0),_75,_28,_28,_75];
_102 = _65.1.3.fld2.1 & _81.1;
_64 = core::ptr::addr_of!((*_64));
(*_45) = (*_14).fld3 * (*_14).fld3;
_45 = core::ptr::addr_of!((*_14).fld3);
_25 = Move(_92);
_101 = _34 << (*_17);
(*_64) = [_75,Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0),_28,Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0)];
match (*_77) {
340282366920938463463178215039850807999 => bb83,
_ => bb82
}
}
bb82 = {
_18.3 = core::ptr::addr_of_mut!(_1);
(*_16) = Field::<u8>(Variant(_41, 0), 2) | Field::<u8>(Variant(_41, 0), 2);
(*_25) = !_34;
(*_44) = !_31;
_6 = (_46,);
_34 = (*_25) + (*_25);
(*_25) = _39;
(*_16) = (-99447493034028405762872688981280303230_i128) as u8;
_2 = (*_25) & (*_25);
(*_16) = Field::<u8>(Variant(_41, 0), 2);
_18.0 = (*_25) | _42;
(*_44) = _31 | _31;
(*_25) = _42;
(*_16) = !Field::<u8>(Variant(_41, 0), 2);
_31 = (*_44);
_31 = !(*_44);
(*_16) = Field::<u8>(Variant(_41, 0), 2) * Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
(*_16) = Field::<u8>(Variant(_41, 0), 2) & Field::<u8>(Variant(_41, 0), 2);
(*_25) = _39;
_49 = _21;
_56 = _18.1;
(*_44) = _31 - _31;
place!(Field::<u8>(Variant(_3, 3), 0)) = !Field::<u8>(Variant(_41, 0), 2);
_11 = Adt23::Variant1 { fld0: _22,fld1: Move(_18.3) };
_54 = _43;
match _9 {
0 => bb25,
1 => bb2,
2 => bb23,
3 => bb21,
4 => bb5,
5 => bb17,
6 => bb30,
340282366920938463463178215039850807999 => bb35,
_ => bb8
}
}
bb83 = {
_65.1.3.fld0.fld1 = Move(_81.3.fld0.fld1);
(*_51) = &_66;
(*_64) = [_28,_28,_75,_28,_28,_28,_75];
(*_64) = [_28,_28,_28,_75,_28,Field::<i8>(Variant(_81.3.fld4, 2), 0),_75];
_87 = !_75;
(*_51) = &_9;
_65.1.0 = (*_17) - (*_17);
(*_64) = [_75,Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0),_28,_75,_75,Field::<i8>(Variant(_81.3.fld4, 2), 0)];
(*_17) = _63 as u32;
_47 = core::ptr::addr_of!((*_51));
(*_51) = &_66;
_60 = (*_14).fld3 >> _2;
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
_57 = Move(_51);
(*_64) = [Field::<i8>(Variant(_81.3.fld4, 2), 0),Field::<i8>(Variant(_81.3.fld4, 2), 0),_75,_75,_87,_75,Field::<i8>(Variant(_81.3.fld4, 2), 0)];
(*_16) = _38 as u8;
_14 = &_65.1.3.fld0;
_36 = (*_14).fld4 | (*_14).fld4;
Call(_19 = core::intrinsics::bswap((*_14).fld0), ReturnTo(bb84), UnwindUnreachable())
}
bb84 = {
_93 = _101 ^ _76;
_103.0 = (*_17);
_81.3.fld2.1 = _56 ^ _65.1.3.fld2.1;
_81.3.fld2.0 = _101 << (*_45);
_57 = Move(_47);
(*_16) = !Field::<u8>(Variant(_11, 0), 2);
_81.3.fld0.fld1 = Move(_65.1.3.fld0.fld1);
_3 = Move(_81.3.fld4);
(*_17) = _65.1.3.fld1 as u32;
_24 = core::ptr::addr_of!(_103);
(*_64) = [_75,_28,Field::<i8>(Variant(_3, 2), 0),_75,_75,Field::<i8>(Variant(_3, 2), 0),_75];
_104 = _39;
_25 = core::ptr::addr_of_mut!(_101);
(*_64) = [_75,_87,Field::<i8>(Variant(_3, 2), 0),_28,_28,_87,_75];
(*_64) = [_75,_28,_87,_75,_75,_28,Field::<i8>(Variant(_3, 2), 0)];
(*_17) = (*_24).0;
(*_64) = [_75,_75,_87,_28,_75,Field::<i8>(Variant(_3, 2), 0),_75];
(*_24).1 = Move(_81.3.fld2.3);
_88 = _65.1.3.fld1;
(*_24).2 = -_93;
_65.1.3.fld2.3 = core::ptr::addr_of_mut!(_26);
(*_17) = (-130552786813700968789254783332334241598_i128) as u32;
(*_64) = [_28,_75,_28,_28,_75,_87,_75];
match _28 {
0 => bb66,
1 => bb26,
2 => bb85,
3 => bb86,
4 => bb87,
340282366920938463463374607431768211409 => bb89,
_ => bb88
}
}
bb85 = {
_2 = 92_isize - (-9223372036854775808_isize);
_2 = (-69_i8) as isize;
_2 = (-53_isize);
_1 = !961105354_i32;
_2 = (-9223372036854775808_isize) & 70_isize;
_5 = [2343175017880431406_i64];
_2 = 9223372036854775807_isize + (-9223372036854775808_isize);
_2 = -109_isize;
_1 = (-481181869_i32) - 1536462389_i32;
_6.0 = -_1;
_6.0 = _1;
_2 = 198733707220267701738746695636471227463_u128 as isize;
_1 = -_6.0;
_6 = (_1,);
_7.1 = 5508313849392234691_u64 * 3285994092783769215_u64;
_3 = Adt24::Variant3 { fld0: 30_u8,fld1: _7.1 };
_7.1 = !Field::<u64>(Variant(_3, 3), 1);
_7.0.fld0 = 15568_u16 ^ 59946_u16;
_7.3 = _7.1 + _7.1;
_7.0.fld2 = 12086_i16 as f64;
_7.0.fld0 = 39489_u16 & 4691_u16;
_7.0.fld0 = 7097_u16 * 37453_u16;
_7.0.fld1 = '\u{9a2d0}' as u32;
Goto(bb2)
}
bb86 = {
_8 = _7.0.fld1 ^ _7.0.fld1;
_5 = [5865285424151314896_i64];
_7.0.fld2 = _6.0 as f64;
_2 = 9223372036854775807_isize;
_9 = -(-2215266421960195201_i64);
_9 = _7.0.fld0 as i64;
_1 = _6.0 & _6.0;
_8 = !_7.0.fld1;
_8 = _7.0.fld1 ^ _7.0.fld1;
_7.2 = &_8;
_12 = _2 | _2;
_8 = 51_u8 as u32;
_7.3 = _7.1;
_9 = (-1228794065717591945_i64) ^ (-3011100927032808439_i64);
_7.0.fld2 = 66302275503114799071346646248355088703_i128 as f64;
_10 = _8 as isize;
_10 = _12 & _12;
match _2 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb87 = {
_12 = _2 | _18.0;
_6 = (_1,);
(*_25) = _18.0 << (*_16);
(*_25) = _2 ^ _10;
(*_25) = _10 ^ _2;
Goto(bb19)
}
bb88 = {
(*_16) = !_48;
(*_25) = _18.0 << _26;
_65.1.2 = Field::<u64>(Variant(_3, 3), 1);
(*_16) = !_48;
(*_16) = !_48;
_65.1.3.fld0.fld1 = core::ptr::addr_of_mut!(_59);
_67 = _1 < _6.0;
_65.1.1 = !_18.1;
(*_25) = _63 as isize;
(*_45) = 57874413275485882813144400229712599014_u128 - 193245225332195988119335727984043950499_u128;
_65.1.3.fld2 = Move(_18);
_65.1.3.fld2.2 = Field::<i16>(Variant(_11, 0), 1);
_44 = Move(_17);
(*_16) = Field::<u8>(Variant(_11, 0), 2) - _48;
_65.1.3.fld2.1 = (*_16) == (*_16);
Goto(bb41)
}
bb89 = {
_28 = (*_77) as i8;
(*_25) = _2 << (*_24).0;
(*_24) = (_65.1.0, Move(_18.3), (*_25));
(*_24).2 = _96 as isize;
(*_64) = [_75,_28,Field::<i8>(Variant(_3, 2), 0),_75,_28,_28,_87];
(*_17) = (*_24).0 & (*_24).0;
_81.2 = (*_14).fld2 & (*_14).fld2;
_2 = !(*_24).2;
_10 = (*_25) >> (*_24).0;
(*_25) = -_50;
(*_24).1 = core::ptr::addr_of_mut!(_46);
(*_25) = (*_24).2;
(*_24).0 = !(*_17);
_16 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_11, 0), 2)));
_66 = !_9;
_24 = core::ptr::addr_of!((*_24));
_1 = _20 as i32;
_65.1.3.fld2.2 = (*_14).fld4 << (*_45);
_87 = _28;
(*_17) = (*_24).0 | (*_24).0;
_85 = _88;
(*_24) = ((*_17), Move(_65.1.3.fld2.3), _82);
(*_25) = (*_24).2 & _39;
match _9 {
0 => bb1,
1 => bb24,
2 => bb56,
3 => bb15,
4 => bb74,
5 => bb72,
6 => bb88,
340282366920938463463178215039850807999 => bb90,
_ => bb71
}
}
bb90 = {
(*_24).1 = core::ptr::addr_of_mut!(_26);
_18.3 = core::ptr::addr_of_mut!(_46);
(*_24).2 = (*_25);
_81.3.fld2.1 = _102;
_94 = Move(_17);
_116 = core::ptr::addr_of_mut!((*_24).2);
(*_24) = (_81.0, Move(_18.3), _76);
_72 = _66 & _66;
_70 = Move(_3);
(*_64) = [_87,_28,_87,_28,_28,_28,_28];
_24 = core::ptr::addr_of!((*_24));
_65.1.3.fld4 = Move(_70);
_52 = _40 | _40;
_65.2 = core::ptr::addr_of_mut!(_96);
_100 = _18.1;
_62 = Move(_90);
(*_24).1 = core::ptr::addr_of_mut!(_46);
_81.3.fld1 = _38;
(*_16) = _9 as u8;
_65.1.3.fld3 = core::ptr::addr_of!(_103.0);
_79 = _38;
_100 = _67 ^ _65.1.3.fld2.1;
_40 = (*_14).fld2 & _54;
(*_24).2 = (-70682505825843667295435015379141914858_i128) as isize;
place!(Field::<u64>(Variant(_11, 0), 0)) = (*_45) as u64;
_65.1.0 = !(*_24).0;
Goto(bb91)
}
bb91 = {
(*_24).0 = !_65.1.0;
_92 = Move(_25);
_65.1.3.fld3 = core::ptr::addr_of!((*_24).0);
(*_24).2 = _50 >> (*_45);
_116 = core::ptr::addr_of_mut!(_103.2);
_65.1.3.fld2 = (_78, _81.1, _81.3.fld2.2, Move((*_24).1));
_14 = &_81.3.fld0;
(*_24).1 = Move(_65.1.3.fld2.3);
_65.1.3.fld2 = ((*_116), _100, _65.1.3.fld0.fld4, Move((*_24).1));
(*_24) = (_81.0, Move(_65.1.3.fld2.3), _2);
Goto(bb92)
}
bb92 = {
_70 = Adt24::Variant2 { fld0: _87,fld1: _83 };
_50 = _101;
(*_64) = [Field::<i8>(Variant(_70, 2), 0),Field::<i8>(Variant(_70, 2), 0),_87,Field::<i8>(Variant(_70, 2), 0),_28,_87,_75];
_25 = core::ptr::addr_of_mut!((*_24).2);
_47 = Move(_57);
_107 = core::ptr::addr_of_mut!((*_45));
(*_24).0 = _72 as u32;
_18.3 = core::ptr::addr_of_mut!(_6.0);
(*_64) = [_28,Field::<i8>(Variant(_65.1.3.fld4, 2), 0),Field::<i8>(Variant(_65.1.3.fld4, 2), 0),Field::<i8>(Variant(_65.1.3.fld4, 2), 0),_75,_28,_75];
_115 = &mut _22;
_3 = Move(_65.1.3.fld4);
(*_24) = (_65.1.0, Move(_18.3), _76);
_81.3.fld4 = Move(_3);
_105 = Field::<i8>(Variant(_70, 2), 0) as f64;
_57 = core::ptr::addr_of!(_77);
_89 = _48 as f32;
_84 = Move(_45);
_65.1.3.fld2 = ((*_24).2, _81.3.fld2.1, (*_14).fld4, Move((*_24).1));
_28 = _43 as i8;
(*_24).0 = _46 as u32;
_2 = (*_24).2 >> (*_24).2;
_81.3.fld2.3 = core::ptr::addr_of_mut!(_46);
_69 = _85;
_121 = -_105;
_101 = !_78;
(*_24).1 = core::ptr::addr_of_mut!(_1);
(*_24).0 = _81.0 + _81.0;
Goto(bb93)
}
bb93 = {
(*_115) = 7197_u16 | 32256_u16;
place!(Field::<[u64; 4]>(Variant(_70, 2), 1)) = Field::<[u64; 4]>(Variant(_81.3.fld4, 2), 1);
_81.3.fld2.3 = core::ptr::addr_of_mut!(_1);
(*_24).1 = Move(_81.3.fld2.3);
_119 = _69;
_40 = _69 as u64;
(*_24).1 = core::ptr::addr_of_mut!(_46);
(*_64) = [_28,Field::<i8>(Variant(_81.3.fld4, 2), 0),_28,_75,_87,Field::<i8>(Variant(_70, 2), 0),_28];
_94 = &mut (*_24).0;
_125.fld1 = _88;
RET = Move(_24);
_124 = Adt29::Variant0 { fld0: Field::<[u64; 4]>(Variant(_70, 2), 1),fld1: _125.fld1,fld2: _96,fld3: (*_115),fld4: _48,fld5: _6.0,fld6: Field::<u64>(Variant(_11, 0), 0),fld7: (-136859986804240381601100328362453016954_i128) };
_25 = core::ptr::addr_of_mut!(_76);
_97 = _119;
_128.1.3.fld0.fld2 = (*_14).fld3 as u64;
_128.2 = Move(_65.2);
_11 = Adt23::Variant0 { fld0: (*_14).fld2,fld1: (*_14).fld4,fld2: Field::<u8>(Variant(_124, 0), 4) };
_117 = _63 & _100;
_81.3.fld3 = core::ptr::addr_of!((*_94));
_10 = _18.0 * _104;
Goto(bb94)
}
bb94 = {
Call(_132 = dump_var(15_usize, 67_usize, Move(_67), 60_usize, Move(_60), 76_usize, Move(_76), 82_usize, Move(_82)), ReturnTo(bb95), UnwindUnreachable())
}
bb95 = {
Call(_132 = dump_var(15_usize, 36_usize, Move(_36), 49_usize, Move(_49), 52_usize, Move(_52), 75_usize, Move(_75)), ReturnTo(bb96), UnwindUnreachable())
}
bb96 = {
Call(_132 = dump_var(15_usize, 39_usize, Move(_39), 54_usize, Move(_54), 85_usize, Move(_85), 46_usize, Move(_46)), ReturnTo(bb97), UnwindUnreachable())
}
bb97 = {
Call(_132 = dump_var(15_usize, 6_usize, Move(_6), 43_usize, Move(_43), 117_usize, Move(_117), 87_usize, Move(_87)), ReturnTo(bb98), UnwindUnreachable())
}
bb98 = {
Call(_132 = dump_var(15_usize, 21_usize, Move(_21), 83_usize, Move(_83), 61_usize, Move(_61), 5_usize, Move(_5)), ReturnTo(bb99), UnwindUnreachable())
}
bb99 = {
Call(_132 = dump_var(15_usize, 53_usize, Move(_53), 9_usize, Move(_9), 22_usize, Move(_22), 88_usize, Move(_88)), ReturnTo(bb100), UnwindUnreachable())
}
bb100 = {
Call(_132 = dump_var(15_usize, 48_usize, Move(_48), 31_usize, Move(_31), 34_usize, Move(_34), 100_usize, Move(_100)), ReturnTo(bb101), UnwindUnreachable())
}
bb101 = {
Call(_132 = dump_var(15_usize, 26_usize, Move(_26), 133_usize, _133, 133_usize, _133, 133_usize, _133), ReturnTo(bb102), UnwindUnreachable())
}
bb102 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: *mut u8,mut _2: isize,mut _3: *mut i32,mut _4: bool,mut _5: [u32; 1]) -> u32 {
mir! {
type RET = u32;
let _6: i64;
let _7: u16;
let _8: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _9: *const Adt17;
let _10: [u64; 4];
let _11: isize;
let _12: isize;
let _13: *const &'static mut u64;
let _14: f64;
let _15: (Adt17, u64, &'static u32, u64);
let _16: char;
let _17: i32;
let _18: *mut u64;
let _19: f64;
let _20: i64;
let _21: *const *mut bool;
let _22: (i32,);
let _23: Adt23;
let _24: i8;
let _25: char;
let _26: &'static &'static mut u64;
let _27: u128;
let _28: &'static mut u16;
let _29: *mut Adt17;
let _30: f64;
let _31: *mut f32;
let _32: *const Adt36;
let _33: *mut u8;
let _34: isize;
let _35: Adt17;
let _36: Adt29;
let _37: char;
let _38: (Adt17, u64, &'static u32, u64);
let _39: f64;
let _40: *mut f32;
let _41: &'static *const [u16; 3];
let _42: &'static *const [u16; 3];
let _43: char;
let _44: *mut f32;
let _45: *mut isize;
let _46: Adt24;
let _47: Adt79;
let _48: isize;
let _49: *const (u32, *mut i32, isize);
let _50: (u32, bool, u64, Adt36);
let _51: Adt29;
let _52: char;
let _53: f64;
let _54: f32;
let _55: *const *mut bool;
let _56: *const [u16; 3];
let _57: &'static mut u16;
let _58: [isize; 1];
let _59: (u32, *mut i32, isize);
let _60: u128;
let _61: &'static mut u64;
let _62: bool;
let _63: &'static Adt36;
let _64: isize;
let _65: &'static mut u64;
let _66: u8;
let _67: f64;
let _68: [i8; 8];
let _69: char;
let _70: Adt36;
let _71: f64;
let _72: i32;
let _73: &'static mut u16;
let _74: *const Adt36;
let _75: f32;
let _76: isize;
let _77: [i8; 8];
let _78: isize;
let _79: (&'static mut u32, [i8; 8], u32);
let _80: *mut [u16; 3];
let _81: &'static mut Adt36;
let _82: u64;
let _83: *const [i8; 7];
let _84: f64;
let _85: f64;
let _86: bool;
let _87: char;
let _88: ();
let _89: ();
{
RET = 2729459062_u32 | 757859856_u32;
_5 = [RET];
_5 = [RET];
_5 = [RET];
_4 = true & false;
_4 = !true;
_6 = (-1557477064402857352_i64);
_5 = [RET];
RET = 3246430867_u32;
match _6 {
0 => bb1,
1 => bb2,
340282366920938463461817130367365354104 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_7 = (-102248778769271474004014950716945597588_i128) as u16;
match RET {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
3246430867 => bb10,
_ => bb9
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8.1.3.fld2.2 = '\u{3d7b0}' as i16;
_8.1.3.fld0.fld2 = !8790736697950168072_u64;
_8.1.3.fld0.fld2 = 154680445468465344172070603696680274896_i128 as u64;
_2 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
_8.1.3.fld2.2 = !(-27766_i16);
_8.1.1 = !_4;
_8.1.3.fld2.3 = Move(_3);
_8.1.2 = _8.1.3.fld0.fld2 | _8.1.3.fld0.fld2;
_8.1.3.fld1 = '\u{36233}';
_8.3 = RET;
_8.1.0 = _8.3 | RET;
_8.1.3.fld3 = core::ptr::addr_of!(RET);
_8.1.2 = !_8.1.3.fld0.fld2;
_8.1.3.fld0.fld3 = 57902265616807072884190319713937399651_u128 << _8.1.3.fld2.2;
_8.1.3.fld0.fld0 = !2_usize;
_3 = Move(_8.1.3.fld2.3);
RET = !_8.1.0;
_8.1.3.fld0.fld0 = 4_usize;
_8.1.3.fld0.fld2 = _8.1.2 ^ _8.1.2;
_8.1.0 = _8.1.3.fld2.2 as u32;
_8.1.3.fld2.0 = _2;
RET = _8.1.3.fld0.fld0 as u32;
_8.1.3.fld2 = (_2, _8.1.1, (-6242_i16), Move(_3));
match _8.1.3.fld0.fld0 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
5 => bb6,
4 => bb11,
_ => bb7
}
}
bb11 = {
_8.1.0 = !_8.3;
_8.1.3.fld1 = '\u{30ea1}';
_8.1.3.fld3 = core::ptr::addr_of!(_8.3);
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.2,_8.1.3.fld0.fld2];
RET = _8.1.2 as u32;
_3 = Move(_8.1.3.fld2.3);
_8.1.3.fld4 = Adt24::Variant2 { fld0: (-55_i8),fld1: _10 };
_12 = _8.1.3.fld2.0 << _6;
_8.1.0 = RET + RET;
_5 = [_8.1.0];
Call(_11 = fn17(_8.1.3.fld1, _6, _7), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
place!(Field::<i8>(Variant(_8.1.3.fld4, 2), 0)) = (-62_i8) - 69_i8;
_10 = [_8.1.3.fld0.fld2,_8.1.3.fld0.fld2,_8.1.2,_8.1.3.fld0.fld2];
_4 = _8.1.3.fld2.1;
_8.1.3.fld2.3 = Move(_3);
_6 = _8.1.3.fld1 as i64;
_8.1.3.fld0.fld3 = 190418991672760400786452314600800144915_u128 & 259350191701751996179168234997239911781_u128;
RET = (-78381663693973013368844728081725450548_i128) as u32;
_3 = Move(_8.1.3.fld2.3);
_8.1.2 = _8.1.3.fld0.fld2 << _2;
_10 = Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1);
place!(Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1)) = [_8.1.2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2];
_4 = _8.1.3.fld0.fld0 != _8.1.3.fld0.fld0;
_8.1.3.fld0.fld3 = 14243549302461342053194967490391196095_u128 >> _11;
_8.1.3.fld1 = '\u{73cde}';
_8.1.3.fld2.0 = 69_u8 as isize;
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.2,_8.1.2];
_14 = _6 as f64;
_8.1.3.fld1 = '\u{b1259}';
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2];
_4 = _8.1.1;
_15.1 = _11 as u64;
_8.1.3.fld0.fld4 = _8.1.3.fld2.2;
_8.1.1 = !_8.1.3.fld2.1;
_9 = core::ptr::addr_of!(_15.0);
match _8.1.3.fld0.fld4 {
0 => bb11,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb10,
340282366920938463463374607431768205214 => bb13,
_ => bb6
}
}
bb13 = {
(*_9).fld0 = 56_u8 as u16;
(*_9).fld1 = !_8.1.0;
(*_9).fld0 = _7;
(*_9).fld0 = _7 >> _8.1.3.fld2.2;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
_20 = !_6;
(*_9).fld1 = (-1589612464_i32) as u32;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_6 = _20 - _20;
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
_10 = Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1);
(*_9).fld1 = _8.1.0 - _8.3;
_8.1.3.fld0.fld0 = 11442722059701659545_usize;
(*_9).fld2 = _14;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld0 = _7 ^ _7;
_15.0.fld1 = _8.1.0 + _8.3;
(*_9).fld0 = (-30062975834651372129694463130488028941_i128) as u16;
(*_9).fld0 = _7;
(*_9).fld0 = 106_u8 as u16;
(*_9).fld0 = _7;
_18 = core::ptr::addr_of_mut!(_15.1);
match _8.1.3.fld2.2 {
0 => bb14,
1 => bb15,
340282366920938463463374607431768205214 => bb17,
_ => bb16
}
}
bb14 = {
Return()
}
bb15 = {
_8.1.0 = !_8.3;
_8.1.3.fld1 = '\u{30ea1}';
_8.1.3.fld3 = core::ptr::addr_of!(_8.3);
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.2,_8.1.3.fld0.fld2];
RET = _8.1.2 as u32;
_3 = Move(_8.1.3.fld2.3);
_8.1.3.fld4 = Adt24::Variant2 { fld0: (-55_i8),fld1: _10 };
_12 = _8.1.3.fld2.0 << _6;
_8.1.0 = RET + RET;
_5 = [_8.1.0];
Call(_11 = fn17(_8.1.3.fld1, _6, _7), ReturnTo(bb12), UnwindUnreachable())
}
bb16 = {
_7 = (-102248778769271474004014950716945597588_i128) as u16;
match RET {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
3246430867 => bb10,
_ => bb9
}
}
bb17 = {
(*_9).fld0 = !_7;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld1 = !_8.1.0;
_8.1.3.fld1 = '\u{44096}';
_16 = _8.1.3.fld1;
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
(*_9).fld2 = (*_9).fld1 as f64;
(*_9).fld2 = -_14;
(*_9).fld0 = _7;
(*_9).fld1 = _8.1.0 - RET;
(*_9).fld1 = RET - RET;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_8.3 = (*_9).fld1 & (*_9).fld1;
(*_18) = _8.1.3.fld0.fld2 - _8.1.3.fld0.fld2;
(*_18) = (*_9).fld0 as u64;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld2 = _14 + _14;
(*_9).fld2 = -_14;
(*_9).fld0 = _7 - _7;
_19 = (*_9).fld2 - (*_9).fld2;
(*_18) = _8.1.3.fld0.fld0 as u64;
_19 = (*_9).fld2;
match _8.1.3.fld0.fld4 {
0 => bb1,
1 => bb13,
2 => bb8,
3 => bb18,
340282366920938463463374607431768205214 => bb20,
_ => bb19
}
}
bb18 = {
Return()
}
bb19 = {
place!(Field::<i8>(Variant(_8.1.3.fld4, 2), 0)) = (-62_i8) - 69_i8;
_10 = [_8.1.3.fld0.fld2,_8.1.3.fld0.fld2,_8.1.2,_8.1.3.fld0.fld2];
_4 = _8.1.3.fld2.1;
_8.1.3.fld2.3 = Move(_3);
_6 = _8.1.3.fld1 as i64;
_8.1.3.fld0.fld3 = 190418991672760400786452314600800144915_u128 & 259350191701751996179168234997239911781_u128;
RET = (-78381663693973013368844728081725450548_i128) as u32;
_3 = Move(_8.1.3.fld2.3);
_8.1.2 = _8.1.3.fld0.fld2 << _2;
_10 = Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1);
place!(Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1)) = [_8.1.2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2];
_4 = _8.1.3.fld0.fld0 != _8.1.3.fld0.fld0;
_8.1.3.fld0.fld3 = 14243549302461342053194967490391196095_u128 >> _11;
_8.1.3.fld1 = '\u{73cde}';
_8.1.3.fld2.0 = 69_u8 as isize;
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.2,_8.1.2];
_14 = _6 as f64;
_8.1.3.fld1 = '\u{b1259}';
_10 = [_8.1.3.fld0.fld2,_8.1.2,_8.1.3.fld0.fld2,_8.1.3.fld0.fld2];
_4 = _8.1.1;
_15.1 = _11 as u64;
_8.1.3.fld0.fld4 = _8.1.3.fld2.2;
_8.1.1 = !_8.1.3.fld2.1;
_9 = core::ptr::addr_of!(_15.0);
match _8.1.3.fld0.fld4 {
0 => bb11,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb10,
340282366920938463463374607431768205214 => bb13,
_ => bb6
}
}
bb20 = {
_18 = core::ptr::addr_of_mut!((*_18));
_27 = _8.1.3.fld0.fld3;
(*_18) = _8.1.2;
(*_9).fld2 = -_14;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _19 };
_15.1 = !_8.1.2;
(*_18) = _8.1.2 ^ _8.1.2;
(*_9).fld2 = -_19;
(*_9).fld1 = _8.3 ^ _8.3;
_15.2 = &(*_9).fld1;
(*_18) = _8.1.3.fld0.fld2 & _8.1.2;
(*_9).fld0 = _7 + _7;
(*_9).fld1 = _8.1.0;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld0.fld4,fld2: 192_u8 };
_8.1.3.fld2.3 = core::ptr::addr_of_mut!(_17);
_2 = -_11;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld2 = _19 + _19;
match _8.1.3.fld0.fld4 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
340282366920938463463374607431768205214 => bb26,
_ => bb25
}
}
bb21 = {
Return()
}
bb22 = {
Return()
}
bb23 = {
Return()
}
bb24 = {
(*_9).fld0 = 56_u8 as u16;
(*_9).fld1 = !_8.1.0;
(*_9).fld0 = _7;
(*_9).fld0 = _7 >> _8.1.3.fld2.2;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
_20 = !_6;
(*_9).fld1 = (-1589612464_i32) as u32;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_6 = _20 - _20;
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
_10 = Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1);
(*_9).fld1 = _8.1.0 - _8.3;
_8.1.3.fld0.fld0 = 11442722059701659545_usize;
(*_9).fld2 = _14;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld0 = _7 ^ _7;
_15.0.fld1 = _8.1.0 + _8.3;
(*_9).fld0 = (-30062975834651372129694463130488028941_i128) as u16;
(*_9).fld0 = _7;
(*_9).fld0 = 106_u8 as u16;
(*_9).fld0 = _7;
_18 = core::ptr::addr_of_mut!(_15.1);
match _8.1.3.fld2.2 {
0 => bb14,
1 => bb15,
340282366920938463463374607431768205214 => bb17,
_ => bb16
}
}
bb25 = {
Return()
}
bb26 = {
(*_9).fld2 = _19 - _19;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld0.fld4,fld2: 158_u8 };
_8.1.3.fld4 = Adt24::Variant3 { fld0: 211_u8,fld1: (*_18) };
(*_9).fld1 = _8.1.0 - RET;
(*_9).fld2 = _19;
_24 = !(-41_i8);
(*_9).fld2 = (*_9).fld0 as f64;
(*_9).fld0 = _7 | _7;
(*_18) = !_8.1.2;
(*_9).fld0 = _7 & _7;
(*_18) = _8.1.1 as u64;
_29 = core::ptr::addr_of_mut!((*_9));
Goto(bb27)
}
bb27 = {
place!(Field::<u64>(Variant(_23, 0), 0)) = (*_18) | (*_18);
_30 = (*_9).fld2 + _15.0.fld2;
(*_9).fld0 = _19 as u16;
_8.1.3.fld0.fld0 = 6916450705187553226_usize;
(*_29).fld2 = _30 * _19;
(*_9).fld1 = _8.3 - _8.3;
(*_9).fld0 = (-1079455165_i32) as u16;
_27 = _8.1.2 as u128;
(*_9).fld0 = _7;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld2.2,fld2: 174_u8 };
(*_29).fld2 = (*_9).fld0 as f64;
(*_9).fld2 = _14 + _30;
_10 = [(*_18),(*_18),_8.1.2,_15.1];
match _8.1.3.fld0.fld4 {
340282366920938463463374607431768205214 => bb28,
_ => bb3
}
}
bb28 = {
_15.0 = Adt17 { fld0: _7,fld1: _8.3,fld2: _30 };
_22 = (482273825_i32,);
place!(Field::<u8>(Variant(_8.1.3.fld4, 3), 0)) = 187_u8 - 12_u8;
(*_9).fld0 = _7;
_35 = Move((*_9));
_15.0.fld0 = _35.fld0 & _7;
_15.0.fld2 = _19 * _35.fld2;
(*_9).fld1 = _8.3;
(*_9) = Move(_35);
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _30 };
_17 = -_22.0;
(*_9).fld1 = _8.3;
(*_9).fld0 = Field::<u8>(Variant(_8.1.3.fld4, 3), 0) as u16;
match Field::<i16>(Variant(_23, 0), 1) {
0 => bb13,
340282366920938463463374607431768205214 => bb29,
_ => bb7
}
}
bb29 = {
_11 = _2 - _2;
_8.1.3.fld0.fld0 = 8577734882099697644_usize & 4_usize;
(*_9).fld2 = _30;
(*_9).fld1 = _24 as u32;
_38 = (Move(_15.0), _8.1.3.fld0.fld2, Move(_15.2), (*_18));
(*_9).fld0 = _8.1.1 as u16;
match _8.1.3.fld0.fld4 {
0 => bb20,
340282366920938463463374607431768205214 => bb30,
_ => bb13
}
}
bb30 = {
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _30 };
(*_9).fld0 = _38.0.fld0;
_8.1.3.fld1 = _16;
(*_9).fld1 = _8.3 * _8.3;
(*_9).fld2 = _19 * _14;
(*_9).fld2 = _30;
(*_9).fld0 = _38.0.fld0;
(*_9).fld1 = _8.3;
_15.2 = &(*_9).fld1;
_8.1.3.fld0.fld1 = Move(_29);
(*_9).fld2 = -_30;
_35 = Adt17 { fld0: (*_9).fld0,fld1: (*_9).fld1,fld2: (*_9).fld2 };
(*_9).fld1 = RET - RET;
_15.0.fld1 = !_8.3;
(*_9).fld0 = _8.1.3.fld1 as u16;
(*_18) = Field::<u64>(Variant(_23, 0), 0) + _8.1.2;
(*_9) = Move(_35);
(*_9) = Move(_38.0);
_38.2 = &_8.1.0;
(*_9) = Adt17 { fld0: _7,fld1: RET,fld2: _14 };
_34 = _11;
(*_18) = Field::<i16>(Variant(_23, 0), 1) as u64;
Goto(bb31)
}
bb31 = {
(*_9).fld0 = _7 << (*_18);
_8.1.3.fld0.fld2 = (-35455580064518831318136083240244973248_i128) as u64;
(*_9) = Adt17 { fld0: _7,fld1: RET,fld2: _19 };
(*_18) = _8.1.2;
(*_9).fld1 = _8.3;
(*_18) = Field::<u64>(Variant(_8.1.3.fld4, 3), 1);
_8.1.0 = !(*_9).fld1;
_33 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_8.1.3.fld4, 3), 0)));
_8.1.3.fld2.1 = _4;
_33 = core::ptr::addr_of_mut!((*_33));
(*_18) = !Field::<u64>(Variant(_8.1.3.fld4, 3), 1);
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
Call(_24 = core::intrinsics::transmute((*_33)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
_38.3 = (*_18);
(*_9).fld2 = _30 * _30;
_16 = _8.1.3.fld1;
(*_9).fld0 = (*_33) as u16;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_39 = (*_9).fld2;
(*_33) = (*_9).fld1 as u8;
(*_9).fld1 = Field::<i16>(Variant(_23, 0), 1) as u32;
_38.0.fld2 = (*_9).fld2 * (*_9).fld2;
(*_9).fld2 = _38.0.fld2 * _38.0.fld2;
_11 = _8.1.3.fld0.fld0 as isize;
(*_33) = 238_u8;
(*_9).fld2 = _8.1.3.fld0.fld0 as f64;
_15.3 = (*_18) + (*_18);
Call(_35.fld2 = core::intrinsics::fmaf64((*_9).fld2, _38.0.fld2, (*_9).fld2), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
(*_18) = _38.3 << _8.1.3.fld0.fld4;
(*_33) = 68_u8;
(*_9).fld2 = _30;
_50.3.fld2.2 = !_8.1.3.fld2.2;
_38.2 = &(*_9).fld1;
(*_9).fld0 = _7 - _7;
_46 = Adt24::Variant3 { fld0: (*_33),fld1: (*_18) };
_50.3.fld1 = _16;
_35.fld1 = (*_9).fld1;
place!(Field::<i16>(Variant(_23, 0), 1)) = _50.3.fld2.2 << (*_18);
_28 = &mut (*_9).fld0;
_50.3.fld2.2 = Field::<i16>(Variant(_23, 0), 1) >> (*_18);
_50.3.fld0.fld3 = _8.1.3.fld0.fld3 ^ _8.1.3.fld0.fld3;
_57 = &mut (*_28);
Goto(bb34)
}
bb34 = {
_14 = -(*_9).fld2;
_8.2 = core::ptr::addr_of_mut!(_54);
_50.2 = (*_18) + (*_18);
(*_57) = _7 + _7;
(*_33) = Field::<u8>(Variant(_46, 3), 0) * Field::<u8>(Variant(_46, 3), 0);
_8.2 = core::ptr::addr_of_mut!(_54);
_50.3.fld2.2 = _8.1.3.fld2.2 & Field::<i16>(Variant(_23, 0), 1);
Goto(bb35)
}
bb35 = {
(*_33) = Field::<u8>(Variant(_46, 3), 0) * Field::<u8>(Variant(_46, 3), 0);
_59 = ((*_9).fld1, Move(_3), _34);
(*_9).fld2 = -_35.fld2;
(*_9).fld2 = _14 * _30;
_50.3.fld2.2 = (*_57) as i16;
_60 = _24 as u128;
_50.3 = Adt36 { fld0: Move(_8.1.3.fld0),fld1: _8.1.3.fld1,fld2: Move(_8.1.3.fld2),fld3: Move(_8.1.3.fld3),fld4: Move(_46) };
_35 = Adt17 { fld0: (*_57),fld1: (*_9).fld1,fld2: _38.0.fld2 };
(*_9).fld2 = -_14;
_35.fld0 = _50.3.fld0.fld0 as u16;
_25 = _16;
(*_9).fld1 = _4 as u32;
(*_9).fld2 = _35.fld2;
_8.1.3.fld0.fld4 = _50.3.fld2.2;
match _8.1.3.fld0.fld4 {
0 => bb27,
1 => bb36,
2 => bb37,
3 => bb38,
4 => bb39,
340282366920938463463374607431768205214 => bb41,
_ => bb40
}
}
bb36 = {
(*_9).fld0 = !_7;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld1 = !_8.1.0;
_8.1.3.fld1 = '\u{44096}';
_16 = _8.1.3.fld1;
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
(*_9).fld2 = (*_9).fld1 as f64;
(*_9).fld2 = -_14;
(*_9).fld0 = _7;
(*_9).fld1 = _8.1.0 - RET;
(*_9).fld1 = RET - RET;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_8.3 = (*_9).fld1 & (*_9).fld1;
(*_18) = _8.1.3.fld0.fld2 - _8.1.3.fld0.fld2;
(*_18) = (*_9).fld0 as u64;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld2 = _14 + _14;
(*_9).fld2 = -_14;
(*_9).fld0 = _7 - _7;
_19 = (*_9).fld2 - (*_9).fld2;
(*_18) = _8.1.3.fld0.fld0 as u64;
_19 = (*_9).fld2;
match _8.1.3.fld0.fld4 {
0 => bb1,
1 => bb13,
2 => bb8,
3 => bb18,
340282366920938463463374607431768205214 => bb20,
_ => bb19
}
}
bb37 = {
(*_18) = _38.3 << _8.1.3.fld0.fld4;
(*_33) = 68_u8;
(*_9).fld2 = _30;
_50.3.fld2.2 = !_8.1.3.fld2.2;
_38.2 = &(*_9).fld1;
(*_9).fld0 = _7 - _7;
_46 = Adt24::Variant3 { fld0: (*_33),fld1: (*_18) };
_50.3.fld1 = _16;
_35.fld1 = (*_9).fld1;
place!(Field::<i16>(Variant(_23, 0), 1)) = _50.3.fld2.2 << (*_18);
_28 = &mut (*_9).fld0;
_50.3.fld2.2 = Field::<i16>(Variant(_23, 0), 1) >> (*_18);
_50.3.fld0.fld3 = _8.1.3.fld0.fld3 ^ _8.1.3.fld0.fld3;
_57 = &mut (*_28);
Goto(bb34)
}
bb38 = {
place!(Field::<u64>(Variant(_23, 0), 0)) = (*_18) | (*_18);
_30 = (*_9).fld2 + _15.0.fld2;
(*_9).fld0 = _19 as u16;
_8.1.3.fld0.fld0 = 6916450705187553226_usize;
(*_29).fld2 = _30 * _19;
(*_9).fld1 = _8.3 - _8.3;
(*_9).fld0 = (-1079455165_i32) as u16;
_27 = _8.1.2 as u128;
(*_9).fld0 = _7;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld2.2,fld2: 174_u8 };
(*_29).fld2 = (*_9).fld0 as f64;
(*_9).fld2 = _14 + _30;
_10 = [(*_18),(*_18),_8.1.2,_15.1];
match _8.1.3.fld0.fld4 {
340282366920938463463374607431768205214 => bb28,
_ => bb3
}
}
bb39 = {
(*_9).fld2 = _19 - _19;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld0.fld4,fld2: 158_u8 };
_8.1.3.fld4 = Adt24::Variant3 { fld0: 211_u8,fld1: (*_18) };
(*_9).fld1 = _8.1.0 - RET;
(*_9).fld2 = _19;
_24 = !(-41_i8);
(*_9).fld2 = (*_9).fld0 as f64;
(*_9).fld0 = _7 | _7;
(*_18) = !_8.1.2;
(*_9).fld0 = _7 & _7;
(*_18) = _8.1.1 as u64;
_29 = core::ptr::addr_of_mut!((*_9));
Goto(bb27)
}
bb40 = {
_7 = (-102248778769271474004014950716945597588_i128) as u16;
match RET {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
3246430867 => bb10,
_ => bb9
}
}
bb41 = {
(*_9).fld1 = Field::<u64>(Variant(_50.3.fld4, 3), 1) as u32;
_9 = core::ptr::addr_of!(_35);
_4 = _8.1.1;
_8.1.3.fld2.3 = core::ptr::addr_of_mut!(_22.0);
(*_9).fld0 = (*_57) >> (*_9).fld1;
_50.3.fld2.1 = _8.1.1;
_50.3.fld1 = _8.1.3.fld1;
(*_9) = Adt17 { fld0: (*_57),fld1: _59.0,fld2: _39 };
_6 = (*_33) as i64;
_8.1.3.fld4 = Adt24::Variant2 { fld0: _24,fld1: _10 };
_8.1.3.fld0.fld4 = _50.3.fld0.fld4;
_8.1.3.fld4 = Adt24::Variant0 { fld0: _17,fld1: Move((*_9)) };
(*_9).fld2 = Field::<Adt17>(Variant(_8.1.3.fld4, 0), 1).fld2 * _19;
_45 = core::ptr::addr_of_mut!(_34);
_1 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_23, 0), 2)));
(*_45) = _8.1.3.fld1 as isize;
_8.1.1 = (*_18) == _8.1.2;
Goto(bb42)
}
bb42 = {
(*_9) = Move(Field::<Adt17>(Variant(_8.1.3.fld4, 0), 1));
(*_1) = Field::<u8>(Variant(_50.3.fld4, 3), 0) * Field::<u8>(Variant(_50.3.fld4, 3), 0);
(*_9) = Adt17 { fld0: (*_57),fld1: _59.0,fld2: _39 };
(*_9).fld0 = (*_57);
(*_9).fld0 = (*_57);
_8.1 = ((*_9).fld1, _4, (*_18), Move(_50.3));
_50.3.fld0.fld4 = (*_9).fld1 as i16;
_50.3.fld2.1 = _8.1.3.fld2.1;
(*_9).fld2 = _30 - _14;
(*_9) = Adt17 { fld0: (*_57),fld1: _59.0,fld2: _38.0.fld2 };
_70.fld4 = Adt24::Variant2 { fld0: _24,fld1: _10 };
(*_57) = (*_9).fld0 + (*_9).fld0;
_38.0.fld2 = -(*_9).fld2;
_8.0 = &_8.1.3;
(*_9).fld0 = !(*_57);
(*_9) = Adt17 { fld0: (*_57),fld1: _8.3,fld2: _14 };
(*_9).fld1 = _59.0 << _8.1.2;
_50.1 = !_8.1.1;
(*_9).fld0 = _4 as u16;
match _8.1.3.fld2.2 {
0 => bb38,
1 => bb43,
2 => bb44,
340282366920938463463374607431768205214 => bb46,
_ => bb45
}
}
bb43 = {
_18 = core::ptr::addr_of_mut!((*_18));
_27 = _8.1.3.fld0.fld3;
(*_18) = _8.1.2;
(*_9).fld2 = -_14;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _19 };
_15.1 = !_8.1.2;
(*_18) = _8.1.2 ^ _8.1.2;
(*_9).fld2 = -_19;
(*_9).fld1 = _8.3 ^ _8.3;
_15.2 = &(*_9).fld1;
(*_18) = _8.1.3.fld0.fld2 & _8.1.2;
(*_9).fld0 = _7 + _7;
(*_9).fld1 = _8.1.0;
_23 = Adt23::Variant0 { fld0: (*_18),fld1: _8.1.3.fld0.fld4,fld2: 192_u8 };
_8.1.3.fld2.3 = core::ptr::addr_of_mut!(_17);
_2 = -_11;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld2 = _19 + _19;
match _8.1.3.fld0.fld4 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
340282366920938463463374607431768205214 => bb26,
_ => bb25
}
}
bb44 = {
(*_9).fld0 = 56_u8 as u16;
(*_9).fld1 = !_8.1.0;
(*_9).fld0 = _7;
(*_9).fld0 = _7 >> _8.1.3.fld2.2;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
_20 = !_6;
(*_9).fld1 = (-1589612464_i32) as u32;
(*_9) = Adt17 { fld0: _7,fld1: _8.1.0,fld2: _14 };
_6 = _20 - _20;
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
_10 = Field::<[u64; 4]>(Variant(_8.1.3.fld4, 2), 1);
(*_9).fld1 = _8.1.0 - _8.3;
_8.1.3.fld0.fld0 = 11442722059701659545_usize;
(*_9).fld2 = _14;
(*_9) = Adt17 { fld0: _7,fld1: _8.3,fld2: _14 };
(*_9).fld0 = _7 ^ _7;
_15.0.fld1 = _8.1.0 + _8.3;
(*_9).fld0 = (-30062975834651372129694463130488028941_i128) as u16;
(*_9).fld0 = _7;
(*_9).fld0 = 106_u8 as u16;
(*_9).fld0 = _7;
_18 = core::ptr::addr_of_mut!(_15.1);
match _8.1.3.fld2.2 {
0 => bb14,
1 => bb15,
340282366920938463463374607431768205214 => bb17,
_ => bb16
}
}
bb45 = {
(*_18) = _38.3 << _8.1.3.fld0.fld4;
(*_33) = 68_u8;
(*_9).fld2 = _30;
_50.3.fld2.2 = !_8.1.3.fld2.2;
_38.2 = &(*_9).fld1;
(*_9).fld0 = _7 - _7;
_46 = Adt24::Variant3 { fld0: (*_33),fld1: (*_18) };
_50.3.fld1 = _16;
_35.fld1 = (*_9).fld1;
place!(Field::<i16>(Variant(_23, 0), 1)) = _50.3.fld2.2 << (*_18);
_28 = &mut (*_9).fld0;
_50.3.fld2.2 = Field::<i16>(Variant(_23, 0), 1) >> (*_18);
_50.3.fld0.fld3 = _8.1.3.fld0.fld3 ^ _8.1.3.fld0.fld3;
_57 = &mut (*_28);
Goto(bb34)
}
bb46 = {
_28 = &mut (*_9).fld0;
_66 = _8.1.3.fld0.fld3 as u8;
_70.fld2.3 = core::ptr::addr_of_mut!(_72);
_8.1.3.fld0.fld0 = 2_usize - 4645321281816849479_usize;
(*_18) = _66 as u64;
_70.fld2.0 = !(*_45);
_28 = &mut (*_57);
_70 = Adt36 { fld0: Move(_8.1.3.fld0),fld1: _16,fld2: Move(_8.1.3.fld2),fld3: Move(_8.1.3.fld3),fld4: Move(_8.1.3.fld4) };
_37 = _25;
_71 = -(*_9).fld2;
match _70.fld2.2 {
0 => bb21,
1 => bb27,
2 => bb30,
340282366920938463463374607431768205214 => bb48,
_ => bb47
}
}
bb47 = {
(*_9).fld0 = _7 << (*_18);
_8.1.3.fld0.fld2 = (-35455580064518831318136083240244973248_i128) as u64;
(*_9) = Adt17 { fld0: _7,fld1: RET,fld2: _19 };
(*_18) = _8.1.2;
(*_9).fld1 = _8.3;
(*_18) = Field::<u64>(Variant(_8.1.3.fld4, 3), 1);
_8.1.0 = !(*_9).fld1;
_33 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_8.1.3.fld4, 3), 0)));
_8.1.3.fld2.1 = _4;
_33 = core::ptr::addr_of_mut!((*_33));
(*_18) = !Field::<u64>(Variant(_8.1.3.fld4, 3), 1);
_8.1.3.fld3 = core::ptr::addr_of!((*_9).fld1);
Call(_24 = core::intrinsics::transmute((*_33)), ReturnTo(bb32), UnwindUnreachable())
}
bb48 = {
_12 = _2 + _59.2;
_70.fld4 = Adt24::Variant2 { fld0: _24,fld1: _10 };
_50.3.fld2 = (_59.2, _70.fld2.1, Field::<i16>(Variant(_23, 0), 1), Move(_59.1));
(*_45) = !_12;
(*_1) = !_66;
_81 = &mut _70;
(*_28) = !_7;
(*_45) = !_59.2;
_3 = core::ptr::addr_of_mut!(_17);
(*_81).fld0.fld1 = core::ptr::addr_of_mut!(_38.0);
_85 = -(*_9).fld2;
(*_81).fld0.fld1 = core::ptr::addr_of_mut!(_38.0);
(*_45) = (*_81).fld2.0;
place!(Field::<i8>(Variant((*_81).fld4, 2), 0)) = !_24;
(*_81).fld0.fld3 = !_27;
(*_81).fld2.3 = core::ptr::addr_of_mut!(_17);
_10 = [(*_18),(*_18),_8.1.2,(*_81).fld0.fld2];
_11 = Field::<i8>(Variant((*_81).fld4, 2), 0) as isize;
Call(place!(Field::<[u64; 4]>(Variant((*_81).fld4, 2), 1)) = core::intrinsics::transmute(_10), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
(*_9).fld1 = _8.1.0;
(*_45) = _12 ^ _59.2;
(*_81).fld0.fld3 = (*_18) as u128;
_46 = Adt24::Variant2 { fld0: Field::<i8>(Variant((*_81).fld4, 2), 0),fld1: Field::<[u64; 4]>(Variant((*_81).fld4, 2), 1) };
(*_9).fld2 = _38.0.fld2;
(*_3) = (*_28) as i32;
place!(Field::<[u64; 4]>(Variant((*_81).fld4, 2), 1)) = [(*_18),(*_81).fld0.fld2,(*_18),(*_18)];
(*_81).fld0.fld3 = _60 << (*_81).fld2.2;
Goto(bb50)
}
bb50 = {
Call(_88 = dump_var(16_usize, 25_usize, Move(_25), 6_usize, Move(_6), 66_usize, Move(_66), 60_usize, Move(_60)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_88 = dump_var(16_usize, 17_usize, Move(_17), 24_usize, Move(_24), 22_usize, Move(_22), 2_usize, Move(_2)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_88 = dump_var(16_usize, 10_usize, Move(_10), 89_usize, _89, 89_usize, _89, 89_usize, _89), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: char,mut _2: i64,mut _3: u16) -> isize {
mir! {
type RET = isize;
let _4: *const [i8; 7];
let _5: Adt24;
let _6: char;
let _7: Adt25;
let _8: u8;
let _9: *mut bool;
let _10: i16;
let _11: isize;
let _12: [u16; 3];
let _13: Adt79;
let _14: [bool; 4];
let _15: char;
let _16: Adt29;
let _17: [i8; 8];
let _18: [u16; 3];
let _19: *const u128;
let _20: ();
let _21: ();
{
_1 = '\u{f2cf9}';
RET = -111_isize;
_3 = !9678_u16;
_3 = 407271689_u32 as u16;
_1 = '\u{bee0e}';
RET = 9223372036854775807_isize;
_2 = 4143044982602953592_i64 | 7422639920777196060_i64;
_2 = (-550278333215598261_i64) & (-1903289534140608283_i64);
RET = 9223372036854775807_isize | 9223372036854775807_isize;
_1 = '\u{11932}';
_1 = '\u{10e7f2}';
_5 = Adt24::Variant3 { fld0: 21_u8,fld1: 10936371925575992367_u64 };
place!(Field::<u64>(Variant(_5, 3), 1)) = _2 as u64;
_3 = 13315_u16 >> RET;
_3 = 31426_u16 + 17804_u16;
place!(Field::<u8>(Variant(_5, 3), 0)) = !111_u8;
Goto(bb1)
}
bb1 = {
_2 = 6_usize as i64;
_6 = _1;
RET = 9223372036854775807_isize >> _3;
_7.fld4 = 1575_i16;
_2 = (-6835883895488914419_i64) | (-2362537923180237646_i64);
_1 = _6;
_6 = _1;
_7.fld3 = 125649326400462514557306727100671112767_u128;
RET = _6 as isize;
place!(Field::<u64>(Variant(_5, 3), 1)) = 592260556124216476_u64;
_7.fld0 = 1_usize ^ 4_usize;
_2 = 2945077054827377864_i64;
_1 = _6;
_3 = 41338_u16;
_6 = _1;
_8 = !Field::<u8>(Variant(_5, 3), 0);
match Field::<u64>(Variant(_5, 3), 1) {
0 => bb2,
1 => bb3,
592260556124216476 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
place!(Field::<u64>(Variant(_5, 3), 1)) = 1982540140484600571_u64;
_7.fld0 = 1_usize ^ 6_usize;
_7.fld0 = !5_usize;
_1 = _6;
RET = (-111_isize);
_3 = 3394344442_u32 as u16;
_1 = _6;
_7.fld2 = !Field::<u64>(Variant(_5, 3), 1);
place!(Field::<u64>(Variant(_5, 3), 1)) = _7.fld2 * _7.fld2;
_11 = RET;
_10 = _7.fld4 & _7.fld4;
_7.fld2 = _3 as u64;
_7.fld0 = !2_usize;
_7.fld4 = !_10;
_1 = _6;
_7.fld3 = _10 as u128;
_3 = !24041_u16;
RET = _11 << _3;
_11 = RET | RET;
_12 = [_3,_3,_3];
_3 = true as u16;
_7.fld2 = 10_i8 as u64;
_7.fld0 = 0_usize >> _11;
_1 = _6;
_10 = _7.fld4 * _7.fld4;
_7.fld0 = (-39835672880572169238369104449762707035_i128) as usize;
_12 = [_3,_3,_3];
match _2 {
2945077054827377864 => bb6,
_ => bb1
}
}
bb6 = {
_7.fld2 = _11 as u64;
_10 = (-110910188787069020930847041885736770393_i128) as i16;
place!(Field::<u64>(Variant(_5, 3), 1)) = _7.fld2 ^ _7.fld2;
_7.fld3 = 297696009331378622293225621852199412296_u128;
_2 = (-8687486805372750180_i64) * 2528248117086070021_i64;
place!(Field::<u64>(Variant(_5, 3), 1)) = 535316243_u32 as u64;
_14 = [true,true,true,false];
_11 = RET + RET;
_3 = 53998_u16 & 51184_u16;
_7.fld0 = 3212462948048738362_usize;
_8 = !Field::<u8>(Variant(_5, 3), 0);
_1 = _6;
RET = (-66_i8) as isize;
_12 = [_3,_3,_3];
RET = -_11;
_14 = [true,false,false,true];
_7.fld0 = !6906035203035501868_usize;
_14 = [true,true,false,false];
_12 = [_3,_3,_3];
_8 = !Field::<u8>(Variant(_5, 3), 0);
_12 = [_3,_3,_3];
_12 = [_3,_3,_3];
Goto(bb7)
}
bb7 = {
_11 = RET & RET;
_15 = _1;
_10 = _7.fld4 - _7.fld4;
_2 = _8 as i64;
_7.fld3 = _6 as u128;
_7.fld4 = 1335092905_i32 as i16;
RET = _15 as isize;
_17 = [(-46_i8),0_i8,2_i8,19_i8,6_i8,(-100_i8),(-106_i8),18_i8];
place!(Field::<u64>(Variant(_5, 3), 1)) = _7.fld2 * _7.fld2;
Call(_17 = fn18(_15, _7.fld4, _3, _10, _1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
RET = _11;
_2 = 475377759445737993_i64 | 6442273932942346799_i64;
place!(Field::<u8>(Variant(_5, 3), 0)) = !_8;
_1 = _15;
_12 = [_3,_3,_3];
_8 = 29_i8 as u8;
_16 = Adt29::Variant1 { fld0: true,fld1: _7.fld0,fld2: RET,fld3: 16_i8,fld4: Move(_5) };
_8 = Field::<u8>(Variant(Field::<Adt24>(Variant(_16, 1), 4), 3), 0) >> Field::<isize>(Variant(_16, 1), 2);
place!(Field::<u8>(Variant(place!(Field::<Adt24>(Variant(_16, 1), 4)), 3), 0)) = !_8;
_2 = _7.fld2 as i64;
_3 = 44033_u16 & 18951_u16;
RET = Field::<isize>(Variant(_16, 1), 2) + _11;
_9 = core::ptr::addr_of_mut!(place!(Field::<bool>(Variant(_16, 1), 0)));
(*_9) = false;
_7.fld2 = Field::<u64>(Variant(Field::<Adt24>(Variant(_16, 1), 4), 3), 1) >> RET;
RET = Field::<isize>(Variant(_16, 1), 2) | _11;
_18 = [_3,_3,_3];
_1 = _6;
(*_9) = false ^ true;
(*_9) = Field::<u64>(Variant(Field::<Adt24>(Variant(_16, 1), 4), 3), 1) > _7.fld2;
_3 = 28047_u16;
(*_9) = true | true;
_7.fld3 = 50598657940954927957028386548907044561_u128;
_18 = _12;
Goto(bb9)
}
bb9 = {
Call(_20 = dump_var(17_usize, 8_usize, Move(_8), 17_usize, Move(_17), 14_usize, Move(_14), 3_usize, Move(_3)), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Call(_20 = dump_var(17_usize, 15_usize, Move(_15), 6_usize, Move(_6), 21_usize, _21, 21_usize, _21), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: char,mut _2: i16,mut _3: u16,mut _4: i16,mut _5: char) -> [i8; 8] {
mir! {
type RET = [i8; 8];
let _6: (u32, *mut i32, isize);
let _7: i64;
let _8: i8;
let _9: f32;
let _10: f32;
let _11: char;
let _12: *mut [u16; 3];
let _13: &'static mut Adt36;
let _14: *mut u64;
let _15: f64;
let _16: *mut u8;
let _17: Adt36;
let _18: [bool; 4];
let _19: bool;
let _20: &'static Adt25;
let _21: *const [i8; 8];
let _22: f64;
let _23: (Adt17, u64, &'static u32, u64);
let _24: isize;
let _25: char;
let _26: &'static Adt23;
let _27: isize;
let _28: f32;
let _29: i32;
let _30: i16;
let _31: isize;
let _32: u16;
let _33: *const [u16; 3];
let _34: u128;
let _35: [bool; 4];
let _36: Adt68;
let _37: &'static Adt23;
let _38: [char; 8];
let _39: *mut [u16; 3];
let _40: f64;
let _41: f64;
let _42: u32;
let _43: bool;
let _44: [char; 8];
let _45: *const *mut bool;
let _46: *mut i32;
let _47: bool;
let _48: Adt68;
let _49: i64;
let _50: u8;
let _51: *mut Adt17;
let _52: isize;
let _53: f32;
let _54: [char; 8];
let _55: [char; 8];
let _56: *mut &'static *const [u16; 3];
let _57: Adt29;
let _58: [u16; 3];
let _59: char;
let _60: usize;
let _61: *mut bool;
let _62: char;
let _63: ();
let _64: ();
{
_2 = _4;
_3 = 15136326694622388481_u64 as u16;
_6.2 = (-54_isize);
RET = [12_i8,(-26_i8),80_i8,(-94_i8),90_i8,(-32_i8),(-56_i8),23_i8];
_8 = 100_i8;
Goto(bb1)
}
bb1 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 3796032487_u32;
_7 = !8220672449710163234_i64;
_8 = (-11_i8);
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_8 = -77_i8;
_3 = !23048_u16;
_8 = -(-14_i8);
_7 = !(-1011866137843940540_i64);
_3 = 20061_u16;
_3 = !54994_u16;
_3 = 29726_u16 | 52527_u16;
_6.0 = _8 as u32;
_5 = _1;
_8 = 152474342527974021999620025779976420285_u128 as i8;
_3 = 7342_u16 * 48628_u16;
_8 = (-103_i8) - (-65_i8);
_7 = 1569919623287656699_i64;
_6.0 = !428780885_u32;
_6.2 = 108_isize & 9223372036854775807_isize;
_5 = _1;
_5 = _1;
_3 = 7554_u16 - 61422_u16;
_1 = _5;
_7 = -(-2287427323102766949_i64);
Goto(bb2)
}
bb2 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb3 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 3796032487_u32;
_7 = !8220672449710163234_i64;
_8 = (-11_i8);
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_8 = -77_i8;
_3 = !23048_u16;
_8 = -(-14_i8);
_7 = !(-1011866137843940540_i64);
_3 = 20061_u16;
_3 = !54994_u16;
_3 = 29726_u16 | 52527_u16;
_6.0 = _8 as u32;
_5 = _1;
_8 = 152474342527974021999620025779976420285_u128 as i8;
_3 = 7342_u16 * 48628_u16;
_8 = (-103_i8) - (-65_i8);
_7 = 1569919623287656699_i64;
_6.0 = !428780885_u32;
_6.2 = 108_isize & 9223372036854775807_isize;
_5 = _1;
_5 = _1;
_3 = 7554_u16 - 61422_u16;
_1 = _5;
_7 = -(-2287427323102766949_i64);
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_9 = -_10;
_11 = _1;
_5 = _11;
_1 = _11;
_1 = _5;
_7 = 2293095205106623705_i64 | 7147852551155825613_i64;
_6.2 = _4 as isize;
_5 = _11;
match _6.0 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
4049771846 => bb13,
_ => bb12
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 3796032487_u32;
_7 = !8220672449710163234_i64;
_8 = (-11_i8);
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_8 = -77_i8;
_3 = !23048_u16;
_8 = -(-14_i8);
_7 = !(-1011866137843940540_i64);
_3 = 20061_u16;
_3 = !54994_u16;
_3 = 29726_u16 | 52527_u16;
_6.0 = _8 as u32;
_5 = _1;
_8 = 152474342527974021999620025779976420285_u128 as i8;
_3 = 7342_u16 * 48628_u16;
_8 = (-103_i8) - (-65_i8);
_7 = 1569919623287656699_i64;
_6.0 = !428780885_u32;
_6.2 = 108_isize & 9223372036854775807_isize;
_5 = _1;
_5 = _1;
_3 = 7554_u16 - 61422_u16;
_1 = _5;
_7 = -(-2287427323102766949_i64);
Goto(bb2)
}
bb12 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb13 = {
_6.0 = 3965208939_u32;
_1 = _5;
Goto(bb14)
}
bb14 = {
_4 = _7 as i16;
_2 = _4 | _4;
_6.0 = 3732037286_u32;
_15 = _6.0 as f64;
_6.0 = 2752308510_u32;
match _6.0 {
0 => bb1,
1 => bb12,
2 => bb9,
3 => bb11,
4 => bb13,
5 => bb15,
6 => bb16,
2752308510 => bb18,
_ => bb17
}
}
bb15 = {
Return()
}
bb16 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb17 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb18 = {
_6.2 = 44_isize << _2;
_17.fld0.fld2 = !9009933065993323291_u64;
_9 = _10 - _10;
_15 = _3 as f64;
_17.fld2.0 = _7 as isize;
_6.0 = !2652310017_u32;
Goto(bb19)
}
bb19 = {
_17.fld2.1 = true | true;
_9 = _10 - _10;
_17.fld2.0 = _6.2 - _6.2;
_17.fld0.fld0 = _3 as usize;
_3 = !32512_u16;
_1 = _11;
_11 = _5;
_17.fld2.1 = false ^ true;
_17.fld0.fld2 = 692558744498684535_u64 ^ 9539712507994462918_u64;
_17.fld0.fld3 = !12469793607437167370904047792352311199_u128;
_11 = _1;
_17.fld0.fld4 = _2;
_17.fld1 = _5;
_4 = _2 & _2;
_15 = _8 as f64;
_14 = core::ptr::addr_of_mut!(_17.fld0.fld2);
_17.fld0.fld4 = _17.fld2.1 as i16;
_17.fld0.fld2 = 8256363826127951_u64 & 6758117652608109622_u64;
(*_14) = 18097908387662332468_u64 ^ 11791392515153196009_u64;
_17.fld2.0 = _10 as isize;
_17.fld2.1 = !true;
Goto(bb20)
}
bb20 = {
_17.fld2.2 = _17.fld0.fld4;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = !4619905330419131418_u64;
(*_14) = !11712587506283419177_u64;
_19 = !_17.fld2.1;
_2 = _4 ^ _4;
_1 = _11;
(*_14) = !5359148080263958036_u64;
_7 = (-2806733330963786006_i64);
_18 = [_19,_17.fld2.1,_17.fld2.1,_19];
(*_14) = 14422250971997324625_u64;
_15 = _17.fld0.fld0 as f64;
(*_14) = 10955604635188006486_u64 - 16118067024870782486_u64;
_17.fld0.fld0 = 4_usize;
(*_14) = 15973003965149745400_u64 * 81358600776973123_u64;
(*_14) = !9549325229239147267_u64;
_9 = _10;
_6.0 = !1622019915_u32;
(*_14) = 7423978307149457434_u64 & 11258151606235193339_u64;
_11 = _1;
_23.0.fld1 = !_6.0;
(*_14) = !12551909331455548804_u64;
(*_14) = _7 as u64;
match _17.fld0.fld0 {
0 => bb9,
1 => bb16,
2 => bb21,
3 => bb22,
4 => bb25,
_ => bb24
}
}
bb21 = {
_6.0 = 3965208939_u32;
_1 = _5;
Goto(bb14)
}
bb22 = {
Return()
}
bb23 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_9 = -_10;
_11 = _1;
_5 = _11;
_1 = _11;
_1 = _5;
_7 = 2293095205106623705_i64 | 7147852551155825613_i64;
_6.2 = _4 as isize;
_5 = _11;
match _6.0 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
4049771846 => bb13,
_ => bb12
}
}
bb24 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb25 = {
(*_14) = 2225055981303556610_u64 - 17945709390723639748_u64;
match _17.fld0.fld0 {
0 => bb4,
4 => bb26,
_ => bb3
}
}
bb26 = {
_25 = _1;
_23.2 = &_6.0;
_17.fld3 = core::ptr::addr_of!(_6.0);
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = 442110805863704259_u64 ^ 2736570378127642381_u64;
_17.fld2.0 = _6.2;
_1 = _11;
_17.fld0.fld1 = core::ptr::addr_of_mut!(_23.0);
(*_14) = 12951955672961380247_u64 ^ 9288076911120999060_u64;
_23.3 = _6.0 as u64;
(*_14) = 37_u8 as u64;
_2 = _4;
match _7 {
0 => bb15,
1 => bb14,
340282366920938463460567874100804425450 => bb27,
_ => bb5
}
}
bb27 = {
_23.2 = &_23.0.fld1;
(*_14) = _23.3 ^ _23.3;
_29 = 1464062096_i32 | 220973421_i32;
(*_14) = _29 as u64;
_6.1 = core::ptr::addr_of_mut!(_29);
_22 = _7 as f64;
_29 = (-1415951603_i32);
_6.1 = core::ptr::addr_of_mut!(_29);
(*_14) = !_23.3;
_6.2 = _17.fld2.0;
_22 = _9 as f64;
_23.0.fld0 = _3 + _3;
_25 = _17.fld1;
_5 = _25;
Goto(bb28)
}
bb28 = {
(*_14) = _23.3;
(*_14) = _4 as u64;
_30 = _2 * _4;
(*_14) = _23.3;
(*_14) = !_23.3;
_21 = core::ptr::addr_of!(RET);
_30 = !_17.fld2.2;
_20 = &_17.fld0;
_17.fld2.0 = _6.2;
_23.1 = (*_14);
_23.0.fld2 = _22;
(*_14) = _23.3;
(*_14) = _23.3 >> (*_20).fld4;
_29 = (-1341685739_i32) << (*_14);
_19 = _17.fld2.1 & _17.fld2.1;
_7 = (-6377765704171169758_i64) << (*_20).fld4;
_17.fld0.fld3 = 293772508396997621152972958024449967853_u128 - 329534308454756458460917687257295196762_u128;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 * _9;
(*_14) = !_23.3;
(*_14) = _23.1 + _23.3;
_27 = 129042476954745174895630981004534751433_i128 as isize;
(*_14) = _23.3;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_30 = -(*_20).fld4;
_24 = _17.fld2.0;
Goto(bb29)
}
bb29 = {
_23.0 = Adt17 { fld0: _3,fld1: _6.0,fld2: _22 };
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_24 = _6.2;
_29 = 1131514937_i32 * (-607687325_i32);
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = (*_20).fld4 ^ _2;
(*_14) = !_23.1;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_17.fld0.fld1 = core::ptr::addr_of_mut!(_23.0);
_23.2 = &_6.0;
_11 = _1;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_31 = _17.fld2.0 * _24;
_17.fld2 = (_31, _19, _17.fld0.fld4, Move(_6.1));
_1 = _17.fld1;
match (*_20).fld0 {
0 => bb8,
1 => bb2,
2 => bb15,
3 => bb10,
5 => bb22,
4 => bb31,
_ => bb30
}
}
bb30 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb31 = {
(*_14) = _23.1 & _23.1;
_32 = !_23.0.fld0;
_38 = [_5,_5,_1,_25,_11,_11,_1,_5];
_10 = _9 * _9;
_23.0.fld2 = _15 * _22;
_35 = [_17.fld2.1,_17.fld2.1,_19,_17.fld2.1];
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.1 = core::ptr::addr_of_mut!(_29);
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
Goto(bb32)
}
bb32 = {
_28 = _10 + _10;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = _23.1 & _23.1;
_6 = (_23.0.fld1, Move(_17.fld2.3), _17.fld2.0);
_17.fld0.fld3 = 273191054358023837772199949395531508836_u128;
_34 = !_17.fld0.fld3;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_17.fld2.2 = _4 | (*_20).fld4;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_17.fld0.fld2 = !_23.1;
(*_14) = !_23.3;
_35 = [_17.fld2.1,_17.fld2.1,_17.fld2.1,_17.fld2.1];
_27 = _17.fld2.0 >> _2;
_23.1 = !(*_14);
(*_14) = _23.1 & _23.1;
_3 = (*_20).fld0 as u16;
match (*_20).fld0 {
0 => bb33,
1 => bb34,
2 => bb35,
3 => bb36,
5 => bb38,
6 => bb39,
4 => bb41,
_ => bb40
}
}
bb33 = {
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_9 = -_10;
_11 = _1;
_5 = _11;
_1 = _11;
_1 = _5;
_7 = 2293095205106623705_i64 | 7147852551155825613_i64;
_6.2 = _4 as isize;
_5 = _11;
match _6.0 {
0 => bb1,
1 => bb4,
2 => bb3,
3 => bb8,
4 => bb9,
5 => bb10,
6 => bb11,
4049771846 => bb13,
_ => bb12
}
}
bb34 = {
_4 = _7 as i16;
_2 = _4 | _4;
_6.0 = 3732037286_u32;
_15 = _6.0 as f64;
_6.0 = 2752308510_u32;
match _6.0 {
0 => bb1,
1 => bb12,
2 => bb9,
3 => bb11,
4 => bb13,
5 => bb15,
6 => bb16,
2752308510 => bb18,
_ => bb17
}
}
bb35 = {
Return()
}
bb36 = {
(*_14) = _23.3;
(*_14) = _4 as u64;
_30 = _2 * _4;
(*_14) = _23.3;
(*_14) = !_23.3;
_21 = core::ptr::addr_of!(RET);
_30 = !_17.fld2.2;
_20 = &_17.fld0;
_17.fld2.0 = _6.2;
_23.1 = (*_14);
_23.0.fld2 = _22;
(*_14) = _23.3;
(*_14) = _23.3 >> (*_20).fld4;
_29 = (-1341685739_i32) << (*_14);
_19 = _17.fld2.1 & _17.fld2.1;
_7 = (-6377765704171169758_i64) << (*_20).fld4;
_17.fld0.fld3 = 293772508396997621152972958024449967853_u128 - 329534308454756458460917687257295196762_u128;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 * _9;
(*_14) = !_23.3;
(*_14) = _23.1 + _23.3;
_27 = 129042476954745174895630981004534751433_i128 as isize;
(*_14) = _23.3;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_30 = -(*_20).fld4;
_24 = _17.fld2.0;
Goto(bb29)
}
bb37 = {
_23.2 = &_23.0.fld1;
(*_14) = _23.3 ^ _23.3;
_29 = 1464062096_i32 | 220973421_i32;
(*_14) = _29 as u64;
_6.1 = core::ptr::addr_of_mut!(_29);
_22 = _7 as f64;
_29 = (-1415951603_i32);
_6.1 = core::ptr::addr_of_mut!(_29);
(*_14) = !_23.3;
_6.2 = _17.fld2.0;
_22 = _9 as f64;
_23.0.fld0 = _3 + _3;
_25 = _17.fld1;
_5 = _25;
Goto(bb28)
}
bb38 = {
_25 = _1;
_23.2 = &_6.0;
_17.fld3 = core::ptr::addr_of!(_6.0);
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = 442110805863704259_u64 ^ 2736570378127642381_u64;
_17.fld2.0 = _6.2;
_1 = _11;
_17.fld0.fld1 = core::ptr::addr_of_mut!(_23.0);
(*_14) = 12951955672961380247_u64 ^ 9288076911120999060_u64;
_23.3 = _6.0 as u64;
(*_14) = 37_u8 as u64;
_2 = _4;
match _7 {
0 => bb15,
1 => bb14,
340282366920938463460567874100804425450 => bb27,
_ => bb5
}
}
bb39 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb40 = {
Return()
}
bb41 = {
(*_14) = _23.1;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = !_23.1;
(*_14) = _23.1 | _23.1;
_38 = [_17.fld1,_11,_17.fld1,_5,_5,_1,_11,_5];
_17.fld2.0 = _28 as isize;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = _23.1 & _23.3;
_17.fld2.1 = (*_20).fld0 != (*_20).fld0;
_29 = 1654052236_i32 << (*_20).fld4;
(*_14) = _23.1;
(*_14) = 94_u8 as u64;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = !_23.3;
_43 = _17.fld2.1 > _17.fld2.1;
_17.fld4 = Adt24::Variant3 { fld0: 136_u8,fld1: (*_14) };
match (*_20).fld0 {
0 => bb19,
1 => bb22,
4 => bb42,
_ => bb3
}
}
bb42 = {
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_17.fld2.3 = core::ptr::addr_of_mut!(_29);
(*_14) = _8 as u64;
_17.fld2.0 = _31 + _27;
_27 = _17.fld2.0 + _6.2;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_27 = _24 | _6.2;
(*_14) = _23.1 * _23.1;
(*_14) = _23.3 * _23.1;
_40 = _22 - _23.0.fld2;
(*_14) = !Field::<u64>(Variant(_17.fld4, 3), 1);
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_14) = Field::<u64>(Variant(_17.fld4, 3), 1);
_6.1 = core::ptr::addr_of_mut!(_29);
_2 = _4 ^ _17.fld2.2;
_16 = core::ptr::addr_of_mut!(place!(Field::<u8>(Variant(_17.fld4, 3), 0)));
_23.0.fld2 = -_22;
match (*_20).fld0 {
4 => bb43,
_ => bb38
}
}
bb43 = {
(*_16) = 109_u8 | 246_u8;
(*_14) = (*_20).fld0 as u64;
_17.fld3 = core::ptr::addr_of!(_6.0);
(*_16) = 43_u8 >> _2;
_17.fld0.fld2 = _23.3 << _7;
(*_16) = 37_u8 - 136_u8;
(*_14) = _23.3;
_10 = _28 + _28;
match (*_20).fld0 {
0 => bb13,
4 => bb44,
_ => bb23
}
}
bb44 = {
_28 = _10 - _10;
(*_14) = !Field::<u64>(Variant(_17.fld4, 3), 1);
(*_16) = 3_u8 - 86_u8;
_41 = _40;
_42 = !_23.0.fld1;
(*_16) = _6.0 as u8;
_13 = &mut _17;
(*_13).fld2.0 = _23.0.fld0 as isize;
_53 = _28;
place!(Field::<u8>(Variant((*_13).fld4, 3), 0)) = 96_u8;
(*_13).fld0.fld2 = Field::<u64>(Variant((*_13).fld4, 3), 1) - Field::<u64>(Variant((*_13).fld4, 3), 1);
place!(Field::<u8>(Variant((*_13).fld4, 3), 0)) = !142_u8;
(*_13).fld3 = core::ptr::addr_of!(_42);
(*_13).fld1 = _25;
(*_13).fld2 = (_27, _43, _2, Move(_6.1));
(*_13).fld2.1 = !_19;
place!(Field::<u64>(Variant((*_13).fld4, 3), 1)) = (*_13).fld0.fld2;
(*_13).fld0.fld3 = _34 + _34;
match (*_13).fld0.fld0 {
4 => bb46,
_ => bb45
}
}
bb45 = {
_23.2 = &_23.0.fld1;
(*_14) = _23.3 ^ _23.3;
_29 = 1464062096_i32 | 220973421_i32;
(*_14) = _29 as u64;
_6.1 = core::ptr::addr_of_mut!(_29);
_22 = _7 as f64;
_29 = (-1415951603_i32);
_6.1 = core::ptr::addr_of_mut!(_29);
(*_14) = !_23.3;
_6.2 = _17.fld2.0;
_22 = _9 as f64;
_23.0.fld0 = _3 + _3;
_25 = _17.fld1;
_5 = _25;
Goto(bb28)
}
bb46 = {
(*_13).fld3 = core::ptr::addr_of!(_23.0.fld1);
match (*_13).fld0.fld0 {
0 => bb33,
1 => bb10,
2 => bb47,
3 => bb48,
5 => bb50,
6 => bb51,
4 => bb53,
_ => bb52
}
}
bb47 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb48 = {
Return()
}
bb49 = {
(*_16) = 109_u8 | 246_u8;
(*_14) = (*_20).fld0 as u64;
_17.fld3 = core::ptr::addr_of!(_6.0);
(*_16) = 43_u8 >> _2;
_17.fld0.fld2 = _23.3 << _7;
(*_16) = 37_u8 - 136_u8;
(*_14) = _23.3;
_10 = _28 + _28;
match (*_20).fld0 {
0 => bb13,
4 => bb44,
_ => bb23
}
}
bb50 = {
_11 = _1;
_9 = 231_u8 as f32;
_2 = _4 << _8;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_2 = _4 - _4;
_3 = !53271_u16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_10 = _9 - _9;
_8 = 81_i8;
_8 = (-28_i8) ^ (-72_i8);
_1 = _11;
_2 = _7 as i16;
_11 = _5;
_5 = _11;
_10 = _9 + _9;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_4 = _6.2 as i16;
RET = [_8,_8,_8,_8,_8,_8,_8,_8];
_6.0 = 4049771846_u32;
_15 = _6.2 as f64;
_1 = _5;
match _6.0 {
0 => bb3,
1 => bb4,
2 => bb5,
4049771846 => bb7,
_ => bb6
}
}
bb51 = {
Return()
}
bb52 = {
_6.0 = 3965208939_u32;
_1 = _5;
Goto(bb14)
}
bb53 = {
(*_13).fld1 = _11;
_40 = -_41;
_32 = _3 - _23.0.fld0;
(*_13).fld2.0 = _27 >> Field::<u64>(Variant((*_13).fld4, 3), 1);
place!(Field::<u64>(Variant((*_13).fld4, 3), 1)) = (*_13).fld0.fld2 >> (*_13).fld2.2;
(*_13).fld0.fld3 = _34;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
(*_13).fld2.3 = core::ptr::addr_of_mut!(_29);
(*_13).fld2.0 = _23.0.fld1 as isize;
place!(Field::<u8>(Variant((*_13).fld4, 3), 0)) = 207_u8 & 200_u8;
(*_13).fld2.0 = _8 as isize;
(*_13).fld2.3 = core::ptr::addr_of_mut!(_29);
(*_13).fld2.1 = _43 | _43;
(*_21) = [_8,_8,_8,_8,_8,_8,_8,_8];
_54 = [(*_13).fld1,(*_13).fld1,(*_13).fld1,(*_13).fld1,(*_13).fld1,(*_13).fld1,(*_13).fld1,(*_13).fld1];
(*_13).fld0.fld2 = Field::<u64>(Variant((*_13).fld4, 3), 1) + Field::<u64>(Variant((*_13).fld4, 3), 1);
(*_13).fld3 = core::ptr::addr_of!(_23.0.fld1);
_3 = _32;
(*_13).fld0.fld2 = Field::<u64>(Variant((*_13).fld4, 3), 1);
_60 = !(*_13).fld0.fld0;
(*_13).fld2.1 = _43 & _43;
place!(Field::<u64>(Variant((*_13).fld4, 3), 1)) = (*_13).fld0.fld2 & (*_13).fld0.fld2;
_34 = (*_13).fld0.fld3 & (*_13).fld0.fld3;
_47 = (*_13).fld2.2 >= (*_13).fld2.2;
Goto(bb54)
}
bb54 = {
Call(_63 = dump_var(18_usize, 29_usize, Move(_29), 38_usize, Move(_38), 24_usize, Move(_24), 34_usize, Move(_34)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_63 = dump_var(18_usize, 30_usize, Move(_30), 11_usize, Move(_11), 25_usize, Move(_25), 54_usize, Move(_54)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_63 = dump_var(18_usize, 60_usize, Move(_60), 43_usize, Move(_43), 18_usize, Move(_18), 2_usize, Move(_2)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: *const &'static mut u64,mut _2: u32,mut _3: *mut i32,mut _4: u8) -> [u16; 3] {
mir! {
type RET = [u16; 3];
let _5: &'static *const [u16; 3];
let _6: f32;
let _7: *const [i8; 7];
let _8: &'static &'static mut u64;
let _9: isize;
let _10: [u32; 1];
let _11: isize;
let _12: *const &'static i64;
let _13: bool;
let _14: (u32, *mut i32, isize);
let _15: *const [u16; 3];
let _16: f64;
let _17: *mut [u16; 3];
let _18: bool;
let _19: f64;
let _20: f64;
let _21: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _22: u128;
let _23: u8;
let _24: i64;
let _25: *mut u64;
let _26: isize;
let _27: *mut isize;
let _28: isize;
let _29: [i64; 1];
let _30: char;
let _31: *mut Adt17;
let _32: [char; 8];
let _33: isize;
let _34: [i8; 8];
let _35: [i8; 8];
let _36: [bool; 4];
let _37: f32;
let _38: (&'static mut u32, [i8; 8], u32);
let _39: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _40: *mut u8;
let _41: (u32, *mut i32, isize);
let _42: *const u32;
let _43: *const (u32, *mut i32, isize);
let _44: [u32; 1];
let _45: *const &'static i64;
let _46: (&'static mut u32, [i8; 8], u32);
let _47: f32;
let _48: u16;
let _49: Adt68;
let _50: bool;
let _51: [i8; 7];
let _52: *const [u16; 3];
let _53: bool;
let _54: bool;
let _55: *const *mut bool;
let _56: *mut u8;
let _57: (Adt17, u64, &'static u32, u64);
let _58: u128;
let _59: (u32, *mut i32, isize);
let _60: i8;
let _61: isize;
let _62: &'static u32;
let _63: &'static i64;
let _64: &'static *const [u16; 3];
let _65: i128;
let _66: &'static mut &'static *mut bool;
let _67: *mut u64;
let _68: u128;
let _69: [i8; 8];
let _70: bool;
let _71: u8;
let _72: &'static mut Adt36;
let _73: *const Adt17;
let _74: &'static Adt25;
let _75: [i8; 7];
let _76: [i64; 1];
let _77: &'static Adt36;
let _78: (i32,);
let _79: u8;
let _80: &'static Adt29;
let _81: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _82: i8;
let _83: bool;
let _84: Adt24;
let _85: (u32, bool, u64, Adt36);
let _86: *const Adt17;
let _87: char;
let _88: *const &'static i64;
let _89: &'static Adt36;
let _90: &'static *const Adt17;
let _91: Adt25;
let _92: (&'static Adt36, (u32, bool, u64, Adt36), *mut f32, u32);
let _93: bool;
let _94: isize;
let _95: *const (u32, *mut i32, isize);
let _96: (u32, bool, u64, Adt36);
let _97: &'static mut u16;
let _98: isize;
let _99: Adt79;
let _100: (u32, bool, u64, Adt36);
let _101: ();
let _102: ();
{
_4 = !94_u8;
RET = [8768_u16,50580_u16,10529_u16];
_2 = 2980826842_u32;
RET = [54245_u16,6944_u16,40337_u16];
_4 = 145_u8;
_4 = !47_u8;
_2 = 3478834006_u32 | 989102322_u32;
_2 = 2289106123_u32;
_2 = 1999299086_u32;
_2 = 671819869_u32 << _4;
RET = [19733_u16,53844_u16,6905_u16];
Goto(bb1)
}
bb1 = {
RET = [57493_u16,42429_u16,47041_u16];
RET = [1107_u16,27406_u16,56680_u16];
Goto(bb2)
}
bb2 = {
_2 = 9223372036854775807_isize as u32;
_6 = 8432673530207137037_i64 as f32;
_4 = !156_u8;
_4 = 134_u8 | 170_u8;
RET = [17150_u16,27987_u16,11690_u16];
_4 = 72_u8 + 216_u8;
Goto(bb3)
}
bb3 = {
_4 = 5_u8 ^ 208_u8;
_6 = _2 as f32;
_4 = 44_u8 | 189_u8;
_6 = 249246539324183010757908574305456162381_u128 as f32;
RET = [47653_u16,58855_u16,8884_u16];
RET = [50457_u16,3061_u16,1998_u16];
_2 = 639145426_u32;
_2 = 3567201752_u32 & 188298932_u32;
_4 = !20_u8;
_2 = (-43_i8) as u32;
RET = [49136_u16,911_u16,39491_u16];
_4 = 78_u8;
_4 = true as u8;
_2 = !3338336382_u32;
RET = [44817_u16,38528_u16,30107_u16];
_2 = 1217269407_u32;
_4 = 166_u8;
_4 = !93_u8;
_6 = 6369375000285361213_i64 as f32;
_9 = -31_isize;
match _2 {
0 => bb1,
1217269407 => bb5,
_ => bb4
}
}
bb4 = {
RET = [57493_u16,42429_u16,47041_u16];
RET = [1107_u16,27406_u16,56680_u16];
Goto(bb2)
}
bb5 = {
_4 = 180_u8 + 28_u8;
_11 = _9 >> _4;
_6 = 443242976_i32 as f32;
RET = [59306_u16,50288_u16,49753_u16];
_11 = _9 & _9;
_2 = 4146384278_u32 | 1907192524_u32;
_10 = [_2];
_9 = _11 << _11;
_4 = !249_u8;
_2 = 901472913520245418_usize as u32;
RET = [35390_u16,45609_u16,3773_u16];
_10 = [_2];
RET = [15122_u16,58516_u16,46872_u16];
_13 = false;
_11 = _9 << _2;
Goto(bb6)
}
bb6 = {
_14.1 = Move(_3);
_13 = false;
_16 = _6 as f64;
_14.2 = _11 >> _11;
_3 = Move(_14.1);
_14.2 = _11 + _9;
_15 = core::ptr::addr_of!(RET);
_14.0 = _2 * _2;
(*_15) = [8577_u16,64132_u16,8885_u16];
_14 = (_2, Move(_3), _11);
_4 = 141_u8 ^ 16_u8;
_3 = Move(_14.1);
(*_15) = [50352_u16,42663_u16,12494_u16];
(*_15) = [47779_u16,58027_u16,8733_u16];
(*_15) = [19660_u16,20748_u16,6716_u16];
_14.1 = Move(_3);
(*_15) = [20082_u16,56772_u16,53309_u16];
Goto(bb7)
}
bb7 = {
(*_15) = [9778_u16,63099_u16,8666_u16];
_16 = _4 as f64;
_17 = core::ptr::addr_of_mut!((*_15));
(*_17) = [15026_u16,6678_u16,38162_u16];
(*_17) = [26495_u16,30481_u16,33001_u16];
(*_15) = [41581_u16,60066_u16,12430_u16];
(*_15) = [15112_u16,61147_u16,8121_u16];
(*_15) = [21445_u16,27212_u16,63854_u16];
_11 = _14.2;
(*_15) = [9454_u16,29647_u16,14721_u16];
(*_15) = [22865_u16,24013_u16,19735_u16];
_16 = (-1822080494_i32) as f64;
_15 = core::ptr::addr_of!((*_15));
_15 = core::ptr::addr_of!((*_15));
_15 = core::ptr::addr_of!((*_15));
(*_15) = [10340_u16,34418_u16,56383_u16];
_3 = Move(_14.1);
Goto(bb8)
}
bb8 = {
_11 = _9 >> _4;
_10 = [_2];
(*_15) = [50550_u16,25741_u16,44398_u16];
Goto(bb9)
}
bb9 = {
(*_15) = [45019_u16,58516_u16,24099_u16];
(*_15) = [20504_u16,51692_u16,17577_u16];
_10 = [_2];
_18 = _14.2 != _11;
_14.1 = Move(_3);
_3 = Move(_14.1);
(*_15) = [58501_u16,3690_u16,18066_u16];
(*_15) = [28196_u16,3070_u16,65040_u16];
_14 = (_2, Move(_3), _11);
(*_15) = [48705_u16,61331_u16,4974_u16];
(*_15) = [34516_u16,12271_u16,59469_u16];
(*_15) = [14791_u16,40076_u16,58072_u16];
RET = [31362_u16,21097_u16,31704_u16];
RET = [44273_u16,56011_u16,20380_u16];
_11 = 209865014776166908718070353820419707928_u128 as isize;
RET = [40914_u16,7789_u16,30755_u16];
_3 = Move(_14.1);
_13 = _18;
(*_15) = [54495_u16,63187_u16,46505_u16];
_5 = &_15;
_2 = _14.0 * _14.0;
RET = [64736_u16,52420_u16,11001_u16];
_2 = _14.0;
_21.1.2 = 5646802637019371570_u64;
_14 = (_2, Move(_3), _9);
_2 = !_14.0;
match _21.1.2 {
0 => bb3,
1 => bb10,
5646802637019371570 => bb12,
_ => bb11
}
}
bb10 = {
_4 = 5_u8 ^ 208_u8;
_6 = _2 as f32;
_4 = 44_u8 | 189_u8;
_6 = 249246539324183010757908574305456162381_u128 as f32;
RET = [47653_u16,58855_u16,8884_u16];
RET = [50457_u16,3061_u16,1998_u16];
_2 = 639145426_u32;
_2 = 3567201752_u32 & 188298932_u32;
_4 = !20_u8;
_2 = (-43_i8) as u32;
RET = [49136_u16,911_u16,39491_u16];
_4 = 78_u8;
_4 = true as u8;
_2 = !3338336382_u32;
RET = [44817_u16,38528_u16,30107_u16];
_2 = 1217269407_u32;
_4 = 166_u8;
_4 = !93_u8;
_6 = 6369375000285361213_i64 as f32;
_9 = -31_isize;
match _2 {
0 => bb1,
1217269407 => bb5,
_ => bb4
}
}
bb11 = {
_14.1 = Move(_3);
_13 = false;
_16 = _6 as f64;
_14.2 = _11 >> _11;
_3 = Move(_14.1);
_14.2 = _11 + _9;
_15 = core::ptr::addr_of!(RET);
_14.0 = _2 * _2;
(*_15) = [8577_u16,64132_u16,8885_u16];
_14 = (_2, Move(_3), _11);
_4 = 141_u8 ^ 16_u8;
_3 = Move(_14.1);
(*_15) = [50352_u16,42663_u16,12494_u16];
(*_15) = [47779_u16,58027_u16,8733_u16];
(*_15) = [19660_u16,20748_u16,6716_u16];
_14.1 = Move(_3);
(*_15) = [20082_u16,56772_u16,53309_u16];
Goto(bb7)
}
bb12 = {
_21.1.3.fld2.0 = -_9;
_21.1.3.fld2 = (_9, _13, 14955_i16, Move(_14.1));
_6 = _4 as f32;
RET = [31549_u16,5207_u16,46935_u16];
_18 = _13;
_21.1.3.fld0.fld4 = -_21.1.3.fld2.2;
_21.3 = _14.0 | _2;
_3 = Move(_21.1.3.fld2.3);
_22 = !72095716012688565521369123815482515280_u128;
_21.1.3.fld0.fld3 = !_22;
_14 = (_21.3, Move(_3), _21.1.3.fld2.0);
_20 = _16;
_21.3 = _14.0 * _2;
_3 = Move(_14.1);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.1.3.fld0.fld0 = 2959879436156694089_usize * 6_usize;
_21.1.3.fld2.2 = _21.1.3.fld2.0 as i16;
match _21.1.2 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb13,
5646802637019371570 => bb15,
_ => bb14
}
}
bb13 = {
RET = [57493_u16,42429_u16,47041_u16];
RET = [1107_u16,27406_u16,56680_u16];
Goto(bb2)
}
bb14 = {
_4 = 5_u8 ^ 208_u8;
_6 = _2 as f32;
_4 = 44_u8 | 189_u8;
_6 = 249246539324183010757908574305456162381_u128 as f32;
RET = [47653_u16,58855_u16,8884_u16];
RET = [50457_u16,3061_u16,1998_u16];
_2 = 639145426_u32;
_2 = 3567201752_u32 & 188298932_u32;
_4 = !20_u8;
_2 = (-43_i8) as u32;
RET = [49136_u16,911_u16,39491_u16];
_4 = 78_u8;
_4 = true as u8;
_2 = !3338336382_u32;
RET = [44817_u16,38528_u16,30107_u16];
_2 = 1217269407_u32;
_4 = 166_u8;
_4 = !93_u8;
_6 = 6369375000285361213_i64 as f32;
_9 = -31_isize;
match _2 {
0 => bb1,
1217269407 => bb5,
_ => bb4
}
}
bb15 = {
_24 = (-45545557174232063615436130073974778309_i128) as i64;
_21.1.3.fld2.3 = Move(_3);
_4 = !84_u8;
_21.1.3.fld2.2 = _14.0 as i16;
_23 = !_4;
_21.1.3.fld0.fld0 = 1_usize;
_21.1.3.fld0.fld2 = !_21.1.2;
(*_15) = [6751_u16,2833_u16,54544_u16];
_11 = _9 << _21.1.3.fld0.fld4;
_21.1.3.fld2.2 = _21.1.3.fld0.fld4;
_21.1.3.fld0.fld4 = _21.3 as i16;
_2 = _14.0;
_15 = core::ptr::addr_of!((*_15));
_14 = (_2, Move(_21.1.3.fld2.3), _11);
_21.1.3.fld3 = core::ptr::addr_of!(_14.0);
(*_15) = [57407_u16,12754_u16,32877_u16];
_17 = core::ptr::addr_of_mut!((*_15));
Goto(bb16)
}
bb16 = {
(*_15) = [6321_u16,2214_u16,48761_u16];
_19 = _21.1.3.fld0.fld0 as f64;
_20 = _19;
_26 = _11;
_21.1.3.fld3 = core::ptr::addr_of!(_2);
_22 = _21.1.3.fld0.fld3;
_21.3 = _13 as u32;
_13 = _18 | _18;
_21.1.3.fld2.2 = -_21.1.3.fld0.fld4;
_25 = core::ptr::addr_of_mut!(_21.1.3.fld0.fld2);
(*_15) = [51920_u16,40101_u16,41207_u16];
(*_15) = [5319_u16,40012_u16,9805_u16];
(*_25) = (-1294260157_i32) as u64;
_24 = !(-5522997715425363048_i64);
_25 = core::ptr::addr_of_mut!((*_25));
(*_25) = !_21.1.2;
(*_15) = [7503_u16,63236_u16,51272_u16];
_3 = Move(_14.1);
_14.1 = Move(_3);
(*_15) = [19481_u16,16491_u16,7611_u16];
(*_15) = [60112_u16,3593_u16,19529_u16];
_3 = Move(_14.1);
(*_25) = _21.1.2;
_21.1.3.fld3 = core::ptr::addr_of!(_2);
Goto(bb17)
}
bb17 = {
_28 = -_21.1.3.fld2.0;
_25 = core::ptr::addr_of_mut!((*_25));
_20 = _16 - _16;
_21.1.3.fld0.fld2 = _21.1.2 >> _4;
(*_25) = !_21.1.2;
_21.1.0 = _21.3 * _21.3;
(*_25) = 205302481_i32 as u64;
_32 = ['\u{c1c7b}','\u{abf2c}','\u{376be}','\u{106ff7}','\u{325f5}','\u{72a41}','\u{ad159}','\u{a796f}'];
_21.1.3.fld0.fld2 = !_21.1.2;
(*_15) = [60789_u16,35570_u16,6241_u16];
_21.1.1 = _21.1.0 < _14.0;
(*_25) = !_21.1.2;
(*_25) = !_21.1.2;
_21.1.2 = (*_25) + (*_25);
(*_25) = _21.1.2 & _21.1.2;
(*_25) = _21.1.2;
(*_15) = [48326_u16,9938_u16,61894_u16];
_17 = core::ptr::addr_of_mut!((*_15));
(*_15) = [1622_u16,54344_u16,27366_u16];
_21.1.3.fld2.3 = Move(_3);
(*_25) = !_21.1.2;
_21.1.3.fld1 = '\u{eb0ae}';
Goto(bb18)
}
bb18 = {
_16 = -_20;
(*_15) = [25095_u16,63101_u16,6651_u16];
(*_25) = _21.3 as u64;
_21.1.1 = _13;
(*_15) = [39084_u16,56396_u16,1095_u16];
_30 = _21.1.3.fld1;
match _21.1.3.fld0.fld0 {
0 => bb2,
2 => bb20,
1 => bb22,
_ => bb21
}
}
bb19 = {
_21.1.3.fld2.0 = -_9;
_21.1.3.fld2 = (_9, _13, 14955_i16, Move(_14.1));
_6 = _4 as f32;
RET = [31549_u16,5207_u16,46935_u16];
_18 = _13;
_21.1.3.fld0.fld4 = -_21.1.3.fld2.2;
_21.3 = _14.0 | _2;
_3 = Move(_21.1.3.fld2.3);
_22 = !72095716012688565521369123815482515280_u128;
_21.1.3.fld0.fld3 = !_22;
_14 = (_21.3, Move(_3), _21.1.3.fld2.0);
_20 = _16;
_21.3 = _14.0 * _2;
_3 = Move(_14.1);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.1.3.fld0.fld0 = 2959879436156694089_usize * 6_usize;
_21.1.3.fld2.2 = _21.1.3.fld2.0 as i16;
match _21.1.2 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb13,
5646802637019371570 => bb15,
_ => bb14
}
}
bb20 = {
(*_15) = [6321_u16,2214_u16,48761_u16];
_19 = _21.1.3.fld0.fld0 as f64;
_20 = _19;
_26 = _11;
_21.1.3.fld3 = core::ptr::addr_of!(_2);
_22 = _21.1.3.fld0.fld3;
_21.3 = _13 as u32;
_13 = _18 | _18;
_21.1.3.fld2.2 = -_21.1.3.fld0.fld4;
_25 = core::ptr::addr_of_mut!(_21.1.3.fld0.fld2);
(*_15) = [51920_u16,40101_u16,41207_u16];
(*_15) = [5319_u16,40012_u16,9805_u16];
(*_25) = (-1294260157_i32) as u64;
_24 = !(-5522997715425363048_i64);
_25 = core::ptr::addr_of_mut!((*_25));
(*_25) = !_21.1.2;
(*_15) = [7503_u16,63236_u16,51272_u16];
_3 = Move(_14.1);
_14.1 = Move(_3);
(*_15) = [19481_u16,16491_u16,7611_u16];
(*_15) = [60112_u16,3593_u16,19529_u16];
_3 = Move(_14.1);
(*_25) = _21.1.2;
_21.1.3.fld3 = core::ptr::addr_of!(_2);
Goto(bb17)
}
bb21 = {
RET = [57493_u16,42429_u16,47041_u16];
RET = [1107_u16,27406_u16,56680_u16];
Goto(bb2)
}
bb22 = {
(*_15) = [32251_u16,28667_u16,35984_u16];
(*_25) = _21.1.2;
(*_25) = _21.1.2 - _21.1.2;
_18 = _21.1.3.fld2.1;
_38.2 = _21.1.0;
(*_15) = [6080_u16,52621_u16,36428_u16];
_39.1.3.fld0.fld0 = !_21.1.3.fld0.fld0;
_32 = [_30,_30,_30,_30,_21.1.3.fld1,_30,_30,_21.1.3.fld1];
_11 = _14.2 << _38.2;
(*_15) = [15742_u16,35525_u16,46720_u16];
_33 = _20 as isize;
match _21.1.3.fld0.fld0 {
0 => bb1,
2 => bb11,
3 => bb16,
4 => bb5,
5 => bb14,
6 => bb7,
1 => bb23,
_ => bb12
}
}
bb23 = {
(*_25) = (-91537095777814571580266341027467005088_i128) as u64;
_39.1.3.fld2.1 = !_13;
_41 = (_21.3, Move(_21.1.3.fld2.3), _11);
_39.1.3.fld2 = (_14.2, _21.1.3.fld2.1, _21.1.3.fld2.2, Move(_41.1));
_39.1.3.fld0.fld4 = _39.1.3.fld2.2 ^ _21.1.3.fld0.fld4;
(*_15) = [8744_u16,14127_u16,38489_u16];
_41.2 = _6 as isize;
_39.1.3.fld0.fld4 = _39.1.3.fld2.2 - _21.1.3.fld0.fld4;
_39.2 = core::ptr::addr_of_mut!(_37);
_6 = (*_25) as f32;
match _21.1.3.fld0.fld0 {
0 => bb1,
2 => bb10,
3 => bb4,
4 => bb21,
5 => bb6,
6 => bb24,
1 => bb26,
_ => bb25
}
}
bb24 = {
_4 = 5_u8 ^ 208_u8;
_6 = _2 as f32;
_4 = 44_u8 | 189_u8;
_6 = 249246539324183010757908574305456162381_u128 as f32;
RET = [47653_u16,58855_u16,8884_u16];
RET = [50457_u16,3061_u16,1998_u16];
_2 = 639145426_u32;
_2 = 3567201752_u32 & 188298932_u32;
_4 = !20_u8;
_2 = (-43_i8) as u32;
RET = [49136_u16,911_u16,39491_u16];
_4 = 78_u8;
_4 = true as u8;
_2 = !3338336382_u32;
RET = [44817_u16,38528_u16,30107_u16];
_2 = 1217269407_u32;
_4 = 166_u8;
_4 = !93_u8;
_6 = 6369375000285361213_i64 as f32;
_9 = -31_isize;
match _2 {
0 => bb1,
1217269407 => bb5,
_ => bb4
}
}
bb25 = {
RET = [57493_u16,42429_u16,47041_u16];
RET = [1107_u16,27406_u16,56680_u16];
Goto(bb2)
}
bb26 = {
(*_15) = [7195_u16,56429_u16,17893_u16];
(*_25) = _16 as u64;
(*_15) = [62816_u16,3657_u16,10940_u16];
(*_25) = _21.1.2 ^ _21.1.2;
_21.2 = core::ptr::addr_of_mut!(_6);
_27 = core::ptr::addr_of_mut!(_9);
(*_15) = [36963_u16,14601_u16,23212_u16];
(*_15) = [57339_u16,32904_u16,31206_u16];
_39.1.0 = !_21.1.0;
_39.1.2 = _38.2 as u64;
_11 = (*_27) + _39.1.3.fld2.0;
_42 = core::ptr::addr_of!(_2);
(*_27) = _11;
(*_42) = _38.2;
(*_25) = 2119629528_i32 as u64;
_39.1.3.fld2.2 = _39.1.3.fld0.fld4 & _39.1.3.fld0.fld4;
_21.1.3.fld2.3 = Move(_39.1.3.fld2.3);
(*_15) = [56494_u16,34256_u16,8577_u16];
_39.1.3.fld0.fld3 = !_21.1.3.fld0.fld3;
(*_27) = _39.1.3.fld2.0;
(*_27) = -_26;
Call((*_25) = core::intrinsics::transmute((*_27)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
_39.1.3.fld0.fld2 = (*_25);
_35 = [(-69_i8),61_i8,68_i8,63_i8,41_i8,92_i8,(-17_i8),99_i8];
(*_25) = _39.1.2 + _39.1.2;
(*_27) = _26 & _21.1.3.fld2.0;
(*_15) = [6369_u16,335_u16,45926_u16];
_16 = _19;
_39.1.3.fld2.1 = _21.1.3.fld2.1;
(*_15) = [58317_u16,19977_u16,30674_u16];
(*_25) = _39.1.2 << _21.1.0;
_11 = _24 as isize;
_21.1.3.fld1 = _30;
_17 = core::ptr::addr_of_mut!((*_15));
_47 = _6;
_41.1 = Move(_21.1.3.fld2.3);
(*_42) = _21.1.0 & _21.3;
(*_42) = _21.1.0 & _39.1.0;
_21.1.3.fld2.3 = Move(_41.1);
(*_25) = !_39.1.2;
(*_17) = [41326_u16,41927_u16,1588_u16];
(*_17) = [1456_u16,2687_u16,29635_u16];
_24 = 8432041130778380118_i64;
_39.2 = core::ptr::addr_of_mut!(_37);
(*_42) = _21.1.0 - _21.3;
(*_27) = _23 as isize;
Goto(bb28)
}
bb28 = {
(*_17) = [48379_u16,13716_u16,38636_u16];
(*_42) = _39.1.0 + _21.3;
(*_42) = (*_25) as u32;
(*_42) = _21.1.0;
(*_25) = _39.1.2 | _39.1.3.fld0.fld2;
_38.1 = [(-82_i8),(-15_i8),(-75_i8),(-98_i8),0_i8,(-95_i8),39_i8,(-5_i8)];
_21.1.2 = (*_25);
(*_15) = [15835_u16,43895_u16,7729_u16];
_39.1.3.fld1 = _21.1.3.fld1;
_21.1.3.fld0.fld0 = _39.1.3.fld0.fld0 + _39.1.3.fld0.fld0;
match _24 {
0 => bb6,
1 => bb16,
2 => bb25,
8432041130778380118 => bb29,
_ => bb7
}
}
bb29 = {
(*_15) = [216_u16,46962_u16,61440_u16];
_46.1 = [70_i8,(-1_i8),81_i8,121_i8,(-20_i8),4_i8,105_i8,(-20_i8)];
(*_25) = _39.1.2 >> (*_27);
(*_27) = _14.2;
_38.0 = &mut (*_42);
(*_27) = _39.1.3.fld2.0 * _14.2;
_46.2 = _38.2 | _39.1.0;
(*_25) = _21.1.2;
_39.1.0 = _41.0 | _46.2;
_39.1.3.fld1 = _21.1.3.fld1;
(*_15) = [31555_u16,60482_u16,42498_u16];
(*_15) = [54172_u16,57696_u16,64167_u16];
_23 = _4 ^ _4;
_37 = _47 * _6;
_37 = _6 * _47;
_43 = core::ptr::addr_of!(_41);
(*_27) = !(*_43).2;
(*_15) = [54165_u16,7006_u16,37729_u16];
(*_43) = (_39.1.0, Move(_21.1.3.fld2.3), _26);
_11 = (*_43).2 >> (*_43).0;
_20 = _16 + _19;
match _24 {
0 => bb26,
1 => bb28,
2 => bb3,
3 => bb12,
4 => bb10,
5 => bb30,
6 => bb31,
8432041130778380118 => bb33,
_ => bb32
}
}
bb30 = {
_4 = 5_u8 ^ 208_u8;
_6 = _2 as f32;
_4 = 44_u8 | 189_u8;
_6 = 249246539324183010757908574305456162381_u128 as f32;
RET = [47653_u16,58855_u16,8884_u16];
RET = [50457_u16,3061_u16,1998_u16];
_2 = 639145426_u32;
_2 = 3567201752_u32 & 188298932_u32;
_4 = !20_u8;
_2 = (-43_i8) as u32;
RET = [49136_u16,911_u16,39491_u16];
_4 = 78_u8;
_4 = true as u8;
_2 = !3338336382_u32;
RET = [44817_u16,38528_u16,30107_u16];
_2 = 1217269407_u32;
_4 = 166_u8;
_4 = !93_u8;
_6 = 6369375000285361213_i64 as f32;
_9 = -31_isize;
match _2 {
0 => bb1,
1217269407 => bb5,
_ => bb4
}
}
bb31 = {
_14.1 = Move(_3);
_13 = false;
_16 = _6 as f64;
_14.2 = _11 >> _11;
_3 = Move(_14.1);
_14.2 = _11 + _9;
_15 = core::ptr::addr_of!(RET);
_14.0 = _2 * _2;
(*_15) = [8577_u16,64132_u16,8885_u16];
_14 = (_2, Move(_3), _11);
_4 = 141_u8 ^ 16_u8;
_3 = Move(_14.1);
(*_15) = [50352_u16,42663_u16,12494_u16];
(*_15) = [47779_u16,58027_u16,8733_u16];
(*_15) = [19660_u16,20748_u16,6716_u16];
_14.1 = Move(_3);
(*_15) = [20082_u16,56772_u16,53309_u16];
Goto(bb7)
}
bb32 = {
_21.1.3.fld2.0 = -_9;
_21.1.3.fld2 = (_9, _13, 14955_i16, Move(_14.1));
_6 = _4 as f32;
RET = [31549_u16,5207_u16,46935_u16];
_18 = _13;
_21.1.3.fld0.fld4 = -_21.1.3.fld2.2;
_21.3 = _14.0 | _2;
_3 = Move(_21.1.3.fld2.3);
_22 = !72095716012688565521369123815482515280_u128;
_21.1.3.fld0.fld3 = !_22;
_14 = (_21.3, Move(_3), _21.1.3.fld2.0);
_20 = _16;
_21.3 = _14.0 * _2;
_3 = Move(_14.1);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.2 = core::ptr::addr_of_mut!(_6);
_21.1.3.fld0.fld0 = 2959879436156694089_usize * 6_usize;
_21.1.3.fld2.2 = _21.1.3.fld2.0 as i16;
match _21.1.2 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb13,
5646802637019371570 => bb15,
_ => bb14
}
}
bb33 = {
_43 = core::ptr::addr_of!((*_43));
(*_43).2 = (*_27) ^ _11;
(*_15) = [157_u16,10569_u16,24856_u16];
_41.0 = !_39.1.0;
_39.1.3.fld3 = core::ptr::addr_of!((*_43).0);
(*_43).2 = _11;
(*_27) = (*_43).2;
(*_43).0 = _46.2;
(*_27) = (*_43).2 - (*_43).2;
_56 = core::ptr::addr_of_mut!(_4);
_26 = (*_27) << _39.1.2;
_19 = _16 + _20;
(*_15) = [35768_u16,57281_u16,50719_u16];
(*_56) = _23 | _23;
_46.0 = &mut (*_43).0;
(*_15) = [39847_u16,48658_u16,54715_u16];
(*_27) = !(*_43).2;
(*_27) = _39.1.0 as isize;
_39.1.3.fld2.3 = Move((*_43).1);
_26 = (*_27) | (*_43).2;
_38.0 = &mut _21.1.0;
_46.1 = _35;
_10 = [_39.1.0];
(*_43).2 = _9 & _26;
_24 = 2447541711381941218_i64 << _9;
_58 = _22 | _39.1.3.fld0.fld3;
(*_56) = 32_i8 as u8;
Goto(bb34)
}
bb34 = {
_46.2 = !_39.1.0;
(*_27) = _11 & (*_43).2;
_35 = [0_i8,21_i8,123_i8,(-33_i8),95_i8,(-127_i8),(-2_i8),(-64_i8)];
_39.1.3.fld0.fld4 = -_39.1.3.fld2.2;
_39.1.3.fld2.1 = _18 | _13;
(*_15) = [55963_u16,44871_u16,41298_u16];
_38.0 = Move(_46.0);
_24 = 1412645502585130476_i64 | (-7284045102935505142_i64);
_39.1.3.fld2.2 = (*_43).2 as i16;
(*_56) = _23;
(*_25) = _39.1.2 * _39.1.2;
_7 = core::ptr::addr_of!(_51);
_36 = [_13,_13,_39.1.3.fld2.1,_39.1.3.fld2.1];
(*_43).2 = (*_27) + _9;
_58 = _24 as u128;
_14 = (_39.1.0, Move(_39.1.3.fld2.3), (*_43).2);
_59.2 = (*_25) as isize;
(*_43).1 = Move(_14.1);
Goto(bb35)
}
bb35 = {
(*_7) = [69_i8,(-43_i8),1_i8,123_i8,119_i8,87_i8,45_i8];
_53 = _39.1.3.fld2.1;
_39.3 = _14.0;
_57.0.fld1 = _46.2;
(*_15) = [62408_u16,19792_u16,18586_u16];
_53 = _39.1.3.fld2.1;
(*_15) = [34441_u16,38355_u16,11904_u16];
(*_27) = !(*_43).2;
(*_7) = [18_i8,33_i8,(-50_i8),51_i8,116_i8,94_i8,113_i8];
(*_7) = [(-57_i8),(-29_i8),(-65_i8),43_i8,(-97_i8),58_i8,5_i8];
Goto(bb36)
}
bb36 = {
_39.2 = core::ptr::addr_of_mut!(_6);
_39.1.3.fld2.0 = (*_27) << (*_43).2;
_32 = [_39.1.3.fld1,_30,_39.1.3.fld1,_39.1.3.fld1,_39.1.3.fld1,_30,_39.1.3.fld1,_30];
(*_27) = (*_43).2;
_58 = _20 as u128;
_61 = !(*_27);
_20 = _16;
_63 = &_24;
(*_27) = (*_43).2 - (*_43).2;
(*_27) = (*_43).2;
(*_7) = [47_i8,92_i8,4_i8,(-30_i8),(-20_i8),(-16_i8),116_i8];
(*_15) = [23747_u16,50664_u16,20331_u16];
(*_7) = [(-87_i8),111_i8,46_i8,(-88_i8),102_i8,(-86_i8),123_i8];
_9 = _14.2 >> (*_25);
_59.1 = Move((*_43).1);
_14.0 = !_46.2;
(*_56) = (*_25) as u8;
_20 = _16;
(*_43).2 = (*_27);
_52 = core::ptr::addr_of!((*_15));
_51 = [63_i8,61_i8,94_i8,(-13_i8),81_i8,(-50_i8),66_i8];
(*_7) = [94_i8,(-30_i8),(-59_i8),45_i8,(-116_i8),(-65_i8),57_i8];
_48 = 25631_u16 & 6575_u16;
Goto(bb37)
}
bb37 = {
(*_15) = [_48,_48,_48];
(*_56) = _23 | _23;
_39.1.3.fld4 = Adt24::Variant3 { fld0: (*_56),fld1: (*_25) };
(*_56) = !Field::<u8>(Variant(_39.1.3.fld4, 3), 0);
_52 = core::ptr::addr_of!((*_15));
(*_7) = [85_i8,(-94_i8),(-71_i8),100_i8,(-99_i8),(-125_i8),(-8_i8)];
(*_56) = (*_27) as u8;
(*_25) = !Field::<u64>(Variant(_39.1.3.fld4, 3), 1);
(*_56) = _23 | Field::<u8>(Variant(_39.1.3.fld4, 3), 0);
_14.2 = _47 as isize;
(*_52) = [_48,_48,_48];
Goto(bb38)
}
bb38 = {
_39.2 = core::ptr::addr_of_mut!(_37);
(*_7) = [20_i8,(-65_i8),68_i8,17_i8,79_i8,(-112_i8),9_i8];
(*_43).1 = Move(_59.1);
(*_27) = -_61;
_59.2 = !(*_43).2;
_24 = (-3396367084496946886_i64) - (-716071599116850389_i64);
(*_15) = [_48,_48,_48];
_46.0 = &mut _46.2;
(*_7) = [27_i8,(-62_i8),(-100_i8),70_i8,(-111_i8),(-122_i8),88_i8];
(*_25) = _39.1.3.fld0.fld2 | Field::<u64>(Variant(_39.1.3.fld4, 3), 1);
(*_7) = [124_i8,52_i8,30_i8,(-63_i8),107_i8,(-28_i8),126_i8];
_59.1 = Move((*_43).1);
_57.0 = Adt17 { fld0: _48,fld1: _39.1.0,fld2: _20 };
(*_7) = [69_i8,17_i8,72_i8,111_i8,(-55_i8),119_i8,(-58_i8)];
_9 = _20 as isize;
(*_15) = [_57.0.fld0,_57.0.fld0,_48];
_69 = _38.1;
_57.1 = (*_25) + (*_25);
(*_15) = [_57.0.fld0,_48,_57.0.fld0];
_14.0 = _39.1.0 * _39.3;
_39.1.1 = _39.1.3.fld2.1;
Goto(bb39)
}
bb39 = {
(*_25) = _57.1 * _39.1.3.fld0.fld2;
(*_25) = _39.1.2 + _57.1;
_5 = &_52;
(*_43).1 = Move(_59.1);
Goto(bb40)
}
bb40 = {
_70 = _13;
_62 = &_57.0.fld1;
(*_15) = [_57.0.fld0,_48,_48];
_43 = core::ptr::addr_of!(_59);
(*_43).0 = _14.0;
(*_25) = _57.1 + _39.1.3.fld0.fld2;
(*_43).0 = (*_62);
(*_56) = !Field::<u8>(Variant(_39.1.3.fld4, 3), 0);
_19 = _16 * _20;
(*_15) = [_57.0.fld0,_48,_48];
_38.2 = (*_43).2 as u32;
(*_43).0 = !(*_62);
(*_27) = (*_43).2 >> (*_43).0;
(*_43).2 = _24 as isize;
_70 = _39.1.1 & _39.1.3.fld2.1;
(*_7) = [67_i8,112_i8,(-41_i8),26_i8,(-51_i8),93_i8,(-92_i8)];
Goto(bb41)
}
bb41 = {
(*_25) = _39.1.3.fld0.fld2 >> (*_27);
(*_15) = [_57.0.fld0,_57.0.fld0,_48];
(*_43).0 = _38.2;
(*_7) = [95_i8,(-120_i8),68_i8,(-69_i8),(-9_i8),(-35_i8),(-53_i8)];
_50 = _70 & _13;
_39.1.1 = (*_62) >= (*_43).0;
(*_56) = _22 as u8;
(*_25) = (-1834532897_i32) as u64;
_39.1.1 = !_50;
_43 = core::ptr::addr_of!((*_43));
_47 = _57.0.fld0 as f32;
(*_15) = [_48,_57.0.fld0,_48];
(*_43).0 = (*_62);
_57.2 = &(*_43).0;
_10 = [(*_62)];
(*_27) = _19 as isize;
_43 = core::ptr::addr_of!((*_43));
(*_43).2 = _11 & _26;
_68 = _39.1.3.fld0.fld3 | _58;
Goto(bb42)
}
bb42 = {
(*_7) = [51_i8,55_i8,24_i8,(-117_i8),20_i8,(-48_i8),(-103_i8)];
_40 = Move(_56);
_18 = _39.1.1;
Call(_29 = core::intrinsics::transmute(_9), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_38.1 = [(-53_i8),0_i8,80_i8,(-5_i8),88_i8,(-3_i8),(-114_i8),(-110_i8)];
(*_27) = _39.1.3.fld2.2 as isize;
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
(*_15) = [_48,_48,_57.0.fld0];
(*_27) = (*_43).2;
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
(*_27) = _59.2 * (*_43).2;
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
_53 = _70 | _70;
place!(Field::<u64>(Variant(_39.1.3.fld4, 3), 1)) = _57.1 + _57.1;
(*_15) = [_48,_57.0.fld0,_57.0.fld0];
(*_25) = !Field::<u64>(Variant(_39.1.3.fld4, 3), 1);
(*_7) = [(-85_i8),84_i8,22_i8,28_i8,53_i8,122_i8,2_i8];
_14.1 = core::ptr::addr_of_mut!(_78.0);
(*_15) = [_48,_48,_48];
_65 = (-74885424886999620676045102400617577745_i128) << (*_43).2;
(*_7) = [(-44_i8),(-25_i8),(-71_i8),(-77_i8),10_i8,(-40_i8),11_i8];
(*_25) = Field::<u64>(Variant(_39.1.3.fld4, 3), 1) + _57.1;
(*_43).2 = (*_27) >> (*_25);
Goto(bb44)
}
bb44 = {
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
_54 = (*_43).2 > (*_27);
(*_27) = (*_43).2 << (*_25);
_12 = core::ptr::addr_of!(_63);
(*_43).2 = (*_25) as isize;
_40 = core::ptr::addr_of_mut!(_79);
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
(*_40) = !_4;
(*_27) = _68 as isize;
_81.1.3.fld4 = Move(_39.1.3.fld4);
(*_25) = _57.1 - Field::<u64>(Variant(_81.1.3.fld4, 3), 1);
_39.1.3.fld0.fld2 = (*_25) << (*_62);
_45 = core::ptr::addr_of!((*_12));
(*_7) = [(-93_i8),(-83_i8),77_i8,(-24_i8),9_i8,(-27_i8),52_i8];
(*_40) = !_23;
(*_27) = !(*_43).2;
Goto(bb45)
}
bb45 = {
_82 = (-121_i8) << (*_27);
(*_7) = [_82,_82,_82,_82,_82,_82,_82];
(*_40) = Field::<u8>(Variant(_81.1.3.fld4, 3), 0) >> (*_43).0;
(*_7) = [_82,_82,_82,_82,_82,_82,_82];
Goto(bb46)
}
bb46 = {
(*_43).2 = !(*_27);
(*_15) = [_57.0.fld0,_48,_57.0.fld0];
_85.3.fld2.1 = _18 & _18;
_75 = [_82,_82,_82,_82,_82,_82,_82];
(*_43).2 = (*_27);
_73 = core::ptr::addr_of!(_57.0);
(*_73).fld2 = _16 - _20;
_39.1.3.fld0.fld4 = !_39.1.3.fld2.2;
(*_40) = _23 + _23;
(*_15) = [(*_73).fld0,(*_73).fld0,_57.0.fld0];
(*_7) = [_82,_82,_82,_82,_82,_82,_82];
(*_25) = Field::<u64>(Variant(_81.1.3.fld4, 3), 1);
(*_40) = Field::<u8>(Variant(_81.1.3.fld4, 3), 0) | _23;
(*_25) = Field::<u64>(Variant(_81.1.3.fld4, 3), 1) - Field::<u64>(Variant(_81.1.3.fld4, 3), 1);
(*_7) = _75;
(*_73).fld2 = _19 - _19;
(*_43).2 = _68 as isize;
Goto(bb47)
}
bb47 = {
_87 = _39.1.3.fld1;
(*_43).2 = _39.1.3.fld2.2 as isize;
_85.3.fld1 = _30;
_85.3.fld0.fld2 = !(*_25);
_85.0 = (*_73).fld1;
(*_27) = (*_43).2 | (*_43).2;
_85.3.fld3 = core::ptr::addr_of!((*_43).0);
(*_25) = _57.1 >> (*_43).2;
_85.3.fld2.3 = core::ptr::addr_of_mut!(_78.0);
(*_15) = [(*_73).fld0,(*_73).fld0,(*_73).fld0];
_54 = !_13;
(*_7) = [_82,_82,_82,_82,_82,_82,_82];
(*_27) = (*_43).2;
_56 = Move(_40);
(*_73).fld0 = !_48;
(*_25) = _85.3.fld0.fld2 >> (*_27);
_79 = 302011413_i32 as u8;
_38.1 = [_82,_82,_82,_82,_82,_82,_82,_82];
(*_73).fld2 = _19 + _19;
(*_27) = (*_43).2 | (*_43).2;
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
Goto(bb48)
}
bb48 = {
_39.1.3.fld4 = Move(_81.1.3.fld4);
_59 = Move(_14);
_68 = !_58;
_92.1.3.fld4 = Adt24::Variant0 { fld0: (-136491619_i32),fld1: Move(_57.0) };
(*_73).fld2 = _24 as f64;
(*_25) = _85.3.fld0.fld2;
(*_43).2 = (*_27) ^ _61;
_81.1.3.fld2.1 = _85.3.fld2.1 < _85.3.fld2.1;
(*_25) = _39.1.2 + _39.1.3.fld0.fld2;
_26 = (*_27) >> (*_27);
_85.3.fld2.2 = (*_43).2 as i16;
(*_27) = _85.3.fld2.2 as isize;
_76 = [_24];
_81.1.3.fld4 = Adt24::Variant0 { fld0: 113869254_i32,fld1: Move(Field::<Adt17>(Variant(_92.1.3.fld4, 0), 1)) };
_29 = [_24];
_92.1.3.fld0.fld1 = core::ptr::addr_of_mut!(_57.0);
_85.3.fld1 = _30;
Goto(bb49)
}
bb49 = {
_92.1.3.fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_92.1.3.fld4, 0), 0)));
(*_25) = _57.1 << (*_43).2;
_85.3.fld2.3 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_92.1.3.fld4, 0), 0)));
(*_73).fld0 = _6 as u16;
_92.1.3.fld0.fld2 = _57.1;
_57.0 = Adt17 { fld0: _48,fld1: _85.0,fld2: Field::<Adt17>(Variant(_81.1.3.fld4, 0), 1).fld2 };
(*_15) = [(*_73).fld0,(*_73).fld0,(*_73).fld0];
(*_27) = !(*_43).2;
_92.2 = core::ptr::addr_of_mut!(_37);
_39.2 = Move(_92.2);
_28 = (*_27) + (*_27);
_96.2 = (*_25) >> _85.0;
(*_43).2 = (*_73).fld0 as isize;
_78.0 = (-613146863_i32);
_91 = Adt25 { fld0: _39.1.3.fld0.fld0,fld1: Move(_92.1.3.fld0.fld1),fld2: (*_25),fld3: _58,fld4: _85.3.fld2.2 };
_57.0.fld0 = Field::<Adt17>(Variant(_81.1.3.fld4, 0), 1).fld0 & _48;
_26 = (*_27);
_100.3.fld3 = core::ptr::addr_of!(_81.3);
(*_43).1 = Move(_92.1.3.fld2.3);
_85.3.fld0.fld2 = _68 as u64;
_65 = -(-116031426780186571586340973104394035659_i128);
(*_43).1 = core::ptr::addr_of_mut!(_78.0);
(*_73).fld2 = _19;
(*_27) = _91.fld0 as isize;
Goto(bb50)
}
bb50 = {
Call(_101 = dump_var(19_usize, 26_usize, Move(_26), 24_usize, Move(_24), 70_usize, Move(_70), 69_usize, Move(_69)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_101 = dump_var(19_usize, 68_usize, Move(_68), 23_usize, Move(_23), 79_usize, Move(_79), 9_usize, Move(_9)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_101 = dump_var(19_usize, 61_usize, Move(_61), 76_usize, Move(_76), 65_usize, Move(_65), 54_usize, Move(_54)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_101 = dump_var(19_usize, 78_usize, Move(_78), 36_usize, Move(_36), 29_usize, Move(_29), 75_usize, Move(_75)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_101 = dump_var(19_usize, 48_usize, Move(_48), 102_usize, _102, 102_usize, _102, 102_usize, _102), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(300645730023221691889053564302331393072_u128), std::hint::black_box('\u{9913e}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(1_i8), std::hint::black_box(53974_u16), std::hint::black_box((-422427285_i32)), std::hint::black_box((-7048731573068530291_i64)), std::hint::black_box((-164299533006558877091638680539666471668_i128)), std::hint::black_box(4099061153_u32), std::hint::black_box(16567526698444200154_u64));
                
            }
#[derive(Debug)]
pub struct Adt17 {
fld0: u16,
fld1: u32,
fld2: f64,
}
#[derive(Debug)]
pub enum Adt23 {
Variant0{
fld0: u64,
fld1: i16,
fld2: u8,

},
Variant1{
fld0: u16,
fld1: *mut i32,

}}
#[derive(Debug)]
pub enum Adt24 {
Variant0{
fld0: i32,
fld1: Adt17,

},
Variant1{
fld0: [u64; 4],
fld1: Adt17,

},
Variant2{
fld0: i8,
fld1: [u64; 4],

},
Variant3{
fld0: u8,
fld1: u64,

}}
#[derive(Debug)]
pub struct Adt25 {
fld0: usize,
fld1: *mut Adt17,
fld2: u64,
fld3: u128,
fld4: i16,
}
#[derive(Debug)]
pub enum Adt29 {
Variant0{
fld0: [u64; 4],
fld1: char,
fld2: f32,
fld3: u16,
fld4: u8,
fld5: i32,
fld6: u64,
fld7: i128,

},
Variant1{
fld0: bool,
fld1: usize,
fld2: isize,
fld3: i8,
fld4: Adt24,

}}
#[derive(Debug)]
pub struct Adt36 {
fld0: Adt25,
fld1: char,
fld2: (isize, bool, i16, *mut i32),
fld3: *const u32,
fld4: Adt24,
}
#[derive(Debug)]
pub enum Adt68 {
Variant0{
fld0: i32,
fld1: *mut bool,
fld2: i64,
fld3: *mut u128,
fld4: i128,

},
Variant1{
fld0: *mut Adt17,
fld1: char,
fld2: (u32, *mut i32, isize),
fld3: f64,
fld4: *mut i32,
fld5: [i8; 8],
fld6: usize,
fld7: *const (u32, *mut i32, isize),

}}
#[derive(Debug)]
pub enum Adt79 {
Variant0{
fld0: Adt17,
fld1: i64,
fld2: [i8; 7],
fld3: Adt29,

},
Variant1{
fld0: *const Adt36,
fld1: char,
fld2: isize,
fld3: (u32, *mut i32, isize),
fld4: u128,
fld5: *const [i8; 7],

},
Variant2{
fld0: *const (u32, *mut i32, isize),

}}

