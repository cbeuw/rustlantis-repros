#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: usize,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: u16,mut _8: u128) -> char {
mir! {
type RET = char;
let _9: f32;
let _10: &'static [u128; 2];
let _11: u16;
let _12: [usize; 4];
let _13: i64;
let _14: bool;
let _15: &'static f32;
let _16: *mut i64;
let _17: i128;
let _18: u128;
let _19: i64;
let _20: *const (&'static bool,);
let _21: &'static mut (*mut i64,);
let _22: &'static mut (Adt26, i16, char, Adt31);
let _23: *const *const isize;
let _24: &'static mut i64;
let _25: f64;
let _26: u128;
let _27: f32;
let _28: [i16; 8];
let _29: &'static mut &'static f64;
let _30: char;
let _31: isize;
let _32: Adt43;
let _33: char;
let _34: u128;
let _35: i16;
let _36: u8;
let _37: i32;
let _38: &'static bool;
let _39: &'static mut &'static bool;
let _40: bool;
let _41: [u16; 1];
let _42: *mut (usize, i32);
let _43: u32;
let _44: *mut Adt25;
let _45: (*mut i64,);
let _46: bool;
let _47: bool;
let _48: isize;
let _49: i16;
let _50: usize;
let _51: [u8; 3];
let _52: char;
let _53: char;
let _54: u32;
let _55: Adt86;
let _56: usize;
let _57: (&'static bool,);
let _58: &'static f64;
let _59: *mut Adt26;
let _60: (Adt26, i16, char, Adt31);
let _61: f64;
let _62: f32;
let _63: (&'static bool,);
let _64: (&'static isize, i8);
let _65: char;
let _66: isize;
let _67: f32;
let _68: &'static *mut Adt26;
let _69: isize;
let _70: &'static [u128; 2];
let _71: f32;
let _72: &'static f32;
let _73: f64;
let _74: isize;
let _75: u64;
let _76: [u16; 3];
let _77: [i16; 8];
let _78: isize;
let _79: *mut i64;
let _80: [i128; 2];
let _81: [bool; 4];
let _82: *const *const (&'static isize, i8);
let _83: &'static mut (Adt26, i16, char, Adt31);
let _84: *const i64;
let _85: bool;
let _86: &'static [u128; 2];
let _87: *mut Adt26;
let _88: ([i128; 2], Adt26, *mut (Adt26, i16, char, Adt31), *const i64);
let _89: u8;
let _90: f64;
let _91: &'static &'static bool;
let _92: &'static mut (*mut i64,);
let _93: f32;
let _94: i16;
let _95: f64;
let _96: ();
let _97: ();
{
_8 = 165383696178316421358021352953520721812_u128;
_4 = (-100_i8);
_3 = !(-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_5 = (-2000083139_i32) as i16;
_7 = 11729_u16 ^ 50915_u16;
_8 = !235675695064581092276720956053600260154_u128;
_5 = (-32242_i16) & (-14535_i16);
_7 = false as u16;
_11 = _7 + _7;
_1 = 5_usize << _4;
_1 = !7_usize;
_6 = 1612169011_i32 ^ (-1087689327_i32);
_6 = (-268404183_i32) & 519998614_i32;
_6 = !810160535_i32;
_7 = !_11;
_2 = '\u{5e8b2}';
_3 = !(-9223372036854775808_isize);
_8 = 222914578620968651174703995977537678096_u128;
_3 = 9223372036854775807_isize;
_8 = 133090450562327804751223447343559020754_u128 >> _5;
_8 = _7 as u128;
_11 = 4023339600665182192_u64 as u16;
_4 = 49_i8 * (-88_i8);
_4 = 6_i8 >> _5;
_6 = -572149768_i32;
_3 = (-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
_5 = (-1740_i16) ^ (-28638_i16);
RET = _2;
RET = _2;
_9 = 72_u8 as f32;
_8 = 31691236076349784327446590169697848145_u128 | 258829902534069939195345725228828489465_u128;
_11 = !_7;
RET = _2;
Call(RET = fn1(_8, _2, _2, _11, _4, _1, _3, _3, _3, _9, _5, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = 126_u8 as f32;
_8 = !101031430439230298223095881379660702059_u128;
_4 = 49_i8 | 27_i8;
_4 = 31_i8 - 111_i8;
_14 = _5 > _5;
_7 = !_11;
_11 = _7;
_15 = &_9;
RET = _2;
_1 = 2486943384087700543_usize + 4_usize;
_1 = 5021561330469093132_usize;
_8 = 141631420633166512083783643611338781571_u128 & 209453770268010282875871074158923932577_u128;
_4 = (-59_i8);
_11 = !_7;
_8 = !32090902189097018317391994229128984782_u128;
_16 = core::ptr::addr_of_mut!(_13);
(*_16) = 224673833219785082_i64;
_12 = [_1,_1,_1,_1];
(*_16) = 261912544682259411_i64 << _11;
RET = _2;
_18 = 84_u8 as u128;
(*_16) = (-8661490872322818213_i64) & 4846494374116257599_i64;
_18 = !_8;
(*_16) = (-887916265391247129_i64);
match (*_16) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463462486691166376964327 => bb10,
_ => bb9
}
}
bb3 = {
_5 = (-1740_i16) ^ (-28638_i16);
RET = _2;
RET = _2;
_9 = 72_u8 as f32;
_8 = 31691236076349784327446590169697848145_u128 | 258829902534069939195345725228828489465_u128;
_11 = !_7;
RET = _2;
Call(RET = fn1(_8, _2, _2, _11, _4, _1, _3, _3, _3, _9, _5, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_19 = -(*_16);
(*_16) = !_19;
(*_16) = _19;
_8 = _18 << (*_16);
(*_16) = _6 as i64;
(*_16) = _19 - _19;
_17 = 3033627466541733779982880818825007059_i128 << (*_16);
_6 = _14 as i32;
_11 = _7 << _13;
(*_16) = _19;
_3 = 10744757117731582899_u64 as isize;
RET = _2;
_3 = 24_isize;
(*_16) = _19 ^ _19;
(*_16) = _3 as i64;
match _4 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb8,
340282366920938463463374607431768211397 => bb11,
_ => bb6
}
}
bb11 = {
_3 = (-9223372036854775808_isize);
_1 = _14 as usize;
_16 = core::ptr::addr_of_mut!((*_16));
_3 = (-86_isize) | 9223372036854775807_isize;
_25 = _6 as f64;
(*_16) = _19 & _19;
(*_16) = _19;
_6 = -(-478883474_i32);
(*_16) = _1 as i64;
_14 = (*_16) < (*_16);
(*_16) = _19 ^ _19;
_7 = _14 as u16;
(*_16) = _19 | _19;
(*_16) = _17 as i64;
(*_16) = _5 as i64;
Goto(bb12)
}
bb12 = {
_24 = &mut (*_16);
_12 = [_1,_1,_1,_1];
(*_24) = _19;
_12 = [_1,_1,_1,_1];
(*_24) = _19;
(*_24) = _19 << _18;
(*_24) = _19;
(*_24) = !_19;
(*_24) = _19 >> _18;
_2 = RET;
_28 = [_5,_5,_5,_5,_5,_5,_5,_5];
(*_24) = _19 | _19;
(*_24) = _25 as i64;
_12 = [_1,_1,_1,_1];
_28 = [_5,_5,_5,_5,_5,_5,_5,_5];
match _4 {
0 => bb6,
1 => bb2,
340282366920938463463374607431768211397 => bb13,
_ => bb5
}
}
bb13 = {
_3 = (-9223372036854775808_isize);
_26 = !_8;
_3 = (-41_isize) - 9223372036854775807_isize;
_24 = &mut _19;
(*_24) = !(-3672477472630928877_i64);
(*_24) = 6971302960968233340_i64 + (-2499803345476721290_i64);
(*_24) = 1132505592_u32 as i64;
_14 = (*_24) > (*_24);
(*_24) = 3789207297880096074_u64 as i64;
_8 = _26 | _26;
(*_24) = -(-7023456954002168819_i64);
_1 = !6_usize;
(*_24) = (-1371867095566740005_i64) - 4621970890111276627_i64;
(*_24) = -(-5929332378312805228_i64);
_17 = -11015657448239071361911000178699028075_i128;
_31 = _3 - _3;
(*_24) = (-8266531549819527847_i64);
Goto(bb14)
}
bb14 = {
(*_24) = (-4309593278128708180_i64) * (-8717124373690520133_i64);
(*_24) = (-4229173932755767127_i64) & (-7380793809326808736_i64);
RET = _2;
(*_24) = (-6677582552575887062_i64) << _18;
_14 = _31 != _3;
(*_24) = -(-1210397100464200949_i64);
Goto(bb15)
}
bb15 = {
(*_24) = 7789501154998952351_i64 | 8071394430807551323_i64;
(*_24) = (-5061967860780027572_i64) >> _11;
(*_24) = (*_15) as i64;
_1 = 4_usize ^ 7_usize;
_26 = _8 << _7;
match _4 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211397 => bb17,
_ => bb16
}
}
bb16 = {
_5 = (-1740_i16) ^ (-28638_i16);
RET = _2;
RET = _2;
_9 = 72_u8 as f32;
_8 = 31691236076349784327446590169697848145_u128 | 258829902534069939195345725228828489465_u128;
_11 = !_7;
RET = _2;
Call(RET = fn1(_8, _2, _2, _11, _4, _1, _3, _3, _3, _9, _5, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb17 = {
_32 = Adt43::Variant2 { fld0: _25 };
_34 = _26;
_14 = !true;
(*_24) = _4 as i64;
(*_24) = 5562085010541045912_i64 << _11;
(*_24) = -4901307302720335137_i64;
_2 = RET;
_1 = 17421555895518784792_u64 as usize;
(*_24) = (-8054569931322794004_i64) << _7;
(*_24) = _1 as i64;
Goto(bb18)
}
bb18 = {
_9 = 909183405357723578_u64 as f32;
_5 = 8421_i16 & (-10102_i16);
(*_24) = (-989706166393014852_i64) * (-3722127505846363449_i64);
place!(Field::<f64>(Variant(_32, 2), 0)) = _25;
(*_24) = _1 as i64;
_12 = [_1,_1,_1,_1];
_40 = _14;
_35 = -_5;
(*_24) = !(-8403045104804913266_i64);
_16 = core::ptr::addr_of_mut!((*_24));
(*_24) = (-1774623582634840517_i64) + (-8873239203754325351_i64);
(*_24) = 163_u8 as i64;
_41 = [_11];
_48 = -_31;
(*_24) = (-4789553333360795811_i64) << _7;
_11 = _7 + _7;
(*_24) = (-8970570002126956752_i64);
_30 = RET;
_40 = _14 & _14;
_37 = _6 >> _7;
_30 = _2;
Goto(bb19)
}
bb19 = {
(*_24) = (-3947012298935581981_i64);
Goto(bb20)
}
bb20 = {
(*_24) = (-41285257224167712_i64) & (-8187255910168056844_i64);
Goto(bb21)
}
bb21 = {
Call(_4 = core::intrinsics::transmute(_14), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_12 = [_1,_1,_1,_1];
_30 = RET;
(*_24) = _37 as i64;
RET = _30;
_41 = [_7];
_54 = _1 as u32;
_7 = _11 ^ _11;
_46 = _14 ^ _40;
_18 = _26;
(*_24) = 7472719481890837630_i64;
_52 = RET;
(*_24) = 7328567160696461978_i64 & 365839076433472577_i64;
(*_24) = _25 as i64;
(*_24) = 9149081494648304969_i64 << _37;
(*_24) = (-2242412732563360674_i64) & 6435436711580689468_i64;
_50 = _1;
_40 = !_14;
_36 = !112_u8;
_50 = !_1;
_9 = _18 as f32;
Goto(bb23)
}
bb23 = {
(*_24) = (-5945945994503854112_i64) ^ (-5121310894334166284_i64);
_36 = 118_u8;
_40 = _46 ^ _46;
_40 = _46 ^ _46;
_2 = RET;
_25 = -Field::<f64>(Variant(_32, 2), 0);
_45.0 = core::ptr::addr_of_mut!((*_24));
_26 = _34 | _34;
(*_24) = !345038926941848729_i64;
_53 = _2;
_25 = Field::<f64>(Variant(_32, 2), 0) + Field::<f64>(Variant(_32, 2), 0);
(*_24) = _37 as i64;
_4 = (*_24) as i8;
_60.3.fld0.fld3 = core::ptr::addr_of!((*_24));
_25 = _36 as f64;
_59 = core::ptr::addr_of_mut!(_60.3.fld0);
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld2 = Field::<f64>(Variant(_32, 2), 0) - Field::<f64>(Variant(_32, 2), 0);
(*_59).fld4 = !_5;
(*_59).fld0 = _1 - _50;
_6 = !_37;
(*_24) = (-7796348491330044960_i64) << _34;
_35 = (*_59).fld4 - (*_59).fld4;
_4 = 114_i8;
(*_59).fld3 = core::ptr::addr_of!((*_24));
Goto(bb24)
}
bb24 = {
(*_59).fld1 = !2303851979759980514_u64;
(*_24) = (-2289818986820784005_i64) + 7723569021705858740_i64;
_60.0 = Adt26 { fld0: (*_59).fld0,fld1: (*_59).fld1,fld2: (*_59).fld2,fld3: Move((*_59).fld3),fld4: _60.3.fld0.fld4 };
(*_59).fld0 = !_60.0.fld0;
_60.3.fld0.fld3 = Move(_60.0.fld3);
_47 = _46 >= _46;
(*_59).fld4 = _35 | _5;
_30 = _53;
(*_59).fld0 = _60.0.fld0 | _50;
(*_59).fld0 = _60.0.fld0 | _50;
_58 = &(*_59).fld2;
_7 = _11 & _11;
(*_24) = _17 as i64;
(*_59).fld2 = Field::<f64>(Variant(_32, 2), 0) + _60.0.fld2;
_38 = &_47;
(*_59).fld3 = core::ptr::addr_of!((*_24));
match _4 {
0 => bb1,
1 => bb22,
2 => bb15,
3 => bb8,
4 => bb21,
114 => bb25,
_ => bb16
}
}
bb25 = {
(*_59).fld4 = _5 >> (*_59).fld1;
_48 = (*_59).fld2 as isize;
_63.0 = &(*_38);
(*_59).fld2 = _60.0.fld2 - _60.0.fld2;
_64.0 = &_48;
_35 = !(*_59).fld4;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_63.0 = &_46;
(*_59).fld1 = _60.0.fld1 & _60.0.fld1;
(*_59).fld2 = _37 as f64;
_56 = (*_59).fld0 - (*_59).fld0;
Goto(bb26)
}
bb26 = {
(*_59).fld4 = -_60.0.fld4;
(*_59).fld3 = core::ptr::addr_of!((*_24));
Call(_18 = core::intrinsics::transmute(_28), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
_60.1 = (*_59).fld4;
(*_24) = 6077661552991316083_i64;
(*_59).fld2 = _60.0.fld2 + _60.0.fld2;
match (*_24) {
0 => bb4,
1 => bb13,
2 => bb28,
3 => bb29,
6077661552991316083 => bb31,
_ => bb30
}
}
bb28 = {
_19 = -(*_16);
(*_16) = !_19;
(*_16) = _19;
_8 = _18 << (*_16);
(*_16) = _6 as i64;
(*_16) = _19 - _19;
_17 = 3033627466541733779982880818825007059_i128 << (*_16);
_6 = _14 as i32;
_11 = _7 << _13;
(*_16) = _19;
_3 = 10744757117731582899_u64 as isize;
RET = _2;
_3 = 24_isize;
(*_16) = _19 ^ _19;
(*_16) = _3 as i64;
match _4 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb8,
340282366920938463463374607431768211397 => bb11,
_ => bb6
}
}
bb29 = {
_5 = (-1740_i16) ^ (-28638_i16);
RET = _2;
RET = _2;
_9 = 72_u8 as f32;
_8 = 31691236076349784327446590169697848145_u128 | 258829902534069939195345725228828489465_u128;
_11 = !_7;
RET = _2;
Call(RET = fn1(_8, _2, _2, _11, _4, _1, _3, _3, _3, _9, _5, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb30 = {
Return()
}
bb31 = {
_12 = [(*_59).fld0,(*_59).fld0,_56,(*_59).fld0];
(*_59).fld0 = _5 as usize;
_12 = [(*_59).fld0,(*_59).fld0,_60.0.fld0,_56];
(*_24) = _48 as i64;
(*_59).fld2 = _17 as f64;
_33 = _30;
match _4 {
0 => bb25,
1 => bb11,
2 => bb4,
114 => bb33,
_ => bb32
}
}
bb32 = {
Return()
}
bb33 = {
_28 = [(*_59).fld4,(*_59).fld4,_60.1,(*_59).fld4,_5,(*_59).fld4,(*_59).fld4,_60.1];
(*_24) = 8327795680884214937_i64;
(*_24) = !8286505378225364667_i64;
_67 = _9 + _9;
_64.1 = -_4;
(*_59).fld0 = !_50;
(*_59).fld4 = !_5;
_46 = (*_59).fld0 < (*_59).fld0;
Call((*_24) = core::intrinsics::bswap(386193040218048402_i64), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
(*_59).fld0 = !_56;
_54 = _6 as u32;
(*_59).fld2 = _60.0.fld2 + _60.0.fld2;
(*_59).fld2 = _60.0.fld2;
_48 = _30 as isize;
_64.1 = _4 | _4;
_51 = [_36,_36,_36];
(*_59).fld1 = _64.1 as u64;
_25 = (*_59).fld4 as f64;
(*_24) = (*_38) as i64;
match _36 {
0 => bb8,
1 => bb2,
2 => bb10,
3 => bb35,
118 => bb37,
_ => bb36
}
}
bb35 = {
_19 = -(*_16);
(*_16) = !_19;
(*_16) = _19;
_8 = _18 << (*_16);
(*_16) = _6 as i64;
(*_16) = _19 - _19;
_17 = 3033627466541733779982880818825007059_i128 << (*_16);
_6 = _14 as i32;
_11 = _7 << _13;
(*_16) = _19;
_3 = 10744757117731582899_u64 as isize;
RET = _2;
_3 = 24_isize;
(*_16) = _19 ^ _19;
(*_16) = _3 as i64;
match _4 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb8,
340282366920938463463374607431768211397 => bb11,
_ => bb6
}
}
bb36 = {
Return()
}
bb37 = {
_35 = _4 as i16;
_27 = (*_24) as f32;
(*_59).fld3 = core::ptr::addr_of!((*_24));
Goto(bb38)
}
bb38 = {
_61 = -Field::<f64>(Variant(_32, 2), 0);
_52 = _2;
_49 = (*_59).fld4;
(*_59).fld2 = _8 as f64;
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld0 = _56 | _60.0.fld0;
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld4 = (*_38) as i16;
(*_59).fld4 = _35 + _5;
(*_59).fld2 = _6 as f64;
_2 = _53;
_9 = _67 + _27;
(*_59).fld2 = -_61;
(*_24) = (-1452269319642768999_i64);
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld1 = _17 as u64;
_37 = _6;
(*_59).fld4 = _17 as i16;
(*_59).fld1 = _64.1 as u64;
match _36 {
0 => bb8,
1 => bb30,
2 => bb3,
3 => bb6,
118 => bb40,
_ => bb39
}
}
bb39 = {
_60.1 = (*_59).fld4;
(*_24) = 6077661552991316083_i64;
(*_59).fld2 = _60.0.fld2 + _60.0.fld2;
match (*_24) {
0 => bb4,
1 => bb13,
2 => bb28,
3 => bb29,
6077661552991316083 => bb31,
_ => bb30
}
}
bb40 = {
_30 = _33;
(*_59).fld4 = _35 & _60.1;
_60.2 = RET;
_4 = _64.1;
Call((*_24) = core::intrinsics::transmute(_48), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
(*_24) = (-3923330609772212002_i64);
(*_59).fld0 = _36 as usize;
_7 = _11 * _11;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_65 = RET;
_43 = _54 << _7;
(*_59).fld2 = _60.0.fld2 * _61;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_75 = (*_59).fld1 >> (*_59).fld0;
_60.0.fld4 = (*_59).fld4 | (*_59).fld4;
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld0 = _60.0.fld0 & _56;
match (*_24) {
0 => bb38,
1 => bb16,
2 => bb29,
3 => bb39,
4 => bb30,
5 => bb13,
6 => bb7,
340282366920938463459451276821995999454 => bb42,
_ => bb10
}
}
bb42 = {
_60.3.fld0.fld0 = _67 as usize;
(*_59).fld0 = _67 as usize;
_46 = (*_38);
_1 = (*_59).fld0 >> (*_24);
_60.0.fld0 = (*_59).fld0;
_75 = (*_59).fld1;
Goto(bb43)
}
bb43 = {
(*_59).fld1 = !_75;
(*_59).fld1 = _75;
_34 = _26 * _26;
(*_59).fld1 = !_75;
_21 = &mut _45;
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld4 = _36 as i16;
_73 = _60.3.fld0.fld2 * _61;
_47 = _40 & _46;
_64.0 = &_31;
(*_21).0 = Move(_16);
_63 = (Move(_38),);
(*_59).fld2 = _67 as f64;
_54 = _53 as u32;
(*_21).0 = core::ptr::addr_of_mut!((*_24));
_59 = core::ptr::addr_of_mut!(_60.3.fld0);
(*_59).fld2 = Field::<f64>(Variant(_32, 2), 0);
Goto(bb44)
}
bb44 = {
(*_59).fld3 = core::ptr::addr_of!((*_24));
_46 = _47;
(*_59).fld4 = _60.0.fld4;
_63.0 = &_47;
_72 = &_27;
_80 = [_17,_17];
_71 = (*_72);
_29 = &mut _58;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_46 = _60.0.fld0 >= (*_59).fld0;
(*_59).fld1 = _75;
(*_59).fld4 = _36 as i16;
(*_24) = 794396613275584428_i64;
(*_59).fld2 = _73 * _73;
(*_59).fld2 = _25;
_71 = _31 as f32;
_60.3.fld0.fld4 = _5 | _60.0.fld4;
(*_24) = -(-3001562402988378738_i64);
_12 = [(*_59).fld0,(*_59).fld0,(*_59).fld0,(*_59).fld0];
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 7757120297391056035_i64;
_37 = -_6;
_84 = core::ptr::addr_of!((*_24));
match (*_84) {
7757120297391056035 => bb46,
_ => bb45
}
}
bb45 = {
_28 = [(*_59).fld4,(*_59).fld4,_60.1,(*_59).fld4,_5,(*_59).fld4,(*_59).fld4,_60.1];
(*_24) = 8327795680884214937_i64;
(*_24) = !8286505378225364667_i64;
_67 = _9 + _9;
_64.1 = -_4;
(*_59).fld0 = !_50;
(*_59).fld4 = !_5;
_46 = (*_59).fld0 < (*_59).fld0;
Call((*_24) = core::intrinsics::bswap(386193040218048402_i64), ReturnTo(bb34), UnwindUnreachable())
}
bb46 = {
(*_84) = 975023061960593581_i64;
_60.0 = Adt26 { fld0: _60.3.fld0.fld0,fld1: (*_59).fld1,fld2: (*_59).fld2,fld3: Move((*_59).fld3),fld4: _35 };
(*_24) = _36 as i64;
_60.0.fld1 = (*_59).fld1 * (*_59).fld1;
_88.1.fld0 = (*_59).fld2 as usize;
(*_59) = Adt26 { fld0: _1,fld1: _60.0.fld1,fld2: _73,fld3: Move(_60.0.fld3),fld4: _60.1 };
(*_59).fld4 = _49 >> (*_59).fld1;
(*_59).fld2 = _25 * _60.0.fld2;
(*_59).fld4 = _60.0.fld4 << (*_59).fld0;
(*_21).0 = core::ptr::addr_of_mut!((*_24));
(*_59).fld1 = _60.0.fld1 | _60.0.fld1;
(*_21).0 = core::ptr::addr_of_mut!((*_24));
(*_21).0 = core::ptr::addr_of_mut!((*_24));
(*_59).fld3 = core::ptr::addr_of!((*_24));
_56 = (*_59).fld0 << (*_59).fld4;
(*_29) = &_61;
(*_59).fld0 = _56;
_72 = Move(_15);
(*_59) = Adt26 { fld0: _56,fld1: _60.0.fld1,fld2: _73,fld3: Move(_84),fld4: _5 };
(*_59).fld1 = _60.0.fld1 - _60.0.fld1;
_71 = _4 as f32;
Goto(bb47)
}
bb47 = {
(*_59).fld4 = _60.1 & _5;
(*_21).0 = core::ptr::addr_of_mut!((*_24));
_72 = &_71;
_16 = core::ptr::addr_of_mut!((*_24));
(*_24) = -(-7435788525517399960_i64);
RET = _52;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_15 = Move(_72);
(*_59).fld2 = _73 - _73;
(*_59).fld2 = _60.0.fld2 - _73;
_88.1 = Move((*_59));
(*_21).0 = Move(_16);
(*_59) = Adt26 { fld0: _60.0.fld0,fld1: _88.1.fld1,fld2: Field::<f64>(Variant(_32, 2), 0),fld3: Move(_88.1.fld3),fld4: _88.1.fld4 };
(*_29) = &(*_59).fld2;
_57 = (Move(_63.0),);
_88.2 = core::ptr::addr_of_mut!(_60);
(*_59).fld4 = -_5;
_51 = [_36,_36,_36];
_7 = _11 + _11;
match _36 {
0 => bb38,
1 => bb20,
2 => bb25,
3 => bb48,
4 => bb49,
5 => bb50,
6 => bb51,
118 => bb53,
_ => bb52
}
}
bb48 = {
(*_24) = (-3923330609772212002_i64);
(*_59).fld0 = _36 as usize;
_7 = _11 * _11;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_65 = RET;
_43 = _54 << _7;
(*_59).fld2 = _60.0.fld2 * _61;
(*_59).fld3 = core::ptr::addr_of!((*_24));
_75 = (*_59).fld1 >> (*_59).fld0;
_60.0.fld4 = (*_59).fld4 | (*_59).fld4;
(*_59).fld3 = core::ptr::addr_of!((*_24));
(*_59).fld0 = _60.0.fld0 & _56;
match (*_24) {
0 => bb38,
1 => bb16,
2 => bb29,
3 => bb39,
4 => bb30,
5 => bb13,
6 => bb7,
340282366920938463459451276821995999454 => bb42,
_ => bb10
}
}
bb49 = {
(*_24) = (-3947012298935581981_i64);
Goto(bb20)
}
bb50 = {
_32 = Adt43::Variant2 { fld0: _25 };
_34 = _26;
_14 = !true;
(*_24) = _4 as i64;
(*_24) = 5562085010541045912_i64 << _11;
(*_24) = -4901307302720335137_i64;
_2 = RET;
_1 = 17421555895518784792_u64 as usize;
(*_24) = (-8054569931322794004_i64) << _7;
(*_24) = _1 as i64;
Goto(bb18)
}
bb51 = {
_5 = (-1740_i16) ^ (-28638_i16);
RET = _2;
RET = _2;
_9 = 72_u8 as f32;
_8 = 31691236076349784327446590169697848145_u128 | 258829902534069939195345725228828489465_u128;
_11 = !_7;
RET = _2;
Call(RET = fn1(_8, _2, _2, _11, _4, _1, _3, _3, _3, _9, _5, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb52 = {
_19 = -(*_16);
(*_16) = !_19;
(*_16) = _19;
_8 = _18 << (*_16);
(*_16) = _6 as i64;
(*_16) = _19 - _19;
_17 = 3033627466541733779982880818825007059_i128 << (*_16);
_6 = _14 as i32;
_11 = _7 << _13;
(*_16) = _19;
_3 = 10744757117731582899_u64 as isize;
RET = _2;
_3 = 24_isize;
(*_16) = _19 ^ _19;
(*_16) = _3 as i64;
match _4 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb8,
340282366920938463463374607431768211397 => bb11,
_ => bb6
}
}
bb53 = {
Goto(bb54)
}
bb54 = {
Call(_96 = dump_var(0_usize, 6_usize, Move(_6), 56_usize, Move(_56), 65_usize, Move(_65), 52_usize, Move(_52)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_96 = dump_var(0_usize, 54_usize, Move(_54), 3_usize, Move(_3), 53_usize, Move(_53), 12_usize, Move(_12)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_96 = dump_var(0_usize, 18_usize, Move(_18), 35_usize, Move(_35), 50_usize, Move(_50), 17_usize, Move(_17)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_96 = dump_var(0_usize, 80_usize, Move(_80), 7_usize, Move(_7), 49_usize, Move(_49), 43_usize, Move(_43)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_96 = dump_var(0_usize, 28_usize, Move(_28), 2_usize, Move(_2), 11_usize, Move(_11), 1_usize, Move(_1)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: u128,mut _2: char,mut _3: char,mut _4: u16,mut _5: i8,mut _6: usize,mut _7: isize,mut _8: isize,mut _9: isize,mut _10: f32,mut _11: i16,mut _12: isize) -> char {
mir! {
type RET = char;
let _13: f32;
let _14: *mut Adt26;
let _15: f32;
let _16: u16;
let _17: char;
let _18: &'static &'static bool;
let _19: f64;
let _20: *mut Adt26;
let _21: char;
let _22: f64;
let _23: (f64,);
let _24: *const (i32, i8, &'static mut i64, &'static bool);
let _25: char;
let _26: (*mut i64,);
let _27: [char; 5];
let _28: bool;
let _29: &'static [u128; 2];
let _30: &'static mut [u16; 1];
let _31: *mut *mut (usize, i32);
let _32: &'static usize;
let _33: &'static mut i64;
let _34: &'static f64;
let _35: bool;
let _36: u128;
let _37: bool;
let _38: *const (&'static isize, i8);
let _39: f32;
let _40: f32;
let _41: &'static usize;
let _42: f64;
let _43: &'static mut &'static bool;
let _44: i64;
let _45: u16;
let _46: *mut (Adt26, i16, char, Adt31);
let _47: char;
let _48: &'static mut &'static f64;
let _49: [bool; 4];
let _50: *mut (usize, i32);
let _51: f32;
let _52: *const *const (&'static isize, i8);
let _53: u16;
let _54: f64;
let _55: &'static [u128; 2];
let _56: [u8; 3];
let _57: &'static &'static bool;
let _58: &'static mut i64;
let _59: *mut (Adt26, i16, char, Adt31);
let _60: [char; 5];
let _61: *const i8;
let _62: &'static *const (&'static isize, i8);
let _63: &'static &'static bool;
let _64: i128;
let _65: *const *const (&'static isize, i8);
let _66: &'static isize;
let _67: isize;
let _68: &'static mut i64;
let _69: (&'static bool,);
let _70: *const *const isize;
let _71: u128;
let _72: u16;
let _73: *const (&'static isize, i8);
let _74: Adt19;
let _75: i32;
let _76: &'static mut [u16; 1];
let _77: (&'static isize, i8);
let _78: i128;
let _79: char;
let _80: isize;
let _81: i8;
let _82: char;
let _83: char;
let _84: [u128; 2];
let _85: &'static *const i8;
let _86: (&'static mut (Adt26, i16, char, Adt31), usize);
let _87: &'static isize;
let _88: u8;
let _89: char;
let _90: (Adt26, i16, char, Adt31);
let _91: (Adt26, i16, char, Adt31);
let _92: char;
let _93: &'static f32;
let _94: char;
let _95: i128;
let _96: &'static f32;
let _97: f64;
let _98: i8;
let _99: (f64, &'static mut i64, &'static bool, &'static usize);
let _100: &'static mut &'static f64;
let _101: f64;
let _102: isize;
let _103: i8;
let _104: Adt73;
let _105: &'static f64;
let _106: isize;
let _107: *const *const isize;
let _108: f64;
let _109: bool;
let _110: ();
let _111: ();
{
_4 = _2 as u16;
_5 = _3 as i8;
_3 = _2;
RET = _3;
_9 = _7 * _12;
_6 = !5_usize;
RET = _2;
_9 = 9189808479001077501_u64 as isize;
_11 = (-14113_i16) ^ 18406_i16;
_6 = !0_usize;
_5 = (-39_i8) ^ (-46_i8);
_3 = RET;
_10 = (-43891648453940343576604408512703472339_i128) as f32;
_10 = _12 as f32;
_8 = _7;
_7 = _12;
_9 = _4 as isize;
_4 = !35232_u16;
_12 = _9 >> _1;
_8 = _4 as isize;
_9 = _12 >> _6;
Goto(bb1)
}
bb1 = {
_3 = _2;
_10 = _5 as f32;
_12 = _7 + _9;
_10 = _4 as f32;
_11 = 213_u8 as i16;
_1 = 186652443779825119953205186664237516336_u128 + 102728020172450625196220834205326787366_u128;
_12 = _9;
RET = _2;
_11 = 29623_i16 + (-10975_i16);
_7 = _4 as isize;
_11 = (-17153_i16);
_4 = 39856_u16 << _12;
_5 = (-55_i8);
Goto(bb2)
}
bb2 = {
_13 = _10;
_11 = !23515_i16;
Goto(bb3)
}
bb3 = {
_11 = _8 as i16;
_15 = _13;
_9 = _12 - _8;
_10 = _6 as f32;
_16 = _5 as u16;
_5 = (-20_i8) & (-31_i8);
_6 = _10 as usize;
_13 = _10;
RET = _3;
_13 = _10 - _10;
_11 = !3110_i16;
_3 = RET;
_2 = _3;
_12 = _8;
_5 = 111_i8;
_5 = (-84_i8) ^ (-106_i8);
Call(_11 = fn2(_1, _4, _12, _1, _9, _2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = 12480520355363360120_usize;
RET = _3;
_12 = _9 & _9;
_15 = _13 + _10;
_12 = !_7;
_15 = _10;
_1 = 313658537932663819845780670474273051206_u128;
_13 = _15 - _15;
_9 = _4 as isize;
_16 = !_4;
_5 = 4_i8 * 92_i8;
_10 = _13 + _13;
_17 = RET;
_2 = _17;
_2 = _3;
_16 = _4;
_3 = _2;
_6 = (-22078368_i32) as usize;
_9 = !_7;
_17 = _2;
_3 = RET;
_17 = _3;
_15 = _13;
Goto(bb5)
}
bb5 = {
_3 = _17;
_6 = _10 as usize;
_9 = _7;
_3 = RET;
_11 = (-18975_i16) << _4;
_23.0 = (-160070687168075835593054184939355003564_i128) as f64;
_11 = (-14367_i16);
_2 = _17;
_19 = -_23.0;
_22 = _19;
_3 = _17;
_12 = -_9;
_5 = (-125_i8) & (-10_i8);
_21 = _3;
_4 = 3433399221_u32 as u16;
_25 = _2;
_8 = -_12;
_23 = (_19,);
_12 = _11 as isize;
_6 = 6352503035468289538_usize ^ 5700829206216747893_usize;
_1 = !40975520233796649096969196375778125240_u128;
_9 = _7 >> _12;
_15 = _10 - _10;
_22 = _6 as f64;
Goto(bb6)
}
bb6 = {
_19 = (-880185800_i32) as f64;
Goto(bb7)
}
bb7 = {
_1 = _5 as u128;
RET = _3;
_23 = (_22,);
_21 = _17;
_27 = [_2,_25,_17,_21,RET];
_23 = (_22,);
_21 = _25;
_23.0 = _22 - _19;
_23 = (_22,);
_12 = _9;
_12 = _7 | _8;
Goto(bb8)
}
bb8 = {
_2 = _21;
_10 = 222_u8 as f32;
_25 = _2;
_17 = RET;
_8 = _9 - _9;
_7 = _9 << _4;
_16 = _4 * _4;
_5 = (-1_i8) & 52_i8;
_13 = -_15;
_23 = (_22,);
_25 = _3;
_22 = _6 as f64;
_28 = true & false;
_9 = 62_u8 as isize;
Goto(bb9)
}
bb9 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb10 = {
_5 = (-26_i8);
_34 = &_19;
_3 = _17;
_19 = _22;
_37 = _28;
_28 = !_37;
_36 = !_1;
_21 = _2;
_1 = _36 * _36;
_19 = _22 - _23.0;
_11 = 791827198_u32 as i16;
_13 = -_15;
_5 = (*_32) as i8;
_17 = _21;
_27 = [_17,_21,_17,_17,_3];
_10 = _13 - _13;
_4 = _16 << (*_32);
_34 = &_22;
_37 = _28;
_16 = _4;
_22 = -_23.0;
_17 = _21;
_4 = _16 & _16;
_40 = _13 - _10;
Goto(bb11)
}
bb11 = {
_21 = _17;
_3 = RET;
_8 = _12 >> (*_32);
_35 = _28;
_45 = _3 as u16;
_26.0 = core::ptr::addr_of_mut!(_44);
_36 = _1;
_27 = [_3,RET,_17,_3,_17];
_44 = 6553116283754999553_i64 << (*_32);
_23 = (_19,);
_34 = &_19;
_16 = !_4;
_33 = &mut _44;
_4 = _16;
(*_33) = !(-8473194794819925106_i64);
(*_33) = (-8720189367772648627_i64);
(*_33) = -5444261199655776816_i64;
Goto(bb12)
}
bb12 = {
(*_33) = 4661480609914680799_i64;
_2 = _25;
_48 = &mut _34;
_21 = _25;
_42 = _23.0;
_47 = _3;
_9 = _7;
_11 = (-22802_i16) & 29101_i16;
_41 = &(*_32);
match (*_33) {
0 => bb7,
1 => bb6,
2 => bb13,
4661480609914680799 => bb15,
_ => bb14
}
}
bb13 = {
_1 = _5 as u128;
RET = _3;
_23 = (_22,);
_21 = _17;
_27 = [_2,_25,_17,_21,RET];
_23 = (_22,);
_21 = _25;
_23.0 = _22 - _19;
_23 = (_22,);
_12 = _9;
_12 = _7 | _8;
Goto(bb8)
}
bb14 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb15 = {
(*_33) = (-1036841324_i32) as i64;
RET = _17;
_10 = _40 - _40;
(*_33) = 5774699811608349526_i64;
(*_33) = (-8710774351364270011_i64) & (-2278693419526313181_i64);
_2 = _17;
_39 = (*_33) as f32;
(*_33) = (-86817963303400782829738731868161605343_i128) as i64;
(*_33) = -5081260703932053447_i64;
_23 = (_19,);
_17 = _3;
_11 = !(-17805_i16);
_26.0 = core::ptr::addr_of_mut!((*_33));
(*_33) = (-3603612413909808809_i64) * 4362142704762129907_i64;
(*_48) = &_23.0;
_16 = !_4;
_40 = _39 * _13;
_42 = _22;
(*_48) = &_22;
(*_33) = 4316414189385073749_i64;
(*_33) = -3993107772872676907_i64;
_1 = !_36;
Goto(bb16)
}
bb16 = {
(*_33) = 5524055088654895082_i64 & 6479819241132666633_i64;
(*_48) = &_42;
(*_33) = !(-3544364853640710539_i64);
(*_48) = &_19;
_23.0 = _42 * _22;
(*_33) = (-1681262904613012714_i64) << (*_32);
_19 = (-2101643962_i32) as f64;
(*_33) = 383384030633333230_i64;
_17 = _3;
_6 = 7707000874979503067_usize;
_51 = _10;
(*_48) = &_22;
_13 = 432257945_i32 as f32;
(*_48) = &_19;
_49 = [_35,_35,_37,_28];
_28 = _35;
_19 = _23.0 - _42;
_10 = _51;
(*_48) = &_42;
(*_33) = 227_u8 as i64;
(*_48) = &_23.0;
_22 = _19 - _23.0;
_53 = _4 ^ _16;
_31 = core::ptr::addr_of_mut!(_50);
_3 = _2;
(*_48) = &_42;
match _6 {
0 => bb13,
1 => bb12,
7707000874979503067 => bb18,
_ => bb17
}
}
bb17 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb18 = {
_28 = !_37;
(*_33) = 6175880873971202845_i64 - (-605946504078440806_i64);
(*_33) = (-1694214111757935037_i64) ^ 344285832539717299_i64;
_52 = core::ptr::addr_of!(_38);
_10 = _5 as f32;
(*_48) = &_19;
(*_48) = &_42;
_49 = [_37,_37,_28,_28];
(*_33) = (-1677974096924616409_i64);
_40 = -_15;
_22 = _9 as f64;
_22 = _42 - _19;
_42 = _4 as f64;
(*_33) = 8037472195403425489_i64 + 6617921244687230177_i64;
(*_48) = &_23.0;
_22 = _1 as f64;
Goto(bb19)
}
bb19 = {
_19 = _42 * _42;
_37 = (*_33) == (*_33);
(*_48) = &_42;
_17 = _25;
(*_33) = 5098536497186510501_i64 >> _53;
(*_48) = &_22;
(*_33) = (-3283468415860676998_i64) << _53;
_40 = -_39;
(*_48) = &_42;
(*_33) = 3177916633769481422_i64;
match (*_33) {
3177916633769481422 => bb21,
_ => bb20
}
}
bb20 = {
_21 = _17;
_3 = RET;
_8 = _12 >> (*_32);
_35 = _28;
_45 = _3 as u16;
_26.0 = core::ptr::addr_of_mut!(_44);
_36 = _1;
_27 = [_3,RET,_17,_3,_17];
_44 = 6553116283754999553_i64 << (*_32);
_23 = (_19,);
_34 = &_19;
_16 = !_4;
_33 = &mut _44;
_4 = _16;
(*_33) = !(-8473194794819925106_i64);
(*_33) = (-8720189367772648627_i64);
(*_33) = -5444261199655776816_i64;
Goto(bb12)
}
bb21 = {
_11 = -(-26874_i16);
(*_33) = (-5152649154038587756_i64);
(*_33) = 722298782772157362_i64;
_54 = _53 as f64;
(*_48) = &_54;
(*_48) = &_42;
(*_33) = 2547650849_u32 as i64;
_45 = _4 - _53;
(*_48) = &_19;
_56 = [138_u8,46_u8,254_u8];
(*_48) = &_54;
(*_48) = &_19;
_41 = Move(_32);
_25 = _21;
_39 = _51 - _13;
_15 = -_51;
(*_33) = (-5497315124915683171_i64) * (-8557212746530426384_i64);
(*_33) = (-2636230255994616084_i64) << _1;
(*_48) = &_23.0;
_27 = [_21,_2,_2,_2,_3];
match _6 {
0 => bb12,
1 => bb11,
2 => bb14,
7707000874979503067 => bb22,
_ => bb15
}
}
bb22 = {
(*_33) = 2050878903034721518_i64;
(*_48) = &_22;
_40 = -_51;
_35 = _37;
(*_48) = &_54;
_28 = _35;
_28 = _19 == _42;
_11 = !(-24330_i16);
_49 = [_28,_35,_28,_28];
(*_33) = 6445918942946660802_i64 + (-2174645083840164104_i64);
Goto(bb23)
}
bb23 = {
(*_33) = (-7800365263845779026_i64);
(*_48) = &_42;
_3 = RET;
_45 = _4 - _53;
_6 = !10361105381480338466_usize;
(*_48) = &_54;
_11 = _36 as i16;
_60 = [_47,RET,_47,_25,_21];
_32 = &_6;
(*_48) = &_23.0;
(*_48) = &_54;
(*_48) = &_19;
(*_48) = &_42;
_45 = _53;
_17 = _25;
_41 = Move(_32);
_3 = _17;
(*_33) = 1306022169679906675_i64;
_23 = (_54,);
match (*_33) {
0 => bb15,
1 => bb24,
1306022169679906675 => bb26,
_ => bb25
}
}
bb24 = {
_28 = !_37;
(*_33) = 6175880873971202845_i64 - (-605946504078440806_i64);
(*_33) = (-1694214111757935037_i64) ^ 344285832539717299_i64;
_52 = core::ptr::addr_of!(_38);
_10 = _5 as f32;
(*_48) = &_19;
(*_48) = &_42;
_49 = [_37,_37,_28,_28];
(*_33) = (-1677974096924616409_i64);
_40 = -_15;
_22 = _9 as f64;
_22 = _42 - _19;
_42 = _4 as f64;
(*_33) = 8037472195403425489_i64 + 6617921244687230177_i64;
(*_48) = &_23.0;
_22 = _1 as f64;
Goto(bb19)
}
bb25 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb26 = {
_40 = -_39;
_64 = _21 as i128;
_7 = _8 * _12;
(*_33) = _53 as i64;
_12 = _7 ^ _7;
(*_48) = &_54;
_1 = _36 + _36;
(*_48) = &_23.0;
_5 = (-35_i8) | 54_i8;
(*_33) = 8441552057960086442_i64;
(*_33) = (-1725573304720813529_i64) + (-880544959679557274_i64);
(*_48) = &_19;
(*_33) = 3927498045377993030_i64;
(*_33) = 5519379346117179427_i64;
_7 = _12;
_61 = core::ptr::addr_of!(_5);
_56 = [196_u8,47_u8,22_u8];
(*_61) = (-76_i8) << (*_33);
(*_61) = !(-53_i8);
_26.0 = core::ptr::addr_of_mut!((*_33));
(*_61) = _6 as i8;
_39 = _40 * _51;
(*_61) = !(-78_i8);
_23.0 = (*_61) as f64;
_66 = &_12;
match (*_33) {
0 => bb27,
1 => bb28,
2 => bb29,
3 => bb30,
5519379346117179427 => bb32,
_ => bb31
}
}
bb27 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb28 = {
_1 = _5 as u128;
RET = _3;
_23 = (_22,);
_21 = _17;
_27 = [_2,_25,_17,_21,RET];
_23 = (_22,);
_21 = _25;
_23.0 = _22 - _19;
_23 = (_22,);
_12 = _9;
_12 = _7 | _8;
Goto(bb8)
}
bb29 = {
_28 = !_37;
(*_33) = 6175880873971202845_i64 - (-605946504078440806_i64);
(*_33) = (-1694214111757935037_i64) ^ 344285832539717299_i64;
_52 = core::ptr::addr_of!(_38);
_10 = _5 as f32;
(*_48) = &_19;
(*_48) = &_42;
_49 = [_37,_37,_28,_28];
(*_33) = (-1677974096924616409_i64);
_40 = -_15;
_22 = _9 as f64;
_22 = _42 - _19;
_42 = _4 as f64;
(*_33) = 8037472195403425489_i64 + 6617921244687230177_i64;
(*_48) = &_23.0;
_22 = _1 as f64;
Goto(bb19)
}
bb30 = {
_19 = (-880185800_i32) as f64;
Goto(bb7)
}
bb31 = {
_2 = _21;
_10 = 222_u8 as f32;
_25 = _2;
_17 = RET;
_8 = _9 - _9;
_7 = _9 << _4;
_16 = _4 * _4;
_5 = (-1_i8) & 52_i8;
_13 = -_15;
_23 = (_22,);
_25 = _3;
_22 = _6 as f64;
_28 = true & false;
_9 = 62_u8 as isize;
Goto(bb9)
}
bb32 = {
_1 = _36 << (*_61);
_23.0 = _54 * _54;
(*_48) = &_54;
(*_48) = &_19;
_32 = &_6;
(*_33) = 69_u8 as i64;
(*_48) = &_23.0;
_13 = -_39;
_22 = _23.0 - _54;
_58 = &mut (*_33);
_23.0 = _42 * _54;
(*_61) = (-102_i8) + 77_i8;
(*_61) = -116_i8;
_66 = &_8;
_33 = Move(_58);
_16 = _4;
(*_48) = &_54;
Goto(bb33)
}
bb33 = {
_4 = _64 as u16;
(*_61) = -31_i8;
_8 = _28 as isize;
_3 = _17;
_21 = RET;
(*_48) = &_23.0;
(*_61) = 10_u8 as i8;
(*_61) = 21_i8;
_65 = core::ptr::addr_of!((*_52));
(*_61) = _11 as i8;
(*_61) = -18_i8;
_7 = _8 ^ _8;
(*_48) = &_54;
_69.0 = &_28;
_21 = _3;
(*_61) = 13896574975754599621_u64 as i8;
Call(_7 = core::intrinsics::transmute((*_32)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_79 = _3;
(*_48) = &_42;
_35 = _28;
(*_48) = &_19;
(*_48) = &_22;
(*_48) = &_42;
_67 = !_8;
_39 = _13;
(*_61) = 102_i8 - (-110_i8);
Goto(bb35)
}
bb35 = {
_25 = _3;
(*_61) = _64 as i8;
_3 = _47;
RET = _47;
(*_48) = &_23.0;
_77.1 = !(*_61);
_69.0 = &_37;
(*_48) = &_42;
_72 = _45;
_47 = _21;
_35 = _19 == _54;
Goto(bb36)
}
bb36 = {
_77.0 = &_12;
(*_65) = core::ptr::addr_of!(_77);
(*_48) = &_23.0;
(*_61) = (*_38).1 & (*_38).1;
(*_65) = core::ptr::addr_of!((*_38));
(*_38).1 = (*_61) ^ (*_61);
(*_48) = &_42;
_4 = _45 & _72;
(*_52) = core::ptr::addr_of!((*_38));
_7 = -_12;
(*_38) = (Move(_66), (*_61));
(*_48) = &_22;
(*_48) = &_42;
(*_48) = &_19;
(*_38).0 = &_7;
_82 = _79;
(*_38).0 = &_67;
(*_38).1 = _4 as i8;
_71 = _23.0 as u128;
_17 = _25;
(*_38).1 = (*_61) & (*_61);
Goto(bb37)
}
bb37 = {
(*_52) = core::ptr::addr_of!((*_38));
(*_61) = (*_38).1 & (*_38).1;
Call((*_61) = core::intrinsics::bswap((*_38).1), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
(*_48) = &_42;
(*_52) = core::ptr::addr_of!((*_38));
Goto(bb39)
}
bb39 = {
(*_38).1 = (*_32) as i8;
_83 = _2;
Goto(bb40)
}
bb40 = {
(*_61) = 75_u8 as i8;
(*_52) = core::ptr::addr_of!((*_38));
(*_52) = core::ptr::addr_of!((*_38));
_43 = &mut _69.0;
_13 = _67 as f32;
(*_52) = core::ptr::addr_of!((*_38));
_1 = _71 & _71;
(*_52) = core::ptr::addr_of!((*_38));
(*_38).1 = (*_61);
_81 = -(*_61);
(*_38).1 = (*_61);
_51 = _54 as f32;
_51 = 5024040022841997074_u64 as f32;
_45 = _16 | _16;
_35 = _28;
(*_61) = (*_38).1;
(*_52) = core::ptr::addr_of!((*_38));
(*_43) = &_28;
(*_61) = (*_38).1 << _67;
_39 = _67 as f32;
(*_43) = &_35;
Goto(bb41)
}
bb41 = {
_73 = Move((*_52));
_64 = (-150334382783699638571160601248906072689_i128);
_90.0.fld1 = _1 as u64;
(*_52) = core::ptr::addr_of!(_77);
(*_43) = &_28;
_8 = _13 as isize;
(*_38).1 = _4 as i8;
(*_38).0 = &_12;
(*_48) = &_19;
_90.3.fld0.fld0 = (*_32);
(*_43) = &_35;
(*_52) = core::ptr::addr_of!((*_38));
_21 = _17;
(*_43) = &_28;
(*_61) = (*_38).1 ^ (*_38).1;
(*_38).0 = &_67;
_74 = Adt19::Variant1 { fld0: _90.0.fld1,fld1: _3,fld2: _12,fld3: _71,fld4: _64,fld5: 1165437049_i32 };
_72 = _4 * _45;
place!(Field::<u64>(Variant(_74, 1), 0)) = _90.0.fld1 + _90.0.fld1;
(*_38).1 = (*_61) << Field::<u64>(Variant(_74, 1), 0);
_10 = _39 * _39;
(*_61) = (*_38).1;
(*_52) = core::ptr::addr_of!((*_38));
_59 = core::ptr::addr_of_mut!(_91);
(*_59).0.fld0 = (*_32) << (*_38).1;
Goto(bb42)
}
bb42 = {
(*_59).2 = _79;
(*_59).3.fld0.fld2 = (*_38).1 as f64;
_83 = (*_59).2;
match Field::<i128>(Variant(_74, 1), 4) {
0 => bb38,
1 => bb24,
2 => bb27,
3 => bb25,
4 => bb43,
189947984137238824892214006182862138767 => bb45,
_ => bb44
}
}
bb43 = {
_3 = _17;
_6 = _10 as usize;
_9 = _7;
_3 = RET;
_11 = (-18975_i16) << _4;
_23.0 = (-160070687168075835593054184939355003564_i128) as f64;
_11 = (-14367_i16);
_2 = _17;
_19 = -_23.0;
_22 = _19;
_3 = _17;
_12 = -_9;
_5 = (-125_i8) & (-10_i8);
_21 = _3;
_4 = 3433399221_u32 as u16;
_25 = _2;
_8 = -_12;
_23 = (_19,);
_12 = _11 as isize;
_6 = 6352503035468289538_usize ^ 5700829206216747893_usize;
_1 = !40975520233796649096969196375778125240_u128;
_9 = _7 >> _12;
_15 = _10 - _10;
_22 = _6 as f64;
Goto(bb6)
}
bb44 = {
_7 = -_8;
_27 = [_25,_17,_17,_21,_25];
_19 = _22 - _23.0;
_3 = RET;
_13 = 87_u8 as f32;
_19 = _23.0;
_16 = _3 as u16;
_11 = 4511_i16 | (-31923_i16);
_25 = _3;
_16 = 84442024712069569153510374985602392971_i128 as u16;
_15 = _19 as f32;
_17 = _25;
_6 = 5_usize - 4455751133067386864_usize;
_21 = RET;
_8 = 1048405096_i32 as isize;
_32 = &_6;
_17 = RET;
_11 = (-27111_i16);
_1 = !334329086585632785242039494970894095297_u128;
RET = _3;
_19 = _23.0;
_3 = _25;
_25 = RET;
Goto(bb10)
}
bb45 = {
(*_59).3.fld0.fld1 = _90.0.fld1 + Field::<u64>(Variant(_74, 1), 0);
(*_59).0.fld4 = _11;
(*_59).0.fld0 = (*_32) | (*_32);
(*_59).3.fld0.fld4 = (*_59).0.fld4 >> (*_38).1;
(*_59).2 = Field::<char>(Variant(_74, 1), 1);
(*_59).0.fld2 = (*_59).3.fld0.fld2 * (*_59).3.fld0.fld2;
(*_38).1 = (*_61) - (*_61);
(*_59).1 = (*_59).3.fld0.fld4 | (*_59).3.fld0.fld4;
(*_43) = &_37;
(*_59).3.fld0.fld4 = !(*_59).1;
(*_59).2 = _17;
(*_38).0 = &_7;
(*_59).3.fld0.fld1 = _90.0.fld1 - _90.0.fld1;
(*_59).0.fld4 = (*_59).3.fld0.fld4 | (*_59).1;
(*_59).3.fld0.fld0 = !(*_59).0.fld0;
Goto(bb46)
}
bb46 = {
_16 = _13 as u16;
(*_59).2 = _83;
(*_59).0.fld4 = (*_59).3.fld0.fld4 << (*_59).3.fld0.fld1;
(*_59).3.fld0.fld1 = _90.0.fld1;
(*_59).0.fld0 = (*_59).3.fld0.fld0;
_4 = _53;
_73 = core::ptr::addr_of!((*_38));
(*_43) = &_35;
(*_59).0.fld4 = -(*_59).3.fld0.fld4;
_100 = &mut (*_48);
(*_59).1 = (*_59).0.fld4 ^ (*_59).3.fld0.fld4;
_91.3.fld0.fld1 = Field::<u64>(Variant(_74, 1), 0);
_23 = ((*_59).0.fld2,);
(*_59).1 = (*_59).0.fld4 >> (*_59).0.fld4;
(*_59).0.fld0 = (*_32) * (*_59).3.fld0.fld0;
(*_38).1 = (*_61) + (*_61);
(*_43) = &_37;
(*_73).0 = &_8;
(*_59).3.fld0.fld2 = _22 * (*_59).0.fld2;
(*_59).3.fld0.fld0 = !(*_59).0.fld0;
_102 = Field::<isize>(Variant(_74, 1), 2);
(*_59).0.fld2 = (*_59).3.fld0.fld2 - _91.3.fld0.fld2;
Goto(bb47)
}
bb47 = {
(*_59).3.fld0.fld4 = Field::<i128>(Variant(_74, 1), 4) as i16;
(*_59).3.fld0.fld4 = (*_59).1 >> (*_61);
_9 = _12;
(*_43) = &_35;
Call((*_59).0.fld1 = core::intrinsics::transmute((*_59).3.fld0.fld0), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
_49 = [_35,_37,_28,_35];
(*_52) = Move(_73);
(*_100) = &(*_59).0.fld2;
(*_100) = &(*_59).3.fld0.fld2;
_63 = &(*_43);
(*_59).1 = (*_59).0.fld4 ^ (*_59).0.fld4;
place!(Field::<i128>(Variant(_74, 1), 4)) = _64 - _64;
_61 = core::ptr::addr_of!(_103);
_93 = &_15;
(*_52) = core::ptr::addr_of!(_77);
_90.1 = (*_59).1;
(*_52) = core::ptr::addr_of!((*_38));
(*_59).3.fld0.fld4 = (*_59).1 | (*_59).1;
_65 = core::ptr::addr_of!((*_52));
(*_38).1 = Field::<i128>(Variant(_74, 1), 4) as i8;
(*_38).1 = _5;
(*_59).2 = _82;
Goto(bb49)
}
bb49 = {
(*_52) = core::ptr::addr_of!((*_38));
(*_59).0.fld0 = (*_32) & (*_59).3.fld0.fld0;
(*_59).0.fld1 = (*_59).3.fld0.fld1 ^ (*_59).3.fld0.fld1;
(*_59).0.fld2 = (*_59).3.fld0.fld2 * (*_59).3.fld0.fld2;
(*_52) = core::ptr::addr_of!((*_38));
(*_59).0.fld2 = (*_59).3.fld0.fld2 * (*_59).3.fld0.fld2;
(*_43) = &_37;
(*_59).0.fld2 = 2087254802_i32 as f64;
(*_59).3.fld0.fld2 = (*_59).0.fld1 as f64;
Goto(bb50)
}
bb50 = {
Call(_110 = dump_var(1_usize, 83_usize, Move(_83), 47_usize, Move(_47), 60_usize, Move(_60), 53_usize, Move(_53)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_110 = dump_var(1_usize, 35_usize, Move(_35), 25_usize, Move(_25), 72_usize, Move(_72), 16_usize, Move(_16)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_110 = dump_var(1_usize, 56_usize, Move(_56), 81_usize, Move(_81), 28_usize, Move(_28), 8_usize, Move(_8)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_110 = dump_var(1_usize, 7_usize, Move(_7), 21_usize, Move(_21), 45_usize, Move(_45), 67_usize, Move(_67)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_110 = dump_var(1_usize, 2_usize, Move(_2), 5_usize, Move(_5), 111_usize, _111, 111_usize, _111), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u128,mut _2: u16,mut _3: isize,mut _4: u128,mut _5: isize,mut _6: char) -> i16 {
mir! {
type RET = i16;
let _7: f32;
let _8: i8;
let _9: bool;
let _10: (i32, i8, &'static mut i64, &'static bool);
let _11: *mut (usize, i32);
let _12: isize;
let _13: *mut (Adt26, i16, char, Adt31);
let _14: isize;
let _15: *const (&'static isize, i8);
let _16: &'static f64;
let _17: [u16; 3];
let _18: [i128; 2];
let _19: &'static Adt43;
let _20: &'static f64;
let _21: [i16; 6];
let _22: &'static mut &'static f64;
let _23: (isize,);
let _24: *const (i32, i8, &'static mut i64, &'static bool);
let _25: isize;
let _26: *mut i64;
let _27: (*const *const (&'static isize, i8),);
let _28: f32;
let _29: *const (&'static bool,);
let _30: *mut *mut (usize, i32);
let _31: u32;
let _32: [i16; 6];
let _33: isize;
let _34: char;
let _35: [u64; 7];
let _36: isize;
let _37: u128;
let _38: *mut *mut (usize, i32);
let _39: *mut *mut (usize, i32);
let _40: ();
let _41: ();
{
_1 = !_4;
RET = false as i16;
_4 = !_1;
_6 = '\u{45b40}';
_2 = 21266_u16 ^ 8747_u16;
_2 = 328_u16 ^ 27326_u16;
_3 = _5 | _5;
RET = !(-3900_i16);
_5 = 54_u8 as isize;
RET = !18283_i16;
RET = (-3533_i16) - 6277_i16;
_6 = '\u{8f07}';
_4 = _1 | _1;
_1 = _4 & _4;
_5 = _2 as isize;
_1 = _4 << _3;
_1 = _4 | _4;
_3 = -_5;
_4 = _1;
_2 = 55277_u16;
_1 = _4 + _4;
_1 = !_4;
_3 = _5 * _5;
_8 = (-28_i8) * (-8_i8);
_7 = 11347529554271245118_u64 as f32;
RET = (-30926_i16) & 30858_i16;
_9 = true;
_7 = 1840332957_u32 as f32;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
55277 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = '\u{b2e75}';
_10.0 = RET as i32;
_10.0 = -499176_i32;
_10.3 = &_9;
_7 = 8932495462238651171_i64 as f32;
_8 = -108_i8;
_9 = true ^ false;
_1 = _4 & _4;
_2 = 22137_u16 << _1;
Goto(bb10)
}
bb10 = {
_12 = _5;
_9 = true;
_2 = 7619_u16;
_3 = _12 & _12;
_12 = _3 ^ _3;
_2 = 40030_u16 & 1254_u16;
_4 = (-15974976919797743977528049432940158078_i128) as u128;
_1 = _4 & _4;
_12 = RET as isize;
_4 = !_1;
_10.0 = 1636482114_i32;
_4 = _9 as u128;
_3 = _12;
_8 = 0_i8 | 102_i8;
_8 = -1_i8;
_3 = _5;
_6 = '\u{50c97}';
_5 = !_3;
_1 = _7 as u128;
_10.1 = 9065500922595985654_usize as i8;
Goto(bb11)
}
bb11 = {
_4 = !_1;
_10.1 = _8;
_8 = _10.1;
_9 = _2 == _2;
_12 = _5;
_5 = !_12;
_8 = !_10.1;
_17 = [_2,_2,_2];
_6 = '\u{15fa0}';
_3 = !_12;
_10.1 = 4155536183_u32 as i8;
_14 = _3 ^ _3;
_7 = RET as f32;
_7 = 156123128898229170911265628527092386313_i128 as f32;
_14 = _3 ^ _5;
_12 = _14 >> _14;
_2 = 2910_u16;
_8 = _10.1 - _10.1;
_18 = [21989539046874083934208290682015377265_i128,16235286608925894646124303373158158203_i128];
_17 = [_2,_2,_2];
Goto(bb12)
}
bb12 = {
_4 = _10.0 as u128;
RET = (-15820_i16) ^ 6291_i16;
_17 = [_2,_2,_2];
_4 = RET as u128;
_1 = _4 >> _12;
_10.0 = !1820379311_i32;
_18 = [(-153934401770544477144288685730342043507_i128),(-4981161337946725280195050751241704223_i128)];
RET = 165775264451058046605808172461900783694_i128 as i16;
_1 = _10.0 as u128;
_14 = _12 + _3;
_9 = true;
Call(_5 = core::intrinsics::transmute(_3), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_18 = [(-70346406579227837373595486823735720364_i128),134095919116954243318545035735661916202_i128];
_7 = (-58454750630097055968940724000619485123_i128) as f32;
_6 = '\u{f2f50}';
_14 = _12 + _12;
_5 = -_14;
_3 = _5;
_5 = _12 * _3;
_10.1 = !_8;
RET = !(-11009_i16);
_10.0 = 138215439757399668778247635970574805302_i128 as i32;
_1 = !_4;
_4 = _1;
_21 = [RET,RET,RET,RET,RET,RET];
_23.0 = (-71860443608040883031413336345966248651_i128) as isize;
_2 = 220_u16 >> _14;
_10.0 = _5 as i32;
Goto(bb14)
}
bb14 = {
_1 = 35618574261254197704659966628900300018_i128 as u128;
_23 = (_14,);
_3 = !_5;
_4 = _1 & _1;
_17 = [_2,_2,_2];
_18 = [167232836861035228214568221097747411024_i128,(-108920940392552141104352049285831900080_i128)];
_10.1 = !_8;
_23 = (_12,);
_21 = [RET,RET,RET,RET,RET,RET];
_6 = '\u{8adb5}';
_23 = (_14,);
_8 = _10.1;
_5 = 2995561441_u32 as isize;
_5 = _3 + _23.0;
_18 = [(-144358090252244133929434379206139228447_i128),88436300633388911674058442307836346582_i128];
_4 = _3 as u128;
_12 = _14 << _2;
_18 = [27867622934550265817363394572251435346_i128,84334775246760544597632097896304024048_i128];
_10.0 = (-2088163730_i32) * (-1520440683_i32);
_9 = true;
Call(_2 = core::intrinsics::transmute(RET), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_6 = '\u{32f75}';
_7 = _2 as f32;
_7 = 4_usize as f32;
_6 = '\u{10978e}';
RET = !17382_i16;
_27.0 = core::ptr::addr_of!(_15);
_2 = 28444_u16 & 25694_u16;
_6 = '\u{e8976}';
_7 = 137924957054163651351067941415082049651_i128 as f32;
_23 = (_5,);
_1 = _7 as u128;
_21 = [RET,RET,RET,RET,RET,RET];
_25 = _5 ^ _3;
_4 = _1 * _1;
RET = 137_u8 as i16;
_31 = 2066251537_u32 + 362377248_u32;
_28 = -_7;
Call(_31 = fn3(Move(_27.0), _4, _2, _3, Move(_10.3), _1, _28, RET, _10.1, _8), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_5 = _25 - _14;
_14 = _25 << _3;
_30 = core::ptr::addr_of_mut!(_11);
_8 = _10.1 - _10.1;
_30 = core::ptr::addr_of_mut!((*_30));
_23.0 = _14 >> _12;
_23.0 = _25 << _5;
_5 = _23.0 * _12;
_10.0 = 7_usize as i32;
_6 = '\u{2c9f3}';
_14 = _25 - _25;
_6 = '\u{7c6f4}';
_34 = _6;
_10.3 = &_9;
_25 = _5 >> _14;
_8 = _10.1 + _10.1;
_9 = true ^ false;
_25 = _14;
_30 = core::ptr::addr_of_mut!((*_30));
Goto(bb17)
}
bb17 = {
_32 = [RET,RET,RET,RET,RET,RET];
_7 = _28 + _28;
_6 = _34;
_9 = !true;
_33 = _25 >> _14;
_4 = !_1;
_9 = _12 < _23.0;
_5 = _23.0 << _14;
_32 = _21;
_2 = !16968_u16;
_30 = core::ptr::addr_of_mut!((*_30));
_10.0 = -66536428_i32;
_4 = !_1;
_31 = 2085256530_u32;
_10.0 = 232_u8 as i32;
_25 = _23.0;
_6 = _34;
_6 = _34;
_30 = core::ptr::addr_of_mut!((*_30));
_18 = [151921393113153674679396420392330298046_i128,(-111900821282027065611132815896416839102_i128)];
_36 = !_14;
_7 = _28 - _28;
_23.0 = _25;
match _31 {
0 => bb4,
1 => bb2,
2085256530 => bb18,
_ => bb12
}
}
bb18 = {
_34 = _6;
_10.1 = 18107700053804644475_usize as i8;
_39 = core::ptr::addr_of_mut!((*_30));
_8 = _10.1 >> _25;
RET = (-22250_i16) >> _5;
_31 = 1134147015_u32 ^ 573055791_u32;
_7 = _4 as f32;
Goto(bb19)
}
bb19 = {
Call(_40 = dump_var(2_usize, 2_usize, Move(_2), 31_usize, Move(_31), 3_usize, Move(_3), 21_usize, Move(_21)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_40 = dump_var(2_usize, 9_usize, Move(_9), 32_usize, Move(_32), 12_usize, Move(_12), 14_usize, Move(_14)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_40 = dump_var(2_usize, 25_usize, Move(_25), 6_usize, Move(_6), 41_usize, _41, 41_usize, _41), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: *const *const (&'static isize, i8),mut _2: u128,mut _3: u16,mut _4: isize,mut _5: &'static bool,mut _6: u128,mut _7: f32,mut _8: i16,mut _9: i8,mut _10: i8) -> u32 {
mir! {
type RET = u32;
let _11: f64;
let _12: *const isize;
let _13: char;
let _14: isize;
let _15: (Adt26, i16, char, Adt31);
let _16: u32;
let _17: (isize,);
let _18: &'static mut &'static bool;
let _19: f64;
let _20: u64;
let _21: &'static &'static bool;
let _22: isize;
let _23: i8;
let _24: *const (&'static isize, i8);
let _25: *const (&'static bool,);
let _26: i32;
let _27: *const (&'static isize, i8);
let _28: isize;
let _29: *mut i64;
let _30: f64;
let _31: (f64, &'static mut i64, &'static bool, &'static usize);
let _32: char;
let _33: *const (&'static bool,);
let _34: *const u32;
let _35: u16;
let _36: *const isize;
let _37: isize;
let _38: *mut Adt26;
let _39: &'static mut [u16; 1];
let _40: &'static Adt43;
let _41: f64;
let _42: (*const *const (&'static isize, i8),);
let _43: isize;
let _44: char;
let _45: [i32; 8];
let _46: *mut (Adt26, i16, char, Adt31);
let _47: f32;
let _48: *mut [u128; 2];
let _49: (&'static mut (Adt26, i16, char, Adt31), usize);
let _50: &'static isize;
let _51: [bool; 6];
let _52: (*mut i64,);
let _53: *const (i32, i8, &'static mut i64, &'static bool);
let _54: &'static mut &'static f64;
let _55: bool;
let _56: *const *const isize;
let _57: f64;
let _58: isize;
let _59: &'static mut (Adt26, i16, char, Adt31);
let _60: &'static *mut Adt26;
let _61: &'static f64;
let _62: isize;
let _63: *const *const isize;
let _64: isize;
let _65: [i128; 2];
let _66: i8;
let _67: [u16; 3];
let _68: i16;
let _69: u64;
let _70: bool;
let _71: isize;
let _72: &'static *const (&'static isize, i8);
let _73: [bool; 8];
let _74: *const (i32, i8, &'static mut i64, &'static bool);
let _75: &'static mut &'static bool;
let _76: char;
let _77: f32;
let _78: &'static f32;
let _79: char;
let _80: &'static [u128; 2];
let _81: *mut Adt26;
let _82: i32;
let _83: u16;
let _84: isize;
let _85: f32;
let _86: (usize, i32);
let _87: i16;
let _88: [u128; 2];
let _89: usize;
let _90: bool;
let _91: *mut Adt25;
let _92: u64;
let _93: i32;
let _94: [u8; 3];
let _95: u16;
let _96: *mut Adt25;
let _97: isize;
let _98: u64;
let _99: bool;
let _100: (i32, i8, &'static mut i64, &'static bool);
let _101: u16;
let _102: f64;
let _103: &'static mut &'static f64;
let _104: *const u32;
let _105: &'static mut &'static f64;
let _106: *const u32;
let _107: f64;
let _108: [i16; 8];
let _109: Adt19;
let _110: *const i8;
let _111: f32;
let _112: [u16; 3];
let _113: ();
let _114: ();
{
_7 = 217917919_u32 as f32;
_6 = _2 ^ _2;
_2 = 15450510242625456793_u64 as u128;
_2 = false as u128;
_10 = _9;
_6 = !_2;
_9 = _10 + _10;
RET = 14_u8 as u32;
_9 = _10 & _10;
RET = 2170139383_u32 >> _4;
_2 = _6 | _6;
_2 = _6;
RET = _7 as u32;
_8 = RET as i16;
_10 = _8 as i8;
_10 = -_9;
_3 = 43628_u16 >> _2;
_7 = 84_u8 as f32;
_7 = _4 as f32;
_8 = -1908_i16;
_6 = _4 as u128;
_2 = _6 >> _4;
_4 = !97_isize;
Call(_7 = fn4(Move(_1), _4, _4, _2, RET, _9, _4, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = _2 as f32;
_2 = !_6;
_6 = _2;
_3 = 24374_u16;
_4 = _8 as isize;
_8 = (-19326_i16) >> _2;
_6 = _2;
_9 = _10;
_7 = _10 as f32;
_12 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb2 = {
_6 = _2 >> (*_12);
(*_12) = (-9223372036854775808_isize);
(*_12) = 46_isize + 114_isize;
(*_12) = -9223372036854775807_isize;
_11 = (-137346873657299905447298397528120213641_i128) as f64;
Call(_8 = fn6((*_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15.0.fld2 = (*_12) as f64;
(*_12) = !9223372036854775807_isize;
_11 = 163_u8 as f64;
_2 = _6 ^ _6;
_15.3.fld0.fld0 = 17409953066792602360_usize | 3_usize;
(*_12) = _3 as isize;
(*_12) = !(-123_isize);
_15.3.fld0.fld2 = _2 as f64;
_15.0.fld4 = false as i16;
RET = _2 as u32;
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_15.0.fld4 = _8;
(*_12) = -(-9223372036854775808_isize);
_14 = _15.3.fld0.fld0 as isize;
(*_12) = _14;
(*_12) = -_14;
RET = 1189150170_u32;
(*_12) = _14 - _14;
_12 = core::ptr::addr_of!((*_12));
(*_12) = _14;
Goto(bb4)
}
bb4 = {
_17.0 = (*_12) + (*_12);
_10 = _9;
(*_12) = '\u{4b9e7}' as isize;
(*_12) = _17.0 + _14;
(*_12) = _14 >> _15.0.fld4;
(*_12) = _17.0;
_7 = _6 as f32;
_13 = '\u{10094c}';
RET = _3 as u32;
_13 = '\u{24dd0}';
(*_12) = _2 as isize;
_12 = core::ptr::addr_of!((*_12));
_15.0.fld1 = 3183146225432298287_u64;
_17.0 = (*_12) | (*_12);
_7 = _6 as f32;
(*_12) = !_17.0;
_8 = _15.0.fld4;
_8 = _15.0.fld4 ^ _15.0.fld4;
(*_12) = -_17.0;
_15.3.fld0.fld0 = !5595088032871384781_usize;
Goto(bb5)
}
bb5 = {
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_22 = (*_12);
_11 = -_15.3.fld0.fld2;
(*_12) = _17.0 | _14;
_14 = (*_12) ^ (*_12);
Goto(bb6)
}
bb6 = {
(*_12) = _17.0;
(*_12) = _14 - _14;
_19 = _15.3.fld0.fld2 - _15.0.fld2;
_15.1 = !_8;
(*_12) = _22 | _17.0;
_20 = _15.0.fld1 | _15.0.fld1;
(*_12) = _14 ^ _14;
_17.0 = (*_12) ^ (*_12);
_23 = _9 >> (*_12);
(*_12) = _13 as isize;
_13 = '\u{e3190}';
(*_12) = _14 * _14;
_17.0 = !(*_12);
match _15.0.fld1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb7,
5 => bb8,
3183146225432298287 => bb10,
_ => bb9
}
}
bb7 = {
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_22 = (*_12);
_11 = -_15.3.fld0.fld2;
(*_12) = _17.0 | _14;
_14 = (*_12) ^ (*_12);
Goto(bb6)
}
bb8 = {
_6 = _2 >> (*_12);
(*_12) = (-9223372036854775808_isize);
(*_12) = 46_isize + 114_isize;
(*_12) = -9223372036854775807_isize;
_11 = (-137346873657299905447298397528120213641_i128) as f64;
Call(_8 = fn6((*_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_15.0.fld2 = (*_12) as f64;
(*_12) = !9223372036854775807_isize;
_11 = 163_u8 as f64;
_2 = _6 ^ _6;
_15.3.fld0.fld0 = 17409953066792602360_usize | 3_usize;
(*_12) = _3 as isize;
(*_12) = !(-123_isize);
_15.3.fld0.fld2 = _2 as f64;
_15.0.fld4 = false as i16;
RET = _2 as u32;
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_15.0.fld4 = _8;
(*_12) = -(-9223372036854775808_isize);
_14 = _15.3.fld0.fld0 as isize;
(*_12) = _14;
(*_12) = -_14;
RET = 1189150170_u32;
(*_12) = _14 - _14;
_12 = core::ptr::addr_of!((*_12));
(*_12) = _14;
Goto(bb4)
}
bb10 = {
_28 = !(*_12);
(*_12) = !_28;
_1 = core::ptr::addr_of!(_24);
_15.3.fld0.fld0 = (-169521299961733730957856353269282899635_i128) as usize;
_6 = !_2;
_15.0.fld0 = _15.3.fld0.fld0 - _15.3.fld0.fld0;
_15.0.fld1 = _20 ^ _20;
_15.0.fld4 = _23 as i16;
_2 = (-727659083_i32) as u128;
match _3 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
6 => bb17,
24374 => bb19,
_ => bb18
}
}
bb11 = {
_15.0.fld2 = (*_12) as f64;
(*_12) = !9223372036854775807_isize;
_11 = 163_u8 as f64;
_2 = _6 ^ _6;
_15.3.fld0.fld0 = 17409953066792602360_usize | 3_usize;
(*_12) = _3 as isize;
(*_12) = !(-123_isize);
_15.3.fld0.fld2 = _2 as f64;
_15.0.fld4 = false as i16;
RET = _2 as u32;
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_15.0.fld4 = _8;
(*_12) = -(-9223372036854775808_isize);
_14 = _15.3.fld0.fld0 as isize;
(*_12) = _14;
(*_12) = -_14;
RET = 1189150170_u32;
(*_12) = _14 - _14;
_12 = core::ptr::addr_of!((*_12));
(*_12) = _14;
Goto(bb4)
}
bb12 = {
_6 = _2 >> (*_12);
(*_12) = (-9223372036854775808_isize);
(*_12) = 46_isize + 114_isize;
(*_12) = -9223372036854775807_isize;
_11 = (-137346873657299905447298397528120213641_i128) as f64;
Call(_8 = fn6((*_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb13 = {
_7 = _2 as f32;
_2 = !_6;
_6 = _2;
_3 = 24374_u16;
_4 = _8 as isize;
_8 = (-19326_i16) >> _2;
_6 = _2;
_9 = _10;
_7 = _10 as f32;
_12 = core::ptr::addr_of!(_4);
Goto(bb2)
}
bb14 = {
(*_12) = _17.0;
(*_12) = _14 - _14;
_19 = _15.3.fld0.fld2 - _15.0.fld2;
_15.1 = !_8;
(*_12) = _22 | _17.0;
_20 = _15.0.fld1 | _15.0.fld1;
(*_12) = _14 ^ _14;
_17.0 = (*_12) ^ (*_12);
_23 = _9 >> (*_12);
(*_12) = _13 as isize;
_13 = '\u{e3190}';
(*_12) = _14 * _14;
_17.0 = !(*_12);
match _15.0.fld1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb7,
5 => bb8,
3183146225432298287 => bb10,
_ => bb9
}
}
bb15 = {
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_22 = (*_12);
_11 = -_15.3.fld0.fld2;
(*_12) = _17.0 | _14;
_14 = (*_12) ^ (*_12);
Goto(bb6)
}
bb16 = {
_17.0 = (*_12) + (*_12);
_10 = _9;
(*_12) = '\u{4b9e7}' as isize;
(*_12) = _17.0 + _14;
(*_12) = _14 >> _15.0.fld4;
(*_12) = _17.0;
_7 = _6 as f32;
_13 = '\u{10094c}';
RET = _3 as u32;
_13 = '\u{24dd0}';
(*_12) = _2 as isize;
_12 = core::ptr::addr_of!((*_12));
_15.0.fld1 = 3183146225432298287_u64;
_17.0 = (*_12) | (*_12);
_7 = _6 as f32;
(*_12) = !_17.0;
_8 = _15.0.fld4;
_8 = _15.0.fld4 ^ _15.0.fld4;
(*_12) = -_17.0;
_15.3.fld0.fld0 = !5595088032871384781_usize;
Goto(bb5)
}
bb17 = {
_15.0.fld2 = (*_12) as f64;
(*_12) = !9223372036854775807_isize;
_11 = 163_u8 as f64;
_2 = _6 ^ _6;
_15.3.fld0.fld0 = 17409953066792602360_usize | 3_usize;
(*_12) = _3 as isize;
(*_12) = !(-123_isize);
_15.3.fld0.fld2 = _2 as f64;
_15.0.fld4 = false as i16;
RET = _2 as u32;
_15.3.fld0.fld2 = _11 + _15.0.fld2;
_15.0.fld4 = _8;
(*_12) = -(-9223372036854775808_isize);
_14 = _15.3.fld0.fld0 as isize;
(*_12) = _14;
(*_12) = -_14;
RET = 1189150170_u32;
(*_12) = _14 - _14;
_12 = core::ptr::addr_of!((*_12));
(*_12) = _14;
Goto(bb4)
}
bb18 = {
_6 = _2 >> (*_12);
(*_12) = (-9223372036854775808_isize);
(*_12) = 46_isize + 114_isize;
(*_12) = -9223372036854775807_isize;
_11 = (-137346873657299905447298397528120213641_i128) as f64;
Call(_8 = fn6((*_12)), ReturnTo(bb3), UnwindUnreachable())
}
bb19 = {
_28 = (*_12) & (*_12);
_15.3.fld0.fld0 = _15.1 as usize;
match _3 {
0 => bb15,
1 => bb2,
24374 => bb20,
_ => bb3
}
}
bb20 = {
(*_12) = _14 & _14;
_15.3.fld0.fld0 = _23 as usize;
_15.1 = _15.0.fld1 as i16;
_15.3.fld0.fld4 = _8 << (*_12);
(*_12) = _14;
Goto(bb21)
}
bb21 = {
(*_12) = _22;
_7 = _8 as f32;
_15.0.fld1 = _7 as u64;
(*_12) = _28 - _22;
_3 = 26320_u16;
_17.0 = 6760153145765149004_i64 as isize;
_28 = (*_12);
_20 = _15.0.fld1;
_32 = _13;
_20 = RET as u64;
_7 = _3 as f32;
_15.0.fld4 = !_8;
_15.2 = _32;
_30 = _15.3.fld0.fld2 - _11;
_13 = _32;
(*_12) = _22 >> _6;
Goto(bb22)
}
bb22 = {
_31.3 = &_15.0.fld0;
_31.0 = -_30;
_31.0 = -_30;
_17 = ((*_12),);
_34 = core::ptr::addr_of!(_16);
(*_34) = _15.3.fld0.fld0 as u32;
(*_12) = _22 * _17.0;
_3 = _15.0.fld1 as u16;
(*_34) = RET;
_10 = -_23;
Goto(bb23)
}
bb23 = {
_36 = core::ptr::addr_of!(_14);
_38 = core::ptr::addr_of_mut!(_15.3.fld0);
(*_34) = RET;
(*_34) = RET ^ RET;
_3 = 7976_u16 & 4456_u16;
_4 = (*_36);
(*_36) = (*_12);
_43 = _28;
(*_36) = -(*_12);
Goto(bb24)
}
bb24 = {
(*_12) = -(*_36);
(*_38).fld2 = -_30;
(*_36) = (*_12);
(*_38).fld0 = _15.0.fld0 & _15.0.fld0;
(*_38).fld2 = _11 * _30;
(*_12) = (*_36) + (*_36);
_37 = (*_36) + (*_12);
(*_38).fld1 = (*_38).fld0 as u64;
(*_38).fld2 = _31.0 * _11;
(*_36) = !(*_12);
_4 = (*_36);
(*_38).fld0 = _15.0.fld0 ^ _15.0.fld0;
(*_34) = RET << (*_38).fld4;
_22 = 139326035595980531664503236506085311369_i128 as isize;
_12 = core::ptr::addr_of!((*_12));
(*_38).fld0 = _15.0.fld0 ^ _15.0.fld0;
Goto(bb25)
}
bb25 = {
_8 = (*_38).fld4 * (*_38).fld4;
(*_38).fld1 = _15.0.fld1 & _15.0.fld1;
(*_12) = !_37;
(*_38).fld1 = _15.0.fld1 ^ _15.0.fld1;
(*_38).fld1 = !_15.0.fld1;
(*_12) = (*_36) ^ _17.0;
(*_34) = RET;
(*_38).fld1 = _15.0.fld1;
(*_12) = !(*_36);
Goto(bb26)
}
bb26 = {
(*_34) = RET + RET;
_38 = core::ptr::addr_of_mut!(_15.3.fld0);
(*_38).fld0 = _15.0.fld0 * _15.0.fld0;
(*_38).fld2 = _31.0;
_41 = _7 as f64;
_20 = (*_38).fld1 + (*_38).fld1;
(*_38).fld1 = _15.0.fld1;
(*_34) = RET;
Goto(bb27)
}
bb27 = {
(*_38).fld0 = _15.0.fld0 >> _10;
(*_38).fld2 = _30;
_23 = _10;
(*_12) = (*_36) - _37;
(*_36) = -(*_12);
(*_12) = (*_36) ^ (*_36);
(*_36) = (*_12) - (*_12);
(*_12) = _28;
(*_38).fld0 = (-712785569_i32) as usize;
(*_36) = (*_12) & _37;
_12 = core::ptr::addr_of!((*_36));
(*_36) = !_28;
(*_34) = RET;
(*_34) = 79_u8 as u32;
Goto(bb28)
}
bb28 = {
(*_38).fld4 = _8 >> (*_38).fld1;
(*_38).fld4 = (*_34) as i16;
_14 = _43 | _43;
_3 = !19121_u16;
(*_38).fld0 = _15.0.fld0 & _15.0.fld0;
(*_38).fld1 = _15.0.fld1 ^ _20;
_35 = _3;
_45 = [(-1372211074_i32),2027113800_i32,(-1030520964_i32),372774551_i32,(-1940919018_i32),(-553750703_i32),(-115859755_i32),(-1091142832_i32)];
(*_38).fld0 = _15.0.fld0 | _15.0.fld0;
(*_38).fld4 = !_8;
(*_36) = false as isize;
(*_38).fld2 = _30 + _41;
_47 = _7 + _7;
(*_38).fld0 = _15.0.fld0;
_44 = _15.2;
(*_36) = _37 & _28;
(*_38).fld2 = (*_38).fld0 as f64;
_30 = _31.0 + (*_38).fld2;
_35 = !_3;
Goto(bb29)
}
bb29 = {
_15.0.fld4 = (*_38).fld4 + (*_38).fld4;
(*_36) = _44 as isize;
(*_34) = RET;
_36 = core::ptr::addr_of!(_37);
(*_38).fld4 = _8;
(*_38).fld0 = _15.0.fld0 | _15.0.fld0;
Goto(bb30)
}
bb30 = {
_46 = core::ptr::addr_of_mut!(_15);
_13 = (*_46).2;
(*_46).0.fld2 = (*_46).3.fld0.fld2;
(*_46).2 = _32;
(*_38).fld0 = (*_46).0.fld0 & (*_46).0.fld0;
_28 = (*_38).fld0 as isize;
(*_38).fld1 = (*_46).0.fld1 ^ (*_46).0.fld1;
_46 = core::ptr::addr_of_mut!(_15);
(*_46).3.fld0.fld1 = (*_46).0.fld1 | (*_46).0.fld1;
(*_38).fld4 = (*_46).0.fld4 - (*_46).0.fld4;
_47 = _7 - _7;
(*_46).0.fld4 = !(*_38).fld4;
(*_46).2 = _13;
(*_38).fld1 = !(*_46).0.fld1;
_14 = _6 as isize;
(*_34) = (*_46).0.fld4 as u32;
(*_38).fld4 = (*_46).0.fld4 ^ (*_46).0.fld4;
(*_38).fld2 = (*_46).0.fld2 * _11;
_17 = ((*_36),);
(*_46).1 = (*_46).0.fld4;
(*_46).0.fld2 = (*_38).fld2;
Goto(bb31)
}
bb31 = {
(*_36) = _4;
(*_46).0.fld2 = (*_38).fld2 + (*_38).fld2;
_45 = [(-1979727568_i32),1624611430_i32,1332730264_i32,(-263284095_i32),(-2086675677_i32),(-1984025809_i32),(-843858324_i32),(-1912120560_i32)];
(*_34) = !RET;
(*_34) = (*_46).2 as u32;
_51 = [false,false,true,true,true,true];
(*_46).0.fld2 = 86417951232998843500861251043495921273_i128 as f64;
(*_46).1 = (*_46).0.fld4 >> (*_46).0.fld1;
(*_46).2 = _44;
_51 = [false,false,false,true,false,true];
(*_38).fld4 = (*_46).1 - (*_46).0.fld4;
(*_46).0.fld2 = (*_38).fld2 + _31.0;
_49.1 = !(*_46).3.fld0.fld0;
_15.2 = _32;
Goto(bb32)
}
bb32 = {
(*_38).fld1 = (*_46).0.fld1;
(*_46).0.fld1 = (*_38).fld1;
(*_46).1 = (*_38).fld4;
_15.3.fld0.fld4 = !(*_46).0.fld4;
(*_34) = RET << (*_38).fld1;
_55 = false;
(*_46).3.fld0.fld0 = (*_46).0.fld0;
(*_34) = RET - RET;
_62 = _7 as isize;
(*_38).fld0 = (*_46).0.fld0 >> _15.3.fld0.fld1;
(*_46).2 = _13;
(*_38).fld4 = (*_46).1 ^ _8;
(*_46).0.fld4 = _15.1 << (*_38).fld0;
_50 = &(*_36);
(*_46).1 = !(*_38).fld4;
Goto(bb33)
}
bb33 = {
(*_46).0.fld4 = (*_38).fld4;
(*_46).0.fld2 = -(*_38).fld2;
(*_46).0.fld2 = _30 - (*_38).fld2;
_15.1 = _23 as i16;
(*_38).fld2 = (*_46).0.fld2;
_14 = !(*_50);
(*_36) = _4 << (*_46).0.fld1;
(*_46).2 = _44;
(*_46).0.fld1 = (*_38).fld1 << _14;
(*_38).fld1 = !(*_46).0.fld1;
(*_38).fld4 = _8 ^ _15.0.fld4;
(*_38).fld1 = (*_36) as u64;
(*_46).2 = _32;
Goto(bb34)
}
bb34 = {
_14 = (*_36);
_42.0 = core::ptr::addr_of!((*_1));
_31.0 = (*_46).0.fld2 - (*_38).fld2;
_3 = (*_38).fld0 as u16;
_14 = _43;
_17 = ((*_36),);
_31.2 = &_55;
(*_38).fld4 = (*_46).0.fld1 as i16;
_51 = [_55,_55,_55,_55,_55,_55];
(*_46).2 = _44;
(*_38).fld0 = (*_46).0.fld0 & (*_46).0.fld0;
(*_46).2 = _44;
_32 = (*_46).2;
(*_38).fld2 = (*_36) as f64;
(*_36) = !_14;
(*_46).0.fld2 = (*_38).fld2;
(*_38).fld4 = (*_46).1 * (*_46).1;
(*_38).fld2 = (*_46).0.fld2;
(*_46).1 = (*_46).0.fld4 << (*_46).0.fld4;
(*_46).0.fld2 = (*_38).fld2 - (*_38).fld2;
(*_34) = !RET;
_47 = -_7;
(*_38).fld4 = !(*_46).1;
_50 = &_22;
_57 = (*_38).fld2;
(*_38).fld0 = (*_46).0.fld0 >> (*_46).0.fld1;
Goto(bb35)
}
bb35 = {
_20 = (*_46).0.fld1 ^ (*_38).fld1;
(*_46).0.fld1 = (*_38).fld1;
(*_38).fld4 = (*_46).1 | (*_46).1;
(*_38).fld1 = (*_46).0.fld1 ^ (*_46).0.fld1;
(*_46).1 = (*_46).0.fld4;
(*_46).0.fld4 = _15.1 - (*_46).1;
(*_38).fld0 = !(*_46).0.fld0;
_37 = _4 & _17.0;
_70 = (*_38).fld4 > (*_46).0.fld4;
(*_46).0.fld1 = (*_38).fld1 ^ (*_38).fld1;
(*_46).2 = _44;
(*_38).fld2 = _30 + (*_46).0.fld2;
(*_46).2 = _44;
(*_36) = 113211487730132689005970499403280671830_i128 as isize;
(*_38).fld0 = (*_46).0.fld0 << (*_46).0.fld1;
_26 = -(-873954939_i32);
(*_34) = RET + RET;
(*_38).fld2 = (*_46).0.fld2 * (*_46).0.fld2;
(*_34) = RET;
_38 = core::ptr::addr_of_mut!((*_38));
(*_38).fld2 = (*_46).0.fld2 - (*_46).0.fld2;
_16 = !RET;
Goto(bb36)
}
bb36 = {
_42.0 = core::ptr::addr_of!((*_1));
(*_46).2 = _44;
(*_36) = !_17.0;
(*_46).0.fld2 = -(*_38).fld2;
_41 = 78_u8 as f64;
(*_46).1 = (*_38).fld4 + (*_38).fld4;
_26 = !447226888_i32;
(*_38).fld0 = _10 as usize;
(*_46).0.fld4 = _10 as i16;
_32 = (*_46).2;
_3 = (*_36) as u16;
(*_38).fld4 = (*_46).0.fld4 ^ (*_46).1;
(*_38).fld0 = (*_34) as usize;
(*_38).fld2 = (*_38).fld0 as f64;
(*_46).0.fld2 = _23 as f64;
_67 = [_3,_3,_3];
(*_38).fld0 = (*_46).0.fld0;
(*_34) = RET + RET;
(*_46).1 = (*_38).fld0 as i16;
_77 = _47;
_15.1 = (*_46).0.fld4 - (*_38).fld4;
(*_46).2 = _32;
(*_46).0.fld1 = (*_38).fld1;
(*_38).fld4 = (*_46).1 ^ (*_46).1;
Call((*_38).fld4 = core::intrinsics::bswap((*_46).1), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
(*_46).0.fld2 = -_31.0;
_32 = (*_46).2;
Goto(bb38)
}
bb38 = {
(*_38).fld4 = _8 << (*_38).fld1;
(*_46).0.fld4 = _16 as i16;
_15.0.fld1 = (*_38).fld1 * (*_38).fld1;
(*_46).2 = _32;
(*_38).fld2 = (*_34) as f64;
(*_36) = 8637947480839149227_i64 as isize;
_67 = [_3,_3,_3];
(*_38).fld2 = (*_46).0.fld0 as f64;
_78 = &_77;
(*_36) = _70 as isize;
(*_46).1 = -(*_38).fld4;
(*_38).fld4 = _6 as i16;
(*_46).1 = (*_38).fld4 << (*_38).fld4;
_61 = &(*_46).0.fld2;
_65 = [(-54473626561038373706809210202635946896_i128),93603728953358073744502136969684669249_i128];
(*_46).0.fld4 = _15.1 | (*_46).1;
(*_38).fld0 = (*_46).0.fld0;
Goto(bb39)
}
bb39 = {
_64 = (*_36) * (*_36);
(*_38).fld4 = !(*_46).0.fld4;
(*_34) = RET;
(*_38).fld1 = (*_46).0.fld1;
_28 = _64 >> (*_46).0.fld4;
(*_38).fld0 = !(*_46).0.fld0;
(*_38).fld4 = (*_46).0.fld4 + (*_46).1;
(*_46).1 = (*_46).0.fld4 << (*_36);
_6 = _2 >> (*_46).1;
(*_46).0.fld2 = (*_46).0.fld0 as f64;
Goto(bb40)
}
bb40 = {
(*_46).0.fld2 = _57;
(*_38).fld0 = (*_46).0.fld0 << _4;
(*_36) = _17.0;
_83 = _3;
(*_38).fld0 = (*_46).2 as usize;
_35 = _3 + _83;
(*_38).fld4 = (*_46).0.fld4 & (*_46).1;
_15.1 = (*_38).fld4 + (*_46).0.fld4;
(*_46).0.fld4 = (*_46).1;
(*_38).fld4 = !(*_46).0.fld4;
(*_38).fld4 = _35 as i16;
(*_34) = !RET;
Goto(bb41)
}
bb41 = {
(*_46).0.fld1 = (*_38).fld1;
_31.0 = -(*_46).0.fld2;
(*_46).1 = (*_46).0.fld4 * (*_46).0.fld4;
(*_46).0.fld2 = _57;
(*_46).0.fld4 = (*_38).fld4 - (*_38).fld4;
(*_38).fld0 = (*_46).0.fld0 ^ (*_46).0.fld0;
(*_38).fld1 = !(*_46).0.fld1;
_11 = _6 as f64;
Goto(bb42)
}
bb42 = {
(*_36) = _14 << _15.0.fld1;
(*_38).fld4 = !(*_46).0.fld4;
(*_38).fld2 = (*_46).0.fld2;
_56 = core::ptr::addr_of!(_12);
(*_38).fld4 = !(*_46).1;
(*_56) = core::ptr::addr_of!((*_50));
(*_36) = _28 | _14;
_54 = &mut _61;
(*_46).0.fld4 = (*_38).fld1 as i16;
(*_38).fld1 = (*_46).0.fld1;
(*_46).0.fld1 = !(*_38).fld1;
(*_38).fld2 = _11 * (*_46).0.fld2;
_56 = core::ptr::addr_of!((*_56));
(*_46).0.fld4 = (*_46).1;
(*_38).fld2 = (*_46).0.fld2 * (*_46).0.fld2;
Goto(bb43)
}
bb43 = {
(*_46).0.fld1 = (*_38).fld1 * (*_38).fld1;
(*_36) = !_4;
(*_38).fld4 = (*_46).1 + (*_46).0.fld4;
_20 = (*_38).fld4 as u64;
(*_46).0.fld1 = (*_38).fld1 - (*_38).fld1;
(*_34) = RET * RET;
(*_46).2 = _13;
(*_38).fld0 = (*_46).0.fld0;
(*_56) = core::ptr::addr_of!((*_12));
(*_38).fld2 = (*_46).0.fld2;
_60 = &_38;
(*_56) = Move(_36);
(*_38).fld4 = (*_46).0.fld4 + (*_46).1;
(*_46).0.fld2 = -(*_38).fld2;
(*_38).fld1 = (*_46).0.fld1 ^ _20;
_85 = (*_78) + (*_78);
_46 = core::ptr::addr_of_mut!(_15);
(*_54) = &(*_38).fld2;
(*_54) = &_15.0.fld2;
(*_34) = !RET;
(*_38).fld0 = (*_38).fld2 as usize;
(*_38).fld2 = (*_46).0.fld2 + (*_46).0.fld2;
(*_46).0.fld4 = (*_46).1;
(*_56) = core::ptr::addr_of!((*_50));
(*_38).fld1 = (*_46).0.fld1;
_45 = [_26,_26,_26,_26,_26,_26,_26,_26];
Goto(bb44)
}
bb44 = {
_18 = &mut _31.2;
(*_46).0.fld2 = (*_38).fld2;
_3 = !_83;
(*_46).0.fld1 = (*_38).fld1 - _15.3.fld0.fld1;
(*_46).3.fld0.fld4 = (*_46).0.fld4;
_71 = _4 >> (*_46).0.fld4;
(*_46).0.fld4 = !(*_46).3.fld0.fld4;
(*_46).0.fld4 = (*_46).1 << (*_46).3.fld0.fld4;
(*_38).fld0 = (*_46).0.fld0 | _49.1;
(*_38).fld4 = -_15.0.fld4;
Goto(bb45)
}
bb45 = {
(*_38).fld1 = !(*_46).0.fld1;
_47 = (*_78) - (*_78);
(*_38).fld0 = _64 as usize;
_15.0.fld2 = (*_38).fld2 - (*_38).fld2;
_56 = core::ptr::addr_of!((*_56));
_36 = core::ptr::addr_of!((*_50));
(*_38).fld1 = (*_46).0.fld1 + (*_46).0.fld1;
(*_38).fld1 = (*_46).0.fld1;
Goto(bb46)
}
bb46 = {
(*_46).1 = _6 as i16;
(*_46).0.fld1 = !(*_38).fld1;
(*_38).fld0 = !_15.0.fld0;
_82 = _26;
(*_38).fld4 = (*_46).1 << (*_46).1;
(*_46).0.fld1 = !(*_38).fld1;
(*_38).fld2 = -(*_46).0.fld2;
(*_54) = &(*_38).fld2;
_100.0 = -_82;
_62 = _14 & _4;
(*_38).fld0 = (*_46).0.fld0 + _49.1;
_71 = (*_38).fld0 as isize;
(*_38).fld2 = (*_46).0.fld2 - (*_46).0.fld2;
(*_46).1 = -(*_46).0.fld4;
Goto(bb47)
}
bb47 = {
(*_54) = &(*_46).0.fld2;
_23 = !_10;
(*_56) = core::ptr::addr_of!((*_12));
Goto(bb48)
}
bb48 = {
_20 = (*_38).fld1 - (*_46).0.fld1;
(*_38).fld4 = (*_46).1;
(*_38).fld1 = (*_46).0.fld1 | (*_46).0.fld1;
_103 = &mut (*_54);
_97 = (*_38).fld0 as isize;
(*_46).0.fld1 = !(*_38).fld1;
_42.0 = core::ptr::addr_of!((*_1));
(*_46).0.fld2 = -(*_38).fld2;
_57 = (*_38).fld2 + (*_46).0.fld2;
_32 = (*_46).2;
(*_46).2 = _32;
(*_38).fld2 = (*_46).0.fld2 * (*_46).0.fld2;
(*_46).0.fld4 = !(*_38).fld4;
Goto(bb49)
}
bb49 = {
_58 = _17.0 >> _15.3.fld0.fld4;
(*_38).fld1 = !(*_46).0.fld1;
(*_46).0.fld1 = (*_38).fld1;
_93 = _82;
(*_34) = 51080466964024252123148877749908598180_i128 as u32;
(*_46).1 = (*_38).fld4 - (*_46).0.fld4;
_66 = -_23;
_15.0.fld0 = (*_38).fld0;
(*_56) = core::ptr::addr_of!((*_36));
(*_46).0.fld2 = -_15.3.fld0.fld2;
(*_38).fld4 = (*_46).1 * (*_46).1;
_94 = [101_u8,161_u8,143_u8];
(*_46).2 = _13;
(*_38).fld4 = !(*_46).0.fld4;
(*_38).fld4 = -(*_46).1;
(*_46).0.fld4 = (*_38).fld4 >> (*_46).1;
_14 = !_17.0;
_103 = Move(_54);
(*_46).0.fld1 = !(*_38).fld1;
(*_38).fld1 = (*_46).0.fld1 - (*_46).0.fld1;
_46 = core::ptr::addr_of_mut!(_15);
(*_46).0.fld2 = _6 as f64;
(*_38).fld2 = (*_46).0.fld2;
(*_46).0.fld2 = (*_38).fld2 - (*_38).fld2;
_32 = (*_46).2;
(*_34) = RET;
Goto(bb50)
}
bb50 = {
Call(_113 = dump_var(3_usize, 97_usize, Move(_97), 20_usize, Move(_20), 13_usize, Move(_13), 16_usize, Move(_16)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_113 = dump_var(3_usize, 67_usize, Move(_67), 58_usize, Move(_58), 51_usize, Move(_51), 3_usize, Move(_3)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_113 = dump_var(3_usize, 22_usize, Move(_22), 17_usize, Move(_17), 14_usize, Move(_14), 43_usize, Move(_43)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_113 = dump_var(3_usize, 64_usize, Move(_64), 93_usize, Move(_93), 82_usize, Move(_82), 62_usize, Move(_62)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_113 = dump_var(3_usize, 6_usize, Move(_6), 23_usize, Move(_23), 114_usize, _114, 114_usize, _114), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: *const *const (&'static isize, i8),mut _2: isize,mut _3: isize,mut _4: u128,mut _5: u32,mut _6: i8,mut _7: isize,mut _8: i16) -> f32 {
mir! {
type RET = f32;
let _9: usize;
let _10: &'static *mut Adt26;
let _11: i64;
let _12: f32;
let _13: *mut Adt25;
let _14: *const i64;
let _15: i8;
let _16: i8;
let _17: ();
let _18: ();
{
_4 = 1338899182141247759_i64 as u128;
_3 = _4 as isize;
_6 = 149377690832697439615233985559921246584_i128 as i8;
_7 = _2 ^ _2;
_9 = 6_usize;
_8 = _4 as i16;
_2 = 1690833306273314975_i64 as isize;
_3 = -_7;
_2 = _3 + _7;
Goto(bb1)
}
bb1 = {
_8 = !24141_i16;
_4 = 237805800969650260103235243203165842706_u128 << _5;
_4 = !305357451078022362536803653570416416537_u128;
RET = 6253390170371579376_i64 as f32;
_2 = _3;
_4 = 229685406259193655110927532721701636151_u128 << _9;
_4 = '\u{a89b6}' as u128;
_9 = !4_usize;
_12 = RET;
_4 = _8 as u128;
_9 = !16624285571668228082_usize;
_6 = 102_i8 * 29_i8;
_11 = 2936784516325204249_i64;
_4 = 212228846154410745006661859890208776389_u128 >> _7;
_4 = 2416234521246748539463525968333393964_u128;
_5 = 1460301578_u32 - 3566793942_u32;
_4 = !52561599967058178858368331288537054002_u128;
_7 = _3 - _2;
RET = -_12;
_7 = _3 | _3;
_9 = 4_usize + 15749586609238042801_usize;
_4 = '\u{fbacf}' as u128;
_9 = 4219239148345939195_u64 as usize;
_6 = 2_i8;
_14 = core::ptr::addr_of!(_11);
(*_14) = 123477466539583741018899626323984629036_i128 as i64;
Call((*_14) = fn5(Move(_1), Move(_14), _6, _5, _7, _7, _3, _5, _12, RET, _7), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = -_12;
_12 = RET + RET;
_5 = _7 as u32;
_2 = -_3;
RET = _12;
_16 = _6 | _6;
RET = _11 as f32;
_6 = !_16;
_3 = 22612_u16 as isize;
_7 = _2 + _3;
_12 = RET * RET;
_2 = _7 >> _7;
_5 = 180383527_u32 | 1528732592_u32;
_4 = 269314611273194730355942748146861011037_u128 & 312315583482865984753257353780628912223_u128;
_8 = (-3740_i16) + 1666_i16;
_15 = _5 as i8;
Goto(bb3)
}
bb3 = {
Call(_17 = dump_var(4_usize, 9_usize, Move(_9), 8_usize, Move(_8), 3_usize, Move(_3), 6_usize, Move(_6)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Call(_17 = dump_var(4_usize, 4_usize, Move(_4), 18_usize, _18, 18_usize, _18, 18_usize, _18), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *const *const (&'static isize, i8),mut _2: *const i64,mut _3: i8,mut _4: u32,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: u32,mut _9: f32,mut _10: f32,mut _11: isize) -> i64 {
mir! {
type RET = i64;
let _12: f64;
let _13: f64;
let _14: i128;
let _15: ();
let _16: ();
{
_6 = (-18991_i16) as isize;
_5 = -_11;
_9 = _10 + _10;
_11 = _7 - _5;
_5 = _11 + _11;
_3 = 69_i8 | 24_i8;
_8 = _4;
_9 = _4 as f32;
_6 = -_5;
_11 = _5;
_3 = -77_i8;
_6 = _11;
Goto(bb1)
}
bb1 = {
_9 = -_10;
_2 = core::ptr::addr_of!(RET);
(*_2) = !5308667220030349545_i64;
(*_2) = _11 as i64;
(*_2) = 7650404419518781305_i64;
_7 = _5 << (*_2);
_10 = _9 * _9;
(*_2) = 146123316438651132_i64 * (-9108829811225896272_i64);
Goto(bb2)
}
bb2 = {
(*_2) = (-8046212541141767768_i64) + 6350105074992586617_i64;
(*_2) = 1696910511612777966_i64;
_7 = _11;
_8 = _4;
_9 = _10;
(*_2) = (-5159298629583497781_i64) >> _5;
(*_2) = -(-5755472939197170243_i64);
_5 = _11;
_13 = _3 as f64;
(*_2) = (-7644776717999358097_i64) + 8746353313254741019_i64;
(*_2) = 4080924181724181710_i64 >> _7;
_9 = _10 - _10;
_10 = _9;
Goto(bb3)
}
bb3 = {
Call(_15 = dump_var(5_usize, 8_usize, Move(_8), 4_usize, Move(_4), 11_usize, Move(_11), 16_usize, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize) -> i16 {
mir! {
type RET = i16;
let _2: [usize; 4];
let _3: &'static &'static bool;
let _4: &'static *const i8;
let _5: [i16; 6];
let _6: i8;
let _7: &'static mut &'static f64;
let _8: *const *const (&'static isize, i8);
let _9: i32;
let _10: &'static usize;
let _11: &'static isize;
let _12: u64;
let _13: *mut i64;
let _14: u16;
let _15: isize;
let _16: u64;
let _17: u32;
let _18: u8;
let _19: *const *const (&'static isize, i8);
let _20: isize;
let _21: i32;
let _22: f32;
let _23: (i32, i8, &'static mut i64, &'static bool);
let _24: [u16; 1];
let _25: i32;
let _26: (f64,);
let _27: i64;
let _28: Adt86;
let _29: u8;
let _30: *mut (usize, i32);
let _31: *mut i64;
let _32: f32;
let _33: &'static mut (*mut i64,);
let _34: isize;
let _35: [usize; 4];
let _36: &'static f32;
let _37: [usize; 4];
let _38: *mut (usize, i32);
let _39: isize;
let _40: &'static mut i64;
let _41: u8;
let _42: &'static mut i64;
let _43: *const i64;
let _44: *mut [u128; 2];
let _45: isize;
let _46: u32;
let _47: &'static mut (*mut i64,);
let _48: &'static f64;
let _49: (&'static isize, i8);
let _50: f64;
let _51: bool;
let _52: char;
let _53: ();
let _54: ();
{
RET = (-16043_i16) << _1;
RET = 5814467495661440471_usize as i16;
_1 = (-109_isize) << RET;
RET = (-15528_i16) ^ (-17787_i16);
RET = 1737_i16 ^ (-26445_i16);
RET = '\u{10140f}' as i16;
_2 = [8206925428345421399_usize,0_usize,4_usize,15735968216537380985_usize];
_1 = !57_isize;
_1 = 289892787102292923908377551948278808458_u128 as isize;
_2 = [11249786754773996799_usize,6_usize,14406267133319713006_usize,8914119692206122320_usize];
_1 = !9223372036854775807_isize;
_1 = 1403607931_u32 as isize;
RET = (-25038_i16) | (-31496_i16);
RET = 21214_i16 - 26058_i16;
RET = -7864_i16;
RET = 4712909694271778983_usize as i16;
_1 = 7837401031821608112_u64 as isize;
_1 = 9223372036854775807_isize;
_2 = [4_usize,6_usize,6_usize,4_usize];
_2 = [0_usize,14950456605852002373_usize,4_usize,16943819142516545073_usize];
RET = 15521_i16 - 12264_i16;
RET = !(-20420_i16);
_2 = [2161106666127888837_usize,8430735963715830292_usize,6_usize,2_usize];
RET = -(-9270_i16);
Call(_1 = fn7(_2, RET, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = [7_usize,943773836122439080_usize,2_usize,9503526569637959093_usize];
_1 = !9223372036854775807_isize;
RET = 6962_i16 - (-5758_i16);
RET = 4603_i16 << _1;
RET = -9898_i16;
_1 = -9223372036854775807_isize;
_6 = !(-66_i8);
_5 = [RET,RET,RET,RET,RET,RET];
_6 = (-108_i8) + (-50_i8);
_6 = (-7145398693081499266_i64) as i8;
RET = 5462577278124924686_i64 as i16;
RET = 24031_i16 + (-1775_i16);
_2 = [1_usize,7234352492786752882_usize,8496360333657030161_usize,2_usize];
_6 = 56537_u16 as i8;
RET = (-1833581858_i32) as i16;
_1 = (-44_isize) + 79_isize;
RET = 47_u8 as i16;
RET = 12675_i16;
_9 = 666668829_i32 - 662360461_i32;
_2 = [5584038277741462312_usize,1_usize,4_usize,7_usize];
RET = (-9229_i16) ^ 26212_i16;
Goto(bb2)
}
bb2 = {
RET = 6189_i16 - 24046_i16;
RET = 2650_i16;
_9 = !(-349734226_i32);
_14 = 15592_u16 + 64802_u16;
_11 = &_1;
RET = _14 as i16;
Goto(bb3)
}
bb3 = {
RET = _9 as i16;
Goto(bb4)
}
bb4 = {
_16 = 8846602293143082574_u64;
_15 = (*_11);
_11 = &_15;
_5 = [RET,RET,RET,RET,RET,RET];
match _16 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
8846602293143082574 => bb12,
_ => bb11
}
}
bb5 = {
RET = _9 as i16;
Goto(bb4)
}
bb6 = {
RET = 6189_i16 - 24046_i16;
RET = 2650_i16;
_9 = !(-349734226_i32);
_14 = 15592_u16 + 64802_u16;
_11 = &_1;
RET = _14 as i16;
Goto(bb3)
}
bb7 = {
_2 = [7_usize,943773836122439080_usize,2_usize,9503526569637959093_usize];
_1 = !9223372036854775807_isize;
RET = 6962_i16 - (-5758_i16);
RET = 4603_i16 << _1;
RET = -9898_i16;
_1 = -9223372036854775807_isize;
_6 = !(-66_i8);
_5 = [RET,RET,RET,RET,RET,RET];
_6 = (-108_i8) + (-50_i8);
_6 = (-7145398693081499266_i64) as i8;
RET = 5462577278124924686_i64 as i16;
RET = 24031_i16 + (-1775_i16);
_2 = [1_usize,7234352492786752882_usize,8496360333657030161_usize,2_usize];
_6 = 56537_u16 as i8;
RET = (-1833581858_i32) as i16;
_1 = (-44_isize) + 79_isize;
RET = 47_u8 as i16;
RET = 12675_i16;
_9 = 666668829_i32 - 662360461_i32;
_2 = [5584038277741462312_usize,1_usize,4_usize,7_usize];
RET = (-9229_i16) ^ 26212_i16;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_15 = -_1;
_15 = _1 - _1;
_21 = 225924254427348894554723696722190393492_u128 as i32;
_6 = (-36_i8);
_2 = [7007206360822095369_usize,0_usize,5_usize,17011739194736912243_usize];
_9 = -_21;
_17 = 2794187240_u32;
_15 = _1 & _1;
_20 = _15 << _17;
_18 = true as u8;
_15 = _1 & _1;
_18 = !71_u8;
_21 = _9 + _9;
_20 = _1 ^ _1;
_15 = _1 << _6;
_11 = &_1;
_9 = _18 as i32;
_15 = (*_11) + (*_11);
_22 = 282105343080389210027592250274462458584_u128 as f32;
_20 = (*_11) * (*_11);
_21 = true as i32;
match _6 {
0 => bb3,
1 => bb13,
2 => bb14,
3 => bb15,
340282366920938463463374607431768211420 => bb17,
_ => bb16
}
}
bb13 = {
_16 = 8846602293143082574_u64;
_15 = (*_11);
_11 = &_15;
_5 = [RET,RET,RET,RET,RET,RET];
match _16 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
8846602293143082574 => bb12,
_ => bb11
}
}
bb14 = {
Return()
}
bb15 = {
RET = _9 as i16;
Goto(bb4)
}
bb16 = {
Return()
}
bb17 = {
_12 = _16;
_9 = _21;
_17 = !3233484140_u32;
_17 = 3649587540_u32 | 1260410775_u32;
_17 = !4051671788_u32;
_17 = !1274561033_u32;
_12 = _16;
Goto(bb18)
}
bb18 = {
_23.1 = -_6;
_23.0 = _9 | _9;
_25 = _9 * _21;
_5 = [RET,RET,RET,RET,RET,RET];
_9 = _25 + _25;
_2 = [3_usize,2_usize,4_usize,4_usize];
_6 = _23.1 | _23.1;
_20 = (*_11) | (*_11);
_26.0 = _12 as f64;
_24 = [_14];
_5 = [RET,RET,RET,RET,RET,RET];
_22 = _18 as f32;
match _16 {
0 => bb17,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
6 => bb24,
8846602293143082574 => bb26,
_ => bb25
}
}
bb19 = {
Return()
}
bb20 = {
_16 = 8846602293143082574_u64;
_15 = (*_11);
_11 = &_15;
_5 = [RET,RET,RET,RET,RET,RET];
match _16 {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
8846602293143082574 => bb12,
_ => bb11
}
}
bb21 = {
RET = _9 as i16;
Goto(bb4)
}
bb22 = {
RET = _9 as i16;
Goto(bb4)
}
bb23 = {
_2 = [7_usize,943773836122439080_usize,2_usize,9503526569637959093_usize];
_1 = !9223372036854775807_isize;
RET = 6962_i16 - (-5758_i16);
RET = 4603_i16 << _1;
RET = -9898_i16;
_1 = -9223372036854775807_isize;
_6 = !(-66_i8);
_5 = [RET,RET,RET,RET,RET,RET];
_6 = (-108_i8) + (-50_i8);
_6 = (-7145398693081499266_i64) as i8;
RET = 5462577278124924686_i64 as i16;
RET = 24031_i16 + (-1775_i16);
_2 = [1_usize,7234352492786752882_usize,8496360333657030161_usize,2_usize];
_6 = 56537_u16 as i8;
RET = (-1833581858_i32) as i16;
_1 = (-44_isize) + 79_isize;
RET = 47_u8 as i16;
RET = 12675_i16;
_9 = 666668829_i32 - 662360461_i32;
_2 = [5584038277741462312_usize,1_usize,4_usize,7_usize];
RET = (-9229_i16) ^ 26212_i16;
Goto(bb2)
}
bb24 = {
RET = 6189_i16 - 24046_i16;
RET = 2650_i16;
_9 = !(-349734226_i32);
_14 = 15592_u16 + 64802_u16;
_11 = &_1;
RET = _14 as i16;
Goto(bb3)
}
bb25 = {
Return()
}
bb26 = {
_13 = core::ptr::addr_of_mut!(_27);
_26.0 = 44935567045250854706712365874721877900_i128 as f64;
(*_13) = '\u{81881}' as i64;
_13 = core::ptr::addr_of_mut!((*_13));
_11 = &_20;
_21 = _23.0 | _25;
(*_13) = 4266959633756856964_i64 & 3198569444741969684_i64;
_21 = _9;
(*_13) = (-5983760172467144038_i64) & (-441697682069556505_i64);
_6 = _23.1;
_23.2 = &mut (*_13);
_25 = 18234567991477792746_usize as i32;
_16 = _12 >> _20;
_26.0 = 6403930324082271245_i64 as f64;
_18 = 3_usize as u8;
_18 = 93_u8 + 43_u8;
_23.0 = _9;
_17 = 2004714211_u32 & 4256077599_u32;
_14 = 36184_u16 ^ 9414_u16;
_26.0 = _22 as f64;
_17 = !818711037_u32;
Goto(bb27)
}
bb27 = {
_2 = [3_usize,14528335405881073371_usize,5_usize,11060270063823197828_usize];
_29 = !_18;
_24 = [_14];
_16 = !_12;
_1 = 164564955236085481514629597971670074868_i128 as isize;
_5 = [RET,RET,RET,RET,RET,RET];
_18 = _29 << (*_11);
_25 = _23.0 >> (*_11);
_12 = _16;
_15 = (*_11) >> (*_11);
Goto(bb28)
}
bb28 = {
_22 = 1255060281625108704_usize as f32;
_15 = !_1;
_34 = (*_11) * (*_11);
_1 = (*_11);
_31 = Move(_13);
_9 = !_21;
_5 = [RET,RET,RET,RET,RET,RET];
_22 = RET as f32;
_23.1 = _6 & _6;
_36 = &_22;
_37 = [7_usize,2766383073614509314_usize,4_usize,3_usize];
_32 = -(*_36);
_14 = 56234_u16;
_23.0 = -_9;
_9 = _25;
_23.1 = !_6;
_12 = _16 * _16;
_35 = [17414798245693181867_usize,3_usize,9663727369670663846_usize,7_usize];
_24 = [_14];
_9 = _25 + _23.0;
_15 = (*_11) & (*_11);
_29 = !_18;
_17 = 1067765996_u32 - 3698606365_u32;
_13 = Move(_31);
match _14 {
56234 => bb30,
_ => bb29
}
}
bb29 = {
Return()
}
bb30 = {
_9 = _25;
_37 = [48929070799568575_usize,6_usize,2_usize,2_usize];
_34 = _17 as isize;
_1 = _15;
_20 = true as isize;
_23.1 = false as i8;
_17 = !793998351_u32;
_18 = _29;
_18 = _29 - _29;
_40 = Move(_23.2);
Goto(bb31)
}
bb31 = {
_37 = [1329055321506176637_usize,10785863697800348913_usize,2262768250642115621_usize,7539286139942517435_usize];
_26.0 = _15 as f64;
_1 = _15 >> _29;
_9 = _21 - _25;
_39 = _1 - _1;
_5 = [RET,RET,RET,RET,RET,RET];
_5 = [RET,RET,RET,RET,RET,RET];
_24 = [_14];
_23.1 = _6;
_24 = [_14];
_45 = !_39;
_46 = _17 & _17;
_41 = 10435729013306391528_usize as u8;
_5 = [RET,RET,RET,RET,RET,RET];
_9 = _23.0 ^ _25;
_35 = [5_usize,3_usize,3_usize,3_usize];
_14 = 34042_u16 + 23358_u16;
_5 = [RET,RET,RET,RET,RET,RET];
_24 = [_14];
Goto(bb32)
}
bb32 = {
_23.0 = -_9;
_23.0 = _25 + _25;
_39 = -_45;
_35 = [6_usize,4_usize,16878563852941052797_usize,4_usize];
_39 = !_1;
_20 = _15 << _18;
_26.0 = _16 as f64;
_36 = &_32;
_23.0 = _9 | _9;
_15 = _45 << _20;
_35 = [3_usize,2_usize,1928782646810280750_usize,5_usize];
_37 = [1_usize,332752265025613222_usize,4_usize,0_usize];
_2 = [4_usize,5_usize,17575526048991766451_usize,17588625352397645858_usize];
_24 = [_14];
_35 = [18116689243171300328_usize,943886932182445437_usize,16282650487558566776_usize,5_usize];
_6 = _23.1;
Goto(bb33)
}
bb33 = {
_26.0 = _6 as f64;
_15 = 5_usize as isize;
_49.0 = &_45;
_6 = _45 as i8;
_2 = [5730709483326296127_usize,5_usize,14753537667975352891_usize,4762923602760257974_usize];
_16 = _12 << _6;
_41 = !_18;
_1 = _45 - _20;
_31 = Move(_13);
_29 = !_41;
_14 = 21790_u16 << _16;
_23.1 = !_6;
_12 = _16;
RET = 15028_i16;
_45 = (-4860654950310194841_i64) as isize;
_23.0 = -_9;
RET = 31056_i16 >> _1;
_2 = _37;
Goto(bb34)
}
bb34 = {
Call(_53 = dump_var(6_usize, 12_usize, Move(_12), 21_usize, Move(_21), 14_usize, Move(_14), 27_usize, Move(_27)), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Call(_53 = dump_var(6_usize, 25_usize, Move(_25), 5_usize, Move(_5), 35_usize, Move(_35), 6_usize, Move(_6)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_53 = dump_var(6_usize, 17_usize, Move(_17), 15_usize, Move(_15), 39_usize, Move(_39), 34_usize, Move(_34)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [usize; 4],mut _2: i16,mut _3: [usize; 4]) -> isize {
mir! {
type RET = isize;
let _4: *const (&'static bool,);
let _5: (f64, &'static mut i64, &'static bool, &'static usize);
let _6: i32;
let _7: f64;
let _8: i8;
let _9: [bool; 6];
let _10: Adt43;
let _11: *const (&'static isize, i8);
let _12: i16;
let _13: *const isize;
let _14: f64;
let _15: (f64, &'static mut i64, &'static bool, &'static usize);
let _16: (*const *const (&'static isize, i8),);
let _17: f64;
let _18: *const (&'static isize, i8);
let _19: f32;
let _20: [i32; 8];
let _21: f32;
let _22: i128;
let _23: u64;
let _24: i64;
let _25: (f64,);
let _26: bool;
let _27: *const u32;
let _28: u32;
let _29: [usize; 4];
let _30: f64;
let _31: (f64,);
let _32: (&'static bool,);
let _33: f64;
let _34: u8;
let _35: i32;
let _36: u128;
let _37: bool;
let _38: u32;
let _39: Adt31;
let _40: f32;
let _41: bool;
let _42: f32;
let _43: bool;
let _44: i16;
let _45: f32;
let _46: &'static *const i8;
let _47: isize;
let _48: bool;
let _49: Adt19;
let _50: ();
let _51: ();
{
_3 = [6_usize,2_usize,10913463281021705741_usize,2_usize];
RET = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
RET = 9223372036854775807_isize | (-9223372036854775808_isize);
_1 = _3;
_1 = _3;
RET = !(-9223372036854775808_isize);
_2 = 3621652663274784840_u64 as i16;
RET = 36560_u16 as isize;
_2 = (-14138_i16) + 23573_i16;
_1 = [17521643575222086849_usize,7_usize,9996145565653375103_usize,3_usize];
_5.0 = 75337102311730328612699215890667550840_u128 as f64;
_6 = 1612757220_i32 >> RET;
_6 = -(-6586642_i32);
_3 = [1248336882466491725_usize,9836417130795046202_usize,10520211947665201101_usize,5_usize];
_2 = RET as i16;
_2 = -21805_i16;
Goto(bb1)
}
bb1 = {
_5.0 = _2 as f64;
RET = !(-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_8 = RET as i8;
_5.0 = _8 as f64;
_1 = [3_usize,3_usize,8183568624968649045_usize,4352332061907129411_usize];
Call(_7 = fn8(_5.0, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = (-107_i8) >> _6;
_5.0 = _7;
_3 = [7_usize,1905395889358696149_usize,15027003947470980611_usize,18388452551670027315_usize];
_8 = 70_i8;
match _8 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
70 => bb9,
_ => bb8
}
}
bb3 = {
_5.0 = _2 as f64;
RET = !(-9223372036854775808_isize);
RET = -(-9223372036854775808_isize);
_8 = RET as i8;
_5.0 = _8 as f64;
_1 = [3_usize,3_usize,8183568624968649045_usize,4352332061907129411_usize];
Call(_7 = fn8(_5.0, _5.0), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = (-780_i16) + (-21587_i16);
_9 = [false,false,true,false,true,false];
_3 = [16534130016086569693_usize,1013191266256305260_usize,4_usize,4_usize];
_8 = -50_i8;
_5.0 = _7 - _7;
_1 = [6_usize,3_usize,2_usize,1_usize];
_1 = [7_usize,3_usize,7_usize,2879559153683854173_usize];
_9 = [false,true,true,false,false,true];
_10 = Adt43::Variant2 { fld0: _5.0 };
_2 = (-18473_i16);
_2 = (-3815_i16);
_6 = !(-1007747742_i32);
_2 = _8 as i16;
place!(Field::<f64>(Variant(_10, 2), 0)) = _7;
RET = (-9223372036854775808_isize) | 9223372036854775807_isize;
_2 = (-1191_i16) ^ 8205_i16;
_9 = [true,true,true,false,false,true];
_10 = Adt43::Variant2 { fld0: _7 };
_9 = [false,true,false,false,false,true];
_5.0 = Field::<f64>(Variant(_10, 2), 0) - Field::<f64>(Variant(_10, 2), 0);
place!(Field::<f64>(Variant(_10, 2), 0)) = _8 as f64;
_8 = 67_i8;
RET = _7 as isize;
RET = 340190416691013346582309925213634569195_u128 as isize;
_8 = 13266482337191987314_usize as i8;
Goto(bb10)
}
bb10 = {
_3 = _1;
_3 = [5_usize,0_usize,18051937413274675745_usize,1_usize];
_1 = [15457594318899366905_usize,12799040492430792774_usize,1_usize,15341964043199821715_usize];
_8 = 172007826543250172396832837118923489192_u128 as i8;
RET = (-9223372036854775808_isize);
_2 = 23096_i16 ^ (-6171_i16);
_2 = (-11811_i16);
_12 = _2 >> _6;
_1 = [12539379792003621085_usize,7_usize,0_usize,16692210353446830583_usize];
place!(Field::<f64>(Variant(_10, 2), 0)) = 1895160999_u32 as f64;
_15.0 = _7 * _5.0;
_3 = [15193498150444109751_usize,0_usize,8485356983805467360_usize,7_usize];
_8 = (-103_i8) | (-55_i8);
_13 = core::ptr::addr_of!(RET);
(*_13) = 9858034148469421654_u64 as isize;
(*_13) = 9223372036854775807_isize - (-9223372036854775808_isize);
_2 = -_12;
_6 = 70032539_i32;
Goto(bb11)
}
bb11 = {
(*_13) = 109_isize ^ 9223372036854775807_isize;
(*_13) = -(-12_isize);
_13 = core::ptr::addr_of!((*_13));
(*_13) = 9223372036854775807_isize + 9223372036854775807_isize;
_20 = [_6,_6,_6,_6,_6,_6,_6,_6];
_6 = (-174009899_i32) | 1361254293_i32;
_1 = [1067296886500509755_usize,2_usize,5_usize,14640738608509431096_usize];
_14 = _15.0;
(*_13) = (-9223372036854775808_isize) | 9223372036854775807_isize;
(*_13) = (-9223372036854775808_isize) * 9223372036854775807_isize;
(*_13) = 9223372036854775807_isize & 9223372036854775807_isize;
Goto(bb12)
}
bb12 = {
_17 = _14 - _5.0;
(*_13) = _8 as isize;
_15.0 = _7;
(*_13) = (-98_isize) + 41_isize;
_13 = core::ptr::addr_of!((*_13));
_16.0 = core::ptr::addr_of!(_18);
(*_13) = !(-104_isize);
(*_13) = !9223372036854775807_isize;
_24 = 7813139907168275695_i64 - 6235685328689422005_i64;
(*_13) = (-34608380868730148131575172762003022160_i128) as isize;
RET = !82_isize;
_15.1 = &mut _24;
_5.1 = Move(_15.1);
RET = _17 as isize;
_3 = [7941921486939724228_usize,4200315452872255884_usize,5_usize,9905234139104497871_usize];
_14 = _5.0 + _17;
(*_13) = 63_isize * (-9223372036854775808_isize);
(*_13) = 9223372036854775807_isize - (-9223372036854775808_isize);
(*_13) = 7780900701143785467_i64 as isize;
Call((*_13) = core::intrinsics::bswap((-9223372036854775808_isize)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_14 = _7 - _17;
_21 = 64391415062131288352453449102609590111_i128 as f32;
_14 = _2 as f64;
(*_13) = 9223372036854775807_isize;
_6 = _21 as i32;
_23 = 8814553910782055136_u64;
_23 = 6456009968845923595_u64 * 17676639041244759574_u64;
(*_13) = 9223372036854775807_isize - 9223372036854775807_isize;
Goto(bb14)
}
bb14 = {
(*_13) = !24_isize;
_28 = 2737999961_u32;
(*_13) = -9223372036854775807_isize;
(*_13) = (-9223372036854775808_isize) + 9223372036854775807_isize;
_19 = _21;
_6 = 2058698039_i32 + 1140843520_i32;
_19 = _21;
(*_13) = 128_u8 as isize;
(*_13) = 9223372036854775807_isize | (-9223372036854775808_isize);
_26 = !false;
Goto(bb15)
}
bb15 = {
(*_13) = !(-80_isize);
_25.0 = _23 as f64;
_25.0 = _15.0 - _7;
_10 = Adt43::Variant2 { fld0: _25.0 };
(*_13) = (-9223372036854775808_isize);
_2 = -_12;
_30 = _7;
(*_13) = 41_isize & 9223372036854775807_isize;
(*_13) = (-88_isize);
_25.0 = _5.0 + _5.0;
(*_13) = !9223372036854775807_isize;
(*_13) = 9223372036854775807_isize;
_16.0 = core::ptr::addr_of!(_18);
_22 = 3114644331181676507635587579214647852_i128 - 48912711085044884407683253925416803554_i128;
(*_13) = (-8340742069691970870_i64) as isize;
_5.2 = &_26;
_23 = 14783319956323992772_u64 ^ 6762584346713242371_u64;
_23 = 12470554890201857252_u64;
_32 = (Move(_5.2),);
match _28 {
0 => bb1,
1 => bb2,
2 => bb13,
2737999961 => bb16,
_ => bb4
}
}
bb16 = {
_27 = core::ptr::addr_of!(_28);
(*_27) = 718346179_u32 | 696454596_u32;
_29 = [5_usize,3_usize,6_usize,4_usize];
_2 = _12 & _12;
(*_27) = !3875527683_u32;
(*_13) = -4_isize;
(*_27) = 3846072712_u32 | 44937330_u32;
_21 = (*_27) as f32;
_31 = _25;
(*_27) = 2588217060_u32 >> (*_13);
_16.0 = core::ptr::addr_of!(_11);
(*_13) = (-9223372036854775808_isize) & (-19_isize);
_28 = 1138044501_u32 & 3016099875_u32;
(*_27) = 3002539448_u32;
(*_13) = 9223372036854775807_isize;
(*_13) = -(-9223372036854775808_isize);
match (*_27) {
0 => bb8,
1 => bb2,
2 => bb11,
3 => bb10,
3002539448 => bb17,
_ => bb5
}
}
bb17 = {
_25.0 = _31.0;
(*_27) = (-7225142735100818805_i64) as u32;
_34 = 229_u8 >> (*_27);
_3 = [3_usize,2_usize,3344409842970906910_usize,8876470791335457874_usize];
_27 = core::ptr::addr_of!((*_27));
_2 = _12 & _12;
(*_27) = 1709061369_u32 & 558777319_u32;
_13 = core::ptr::addr_of!((*_13));
(*_13) = '\u{155a7}' as isize;
_5.2 = &_26;
_9 = [_26,_26,_26,_26,_26,_26];
_26 = !false;
_23 = 293622008564078733_i64 as u64;
_29 = _3;
Goto(bb18)
}
bb18 = {
(*_13) = (-79_isize);
_3 = _1;
(*_27) = 27426_u16 as u32;
_25 = _31;
_33 = -_14;
(*_13) = (-9223372036854775808_isize) + 19_isize;
_22 = !(-142146699268862547875497205577365189611_i128);
_30 = _25.0;
_26 = _25.0 <= _15.0;
_14 = _22 as f64;
(*_27) = 2829382860_u32 >> (*_13);
_7 = _5.0 - _17;
(*_13) = 67_isize;
Goto(bb19)
}
bb19 = {
(*_13) = 9223372036854775807_isize;
_15.2 = &_26;
_20 = [_6,_6,_6,_6,_6,_6,_6,_6];
_31 = _25;
_39.fld0.fld0 = 5_usize + 5243763874475135698_usize;
(*_13) = 67_isize;
(*_13) = (-9223372036854775808_isize);
_5.0 = -Field::<f64>(Variant(_10, 2), 0);
_17 = _2 as f64;
(*_27) = 2446950704_u32 & 3055393468_u32;
_7 = _5.0 + _25.0;
_15.2 = Move(_5.2);
_37 = !_26;
(*_27) = _2 as u32;
_7 = _23 as f64;
(*_27) = 2943195485_u32 >> (*_13);
Goto(bb20)
}
bb20 = {
(*_13) = (-9223372036854775808_isize);
_15.3 = &_39.fld0.fld0;
(*_13) = (-107_isize) - (-9223372036854775808_isize);
_5.2 = &_37;
(*_13) = _26 as isize;
_27 = core::ptr::addr_of!((*_27));
_29 = [_39.fld0.fld0,_39.fld0.fld0,_39.fld0.fld0,_39.fld0.fld0];
_25 = (_5.0,);
_3 = _1;
_5.0 = Field::<f64>(Variant(_10, 2), 0);
Goto(bb21)
}
bb21 = {
Call(_50 = dump_var(7_usize, 20_usize, Move(_20), 26_usize, Move(_26), 24_usize, Move(_24), 6_usize, Move(_6)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_50 = dump_var(7_usize, 1_usize, Move(_1), 37_usize, Move(_37), 12_usize, Move(_12), 22_usize, Move(_22)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: f64,mut _2: f64) -> f64 {
mir! {
type RET = f64;
let _3: *const *const (&'static isize, i8);
let _4: f64;
let _5: u16;
let _6: char;
let _7: [u32; 3];
let _8: i8;
let _9: &'static mut (*mut i64,);
let _10: i64;
let _11: (usize, i32);
let _12: isize;
let _13: f32;
let _14: Adt26;
let _15: *mut Adt25;
let _16: &'static isize;
let _17: isize;
let _18: [usize; 4];
let _19: u128;
let _20: i8;
let _21: usize;
let _22: *mut [u128; 2];
let _23: &'static f64;
let _24: [usize; 1];
let _25: bool;
let _26: u128;
let _27: u64;
let _28: f32;
let _29: &'static usize;
let _30: &'static mut &'static f64;
let _31: f32;
let _32: [u32; 3];
let _33: [u64; 7];
let _34: &'static usize;
let _35: Adt73;
let _36: f32;
let _37: i64;
let _38: f64;
let _39: *mut Adt25;
let _40: u8;
let _41: usize;
let _42: Adt31;
let _43: f64;
let _44: &'static usize;
let _45: &'static f64;
let _46: *const isize;
let _47: &'static mut &'static bool;
let _48: &'static *const (&'static isize, i8);
let _49: &'static *const i8;
let _50: u8;
let _51: &'static usize;
let _52: *mut (usize, i32);
let _53: [i32; 8];
let _54: ([i128; 2], Adt26, *mut (Adt26, i16, char, Adt31), *const i64);
let _55: i128;
let _56: ();
let _57: ();
{
_2 = 17611178152357321120_usize as f64;
_5 = 27396_u16;
Goto(bb1)
}
bb1 = {
_6 = '\u{c3d2d}';
_5 = !14635_u16;
Call(_5 = fn9(_6, _2, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_5 = 64030_u16 + 11048_u16;
Goto(bb3)
}
bb3 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb4 = {
_6 = '\u{206ec}';
_6 = '\u{90fd5}';
_2 = 113_u8 as f64;
_12 = 74_isize * (-9223372036854775808_isize);
_4 = RET;
_11.1 = (-1083787883_i32) & 917271985_i32;
_7 = [67311143_u32,1827827616_u32,205003399_u32];
_4 = _1 - _1;
_13 = _5 as f32;
_11.1 = _13 as i32;
_5 = !10126_u16;
_5 = 6949_u16 << _12;
_14.fld3 = core::ptr::addr_of!(_10);
_13 = 795558831_u32 as f32;
_11.0 = 4_usize;
_13 = 20130508_u32 as f32;
_8 = (-94_i8) - (-109_i8);
_7 = [2767593084_u32,176079443_u32,171216930_u32];
_11 = (6019532734900453645_usize, (-873207705_i32));
_5 = _10 as u16;
_17 = _12 | _12;
_14.fld4 = _10 as i16;
_8 = (-65_i8) | 7_i8;
_1 = _4 + _4;
match _11.0 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
6019532734900453645 => bb10,
_ => bb9
}
}
bb5 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb6 = {
_5 = 64030_u16 + 11048_u16;
Goto(bb3)
}
bb7 = {
_6 = '\u{c3d2d}';
_5 = !14635_u16;
Call(_5 = fn9(_6, _2, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_10 = (-886186420202454091_i64);
_10 = -2721415939371914185_i64;
_14.fld0 = _11.0;
_14.fld4 = 3642_i16 >> _5;
_7 = [3867307450_u32,419468802_u32,1320157130_u32];
_17 = -_12;
_11.1 = (-1941005066_i32) - 1258163532_i32;
_6 = '\u{c1e5e}';
_1 = RET;
_14.fld1 = 8553731901939639038_u64;
_10 = (-2030066091300046001_i64) << _8;
_1 = RET;
_5 = (-46809790366797479748229434712376058698_i128) as u16;
_19 = 169621848715911022580433604846487351229_u128;
_17 = 3327047257_u32 as isize;
_18 = [_14.fld0,_14.fld0,_14.fld0,_14.fld0];
_11 = (_14.fld0, (-304198006_i32));
_7 = [3856654634_u32,1729468781_u32,2371332979_u32];
_17 = _8 as isize;
_14.fld2 = -_2;
_2 = _1;
_4 = RET + _2;
RET = -_1;
_10 = _11.1 as i64;
_10 = 1770981447359457142_i64;
Call(_14.fld2 = core::intrinsics::transmute(_11.0), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_20 = false as i8;
_4 = -_1;
_10 = 3294865592496074621_i64 & 1653329058661167253_i64;
_23 = &_2;
_6 = '\u{9f5d}';
_2 = RET;
_12 = _17;
_19 = (-152704631518056074448851606380601164188_i128) as u128;
_20 = _8 + _8;
_19 = 297823940476962902074266898796877237409_u128 << _20;
_14.fld4 = (-1833_i16) << _19;
_11.1 = (-28196120_i32) ^ 1754105904_i32;
_14.fld3 = core::ptr::addr_of!(_10);
match _11.0 {
0 => bb6,
1 => bb12,
2 => bb13,
3 => bb14,
6019532734900453645 => bb16,
_ => bb15
}
}
bb12 = {
_5 = 64030_u16 + 11048_u16;
Goto(bb3)
}
bb13 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb14 = {
Return()
}
bb15 = {
_6 = '\u{c3d2d}';
_5 = !14635_u16;
Call(_5 = fn9(_6, _2, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_6 = '\u{87b12}';
_4 = _14.fld2 * _14.fld2;
_14.fld4 = _10 as i16;
_14.fld3 = core::ptr::addr_of!(_10);
RET = _4;
_14.fld4 = !(-26461_i16);
_7 = [2088169497_u32,1528524061_u32,1429455614_u32];
_13 = 28873797125929290616727025195198747943_i128 as f32;
_18 = [_11.0,_14.fld0,_11.0,_14.fld0];
_11 = (_14.fld0, 1945697841_i32);
_26 = _19;
_24 = [_11.0];
_29 = &_11.0;
_21 = (*_29);
_14.fld4 = -(-4454_i16);
_14.fld2 = RET - _4;
_14.fld1 = _8 as u64;
_14.fld0 = _19 as usize;
_21 = (*_29);
_2 = RET;
_5 = _14.fld4 as u16;
_17 = -_12;
_31 = _13 + _13;
Goto(bb17)
}
bb17 = {
_16 = &_12;
_11.0 = _14.fld0;
_27 = _14.fld1 - _14.fld1;
_17 = (*_16) >> _12;
_20 = _8;
_33 = [_27,_27,_27,_27,_27,_14.fld1,_27];
_28 = _13 + _31;
_30 = &mut _23;
(*_30) = &_14.fld2;
(*_30) = &RET;
(*_30) = &_2;
(*_30) = &RET;
_29 = &_14.fld0;
Call(_8 = core::intrinsics::bswap(_20), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
RET = _2 * _2;
(*_30) = &_4;
_29 = &_11.0;
match _11.1 {
0 => bb10,
1 => bb14,
2 => bb19,
3 => bb20,
4 => bb21,
1945697841 => bb23,
_ => bb22
}
}
bb19 = {
_16 = &_12;
_11.0 = _14.fld0;
_27 = _14.fld1 - _14.fld1;
_17 = (*_16) >> _12;
_20 = _8;
_33 = [_27,_27,_27,_27,_27,_14.fld1,_27];
_28 = _13 + _31;
_30 = &mut _23;
(*_30) = &_14.fld2;
(*_30) = &RET;
(*_30) = &_2;
(*_30) = &RET;
_29 = &_14.fld0;
Call(_8 = core::intrinsics::bswap(_20), ReturnTo(bb18), UnwindUnreachable())
}
bb20 = {
_6 = '\u{c3d2d}';
_5 = !14635_u16;
Call(_5 = fn9(_6, _2, _2, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb21 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb22 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb23 = {
(*_30) = &_1;
_2 = _1;
_31 = _28;
(*_30) = &_14.fld2;
(*_30) = &_4;
(*_30) = &_2;
_11.1 = 1334482817_i32 & (-1516851428_i32);
_18 = [(*_29),(*_29),(*_29),(*_29)];
_26 = !_19;
_11 = (_21, 2055670901_i32);
_5 = 60564_u16 | 46730_u16;
_13 = -_28;
_38 = _4 - _14.fld2;
(*_30) = &_1;
_2 = _38;
_5 = 54546_u16 ^ 34851_u16;
_6 = '\u{569aa}';
_8 = _20 & _20;
(*_30) = &_14.fld2;
match _11.1 {
2055670901 => bb24,
_ => bb15
}
}
bb24 = {
(*_30) = &_1;
(*_30) = &RET;
_14.fld3 = core::ptr::addr_of!(_37);
(*_30) = &_1;
_11.0 = _14.fld0 + _14.fld0;
(*_30) = &_2;
_29 = &_21;
_43 = -_38;
_42.fld0.fld3 = core::ptr::addr_of!(_10);
(*_30) = &RET;
_11.0 = (*_29);
_5 = !64887_u16;
(*_30) = &_43;
(*_30) = &_14.fld2;
_31 = _13;
_25 = (*_16) >= (*_16);
_42.fld0.fld0 = (*_29) % (*_29);
_43 = _2 * RET;
(*_30) = &_43;
_32 = _7;
Call(_12 = core::intrinsics::bswap(_17), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_7 = _32;
_36 = _31 + _31;
_1 = _2 - _4;
(*_30) = &RET;
_26 = !_19;
_42.fld0.fld1 = 708705055_u32 as u64;
(*_30) = &_2;
match (*_29) {
0 => bb20,
6019532734900453645 => bb27,
_ => bb26
}
}
bb26 = {
_10 = -8659095742855587975_i64;
_4 = _1;
_8 = 107_i8;
_1 = _4;
_8 = 1_usize as i8;
_11.1 = (-1741606654_i32) << _5;
_7 = [2769231656_u32,4035728367_u32,841594819_u32];
_11.0 = 4242003734400742320_usize;
_5 = (-9223372036854775808_isize) as u16;
_11.0 = _11.1 as usize;
RET = _1 + _2;
_11.1 = (-376451713_i32) ^ (-2079137056_i32);
_5 = 13509_u16 * 3352_u16;
_2 = _10 as f64;
_11.0 = 10415569661594838553_usize;
Goto(bb4)
}
bb27 = {
(*_30) = &_4;
_1 = RET;
_20 = _8 + _8;
(*_30) = &RET;
_14.fld3 = core::ptr::addr_of!(_37);
_42 = Adt31 { fld0: Move(_14) };
_16 = &_17;
(*_30) = &_43;
_14.fld0 = !(*_29);
match (*_29) {
0 => bb20,
1 => bb10,
2 => bb16,
3 => bb22,
6019532734900453645 => bb28,
_ => bb5
}
}
bb28 = {
_42.fld0.fld2 = _2 + _38;
_14.fld4 = _42.fld0.fld4;
_40 = 40_u8 >> (*_16);
_14.fld2 = RET * _2;
_27 = _42.fld0.fld1 ^ _42.fld0.fld1;
_46 = core::ptr::addr_of!((*_16));
_40 = 1919640535_u32 as u8;
_24 = [(*_29)];
(*_30) = &_38;
(*_30) = &_43;
_10 = 8402159461081296641_i64;
_29 = &_42.fld0.fld0;
_17 = _12;
(*_30) = &_14.fld2;
(*_30) = &_4;
_25 = !true;
_14.fld1 = (*_29) as u64;
_8 = _26 as i8;
_14.fld1 = _27 >> (*_29);
(*_30) = &_38;
_32 = _7;
_8 = _20 | _20;
_41 = (*_29);
(*_30) = &_14.fld2;
_20 = _8 + _8;
Goto(bb29)
}
bb29 = {
_8 = _20 >> (*_29);
_20 = 2279854515_u32 as i8;
_42.fld0.fld1 = _27;
_36 = _28;
_42.fld0.fld1 = !_27;
(*_30) = &_38;
RET = _42.fld0.fld2 - _14.fld2;
_21 = (*_29) << (*_29);
_37 = _26 as i64;
_14.fld4 = _42.fld0.fld4 ^ _42.fld0.fld4;
(*_30) = &_42.fld0.fld2;
_6 = '\u{3060d}';
_52 = core::ptr::addr_of_mut!(_11);
(*_52).0 = (*_29) >> (*_52).1;
(*_52) = ((*_29), (-520920036_i32));
_34 = &(*_52).0;
(*_52).0 = (*_29) << _19;
(*_52).1 = _14.fld1 as i32;
_27 = _14.fld1 | _14.fld1;
(*_52).1 = 30770889_i32 + 785952164_i32;
Goto(bb30)
}
bb30 = {
Call(_56 = dump_var(8_usize, 26_usize, Move(_26), 32_usize, Move(_32), 19_usize, Move(_19), 10_usize, Move(_10)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_56 = dump_var(8_usize, 25_usize, Move(_25), 24_usize, Move(_24), 18_usize, Move(_18), 12_usize, Move(_12)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_56 = dump_var(8_usize, 20_usize, Move(_20), 37_usize, Move(_37), 57_usize, _57, 57_usize, _57), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: char,mut _2: f64,mut _3: f64,mut _4: f64) -> u16 {
mir! {
type RET = u16;
let _5: &'static isize;
let _6: f64;
let _7: *const u32;
let _8: Adt25;
let _9: &'static f64;
let _10: *const i64;
let _11: char;
let _12: *const i64;
let _13: isize;
let _14: &'static mut [u16; 1];
let _15: u128;
let _16: &'static mut (usize, i32);
let _17: &'static mut (Adt26, i16, char, Adt31);
let _18: isize;
let _19: *const (i32, i8, &'static mut i64, &'static bool);
let _20: bool;
let _21: f64;
let _22: (isize,);
let _23: ();
let _24: ();
{
_2 = _4 + _4;
RET = 626_u16;
_1 = '\u{6527}';
RET = 47050_u16;
_4 = -_2;
_4 = _2 + _2;
RET = _1 as u16;
_4 = _2 - _2;
RET = 12258_u16;
RET = 33327_u16;
_3 = _4 * _4;
_1 = '\u{fecea}';
_3 = _4 + _4;
_1 = '\u{be78a}';
_6 = _3;
_3 = _4 + _2;
_6 = (-558637067_i32) as f64;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
33327 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_4 = _3;
_6 = 8045_i16 as f64;
_1 = '\u{1089da}';
_1 = '\u{f5ee1}';
RET = 25752_u16;
RET = 34359_u16 >> 2414627800050785856_u64;
_3 = 82_u8 as f64;
_3 = _4;
_2 = _3 + _3;
_3 = _4 * _6;
RET = 30857_u16;
_4 = _2;
_9 = &_4;
_1 = '\u{9748e}';
_3 = (*_9) + (*_9);
_9 = &_2;
_2 = _3;
_4 = _2 * _3;
Goto(bb8)
}
bb8 = {
_6 = 32_i8 as f64;
_4 = _3 - _2;
_4 = _3 - _2;
_1 = '\u{20a07}';
_6 = 18130714421925647676_u64 as f64;
_9 = &_4;
_2 = (*_9);
_1 = '\u{aae43}';
_6 = (-27953_i16) as f64;
_6 = -(*_9);
_11 = _1;
_4 = _3 - _6;
_11 = _1;
_3 = -_2;
_2 = 3549728674590173352_usize as f64;
RET = 23778_u16 - 4768_u16;
_11 = _1;
RET = 21945_u16;
RET = 39173_u16 - 56705_u16;
_4 = -_6;
_11 = _1;
Goto(bb9)
}
bb9 = {
_3 = _6 * _4;
_13 = 9223372036854775807_isize;
RET = 53223_u16 * 63818_u16;
RET = 64253_u16;
_2 = -_6;
RET = !2374_u16;
_6 = _4;
_11 = _1;
_3 = _4 * _4;
RET = 36531_u16 & 6819_u16;
_6 = -_3;
_5 = &_13;
_1 = _11;
_9 = &_2;
_9 = &_3;
match (*_5) {
0 => bb5,
1 => bb10,
2 => bb11,
3 => bb12,
4 => bb13,
5 => bb14,
9223372036854775807 => bb16,
_ => bb15
}
}
bb10 = {
_6 = 32_i8 as f64;
_4 = _3 - _2;
_4 = _3 - _2;
_1 = '\u{20a07}';
_6 = 18130714421925647676_u64 as f64;
_9 = &_4;
_2 = (*_9);
_1 = '\u{aae43}';
_6 = (-27953_i16) as f64;
_6 = -(*_9);
_11 = _1;
_4 = _3 - _6;
_11 = _1;
_3 = -_2;
_2 = 3549728674590173352_usize as f64;
RET = 23778_u16 - 4768_u16;
_11 = _1;
RET = 21945_u16;
RET = 39173_u16 - 56705_u16;
_4 = -_6;
_11 = _1;
Goto(bb9)
}
bb11 = {
_4 = _3;
_6 = 8045_i16 as f64;
_1 = '\u{1089da}';
_1 = '\u{f5ee1}';
RET = 25752_u16;
RET = 34359_u16 >> 2414627800050785856_u64;
_3 = 82_u8 as f64;
_3 = _4;
_2 = _3 + _3;
_3 = _4 * _6;
RET = 30857_u16;
_4 = _2;
_9 = &_4;
_1 = '\u{9748e}';
_3 = (*_9) + (*_9);
_9 = &_2;
_2 = _3;
_4 = _2 * _3;
Goto(bb8)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_15 = 147366444869504656967222307345630082428_u128;
_3 = _4 - _6;
_2 = _3;
_6 = _3 + _3;
Goto(bb17)
}
bb17 = {
RET = !34342_u16;
Goto(bb18)
}
bb18 = {
RET = 18678_u16 & 13595_u16;
_1 = _11;
match (*_5) {
9223372036854775807 => bb20,
_ => bb19
}
}
bb19 = {
Return()
}
bb20 = {
_1 = _11;
_6 = _2 - _3;
_4 = _2 - _2;
Call(RET = fn10(Move(_5), (*_5), (*_5), (*_5), (*_5), (*_5), (*_5), (*_5), Move(_9), (*_5)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_4 = _2 + _3;
_2 = _6 - _6;
_13 = (-9223372036854775808_isize);
_18 = _13 ^ _13;
_9 = &_3;
_9 = &_4;
_20 = !true;
_2 = (*_9);
_18 = !_13;
_13 = _18;
_1 = _11;
_9 = &_3;
_18 = _13 - _13;
_13 = 6407186714666668106_u64 as isize;
_21 = (*_9) * (*_9);
_13 = _18 ^ _18;
Goto(bb22)
}
bb22 = {
Call(_23 = dump_var(9_usize, 11_usize, Move(_11), 1_usize, Move(_1), 13_usize, Move(_13), 24_usize, _24), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: &'static isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize,mut _8: isize,mut _9: &'static f64,mut _10: isize) -> u16 {
mir! {
type RET = u16;
let _11: [u16; 3];
let _12: bool;
let _13: (&'static isize, i8);
let _14: char;
let _15: Adt43;
let _16: *mut Adt25;
let _17: (&'static isize, i8);
let _18: (*mut i64,);
let _19: Adt25;
let _20: char;
let _21: ();
let _22: ();
{
_10 = -_7;
RET = 13688_u16;
_11 = [RET,RET,RET];
_10 = _2;
_5 = _4 | _4;
_12 = _2 == _4;
_7 = _5 ^ _8;
RET = 7198_u16;
_1 = &_8;
_11 = [RET,RET,RET];
_10 = -(*_1);
RET = 37715_u16;
_8 = (-1404915217_i32) as isize;
_11 = [RET,RET,RET];
_12 = !true;
_3 = _5 + _5;
_13.1 = 55494438060223340454456736259050538150_u128 as i8;
_13.1 = (-41_i8) + 1_i8;
_4 = _5 >> _6;
_14 = '\u{8f01e}';
_4 = !_6;
_4 = !_3;
_13 = (Move(_1), (-31_i8));
RET = 59290_u16 >> _3;
_14 = '\u{cebf6}';
_11 = [RET,RET,RET];
_5 = _2 >> RET;
_5 = !_4;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
9223372036854775807 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12 = false;
_4 = RET as isize;
_13.0 = &_8;
Call(_13.1 = core::intrinsics::bswap(17_i8), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_1 = &_5;
_5 = 953388054_i32 as isize;
_3 = !_2;
_7 = _2;
_11 = [RET,RET,RET];
_14 = '\u{39ad9}';
_12 = false;
_3 = _4 - _5;
_13.0 = &_4;
_5 = _13.1 as isize;
_7 = _4 * _8;
Goto(bb8)
}
bb8 = {
_10 = _4 - _4;
_1 = &_2;
Call(_7 = fn11(_8, Move(_13.0), Move(_1), (*_1), (*_1), (*_1), _14, (*_1), (*_1)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_11 = [RET,RET,RET];
_13.1 = 10301198550034640595_usize as i8;
_13.1 = (-109_i8) | 115_i8;
_11 = [RET,RET,RET];
_5 = _10 - _10;
_4 = _3;
_11 = [RET,RET,RET];
_14 = '\u{4728a}';
_12 = !false;
_1 = &_5;
_6 = 188_u8 as isize;
_3 = (*_1) + _2;
_5 = _3 & _10;
_13.0 = Move(_1);
_8 = _4 | _6;
_10 = _14 as isize;
_12 = false;
_2 = _3;
_3 = 10914793025072544948_u64 as isize;
_1 = &_2;
_10 = (*_1) - (*_1);
_12 = (*_1) >= (*_1);
_13.1 = 15_i8;
_17.0 = &_2;
match _13.1 {
0 => bb7,
1 => bb2,
15 => bb10,
_ => bb4
}
}
bb10 = {
_17.1 = _13.1 - _13.1;
_1 = Move(_17.0);
_7 = _5 | _10;
_1 = &_6;
_4 = -_7;
_5 = _17.1 as isize;
_16 = core::ptr::addr_of_mut!(_19);
_17 = (Move(_1), _13.1);
RET = 13123_u16 >> _7;
_8 = _10 * _7;
_1 = &_10;
_2 = (*_1) ^ (*_1);
_13.1 = !_17.1;
_14 = '\u{d2d4c}';
_17.0 = &(*_1);
_14 = '\u{c1f92}';
_5 = (*_1);
_2 = 13237347437846164572484603310165071935_i128 as isize;
_4 = (*_1) - _8;
_17 = (Move(_1), _13.1);
_13.0 = &_7;
_8 = _4;
_7 = _4 ^ _4;
_17.0 = &_7;
Goto(bb11)
}
bb11 = {
Call(_21 = dump_var(10_usize, 6_usize, Move(_6), 2_usize, Move(_2), 5_usize, Move(_5), 8_usize, Move(_8)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_21 = dump_var(10_usize, 7_usize, Move(_7), 22_usize, _22, 22_usize, _22, 22_usize, _22), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: isize,mut _2: &'static isize,mut _3: &'static isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: char,mut _8: isize,mut _9: isize) -> isize {
mir! {
type RET = isize;
let _10: (&'static isize, i8);
let _11: u128;
let _12: f32;
let _13: f64;
let _14: &'static mut &'static bool;
let _15: f64;
let _16: &'static mut (usize, i32);
let _17: u32;
let _18: *const i64;
let _19: u64;
let _20: bool;
let _21: isize;
let _22: &'static bool;
let _23: u32;
let _24: i128;
let _25: usize;
let _26: bool;
let _27: &'static [u128; 2];
let _28: &'static mut i64;
let _29: i64;
let _30: bool;
let _31: i16;
let _32: char;
let _33: &'static &'static bool;
let _34: *mut *mut (usize, i32);
let _35: [usize; 1];
let _36: u64;
let _37: &'static mut &'static f64;
let _38: f32;
let _39: *mut [u128; 2];
let _40: *const *const (&'static isize, i8);
let _41: i8;
let _42: u32;
let _43: (f64,);
let _44: &'static f64;
let _45: Adt26;
let _46: f64;
let _47: char;
let _48: *mut i64;
let _49: ();
let _50: ();
{
_2 = &_4;
_2 = &_1;
match _6 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
9223372036854775807 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_5 = (-1052917561_i32) as isize;
_7 = '\u{daaa4}';
_10 = (Move(_2), (-21_i8));
_11 = 96836495340934191496920893839196135030_u128 * 59659959124774157892516115036929865989_u128;
_2 = &_4;
RET = (*_2);
_5 = (*_2) * (*_2);
_7 = '\u{556c7}';
_10.0 = &(*_2);
_9 = (*_2) & (*_2);
_11 = true as u128;
_12 = 44404_u16 as f32;
_13 = (-2440337709062185655_i64) as f64;
_1 = (*_2) & (*_2);
_9 = (-3933_i16) as isize;
_3 = &_8;
_3 = &_5;
_8 = (*_3) + (*_2);
_10.1 = (-17_i8);
_3 = &(*_2);
_11 = 280768465392000667714751864331748764877_u128 + 59348138694181118874117371727217200113_u128;
_7 = '\u{e199c}';
_9 = (*_3) & (*_3);
_7 = '\u{7712b}';
match (*_2) {
9223372036854775807 => bb9,
_ => bb8
}
}
bb8 = {
Return()
}
bb9 = {
_3 = &_9;
_7 = '\u{34803}';
_10.0 = &_1;
_1 = !_4;
_2 = &(*_3);
_10.0 = &(*_3);
_6 = (*_2);
_10.1 = (-119_i8);
_5 = (*_3) >> (*_2);
_2 = &_4;
_9 = RET << (*_2);
_2 = &RET;
_12 = 1958803748_u32 as f32;
_6 = -(*_2);
_9 = (*_2) * (*_2);
match (*_2) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_1 = -(*_2);
_10.1 = 56_i8;
_2 = &_1;
_9 = (*_2) * _8;
_11 = 287294175426319551611835604018610219522_u128 + 88961950245880956531749409151292469114_u128;
_7 = '\u{8a908}';
_5 = 56497_u16 as isize;
_10 = (Move(_2), (-20_i8));
_8 = _9;
_10 = (Move(_3), (-66_i8));
_3 = &_6;
_12 = 165765783982124038327616655395992235268_i128 as f32;
_2 = &(*_3);
_2 = &_8;
_10 = (Move(_3), (-59_i8));
_13 = (*_2) as f64;
_15 = _10.1 as f64;
_2 = &RET;
_1 = _8;
Goto(bb13)
}
bb13 = {
_1 = !(*_2);
_1 = _7 as isize;
_4 = (*_2) << (*_2);
_4 = _9;
RET = _1;
_11 = 213595084648172943079969580274000789340_u128 + 271256817950597476552677129263891545742_u128;
_4 = _9;
_17 = 3171305931_u32 & 2209439656_u32;
_12 = _10.1 as f32;
_1 = -_4;
_10.0 = &RET;
_10.1 = -39_i8;
_20 = _17 > _17;
_10.0 = &_4;
_7 = '\u{21848}';
_15 = _13;
_10.1 = (-69_i8) & (-126_i8);
_6 = _8;
_10 = (Move(_2), (-80_i8));
_10.1 = 9_i8 | (-19_i8);
_13 = _15 + _15;
_21 = 6415285299667154886_usize as isize;
_1 = _8;
Goto(bb14)
}
bb14 = {
_3 = &_21;
_9 = _4;
Call(_23 = core::intrinsics::transmute(_7), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_19 = 9942882337463495993_u64 * 16095366503721579150_u64;
_13 = 128_u8 as f64;
_17 = _23;
_25 = 3646543717323887266_usize - 6_usize;
RET = (*_3) ^ (*_3);
_2 = &_8;
_10 = (Move(_2), 82_i8);
_11 = _17 as u128;
_23 = _17 - _17;
match _10.1 {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
4 => bb20,
5 => bb21,
82 => bb23,
_ => bb22
}
}
bb16 = {
Return()
}
bb17 = {
_1 = !(*_2);
_1 = _7 as isize;
_4 = (*_2) << (*_2);
_4 = _9;
RET = _1;
_11 = 213595084648172943079969580274000789340_u128 + 271256817950597476552677129263891545742_u128;
_4 = _9;
_17 = 3171305931_u32 & 2209439656_u32;
_12 = _10.1 as f32;
_1 = -_4;
_10.0 = &RET;
_10.1 = -39_i8;
_20 = _17 > _17;
_10.0 = &_4;
_7 = '\u{21848}';
_15 = _13;
_10.1 = (-69_i8) & (-126_i8);
_6 = _8;
_10 = (Move(_2), (-80_i8));
_10.1 = 9_i8 | (-19_i8);
_13 = _15 + _15;
_21 = 6415285299667154886_usize as isize;
_1 = _8;
Goto(bb14)
}
bb18 = {
_1 = -(*_2);
_10.1 = 56_i8;
_2 = &_1;
_9 = (*_2) * _8;
_11 = 287294175426319551611835604018610219522_u128 + 88961950245880956531749409151292469114_u128;
_7 = '\u{8a908}';
_5 = 56497_u16 as isize;
_10 = (Move(_2), (-20_i8));
_8 = _9;
_10 = (Move(_3), (-66_i8));
_3 = &_6;
_12 = 165765783982124038327616655395992235268_i128 as f32;
_2 = &(*_3);
_2 = &_8;
_10 = (Move(_3), (-59_i8));
_13 = (*_2) as f64;
_15 = _10.1 as f64;
_2 = &RET;
_1 = _8;
Goto(bb13)
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
Return()
}
bb22 = {
Return()
}
bb23 = {
_1 = _5 | _9;
RET = (*_3);
_3 = &_8;
_22 = &_20;
_10.1 = 115_i8 * 124_i8;
_24 = (-56766121127692029981975483532141391582_i128);
_7 = '\u{543ce}';
_3 = &RET;
_14 = &mut _22;
_10.1 = (-97_i8) & (-53_i8);
_7 = '\u{445f5}';
_10.0 = &(*_3);
_10 = (Move(_3), (-90_i8));
_25 = 17205128382648487404_usize * 3073809376855785579_usize;
_12 = _25 as f32;
_5 = _1 + _6;
_8 = -_1;
_1 = RET * _9;
_4 = _11 as isize;
_24 = -(-58593367738118562414395067353992442427_i128);
Call(_15 = fn12(Move((*_14)), _4, _20), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_2 = &_21;
_19 = _12 as u64;
_1 = (*_2);
_2 = &_1;
_10.1 = 37_i8 >> _6;
_25 = 0_usize;
_23 = _17;
_10 = (Move(_2), 38_i8);
_5 = _21 << _8;
_2 = &_21;
_30 = _20;
_20 = _8 < _8;
_10.0 = &_5;
_5 = _9 ^ _4;
_19 = 15742345144956539615_u64 & 2370478541637991208_u64;
_31 = -5285_i16;
_23 = _25 as u32;
_6 = _8 & _5;
_32 = _7;
_6 = _8 & (*_2);
_10.0 = &(*_2);
_24 = 127827877946089250604508188199559075337_i128 * (-50706896160557978489553463922170151132_i128);
_29 = (-7908772507640414694_i64);
match _29 {
0 => bb25,
1 => bb26,
2 => bb27,
3 => bb28,
340282366920938463455465834924127796762 => bb30,
_ => bb29
}
}
bb25 = {
_3 = &_9;
_7 = '\u{34803}';
_10.0 = &_1;
_1 = !_4;
_2 = &(*_3);
_10.0 = &(*_3);
_6 = (*_2);
_10.1 = (-119_i8);
_5 = (*_3) >> (*_2);
_2 = &_4;
_9 = RET << (*_2);
_2 = &RET;
_12 = 1958803748_u32 as f32;
_6 = -(*_2);
_9 = (*_2) * (*_2);
match (*_2) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb26 = {
Return()
}
bb27 = {
_5 = (-1052917561_i32) as isize;
_7 = '\u{daaa4}';
_10 = (Move(_2), (-21_i8));
_11 = 96836495340934191496920893839196135030_u128 * 59659959124774157892516115036929865989_u128;
_2 = &_4;
RET = (*_2);
_5 = (*_2) * (*_2);
_7 = '\u{556c7}';
_10.0 = &(*_2);
_9 = (*_2) & (*_2);
_11 = true as u128;
_12 = 44404_u16 as f32;
_13 = (-2440337709062185655_i64) as f64;
_1 = (*_2) & (*_2);
_9 = (-3933_i16) as isize;
_3 = &_8;
_3 = &_5;
_8 = (*_3) + (*_2);
_10.1 = (-17_i8);
_3 = &(*_2);
_11 = 280768465392000667714751864331748764877_u128 + 59348138694181118874117371727217200113_u128;
_7 = '\u{e199c}';
_9 = (*_3) & (*_3);
_7 = '\u{7712b}';
match (*_2) {
9223372036854775807 => bb9,
_ => bb8
}
}
bb28 = {
Return()
}
bb29 = {
Return()
}
bb30 = {
_20 = _30;
_6 = 50465_u16 as isize;
_22 = &_30;
_4 = (-1304815758_i32) as isize;
_2 = &_4;
_10.1 = !51_i8;
_30 = !_20;
_25 = 16552206630155376243_usize;
_15 = -_13;
_33 = &_22;
_23 = 38_u8 as u32;
_8 = (*_2) << (*_2);
_28 = &mut _29;
_32 = _7;
_31 = 11926_i16;
(*_28) = -5459705749838895292_i64;
_6 = _9;
_19 = _6 as u64;
_15 = _13 * _13;
_21 = _23 as isize;
_18 = core::ptr::addr_of!((*_28));
match _25 {
0 => bb23,
1 => bb14,
2 => bb27,
3 => bb31,
4 => bb32,
5 => bb33,
16552206630155376243 => bb35,
_ => bb34
}
}
bb31 = {
Return()
}
bb32 = {
_3 = &_9;
_7 = '\u{34803}';
_10.0 = &_1;
_1 = !_4;
_2 = &(*_3);
_10.0 = &(*_3);
_6 = (*_2);
_10.1 = (-119_i8);
_5 = (*_3) >> (*_2);
_2 = &_4;
_9 = RET << (*_2);
_2 = &RET;
_12 = 1958803748_u32 as f32;
_6 = -(*_2);
_9 = (*_2) * (*_2);
match (*_2) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb33 = {
Return()
}
bb34 = {
_2 = &_21;
_19 = _12 as u64;
_1 = (*_2);
_2 = &_1;
_10.1 = 37_i8 >> _6;
_25 = 0_usize;
_23 = _17;
_10 = (Move(_2), 38_i8);
_5 = _21 << _8;
_2 = &_21;
_30 = _20;
_20 = _8 < _8;
_10.0 = &_5;
_5 = _9 ^ _4;
_19 = 15742345144956539615_u64 & 2370478541637991208_u64;
_31 = -5285_i16;
_23 = _25 as u32;
_6 = _8 & _5;
_32 = _7;
_6 = _8 & (*_2);
_10.0 = &(*_2);
_24 = 127827877946089250604508188199559075337_i128 * (-50706896160557978489553463922170151132_i128);
_29 = (-7908772507640414694_i64);
match _29 {
0 => bb25,
1 => bb26,
2 => bb27,
3 => bb28,
340282366920938463455465834924127796762 => bb30,
_ => bb29
}
}
bb35 = {
_12 = _17 as f32;
(*_28) = -8956029526222592112_i64;
(*_28) = (-4830227199664104203_i64) >> _24;
(*_28) = _32 as i64;
_4 = _6 | _1;
_8 = _5 ^ _21;
_12 = (-1852882925_i32) as f32;
RET = _6 << _9;
(*_28) = !226548563137772026_i64;
match _31 {
0 => bb36,
11926 => bb38,
_ => bb37
}
}
bb36 = {
_20 = _30;
_6 = 50465_u16 as isize;
_22 = &_30;
_4 = (-1304815758_i32) as isize;
_2 = &_4;
_10.1 = !51_i8;
_30 = !_20;
_25 = 16552206630155376243_usize;
_15 = -_13;
_33 = &_22;
_23 = 38_u8 as u32;
_8 = (*_2) << (*_2);
_28 = &mut _29;
_32 = _7;
_31 = 11926_i16;
(*_28) = -5459705749838895292_i64;
_6 = _9;
_19 = _6 as u64;
_15 = _13 * _13;
_21 = _23 as isize;
_18 = core::ptr::addr_of!((*_28));
match _25 {
0 => bb23,
1 => bb14,
2 => bb27,
3 => bb31,
4 => bb32,
5 => bb33,
16552206630155376243 => bb35,
_ => bb34
}
}
bb37 = {
Return()
}
bb38 = {
_26 = _20;
_36 = _19 | _19;
(*_28) = !(-4657358769496045083_i64);
_24 = _6 as i128;
(*_28) = 1290022191564687348_i64 << _6;
(*_28) = (-7051654442543881818_i64);
_10.1 = -120_i8;
(*_28) = _32 as i64;
_7 = _32;
_3 = &_1;
match _25 {
0 => bb39,
16552206630155376243 => bb41,
_ => bb40
}
}
bb39 = {
_3 = &_9;
_7 = '\u{34803}';
_10.0 = &_1;
_1 = !_4;
_2 = &(*_3);
_10.0 = &(*_3);
_6 = (*_2);
_10.1 = (-119_i8);
_5 = (*_3) >> (*_2);
_2 = &_4;
_9 = RET << (*_2);
_2 = &RET;
_12 = 1958803748_u32 as f32;
_6 = -(*_2);
_9 = (*_2) * (*_2);
match (*_2) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb40 = {
Return()
}
bb41 = {
_22 = &_26;
_30 = !(*_22);
Call((*_28) = core::intrinsics::transmute(_6), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_18 = core::ptr::addr_of!((*_28));
(*_28) = (-6290072975366651848_i64) - 4994227538419624025_i64;
_10 = (Move(_2), (-94_i8));
(*_28) = 2710869167849996061_i64 + (-6119480367966537441_i64);
(*_28) = !6630710090584673658_i64;
(*_28) = !4319507844647892770_i64;
_22 = &_20;
(*_28) = (-4360233862428650240_i64) >> _9;
_6 = !_9;
_21 = _8;
_21 = -(*_3);
_23 = _17 >> (*_28);
_10.1 = 37_i8 & (-4_i8);
(*_28) = !(-6352482318067557609_i64);
_11 = 62186010937761649438452791505187418186_u128;
_41 = _10.1;
_2 = &_6;
(*_28) = _25 as i64;
(*_28) = 4262697887188718817_i64 - (-6866103817448087868_i64);
(*_28) = (-1630229915254768940_i64) * (-3798838233611392106_i64);
_32 = _7;
_25 = 15566871761647761940_usize << (*_28);
(*_28) = _9 as i64;
_23 = (*_28) as u32;
match _11 {
0 => bb6,
62186010937761649438452791505187418186 => bb44,
_ => bb43
}
}
bb43 = {
_3 = &_9;
_7 = '\u{34803}';
_10.0 = &_1;
_1 = !_4;
_2 = &(*_3);
_10.0 = &(*_3);
_6 = (*_2);
_10.1 = (-119_i8);
_5 = (*_3) >> (*_2);
_2 = &_4;
_9 = RET << (*_2);
_2 = &RET;
_12 = 1958803748_u32 as f32;
_6 = -(*_2);
_9 = (*_2) * (*_2);
match (*_2) {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb8,
5 => bb6,
6 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb44 = {
(*_28) = !(-378763199989275681_i64);
(*_28) = (-4595529788935243904_i64) << (*_2);
_1 = _4 + RET;
_12 = 53_u8 as f32;
_45.fld1 = _36;
match _11 {
62186010937761649438452791505187418186 => bb45,
_ => bb32
}
}
bb45 = {
(*_28) = (-7860616876355655260_i64) << _45.fld1;
_45 = Adt26 { fld0: _25,fld1: _36,fld2: _15,fld3: Move(_18),fld4: _31 };
(*_28) = 8505772029784761783_i64 - 2753344806734070659_i64;
_45.fld3 = core::ptr::addr_of!((*_28));
(*_28) = 4941786909092994345_i64;
_5 = !(*_2);
match _31 {
0 => bb40,
1 => bb30,
2 => bb46,
3 => bb47,
4 => bb48,
11926 => bb50,
_ => bb49
}
}
bb46 = {
Return()
}
bb47 = {
_1 = !(*_2);
_1 = _7 as isize;
_4 = (*_2) << (*_2);
_4 = _9;
RET = _1;
_11 = 213595084648172943079969580274000789340_u128 + 271256817950597476552677129263891545742_u128;
_4 = _9;
_17 = 3171305931_u32 & 2209439656_u32;
_12 = _10.1 as f32;
_1 = -_4;
_10.0 = &RET;
_10.1 = -39_i8;
_20 = _17 > _17;
_10.0 = &_4;
_7 = '\u{21848}';
_15 = _13;
_10.1 = (-69_i8) & (-126_i8);
_6 = _8;
_10 = (Move(_2), (-80_i8));
_10.1 = 9_i8 | (-19_i8);
_13 = _15 + _15;
_21 = 6415285299667154886_usize as isize;
_1 = _8;
Goto(bb14)
}
bb48 = {
_1 = -(*_2);
_10.1 = 56_i8;
_2 = &_1;
_9 = (*_2) * _8;
_11 = 287294175426319551611835604018610219522_u128 + 88961950245880956531749409151292469114_u128;
_7 = '\u{8a908}';
_5 = 56497_u16 as isize;
_10 = (Move(_2), (-20_i8));
_8 = _9;
_10 = (Move(_3), (-66_i8));
_3 = &_6;
_12 = 165765783982124038327616655395992235268_i128 as f32;
_2 = &(*_3);
_2 = &_8;
_10 = (Move(_3), (-59_i8));
_13 = (*_2) as f64;
_15 = _10.1 as f64;
_2 = &RET;
_1 = _8;
Goto(bb13)
}
bb49 = {
_22 = &_26;
_30 = !(*_22);
Call((*_28) = core::intrinsics::transmute(_6), ReturnTo(bb42), UnwindUnreachable())
}
bb50 = {
_36 = _19;
_38 = _12 - _12;
_10.1 = _6 as i8;
_11 = 14090988554175914736953870790708486125_u128;
(*_28) = (-4654244543314220793_i64);
_43.0 = _36 as f64;
_36 = _45.fld1;
_11 = 2_u8 as u128;
_45.fld3 = core::ptr::addr_of!((*_28));
(*_28) = (-5543338510627019414_i64) + (-4034783609054311028_i64);
_10.0 = Move(_3);
_8 = _41 as isize;
Goto(bb51)
}
bb51 = {
Call(_49 = dump_var(11_usize, 1_usize, Move(_1), 8_usize, Move(_8), 29_usize, Move(_29), 4_usize, Move(_4)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_49 = dump_var(11_usize, 7_usize, Move(_7), 20_usize, Move(_20), 5_usize, Move(_5), 23_usize, Move(_23)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_49 = dump_var(11_usize, 30_usize, Move(_30), 11_usize, Move(_11), 6_usize, Move(_6), 50_usize, _50), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: &'static bool,mut _2: isize,mut _3: bool) -> f64 {
mir! {
type RET = f64;
let _4: i32;
let _5: &'static mut (Adt26, i16, char, Adt31);
let _6: &'static mut [u16; 1];
let _7: Adt19;
let _8: [u16; 3];
let _9: f32;
let _10: isize;
let _11: i16;
let _12: [u16; 3];
let _13: [u128; 2];
let _14: i64;
let _15: [usize; 4];
let _16: Adt19;
let _17: (&'static bool,);
let _18: *mut Adt25;
let _19: [char; 5];
let _20: i16;
let _21: f64;
let _22: *mut Adt26;
let _23: i128;
let _24: (f64,);
let _25: u32;
let _26: (*const *const (&'static isize, i8),);
let _27: char;
let _28: &'static mut (Adt26, i16, char, Adt31);
let _29: Adt57;
let _30: usize;
let _31: (*mut i64,);
let _32: isize;
let _33: &'static Adt43;
let _34: *mut *mut (usize, i32);
let _35: u32;
let _36: (&'static bool,);
let _37: &'static f64;
let _38: &'static [u128; 2];
let _39: char;
let _40: *const (i32, i8, &'static mut i64, &'static bool);
let _41: bool;
let _42: [u8; 3];
let _43: isize;
let _44: *mut (usize, i32);
let _45: isize;
let _46: bool;
let _47: Adt19;
let _48: bool;
let _49: &'static bool;
let _50: [i32; 8];
let _51: *mut (Adt26, i16, char, Adt31);
let _52: isize;
let _53: [bool; 4];
let _54: &'static *mut Adt26;
let _55: f32;
let _56: Adt57;
let _57: (isize,);
let _58: u64;
let _59: Adt25;
let _60: &'static mut (Adt26, i16, char, Adt31);
let _61: *mut i64;
let _62: isize;
let _63: *const u32;
let _64: i32;
let _65: bool;
let _66: u16;
let _67: Adt19;
let _68: i128;
let _69: f64;
let _70: i64;
let _71: Adt73;
let _72: &'static isize;
let _73: (&'static bool,);
let _74: &'static *const (&'static isize, i8);
let _75: &'static *const (&'static isize, i8);
let _76: (*mut i64,);
let _77: (*mut i64,);
let _78: &'static Adt43;
let _79: *mut Adt26;
let _80: (&'static bool,);
let _81: [u8; 3];
let _82: f64;
let _83: &'static mut (usize, i32);
let _84: *const u32;
let _85: isize;
let _86: Adt26;
let _87: (&'static bool,);
let _88: Adt26;
let _89: f32;
let _90: ();
let _91: ();
{
RET = (-123954926519273866694986895751179996256_i128) as f64;
_3 = false | true;
_3 = false ^ true;
_4 = (-1901100689_i32) & 1047185891_i32;
_3 = _4 == _4;
_4 = 1117201563_i32 ^ (-1181049371_i32);
_1 = &_3;
_3 = true | false;
RET = 48908_u16 as f64;
_4 = (-664342524_i32) | 484696898_i32;
_3 = false;
_2 = 5290495689277278674_i64 as isize;
_3 = _2 != _2;
_4 = (-166240486_i32);
_4 = (-1831209954_i32) | 98013377_i32;
Goto(bb1)
}
bb1 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb2 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb3 = {
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{4f987}';
_3 = true;
place!(Field::<i32>(Variant(_7, 1), 5)) = _9 as i32;
place!(Field::<u128>(Variant(_7, 1), 3)) = 12218943485246639097_usize as u128;
place!(Field::<u64>(Variant(_7, 1), 0)) = 378398097240641542_u64;
place!(Field::<isize>(Variant(_7, 1), 2)) = _2;
place!(Field::<isize>(Variant(_7, 1), 2)) = -_10;
_12 = [34206_u16,9118_u16,38138_u16];
_16 = Adt19::Variant2 { fld0: _11,fld1: Field::<u64>(Variant(_7, 1), 0) };
_11 = -Field::<i16>(Variant(_16, 2), 0);
_16 = _7;
_13 = [Field::<u128>(Variant(_7, 1), 3),Field::<u128>(Variant(_16, 1), 3)];
_3 = false;
_4 = Field::<i32>(Variant(_16, 1), 5) + Field::<i32>(Variant(_16, 1), 5);
_14 = !1984651605832137245_i64;
_17.0 = Move(_1);
place!(Field::<isize>(Variant(_7, 1), 2)) = Field::<isize>(Variant(_16, 1), 2) - _10;
_17.0 = &_3;
match Field::<u64>(Variant(_7, 1), 0) {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
378398097240641542 => bb10,
_ => bb9
}
}
bb4 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb5 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
place!(Field::<i128>(Variant(_7, 1), 4)) = Field::<i128>(Variant(_16, 1), 4);
place!(Field::<u128>(Variant(_7, 1), 3)) = 36_i8 as u128;
_3 = !false;
_3 = true | true;
place!(Field::<isize>(Variant(_16, 1), 2)) = Field::<isize>(Variant(_7, 1), 2) + _2;
place!(Field::<isize>(Variant(_7, 1), 2)) = _10;
_8 = [832_u16,41664_u16,65422_u16];
place!(Field::<isize>(Variant(_16, 1), 2)) = -_10;
place!(Field::<i32>(Variant(_16, 1), 5)) = _4;
_19 = [Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_16, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_16, 1), 1)];
_9 = (-40_i8) as f32;
_9 = 195_u8 as f32;
place!(Field::<char>(Variant(_16, 1), 1)) = Field::<char>(Variant(_7, 1), 1);
_4 = Field::<i32>(Variant(_16, 1), 5);
place!(Field::<i32>(Variant(_7, 1), 5)) = Field::<i32>(Variant(_16, 1), 5) << Field::<u128>(Variant(_16, 1), 3);
_4 = Field::<i32>(Variant(_7, 1), 5) & Field::<i32>(Variant(_16, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
place!(Field::<i32>(Variant(_16, 1), 5)) = Field::<i32>(Variant(_7, 1), 5) | Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
place!(Field::<u128>(Variant(_16, 1), 3)) = Field::<u128>(Variant(_7, 1), 3) & Field::<u128>(Variant(_7, 1), 3);
_1 = Move(_17.0);
place!(Field::<u128>(Variant(_7, 1), 3)) = !Field::<u128>(Variant(_16, 1), 3);
Goto(bb11)
}
bb11 = {
_19 = [Field::<char>(Variant(_16, 1), 1),Field::<char>(Variant(_16, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_7, 1), 1)];
_21 = RET * RET;
_4 = Field::<i32>(Variant(_7, 1), 5) * Field::<i32>(Variant(_16, 1), 5);
_13 = [Field::<u128>(Variant(_7, 1), 3),Field::<u128>(Variant(_7, 1), 3)];
_24.0 = _9 as f64;
place!(Field::<u64>(Variant(_16, 1), 0)) = Field::<u64>(Variant(_7, 1), 0) - Field::<u64>(Variant(_7, 1), 0);
_13 = [Field::<u128>(Variant(_7, 1), 3),Field::<u128>(Variant(_16, 1), 3)];
place!(Field::<u64>(Variant(_16, 1), 0)) = Field::<u64>(Variant(_7, 1), 0) ^ Field::<u64>(Variant(_7, 1), 0);
_14 = (-1094861858859943396_i64) ^ (-2500323973922261637_i64);
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
_24.0 = RET - _21;
match Field::<u64>(Variant(_7, 1), 0) {
0 => bb1,
1 => bb2,
2 => bb10,
3 => bb9,
4 => bb6,
5 => bb12,
378398097240641542 => bb14,
_ => bb13
}
}
bb12 = {
place!(Field::<i128>(Variant(_7, 1), 4)) = Field::<i128>(Variant(_16, 1), 4);
place!(Field::<u128>(Variant(_7, 1), 3)) = 36_i8 as u128;
_3 = !false;
_3 = true | true;
place!(Field::<isize>(Variant(_16, 1), 2)) = Field::<isize>(Variant(_7, 1), 2) + _2;
place!(Field::<isize>(Variant(_7, 1), 2)) = _10;
_8 = [832_u16,41664_u16,65422_u16];
place!(Field::<isize>(Variant(_16, 1), 2)) = -_10;
place!(Field::<i32>(Variant(_16, 1), 5)) = _4;
_19 = [Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_16, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_7, 1), 1),Field::<char>(Variant(_16, 1), 1)];
_9 = (-40_i8) as f32;
_9 = 195_u8 as f32;
place!(Field::<char>(Variant(_16, 1), 1)) = Field::<char>(Variant(_7, 1), 1);
_4 = Field::<i32>(Variant(_16, 1), 5);
place!(Field::<i32>(Variant(_7, 1), 5)) = Field::<i32>(Variant(_16, 1), 5) << Field::<u128>(Variant(_16, 1), 3);
_4 = Field::<i32>(Variant(_7, 1), 5) & Field::<i32>(Variant(_16, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
place!(Field::<i32>(Variant(_16, 1), 5)) = Field::<i32>(Variant(_7, 1), 5) | Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
place!(Field::<u128>(Variant(_16, 1), 3)) = Field::<u128>(Variant(_7, 1), 3) & Field::<u128>(Variant(_7, 1), 3);
_1 = Move(_17.0);
place!(Field::<u128>(Variant(_7, 1), 3)) = !Field::<u128>(Variant(_16, 1), 3);
Goto(bb11)
}
bb13 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb14 = {
place!(Field::<i128>(Variant(_16, 1), 4)) = Field::<i128>(Variant(_7, 1), 4) << _4;
_11 = 7778_i16 - 4810_i16;
_9 = Field::<isize>(Variant(_16, 1), 2) as f32;
_3 = false ^ false;
_21 = _24.0 - RET;
place!(Field::<i32>(Variant(_7, 1), 5)) = _4;
_21 = _24.0 + _24.0;
place!(Field::<i128>(Variant(_7, 1), 4)) = _21 as i128;
place!(Field::<isize>(Variant(_16, 1), 2)) = Field::<isize>(Variant(_7, 1), 2) * _10;
place!(Field::<isize>(Variant(_7, 1), 2)) = -Field::<isize>(Variant(_16, 1), 2);
_24 = (_21,);
place!(Field::<u128>(Variant(_16, 1), 3)) = Field::<char>(Variant(_16, 1), 1) as u128;
_9 = _14 as f32;
_30 = 18374739029332169951_usize + 3_usize;
_31.0 = core::ptr::addr_of_mut!(_14);
_11 = 15134_i16;
Call(_15 = fn13(Move(_31), Field::<char>(Variant(_7, 1), 1), _10), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
_25 = !2039566386_u32;
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
_20 = _11;
_24 = (RET,);
_14 = -(-7961546737184131213_i64);
place!(Field::<i32>(Variant(_16, 1), 5)) = _4;
RET = -_21;
_27 = Field::<char>(Variant(_16, 1), 1);
_27 = Field::<char>(Variant(_7, 1), 1);
_31.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<isize>(Variant(_7, 1), 2)) = Field::<u128>(Variant(_7, 1), 3) as isize;
RET = _21 * _21;
_13 = [Field::<u128>(Variant(_7, 1), 3),Field::<u128>(Variant(_7, 1), 3)];
RET = 74_u8 as f64;
_25 = 3289667088_u32;
_17.0 = &_3;
Goto(bb16)
}
bb16 = {
_25 = 4061232775_u32 ^ 1292460743_u32;
_4 = Field::<isize>(Variant(_7, 1), 2) as i32;
_7 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_16, 1), 0),fld1: Field::<char>(Variant(_16, 1), 1),fld2: _10,fld3: Field::<u128>(Variant(_16, 1), 3),fld4: Field::<i128>(Variant(_16, 1), 4),fld5: Field::<i32>(Variant(_16, 1), 5) };
_8 = [57461_u16,35386_u16,2997_u16];
place!(Field::<u64>(Variant(_7, 1), 0)) = Field::<u64>(Variant(_16, 1), 0) | Field::<u64>(Variant(_16, 1), 0);
_36.0 = &_3;
_2 = Field::<isize>(Variant(_7, 1), 2) << Field::<i128>(Variant(_7, 1), 4);
place!(Field::<i128>(Variant(_7, 1), 4)) = Field::<i128>(Variant(_16, 1), 4) << _2;
_30 = 0_usize;
_3 = Field::<i128>(Variant(_7, 1), 4) == Field::<i128>(Variant(_16, 1), 4);
_21 = _20 as f64;
place!(Field::<isize>(Variant(_16, 1), 2)) = -_2;
RET = _21;
_14 = (-3202501006021941879_i64);
_38 = &_13;
place!(Field::<isize>(Variant(_16, 1), 2)) = _2 >> (*_38)[_30];
place!(Field::<u128>(Variant(_16, 1), 3)) = (*_38)[_30] * (*_38)[_30];
_27 = Field::<char>(Variant(_16, 1), 1);
_37 = &_21;
_15 = [_30,_30,_30,_30];
_15 = [_30,_30,_30,_30];
_39 = Field::<char>(Variant(_16, 1), 1);
_8[_30] = _12[_30] - _12[_30];
place!(Field::<u128>(Variant(_7, 1), 3)) = (*_38)[_30];
_13 = [Field::<u128>(Variant(_16, 1), 3),Field::<u128>(Variant(_7, 1), 3)];
Call(place!(Field::<isize>(Variant(_16, 1), 2)) = core::intrinsics::transmute(Field::<u64>(Variant(_7, 1), 0)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
_32 = _2;
_35 = !_25;
_42 = [235_u8,204_u8,114_u8];
_4 = _3 as i32;
place!(Field::<u64>(Variant(_7, 1), 0)) = !Field::<u64>(Variant(_16, 1), 0);
_8[_30] = _12[_30] % _12[_30];
_7 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_16, 1), 0),fld1: Field::<char>(Variant(_16, 1), 1),fld2: _32,fld3: _13[_30],fld4: Field::<i128>(Variant(_16, 1), 4),fld5: Field::<i32>(Variant(_16, 1), 5) };
_45 = Field::<isize>(Variant(_7, 1), 2) ^ _2;
_8 = _12;
_34 = core::ptr::addr_of_mut!(_44);
_11 = !_20;
_36.0 = Move(_17.0);
place!(Field::<isize>(Variant(_7, 1), 2)) = _2 & _45;
_17.0 = &_3;
_34 = core::ptr::addr_of_mut!(_44);
match _8[_30] {
0 => bb1,
1 => bb5,
2 => bb8,
3 => bb14,
34206 => bb19,
_ => bb18
}
}
bb18 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb19 = {
place!(Field::<u128>(Variant(_7, 1), 3)) = _13[_30] & _13[_30];
_21 = -_24.0;
_19 = [_39,Field::<char>(Variant(_7, 1), 1),_27,_27,Field::<char>(Variant(_7, 1), 1)];
place!(Field::<isize>(Variant(_16, 1), 2)) = Field::<isize>(Variant(_7, 1), 2) * _45;
_10 = Field::<isize>(Variant(_7, 1), 2) * Field::<isize>(Variant(_16, 1), 2);
place!(Field::<char>(Variant(_7, 1), 1)) = _39;
_34 = core::ptr::addr_of_mut!((*_34));
RET = _24.0 * _24.0;
place!(Field::<isize>(Variant(_16, 1), 2)) = _45 & _10;
_43 = Field::<isize>(Variant(_16, 1), 2) << Field::<isize>(Variant(_16, 1), 2);
_47 = Adt19::Variant0 { fld0: Field::<u64>(Variant(_16, 1), 0),fld1: _39,fld2: _15[_30],fld3: _15,fld4: _11,fld5: _9,fld6: _25,fld7: RET };
_47 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_16, 1), 0),fld1: Field::<char>(Variant(_16, 1), 1),fld2: _10,fld3: Field::<u128>(Variant(_7, 1), 3),fld4: Field::<i128>(Variant(_16, 1), 4),fld5: Field::<i32>(Variant(_16, 1), 5) };
place!(Field::<i128>(Variant(_47, 1), 4)) = Field::<i128>(Variant(_7, 1), 4);
_31.0 = core::ptr::addr_of_mut!(_14);
_48 = _3;
_23 = -Field::<i128>(Variant(_16, 1), 4);
place!(Field::<isize>(Variant(_7, 1), 2)) = _25 as isize;
place!(Field::<isize>(Variant(_16, 1), 2)) = -_43;
_1 = &_48;
_48 = _3;
_42[_30] = 155_u8;
match _42[_30] {
0 => bb10,
155 => bb21,
_ => bb20
}
}
bb20 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb21 = {
place!(Field::<u64>(Variant(_7, 1), 0)) = Field::<u64>(Variant(_16, 1), 0) - Field::<u64>(Variant(_16, 1), 0);
Goto(bb22)
}
bb22 = {
_19 = [Field::<char>(Variant(_16, 1), 1),Field::<char>(Variant(_47, 1), 1),_27,Field::<char>(Variant(_47, 1), 1),Field::<char>(Variant(_47, 1), 1)];
_3 = _48;
place!(Field::<char>(Variant(_16, 1), 1)) = _27;
_7 = Adt19::Variant0 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: _39,fld2: _30,fld3: _15,fld4: _20,fld5: _9,fld6: _25,fld7: RET };
_35 = _30 as u32;
_41 = !_48;
place!(Field::<i128>(Variant(_16, 1), 4)) = _23;
_4 = Field::<i32>(Variant(_47, 1), 5) + Field::<i32>(Variant(_16, 1), 5);
_10 = _14 as isize;
_27 = Field::<char>(Variant(_47, 1), 1);
place!(Field::<char>(Variant(_7, 0), 1)) = _19[_30];
_16 = Adt19::Variant0 { fld0: Field::<u64>(Variant(_7, 0), 0),fld1: _19[_30],fld2: _30,fld3: Field::<[usize; 4]>(Variant(_7, 0), 3),fld4: _11,fld5: Field::<f32>(Variant(_7, 0), 5),fld6: _25,fld7: Field::<f64>(Variant(_7, 0), 7) };
_3 = _43 < Field::<isize>(Variant(_47, 1), 2);
place!(Field::<[usize; 4]>(Variant(_16, 0), 3)) = _15;
_24 = (Field::<f64>(Variant(_16, 0), 7),);
place!(Field::<u64>(Variant(_16, 0), 0)) = Field::<u64>(Variant(_47, 1), 0) & Field::<u64>(Variant(_47, 1), 0);
Goto(bb23)
}
bb23 = {
_24 = (Field::<f64>(Variant(_7, 0), 7),);
_16 = _47;
_43 = Field::<isize>(Variant(_16, 1), 2) << _4;
_17 = (Move(_1),);
place!(Field::<i128>(Variant(_16, 1), 4)) = !_23;
place!(Field::<u64>(Variant(_16, 1), 0)) = _14 as u64;
_12 = _8;
_53 = [_3,_48,_3,_48];
_19 = [Field::<char>(Variant(_47, 1), 1),_27,Field::<char>(Variant(_7, 0), 1),Field::<char>(Variant(_7, 0), 1),Field::<char>(Variant(_7, 0), 1)];
_24.0 = RET + Field::<f64>(Variant(_7, 0), 7);
_27 = _19[_30];
_14 = 8237695470185893071_i64 << Field::<isize>(Variant(_47, 1), 2);
_34 = core::ptr::addr_of_mut!((*_34));
Call(_57.0 = core::intrinsics::transmute(Field::<isize>(Variant(_16, 1), 2)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
_32 = _25 as isize;
_1 = &_48;
place!(Field::<u64>(Variant(_16, 1), 0)) = Field::<u64>(Variant(_7, 0), 0);
place!(Field::<isize>(Variant(_47, 1), 2)) = !Field::<isize>(Variant(_16, 1), 2);
_1 = &_3;
_25 = _42[_30] as u32;
place!(Field::<char>(Variant(_7, 0), 1)) = _27;
place!(Field::<isize>(Variant(_47, 1), 2)) = _57.0;
place!(Field::<f64>(Variant(_7, 0), 7)) = _11 as f64;
place!(Field::<u128>(Variant(_47, 1), 3)) = _57.0 as u128;
place!(Field::<i128>(Variant(_16, 1), 4)) = _15[_30] as i128;
place!(Field::<u128>(Variant(_47, 1), 3)) = Field::<u128>(Variant(_16, 1), 3) + Field::<u128>(Variant(_16, 1), 3);
_58 = !Field::<u64>(Variant(_16, 1), 0);
_55 = Field::<u128>(Variant(_47, 1), 3) as f32;
_20 = Field::<i16>(Variant(_7, 0), 4);
match _8[_30] {
0 => bb18,
34206 => bb26,
_ => bb25
}
}
bb25 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb26 = {
place!(Field::<isize>(Variant(_16, 1), 2)) = Field::<isize>(Variant(_47, 1), 2);
_53[_30] = !(*_1);
_7 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: Field::<char>(Variant(_47, 1), 1),fld2: Field::<isize>(Variant(_47, 1), 2),fld3: Field::<u128>(Variant(_47, 1), 3),fld4: Field::<i128>(Variant(_47, 1), 4),fld5: Field::<i32>(Variant(_47, 1), 5) };
place!(Field::<u128>(Variant(_47, 1), 3)) = Field::<i32>(Variant(_16, 1), 5) as u128;
place!(Field::<i32>(Variant(_16, 1), 5)) = _4;
place!(Field::<u64>(Variant(_47, 1), 0)) = _58 << _57.0;
_59 = Adt25::Variant0 { fld0: (*_1),fld1: _42[_30],fld2: _14,fld3: (-25_i8),fld4: _11,fld5: _9 };
_20 = !_11;
_35 = 102_i8 as u32;
place!(Field::<isize>(Variant(_7, 1), 2)) = Field::<isize>(Variant(_47, 1), 2) - _43;
_53[_30] = (*_1);
_39 = Field::<char>(Variant(_16, 1), 1);
RET = _24.0;
_13 = [Field::<u128>(Variant(_47, 1), 3),Field::<u128>(Variant(_47, 1), 3)];
place!(Field::<isize>(Variant(_47, 1), 2)) = -Field::<isize>(Variant(_16, 1), 2);
_18 = core::ptr::addr_of_mut!(_59);
place!(Field::<u64>(Variant(_16, 1), 0)) = Field::<u64>(Variant(_47, 1), 0) >> Field::<i64>(Variant((*_18), 0), 2);
_32 = Field::<isize>(Variant(_16, 1), 2) >> Field::<i64>(Variant((*_18), 0), 2);
(*_18) = Adt25::Variant1 { fld0: (*_1),fld1: _47,fld2: _13[_30],fld3: (-36_i8),fld4: _24 };
place!(Field::<i128>(Variant(_47, 1), 4)) = Field::<i128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 4);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)) = _24;
place!(Field::<i8>(Variant(_59, 1), 3)) = 115_i8;
Goto(bb27)
}
bb27 = {
place!(Field::<u128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 3)) = Field::<u128>(Variant((*_18), 1), 2);
place!(Field::<isize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 2)) = !Field::<isize>(Variant(_16, 1), 2);
place!(Field::<u128>(Variant((*_18), 1), 2)) = !Field::<u128>(Variant(_7, 1), 3);
place!(Field::<bool>(Variant((*_18), 1), 0)) = Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2) >= Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2);
place!(Field::<u128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 3)) = Field::<u128>(Variant((*_18), 1), 2) << _57.0;
_53 = [Field::<bool>(Variant((*_18), 1), 0),(*_1),Field::<bool>(Variant((*_18), 1), 0),(*_1)];
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = _27;
_42 = [234_u8,79_u8,148_u8];
place!(Field::<i8>(Variant((*_18), 1), 3)) = _15[_30] as i8;
place!(Field::<i8>(Variant((*_18), 1), 3)) = 70_i8;
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = Field::<char>(Variant(_7, 1), 1);
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = Field::<char>(Variant(_16, 1), 1);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<u64>(Variant(_47, 1), 0);
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = Adt19::Variant0 { fld0: Field::<u64>(Variant(_16, 1), 0),fld1: _27,fld2: _15[_30],fld3: _15,fld4: _20,fld5: _55,fld6: _35,fld7: Field::<(f64,)>(Variant((*_18), 1), 4).0 };
place!(Field::<usize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 2)) = !Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3)[_30];
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 1)) = _39;
_7 = Adt19::Variant1 { fld0: Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 0),fld1: Field::<char>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 1),fld2: _43,fld3: Field::<u128>(Variant((*_18), 1), 2),fld4: Field::<i128>(Variant(_47, 1), 4),fld5: _4 };
place!(Field::<u64>(Variant(_7, 1), 0)) = Field::<u128>(Variant((*_18), 1), 2) as u64;
place!(Field::<[usize; 4]>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 3)) = [Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2)];
match Field::<i8>(Variant((*_18), 1), 3) {
0 => bb6,
1 => bb25,
2 => bb23,
3 => bb10,
4 => bb14,
70 => bb29,
_ => bb28
}
}
bb28 = {
_25 = !2039566386_u32;
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_16, 1), 1);
_20 = _11;
_24 = (RET,);
_14 = -(-7961546737184131213_i64);
place!(Field::<i32>(Variant(_16, 1), 5)) = _4;
RET = -_21;
_27 = Field::<char>(Variant(_16, 1), 1);
_27 = Field::<char>(Variant(_7, 1), 1);
_31.0 = core::ptr::addr_of_mut!(_14);
place!(Field::<isize>(Variant(_7, 1), 2)) = Field::<u128>(Variant(_7, 1), 3) as isize;
RET = _21 * _21;
_13 = [Field::<u128>(Variant(_7, 1), 3),Field::<u128>(Variant(_7, 1), 3)];
RET = 74_u8 as f64;
_25 = 3289667088_u32;
_17.0 = &_3;
Goto(bb16)
}
bb29 = {
place!(Field::<usize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 2)) = Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant(_59, 1), 1), 0), 3)[_30] | Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3)[_30];
place!(Field::<bool>(Variant((*_18), 1), 0)) = _48 >= _53[_30];
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = !_25;
place!(Field::<f32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 5)) = Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 0) as f32;
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = Field::<f64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 7) * Field::<f64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 7);
place!(Field::<u128>(Variant((*_18), 1), 2)) = Field::<u128>(Variant(_16, 1), 3) - Field::<u128>(Variant(_47, 1), 3);
place!(Field::<[usize; 4]>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 3))[_30] = Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2) ^ Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2);
place!(Field::<usize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 2)) = !Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3)[_30];
_36 = (Move(_1),);
place!(Field::<f32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 5)) = -_55;
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = Field::<f64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 7);
place!(Field::<[usize; 4]>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 3)) = _15;
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = _35 - _25;
place!(Field::<i16>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 4)) = _20 - _20;
_67 = Adt19::Variant0 { fld0: Field::<u64>(Variant(Field::<Adt19>(Variant(_59, 1), 1), 0), 0),fld1: Field::<char>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 1),fld2: Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3)[_30],fld3: Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3),fld4: Field::<i16>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 4),fld5: Field::<f32>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 5),fld6: _35,fld7: Field::<(f64,)>(Variant((*_18), 1), 4).0 };
place!(Field::<f32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 5)) = Field::<u32>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 6) as f32;
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = _67;
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = Field::<u32>(Variant(_67, 0), 6);
place!(Field::<f32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 5)) = Field::<f32>(Variant(_67, 0), 5);
place!(Field::<i8>(Variant((*_18), 1), 3)) = 81_i8 - 54_i8;
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = Field::<u128>(Variant((*_18), 1), 2) as f64;
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = Field::<(f64,)>(Variant((*_18), 1), 4).0 as u32;
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = _8[_30] as u32;
Goto(bb30)
}
bb30 = {
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = !_35;
_66 = !_8[_30];
(*_18) = Adt25::Variant1 { fld0: _48,fld1: _47,fld2: Field::<u128>(Variant(_47, 1), 3),fld3: (-4_i8),fld4: _24 };
place!(Field::<bool>(Variant((*_18), 1), 0)) = Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2) == Field::<isize>(Variant(_7, 1), 2);
place!(Field::<i128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 4)) = Field::<i128>(Variant(_47, 1), 4) << Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<u64>(Variant(_67, 0), 0);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<u64>(Variant(_67, 0), 0) + Field::<u64>(Variant(_16, 1), 0);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<[usize; 4]>(Variant(_67, 0), 3)[_30] as u64;
place!(Field::<u128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 3)) = Field::<u128>(Variant(_59, 1), 2) ^ Field::<u128>(Variant((*_18), 1), 2);
Goto(bb31)
}
bb31 = {
(*_18) = Adt25::Variant0 { fld0: _3,fld1: _42[_30],fld2: _14,fld3: 103_i8,fld4: _20,fld5: Field::<f32>(Variant(_67, 0), 5) };
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-21_i8) - 29_i8;
match Field::<u8>(Variant((*_18), 0), 1) {
234 => bb33,
_ => bb32
}
}
bb32 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb33 = {
place!(Field::<i16>(Variant((*_18), 0), 4)) = Field::<i16>(Variant(_67, 0), 4) * Field::<i16>(Variant(_67, 0), 4);
_67 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_7, 1), 0),fld1: _27,fld2: Field::<isize>(Variant(_7, 1), 2),fld3: _13[_30],fld4: Field::<i128>(Variant(_47, 1), 4),fld5: Field::<i32>(Variant(_7, 1), 5) };
place!(Field::<bool>(Variant((*_18), 0), 0)) = _3 >= _41;
(*_18) = Adt25::Variant0 { fld0: _3,fld1: _42[_30],fld2: _14,fld3: 15_i8,fld4: _20,fld5: _55 };
_42[_30] = (-123_i8) as u8;
place!(Field::<i8>(Variant((*_18), 0), 3)) = Field::<i32>(Variant(_67, 1), 5) as i8;
place!(Field::<u128>(Variant(_7, 1), 3)) = Field::<u128>(Variant(_16, 1), 3);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-4_i8) | (-64_i8);
place!(Field::<i16>(Variant((*_18), 0), 4)) = _20 | _11;
place!(Field::<i32>(Variant(_67, 1), 5)) = Field::<i32>(Variant(_16, 1), 5);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-36_i8);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-70_i8) - 45_i8;
(*_18) = Adt25::Variant0 { fld0: _53[_30],fld1: _42[_30],fld2: _14,fld3: (-121_i8),fld4: _20,fld5: _55 };
place!(Field::<i128>(Variant(_16, 1), 4)) = Field::<i128>(Variant(_47, 1), 4);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-100_i8) + (-84_i8);
Goto(bb34)
}
bb34 = {
place!(Field::<f32>(Variant((*_18), 0), 5)) = _55 + _55;
place!(Field::<i16>(Variant((*_18), 0), 4)) = -_20;
_30 = _15[_30];
place!(Field::<i64>(Variant((*_18), 0), 2)) = _14 * _14;
place!(Field::<u8>(Variant((*_18), 0), 1)) = _42[_30] | _42[_30];
place!(Field::<f32>(Variant((*_18), 0), 5)) = _55 - _55;
place!(Field::<isize>(Variant(_67, 1), 2)) = !_57.0;
place!(Field::<i64>(Variant((*_18), 0), 2)) = _14;
place!(Field::<i16>(Variant((*_18), 0), 4)) = _11 + _11;
place!(Field::<i8>(Variant((*_18), 0), 3)) = _30 as i8;
place!(Field::<i128>(Variant(_7, 1), 4)) = Field::<i128>(Variant(_67, 1), 4) * Field::<i128>(Variant(_47, 1), 4);
_8 = [_12[_30],_66,_12[_30]];
(*_18) = Adt25::Variant1 { fld0: _41,fld1: _47,fld2: Field::<u128>(Variant(_16, 1), 3),fld3: (-46_i8),fld4: _24 };
(*_18) = Adt25::Variant1 { fld0: _48,fld1: _7,fld2: Field::<u128>(Variant(_7, 1), 3),fld3: 58_i8,fld4: _24 };
place!(Field::<u128>(Variant((*_18), 1), 2)) = Field::<u128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 3) << Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2);
(*_18) = Adt25::Variant1 { fld0: _53[_30],fld1: _67,fld2: Field::<u128>(Variant(_7, 1), 3),fld3: (-63_i8),fld4: _24 };
_27 = Field::<char>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 1);
_42 = [154_u8,38_u8,118_u8];
place!(Field::<i8>(Variant((*_18), 1), 3)) = Field::<char>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 1) as i8;
place!(Field::<i32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 5)) = Field::<i32>(Variant(_7, 1), 5) << Field::<i8>(Variant((*_18), 1), 3);
match _8[_30] {
0 => bb35,
34206 => bb37,
_ => bb36
}
}
bb35 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb36 = {
_24 = (Field::<f64>(Variant(_7, 0), 7),);
_16 = _47;
_43 = Field::<isize>(Variant(_16, 1), 2) << _4;
_17 = (Move(_1),);
place!(Field::<i128>(Variant(_16, 1), 4)) = !_23;
place!(Field::<u64>(Variant(_16, 1), 0)) = _14 as u64;
_12 = _8;
_53 = [_3,_48,_3,_48];
_19 = [Field::<char>(Variant(_47, 1), 1),_27,Field::<char>(Variant(_7, 0), 1),Field::<char>(Variant(_7, 0), 1),Field::<char>(Variant(_7, 0), 1)];
_24.0 = RET + Field::<f64>(Variant(_7, 0), 7);
_27 = _19[_30];
_14 = 8237695470185893071_i64 << Field::<isize>(Variant(_47, 1), 2);
_34 = core::ptr::addr_of_mut!((*_34));
Call(_57.0 = core::intrinsics::transmute(Field::<isize>(Variant(_16, 1), 2)), ReturnTo(bb24), UnwindUnreachable())
}
bb37 = {
_58 = !Field::<u64>(Variant(_7, 1), 0);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = -RET;
RET = -Field::<(f64,)>(Variant((*_18), 1), 4).0;
_53[_30] = !Field::<bool>(Variant((*_18), 1), 0);
_52 = Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 0) as isize;
Goto(bb38)
}
bb38 = {
place!(Field::<char>(Variant(_7, 1), 1)) = Field::<char>(Variant(_67, 1), 1);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = _58 * Field::<u64>(Variant(_47, 1), 0);
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = _39;
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = Adt19::Variant1 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: Field::<char>(Variant(_16, 1), 1),fld2: Field::<isize>(Variant(_16, 1), 2),fld3: Field::<u128>(Variant((*_18), 1), 2),fld4: Field::<i128>(Variant(_67, 1), 4),fld5: Field::<i32>(Variant(_67, 1), 5) };
place!(Field::<isize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 2)) = _35 as isize;
place!(Field::<u128>(Variant((*_18), 1), 2)) = Field::<u128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 3);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)) = (_24.0,);
place!(Field::<u128>(Variant((*_18), 1), 2)) = Field::<u128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 3) & Field::<u128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 3);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)) = (_24.0,);
place!(Field::<i32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 5)) = -Field::<i32>(Variant(_67, 1), 5);
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = _19[_30];
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = !Field::<u64>(Variant(_67, 1), 0);
Goto(bb39)
}
bb39 = {
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = Field::<char>(Variant(_47, 1), 1);
place!(Field::<u128>(Variant((*_18), 1), 2)) = _15[_30] as u128;
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = Field::<char>(Variant(_7, 1), 1);
place!(Field::<bool>(Variant((*_18), 1), 0)) = _53[_30] | _3;
_11 = !_20;
Call(_68 = core::intrinsics::bswap(Field::<i128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 4)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
place!(Field::<i32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 5)) = !Field::<i32>(Variant(_67, 1), 5);
place!(Field::<i32>(Variant(_7, 1), 5)) = -Field::<i32>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 5);
place!(Field::<char>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 1)) = Field::<char>(Variant(_7, 1), 1);
place!(Field::<u128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 3)) = Field::<u128>(Variant((*_18), 1), 2) * Field::<u128>(Variant((*_18), 1), 2);
place!(Field::<i32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 5)) = _66 as i32;
_37 = &place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0;
_57 = (Field::<isize>(Variant(_47, 1), 2),);
place!(Field::<isize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 2)) = Field::<isize>(Variant(_47, 1), 2) & Field::<isize>(Variant(_67, 1), 2);
place!(Field::<u128>(Variant(_16, 1), 3)) = Field::<u128>(Variant(_47, 1), 3) << Field::<isize>(Variant(_7, 1), 2);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = -_24.0;
place!(Field::<isize>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 2)) = Field::<isize>(Variant(_67, 1), 2);
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<u64>(Variant(_47, 1), 0) >> Field::<isize>(Variant(Field::<Adt19>(Variant(_59, 1), 1), 1), 2);
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = Adt19::Variant0 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: Field::<char>(Variant(_7, 1), 1),fld2: _30,fld3: _15,fld4: _20,fld5: _55,fld6: _25,fld7: Field::<(f64,)>(Variant((*_18), 1), 4).0 };
place!(Field::<i16>(Variant(place!(Field::<Adt19>(Variant(_59, 1), 1)), 0), 4)) = -_20;
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = RET;
_68 = Field::<i128>(Variant(_7, 1), 4);
_82 = Field::<(f64,)>(Variant((*_18), 1), 4).0 * Field::<f64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 7);
place!(Field::<i16>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 4)) = _20;
place!(Field::<f32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 5)) = _55 + _55;
place!(Field::<u64>(Variant(_47, 1), 0)) = Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 0) - Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 0);
place!(Field::<u128>(Variant(_16, 1), 3)) = !Field::<u128>(Variant(_47, 1), 3);
place!(Field::<i16>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 4)) = _11 & _20;
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 0)) = Field::<u64>(Variant(_16, 1), 0) >> _43;
place!(Field::<u128>(Variant(_7, 1), 3)) = _13[_30] - Field::<u128>(Variant((*_18), 1), 2);
_13 = [Field::<u128>(Variant((*_18), 1), 2),Field::<u128>(Variant(_47, 1), 3)];
Goto(bb41)
}
bb41 = {
_80.0 = &place!(Field::<bool>(Variant((*_18), 1), 0));
_70 = -_14;
_1 = &place!(Field::<bool>(Variant((*_18), 1), 0));
place!(Field::<i16>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 4)) = _11;
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = RET;
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = Adt19::Variant1 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: Field::<char>(Variant(_7, 1), 1),fld2: Field::<isize>(Variant(_16, 1), 2),fld3: Field::<u128>(Variant(_47, 1), 3),fld4: Field::<i128>(Variant(_7, 1), 4),fld5: Field::<i32>(Variant(_67, 1), 5) };
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 0)) = Field::<u64>(Variant(_47, 1), 0);
place!(Field::<i128>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 1), 4)) = !Field::<i128>(Variant(_47, 1), 4);
_47 = Adt19::Variant1 { fld0: Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 0),fld1: Field::<char>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 1),fld2: Field::<isize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 2),fld3: Field::<u128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 3),fld4: Field::<i128>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 4),fld5: Field::<i32>(Variant(Field::<Adt19>(Variant(_59, 1), 1), 1), 5) };
_53 = [Field::<bool>(Variant((*_18), 1), 0),(*_1),Field::<bool>(Variant((*_18), 1), 0),Field::<bool>(Variant((*_18), 1), 0)];
_36.0 = Move(_80.0);
place!(Field::<Adt19>(Variant((*_18), 1), 1)) = Adt19::Variant0 { fld0: Field::<u64>(Variant(_47, 1), 0),fld1: Field::<char>(Variant(_7, 1), 1),fld2: _30,fld3: _15,fld4: _11,fld5: _55,fld6: _25,fld7: Field::<(f64,)>(Variant((*_18), 1), 4).0 };
place!(Field::<f64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 7)) = Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant(_59, 1), 1), 0), 3)[_30] as f64;
_86.fld0 = Field::<i16>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 4) as usize;
match Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2) {
1 => bb24,
2 => bb17,
3 => bb42,
4 => bb43,
0 => bb45,
_ => bb44
}
}
bb42 = {
Return()
}
bb43 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb44 = {
place!(Field::<i16>(Variant((*_18), 0), 4)) = Field::<i16>(Variant(_67, 0), 4) * Field::<i16>(Variant(_67, 0), 4);
_67 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_7, 1), 0),fld1: _27,fld2: Field::<isize>(Variant(_7, 1), 2),fld3: _13[_30],fld4: Field::<i128>(Variant(_47, 1), 4),fld5: Field::<i32>(Variant(_7, 1), 5) };
place!(Field::<bool>(Variant((*_18), 0), 0)) = _3 >= _41;
(*_18) = Adt25::Variant0 { fld0: _3,fld1: _42[_30],fld2: _14,fld3: 15_i8,fld4: _20,fld5: _55 };
_42[_30] = (-123_i8) as u8;
place!(Field::<i8>(Variant((*_18), 0), 3)) = Field::<i32>(Variant(_67, 1), 5) as i8;
place!(Field::<u128>(Variant(_7, 1), 3)) = Field::<u128>(Variant(_16, 1), 3);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-4_i8) | (-64_i8);
place!(Field::<i16>(Variant((*_18), 0), 4)) = _20 | _11;
place!(Field::<i32>(Variant(_67, 1), 5)) = Field::<i32>(Variant(_16, 1), 5);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-36_i8);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-70_i8) - 45_i8;
(*_18) = Adt25::Variant0 { fld0: _53[_30],fld1: _42[_30],fld2: _14,fld3: (-121_i8),fld4: _20,fld5: _55 };
place!(Field::<i128>(Variant(_16, 1), 4)) = Field::<i128>(Variant(_47, 1), 4);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-100_i8) + (-84_i8);
Goto(bb34)
}
bb45 = {
_85 = !Field::<isize>(Variant(_7, 1), 2);
place!(Field::<u32>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 6)) = _25 + _35;
place!(Field::<u64>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 0)) = Field::<u64>(Variant(_16, 1), 0);
place!(Field::<bool>(Variant((*_18), 1), 0)) = !_48;
place!(Field::<[usize; 4]>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 3))[_30] = _30;
_64 = Field::<i32>(Variant(_67, 1), 5) << Field::<i32>(Variant(_47, 1), 5);
place!(Field::<[usize; 4]>(Variant(place!(Field::<Adt19>(Variant((*_18), 1), 1)), 0), 3)) = [Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2),Field::<usize>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 2)];
match Field::<[usize; 4]>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 0), 3)[_30] {
1 => bb19,
2 => bb44,
3 => bb46,
4 => bb47,
5 => bb48,
0 => bb50,
_ => bb49
}
}
bb46 = {
_7 = Adt19::Variant2 { fld0: (-23186_i16),fld1: 18285913582080814305_u64 };
_3 = _4 == _4;
_9 = 1129981479_u32 as f32;
RET = _2 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = 10015_i16 + 8746_i16;
_10 = !_2;
_7 = Adt19::Variant2 { fld0: (-8103_i16),fld1: 5923719908063102875_u64 };
_2 = _10;
RET = _4 as f64;
place!(Field::<i16>(Variant(_7, 2), 0)) = !7957_i16;
_11 = Field::<i16>(Variant(_7, 2), 0) * Field::<i16>(Variant(_7, 2), 0);
_9 = Field::<i16>(Variant(_7, 2), 0) as f32;
_12 = [61930_u16,908_u16,6528_u16];
place!(Field::<i16>(Variant(_7, 2), 0)) = !_11;
_7 = Adt19::Variant1 { fld0: 4282201855833159171_u64,fld1: '\u{a899c}',fld2: _10,fld3: 276281790361670409679450085640249480295_u128,fld4: 120019599407809282674123229491060111151_i128,fld5: _4 };
_12 = [49077_u16,40087_u16,48149_u16];
place!(Field::<i128>(Variant(_7, 1), 4)) = (-10026808275048965584868218231778043009_i128) * 164882856452396243862440915366190016462_i128;
place!(Field::<u128>(Variant(_7, 1), 3)) = 300582368177158384376384368106272241934_u128 << Field::<i32>(Variant(_7, 1), 5);
_10 = 1908801946_u32 as isize;
RET = 3387759245946559429_u64 as f64;
Goto(bb3)
}
bb47 = {
_58 = !Field::<u64>(Variant(_7, 1), 0);
place!(Field::<(f64,)>(Variant((*_18), 1), 4)).0 = -RET;
RET = -Field::<(f64,)>(Variant((*_18), 1), 4).0;
_53[_30] = !Field::<bool>(Variant((*_18), 1), 0);
_52 = Field::<u64>(Variant(Field::<Adt19>(Variant((*_18), 1), 1), 1), 0) as isize;
Goto(bb38)
}
bb48 = {
place!(Field::<i16>(Variant((*_18), 0), 4)) = Field::<i16>(Variant(_67, 0), 4) * Field::<i16>(Variant(_67, 0), 4);
_67 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_7, 1), 0),fld1: _27,fld2: Field::<isize>(Variant(_7, 1), 2),fld3: _13[_30],fld4: Field::<i128>(Variant(_47, 1), 4),fld5: Field::<i32>(Variant(_7, 1), 5) };
place!(Field::<bool>(Variant((*_18), 0), 0)) = _3 >= _41;
(*_18) = Adt25::Variant0 { fld0: _3,fld1: _42[_30],fld2: _14,fld3: 15_i8,fld4: _20,fld5: _55 };
_42[_30] = (-123_i8) as u8;
place!(Field::<i8>(Variant((*_18), 0), 3)) = Field::<i32>(Variant(_67, 1), 5) as i8;
place!(Field::<u128>(Variant(_7, 1), 3)) = Field::<u128>(Variant(_16, 1), 3);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-4_i8) | (-64_i8);
place!(Field::<i16>(Variant((*_18), 0), 4)) = _20 | _11;
place!(Field::<i32>(Variant(_67, 1), 5)) = Field::<i32>(Variant(_16, 1), 5);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-36_i8);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-70_i8) - 45_i8;
(*_18) = Adt25::Variant0 { fld0: _53[_30],fld1: _42[_30],fld2: _14,fld3: (-121_i8),fld4: _20,fld5: _55 };
place!(Field::<i128>(Variant(_16, 1), 4)) = Field::<i128>(Variant(_47, 1), 4);
place!(Field::<i8>(Variant((*_18), 0), 3)) = (-100_i8) + (-84_i8);
Goto(bb34)
}
bb49 = {
_2 = 9223372036854775807_isize;
_2 = 17030815415051872032_u64 as isize;
_7 = Adt19::Variant1 { fld0: 5029498013518770739_u64,fld1: '\u{2d436}',fld2: _2,fld3: 151744909065000619983222601781413904769_u128,fld4: 25461691841005727341716271981222371812_i128,fld5: _4 };
_4 = Field::<i32>(Variant(_7, 1), 5) << Field::<i32>(Variant(_7, 1), 5);
place!(Field::<u128>(Variant(_7, 1), 3)) = 220_u8 as u128;
place!(Field::<isize>(Variant(_7, 1), 2)) = (-32261_i16) as isize;
_4 = Field::<i32>(Variant(_7, 1), 5) - Field::<i32>(Variant(_7, 1), 5);
place!(Field::<char>(Variant(_7, 1), 1)) = '\u{625ff}';
_3 = true;
Goto(bb2)
}
bb50 = {
_50 = [Field::<i32>(Variant(_16, 1), 5),_64,_4,_4,Field::<i32>(Variant(_67, 1), 5),_64,_64,Field::<i32>(Variant(_7, 1), 5)];
Goto(bb51)
}
bb51 = {
Call(_90 = dump_var(12_usize, 10_usize, Move(_10), 27_usize, Move(_27), 58_usize, Move(_58), 13_usize, Move(_13)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_90 = dump_var(12_usize, 42_usize, Move(_42), 70_usize, Move(_70), 12_usize, Move(_12), 19_usize, Move(_19)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_90 = dump_var(12_usize, 35_usize, Move(_35), 50_usize, Move(_50), 4_usize, Move(_4), 53_usize, Move(_53)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_90 = dump_var(12_usize, 2_usize, Move(_2), 30_usize, Move(_30), 52_usize, Move(_52), 48_usize, Move(_48)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_90 = dump_var(12_usize, 66_usize, Move(_66), 91_usize, _91, 91_usize, _91, 91_usize, _91), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: (*mut i64,),mut _2: char,mut _3: isize) -> [usize; 4] {
mir! {
type RET = [usize; 4];
let _4: i128;
let _5: i64;
let _6: &'static [u128; 2];
let _7: i32;
let _8: bool;
let _9: &'static mut (usize, i32);
let _10: [u16; 3];
let _11: i32;
let _12: *mut Adt26;
let _13: f32;
let _14: isize;
let _15: isize;
let _16: char;
let _17: *const *const isize;
let _18: u32;
let _19: char;
let _20: isize;
let _21: [u64; 7];
let _22: &'static mut i64;
let _23: *const (&'static bool,);
let _24: *const i64;
let _25: i16;
let _26: Adt26;
let _27: u32;
let _28: u8;
let _29: (&'static bool,);
let _30: isize;
let _31: u16;
let _32: [bool; 6];
let _33: f64;
let _34: [usize; 1];
let _35: char;
let _36: (*const *const (&'static isize, i8),);
let _37: [i32; 8];
let _38: char;
let _39: u64;
let _40: isize;
let _41: f64;
let _42: i32;
let _43: [i32; 8];
let _44: u32;
let _45: *mut (Adt26, i16, char, Adt31);
let _46: char;
let _47: bool;
let _48: u32;
let _49: [u128; 2];
let _50: usize;
let _51: usize;
let _52: &'static *const i8;
let _53: ();
let _54: ();
{
_2 = '\u{f9a88}';
_3 = 9223372036854775807_isize * (-17_isize);
RET = [1_usize,2487617830575015804_usize,2244515998467227049_usize,16446162584959714139_usize];
_3 = (-9223372036854775808_isize) ^ (-108_isize);
_4 = 94_i8 as i128;
_2 = '\u{68f47}';
_2 = '\u{60868}';
RET = [5163594597038321053_usize,5_usize,1_usize,7_usize];
_4 = (-102734488261589140260097033454902850470_i128);
_3 = (-110_isize) * 9223372036854775807_isize;
_3 = _4 as isize;
Goto(bb1)
}
bb1 = {
_2 = '\u{1067a8}';
_4 = 132151975056821496507640081358114322154_i128 - (-49252076567965873456332207443758960308_i128);
_2 = '\u{d5548}';
_2 = '\u{b6fbf}';
_1.0 = core::ptr::addr_of_mut!(_5);
_2 = '\u{6cc14}';
_3 = !9223372036854775807_isize;
_5 = (-4069806087620552031_i64) * (-5791524884312631090_i64);
RET = [68588256742821231_usize,6_usize,6_usize,2412955752779184321_usize];
_5 = (-2210195048392979111_i64) << _4;
_1.0 = core::ptr::addr_of_mut!(_5);
_2 = '\u{4b266}';
_2 = '\u{cd758}';
RET = [6_usize,4_usize,16525249891301817670_usize,0_usize];
_5 = (-8359942411432747381_i64);
RET = [15314057764367447314_usize,10630833962573984430_usize,17141487713061029869_usize,2804259574657706953_usize];
_2 = '\u{22a62}';
_4 = (-96284270500559236259735650260156815025_i128) - (-57528407780119900431987784132900098225_i128);
Goto(bb2)
}
bb2 = {
_7 = (-1342346251_i32) >> _5;
_7 = 1148501117_i32 << _3;
RET = [4_usize,17292623298683331788_usize,1913471906902261246_usize,4109413793105396493_usize];
_7 = 758036405_i32 << _4;
_7 = (-890482616_i32) * 550246566_i32;
_1.0 = core::ptr::addr_of_mut!(_5);
_5 = (-8846195545807370322_i64) * 6819786629225456498_i64;
Call(RET = fn14(_5, _5, Move(_1.0)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_5 = false as i64;
_1.0 = core::ptr::addr_of_mut!(_5);
RET = [3245086357719504579_usize,0_usize,0_usize,0_usize];
_7 = (-1331181261_i32) - 255002324_i32;
_8 = !false;
RET = [7_usize,11296303777837651994_usize,16131819231607731279_usize,1_usize];
RET = [5_usize,0_usize,11248805104169593810_usize,6_usize];
_10 = [60017_u16,28518_u16,64324_u16];
_11 = -_7;
_1.0 = core::ptr::addr_of_mut!(_5);
_4 = !(-140545113201682525574380984059761932655_i128);
_4 = 145932002432019804020594442898983171053_i128 + 77102549408943147206012275682372116878_i128;
_3 = 1876162746_u32 as isize;
_4 = 113098249930553530236534326846744280302_i128 | (-107791384323668168304943128412920783655_i128);
RET = [7_usize,0_usize,5186734122597373802_usize,7_usize];
_4 = (-168118575810140136544813327780816345278_i128) * (-149829004604257750688171696153538308230_i128);
_1.0 = core::ptr::addr_of_mut!(_5);
RET = [7_usize,6_usize,7856405324497699493_usize,7_usize];
_3 = 9223372036854775807_isize;
_4 = (-27320936011907075905388361252197622184_i128) >> _3;
match _3 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
9223372036854775807 => bb10,
_ => bb9
}
}
bb4 = {
_7 = (-1342346251_i32) >> _5;
_7 = 1148501117_i32 << _3;
RET = [4_usize,17292623298683331788_usize,1913471906902261246_usize,4109413793105396493_usize];
_7 = 758036405_i32 << _4;
_7 = (-890482616_i32) * 550246566_i32;
_1.0 = core::ptr::addr_of_mut!(_5);
_5 = (-8846195545807370322_i64) * 6819786629225456498_i64;
Call(RET = fn14(_5, _5, Move(_1.0)), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_2 = '\u{1067a8}';
_4 = 132151975056821496507640081358114322154_i128 - (-49252076567965873456332207443758960308_i128);
_2 = '\u{d5548}';
_2 = '\u{b6fbf}';
_1.0 = core::ptr::addr_of_mut!(_5);
_2 = '\u{6cc14}';
_3 = !9223372036854775807_isize;
_5 = (-4069806087620552031_i64) * (-5791524884312631090_i64);
RET = [68588256742821231_usize,6_usize,6_usize,2412955752779184321_usize];
_5 = (-2210195048392979111_i64) << _4;
_1.0 = core::ptr::addr_of_mut!(_5);
_2 = '\u{4b266}';
_2 = '\u{cd758}';
RET = [6_usize,4_usize,16525249891301817670_usize,0_usize];
_5 = (-8359942411432747381_i64);
RET = [15314057764367447314_usize,10630833962573984430_usize,17141487713061029869_usize,2804259574657706953_usize];
_2 = '\u{22a62}';
_4 = (-96284270500559236259735650260156815025_i128) - (-57528407780119900431987784132900098225_i128);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_8 = true & true;
_5 = (-5807337541813545687_i64) & 1116417999734429978_i64;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) | 9223372036854775807_isize;
RET = [5_usize,5990635194609392466_usize,4201419041856394673_usize,4489912172476641899_usize];
_2 = '\u{d8253}';
_5 = !1783613385831059971_i64;
_15 = _3;
_4 = -(-18703885035253763945477302513621970437_i128);
_15 = _3;
_20 = _3 - _15;
_16 = _2;
_22 = &mut _5;
(*_22) = 4010301649977556807_i64 - 4051372361815152599_i64;
(*_22) = 15344_u16 as i64;
(*_22) = (-7599255244747761988_i64) >> _20;
_11 = _7 >> (*_22);
RET = [5_usize,6_usize,3_usize,6_usize];
(*_22) = 1086237789042486916_i64 >> _20;
_20 = _15;
(*_22) = -2818810189180934765_i64;
(*_22) = 6550162760921354460_i64 >> _20;
_4 = (-6307489059812743071303448635656085804_i128);
Goto(bb11)
}
bb11 = {
(*_22) = 355772931588972063_i64 | (-5120232264506097816_i64);
(*_22) = -(-5545212992548461270_i64);
_24 = core::ptr::addr_of!((*_22));
_21 = [15486941089388150871_u64,5373034429966417404_u64,13204333289323362057_u64,6170424778466713973_u64,5235999880591980140_u64,3893811576306395814_u64,17661763671607719836_u64];
Goto(bb12)
}
bb12 = {
_2 = _16;
_4 = 155416301930795988523267433827855904682_i128 + 102566272543174646023387016395307803671_i128;
_26.fld0 = !4_usize;
(*_22) = !(-5573832628711605102_i64);
(*_22) = -528482973426531601_i64;
(*_22) = (-1706174497485088021_i64) ^ (-7440596174540001214_i64);
(*_22) = (-4765548790586520762_i64);
_28 = !226_u8;
_8 = false | false;
RET = [_26.fld0,_26.fld0,_26.fld0,_26.fld0];
_3 = _11 as isize;
_25 = !(-7992_i16);
_26.fld1 = 14294567160532892272_u64 | 4511541517831981880_u64;
_18 = 1415424827_u32 & 2769340044_u32;
_25 = (-12385_i16) >> (*_22);
(*_22) = 2901669030043201987_i64;
_27 = !_18;
_10 = [15800_u16,10066_u16,6074_u16];
_32 = [_8,_8,_8,_8,_8,_8];
_11 = _7 ^ _7;
(*_22) = (-2326590826836366118_i64) + 7694653287544490215_i64;
_14 = !_3;
_26.fld4 = _25 ^ _25;
Goto(bb13)
}
bb13 = {
_26.fld4 = _25 * _25;
_27 = _18 * _18;
(*_22) = 102202999821675698247683400216500033658_u128 as i64;
(*_22) = -6189240975153848305_i64;
_12 = core::ptr::addr_of_mut!(_26);
(*_12).fld3 = core::ptr::addr_of!((*_22));
_13 = (*_12).fld0 as f32;
(*_12).fld0 = 3_usize;
_3 = _14 << (*_12).fld0;
(*_12).fld3 = Move(_24);
(*_12).fld4 = _25;
(*_12).fld2 = _13 as f64;
(*_12).fld1 = 14906215662482883065_u64 << _26.fld4;
(*_12).fld1 = 4921607961065883706_u64;
(*_22) = (-8786745583893949673_i64) ^ (-4805105378275509992_i64);
(*_12).fld0 = !15435261437359348192_usize;
(*_12).fld1 = 6415584546857035401_u64 + 2003031343513542631_u64;
(*_12).fld2 = _11 as f64;
_30 = -_3;
(*_12).fld1 = !1929200529606567233_u64;
_31 = !35548_u16;
_32 = [_8,_8,_8,_8,_8,_8];
(*_12).fld2 = _28 as f64;
(*_12).fld1 = !6061541506476773677_u64;
_4 = 119289519610735110121108841058415559058_i128 >> (*_12).fld4;
_14 = -_30;
Goto(bb14)
}
bb14 = {
(*_12).fld0 = _8 as usize;
Goto(bb15)
}
bb15 = {
Goto(bb16)
}
bb16 = {
(*_22) = (-4537050989951021127_i64);
(*_12).fld1 = !1224510283671814280_u64;
_24 = core::ptr::addr_of!((*_22));
(*_12).fld3 = core::ptr::addr_of!((*_24));
(*_12).fld3 = Move(_24);
RET = [_26.fld0,(*_12).fld0,(*_12).fld0,(*_12).fld0];
(*_12).fld2 = (*_12).fld4 as f64;
(*_12).fld2 = _11 as f64;
(*_12).fld2 = _3 as f64;
_26.fld3 = core::ptr::addr_of!((*_22));
_1.0 = core::ptr::addr_of_mut!((*_22));
(*_12).fld1 = _13 as u64;
(*_12).fld2 = (*_22) as f64;
_8 = true | false;
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_12).fld0 = !2859601174409209978_usize;
_41 = (*_12).fld2 * (*_12).fld2;
(*_22) = 7831333212332268528_i64 ^ (-6229724011914130122_i64);
(*_22) = (-200275645904067246_i64);
(*_12).fld1 = 5551126639004999743_u64;
Goto(bb17)
}
bb17 = {
(*_12).fld1 = (*_12).fld2 as u64;
_7 = _11 >> _3;
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_22) = 5525199964933697558_i64;
_37 = [_11,_7,_7,_11,_11,_7,_7,_7];
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_12).fld4 = _25;
(*_12).fld1 = 15374567547765060619_u64 * 18403168614710485181_u64;
(*_12).fld0 = 1551320115753197028_usize;
_19 = _2;
_26.fld2 = _41;
Goto(bb18)
}
bb18 = {
(*_12).fld1 = !7281549531181974574_u64;
(*_22) = !1166582174268078121_i64;
(*_12).fld0 = (*_12).fld4 as usize;
(*_12).fld4 = _7 as i16;
(*_22) = (-5317536242774684621_i64);
(*_22) = (-1004853635506407484_i64) + 5057116608606475380_i64;
(*_12).fld0 = 5_usize & 1_usize;
(*_12).fld0 = 2_usize << (*_12).fld4;
_29.0 = &_8;
(*_22) = 3549461177668269933_i64;
(*_22) = 923509346709333624_i64;
(*_12).fld4 = _25;
_7 = _11 - _11;
(*_12).fld0 = 4_usize >> (*_12).fld4;
(*_12).fld0 = 6_usize * 0_usize;
(*_12).fld1 = 9349201253073070051_u64 ^ 8009214635002979828_u64;
_26.fld3 = core::ptr::addr_of!((*_22));
(*_12).fld1 = 13534768715600303571_u64 | 16039343129789451669_u64;
(*_12).fld4 = _25;
(*_12).fld4 = _25 ^ _25;
_42 = _7 & _11;
(*_12).fld2 = 113_i8 as f64;
_18 = _27 << (*_22);
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_12).fld1 = 360742428544438599_u64;
match (*_22) {
0 => bb1,
1 => bb2,
2 => bb14,
3 => bb7,
4 => bb15,
5 => bb8,
923509346709333624 => bb20,
_ => bb19
}
}
bb19 = {
Return()
}
bb20 = {
(*_12).fld1 = 6490694515475404350_u64 * 10307800280408250777_u64;
_44 = _18 - _27;
(*_12).fld0 = 8545467724395402901_usize * 5_usize;
(*_12).fld1 = 10562330583120312239_u64;
(*_22) = (-6686271325270730471_i64) >> _25;
(*_22) = (-7889027166991377745_i64) * (-7616817875704551669_i64);
_35 = _16;
(*_12).fld4 = _25;
(*_22) = (-2247457249943179992_i64) | (-4809017743117382014_i64);
(*_12).fld2 = _41 * _41;
_34 = [(*_12).fld0];
Goto(bb21)
}
bb21 = {
(*_12).fld1 = 13735712494773371036_u64 & 12309440746117301602_u64;
(*_12).fld2 = -_41;
(*_12).fld1 = 7616553448599113420_u64;
(*_12).fld2 = _41;
match (*_12).fld1 {
0 => bb15,
1 => bb20,
2 => bb13,
3 => bb4,
4 => bb11,
5 => bb6,
6 => bb22,
7616553448599113420 => bb24,
_ => bb23
}
}
bb22 = {
Return()
}
bb23 = {
(*_22) = (-4537050989951021127_i64);
(*_12).fld1 = !1224510283671814280_u64;
_24 = core::ptr::addr_of!((*_22));
(*_12).fld3 = core::ptr::addr_of!((*_24));
(*_12).fld3 = Move(_24);
RET = [_26.fld0,(*_12).fld0,(*_12).fld0,(*_12).fld0];
(*_12).fld2 = (*_12).fld4 as f64;
(*_12).fld2 = _11 as f64;
(*_12).fld2 = _3 as f64;
_26.fld3 = core::ptr::addr_of!((*_22));
_1.0 = core::ptr::addr_of_mut!((*_22));
(*_12).fld1 = _13 as u64;
(*_12).fld2 = (*_22) as f64;
_8 = true | false;
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_12).fld0 = !2859601174409209978_usize;
_41 = (*_12).fld2 * (*_12).fld2;
(*_22) = 7831333212332268528_i64 ^ (-6229724011914130122_i64);
(*_22) = (-200275645904067246_i64);
(*_12).fld1 = 5551126639004999743_u64;
Goto(bb17)
}
bb24 = {
(*_22) = !5287247761052531457_i64;
_33 = (*_12).fld2 + (*_12).fld2;
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_22) = -7966414589224850626_i64;
(*_12).fld2 = _33;
_41 = (*_12).fld2 * (*_12).fld2;
(*_12).fld4 = !_25;
(*_12).fld0 = 9509067312099464938_usize;
(*_12).fld0 = 2_usize ^ 6124749011381345112_usize;
(*_12).fld2 = -_33;
(*_12).fld2 = 326594223969885761307108482759693369015_u128 as f64;
_14 = _30 * _3;
(*_12).fld0 = (*_22) as usize;
Call(RET = core::intrinsics::transmute(_37), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
_19 = _16;
(*_12).fld4 = _25 - _25;
(*_12).fld0 = 10417196158245489554_usize;
_34 = [(*_12).fld0];
(*_12).fld1 = _7 as u64;
(*_12).fld4 = _31 as i16;
_43 = [_42,_42,_42,_42,_42,_42,_7,_42];
(*_12).fld4 = _25 >> (*_12).fld1;
(*_12).fld0 = 16891407980432125674_usize & 17465044215512346216_usize;
(*_12).fld3 = core::ptr::addr_of!((*_22));
(*_22) = 5363925113145150446_i64 | (-4031284096694665169_i64);
Goto(bb26)
}
bb26 = {
Call(_53 = dump_var(13_usize, 10_usize, Move(_10), 37_usize, Move(_37), 5_usize, Move(_5), 4_usize, Move(_4)), ReturnTo(bb27), UnwindUnreachable())
}
bb27 = {
Call(_53 = dump_var(13_usize, 11_usize, Move(_11), 27_usize, Move(_27), 43_usize, Move(_43), 16_usize, Move(_16)), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
Call(_53 = dump_var(13_usize, 2_usize, Move(_2), 28_usize, Move(_28), 14_usize, Move(_14), 44_usize, Move(_44)), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
Call(_53 = dump_var(13_usize, 30_usize, Move(_30), 54_usize, _54, 54_usize, _54, 54_usize, _54), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: i64,mut _2: i64,mut _3: *mut i64) -> [usize; 4] {
mir! {
type RET = [usize; 4];
let _4: Adt26;
let _5: i16;
let _6: (usize, i32);
let _7: f32;
let _8: isize;
let _9: &'static *const i8;
let _10: ([i128; 2], Adt26, *mut (Adt26, i16, char, Adt31), *const i64);
let _11: isize;
let _12: bool;
let _13: &'static bool;
let _14: u32;
let _15: i8;
let _16: u32;
let _17: bool;
let _18: &'static &'static bool;
let _19: *const i8;
let _20: &'static f32;
let _21: *const i8;
let _22: u16;
let _23: *mut [u128; 2];
let _24: i128;
let _25: u32;
let _26: i8;
let _27: isize;
let _28: isize;
let _29: u32;
let _30: &'static Adt43;
let _31: f32;
let _32: isize;
let _33: Adt73;
let _34: isize;
let _35: f64;
let _36: isize;
let _37: isize;
let _38: (f64, &'static mut i64, &'static bool, &'static usize);
let _39: &'static *const (&'static isize, i8);
let _40: i8;
let _41: *mut *mut (usize, i32);
let _42: *const i8;
let _43: &'static mut (usize, i32);
let _44: i32;
let _45: i16;
let _46: f32;
let _47: *const *const (&'static isize, i8);
let _48: i128;
let _49: i128;
let _50: [bool; 4];
let _51: *const (i32, i8, &'static mut i64, &'static bool);
let _52: (i32, i8, &'static mut i64, &'static bool);
let _53: i32;
let _54: i128;
let _55: *mut *mut (usize, i32);
let _56: u128;
let _57: i8;
let _58: &'static *mut Adt26;
let _59: isize;
let _60: [char; 5];
let _61: bool;
let _62: *const *const isize;
let _63: &'static *const (&'static isize, i8);
let _64: f64;
let _65: [u8; 3];
let _66: (f64, &'static mut i64, &'static bool, &'static usize);
let _67: *const *const (&'static isize, i8);
let _68: Adt25;
let _69: &'static mut (*mut i64,);
let _70: &'static mut (usize, i32);
let _71: isize;
let _72: [i128; 2];
let _73: i8;
let _74: isize;
let _75: [bool; 8];
let _76: f32;
let _77: &'static *const (&'static isize, i8);
let _78: *const isize;
let _79: ();
let _80: ();
{
RET = [7_usize,5_usize,6_usize,16817807003408476230_usize];
RET = [6_usize,5_usize,2354681940029235434_usize,5_usize];
_1 = _2;
_2 = _1 - _1;
_4.fld1 = 8898568913962474080_u64 ^ 13405893179901398617_u64;
_4.fld3 = core::ptr::addr_of!(_2);
_4.fld1 = 7810095690663925986_u64 - 3683602959356905966_u64;
_4.fld1 = 12611627374191336646_u64;
Goto(bb1)
}
bb1 = {
_4.fld4 = 12612_i16 * (-7553_i16);
_2 = -_1;
_2 = _1 - _1;
_1 = _4.fld1 as i64;
_4.fld0 = !12505454357575110702_usize;
RET = [_4.fld0,_4.fld0,_4.fld0,_4.fld0];
_6 = (_4.fld0, (-71724082_i32));
_6.0 = _4.fld0 * _4.fld0;
_2 = -_1;
_6.0 = _4.fld0 ^ _4.fld0;
_4.fld4 = 18625_i16;
_5 = _4.fld4 & _4.fld4;
_8 = (-111_isize) & 85_isize;
Goto(bb2)
}
bb2 = {
_4.fld3 = core::ptr::addr_of!(_1);
_5 = _4.fld4 >> _1;
_4.fld4 = _5;
match _4.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
12611627374191336646 => bb11,
_ => bb10
}
}
bb3 = {
_4.fld4 = 12612_i16 * (-7553_i16);
_2 = -_1;
_2 = _1 - _1;
_1 = _4.fld1 as i64;
_4.fld0 = !12505454357575110702_usize;
RET = [_4.fld0,_4.fld0,_4.fld0,_4.fld0];
_6 = (_4.fld0, (-71724082_i32));
_6.0 = _4.fld0 * _4.fld0;
_2 = -_1;
_6.0 = _4.fld0 ^ _4.fld0;
_4.fld4 = 18625_i16;
_5 = _4.fld4 & _4.fld4;
_8 = (-111_isize) & 85_isize;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_10.1.fld0 = _6.0 << _6.0;
_8 = _1 as isize;
_10.3 = core::ptr::addr_of!(_1);
_10.1.fld3 = core::ptr::addr_of!(_2);
_6.1 = 2047580293_i32 >> _4.fld0;
_10.1.fld2 = _10.1.fld0 as f64;
_10.0 = [24230259054455346608543748953489456703_i128,157559114319086246556307873500170908216_i128];
_3 = core::ptr::addr_of_mut!(_1);
_4.fld4 = _5 << _5;
_1 = _2;
(*_3) = _2 << _4.fld4;
_4.fld1 = 18134890087251581810_u64;
_4.fld0 = '\u{52419}' as usize;
_10.0 = [(-152070664527707352621416908196951334678_i128),114894010710768483856663698887513878237_i128];
_11 = _8 - _8;
_10.3 = core::ptr::addr_of!((*_3));
(*_3) = !_2;
(*_3) = _2;
(*_3) = -_2;
_7 = 185463797428701432835303194281962650318_u128 as f32;
_10.3 = core::ptr::addr_of!((*_3));
(*_3) = _2 & _2;
(*_3) = _2;
_4 = Adt26 { fld0: _10.1.fld0,fld1: 5857910202561782057_u64,fld2: _10.1.fld2,fld3: Move(_10.3),fld4: _5 };
(*_3) = 19283685003713639490092530272556199815_u128 as i64;
_10.1 = Adt26 { fld0: _6.0,fld1: _4.fld1,fld2: _4.fld2,fld3: Move(_4.fld3),fld4: _5 };
_4.fld4 = _10.1.fld4 - _5;
_4.fld1 = _10.1.fld1 + _10.1.fld1;
_4 = Adt26 { fld0: _10.1.fld0,fld1: _10.1.fld1,fld2: _10.1.fld2,fld3: Move(_10.1.fld3),fld4: _5 };
Call((*_3) = core::intrinsics::bswap(_2), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_4.fld4 = _10.1.fld4 - _10.1.fld4;
(*_3) = _7 as i64;
_12 = !false;
_10.1.fld4 = _5 >> _10.1.fld1;
(*_3) = _2;
_1 = _2 ^ _2;
_1 = _7 as i64;
_8 = _12 as isize;
(*_3) = 34415_u16 as i64;
_13 = &_12;
_4.fld3 = core::ptr::addr_of!((*_3));
(*_3) = -_2;
_4.fld4 = _10.1.fld4 & _10.1.fld4;
(*_3) = _2;
(*_3) = 499484391_u32 as i64;
_10.1.fld3 = core::ptr::addr_of!((*_3));
(*_3) = _2 * _2;
match _4.fld1 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
5857910202561782057 => bb18,
_ => bb17
}
}
bb13 = {
_10.1.fld0 = _6.0 << _6.0;
_8 = _1 as isize;
_10.3 = core::ptr::addr_of!(_1);
_10.1.fld3 = core::ptr::addr_of!(_2);
_6.1 = 2047580293_i32 >> _4.fld0;
_10.1.fld2 = _10.1.fld0 as f64;
_10.0 = [24230259054455346608543748953489456703_i128,157559114319086246556307873500170908216_i128];
_3 = core::ptr::addr_of_mut!(_1);
_4.fld4 = _5 << _5;
_1 = _2;
(*_3) = _2 << _4.fld4;
_4.fld1 = 18134890087251581810_u64;
_4.fld0 = '\u{52419}' as usize;
_10.0 = [(-152070664527707352621416908196951334678_i128),114894010710768483856663698887513878237_i128];
_11 = _8 - _8;
_10.3 = core::ptr::addr_of!((*_3));
(*_3) = !_2;
(*_3) = _2;
(*_3) = -_2;
_7 = 185463797428701432835303194281962650318_u128 as f32;
_10.3 = core::ptr::addr_of!((*_3));
(*_3) = _2 & _2;
(*_3) = _2;
_4 = Adt26 { fld0: _10.1.fld0,fld1: 5857910202561782057_u64,fld2: _10.1.fld2,fld3: Move(_10.3),fld4: _5 };
(*_3) = 19283685003713639490092530272556199815_u128 as i64;
_10.1 = Adt26 { fld0: _6.0,fld1: _4.fld1,fld2: _4.fld2,fld3: Move(_4.fld3),fld4: _5 };
_4.fld4 = _10.1.fld4 - _5;
_4.fld1 = _10.1.fld1 + _10.1.fld1;
_4 = Adt26 { fld0: _10.1.fld0,fld1: _10.1.fld1,fld2: _10.1.fld2,fld3: Move(_10.1.fld3),fld4: _5 };
Call((*_3) = core::intrinsics::bswap(_2), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_4.fld3 = core::ptr::addr_of!(_1);
_5 = _4.fld4 >> _1;
_4.fld4 = _5;
match _4.fld1 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
12611627374191336646 => bb11,
_ => bb10
}
}
bb18 = {
(*_3) = !_2;
(*_3) = -_2;
_6 = (_10.1.fld0, 280877265_i32);
(*_3) = _2;
_4.fld4 = _10.1.fld4 * _10.1.fld4;
(*_3) = _2;
(*_3) = _2;
_8 = -_11;
(*_3) = _2 + _2;
(*_3) = _2;
_14 = 232770940_u32 << (*_3);
_8 = _11 << _10.1.fld4;
_10.3 = core::ptr::addr_of!((*_3));
_6 = (_10.1.fld0, 388381133_i32);
(*_3) = _2;
_1 = _2;
(*_3) = (*_13) as i64;
(*_3) = _6.1 as i64;
_10.3 = core::ptr::addr_of!((*_3));
_14 = !3637777003_u32;
_10.1.fld1 = !_4.fld1;
_10.1.fld0 = _6.0 | _4.fld0;
(*_3) = !_2;
Call(_11 = core::intrinsics::bswap(_8), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
(*_3) = _2 & _2;
RET = [_10.1.fld0,_10.1.fld0,_6.0,_10.1.fld0];
_16 = _14 - _14;
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = _2 >> _10.1.fld0;
(*_3) = -_2;
(*_3) = _2;
_15 = _10.1.fld0 as i8;
(*_3) = _2 * _2;
(*_3) = 252291950137452435411651058071067791130_u128 as i64;
_4.fld2 = -_10.1.fld2;
(*_3) = !_2;
(*_3) = !_2;
_4.fld3 = core::ptr::addr_of!((*_3));
_11 = -_8;
_6.0 = _10.1.fld0 + _4.fld0;
(*_3) = !_2;
_8 = _11;
_17 = (*_13) < (*_13);
_1 = _2;
(*_3) = !_2;
_16 = _14 & _14;
_4.fld3 = core::ptr::addr_of!((*_3));
_14 = _7 as u32;
_4.fld2 = _10.1.fld2 - _10.1.fld2;
_1 = !_2;
Goto(bb20)
}
bb20 = {
_13 = &_17;
match _4.fld1 {
0 => bb12,
1 => bb2,
2 => bb21,
5857910202561782057 => bb23,
_ => bb22
}
}
bb21 = {
Return()
}
bb22 = {
Return()
}
bb23 = {
_7 = (*_3) as f32;
_10.1.fld3 = core::ptr::addr_of!((*_3));
_6.0 = _10.1.fld0 - _4.fld0;
_5 = 310918951714190925570946223713995224400_u128 as i16;
(*_3) = _2 & _2;
_18 = &_13;
match _6.1 {
0 => bb14,
1 => bb11,
2 => bb10,
3 => bb12,
4 => bb9,
5 => bb8,
388381133 => bb25,
_ => bb24
}
}
bb24 = {
Return()
}
bb25 = {
_4 = Move(_10.1);
_21 = core::ptr::addr_of!(_15);
_12 = !(*_13);
_7 = (*_3) as f32;
_25 = _14 ^ _16;
_9 = &_21;
_6.0 = _4.fld0 + _4.fld0;
RET = [_6.0,_6.0,_6.0,_6.0];
(*_3) = _2 ^ _2;
_10.1.fld2 = _7 as f64;
_16 = _25;
(*_21) = (-52_i8);
(*_3) = _2 >> (*_21);
(*_3) = _2 * _2;
_11 = _8 | _8;
(*_3) = _2 * _2;
_22 = 15061_u16 & 7240_u16;
_22 = 17475_u16 * 3570_u16;
RET = [_4.fld0,_6.0,_4.fld0,_6.0];
match (*_21) {
0 => bb23,
1 => bb2,
2 => bb17,
3 => bb9,
340282366920938463463374607431768211404 => bb26,
_ => bb12
}
}
bb26 = {
_6.1 = 390459889_i32 | (-12173779_i32);
(*_3) = -_2;
_26 = (*_3) as i8;
_8 = _11 * _11;
_11 = -_8;
_11 = _8;
(*_21) = _26;
(*_21) = 91895260607545478628607222599400450234_u128 as i8;
_16 = _25 >> _8;
_10.1.fld4 = _4.fld2 as i16;
(*_3) = _8 as i64;
_28 = _8;
_19 = core::ptr::addr_of!((*_21));
(*_21) = '\u{cf4ca}' as i8;
_10.1.fld0 = _4.fld0 * _6.0;
(*_21) = _26 + _26;
_28 = _7 as isize;
Goto(bb27)
}
bb27 = {
_34 = _8 >> (*_3);
_10.1.fld0 = _6.0 & _6.0;
_25 = _16;
_12 = (*_13);
_10.0 = [84628408021486315223925474013563848135_i128,93660372399975630134225607142653533184_i128];
(*_3) = _2 | _2;
(*_3) = !_2;
(*_21) = _11 as i8;
(*_21) = _26 | _26;
_14 = _16;
(*_3) = _2 - _2;
Goto(bb28)
}
bb28 = {
_10.1.fld0 = _6.0 & _4.fld0;
_5 = _4.fld4;
_2 = !(*_3);
_4.fld3 = core::ptr::addr_of!((*_3));
_4.fld0 = _10.1.fld0 - _6.0;
(*_21) = -_26;
(*_21) = _26;
_4.fld1 = 12033908063174534687_u64 >> _16;
Call((*_3) = fn15(Move(_4), Move(_19), Move(_10.3), Move(_9), (*_21), _34, (*_13), _2, Move(_3), Move(_13), _22), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_4.fld1 = !12509788277994768306_u64;
_31 = _7 + _7;
_19 = core::ptr::addr_of!((*_21));
_4.fld3 = core::ptr::addr_of!(_2);
(*_21) = _26;
_22 = !1311_u16;
(*_21) = _26;
_6.1 = 521555856_i32 - 189154214_i32;
_28 = -_8;
_7 = _31 * _31;
_31 = _7 * _7;
_10.1.fld4 = _34 as i16;
(*_21) = _26 - _26;
_10.3 = Move(_4.fld3);
Goto(bb30)
}
bb30 = {
_38.0 = _10.1.fld0 as f64;
(*_21) = _26 ^ _26;
(*_21) = _4.fld1 as i8;
_4.fld1 = '\u{9dbb9}' as u64;
_27 = _11;
_25 = _16 >> _27;
Goto(bb31)
}
bb31 = {
_4.fld4 = -_10.1.fld4;
_17 = _12;
_38.1 = &mut _2;
(*_21) = _26 | _26;
_38.0 = -_10.1.fld2;
_38.3 = &_10.1.fld0;
(*_21) = _26 << _14;
_4.fld4 = !_10.1.fld4;
_10.1.fld1 = !_4.fld1;
_32 = 45596353712111209058085822060017788629_u128 as isize;
_10.1.fld3 = core::ptr::addr_of!(_1);
_40 = (*_21);
_11 = -_34;
(*_21) = -_40;
_10.0 = [(-34732061575936591989505010232357532730_i128),18281273860750191467223369981071945203_i128];
_42 = core::ptr::addr_of!((*_21));
_35 = -_38.0;
_10.3 = Move(_10.1.fld3);
(*_21) = _40 + _40;
Goto(bb32)
}
bb32 = {
_9 = &_21;
_24 = (-65973493104682395939216086128393284043_i128) >> _40;
_13 = &_17;
_45 = '\u{d7f12}' as i16;
_4.fld1 = !_10.1.fld1;
_21 = core::ptr::addr_of!((*_21));
_43 = &mut _6;
(*_21) = !_40;
(*_43).1 = 205_u8 as i32;
(*_43).0 = !_10.1.fld0;
(*_21) = -_40;
_9 = &_19;
_22 = 15193_u16 >> (*_21);
(*_43).1 = !(-1074141214_i32);
(*_21) = _40;
_24 = 43307882227544491956061004364555751211_i128 & (-137964293353889320149082462703214538488_i128);
(*_43) = (_10.1.fld0, 1911747876_i32);
(*_43).1 = 1060905518_i32 & (-2064130371_i32);
Goto(bb33)
}
bb33 = {
_48 = _24 | _24;
(*_43).1 = 1830241194_i32 - (-1191741452_i32);
(*_43) = (_10.1.fld0, (-176408672_i32));
(*_43).1 = (-1480821052_i32) ^ (-911226268_i32);
(*_43).0 = _4.fld1 as usize;
(*_43).1 = 1999831188_i32 ^ (-51862016_i32);
(*_21) = 204_u8 as i8;
RET = [(*_43).0,(*_43).0,(*_43).0,(*_43).0];
_49 = _48;
_34 = _27;
(*_43) = (_10.1.fld0, 726323060_i32);
(*_43).0 = !_10.1.fld0;
(*_43).0 = _27 as usize;
(*_43).1 = (-899624912_i32) << _4.fld4;
_38.2 = &(*_13);
(*_43).0 = 248936122974872857096877210814509259096_u128 as usize;
_31 = _7 - _7;
Call(_36 = core::intrinsics::bswap(_34), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
_21 = Move(_42);
_10.1.fld2 = _38.0;
(*_43) = (_10.1.fld0, (-1839878613_i32));
_24 = -_48;
(*_43) = (_10.1.fld0, (-1391635871_i32));
(*_43).1 = _1 as i32;
(*_43) = (_10.1.fld0, 1570018323_i32);
_10.1.fld0 = _24 as usize;
(*_43).1 = 365679568_i32;
(*_43).0 = _10.1.fld0;
(*_43).1 = (-124408036_i32) << _24;
(*_43) = (_10.1.fld0, (-1723687068_i32));
_46 = _31 * _31;
(*_43) = (_10.1.fld0, (-2049783560_i32));
(*_43) = (_10.1.fld0, 1632001913_i32);
(*_43).0 = !_10.1.fld0;
Goto(bb35)
}
bb35 = {
(*_43) = (_10.1.fld0, (-1196123812_i32));
(*_43).1 = !(-91162278_i32);
_46 = -_7;
_13 = &_12;
_44 = (*_43).1;
RET = [(*_43).0,(*_43).0,(*_43).0,(*_43).0];
_9 = &_21;
_10.1 = Adt26 { fld0: (*_43).0,fld1: _4.fld1,fld2: _35,fld3: Move(_10.3),fld4: _4.fld4 };
(*_43) = (_10.1.fld0, _44);
_50 = [(*_13),(*_13),(*_13),(*_13)];
(*_43).0 = _10.1.fld0;
_10.1.fld2 = _22 as f64;
(*_43).0 = _10.1.fld0 >> _22;
(*_43).0 = _10.1.fld0 & _10.1.fld0;
_4.fld3 = core::ptr::addr_of!(_1);
_4.fld1 = _10.1.fld1;
(*_43).0 = 318165893431036541709544115575404678835_u128 as usize;
_20 = &_46;
(*_43) = (_10.1.fld0, _44);
_25 = _16 >> _28;
(*_43) = (_10.1.fld0, _44);
_31 = _1 as f32;
(*_43).1 = _44;
_10.1.fld0 = '\u{3169f}' as usize;
(*_43) = (_10.1.fld0, _44);
_52.1 = !_40;
RET = [(*_43).0,(*_43).0,(*_43).0,(*_43).0];
Goto(bb36)
}
bb36 = {
_10.3 = Move(_10.1.fld3);
(*_43).0 = !_10.1.fld0;
RET = [_10.1.fld0,(*_43).0,(*_43).0,(*_43).0];
_38.1 = &mut _1;
_37 = _11 & _8;
_38.2 = &(*_13);
(*_43).0 = _10.1.fld0 ^ _10.1.fld0;
(*_43).0 = _10.1.fld0 ^ _10.1.fld0;
(*_43) = (_10.1.fld0, _44);
_10.1.fld3 = Move(_10.3);
_22 = !32485_u16;
(*_43).0 = _10.1.fld0 & _10.1.fld0;
(*_43) = (_10.1.fld0, _44);
(*_43).1 = _44 ^ _44;
_16 = _25 * _25;
(*_43) = (_10.1.fld0, _44);
_27 = _37;
Goto(bb37)
}
bb37 = {
_38.2 = &_17;
_28 = _34;
(*_43) = (_10.1.fld0, _44);
_52 = ((*_43).1, _40, Move(_38.1), Move(_38.2));
_38.3 = &(*_43).0;
_49 = _24 * _24;
(*_43).0 = _10.1.fld0;
(*_43) = (_10.1.fld0, _44);
(*_43).0 = _16 as usize;
_10.0 = [_49,_48];
_11 = (*_20) as isize;
Goto(bb38)
}
bb38 = {
_35 = _10.1.fld2 * _10.1.fld2;
_9 = &_19;
(*_43).1 = _52.0;
(*_43).0 = (*_20) as usize;
(*_43).1 = !_44;
_52.1 = _40 - _40;
_38.3 = &_10.1.fld0;
_57 = !_52.1;
_13 = &_17;
(*_43).0 = _10.1.fld0 + _10.1.fld0;
(*_43).1 = _52.0 | _44;
(*_43) = (_10.1.fld0, _44);
(*_43) = (_10.1.fld0, _52.0);
_45 = _10.1.fld4 & _10.1.fld4;
(*_43).1 = _52.0;
(*_43).1 = _44 & _44;
_19 = core::ptr::addr_of!(_40);
(*_43).1 = _52.0 ^ _44;
(*_43).1 = _44 | _44;
_14 = _16;
(*_43) = (_10.1.fld0, _44);
(*_43) = (_10.1.fld0, _44);
_57 = (*_19) >> _4.fld4;
(*_43).1 = _44;
(*_19) = 193_u8 as i8;
Goto(bb39)
}
bb39 = {
(*_43) = (_10.1.fld0, _52.0);
_12 = !(*_13);
(*_19) = _17 as i8;
Goto(bb40)
}
bb40 = {
(*_43) = (_10.1.fld0, _44);
_38.0 = _35;
(*_43).1 = _44 - _44;
_52.3 = &(*_13);
(*_19) = _57 | _52.1;
_44 = (*_43).1 + (*_43).1;
(*_43).1 = !_44;
_42 = core::ptr::addr_of!((*_19));
(*_19) = _52.1;
(*_43).0 = (*_19) as usize;
(*_19) = _35 as i8;
_12 = !(*_13);
_53 = (*_43).1 >> (*_43).0;
_52.0 = (*_43).1 | (*_43).1;
(*_43) = (_10.1.fld0, _53);
Goto(bb41)
}
bb41 = {
_31 = (*_43).0 as f32;
(*_43).0 = _10.1.fld0;
_44 = (*_43).1 * (*_43).1;
(*_43) = (_10.1.fld0, _53);
(*_19) = _52.1 ^ _57;
_4 = Move(_10.1);
(*_43).1 = _44;
_31 = _24 as f32;
(*_19) = _49 as i8;
_45 = -_4.fld4;
(*_19) = -_52.1;
(*_43).1 = (*_20) as i32;
(*_19) = _57;
Goto(bb42)
}
bb42 = {
(*_19) = 122516450954171303577945367533575757503_u128 as i8;
_38.2 = &(*_13);
_5 = _4.fld4;
(*_43).0 = _4.fld0 * _4.fld0;
(*_19) = _52.1;
_66.2 = &(*_13);
_66.0 = -_38.0;
_64 = -_66.0;
_34 = _27 >> (*_19);
(*_43).0 = _4.fld0;
RET = [(*_43).0,(*_43).0,(*_43).0,(*_43).0];
_18 = &_52.3;
Goto(bb43)
}
bb43 = {
_61 = (*_13) ^ (*_13);
_48 = _4.fld1 as i128;
(*_43).1 = _53;
(*_43).0 = _4.fld0 | _4.fld0;
(*_43) = (_4.fld0, _53);
_25 = _5 as u32;
(*_43).1 = _4.fld1 as i32;
(*_43) = (_4.fld0, _53);
(*_43) = (_4.fld0, _53);
_64 = -_38.0;
(*_43).0 = !_4.fld0;
_29 = _25;
_24 = _22 as i128;
Goto(bb44)
}
bb44 = {
(*_43) = (_4.fld0, _53);
_9 = &_42;
(*_19) = _37 as i8;
_10.1.fld3 = Move(_4.fld3);
_4.fld3 = Move(_10.1.fld3);
(*_43) = (_4.fld0, _44);
_20 = &_31;
_56 = 307776001575166037139277946562199033692_u128 | 115279917908104301958376125544676063875_u128;
(*_43).0 = !_4.fld0;
_59 = _34 | _34;
_54 = _49 ^ _49;
(*_19) = !_57;
_20 = &_7;
_59 = !_8;
_66.2 = &_12;
_19 = core::ptr::addr_of!((*_19));
(*_43).0 = _4.fld0;
(*_19) = _52.1;
(*_19) = _66.0 as i8;
_66.3 = &(*_43).0;
(*_43) = (_4.fld0, _44);
(*_43).1 = !_44;
_65 = [105_u8,143_u8,84_u8];
_71 = -_8;
(*_43).1 = _52.0 << _28;
Goto(bb45)
}
bb45 = {
_10.1.fld0 = (*_43).0 ^ (*_43).0;
_71 = _34;
_48 = '\u{bb402}' as i128;
Goto(bb46)
}
bb46 = {
_20 = &_46;
(*_43) = (_4.fld0, _53);
(*_43) = (_10.1.fld0, _44);
Goto(bb47)
}
bb47 = {
(*_43).0 = !_4.fld0;
(*_19) = !_52.1;
(*_19) = _57 - _57;
(*_43) = (_10.1.fld0, _44);
(*_43).0 = _10.1.fld0;
_10.1.fld1 = _4.fld1;
(*_43).1 = _53;
(*_43).0 = !_10.1.fld0;
(*_19) = _57 << _52.1;
(*_19) = _57 * _57;
(*_43) = (_4.fld0, _44);
_10.1.fld2 = -_35;
(*_43).1 = _44 - _53;
_22 = !43984_u16;
Goto(bb48)
}
bb48 = {
_54 = _48 * _49;
(*_43).1 = _44;
(*_43).0 = _22 as usize;
_10.1.fld3 = Move(_4.fld3);
(*_43).0 = !_4.fld0;
(*_43).0 = _10.1.fld0;
(*_43).0 = _4.fld0;
_4.fld2 = _64 + _35;
_19 = core::ptr::addr_of!((*_19));
_38.3 = Move(_66.3);
_48 = (*_43).0 as i128;
_60 = ['\u{62d74}','\u{ba949}','\u{634d3}','\u{43597}','\u{ed1fe}'];
_28 = -_71;
_66.0 = -_35;
_4.fld0 = (*_43).0 - (*_43).0;
(*_43) = (_4.fld0, _44);
_62 = core::ptr::addr_of!(_78);
(*_19) = -_52.1;
_8 = _71 - _27;
(*_43).0 = _4.fld0;
_24 = _49 + _49;
_10.1.fld1 = _4.fld1 << (*_43).1;
(*_43).0 = _10.1.fld0 & _10.1.fld0;
(*_19) = _52.1 >> (*_43).1;
(*_43) = (_10.1.fld0, _44);
Goto(bb49)
}
bb49 = {
(*_19) = _52.1 + _57;
(*_43).0 = _4.fld0 | _10.1.fld0;
(*_19) = -_52.1;
(*_43).1 = _44 | _53;
_10.1.fld4 = _4.fld4 & _45;
_21 = core::ptr::addr_of!((*_19));
(*_21) = _57;
Goto(bb50)
}
bb50 = {
Call(_79 = dump_var(14_usize, 59_usize, Move(_59), 60_usize, Move(_60), 15_usize, Move(_15), 28_usize, Move(_28)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_79 = dump_var(14_usize, 16_usize, Move(_16), 6_usize, Move(_6), 2_usize, Move(_2), 54_usize, Move(_54)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_79 = dump_var(14_usize, 25_usize, Move(_25), 26_usize, Move(_26), 5_usize, Move(_5), 22_usize, Move(_22)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_79 = dump_var(14_usize, 36_usize, Move(_36), 53_usize, Move(_53), 65_usize, Move(_65), 14_usize, Move(_14)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_79 = dump_var(14_usize, 32_usize, Move(_32), 61_usize, Move(_61), 80_usize, _80, 80_usize, _80), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: Adt26,mut _2: *const i8,mut _3: *const i64,mut _4: &'static *const i8,mut _5: i8,mut _6: isize,mut _7: bool,mut _8: i64,mut _9: *mut i64,mut _10: &'static bool,mut _11: u16) -> i64 {
mir! {
type RET = i64;
let _12: char;
let _13: isize;
let _14: *mut (usize, i32);
let _15: f64;
let _16: i32;
let _17: [bool; 4];
let _18: &'static bool;
let _19: [u32; 3];
let _20: *mut i64;
let _21: &'static f64;
let _22: u8;
let _23: isize;
let _24: *const u32;
let _25: (Adt26, i16, char, Adt31);
let _26: u16;
let _27: isize;
let _28: isize;
let _29: char;
let _30: u64;
let _31: Adt31;
let _32: bool;
let _33: u128;
let _34: i16;
let _35: *mut *mut (usize, i32);
let _36: &'static Adt43;
let _37: [u64; 7];
let _38: &'static mut i64;
let _39: i32;
let _40: i64;
let _41: *mut (Adt26, i16, char, Adt31);
let _42: isize;
let _43: i64;
let _44: (Adt26, i16, char, Adt31);
let _45: *const (i32, i8, &'static mut i64, &'static bool);
let _46: *const (&'static isize, i8);
let _47: isize;
let _48: isize;
let _49: i16;
let _50: &'static mut i64;
let _51: char;
let _52: (i32, i8, &'static mut i64, &'static bool);
let _53: (&'static bool,);
let _54: isize;
let _55: i128;
let _56: char;
let _57: [usize; 1];
let _58: [i128; 2];
let _59: i8;
let _60: isize;
let _61: *const *const (&'static isize, i8);
let _62: [u64; 7];
let _63: (i32, i8, &'static mut i64, &'static bool);
let _64: [u8; 2];
let _65: bool;
let _66: *mut (usize, i32);
let _67: (f64, &'static mut i64, &'static bool, &'static usize);
let _68: *mut Adt25;
let _69: isize;
let _70: u16;
let _71: &'static [u128; 2];
let _72: &'static *const (&'static isize, i8);
let _73: f32;
let _74: i128;
let _75: isize;
let _76: u16;
let _77: &'static f64;
let _78: *mut (usize, i32);
let _79: [u128; 2];
let _80: [u8; 3];
let _81: *mut i64;
let _82: [u64; 7];
let _83: *mut i64;
let _84: usize;
let _85: i8;
let _86: bool;
let _87: [u128; 2];
let _88: (i32, i8, &'static mut i64, &'static bool);
let _89: char;
let _90: [usize; 1];
let _91: &'static mut (*mut i64,);
let _92: isize;
let _93: usize;
let _94: f64;
let _95: ();
let _96: ();
{
_6 = (-9223372036854775808_isize) - (-114_isize);
_1.fld0 = 17127005083711997069_usize ^ 3_usize;
_2 = core::ptr::addr_of!(_5);
_10 = &_7;
(*_2) = 60_i8 ^ (-118_i8);
(*_2) = (-89_i8);
(*_2) = (-6_i8) - (-64_i8);
(*_2) = (-101_i8) >> _1.fld4;
(*_2) = 77_i8 + 25_i8;
_8 = 8024004154250476107_i64;
_11 = 39910_u16;
(*_2) = 65_i8 >> _1.fld1;
_8 = -4352019807986369991_i64;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
39910 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_2) = (-74_i8);
RET = _8 * _8;
Goto(bb8)
}
bb8 = {
_8 = RET & RET;
_1.fld0 = 5_usize & 6_usize;
_13 = -_6;
Goto(bb9)
}
bb9 = {
(*_2) = (*_10) as i8;
_12 = '\u{e5f84}';
(*_2) = 71_i8 | 86_i8;
_6 = _13;
(*_2) = _1.fld4 as i8;
(*_2) = 92_i8 * (-16_i8);
_11 = 32586_u16 & 23751_u16;
(*_2) = 74_i8;
(*_2) = -114_i8;
_12 = '\u{880d2}';
(*_2) = 56_i8;
(*_2) = 105_i8;
(*_2) = (-53_i8) - 99_i8;
(*_2) = _11 as i8;
_17 = [(*_10),_7,(*_10),(*_10)];
(*_2) = 22_i8 * 2_i8;
(*_2) = 127025497353236173843454948831606283173_u128 as i8;
_15 = _1.fld2;
_1.fld0 = 10768981124745717840_usize - 5_usize;
_15 = -_1.fld2;
(*_2) = 39_i8 + (-14_i8);
Goto(bb10)
}
bb10 = {
(*_2) = 123_i8;
(*_2) = (-69_i8) ^ (-127_i8);
_1.fld0 = !5_usize;
_13 = (*_2) as isize;
(*_2) = -16_i8;
(*_2) = 62_i8 * 78_i8;
(*_2) = (*_10) as i8;
(*_2) = (-11_i8) ^ (-73_i8);
_5 = 29_i8 & (-95_i8);
(*_2) = (-31_i8) ^ 35_i8;
_3 = core::ptr::addr_of!(_8);
_2 = core::ptr::addr_of!((*_2));
(*_3) = RET;
(*_2) = 57_i8 << (*_3);
_16 = 1978468231_i32;
_8 = 3763657112_u32 as i64;
_8 = RET;
(*_2) = (-3_i8) | (-80_i8);
match _16 {
1978468231 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
(*_2) = -118_i8;
_6 = -_13;
(*_2) = _1.fld0 as i8;
_21 = &_1.fld2;
_19 = [3269881240_u32,2076390962_u32,153206974_u32];
(*_3) = RET | RET;
(*_3) = -RET;
(*_3) = (*_10) as i64;
_6 = !_13;
(*_3) = _1.fld0 as i64;
_13 = _6 + _6;
_1 = Adt26 { fld0: 4088042130817001590_usize,fld1: 16618068085387794930_u64,fld2: _15,fld3: Move(_3),fld4: 6034_i16 };
(*_2) = (-25230191022190075240625990183389365665_i128) as i8;
_6 = _13;
_1.fld4 = 11582_i16 - 27750_i16;
_1.fld4 = 13988_i16 ^ 19313_i16;
(*_2) = !(-125_i8);
(*_2) = 55_i8;
_11 = 52297277565178050481803312502569714437_u128 as u16;
(*_2) = (-18_i8) | 11_i8;
(*_2) = (-14_i8) >> _6;
_25.0.fld2 = _15 * _1.fld2;
_25.3.fld0.fld4 = _1.fld4;
_25.0.fld1 = !_1.fld1;
Goto(bb13)
}
bb13 = {
_1.fld2 = _25.0.fld2 * _15;
(*_2) = (-28_i8) + 125_i8;
_25.1 = _1.fld4 << (*_2);
_12 = '\u{2d21a}';
(*_2) = _1.fld1 as i8;
_23 = _6;
_1.fld1 = _25.0.fld1 + _25.0.fld1;
_25.3.fld0.fld3 = core::ptr::addr_of!(RET);
_25.3 = Adt31 { fld0: Move(_1) };
_7 = _5 <= (*_2);
_25.0.fld4 = _25.3.fld0.fld0 as i16;
RET = 13427642348424065710882336758572664043_i128 as i64;
_25.0.fld3 = core::ptr::addr_of!(_8);
_16 = 2114976168_i32;
_25.0.fld2 = _25.3.fld0.fld2;
_22 = !115_u8;
match _25.3.fld0.fld0 {
0 => bb1,
1 => bb12,
2 => bb3,
3 => bb7,
4 => bb9,
5 => bb6,
4088042130817001590 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_1.fld2 = _16 as f64;
(*_2) = 104862619931168424920663363343931018176_u128 as i8;
_22 = 251_u8;
(*_2) = 110_i8 ^ (-128_i8);
_23 = _13 & _6;
_25.3.fld0 = Adt26 { fld0: 2_usize,fld1: _25.0.fld1,fld2: _25.0.fld2,fld3: Move(_25.0.fld3),fld4: _25.1 };
_25.3.fld0.fld0 = 17416856105912225090_usize * 4_usize;
(*_2) = !(-34_i8);
_4 = &_2;
_1.fld1 = !_25.0.fld1;
(*_2) = _25.0.fld4 as i8;
_25.0.fld0 = _25.3.fld0.fld0 ^ _25.3.fld0.fld0;
_1 = Adt26 { fld0: _25.0.fld0,fld1: _25.0.fld1,fld2: _25.3.fld0.fld2,fld3: Move(_25.3.fld0.fld3),fld4: _25.3.fld0.fld4 };
_1.fld0 = _1.fld1 as usize;
_23 = _13 & _13;
Goto(bb16)
}
bb16 = {
(*_2) = !20_i8;
_25.3.fld0.fld3 = Move(_1.fld3);
(*_2) = (-64_i8) ^ 42_i8;
(*_2) = !(-120_i8);
_12 = '\u{36619}';
(*_2) = 101_i8 << RET;
_1.fld1 = 3011584683_u32 as u64;
_5 = _25.3.fld0.fld2 as i8;
_31.fld0.fld4 = _25.0.fld4;
_25.0.fld3 = core::ptr::addr_of!(RET);
_33 = !66018462348562988741579957175698112088_u128;
_31.fld0.fld0 = _25.0.fld0 & _25.0.fld0;
_25.2 = _12;
match _22 {
0 => bb17,
1 => bb18,
2 => bb19,
3 => bb20,
251 => bb22,
_ => bb21
}
}
bb17 = {
(*_2) = (*_10) as i8;
_12 = '\u{e5f84}';
(*_2) = 71_i8 | 86_i8;
_6 = _13;
(*_2) = _1.fld4 as i8;
(*_2) = 92_i8 * (-16_i8);
_11 = 32586_u16 & 23751_u16;
(*_2) = 74_i8;
(*_2) = -114_i8;
_12 = '\u{880d2}';
(*_2) = 56_i8;
(*_2) = 105_i8;
(*_2) = (-53_i8) - 99_i8;
(*_2) = _11 as i8;
_17 = [(*_10),_7,(*_10),(*_10)];
(*_2) = 22_i8 * 2_i8;
(*_2) = 127025497353236173843454948831606283173_u128 as i8;
_15 = _1.fld2;
_1.fld0 = 10768981124745717840_usize - 5_usize;
_15 = -_1.fld2;
(*_2) = 39_i8 + (-14_i8);
Goto(bb10)
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
Return()
}
bb21 = {
_8 = RET & RET;
_1.fld0 = 5_usize & 6_usize;
_13 = -_6;
Goto(bb9)
}
bb22 = {
(*_2) = (-91_i8) - (-58_i8);
(*_2) = (-37_i8) | (-20_i8);
_25.3.fld0.fld2 = _25.0.fld2;
_23 = _13 ^ _6;
(*_2) = !(-22_i8);
_25.1 = _25.0.fld4 * _31.fld0.fld4;
Call(_32 = fn16(Move(_2), Move(_25.3.fld0), Move(_10), Move(_21), _12, Move(_25.0), (*_2), _25.1, (*_2), Move(_9), _12, _22), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_25.3.fld0.fld0 = !_1.fld0;
_25.0.fld4 = !_31.fld0.fld4;
_18 = &_7;
_25.3.fld0.fld1 = _1.fld1 ^ _1.fld1;
_7 = !_32;
_31.fld0.fld3 = core::ptr::addr_of!(_8);
_31.fld0.fld3 = core::ptr::addr_of!(_8);
_16 = 873170796_i32;
_8 = RET & RET;
_25.3.fld0.fld1 = _15 as u64;
_21 = &_15;
_25.0.fld3 = core::ptr::addr_of!(RET);
_25.0.fld1 = _25.3.fld0.fld1 >> _31.fld0.fld4;
_25.2 = _12;
_16 = -(-708612488_i32);
_31.fld0.fld2 = _16 as f64;
_3 = core::ptr::addr_of!(_40);
(*_3) = !RET;
_25.2 = _12;
_25.3.fld0 = Adt26 { fld0: _1.fld0,fld1: _25.0.fld1,fld2: (*_21),fld3: Move(_25.0.fld3),fld4: _31.fld0.fld4 };
_25.3.fld0.fld2 = (*_21) - _15;
match _22 {
251 => bb25,
_ => bb24
}
}
bb24 = {
Return()
}
bb25 = {
_29 = _25.2;
_25.2 = _29;
_25.0.fld1 = !_25.3.fld0.fld1;
_27 = _23 + _13;
(*_3) = _8;
_37 = [_25.3.fld0.fld1,_25.3.fld0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1];
_23 = _27;
_27 = _23 ^ _23;
(*_3) = !_8;
_25.0.fld3 = core::ptr::addr_of!((*_3));
_19 = [1010495132_u32,558165321_u32,1614093072_u32];
_25.3.fld0.fld0 = !_1.fld0;
Goto(bb26)
}
bb26 = {
_21 = &_25.3.fld0.fld2;
(*_3) = _7 as i64;
_31.fld0.fld1 = _25.0.fld1 | _25.0.fld1;
_2 = core::ptr::addr_of!(_5);
_31.fld0.fld0 = _1.fld0;
_9 = core::ptr::addr_of_mut!((*_3));
(*_2) = 114_i8 * 40_i8;
_28 = !_23;
_1.fld0 = _31.fld0.fld0 * _25.3.fld0.fld0;
_6 = _28 >> _40;
_25.3.fld0 = Adt26 { fld0: _31.fld0.fld0,fld1: _31.fld0.fld1,fld2: _1.fld2,fld3: Move(_25.0.fld3),fld4: _25.0.fld4 };
_25.0.fld3 = core::ptr::addr_of!((*_3));
_10 = Move(_18);
Goto(bb27)
}
bb27 = {
_44.0.fld3 = Move(_3);
_31.fld0.fld2 = _1.fld2 - _15;
_7 = (*_9) < (*_9);
_25.0.fld2 = _1.fld2 * _31.fld0.fld2;
(*_2) = !6_i8;
_26 = _27 as u16;
_31.fld0.fld2 = _1.fld2 - _25.3.fld0.fld2;
_13 = 1101827689_u32 as isize;
_30 = !_31.fld0.fld1;
_28 = _6 << _40;
_43 = (*_9) - (*_9);
_44.2 = _29;
_1.fld3 = core::ptr::addr_of!((*_9));
_25.2 = _44.2;
_44.3.fld0.fld1 = _16 as u64;
_39 = _16 - _16;
(*_9) = 44958767798601636581963748349920234014_i128 as i64;
Call(_28 = core::intrinsics::bswap(_6), ReturnTo(bb28), UnwindUnreachable())
}
bb28 = {
_3 = core::ptr::addr_of!((*_9));
(*_3) = _43 - _43;
(*_2) = _26 as i8;
Goto(bb29)
}
bb29 = {
_44.0.fld2 = _15;
_25.0.fld3 = core::ptr::addr_of!((*_9));
_2 = core::ptr::addr_of!((*_2));
_31 = Adt31 { fld0: Move(_1) };
(*_9) = !_43;
_31 = Move(_25.3);
Call((*_2) = core::intrinsics::bswap(120_i8), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
_25.3.fld0.fld4 = _25.1 ^ _25.1;
_1.fld1 = !_30;
_44.3.fld0.fld2 = _25.0.fld2 * _25.0.fld2;
_39 = _16 & _16;
_6 = _23 + _28;
_28 = _6 >> (*_9);
_31.fld0.fld0 = _26 as usize;
_44.1 = _25.3.fld0.fld4 - _25.3.fld0.fld4;
(*_2) = (*_9) as i8;
_34 = _44.1 >> (*_2);
_44.0.fld4 = !_44.1;
(*_9) = _30 as i64;
Goto(bb31)
}
bb31 = {
_20 = core::ptr::addr_of_mut!((*_9));
_44.3.fld0 = Adt26 { fld0: _31.fld0.fld0,fld1: _30,fld2: _15,fld3: Move(_31.fld0.fld3),fld4: _44.0.fld4 };
(*_9) = _43 + _43;
_44.0 = Adt26 { fld0: _44.3.fld0.fld0,fld1: _1.fld1,fld2: _31.fld0.fld2,fld3: Move(_3),fld4: _34 };
(*_2) = (-110_i8) - (-78_i8);
_32 = (*_9) > (*_9);
_44.0.fld0 = _31.fld0.fld0 + _31.fld0.fld0;
_25.3 = Move(_44.3);
_52.0 = _16 + _16;
_11 = _26 & _26;
(*_2) = !1_i8;
_25.0.fld0 = _11 as usize;
_39 = !_52.0;
_53.0 = &_32;
_44.3.fld0.fld4 = !_44.0.fld4;
_44.3.fld0.fld2 = _25.0.fld2 * _44.0.fld2;
_26 = _11;
_50 = &mut _8;
(*_9) = _43;
(*_2) = 112_i8 - 80_i8;
_39 = _52.0 & _16;
_31.fld0.fld0 = _44.0.fld0 >> _6;
_56 = _29;
_11 = _26;
(*_50) = _44.0.fld2 as i64;
Call(_49 = core::intrinsics::transmute(_25.3.fld0.fld4), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
(*_9) = 2561517315_u32 as i64;
_41 = core::ptr::addr_of_mut!(_44);
_5 = 49_i8 ^ 69_i8;
_55 = !(-149441981766175375945200989085229433428_i128);
_42 = (*_41).0.fld1 as isize;
(*_41) = Move(_25);
(*_41).3.fld0.fld0 = !(*_41).0.fld0;
(*_41).3.fld0.fld0 = (*_41).0.fld0 ^ (*_41).0.fld0;
(*_41).0.fld0 = (*_41).3.fld0.fld0;
(*_41).3.fld0.fld1 = (*_2) as u64;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_9));
_41 = core::ptr::addr_of_mut!((*_41));
(*_41).3.fld0.fld4 = (*_2) as i16;
(*_9) = (*_50) * _43;
(*_41).0.fld4 = _49;
(*_41).3.fld0.fld4 = (*_9) as i16;
(*_41).3.fld0.fld2 = (*_41).0.fld2 + (*_41).0.fld2;
_48 = -_28;
_25.3.fld0.fld0 = (*_41).3.fld0.fld0 << (*_41).3.fld0.fld0;
(*_41).3.fld0.fld1 = _16 as u64;
Goto(bb33)
}
bb33 = {
(*_41).0.fld1 = (*_41).3.fld0.fld1 & _31.fld0.fld1;
(*_41).0.fld4 = (*_41).3.fld0.fld4 + (*_41).3.fld0.fld4;
_27 = _6 >> (*_9);
(*_41).3.fld0.fld0 = (*_41).0.fld0 - (*_41).0.fld0;
_65 = (*_41).0.fld0 > (*_41).3.fld0.fld0;
_52.2 = &mut (*_50);
_33 = _7 as u128;
(*_9) = _43 & _43;
(*_41).3.fld0 = Adt26 { fld0: (*_41).0.fld0,fld1: (*_41).0.fld1,fld2: (*_41).0.fld2,fld3: Move((*_41).0.fld3),fld4: (*_41).0.fld4 };
(*_41).0.fld1 = (*_2) as u64;
(*_41).0.fld0 = (*_41).3.fld0.fld0 << (*_9);
(*_9) = _43 + _43;
(*_41).0.fld4 = (*_41).3.fld0.fld4;
(*_41).2 = _29;
(*_41).0.fld3 = core::ptr::addr_of!((*_9));
(*_41).0.fld4 = !(*_41).1;
(*_41).2 = _56;
Goto(bb34)
}
bb34 = {
(*_41).0.fld3 = core::ptr::addr_of!((*_9));
(*_41).0.fld0 = (*_41).3.fld0.fld0 | (*_41).3.fld0.fld0;
_67.2 = &_7;
_25.0 = Adt26 { fld0: (*_41).0.fld0,fld1: (*_41).3.fld0.fld1,fld2: (*_41).0.fld2,fld3: Move((*_41).0.fld3),fld4: (*_41).1 };
_42 = -_27;
(*_41).0.fld2 = (*_41).3.fld0.fld2 + _15;
(*_41).3 = Adt31 { fld0: Move(_25.0) };
(*_41).3.fld0.fld0 = (*_41).0.fld4 as usize;
_64 = [_22,_22];
(*_41).3.fld0.fld1 = _30 ^ (*_41).0.fld1;
(*_41).0.fld2 = (*_41).3.fld0.fld2 + (*_41).3.fld0.fld2;
(*_9) = _43 * _43;
_44.0 = Move((*_41).3.fld0);
(*_41).3 = Adt31 { fld0: Move((*_41).0) };
(*_41).3.fld0.fld0 = _31.fld0.fld0;
(*_41).3.fld0.fld0 = !_25.3.fld0.fld0;
(*_41).0.fld3 = core::ptr::addr_of!((*_9));
(*_41).0.fld2 = (*_41).3.fld0.fld2 - (*_41).3.fld0.fld2;
match _22 {
251 => bb36,
_ => bb35
}
}
bb35 = {
_29 = _25.2;
_25.2 = _29;
_25.0.fld1 = !_25.3.fld0.fld1;
_27 = _23 + _13;
(*_3) = _8;
_37 = [_25.3.fld0.fld1,_25.3.fld0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1,_25.0.fld1];
_23 = _27;
_27 = _23 ^ _23;
(*_3) = !_8;
_25.0.fld3 = core::ptr::addr_of!((*_3));
_19 = [1010495132_u32,558165321_u32,1614093072_u32];
_25.3.fld0.fld0 = !_1.fld0;
Goto(bb26)
}
bb36 = {
(*_41).0.fld3 = core::ptr::addr_of!((*_9));
(*_41).3.fld0.fld1 = _30;
(*_41).0.fld3 = Move((*_41).3.fld0.fld3);
_54 = _27 ^ _42;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_9));
_69 = _27;
(*_41).3.fld0.fld2 = (*_41).0.fld2;
(*_41).3.fld0.fld1 = 1749270081_u32 as u64;
(*_41).3.fld0.fld2 = (*_41).0.fld2 + (*_41).0.fld2;
Call(_59 = core::intrinsics::bswap((*_2)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
(*_41).3.fld0.fld1 = 1681817145_u32 as u64;
(*_41).0 = Move((*_41).3.fld0);
_31.fld0.fld3 = core::ptr::addr_of!((*_9));
_25.0.fld3 = core::ptr::addr_of!(RET);
(*_41).3.fld0.fld4 = (*_2) as i16;
(*_2) = (-126_i8) & 122_i8;
(*_41).0.fld0 = _31.fld0.fld0 << (*_9);
(*_41).1 = (*_41).0.fld4 | (*_41).0.fld4;
(*_41).3.fld0.fld2 = (*_41).0.fld2;
(*_41).0.fld2 = (*_41).3.fld0.fld2;
(*_2) = 37_i8;
(*_41).3.fld0.fld3 = core::ptr::addr_of!(_40);
_25.3.fld0.fld3 = core::ptr::addr_of!((*_9));
(*_41).0.fld1 = _30 ^ _1.fld1;
_2 = core::ptr::addr_of!((*_2));
(*_41).3.fld0.fld2 = (*_41).0.fld2;
(*_41).0.fld4 = _39 as i16;
(*_41).0.fld2 = -(*_41).3.fld0.fld2;
(*_41).3.fld0 = Move((*_41).0);
(*_41).3.fld0.fld0 = (*_41).2 as usize;
(*_41).3.fld0 = Adt26 { fld0: _25.3.fld0.fld0,fld1: _31.fld0.fld1,fld2: _31.fld0.fld2,fld3: Move(_31.fld0.fld3),fld4: (*_41).1 };
_35 = core::ptr::addr_of_mut!(_66);
match (*_2) {
37 => bb39,
_ => bb38
}
}
bb38 = {
_44.0.fld2 = _15;
_25.0.fld3 = core::ptr::addr_of!((*_9));
_2 = core::ptr::addr_of!((*_2));
_31 = Adt31 { fld0: Move(_1) };
(*_9) = !_43;
_31 = Move(_25.3);
Call((*_2) = core::intrinsics::bswap(120_i8), ReturnTo(bb30), UnwindUnreachable())
}
bb39 = {
(*_41).3.fld0.fld2 = _15 + _31.fld0.fld2;
(*_41).1 = (*_41).3.fld0.fld4 - _34;
(*_41).3.fld0 = Adt26 { fld0: _25.3.fld0.fld0,fld1: _1.fld1,fld2: _15,fld3: Move(_25.3.fld0.fld3),fld4: (*_41).1 };
(*_41).3.fld0.fld1 = _30;
_65 = _7;
(*_41).0.fld0 = (*_41).3.fld0.fld0 - (*_41).3.fld0.fld0;
(*_41).0 = Move((*_41).3.fld0);
(*_41).0.fld3 = core::ptr::addr_of!(_43);
(*_41).0.fld1 = _65 as u64;
(*_41).3.fld0 = Adt26 { fld0: (*_41).0.fld0,fld1: (*_41).0.fld1,fld2: (*_41).0.fld2,fld3: Move((*_41).0.fld3),fld4: (*_41).1 };
(*_41).3.fld0.fld0 = (*_41).0.fld0 ^ (*_41).0.fld0;
(*_2) = (-83_i8);
_62 = [(*_41).3.fld0.fld1,(*_41).0.fld1,(*_41).0.fld1,(*_41).0.fld1,(*_41).3.fld0.fld1,(*_41).0.fld1,(*_41).3.fld0.fld1];
_31 = Adt31 { fld0: Move((*_41).3.fld0) };
_63.1 = -(*_2);
_12 = (*_41).2;
(*_41).0.fld3 = core::ptr::addr_of!(_40);
(*_41).2 = _12;
(*_41).3 = Move(_31);
(*_41).1 = (*_9) as i16;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_9));
_2 = core::ptr::addr_of!((*_2));
(*_2) = _63.1 | _63.1;
_44.0.fld3 = Move((*_41).3.fld0.fld3);
Call(_1.fld1 = core::intrinsics::transmute((*_41).3.fld0.fld0), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
_57 = [(*_41).0.fld0];
(*_41).3.fld0.fld1 = (*_41).0.fld0 as u64;
_19 = [389032710_u32,3150365098_u32,2047968073_u32];
_25.3 = Adt31 { fld0: Move((*_41).0) };
_1.fld0 = !(*_41).3.fld0.fld0;
Goto(bb41)
}
bb41 = {
(*_41).2 = _29;
_5 = _63.1 >> (*_41).3.fld0.fld1;
(*_41).0.fld4 = !(*_41).3.fld0.fld4;
(*_41).2 = _29;
_44.3.fld0 = Move(_25.3.fld0);
(*_9) = _43 | _43;
(*_41).0.fld1 = !(*_41).3.fld0.fld1;
(*_41).0.fld2 = (*_41).3.fld0.fld1 as f64;
Call((*_35) = fn17(Move((*_41).3), Move(_41), Move(_67.2), _5, Move(_2), (*_41).0.fld1, _54, _29, Move(_35), _34, _23), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
_63.2 = &mut (*_9);
_1.fld1 = _44.0.fld1;
_60 = _54;
_42 = _54;
_82 = [_44.0.fld1,_30,_30,_44.0.fld1,_1.fld1,_1.fld1,_1.fld1];
_38 = &mut _43;
_67.2 = &_65;
_27 = _42 - _6;
_31.fld0.fld4 = _34;
_25.0.fld3 = core::ptr::addr_of!((*_38));
_67.0 = _44.0.fld2;
_89 = _12;
_42 = _69 - _60;
_67.3 = &_1.fld0;
_44.0.fld0 = _27 as usize;
_79 = [_33,_33];
Goto(bb43)
}
bb43 = {
_1.fld2 = _31.fld0.fld4 as f64;
_63.1 = _39 as i8;
_63.1 = !_5;
(*_38) = -RET;
_15 = _67.0;
_44.0.fld3 = Move(_25.0.fld3);
_73 = (*_38) as f32;
_70 = _11 ^ _26;
_86 = _32 < _65;
_41 = core::ptr::addr_of_mut!(_25);
Goto(bb44)
}
bb44 = {
(*_41).3.fld0.fld4 = -_44.1;
_25.0.fld3 = Move(_44.0.fld3);
(*_38) = RET + RET;
(*_41).0.fld3 = core::ptr::addr_of!((*_38));
(*_41).0.fld1 = _1.fld1 * _1.fld1;
_25.0.fld0 = !_44.0.fld0;
_57 = [(*_41).0.fld0];
(*_41).0.fld1 = _1.fld1 << (*_41).3.fld0.fld4;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_38));
(*_41).3.fld0.fld1 = (*_41).0.fld1 + (*_41).0.fld1;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_38));
(*_41).3.fld0.fld1 = (*_41).0.fld1;
_44.1 = (*_41).3.fld0.fld4;
(*_41).0 = Adt26 { fld0: _1.fld0,fld1: (*_41).3.fld0.fld1,fld2: _1.fld2,fld3: Move((*_41).3.fld0.fld3),fld4: (*_41).3.fld0.fld4 };
(*_38) = -RET;
(*_38) = !RET;
match _22 {
0 => bb45,
1 => bb46,
2 => bb47,
3 => bb48,
4 => bb49,
5 => bb50,
6 => bb51,
251 => bb53,
_ => bb52
}
}
bb45 = {
_8 = RET & RET;
_1.fld0 = 5_usize & 6_usize;
_13 = -_6;
Goto(bb9)
}
bb46 = {
Return()
}
bb47 = {
_8 = RET & RET;
_1.fld0 = 5_usize & 6_usize;
_13 = -_6;
Goto(bb9)
}
bb48 = {
(*_2) = 123_i8;
(*_2) = (-69_i8) ^ (-127_i8);
_1.fld0 = !5_usize;
_13 = (*_2) as isize;
(*_2) = -16_i8;
(*_2) = 62_i8 * 78_i8;
(*_2) = (*_10) as i8;
(*_2) = (-11_i8) ^ (-73_i8);
_5 = 29_i8 & (-95_i8);
(*_2) = (-31_i8) ^ 35_i8;
_3 = core::ptr::addr_of!(_8);
_2 = core::ptr::addr_of!((*_2));
(*_3) = RET;
(*_2) = 57_i8 << (*_3);
_16 = 1978468231_i32;
_8 = 3763657112_u32 as i64;
_8 = RET;
(*_2) = (-3_i8) | (-80_i8);
match _16 {
1978468231 => bb12,
_ => bb11
}
}
bb49 = {
Return()
}
bb50 = {
(*_9) = 2561517315_u32 as i64;
_41 = core::ptr::addr_of_mut!(_44);
_5 = 49_i8 ^ 69_i8;
_55 = !(-149441981766175375945200989085229433428_i128);
_42 = (*_41).0.fld1 as isize;
(*_41) = Move(_25);
(*_41).3.fld0.fld0 = !(*_41).0.fld0;
(*_41).3.fld0.fld0 = (*_41).0.fld0 ^ (*_41).0.fld0;
(*_41).0.fld0 = (*_41).3.fld0.fld0;
(*_41).3.fld0.fld1 = (*_2) as u64;
(*_41).3.fld0.fld3 = core::ptr::addr_of!((*_9));
_41 = core::ptr::addr_of_mut!((*_41));
(*_41).3.fld0.fld4 = (*_2) as i16;
(*_9) = (*_50) * _43;
(*_41).0.fld4 = _49;
(*_41).3.fld0.fld4 = (*_9) as i16;
(*_41).3.fld0.fld2 = (*_41).0.fld2 + (*_41).0.fld2;
_48 = -_28;
_25.3.fld0.fld0 = (*_41).3.fld0.fld0 << (*_41).3.fld0.fld0;
(*_41).3.fld0.fld1 = _16 as u64;
Goto(bb33)
}
bb51 = {
_3 = core::ptr::addr_of!((*_9));
(*_3) = _43 - _43;
(*_2) = _26 as i8;
Goto(bb29)
}
bb52 = {
(*_2) = (-91_i8) - (-58_i8);
(*_2) = (-37_i8) | (-20_i8);
_25.3.fld0.fld2 = _25.0.fld2;
_23 = _13 ^ _6;
(*_2) = !(-22_i8);
_25.1 = _25.0.fld4 * _31.fld0.fld4;
Call(_32 = fn16(Move(_2), Move(_25.3.fld0), Move(_10), Move(_21), _12, Move(_25.0), (*_2), _25.1, (*_2), Move(_9), _12, _22), ReturnTo(bb23), UnwindUnreachable())
}
bb53 = {
_31.fld0 = Move((*_41).0);
(*_41).0 = Adt26 { fld0: _31.fld0.fld0,fld1: (*_41).3.fld0.fld1,fld2: _1.fld2,fld3: Move(_31.fld0.fld3),fld4: _44.0.fld4 };
_87 = _79;
(*_41).0.fld1 = _44.2 as u64;
(*_41).3 = Adt31 { fld0: Move((*_41).0) };
(*_41).2 = _89;
_20 = core::ptr::addr_of_mut!((*_38));
(*_41).0 = Move((*_41).3.fld0);
_34 = (*_41).0.fld4 ^ _44.1;
(*_41).3.fld0.fld0 = !_25.0.fld0;
Goto(bb54)
}
bb54 = {
Call(_95 = dump_var(15_usize, 87_usize, Move(_87), 69_usize, Move(_69), 17_usize, Move(_17), 26_usize, Move(_26)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_95 = dump_var(15_usize, 54_usize, Move(_54), 13_usize, Move(_13), 37_usize, Move(_37), 16_usize, Move(_16)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_95 = dump_var(15_usize, 19_usize, Move(_19), 40_usize, Move(_40), 56_usize, Move(_56), 42_usize, Move(_42)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_95 = dump_var(15_usize, 12_usize, Move(_12), 11_usize, Move(_11), 30_usize, Move(_30), 79_usize, Move(_79)), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Call(_95 = dump_var(15_usize, 32_usize, Move(_32), 23_usize, Move(_23), 55_usize, Move(_55), 86_usize, Move(_86)), ReturnTo(bb59), UnwindUnreachable())
}
bb59 = {
Call(_95 = dump_var(15_usize, 5_usize, Move(_5), 96_usize, _96, 96_usize, _96, 96_usize, _96), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: *const i8,mut _2: Adt26,mut _3: &'static bool,mut _4: &'static f64,mut _5: char,mut _6: Adt26,mut _7: i8,mut _8: i16,mut _9: i8,mut _10: *mut i64,mut _11: char,mut _12: u8) -> bool {
mir! {
type RET = bool;
let _13: usize;
let _14: u32;
let _15: &'static mut (Adt26, i16, char, Adt31);
let _16: isize;
let _17: i16;
let _18: &'static mut i64;
let _19: f64;
let _20: &'static Adt43;
let _21: isize;
let _22: ();
let _23: ();
{
_6.fld2 = _2.fld2 - _2.fld2;
_2.fld4 = !_8;
_11 = _5;
_11 = _5;
_5 = _11;
_2.fld0 = 1145430884_u32 as usize;
_11 = _5;
_9 = !_7;
_6.fld4 = _2.fld4 << _2.fld1;
_14 = 89730044_u32 & 3996590494_u32;
_4 = &_2.fld2;
_2.fld2 = _6.fld2;
_2.fld3 = Move(_6.fld3);
_6 = Adt26 { fld0: _2.fld0,fld1: _2.fld1,fld2: _2.fld2,fld3: Move(_2.fld3),fld4: _8 };
Goto(bb1)
}
bb1 = {
_13 = _2.fld0 << _2.fld4;
_2 = Move(_6);
_7 = !_9;
_6.fld2 = _2.fld2 * _2.fld2;
Goto(bb2)
}
bb2 = {
_12 = 81_u8;
RET = _6.fld2 < _6.fld2;
_2.fld2 = 62192_u16 as f64;
_12 = 154_u8 - 43_u8;
_19 = _6.fld2 - _6.fld2;
_6.fld1 = _2.fld1 * _2.fld1;
_11 = _5;
_6.fld3 = Move(_2.fld3);
_2.fld1 = _6.fld1;
_2.fld4 = _8 * _8;
_6.fld0 = 231268788005942678699255048798027474862_u128 as usize;
_3 = &RET;
_13 = !_6.fld0;
_6.fld4 = (-192509662_i32) as i16;
_2.fld1 = _6.fld1 | _6.fld1;
_14 = _7 as u32;
_21 = 9223372036854775807_isize;
Goto(bb3)
}
bb3 = {
Call(_22 = dump_var(16_usize, 5_usize, Move(_5), 8_usize, Move(_8), 21_usize, Move(_21), 7_usize, Move(_7)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: Adt31,mut _2: *mut (Adt26, i16, char, Adt31),mut _3: &'static bool,mut _4: i8,mut _5: *const i8,mut _6: u64,mut _7: isize,mut _8: char,mut _9: *mut *mut (usize, i32),mut _10: i16,mut _11: isize) -> *mut (usize, i32) {
mir! {
type RET = *mut (usize, i32);
let _12: *const (i32, i8, &'static mut i64, &'static bool);
let _13: usize;
let _14: &'static *const (&'static isize, i8);
let _15: &'static mut (usize, i32);
let _16: f64;
let _17: *const (&'static bool,);
let _18: Adt31;
let _19: &'static usize;
let _20: &'static [u128; 2];
let _21: &'static mut &'static f64;
let _22: f64;
let _23: [i128; 2];
let _24: char;
let _25: f64;
let _26: &'static bool;
let _27: &'static bool;
let _28: i32;
let _29: *const (&'static isize, i8);
let _30: u8;
let _31: &'static Adt43;
let _32: char;
let _33: f32;
let _34: usize;
let _35: &'static mut (usize, i32);
let _36: usize;
let _37: [u8; 3];
let _38: i8;
let _39: f64;
let _40: usize;
let _41: &'static f32;
let _42: *const i64;
let _43: isize;
let _44: f64;
let _45: [u8; 3];
let _46: isize;
let _47: &'static mut [u16; 1];
let _48: bool;
let _49: i128;
let _50: &'static f64;
let _51: *const (&'static isize, i8);
let _52: bool;
let _53: usize;
let _54: [i16; 6];
let _55: bool;
let _56: isize;
let _57: char;
let _58: f32;
let _59: isize;
let _60: &'static &'static bool;
let _61: f64;
let _62: i128;
let _63: [u16; 1];
let _64: char;
let _65: [i16; 6];
let _66: Adt31;
let _67: char;
let _68: [i32; 8];
let _69: *const i8;
let _70: [i128; 2];
let _71: bool;
let _72: [i16; 8];
let _73: i64;
let _74: u64;
let _75: *const (i32, i8, &'static mut i64, &'static bool);
let _76: i128;
let _77: isize;
let _78: Adt73;
let _79: f64;
let _80: *const isize;
let _81: i8;
let _82: *const *const (&'static isize, i8);
let _83: *mut (usize, i32);
let _84: u16;
let _85: f32;
let _86: &'static *const i8;
let _87: [i32; 8];
let _88: i8;
let _89: i16;
let _90: u32;
let _91: *mut Adt26;
let _92: (*const *const (&'static isize, i8),);
let _93: (f64, &'static mut i64, &'static bool, &'static usize);
let _94: f32;
let _95: &'static mut (usize, i32);
let _96: u64;
let _97: *mut Adt25;
let _98: *mut (usize, i32);
let _99: *const isize;
let _100: *mut i64;
let _101: (isize,);
let _102: &'static &'static bool;
let _103: f64;
let _104: f32;
let _105: f64;
let _106: u16;
let _107: [u8; 2];
let _108: f32;
let _109: (*mut i64,);
let _110: bool;
let _111: i16;
let _112: Adt19;
let _113: *mut [u128; 2];
let _114: &'static mut &'static bool;
let _115: &'static mut &'static f64;
let _116: bool;
let _117: usize;
let _118: bool;
let _119: u8;
let _120: *mut i64;
let _121: &'static mut i64;
let _122: *const *const isize;
let _123: *const (&'static bool,);
let _124: &'static bool;
let _125: (Adt26, i16, char, Adt31);
let _126: i16;
let _127: &'static mut (Adt26, i16, char, Adt31);
let _128: f32;
let _129: &'static mut &'static bool;
let _130: [i16; 6];
let _131: &'static Adt43;
let _132: bool;
let _133: isize;
let _134: char;
let _135: Adt57;
let _136: *mut Adt25;
let _137: f64;
let _138: &'static mut (usize, i32);
let _139: *const *const isize;
let _140: &'static *mut Adt26;
let _141: u16;
let _142: &'static mut [u16; 1];
let _143: *const *const (&'static isize, i8);
let _144: &'static &'static bool;
let _145: *mut (Adt26, i16, char, Adt31);
let _146: bool;
let _147: [u16; 3];
let _148: *mut i64;
let _149: &'static mut i64;
let _150: u16;
let _151: &'static isize;
let _152: [bool; 8];
let _153: *mut (Adt26, i16, char, Adt31);
let _154: [u128; 2];
let _155: (usize, i32);
let _156: i64;
let _157: (usize, i32);
let _158: ();
let _159: ();
{
_1.fld0.fld0 = _1.fld0.fld2 as usize;
_9 = core::ptr::addr_of_mut!(RET);
_5 = core::ptr::addr_of!(_4);
_5 = core::ptr::addr_of!((*_5));
(*_5) = (-92_i8);
(*_5) = -(-123_i8);
(*_5) = 50245_u16 as i8;
_10 = !_1.fld0.fld4;
_10 = _1.fld0.fld4 ^ _1.fld0.fld4;
(*_5) = (-123_i8) | (-97_i8);
_7 = _1.fld0.fld4 as isize;
(*_5) = 185693389_i32 as i8;
(*_5) = _6 as i8;
_5 = core::ptr::addr_of!((*_5));
(*_5) = 99_i8;
(*_5) = (-74508380290364110104700216158300967507_i128) as i8;
(*_5) = 99_i8 ^ (-103_i8);
_1.fld0.fld2 = 56785_u16 as f64;
_16 = (*_5) as f64;
_1.fld0.fld0 = !9938091514044401992_usize;
(*_5) = (-123_i8);
(*_5) = 3_i8 >> _7;
(*_5) = -103_i8;
(*_5) = !18_i8;
(*_5) = (-126_i8) * 92_i8;
(*_5) = -(-27_i8);
Goto(bb1)
}
bb1 = {
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = (-67_i8) >> _1.fld0.fld1;
_13 = _1.fld0.fld0 & _1.fld0.fld0;
(*_5) = (-13_i8) ^ (-49_i8);
(*_5) = (-1_i8) & (-103_i8);
_16 = _1.fld0.fld2 + _1.fld0.fld2;
_1.fld0.fld2 = _16 + _16;
(*_5) = -(-11_i8);
(*_5) = -11_i8;
_8 = '\u{dc7d0}';
_18.fld0.fld2 = -_1.fld0.fld2;
(*_5) = 11_i8 * (-26_i8);
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = 95_i8;
_1.fld0.fld3 = Move(_18.fld0.fld3);
(*_5) = 20_i8 >> _10;
_18 = Adt31 { fld0: Move(_1.fld0) };
(*_5) = false as i8;
_1.fld0 = Adt26 { fld0: _13,fld1: _6,fld2: _16,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
_1.fld0.fld1 = _18.fld0.fld1 - _18.fld0.fld1;
_11 = _1.fld0.fld4 as isize;
(*_5) = 3334203617_u32 as i8;
Goto(bb2)
}
bb2 = {
_4 = (-26_i8);
_19 = &_18.fld0.fld0;
(*_5) = (-36_i8) & 73_i8;
_18.fld0.fld1 = 204_u8 as u64;
_18 = Move(_1);
(*_5) = 95_i8 * 72_i8;
(*_5) = 66_i8 >> _11;
_18.fld0.fld4 = _13 as i16;
_18.fld0.fld4 = !_10;
_1.fld0 = Move(_18.fld0);
_5 = core::ptr::addr_of!((*_5));
_18.fld0.fld1 = _13 as u64;
_19 = &_13;
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = 90_i8 >> _11;
_18.fld0.fld2 = _16 - _1.fld0.fld2;
(*_5) = 79_i8;
_13 = _1.fld0.fld0;
(*_5) = 86_i8 ^ 67_i8;
Goto(bb3)
}
bb3 = {
_18 = Move(_1);
_1.fld0 = Move(_18.fld0);
_1.fld0.fld0 = !_13;
(*_5) = !15_i8;
_18.fld0.fld4 = _10 + _1.fld0.fld4;
_22 = _16 * _16;
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = (-14_i8);
_6 = _1.fld0.fld1 >> _1.fld0.fld1;
(*_5) = -125_i8;
_23 = [119830011139613084552866625941678466952_i128,75023871151680555656889223961457948948_i128];
_23 = [(-164653502784642936905757754651588257774_i128),(-47428553735761324602406327520839522534_i128)];
_18.fld0.fld2 = _16 + _16;
_24 = _8;
_13 = _1.fld0.fld0 - _1.fld0.fld0;
_1.fld0.fld4 = 1812264898_i32 as i16;
_4 = (-119_i8) ^ 15_i8;
(*_5) = 50494_u16 as i8;
(*_5) = (-51_i8) & 59_i8;
_6 = !_1.fld0.fld1;
(*_5) = _1.fld0.fld0 as i8;
(*_5) = 25_i8 | (-63_i8);
_18.fld0.fld0 = _1.fld0.fld0;
_23 = [132387926837624895133948253169972142900_i128,(-51874799715616126249269616488320608234_i128)];
Goto(bb4)
}
bb4 = {
_1.fld0 = Adt26 { fld0: _13,fld1: _6,fld2: _22,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
(*_5) = 69_i8;
_18.fld0.fld1 = 34784030_i32 as u64;
(*_5) = (-24_i8);
_10 = !_18.fld0.fld4;
_16 = -_18.fld0.fld2;
_18.fld0.fld2 = _16 + _16;
_28 = 1097719636_i32;
_23 = [5637733835290287475793674951795269587_i128,91782935816058998287430668536912107012_i128];
match (*_5) {
340282366920938463463374607431768211432 => bb5,
_ => bb3
}
}
bb5 = {
(*_5) = (-95_i8) | 42_i8;
(*_5) = _18.fld0.fld2 as i8;
_28 = (-1609642476_i32);
_28 = 1907026556_i32;
_16 = -_1.fld0.fld2;
_1.fld0.fld0 = !_13;
(*_5) = _1.fld0.fld4 as i8;
_22 = _1.fld0.fld2;
_9 = core::ptr::addr_of_mut!((*_9));
match _28 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
1907026556 => bb9,
_ => bb8
}
}
bb6 = {
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = (-67_i8) >> _1.fld0.fld1;
_13 = _1.fld0.fld0 & _1.fld0.fld0;
(*_5) = (-13_i8) ^ (-49_i8);
(*_5) = (-1_i8) & (-103_i8);
_16 = _1.fld0.fld2 + _1.fld0.fld2;
_1.fld0.fld2 = _16 + _16;
(*_5) = -(-11_i8);
(*_5) = -11_i8;
_8 = '\u{dc7d0}';
_18.fld0.fld2 = -_1.fld0.fld2;
(*_5) = 11_i8 * (-26_i8);
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = 95_i8;
_1.fld0.fld3 = Move(_18.fld0.fld3);
(*_5) = 20_i8 >> _10;
_18 = Adt31 { fld0: Move(_1.fld0) };
(*_5) = false as i8;
_1.fld0 = Adt26 { fld0: _13,fld1: _6,fld2: _16,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
_1.fld0.fld1 = _18.fld0.fld1 - _18.fld0.fld1;
_11 = _1.fld0.fld4 as isize;
(*_5) = 3334203617_u32 as i8;
Goto(bb2)
}
bb7 = {
_18 = Move(_1);
_1.fld0 = Move(_18.fld0);
_1.fld0.fld0 = !_13;
(*_5) = !15_i8;
_18.fld0.fld4 = _10 + _1.fld0.fld4;
_22 = _16 * _16;
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = (-14_i8);
_6 = _1.fld0.fld1 >> _1.fld0.fld1;
(*_5) = -125_i8;
_23 = [119830011139613084552866625941678466952_i128,75023871151680555656889223961457948948_i128];
_23 = [(-164653502784642936905757754651588257774_i128),(-47428553735761324602406327520839522534_i128)];
_18.fld0.fld2 = _16 + _16;
_24 = _8;
_13 = _1.fld0.fld0 - _1.fld0.fld0;
_1.fld0.fld4 = 1812264898_i32 as i16;
_4 = (-119_i8) ^ 15_i8;
(*_5) = 50494_u16 as i8;
(*_5) = (-51_i8) & 59_i8;
_6 = !_1.fld0.fld1;
(*_5) = _1.fld0.fld0 as i8;
(*_5) = 25_i8 | (-63_i8);
_18.fld0.fld0 = _1.fld0.fld0;
_23 = [132387926837624895133948253169972142900_i128,(-51874799715616126249269616488320608234_i128)];
Goto(bb4)
}
bb8 = {
_4 = (-26_i8);
_19 = &_18.fld0.fld0;
(*_5) = (-36_i8) & 73_i8;
_18.fld0.fld1 = 204_u8 as u64;
_18 = Move(_1);
(*_5) = 95_i8 * 72_i8;
(*_5) = 66_i8 >> _11;
_18.fld0.fld4 = _13 as i16;
_18.fld0.fld4 = !_10;
_1.fld0 = Move(_18.fld0);
_5 = core::ptr::addr_of!((*_5));
_18.fld0.fld1 = _13 as u64;
_19 = &_13;
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = 90_i8 >> _11;
_18.fld0.fld2 = _16 - _1.fld0.fld2;
(*_5) = 79_i8;
_13 = _1.fld0.fld0;
(*_5) = 86_i8 ^ 67_i8;
Goto(bb3)
}
bb9 = {
_4 = 95_i8 ^ (-24_i8);
_33 = (-9110354983815692631_i64) as f32;
_34 = _13 >> _11;
_1.fld0.fld0 = _34;
_1.fld0.fld2 = -_16;
match _28 {
1907026556 => bb10,
_ => bb2
}
}
bb10 = {
_30 = 102_u8;
(*_5) = (-125_i8);
(*_5) = 21_i8 * (-111_i8);
_33 = _18.fld0.fld2 as f32;
_24 = _8;
_6 = !_1.fld0.fld1;
_18.fld0.fld2 = _16 * _1.fld0.fld2;
_28 = (-1924260174_i32);
_24 = _8;
(*_5) = (-8_i8) + 59_i8;
_7 = _11 * _11;
(*_5) = _11 as i8;
(*_5) = 87_i8 << _1.fld0.fld1;
_18.fld0 = Move(_1.fld0);
_18.fld0.fld2 = _16 - _22;
_1.fld0.fld3 = Move(_18.fld0.fld3);
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = (-114_i8) << _7;
_24 = _8;
match _28 {
0 => bb11,
340282366920938463463374607429843951282 => bb13,
_ => bb12
}
}
bb11 = {
_4 = 95_i8 ^ (-24_i8);
_33 = (-9110354983815692631_i64) as f32;
_34 = _13 >> _11;
_1.fld0.fld0 = _34;
_1.fld0.fld2 = -_16;
match _28 {
1907026556 => bb10,
_ => bb2
}
}
bb12 = {
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = (-67_i8) >> _1.fld0.fld1;
_13 = _1.fld0.fld0 & _1.fld0.fld0;
(*_5) = (-13_i8) ^ (-49_i8);
(*_5) = (-1_i8) & (-103_i8);
_16 = _1.fld0.fld2 + _1.fld0.fld2;
_1.fld0.fld2 = _16 + _16;
(*_5) = -(-11_i8);
(*_5) = -11_i8;
_8 = '\u{dc7d0}';
_18.fld0.fld2 = -_1.fld0.fld2;
(*_5) = 11_i8 * (-26_i8);
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = 95_i8;
_1.fld0.fld3 = Move(_18.fld0.fld3);
(*_5) = 20_i8 >> _10;
_18 = Adt31 { fld0: Move(_1.fld0) };
(*_5) = false as i8;
_1.fld0 = Adt26 { fld0: _13,fld1: _6,fld2: _16,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
_1.fld0.fld1 = _18.fld0.fld1 - _18.fld0.fld1;
_11 = _1.fld0.fld4 as isize;
(*_5) = 3334203617_u32 as i8;
Goto(bb2)
}
bb13 = {
_7 = _11 + _11;
match _30 {
102 => bb15,
_ => bb14
}
}
bb14 = {
_16 = _1.fld0.fld2 + _1.fld0.fld2;
(*_5) = (-67_i8) >> _1.fld0.fld1;
_13 = _1.fld0.fld0 & _1.fld0.fld0;
(*_5) = (-13_i8) ^ (-49_i8);
(*_5) = (-1_i8) & (-103_i8);
_16 = _1.fld0.fld2 + _1.fld0.fld2;
_1.fld0.fld2 = _16 + _16;
(*_5) = -(-11_i8);
(*_5) = -11_i8;
_8 = '\u{dc7d0}';
_18.fld0.fld2 = -_1.fld0.fld2;
(*_5) = 11_i8 * (-26_i8);
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = 95_i8;
_1.fld0.fld3 = Move(_18.fld0.fld3);
(*_5) = 20_i8 >> _10;
_18 = Adt31 { fld0: Move(_1.fld0) };
(*_5) = false as i8;
_1.fld0 = Adt26 { fld0: _13,fld1: _6,fld2: _16,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
_1.fld0.fld1 = _18.fld0.fld1 - _18.fld0.fld1;
_11 = _1.fld0.fld4 as isize;
(*_5) = 3334203617_u32 as i8;
Goto(bb2)
}
bb15 = {
_18.fld0.fld4 = _10;
(*_5) = _28 as i8;
_23 = [28610330405134110296209765632090647028_i128,1767098232516694836815706684514230749_i128];
_23 = [(-30747876031142053442715231248158493528_i128),109863783083928584533036299607756629935_i128];
(*_5) = (-36_i8) & 39_i8;
_30 = 28_u8 | 189_u8;
_25 = -_16;
_6 = _18.fld0.fld1 | _18.fld0.fld1;
_24 = _8;
(*_5) = 117_i8 ^ (-112_i8);
(*_5) = (-59_i8) | 63_i8;
_39 = _18.fld0.fld2;
_36 = _30 as usize;
_1.fld0.fld2 = _39 * _16;
_5 = core::ptr::addr_of!(_38);
(*_5) = _4 ^ _4;
_10 = false as i16;
(*_5) = _4;
_40 = _34 + _34;
match _28 {
0 => bb14,
1 => bb2,
2 => bb16,
3 => bb17,
340282366920938463463374607429843951282 => bb19,
_ => bb18
}
}
bb16 = {
_18 = Move(_1);
_1.fld0 = Move(_18.fld0);
_1.fld0.fld0 = !_13;
(*_5) = !15_i8;
_18.fld0.fld4 = _10 + _1.fld0.fld4;
_22 = _16 * _16;
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = (-14_i8);
_6 = _1.fld0.fld1 >> _1.fld0.fld1;
(*_5) = -125_i8;
_23 = [119830011139613084552866625941678466952_i128,75023871151680555656889223961457948948_i128];
_23 = [(-164653502784642936905757754651588257774_i128),(-47428553735761324602406327520839522534_i128)];
_18.fld0.fld2 = _16 + _16;
_24 = _8;
_13 = _1.fld0.fld0 - _1.fld0.fld0;
_1.fld0.fld4 = 1812264898_i32 as i16;
_4 = (-119_i8) ^ 15_i8;
(*_5) = 50494_u16 as i8;
(*_5) = (-51_i8) & 59_i8;
_6 = !_1.fld0.fld1;
(*_5) = _1.fld0.fld0 as i8;
(*_5) = 25_i8 | (-63_i8);
_18.fld0.fld0 = _1.fld0.fld0;
_23 = [132387926837624895133948253169972142900_i128,(-51874799715616126249269616488320608234_i128)];
Goto(bb4)
}
bb17 = {
_4 = 95_i8 ^ (-24_i8);
_33 = (-9110354983815692631_i64) as f32;
_34 = _13 >> _11;
_1.fld0.fld0 = _34;
_1.fld0.fld2 = -_16;
match _28 {
1907026556 => bb10,
_ => bb2
}
}
bb18 = {
(*_5) = (-95_i8) | 42_i8;
(*_5) = _18.fld0.fld2 as i8;
_28 = (-1609642476_i32);
_28 = 1907026556_i32;
_16 = -_1.fld0.fld2;
_1.fld0.fld0 = !_13;
(*_5) = _1.fld0.fld4 as i8;
_22 = _1.fld0.fld2;
_9 = core::ptr::addr_of_mut!((*_9));
match _28 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
1907026556 => bb9,
_ => bb8
}
}
bb19 = {
_1.fld0.fld3 = Move(_18.fld0.fld3);
_1.fld0.fld2 = _39 - _16;
_1.fld0.fld0 = _34 & _34;
_18.fld0 = Adt26 { fld0: _1.fld0.fld0,fld1: _6,fld2: _1.fld0.fld2,fld3: Move(_1.fld0.fld3),fld4: _10 };
Goto(bb20)
}
bb20 = {
_1.fld0.fld3 = Move(_18.fld0.fld3);
(*_5) = _4 ^ _4;
Goto(bb21)
}
bb21 = {
(*_5) = _25 as i8;
_36 = _18.fld0.fld0 - _18.fld0.fld0;
Goto(bb22)
}
bb22 = {
_8 = _24;
(*_5) = _8 as i8;
_18.fld0.fld3 = Move(_1.fld0.fld3);
_5 = core::ptr::addr_of!((*_5));
_40 = _1.fld0.fld0 << _18.fld0.fld0;
_1 = Move(_18);
_42 = Move(_1.fld0.fld3);
_18.fld0.fld0 = _36 >> _40;
_34 = _40 - _1.fld0.fld0;
(*_5) = 637948446_u32 as i8;
(*_5) = !_4;
(*_5) = _4 & _4;
_44 = _1.fld0.fld2 + _22;
_8 = _24;
(*_5) = _4;
_43 = _28 as isize;
(*_5) = -_4;
_23 = [(-107572899973126050687444910607097543894_i128),117063751596963018204610002646729774187_i128];
match _28 {
0 => bb15,
1 => bb7,
2 => bb21,
340282366920938463463374607429843951282 => bb23,
_ => bb19
}
}
bb23 = {
_44 = _39 * _16;
_37 = [_30,_30,_30];
_18.fld0.fld4 = _1.fld0.fld4;
_6 = (*_5) as u64;
(*_5) = _4 | _4;
_18.fld0.fld1 = _1.fld0.fld1 | _1.fld0.fld1;
_41 = &_33;
_1.fld0.fld1 = !_18.fld0.fld1;
_45 = _37;
(*_5) = _4 - _4;
_38 = _1.fld0.fld4 as i8;
_23 = [(-38353149564829267494404727817779125486_i128),89355556873719997777576044742337658039_i128];
(*_5) = _4 + _4;
_22 = 3598290977_u32 as f64;
_38 = _4;
_28 = !940482168_i32;
_13 = _34 & _40;
(*_5) = _4 ^ _4;
(*_5) = _4;
_34 = _13 * _40;
(*_5) = !_4;
(*_5) = _4 & _4;
Goto(bb24)
}
bb24 = {
_22 = _44 - _1.fld0.fld2;
_1.fld0 = Adt26 { fld0: _13,fld1: _18.fld0.fld1,fld2: _22,fld3: Move(_42),fld4: _18.fld0.fld4 };
_38 = _4 + _4;
_5 = core::ptr::addr_of!((*_5));
(*_5) = _4;
_1.fld0.fld4 = _18.fld0.fld4;
_18.fld0.fld3 = Move(_1.fld0.fld3);
(*_5) = _4;
_44 = _1.fld0.fld2;
(*_5) = _4 + _4;
_48 = _18.fld0.fld1 >= _1.fld0.fld1;
_19 = &_34;
(*_5) = _30 as i8;
_1.fld0.fld0 = !(*_19);
_5 = core::ptr::addr_of!((*_5));
_1.fld0.fld3 = Move(_18.fld0.fld3);
_26 = &_48;
_38 = _4 ^ _4;
(*_5) = _4;
_33 = 67151744402114734209744458569239619867_i128 as f32;
_16 = _22 + _22;
_16 = 22417_u16 as f64;
_18.fld0.fld1 = !_1.fld0.fld1;
_6 = _28 as u64;
_44 = _39 + _22;
(*_5) = _4 * _4;
_18 = Move(_1);
Goto(bb25)
}
bb25 = {
_27 = Move(_26);
_32 = _8;
_3 = &_48;
_19 = &_36;
(*_5) = !_4;
_49 = 162417039063655573577555504186332688611_i128 - 85078418063488378583017719640577214770_i128;
_7 = _11;
Goto(bb26)
}
bb26 = {
(*_5) = _4 << _13;
_45 = [_30,_30,_30];
_39 = -_44;
_53 = (*_19) << (*_19);
_1.fld0.fld2 = _11 as f64;
_30 = _49 as u8;
_13 = (*_19) & (*_19);
(*_5) = _32 as i8;
_37 = _45;
_55 = (*_3) & (*_3);
_36 = _34 - _18.fld0.fld0;
(*_5) = _4;
Goto(bb27)
}
bb27 = {
_28 = _33 as i32;
_48 = _55;
(*_5) = _4 << _34;
(*_5) = _4 << _18.fld0.fld0;
(*_5) = _4 << _7;
_39 = _28 as f64;
(*_5) = _4 * _4;
_52 = _13 <= _34;
(*_5) = _4 * _4;
_46 = _7 >> _18.fld0.fld0;
(*_5) = _4;
(*_5) = _4 * _4;
_26 = &_55;
_52 = (*_26);
_1.fld0.fld1 = !_18.fld0.fld1;
Goto(bb28)
}
bb28 = {
_23 = [_49,_49];
_9 = core::ptr::addr_of_mut!((*_9));
_16 = _28 as f64;
_57 = _24;
(*_5) = _4 | _4;
_54 = [_18.fld0.fld4,_18.fld0.fld4,_10,_10,_10,_10];
(*_5) = !_4;
_18.fld0.fld2 = _44 - _22;
(*_5) = _4 - _4;
_18.fld0.fld1 = !_1.fld0.fld1;
(*_5) = _4 >> _46;
_18.fld0.fld0 = !_40;
(*_5) = !_4;
_58 = _33 * _33;
(*_5) = 2130265812_u32 as i8;
_10 = _18.fld0.fld4 | _18.fld0.fld4;
Goto(bb29)
}
bb29 = {
_46 = _11 << _7;
_22 = _18.fld0.fld2;
_62 = _49;
_42 = Move(_18.fld0.fld3);
_26 = Move(_3);
_50 = &_16;
_18.fld0.fld0 = _53 ^ _34;
_43 = -_7;
(*_5) = _4 | _4;
_5 = core::ptr::addr_of!((*_5));
_1.fld0.fld3 = Move(_42);
_18.fld0.fld0 = _13 | _36;
_1.fld0.fld4 = _18.fld0.fld4 >> _7;
_1.fld0.fld4 = _10;
(*_5) = _4 ^ _4;
(*_5) = _4 | _4;
_18.fld0.fld3 = Move(_1.fld0.fld3);
_54 = [_18.fld0.fld4,_1.fld0.fld4,_1.fld0.fld4,_18.fld0.fld4,_10,_1.fld0.fld4];
(*_5) = _4;
_37 = [_30,_30,_30];
_16 = _44 - _22;
_1.fld0.fld3 = Move(_18.fld0.fld3);
_59 = _7 & _11;
_1.fld0.fld1 = !_18.fld0.fld1;
_22 = _25 * _1.fld0.fld2;
(*_5) = -_4;
_5 = core::ptr::addr_of!((*_5));
_18.fld0 = Adt26 { fld0: _40,fld1: _1.fld0.fld1,fld2: _1.fld0.fld2,fld3: Move(_1.fld0.fld3),fld4: _10 };
_33 = _58 + _58;
Goto(bb30)
}
bb30 = {
_25 = 41103_u16 as f64;
Goto(bb31)
}
bb31 = {
(*_5) = _4;
_57 = _8;
_19 = &_53;
Goto(bb32)
}
bb32 = {
_58 = _33;
_57 = _24;
_13 = _18.fld0.fld0;
_1.fld0.fld1 = _18.fld0.fld1 << (*_19);
_32 = _24;
_18.fld0.fld1 = _1.fld0.fld1;
_53 = !_13;
_19 = &_34;
_46 = !_59;
(*_5) = _4;
Goto(bb33)
}
bb33 = {
_36 = (*_19) << _11;
_63 = [49768_u16];
_67 = _57;
_21 = &mut _50;
(*_5) = _4 | _4;
_24 = _57;
_68 = [_28,_28,_28,_28,_28,_28,_28,_28];
_54 = [_18.fld0.fld4,_1.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_10,_18.fld0.fld4];
_56 = _46 >> (*_19);
_26 = &_55;
_1.fld0.fld3 = Move(_18.fld0.fld3);
Goto(bb34)
}
bb34 = {
(*_21) = &_18.fld0.fld2;
_25 = (*_19) as f64;
_65 = [_10,_18.fld0.fld4,_1.fld0.fld4,_18.fld0.fld4,_1.fld0.fld4,_10];
_69 = core::ptr::addr_of!((*_5));
(*_69) = (*_26) as i8;
_66.fld0.fld0 = (*_19) | (*_19);
(*_21) = &_16;
(*_69) = !_4;
_52 = (*_26);
_7 = _46 >> _18.fld0.fld1;
_66.fld0.fld4 = !_1.fld0.fld4;
_1.fld0.fld2 = 19161_u16 as f64;
_36 = (*_19);
_18.fld0 = Adt26 { fld0: (*_19),fld1: _1.fld0.fld1,fld2: _22,fld3: Move(_1.fld0.fld3),fld4: _66.fld0.fld4 };
_64 = _24;
(*_21) = &_39;
Goto(bb35)
}
bb35 = {
_73 = _49 as i64;
(*_69) = !_4;
_1.fld0.fld0 = 1554434039_u32 as usize;
_61 = -_25;
(*_21) = &_22;
_39 = _61 - _61;
(*_5) = _4 - _4;
(*_5) = 44747_u16 as i8;
(*_21) = &_61;
(*_21) = &_22;
(*_21) = &_39;
(*_21) = &_61;
_47 = &mut _63;
(*_47) = [4455_u16];
_36 = _13 | (*_19);
_18.fld0.fld4 = _1.fld0.fld4 >> (*_19);
(*_47) = [36784_u16];
(*_5) = _22 as i8;
_72 = [_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4];
(*_47) = [23035_u16];
_57 = _64;
_73 = _7 as i64;
_30 = !103_u8;
Goto(bb36)
}
bb36 = {
(*_21) = &_22;
(*_5) = !_4;
_1.fld0.fld3 = core::ptr::addr_of!(_73);
(*_5) = _28 as i8;
_56 = _59;
_68 = [_28,_28,_28,_28,_28,_28,_28,_28];
_68 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*_47) = [51422_u16];
_77 = -_46;
_11 = _7 >> _7;
_70 = _23;
(*_47) = [17467_u16];
(*_47) = [20578_u16];
_45 = _37;
_69 = core::ptr::addr_of!((*_5));
(*_5) = -_4;
(*_5) = _4 - _4;
_69 = core::ptr::addr_of!((*_5));
(*_47) = [2026_u16];
(*_5) = _4 & _4;
_55 = !_48;
_74 = !_1.fld0.fld1;
_18.fld0.fld2 = _22;
_26 = &_52;
Goto(bb37)
}
bb37 = {
(*_47) = [38004_u16];
_18.fld0.fld2 = _33 as f64;
_1.fld0 = Adt26 { fld0: (*_19),fld1: _18.fld0.fld1,fld2: _25,fld3: Move(_18.fld0.fld3),fld4: _18.fld0.fld4 };
_71 = (*_26) >= (*_26);
(*_5) = _4 & _4;
_18.fld0.fld0 = (*_19) - (*_19);
_11 = _46 << (*_19);
(*_21) = &_18.fld0.fld2;
_41 = &_58;
_1.fld0.fld1 = !_18.fld0.fld1;
_18.fld0.fld3 = core::ptr::addr_of!(_73);
(*_47) = [48206_u16];
(*_5) = _4;
Call(_68 = fn18(Move((*_21)), Move(_18.fld0.fld3), Move(_19), Move(_26), _73, Move(_1.fld0), _46, (*_5)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
_32 = _57;
(*_5) = _73 as i8;
(*_5) = _4 >> _56;
_1.fld0.fld4 = -_18.fld0.fld4;
_23 = [_49,_49];
_18.fld0.fld1 = 683718808_u32 as u64;
_1.fld0.fld3 = core::ptr::addr_of!(_73);
_1.fld0.fld2 = _39 + _25;
(*_5) = _4 - _4;
(*_5) = _74 as i8;
_80 = core::ptr::addr_of!(_43);
(*_47) = [13889_u16];
_1.fld0.fld0 = _53;
(*_5) = !_4;
_22 = _61;
(*_80) = _7 << _46;
Goto(bb39)
}
bb39 = {
(*_47) = [21335_u16];
_67 = _57;
_50 = &_1.fld0.fld2;
_66.fld0.fld1 = _62 as u64;
(*_5) = _74 as i8;
_81 = !_38;
(*_80) = _46 + _11;
(*_80) = _77 - _7;
_79 = (*_50);
_69 = Move(_5);
_18.fld0.fld4 = _1.fld0.fld4 & _1.fld0.fld4;
_34 = !_53;
_67 = _32;
_64 = _67;
(*_80) = _7 - _77;
_62 = _49 * _49;
_26 = &_71;
(*_47) = [50120_u16];
(*_80) = _56 * _56;
_1.fld0.fld1 = _74 + _74;
_55 = !(*_26);
Goto(bb40)
}
bb40 = {
_3 = &(*_26);
(*_80) = -_11;
_34 = (*_26) as usize;
(*_47) = [64834_u16];
_68 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*_47) = [39669_u16];
_19 = &_18.fld0.fld0;
_18.fld0.fld3 = core::ptr::addr_of!(_73);
_67 = _57;
_82 = core::ptr::addr_of!(_51);
(*_47) = [4426_u16];
_87 = [_28,_28,_28,_28,_28,_28,_28,_28];
_19 = &_40;
Call(_34 = core::intrinsics::transmute((*_80)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
(*_80) = _77 >> _56;
_38 = _81;
_86 = &_69;
_11 = (*_80) >> _1.fld0.fld4;
_10 = _1.fld0.fld4;
(*_47) = [247_u16];
(*_47) = [9632_u16];
_48 = (*_19) < (*_19);
_53 = _36;
_16 = (*_50);
_26 = &_48;
_16 = _25 - (*_50);
(*_80) = _77 >> _11;
_6 = _74 * _1.fld0.fld1;
_1.fld0.fld1 = !_74;
(*_47) = [11861_u16];
_67 = _8;
_92.0 = core::ptr::addr_of!((*_82));
_91 = core::ptr::addr_of_mut!(_66.fld0);
_53 = (*_19);
(*_91).fld2 = (*_50) + (*_50);
(*_47) = [41760_u16];
Goto(bb42)
}
bb42 = {
_59 = !(*_80);
(*_91).fld0 = (*_19) >> _1.fld0.fld0;
(*_91).fld2 = _16 + (*_50);
_84 = 38407_u16 & 65449_u16;
(*_91).fld3 = core::ptr::addr_of!(_73);
_18.fld0.fld2 = _30 as f64;
_85 = _84 as f32;
(*_80) = _59 - _46;
_6 = _74 * _1.fld0.fld1;
(*_91).fld0 = (*_19);
_100 = core::ptr::addr_of_mut!(_73);
_8 = _64;
_25 = (*_50) * _66.fld0.fld2;
(*_91).fld1 = _1.fld0.fld1 ^ _74;
(*_91).fld3 = core::ptr::addr_of!((*_100));
(*_91).fld4 = (*_100) as i16;
(*_91).fld0 = (*_50) as usize;
_59 = _30 as isize;
(*_91).fld0 = (*_19);
(*_91).fld2 = _79;
(*_91).fld4 = _10 ^ _1.fld0.fld4;
_66.fld0.fld1 = _24 as u64;
(*_91).fld4 = _10 ^ _18.fld0.fld4;
Goto(bb43)
}
bb43 = {
(*_91).fld2 = (*_41) as f64;
(*_91).fld4 = -_18.fld0.fld4;
(*_91).fld0 = !(*_19);
_1.fld0.fld0 = (*_91).fld0;
(*_100) = (*_26) as i64;
_103 = -(*_50);
(*_91).fld3 = core::ptr::addr_of!((*_100));
_96 = _6 + _1.fld0.fld1;
(*_91).fld2 = (*_50) + (*_50);
(*_100) = _62 as i64;
(*_91).fld4 = _18.fld0.fld4;
_91 = core::ptr::addr_of_mut!((*_91));
(*_91).fld1 = _74 * _6;
_79 = -_25;
(*_91).fld4 = -_18.fld0.fld4;
(*_91) = Move(_18.fld0);
Goto(bb44)
}
bb44 = {
(*_91).fld2 = (*_50) + _79;
_8 = _24;
_5 = core::ptr::addr_of!(_4);
(*_91) = Adt26 { fld0: _34,fld1: _96,fld2: (*_50),fld3: Move(_1.fld0.fld3),fld4: _10 };
(*_91).fld1 = _96 - _6;
Goto(bb45)
}
bb45 = {
_76 = _28 as i128;
(*_91).fld0 = (*_19) ^ (*_19);
(*_91).fld3 = core::ptr::addr_of!((*_100));
(*_91).fld0 = (*_91).fld4 as usize;
(*_91).fld4 = _10;
(*_91).fld2 = _43 as f64;
(*_91).fld1 = _6 | _96;
_32 = _8;
_18.fld0.fld0 = !(*_91).fld0;
_99 = Move(_80);
_92.0 = core::ptr::addr_of!((*_82));
(*_47) = [_84];
_87 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*_91).fld0 = !(*_19);
(*_100) = 176333184309714142193635823775037386499_u128 as i64;
_90 = 1912734892_u32 & 2254334962_u32;
_54 = [(*_91).fld4,_66.fld0.fld4,_1.fld0.fld4,(*_91).fld4,(*_91).fld4,(*_91).fld4];
(*_91).fld0 = (*_19) | (*_19);
_1.fld0.fld1 = (*_91).fld1;
_1 = Adt31 { fld0: Move((*_91)) };
(*_47) = [_84];
(*_100) = _30 as i64;
(*_91).fld3 = core::ptr::addr_of!((*_100));
Goto(bb46)
}
bb46 = {
(*_5) = (*_41) as i8;
_109.0 = core::ptr::addr_of_mut!((*_100));
(*_91).fld3 = core::ptr::addr_of!((*_100));
_23 = [_62,_62];
(*_91).fld0 = _10 as usize;
(*_91).fld2 = -_25;
(*_91) = Adt26 { fld0: _18.fld0.fld0,fld1: _96,fld2: _61,fld3: Move(_1.fld0.fld3),fld4: _1.fld0.fld4 };
(*_91).fld4 = _10 + _1.fld0.fld4;
_66.fld0.fld0 = (*_19) | _34;
(*_91).fld2 = _44;
(*_5) = _84 as i8;
_53 = !(*_19);
Goto(bb47)
}
bb47 = {
_101 = (_56,);
(*_100) = -2266061286369485985_i64;
_40 = _28 as usize;
(*_91).fld0 = _18.fld0.fld0 * _34;
_1.fld0.fld2 = _22;
_1.fld0.fld4 = (*_26) as i16;
_37 = _45;
_52 = (*_26);
_60 = &_3;
(*_91).fld3 = core::ptr::addr_of!((*_100));
Goto(bb48)
}
bb48 = {
(*_47) = [_84];
(*_91).fld4 = !_10;
(*_91).fld4 = _79 as i16;
(*_91).fld2 = -_25;
_10 = (*_91).fld4 ^ (*_91).fld4;
_3 = &(*_26);
_101 = (_11,);
_41 = &_33;
(*_47) = [_84];
(*_100) = 6457769517059301597_i64;
(*_91).fld3 = core::ptr::addr_of!((*_100));
_93.3 = &_18.fld0.fld0;
_85 = (*_41) * (*_41);
_73 = 5994736717121487176_i64 | 7847463572152453645_i64;
(*_91).fld4 = _1.fld0.fld4 & _10;
(*_47) = [_84];
(*_91).fld4 = _1.fld0.fld4 - _10;
_26 = &_55;
(*_91).fld1 = _96 * _6;
(*_91).fld2 = _61;
_36 = _18.fld0.fld0;
(*_100) = !2348695985623142611_i64;
(*_47) = [_84];
_79 = -(*_91).fld2;
Goto(bb49)
}
bb49 = {
_62 = _49 + _76;
(*_91).fld4 = _10 + _1.fld0.fld4;
_61 = (*_91).fld2;
(*_91).fld0 = !_53;
(*_91).fld4 = _28 as i16;
(*_100) = 6734948452363580817_i64 ^ 5619037170181608335_i64;
(*_91).fld1 = _74 & _6;
_89 = _1.fld0.fld4;
(*_5) = !_81;
_93.2 = &(*_26);
(*_91).fld0 = _36 - _18.fld0.fld0;
_53 = !(*_91).fld0;
_36 = _90 as usize;
_55 = !(*_3);
(*_91).fld1 = _1.fld0.fld1;
(*_91).fld4 = _89;
(*_91).fld1 = _6;
_66.fld0.fld1 = _28 as u64;
_107 = [_30,_30];
(*_91).fld1 = _6 << (*_91).fld0;
_18 = Adt31 { fld0: Move((*_91)) };
Goto(bb50)
}
bb50 = {
(*_91).fld3 = core::ptr::addr_of!((*_100));
_118 = _55;
(*_91).fld2 = _39 - _79;
(*_91).fld2 = _39 + _18.fld0.fld2;
(*_91) = Adt26 { fld0: _1.fld0.fld0,fld1: _18.fld0.fld1,fld2: _39,fld3: Move(_18.fld0.fld3),fld4: _10 };
(*_91).fld1 = _74 | _1.fld0.fld1;
(*_91).fld2 = _18.fld0.fld1 as f64;
_119 = _30 << (*_91).fld1;
(*_91).fld3 = core::ptr::addr_of!((*_100));
(*_91).fld0 = _18.fld0.fld0;
_42 = core::ptr::addr_of!((*_100));
_52 = !(*_3);
(*_91).fld1 = !_96;
(*_5) = !_81;
Goto(bb51)
}
bb51 = {
(*_91).fld4 = 309556454110817767711325837728885370968_u128 as i16;
_44 = _84 as f64;
_110 = !(*_3);
(*_5) = _84 as i8;
(*_91).fld2 = _79;
Goto(bb52)
}
bb52 = {
(*_5) = _38 * _81;
(*_47) = [_84];
_66.fld0.fld3 = core::ptr::addr_of!((*_42));
_107 = [_119,_119];
(*_91) = Adt26 { fld0: _18.fld0.fld0,fld1: _96,fld2: _25,fld3: Move(_42),fld4: _1.fld0.fld4 };
_48 = !_52;
_27 = &_52;
(*_100) = 7379723854877859565_i64 & (-6777983636335022545_i64);
(*_5) = _81 * _81;
(*_91).fld2 = _79 * _22;
_23 = [_49,_62];
_38 = (*_5);
(*_100) = (-3136453856983620234_i64);
_32 = _64;
_30 = _119 + _119;
(*_91).fld3 = core::ptr::addr_of!((*_100));
_1 = Move(_66);
_18.fld0.fld1 = !_1.fld0.fld1;
Call(_58 = core::intrinsics::transmute(_24), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
(*_91).fld2 = -_39;
(*_91) = Adt26 { fld0: _34,fld1: _18.fld0.fld1,fld2: _22,fld3: Move(_1.fld0.fld3),fld4: _10 };
(*_91).fld2 = _61;
(*_91).fld0 = !_13;
_56 = _11;
_124 = &_48;
(*_5) = _81 << _1.fld0.fld1;
(*_91).fld4 = !_18.fld0.fld4;
(*_91).fld2 = _56 as f64;
_93.1 = &mut (*_100);
Goto(bb54)
}
bb54 = {
(*_91).fld0 = _18.fld0.fld0 ^ _1.fld0.fld0;
_125.0.fld1 = (*_91).fld1;
_119 = _30 >> (*_5);
(*_5) = _81 - _81;
_125.0.fld4 = (*_91).fld4;
_18.fld0.fld3 = Move((*_91).fld3);
_125.0 = Adt26 { fld0: (*_91).fld0,fld1: _1.fld0.fld1,fld2: (*_91).fld2,fld3: Move(_18.fld0.fld3),fld4: (*_91).fld4 };
(*_91) = Adt26 { fld0: _1.fld0.fld0,fld1: _74,fld2: _103,fld3: Move(_125.0.fld3),fld4: _18.fld0.fld4 };
_5 = core::ptr::addr_of!((*_5));
_125.3.fld0.fld4 = !(*_91).fld4;
(*_47) = [_84];
(*_91).fld2 = -_103;
_77 = _11;
(*_91).fld4 = _89;
_114 = &mut _3;
_42 = Move((*_91).fld3);
(*_91).fld0 = _84 as usize;
(*_91).fld2 = _16 - _79;
(*_47) = [_84];
(*_91) = Adt26 { fld0: _34,fld1: _6,fld2: _22,fld3: Move(_42),fld4: _125.3.fld0.fld4 };
(*_5) = -_38;
_28 = !(-1380636650_i32);
Goto(bb55)
}
bb55 = {
(*_47) = [_84];
_109.0 = Move(_100);
_126 = _66.fld0.fld4 & (*_91).fld4;
(*_91).fld0 = _34 - _53;
(*_91).fld0 = _34;
(*_91).fld2 = -_79;
_45 = [_119,_30,_30];
(*_114) = &_71;
(*_91).fld2 = _39 - _79;
(*_114) = Move(_93.2);
_1.fld0 = Move((*_91));
(*_91).fld4 = _89 ^ _125.3.fld0.fld4;
(*_91).fld1 = _18.fld0.fld1 + _125.0.fld1;
(*_91).fld0 = _34 ^ _34;
(*_91) = Move(_1.fld0);
_99 = core::ptr::addr_of!(_101.0);
(*_91).fld2 = _39 + _16;
_53 = (*_91).fld2 as usize;
(*_99) = -_11;
_125.0 = Adt26 { fld0: (*_91).fld0,fld1: (*_91).fld1,fld2: (*_91).fld2,fld3: Move((*_91).fld3),fld4: _18.fld0.fld4 };
(*_114) = &(*_27);
Goto(bb56)
}
bb56 = {
(*_91).fld1 = _18.fld0.fld1;
_18.fld0 = Move(_125.0);
(*_91).fld1 = !_96;
(*_99) = _7;
_84 = _90 as u16;
(*_47) = [_84];
(*_99) = _7 ^ _7;
_134 = _57;
(*_47) = [_84];
_64 = _67;
(*_114) = &_110;
(*_91).fld3 = Move(_18.fld0.fld3);
_18.fld0 = Adt26 { fld0: (*_91).fld0,fld1: (*_91).fld1,fld2: _79,fld3: Move((*_91).fld3),fld4: (*_91).fld4 };
(*_91).fld2 = _18.fld0.fld2 * _79;
_1.fld0.fld3 = Move(_18.fld0.fld3);
_120 = Move(_109.0);
_112 = Adt19::Variant2 { fld0: (*_91).fld4,fld1: _66.fld0.fld1 };
(*_91) = Adt26 { fld0: _34,fld1: _74,fld2: _103,fld3: Move(_1.fld0.fld3),fld4: _18.fld0.fld4 };
(*_114) = &(*_27);
(*_91).fld4 = (*_91).fld2 as i16;
(*_91).fld1 = (*_27) as u64;
(*_91).fld1 = _74;
_125.0.fld0 = (-4470432539995933334_i64) as usize;
(*_99) = _43 ^ _77;
(*_91).fld4 = _125.3.fld0.fld4 << Field::<i16>(Variant(_112, 2), 0);
(*_47) = [_84];
Goto(bb57)
}
bb57 = {
(*_47) = [_84];
(*_91).fld4 = _125.3.fld0.fld4 >> (*_91).fld0;
(*_47) = [_84];
_143 = core::ptr::addr_of!((*_82));
(*_91).fld2 = _30 as f64;
_125.0 = Move((*_91));
_61 = _84 as f64;
(*_5) = _119 as i8;
(*_91).fld1 = _96;
(*_47) = [_84];
_109 = (Move(_120),);
(*_91).fld1 = _18.fld0.fld1 >> (*_5);
_117 = Field::<u64>(Variant(_112, 2), 1) as usize;
(*_5) = _38 | _81;
(*_91).fld1 = _96 * _6;
(*_91).fld4 = _28 as i16;
(*_91).fld2 = _18.fld0.fld2 * _79;
_94 = (*_41);
Goto(bb58)
}
bb58 = {
(*_99) = !_46;
(*_91).fld2 = _76 as f64;
place!(Field::<u64>(Variant(_112, 2), 1)) = (*_91).fld1 & (*_91).fld1;
_1.fld0.fld1 = _90 as u64;
(*_91).fld0 = _13 - _13;
(*_91) = Adt26 { fld0: _36,fld1: _96,fld2: _18.fld0.fld2,fld3: Move(_125.0.fld3),fld4: _18.fld0.fld4 };
_125 = (Move((*_91)), _10, _67, Move(_66));
(*_91).fld1 = _74 ^ _18.fld0.fld1;
(*_91).fld4 = -_126;
_129 = &mut (*_114);
(*_5) = _38 - _81;
(*_91).fld4 = _125.1 >> (*_91).fld1;
(*_91) = Adt26 { fld0: _117,fld1: Field::<u64>(Variant(_112, 2), 1),fld2: _79,fld3: Move(_125.3.fld0.fld3),fld4: _89 };
(*_129) = &(*_124);
_137 = -_22;
(*_91).fld1 = _74 >> _43;
Goto(bb59)
}
bb59 = {
_100 = Move(_109.0);
_66 = Adt31 { fld0: Move(_125.0) };
_91 = core::ptr::addr_of_mut!((*_91));
(*_129) = &_71;
_125.0.fld3 = Move((*_91).fld3);
_90 = 2654547736_u32;
_132 = (*_27) ^ (*_27);
(*_47) = [_84];
_93.0 = _22;
(*_91) = Adt26 { fld0: _18.fld0.fld0,fld1: _6,fld2: _125.3.fld0.fld2,fld3: Move(_125.0.fld3),fld4: _125.3.fld0.fld4 };
_1 = Adt31 { fld0: Move((*_91)) };
_150 = _84 >> (*_5);
(*_47) = [_150];
_72 = [_125.3.fld0.fld4,_125.3.fld0.fld4,_126,_126,_125.3.fld0.fld4,_18.fld0.fld4,_18.fld0.fld4,_126];
_125.3.fld0.fld2 = (*_41) as f64;
(*_91).fld2 = _16 * _25;
Goto(bb60)
}
bb60 = {
(*_91).fld3 = Move(_1.fld0.fld3);
(*_91).fld0 = _18.fld0.fld0;
(*_91).fld1 = _125.3.fld0.fld1 - _96;
_101.0 = _46;
_18.fld0 = Adt26 { fld0: _66.fld0.fld0,fld1: _6,fld2: (*_91).fld2,fld3: Move((*_91).fld3),fld4: _89 };
_143 = core::ptr::addr_of!((*_143));
(*_91).fld1 = _6 | _125.3.fld0.fld1;
(*_91).fld4 = Field::<i16>(Variant(_112, 2), 0);
(*_99) = _7 + _7;
(*_91) = Adt26 { fld0: _53,fld1: _125.3.fld0.fld1,fld2: _25,fld3: Move(_18.fld0.fld3),fld4: _1.fld0.fld4 };
(*_91).fld4 = _126 + Field::<i16>(Variant(_112, 2), 0);
(*_91).fld0 = !_117;
_144 = &(*_129);
(*_91).fld4 = _10 - _10;
_68 = [_28,_28,_28,_28,_28,_28,_28,_28];
_5 = core::ptr::addr_of!((*_5));
(*_91).fld4 = _126 | Field::<i16>(Variant(_112, 2), 0);
_125.0.fld4 = (*_91).fld4 - (*_91).fld4;
(*_91).fld1 = _125.3.fld0.fld1 * _74;
(*_9) = core::ptr::addr_of_mut!(_157);
(*_91).fld2 = -_79;
(*_91).fld0 = _13 << _125.0.fld4;
Goto(bb61)
}
bb61 = {
Call(_158 = dump_var(17_usize, 28_usize, Move(_28), 43_usize, Move(_43), 107_usize, Move(_107), 76_usize, Move(_76)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_158 = dump_var(17_usize, 77_usize, Move(_77), 132_usize, Move(_132), 32_usize, Move(_32), 87_usize, Move(_87)), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Call(_158 = dump_var(17_usize, 55_usize, Move(_55), 64_usize, Move(_64), 101_usize, Move(_101), 38_usize, Move(_38)), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
Call(_158 = dump_var(17_usize, 65_usize, Move(_65), 37_usize, Move(_37), 90_usize, Move(_90), 96_usize, Move(_96)), ReturnTo(bb65), UnwindUnreachable())
}
bb65 = {
Call(_158 = dump_var(17_usize, 36_usize, Move(_36), 56_usize, Move(_56), 81_usize, Move(_81), 34_usize, Move(_34)), ReturnTo(bb66), UnwindUnreachable())
}
bb66 = {
Call(_158 = dump_var(17_usize, 52_usize, Move(_52), 46_usize, Move(_46), 150_usize, Move(_150), 7_usize, Move(_7)), ReturnTo(bb67), UnwindUnreachable())
}
bb67 = {
Call(_158 = dump_var(17_usize, 68_usize, Move(_68), 24_usize, Move(_24), 59_usize, Move(_59), 63_usize, Move(_63)), ReturnTo(bb68), UnwindUnreachable())
}
bb68 = {
Call(_158 = dump_var(17_usize, 40_usize, Move(_40), 159_usize, _159, 159_usize, _159, 159_usize, _159), ReturnTo(bb69), UnwindUnreachable())
}
bb69 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: &'static f64,mut _2: *const i64,mut _3: &'static usize,mut _4: &'static bool,mut _5: i64,mut _6: Adt26,mut _7: isize,mut _8: i8) -> [i32; 8] {
mir! {
type RET = [i32; 8];
let _9: &'static usize;
let _10: *mut Adt25;
let _11: u128;
let _12: char;
let _13: f32;
let _14: &'static mut &'static bool;
let _15: *const (i32, i8, &'static mut i64, &'static bool);
let _16: usize;
let _17: (usize, i32);
let _18: char;
let _19: &'static Adt43;
let _20: isize;
let _21: Adt86;
let _22: [char; 5];
let _23: *mut [u128; 2];
let _24: (f64,);
let _25: *const isize;
let _26: Adt86;
let _27: f64;
let _28: *mut *mut (usize, i32);
let _29: bool;
let _30: u16;
let _31: char;
let _32: *const u32;
let _33: Adt73;
let _34: Adt19;
let _35: u64;
let _36: isize;
let _37: isize;
let _38: [usize; 1];
let _39: Adt19;
let _40: &'static [u128; 2];
let _41: &'static f32;
let _42: isize;
let _43: *const i8;
let _44: f32;
let _45: u128;
let _46: f32;
let _47: i64;
let _48: (Adt26, i16, char, Adt31);
let _49: isize;
let _50: f64;
let _51: *mut [u128; 2];
let _52: &'static mut (*mut i64,);
let _53: isize;
let _54: &'static f32;
let _55: [u16; 1];
let _56: ();
let _57: ();
{
_7 = -(-9223372036854775808_isize);
RET = [1789178766_i32,(-1408614417_i32),1121135632_i32,727851881_i32,(-711539199_i32),687126675_i32,(-388236008_i32),(-1503217263_i32)];
_9 = &_6.fld0;
_7 = (-9223372036854775808_isize) + 9223372036854775807_isize;
_1 = &_6.fld2;
_6.fld0 = (*_1) as usize;
_6.fld4 = (-11916_i16) << _5;
_6.fld1 = _6.fld4 as u64;
_5 = -6569111979451195487_i64;
Goto(bb1)
}
bb1 = {
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 92_u8 as usize;
_2 = core::ptr::addr_of!(_5);
(*_2) = (-7461768202409227957_i64);
(*_2) = (-9141922534331916098_i64) + 5541752563469888783_i64;
(*_2) = false as i64;
(*_2) = 7576158090299455925_i64 | 5564294093827507305_i64;
(*_2) = -4797177256150693868_i64;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !(-7998770857020135526_i64);
(*_2) = _6.fld1 as i64;
(*_2) = 2810578134850466320_i64 << _6.fld4;
(*_2) = (-1062529067088952876_i64);
(*_2) = -1476996642468694436_i64;
(*_2) = (-2147702528751582234_i64) >> _6.fld1;
Call(_2 = fn19(), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6.fld2 = 241_u8 as f64;
_8 = -(-13_i8);
_6.fld1 = 392209969833903448_u64 & 13092232390496476992_u64;
_6.fld1 = 1336453539201723785_u64 >> _8;
_6.fld1 = 12338374334382034237_u64 & 11117307980744338092_u64;
_6.fld4 = 181_u8 as i16;
_11 = (-15223633351340181932193225185292667663_i128) as u128;
_6.fld4 = (-24962_i16) >> _6.fld1;
_6.fld2 = _6.fld1 as f64;
_6.fld2 = _8 as f64;
_2 = Move(_6.fld3);
_6.fld0 = _6.fld2 as usize;
_6.fld1 = 38_u8 as u64;
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 4_usize - 15942737973208359603_usize;
_3 = &_6.fld0;
_6.fld3 = core::ptr::addr_of!(_5);
_9 = Move(_3);
RET = [1017234840_i32,(-721151930_i32),534520158_i32,801768309_i32,(-1373037204_i32),1683300051_i32,(-247704619_i32),1155712440_i32];
Goto(bb3)
}
bb3 = {
_2 = core::ptr::addr_of!(_5);
(*_2) = !7574866306356446407_i64;
(*_2) = '\u{84bd7}' as i64;
(*_2) = (-816405858566442229_i64);
Goto(bb4)
}
bb4 = {
(*_2) = true as i64;
_13 = _7 as f32;
_6.fld2 = 71511167714169034419271777041259354356_i128 as f64;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 6259849518944936989_i64;
(*_2) = 374093630484393300_i64;
(*_2) = 4655445209550914569_i64 >> _7;
_3 = &_6.fld0;
_16 = !(*_3);
(*_2) = 5393659088014965407_i64 >> _6.fld1;
_6.fld3 = core::ptr::addr_of!((*_2));
_16 = (*_3) * (*_3);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 4345798102681633627_i64;
_17.1 = 1651579186_i32 & 1960402384_i32;
_6.fld4 = !(-17786_i16);
_6.fld2 = 153_u8 as f64;
(*_2) = '\u{2c07}' as i64;
_6.fld1 = 12844308469575261702_u64 << (*_3);
(*_2) = (-6649564511928586723_i64) & (-7462825951142461796_i64);
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_12 = '\u{2b0b}';
Goto(bb5)
}
bb5 = {
_7 = 9223372036854775807_isize >> _16;
_6.fld2 = _6.fld1 as f64;
_6.fld2 = 4260552479_u32 as f64;
(*_2) = 591825371_u32 as i64;
(*_2) = 548895831566385016_i64;
(*_2) = 5989300003683963594_i64;
Goto(bb6)
}
bb6 = {
_6.fld1 = !2558404591300686258_u64;
_3 = &_16;
(*_2) = _7 as i64;
(*_2) = _6.fld4 as i64;
(*_2) = _8 as i64;
(*_2) = 1065701892504146377_i64;
_17 = ((*_3), 1969497043_i32);
(*_2) = (-8982158484611553752_i64) >> (*_3);
match _17.1 {
0 => bb5,
1 => bb2,
1969497043 => bb7,
_ => bb3
}
}
bb7 = {
(*_2) = !(-8114846556947431884_i64);
_17.1 = 616601065_i32 + (-1501354317_i32);
(*_2) = -4616039517644707727_i64;
(*_2) = -(-4690644380821428924_i64);
_6.fld4 = (-30074_i16) >> (*_3);
(*_2) = _7 as i64;
_6.fld4 = (-13737_i16) << (*_3);
_24.0 = _11 as f64;
(*_2) = -(-3826504303466931674_i64);
Call(_5 = core::intrinsics::transmute((*_3)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_6.fld2 = _24.0 + _24.0;
(*_2) = (*_3) as i64;
_22 = [_12,_12,_12,_12,_12];
_6.fld1 = 8960466043065062292_u64;
_6 = Adt26 { fld0: _17.0,fld1: 13064382385585461077_u64,fld2: _24.0,fld3: Move(_2),fld4: 19300_i16 };
_22 = [_12,_12,_12,_12,_12];
_9 = &(*_3);
_6.fld4 = 12746_i16;
_22 = [_12,_12,_12,_12,_12];
_24 = (_6.fld2,);
_1 = &_24.0;
_2 = core::ptr::addr_of!(_5);
(*_2) = 7680118115858722648_i64;
match (*_2) {
0 => bb5,
7680118115858722648 => bb9,
_ => bb6
}
}
bb9 = {
_24.0 = _6.fld2 * _6.fld2;
(*_2) = 8676894370904015036_i64 + 5416106362299647841_i64;
_27 = -_24.0;
_6.fld3 = core::ptr::addr_of!((*_2));
(*_2) = (-3344402035532577797_i64) - (-2731405408053623984_i64);
_11 = 160395770351324579319331952016525972916_u128;
_20 = -_7;
(*_2) = (-3534530260993998003_i64);
(*_2) = 6114400785512896236_i64 | 7948538023166159765_i64;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_30 = 13519_u16 * 18166_u16;
_25 = core::ptr::addr_of!(_7);
(*_2) = (-7523498050592006365_i64) << (*_3);
Goto(bb10)
}
bb10 = {
_27 = _6.fld2 * _24.0;
(*_25) = !_20;
(*_2) = -(-4774926456020365965_i64);
(*_2) = _8 as i64;
(*_2) = (-5979755591847934716_i64);
_25 = core::ptr::addr_of!((*_25));
_17 = ((*_9), 1674010576_i32);
_16 = 2452918744_u32 as usize;
(*_25) = -_20;
(*_2) = 1795986865195845908_i64;
_6.fld1 = !11459893401380431095_u64;
(*_25) = _20 * _20;
(*_2) = (-1374328357805867141_i64);
(*_2) = _6.fld1 as i64;
(*_2) = _17.1 as i64;
_29 = !false;
(*_25) = _20 - _20;
_3 = Move(_9);
_6.fld0 = !_17.0;
(*_2) = _30 as i64;
(*_25) = 1047109675_u32 as isize;
_29 = true;
_7 = !_20;
_20 = -(*_25);
match _17.1 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
1674010576 => bb18,
_ => bb17
}
}
bb11 = {
_24.0 = _6.fld2 * _6.fld2;
(*_2) = 8676894370904015036_i64 + 5416106362299647841_i64;
_27 = -_24.0;
_6.fld3 = core::ptr::addr_of!((*_2));
(*_2) = (-3344402035532577797_i64) - (-2731405408053623984_i64);
_11 = 160395770351324579319331952016525972916_u128;
_20 = -_7;
(*_2) = (-3534530260993998003_i64);
(*_2) = 6114400785512896236_i64 | 7948538023166159765_i64;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_30 = 13519_u16 * 18166_u16;
_25 = core::ptr::addr_of!(_7);
(*_2) = (-7523498050592006365_i64) << (*_3);
Goto(bb10)
}
bb12 = {
_6.fld2 = _24.0 + _24.0;
(*_2) = (*_3) as i64;
_22 = [_12,_12,_12,_12,_12];
_6.fld1 = 8960466043065062292_u64;
_6 = Adt26 { fld0: _17.0,fld1: 13064382385585461077_u64,fld2: _24.0,fld3: Move(_2),fld4: 19300_i16 };
_22 = [_12,_12,_12,_12,_12];
_9 = &(*_3);
_6.fld4 = 12746_i16;
_22 = [_12,_12,_12,_12,_12];
_24 = (_6.fld2,);
_1 = &_24.0;
_2 = core::ptr::addr_of!(_5);
(*_2) = 7680118115858722648_i64;
match (*_2) {
0 => bb5,
7680118115858722648 => bb9,
_ => bb6
}
}
bb13 = {
_6.fld2 = 241_u8 as f64;
_8 = -(-13_i8);
_6.fld1 = 392209969833903448_u64 & 13092232390496476992_u64;
_6.fld1 = 1336453539201723785_u64 >> _8;
_6.fld1 = 12338374334382034237_u64 & 11117307980744338092_u64;
_6.fld4 = 181_u8 as i16;
_11 = (-15223633351340181932193225185292667663_i128) as u128;
_6.fld4 = (-24962_i16) >> _6.fld1;
_6.fld2 = _6.fld1 as f64;
_6.fld2 = _8 as f64;
_2 = Move(_6.fld3);
_6.fld0 = _6.fld2 as usize;
_6.fld1 = 38_u8 as u64;
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 4_usize - 15942737973208359603_usize;
_3 = &_6.fld0;
_6.fld3 = core::ptr::addr_of!(_5);
_9 = Move(_3);
RET = [1017234840_i32,(-721151930_i32),534520158_i32,801768309_i32,(-1373037204_i32),1683300051_i32,(-247704619_i32),1155712440_i32];
Goto(bb3)
}
bb14 = {
_6.fld1 = !2558404591300686258_u64;
_3 = &_16;
(*_2) = _7 as i64;
(*_2) = _6.fld4 as i64;
(*_2) = _8 as i64;
(*_2) = 1065701892504146377_i64;
_17 = ((*_3), 1969497043_i32);
(*_2) = (-8982158484611553752_i64) >> (*_3);
match _17.1 {
0 => bb5,
1 => bb2,
1969497043 => bb7,
_ => bb3
}
}
bb15 = {
_7 = 9223372036854775807_isize >> _16;
_6.fld2 = _6.fld1 as f64;
_6.fld2 = 4260552479_u32 as f64;
(*_2) = 591825371_u32 as i64;
(*_2) = 548895831566385016_i64;
(*_2) = 5989300003683963594_i64;
Goto(bb6)
}
bb16 = {
(*_2) = true as i64;
_13 = _7 as f32;
_6.fld2 = 71511167714169034419271777041259354356_i128 as f64;
_2 = core::ptr::addr_of!((*_2));
(*_2) = 6259849518944936989_i64;
(*_2) = 374093630484393300_i64;
(*_2) = 4655445209550914569_i64 >> _7;
_3 = &_6.fld0;
_16 = !(*_3);
(*_2) = 5393659088014965407_i64 >> _6.fld1;
_6.fld3 = core::ptr::addr_of!((*_2));
_16 = (*_3) * (*_3);
_2 = core::ptr::addr_of!((*_2));
(*_2) = 4345798102681633627_i64;
_17.1 = 1651579186_i32 & 1960402384_i32;
_6.fld4 = !(-17786_i16);
_6.fld2 = 153_u8 as f64;
(*_2) = '\u{2c07}' as i64;
_6.fld1 = 12844308469575261702_u64 << (*_3);
(*_2) = (-6649564511928586723_i64) & (-7462825951142461796_i64);
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_12 = '\u{2b0b}';
Goto(bb5)
}
bb17 = {
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 92_u8 as usize;
_2 = core::ptr::addr_of!(_5);
(*_2) = (-7461768202409227957_i64);
(*_2) = (-9141922534331916098_i64) + 5541752563469888783_i64;
(*_2) = false as i64;
(*_2) = 7576158090299455925_i64 | 5564294093827507305_i64;
(*_2) = -4797177256150693868_i64;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !(-7998770857020135526_i64);
(*_2) = _6.fld1 as i64;
(*_2) = 2810578134850466320_i64 << _6.fld4;
(*_2) = (-1062529067088952876_i64);
(*_2) = -1476996642468694436_i64;
(*_2) = (-2147702528751582234_i64) >> _6.fld1;
Call(_2 = fn19(), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
(*_25) = _20 & _20;
(*_2) = 8718625576997882954_i64;
(*_25) = _20 & _20;
(*_2) = 5438887092453763721_i64 >> (*_25);
_8 = 67_i8 & (-77_i8);
(*_25) = _13 as isize;
(*_2) = 4206416594677161776_i64 >> _20;
match _17.1 {
1674010576 => bb19,
_ => bb16
}
}
bb19 = {
_25 = core::ptr::addr_of!((*_25));
_6 = Adt26 { fld0: _17.0,fld1: 11462223922073016339_u64,fld2: _27,fld3: Move(_2),fld4: (-5284_i16) };
(*_25) = !_20;
(*_25) = _20;
_6.fld2 = _27 + _24.0;
(*_25) = _20;
_6.fld0 = _16 >> _6.fld1;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_8 = (-24_i8) << (*_25);
(*_25) = _6.fld2 as isize;
_2 = core::ptr::addr_of!(_5);
_12 = '\u{451fe}';
_37 = (*_25) | (*_25);
(*_2) = (-4228401249340515565_i64) << _6.fld4;
_18 = _12;
(*_25) = _11 as isize;
match _6.fld1 {
0 => bb20,
1 => bb21,
11462223922073016339 => bb23,
_ => bb22
}
}
bb20 = {
_27 = _6.fld2 * _24.0;
(*_25) = !_20;
(*_2) = -(-4774926456020365965_i64);
(*_2) = _8 as i64;
(*_2) = (-5979755591847934716_i64);
_25 = core::ptr::addr_of!((*_25));
_17 = ((*_9), 1674010576_i32);
_16 = 2452918744_u32 as usize;
(*_25) = -_20;
(*_2) = 1795986865195845908_i64;
_6.fld1 = !11459893401380431095_u64;
(*_25) = _20 * _20;
(*_2) = (-1374328357805867141_i64);
(*_2) = _6.fld1 as i64;
(*_2) = _17.1 as i64;
_29 = !false;
(*_25) = _20 - _20;
_3 = Move(_9);
_6.fld0 = !_17.0;
(*_2) = _30 as i64;
(*_25) = 1047109675_u32 as isize;
_29 = true;
_7 = !_20;
_20 = -(*_25);
match _17.1 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
1674010576 => bb18,
_ => bb17
}
}
bb21 = {
_6.fld2 = _24.0 + _24.0;
(*_2) = (*_3) as i64;
_22 = [_12,_12,_12,_12,_12];
_6.fld1 = 8960466043065062292_u64;
_6 = Adt26 { fld0: _17.0,fld1: 13064382385585461077_u64,fld2: _24.0,fld3: Move(_2),fld4: 19300_i16 };
_22 = [_12,_12,_12,_12,_12];
_9 = &(*_3);
_6.fld4 = 12746_i16;
_22 = [_12,_12,_12,_12,_12];
_24 = (_6.fld2,);
_1 = &_24.0;
_2 = core::ptr::addr_of!(_5);
(*_2) = 7680118115858722648_i64;
match (*_2) {
0 => bb5,
7680118115858722648 => bb9,
_ => bb6
}
}
bb22 = {
_24.0 = _6.fld2 * _6.fld2;
(*_2) = 8676894370904015036_i64 + 5416106362299647841_i64;
_27 = -_24.0;
_6.fld3 = core::ptr::addr_of!((*_2));
(*_2) = (-3344402035532577797_i64) - (-2731405408053623984_i64);
_11 = 160395770351324579319331952016525972916_u128;
_20 = -_7;
(*_2) = (-3534530260993998003_i64);
(*_2) = 6114400785512896236_i64 | 7948538023166159765_i64;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_30 = 13519_u16 * 18166_u16;
_25 = core::ptr::addr_of!(_7);
(*_2) = (-7523498050592006365_i64) << (*_3);
Goto(bb10)
}
bb23 = {
(*_2) = _13 as i64;
_30 = 3244261294_u32 as u16;
(*_2) = _12 as i64;
match _6.fld1 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb24,
11462223922073016339 => bb26,
_ => bb25
}
}
bb24 = {
_6.fld2 = 241_u8 as f64;
_8 = -(-13_i8);
_6.fld1 = 392209969833903448_u64 & 13092232390496476992_u64;
_6.fld1 = 1336453539201723785_u64 >> _8;
_6.fld1 = 12338374334382034237_u64 & 11117307980744338092_u64;
_6.fld4 = 181_u8 as i16;
_11 = (-15223633351340181932193225185292667663_i128) as u128;
_6.fld4 = (-24962_i16) >> _6.fld1;
_6.fld2 = _6.fld1 as f64;
_6.fld2 = _8 as f64;
_2 = Move(_6.fld3);
_6.fld0 = _6.fld2 as usize;
_6.fld1 = 38_u8 as u64;
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 4_usize - 15942737973208359603_usize;
_3 = &_6.fld0;
_6.fld3 = core::ptr::addr_of!(_5);
_9 = Move(_3);
RET = [1017234840_i32,(-721151930_i32),534520158_i32,801768309_i32,(-1373037204_i32),1683300051_i32,(-247704619_i32),1155712440_i32];
Goto(bb3)
}
bb25 = {
_2 = core::ptr::addr_of!(_5);
(*_2) = !7574866306356446407_i64;
(*_2) = '\u{84bd7}' as i64;
(*_2) = (-816405858566442229_i64);
Goto(bb4)
}
bb26 = {
_3 = &_17.0;
_9 = Move(_3);
_31 = _12;
(*_2) = (-2364503806404004411_i64) ^ (-7933985101312405733_i64);
_13 = (-166072165844611071787112733142291683871_i128) as f32;
(*_25) = _20 >> (*_2);
_27 = _6.fld2 - _6.fld2;
(*_2) = _13 as i64;
(*_25) = _37 + _37;
match _6.fld4 {
0 => bb23,
1 => bb18,
2 => bb13,
3 => bb24,
4 => bb27,
5 => bb28,
340282366920938463463374607431768206172 => bb30,
_ => bb29
}
}
bb27 = {
_2 = core::ptr::addr_of!(_5);
(*_2) = !7574866306356446407_i64;
(*_2) = '\u{84bd7}' as i64;
(*_2) = (-816405858566442229_i64);
Goto(bb4)
}
bb28 = {
_24.0 = _6.fld2 * _6.fld2;
(*_2) = 8676894370904015036_i64 + 5416106362299647841_i64;
_27 = -_24.0;
_6.fld3 = core::ptr::addr_of!((*_2));
(*_2) = (-3344402035532577797_i64) - (-2731405408053623984_i64);
_11 = 160395770351324579319331952016525972916_u128;
_20 = -_7;
(*_2) = (-3534530260993998003_i64);
(*_2) = 6114400785512896236_i64 | 7948538023166159765_i64;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_30 = 13519_u16 * 18166_u16;
_25 = core::ptr::addr_of!(_7);
(*_2) = (-7523498050592006365_i64) << (*_3);
Goto(bb10)
}
bb29 = {
_6.fld3 = core::ptr::addr_of!(_5);
_6.fld0 = 92_u8 as usize;
_2 = core::ptr::addr_of!(_5);
(*_2) = (-7461768202409227957_i64);
(*_2) = (-9141922534331916098_i64) + 5541752563469888783_i64;
(*_2) = false as i64;
(*_2) = 7576158090299455925_i64 | 5564294093827507305_i64;
(*_2) = -4797177256150693868_i64;
_2 = core::ptr::addr_of!((*_2));
(*_2) = !(-7998770857020135526_i64);
(*_2) = _6.fld1 as i64;
(*_2) = 2810578134850466320_i64 << _6.fld4;
(*_2) = (-1062529067088952876_i64);
(*_2) = -1476996642468694436_i64;
(*_2) = (-2147702528751582234_i64) >> _6.fld1;
Call(_2 = fn19(), ReturnTo(bb2), UnwindUnreachable())
}
bb30 = {
_24 = (_27,);
_18 = _12;
(*_25) = _37;
_39 = Adt19::Variant1 { fld0: _6.fld1,fld1: _31,fld2: _37,fld3: _11,fld4: 119985030531860561485200367367420164550_i128,fld5: _17.1 };
_38 = [_6.fld0];
(*_2) = 8128711158728581195_i64 | 7071523176432967980_i64;
_24.0 = _27;
(*_2) = -1084703685363060635_i64;
(*_25) = _37 + _37;
(*_25) = !_20;
(*_25) = Field::<isize>(Variant(_39, 1), 2) - _20;
_24 = (_27,);
_12 = _18;
_27 = _24.0 * _6.fld2;
_11 = _8 as u128;
_3 = &_17.0;
(*_2) = _13 as i64;
_17.0 = Field::<u128>(Variant(_39, 1), 3) as usize;
_35 = _6.fld0 as u64;
place!(Field::<isize>(Variant(_39, 1), 2)) = _7;
_34 = Adt19::Variant1 { fld0: Field::<u64>(Variant(_39, 1), 0),fld1: Field::<char>(Variant(_39, 1), 1),fld2: (*_25),fld3: _11,fld4: (-23562113336173163805824661116720907909_i128),fld5: _17.1 };
_29 = (*_25) == _7;
_9 = &_17.0;
(*_2) = (-9134832151184021677_i64) << _20;
Call(_17.1 = core::intrinsics::transmute(Field::<char>(Variant(_34, 1), 1)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
_41 = &_13;
_17 = (_6.fld0, Field::<i32>(Variant(_39, 1), 5));
_6.fld2 = -_27;
(*_2) = -(-2739195560739557254_i64);
_30 = 52251_u16 * 50268_u16;
place!(Field::<u64>(Variant(_34, 1), 0)) = Field::<u64>(Variant(_39, 1), 0) % Field::<u64>(Variant(_39, 1), 0);
place!(Field::<i128>(Variant(_34, 1), 4)) = (-154214209157978256496098033551641845555_i128) | 51777924943985484473038571091710125578_i128;
(*_2) = -(-1901272132719257324_i64);
place!(Field::<u128>(Variant(_34, 1), 3)) = _11 * Field::<u128>(Variant(_39, 1), 3);
_36 = (*_25);
(*_2) = !(-7482492019809139044_i64);
(*_2) = (-8054232515152193879_i64) - (-7611553235045789406_i64);
_6.fld4 = (-332_i16) * 16738_i16;
_12 = Field::<char>(Variant(_34, 1), 1);
(*_25) = _36 >> Field::<u64>(Variant(_34, 1), 0);
(*_2) = -1470045633241062822_i64;
(*_2) = _29 as i64;
(*_25) = Field::<isize>(Variant(_39, 1), 2) & Field::<isize>(Variant(_39, 1), 2);
place!(Field::<i128>(Variant(_39, 1), 4)) = Field::<i128>(Variant(_34, 1), 4);
(*_25) = !Field::<isize>(Variant(_34, 1), 2);
_44 = (*_41) * (*_41);
_43 = core::ptr::addr_of!(_8);
match _17.1 {
0 => bb10,
1 => bb14,
2 => bb30,
3 => bb32,
4 => bb33,
5 => bb34,
6 => bb35,
1674010576 => bb37,
_ => bb36
}
}
bb32 = {
_24.0 = _6.fld2 * _6.fld2;
(*_2) = 8676894370904015036_i64 + 5416106362299647841_i64;
_27 = -_24.0;
_6.fld3 = core::ptr::addr_of!((*_2));
(*_2) = (-3344402035532577797_i64) - (-2731405408053623984_i64);
_11 = 160395770351324579319331952016525972916_u128;
_20 = -_7;
(*_2) = (-3534530260993998003_i64);
(*_2) = 6114400785512896236_i64 | 7948538023166159765_i64;
RET = [_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1,_17.1];
_30 = 13519_u16 * 18166_u16;
_25 = core::ptr::addr_of!(_7);
(*_2) = (-7523498050592006365_i64) << (*_3);
Goto(bb10)
}
bb33 = {
(*_2) = !(-8114846556947431884_i64);
_17.1 = 616601065_i32 + (-1501354317_i32);
(*_2) = -4616039517644707727_i64;
(*_2) = -(-4690644380821428924_i64);
_6.fld4 = (-30074_i16) >> (*_3);
(*_2) = _7 as i64;
_6.fld4 = (-13737_i16) << (*_3);
_24.0 = _11 as f64;
(*_2) = -(-3826504303466931674_i64);
Call(_5 = core::intrinsics::transmute((*_3)), ReturnTo(bb8), UnwindUnreachable())
}
bb34 = {
(*_2) = _13 as i64;
_30 = 3244261294_u32 as u16;
(*_2) = _12 as i64;
match _6.fld1 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb24,
11462223922073016339 => bb26,
_ => bb25
}
}
bb35 = {
_6.fld1 = !2558404591300686258_u64;
_3 = &_16;
(*_2) = _7 as i64;
(*_2) = _6.fld4 as i64;
(*_2) = _8 as i64;
(*_2) = 1065701892504146377_i64;
_17 = ((*_3), 1969497043_i32);
(*_2) = (-8982158484611553752_i64) >> (*_3);
match _17.1 {
0 => bb5,
1 => bb2,
1969497043 => bb7,
_ => bb3
}
}
bb36 = {
_6.fld2 = _24.0 + _24.0;
(*_2) = (*_3) as i64;
_22 = [_12,_12,_12,_12,_12];
_6.fld1 = 8960466043065062292_u64;
_6 = Adt26 { fld0: _17.0,fld1: 13064382385585461077_u64,fld2: _24.0,fld3: Move(_2),fld4: 19300_i16 };
_22 = [_12,_12,_12,_12,_12];
_9 = &(*_3);
_6.fld4 = 12746_i16;
_22 = [_12,_12,_12,_12,_12];
_24 = (_6.fld2,);
_1 = &_24.0;
_2 = core::ptr::addr_of!(_5);
(*_2) = 7680118115858722648_i64;
match (*_2) {
0 => bb5,
7680118115858722648 => bb9,
_ => bb6
}
}
bb37 = {
_17 = (_6.fld0, Field::<i32>(Variant(_34, 1), 5));
_48.0.fld0 = !_6.fld0;
match _6.fld1 {
0 => bb29,
1 => bb28,
2 => bb19,
3 => bb22,
4 => bb13,
11462223922073016339 => bb38,
_ => bb6
}
}
bb38 = {
(*_43) = 30_i8 - 31_i8;
_48.3 = Adt31 { fld0: Move(_6) };
_37 = (*_25) << (*_25);
(*_43) = (-84_i8) << (*_2);
_46 = _44 + (*_41);
_48.0.fld1 = _35 / Field::<u64>(Variant(_39, 1), 0);
_48.3.fld0.fld0 = _17.0 * _48.0.fld0;
(*_25) = _20 - Field::<isize>(Variant(_34, 1), 2);
(*_2) = 4774481677596602126_i64;
(*_25) = _37;
_48.0.fld3 = Move(_48.3.fld0.fld3);
_25 = core::ptr::addr_of!((*_25));
_13 = _46 * _46;
(*_2) = Field::<i32>(Variant(_34, 1), 5) as i64;
_48.3.fld0 = Adt26 { fld0: _17.0,fld1: _35,fld2: _24.0,fld3: Move(_2),fld4: (-19303_i16) };
_48.1 = _48.3.fld0.fld4 & _48.3.fld0.fld4;
_31 = Field::<char>(Variant(_34, 1), 1);
_9 = Move(_3);
(*_25) = Field::<isize>(Variant(_39, 1), 2) - _36;
_48.3.fld0.fld2 = _27 * _27;
_54 = Move(_41);
place!(Field::<char>(Variant(_39, 1), 1)) = _18;
(*_43) = Field::<i128>(Variant(_34, 1), 4) as i8;
place!(Field::<i32>(Variant(_39, 1), 5)) = Field::<i32>(Variant(_34, 1), 5) >> (*_25);
Goto(bb39)
}
bb39 = {
place!(Field::<isize>(Variant(_34, 1), 2)) = (*_25) ^ (*_25);
RET = [Field::<i32>(Variant(_34, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5),Field::<i32>(Variant(_39, 1), 5)];
Goto(bb40)
}
bb40 = {
Call(_56 = dump_var(18_usize, 8_usize, Move(_8), 12_usize, Move(_12), 16_usize, Move(_16), 18_usize, Move(_18)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_56 = dump_var(18_usize, 17_usize, Move(_17), 35_usize, Move(_35), 36_usize, Move(_36), 38_usize, Move(_38)), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19() -> *const i64 {
mir! {
type RET = *const i64;
let _1: *const *const (&'static isize, i8);
let _2: Adt73;
let _3: isize;
let _4: isize;
let _5: usize;
let _6: &'static *mut Adt26;
let _7: Adt31;
let _8: isize;
let _9: f32;
let _10: f32;
let _11: *mut Adt26;
let _12: u8;
let _13: Adt19;
let _14: *const (&'static isize, i8);
let _15: Adt19;
let _16: [usize; 1];
let _17: (isize,);
let _18: &'static mut (*mut i64,);
let _19: bool;
let _20: char;
let _21: *const (i32, i8, &'static mut i64, &'static bool);
let _22: isize;
let _23: Adt25;
let _24: *mut i64;
let _25: isize;
let _26: bool;
let _27: u8;
let _28: [u32; 3];
let _29: (isize,);
let _30: &'static mut (*mut i64,);
let _31: (&'static isize, i8);
let _32: char;
let _33: bool;
let _34: [i16; 6];
let _35: &'static isize;
let _36: &'static isize;
let _37: &'static mut &'static bool;
let _38: [i16; 8];
let _39: (&'static isize, i8);
let _40: &'static *const (&'static isize, i8);
let _41: *mut Adt26;
let _42: &'static Adt43;
let _43: f64;
let _44: *const isize;
let _45: f64;
let _46: &'static Adt43;
let _47: &'static &'static bool;
let _48: *const *const isize;
let _49: u8;
let _50: *const *const isize;
let _51: f32;
let _52: *mut (usize, i32);
let _53: bool;
let _54: isize;
let _55: isize;
let _56: f64;
let _57: u8;
let _58: Adt31;
let _59: u8;
let _60: usize;
let _61: &'static &'static bool;
let _62: bool;
let _63: i32;
let _64: f32;
let _65: isize;
let _66: isize;
let _67: &'static Adt43;
let _68: &'static mut [u16; 1];
let _69: f64;
let _70: u128;
let _71: i16;
let _72: [u64; 7];
let _73: *const (&'static bool,);
let _74: i64;
let _75: *const i64;
let _76: char;
let _77: i64;
let _78: &'static bool;
let _79: *const u32;
let _80: f32;
let _81: usize;
let _82: *mut i64;
let _83: &'static mut &'static bool;
let _84: char;
let _85: isize;
let _86: i32;
let _87: u32;
let _88: &'static &'static bool;
let _89: &'static mut [u16; 1];
let _90: &'static isize;
let _91: isize;
let _92: (&'static isize, i8);
let _93: (*const *const (&'static isize, i8),);
let _94: ();
let _95: ();
{
Goto(bb1)
}
bb1 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb2 = {
_4 = (-12563_i16) as isize;
_3 = -_4;
_5 = 12133078642785834517_u64 as usize;
_5 = 3320635142_u32 as usize;
_4 = _3;
_3 = _4 - _4;
_4 = (-60185560813242006373247022310540773049_i128) as isize;
_3 = _4 + _4;
_5 = !18239159928737278027_usize;
_5 = !3189661086463126529_usize;
_5 = 2_usize + 7_usize;
Goto(bb3)
}
bb3 = {
_3 = !_4;
_4 = -_3;
_3 = 64_u8 as isize;
_4 = _3 - _3;
_3 = (-104639446764398131323294381971942516830_i128) as isize;
_4 = -_3;
_5 = 5_usize;
_4 = _3;
_8 = (-18926_i16) as isize;
_5 = 9704231706283908478_usize;
_3 = _4 >> _8;
_8 = _3;
_7.fld0.fld0 = _5;
_7.fld0.fld0 = _5 | _5;
_7.fld0.fld1 = 9338730770282473177_u64;
_7.fld0.fld4 = (-16161_i16) << _7.fld0.fld0;
_3 = _8 ^ _8;
_7.fld0.fld2 = 2028677726_i32 as f64;
match _5 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
9704231706283908478 => bb7,
_ => bb6
}
}
bb4 = {
_4 = (-12563_i16) as isize;
_3 = -_4;
_5 = 12133078642785834517_u64 as usize;
_5 = 3320635142_u32 as usize;
_4 = _3;
_3 = _4 - _4;
_4 = (-60185560813242006373247022310540773049_i128) as isize;
_3 = _4 + _4;
_5 = !18239159928737278027_usize;
_5 = !3189661086463126529_usize;
_5 = 2_usize + 7_usize;
Goto(bb3)
}
bb5 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_7.fld0.fld2 = 4289443801_u32 as f64;
_8 = _3 + _3;
_7.fld0.fld4 = (-12634_i16) * 31389_i16;
_3 = !_8;
_7.fld0.fld4 = 10611_i16;
_7.fld0.fld4 = 7908_i16 << _8;
_7.fld0.fld0 = _5;
_7.fld0.fld0 = _5 + _5;
_9 = 318422133903096086129911118181290908391_u128 as f32;
_7.fld0.fld1 = 62341189056746893527037359179195584804_u128 as u64;
_9 = (-143729039178143206449959814568494122855_i128) as f32;
_7.fld0.fld4 = 5446_i16 | 29435_i16;
_7.fld0.fld4 = -(-20708_i16);
_4 = _3;
_9 = _7.fld0.fld0 as f32;
_7.fld0.fld4 = 23526_i16 << _4;
_7.fld0.fld0 = !_5;
_8 = _3;
_7.fld0.fld4 = 7844_i16 * (-3808_i16);
_3 = _8 << _7.fld0.fld1;
_8 = _4;
_5 = 2046209245_u32 as usize;
_7.fld0.fld4 = -2921_i16;
_3 = _8;
_9 = _5 as f32;
_10 = _9 - _9;
_8 = _4;
_9 = _10 * _10;
Goto(bb8)
}
bb8 = {
_12 = 92_u8;
_11 = core::ptr::addr_of_mut!(_7.fld0);
(*_11).fld1 = !15404187247240435793_u64;
(*_11).fld2 = 63418_u16 as f64;
(*_11).fld4 = 5745_u16 as i16;
_7.fld0.fld1 = (*_11).fld2 as u64;
(*_11).fld4 = (-10734_i16) ^ (-3973_i16);
(*_11).fld2 = 2973234006_u32 as f64;
(*_11).fld1 = 2580050248218330908_u64 ^ 5471285303257103355_u64;
(*_11).fld1 = '\u{520aa}' as u64;
_9 = _10 - _10;
(*_11).fld4 = 28150_i16 - (-22371_i16);
(*_11).fld2 = _9 as f64;
(*_11).fld1 = 16975438861864077844_u64;
(*_11).fld1 = !13496382187792627736_u64;
_8 = _3;
(*_11).fld1 = 6704441089226610186_u64 * 11381139904395881180_u64;
Goto(bb9)
}
bb9 = {
(*_11).fld1 = 2206_u16 as u64;
(*_11).fld0 = !_5;
(*_11).fld2 = _7.fld0.fld1 as f64;
Goto(bb10)
}
bb10 = {
(*_11).fld0 = _5;
(*_11).fld0 = _12 as usize;
(*_11).fld1 = !7322433267140386643_u64;
_7.fld0.fld2 = (*_11).fld1 as f64;
(*_11).fld4 = _9 as i16;
(*_11).fld2 = (-930431134_i32) as f64;
_13 = Adt19::Variant2 { fld0: (*_11).fld4,fld1: (*_11).fld1 };
(*_11).fld0 = _5;
(*_11).fld1 = (-2305116036274076716_i64) as u64;
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) + Field::<i16>(Variant(_13, 2), 0);
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) - Field::<u64>(Variant(_13, 2), 1);
(*_11).fld0 = _5 ^ _5;
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
Goto(bb11)
}
bb11 = {
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) >> (*_11).fld0;
_17 = (_8,);
(*_11).fld0 = _5;
(*_11).fld2 = _8 as f64;
_17 = (_8,);
(*_11).fld0 = _5;
_19 = _3 >= _8;
(*_11).fld2 = 2591306708_u32 as f64;
_16 = [(*_11).fld0];
(*_11).fld2 = (*_11).fld1 as f64;
(*_11).fld0 = _5 + _5;
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) & Field::<u64>(Variant(_13, 2), 1);
_7.fld0.fld2 = (*_11).fld4 as f64;
Goto(bb12)
}
bb12 = {
_8 = -_4;
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
(*_11).fld4 = '\u{182b9}' as i16;
_1 = core::ptr::addr_of!(_14);
(*_11).fld0 = 44928792144011569359229926012823633383_u128 as usize;
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1);
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
_7.fld0.fld2 = Field::<i16>(Variant(_13, 2), 0) as f64;
place!(Field::<u64>(Variant(_13, 2), 1)) = !(*_11).fld1;
_23 = Adt25::Variant0 { fld0: _19,fld1: _12,fld2: (-7220273927437735430_i64),fld3: 34_i8,fld4: Field::<i16>(Variant(_13, 2), 0),fld5: _10 };
_20 = '\u{d1b7f}';
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld4 = (*_11).fld0 as i16;
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) * Field::<u64>(Variant(_13, 2), 1);
_15 = _13;
(*_11).fld2 = _8 as f64;
_9 = 7792706522414123667_i64 as f32;
match _12 {
0 => bb5,
1 => bb6,
2 => bb13,
92 => bb15,
_ => bb14
}
}
bb13 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb14 = {
_7.fld0.fld2 = 4289443801_u32 as f64;
_8 = _3 + _3;
_7.fld0.fld4 = (-12634_i16) * 31389_i16;
_3 = !_8;
_7.fld0.fld4 = 10611_i16;
_7.fld0.fld4 = 7908_i16 << _8;
_7.fld0.fld0 = _5;
_7.fld0.fld0 = _5 + _5;
_9 = 318422133903096086129911118181290908391_u128 as f32;
_7.fld0.fld1 = 62341189056746893527037359179195584804_u128 as u64;
_9 = (-143729039178143206449959814568494122855_i128) as f32;
_7.fld0.fld4 = 5446_i16 | 29435_i16;
_7.fld0.fld4 = -(-20708_i16);
_4 = _3;
_9 = _7.fld0.fld0 as f32;
_7.fld0.fld4 = 23526_i16 << _4;
_7.fld0.fld0 = !_5;
_8 = _3;
_7.fld0.fld4 = 7844_i16 * (-3808_i16);
_3 = _8 << _7.fld0.fld1;
_8 = _4;
_5 = 2046209245_u32 as usize;
_7.fld0.fld4 = -2921_i16;
_3 = _8;
_9 = _5 as f32;
_10 = _9 - _9;
_8 = _4;
_9 = _10 * _10;
Goto(bb8)
}
bb15 = {
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) * Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
_7.fld0.fld0 = _5 + _5;
(*_11).fld1 = 1662553482_u32 as u64;
(*_11).fld4 = Field::<i16>(Variant(_15, 2), 0);
(*_11).fld2 = (-1801262172_i32) as f64;
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) + Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) * Field::<i16>(Variant(_23, 0), 4);
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) ^ Field::<i16>(Variant(_13, 2), 0);
(*_11).fld2 = Field::<u8>(Variant(_23, 0), 1) as f64;
(*_11).fld2 = 4274148299083255818_i64 as f64;
_22 = _17.0 >> (*_11).fld0;
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) - Field::<u64>(Variant(_15, 2), 1);
(*_11).fld2 = 719957918_i32 as f64;
_24 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_24) = (-3739145058258885465_i64) + 7705626003108942491_i64;
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) * Field::<i16>(Variant(_15, 2), 0);
(*_24) = (-7329464632842025730_i64) << (*_11).fld0;
_25 = _4 | _17.0;
_5 = _7.fld0.fld0;
_25 = -_22;
(*_11).fld2 = (-62_i8) as f64;
match Field::<u8>(Variant(_23, 0), 1) {
92 => bb16,
_ => bb7
}
}
bb16 = {
_5 = (*_11).fld0;
(*_24) = (-2228092356209653569_i64) << (*_11).fld4;
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_11).fld1 = _20 as u64;
(*_24) = 46787620_i32 as i64;
(*_24) = 6566050776915578843_i64;
place!(Field::<u64>(Variant(_15, 2), 1)) = (*_11).fld1 | (*_11).fld1;
place!(Field::<i16>(Variant(_23, 0), 4)) = (*_11).fld4 >> (*_11).fld4;
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
place!(Field::<u64>(Variant(_15, 2), 1)) = !(*_11).fld1;
(*_11).fld3 = core::ptr::addr_of!((*_24));
_7.fld0.fld1 = Field::<u64>(Variant(_15, 2), 1) ^ Field::<u64>(Variant(_15, 2), 1);
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 690381138698570908_i64;
_12 = Field::<u8>(Variant(_23, 0), 1) % Field::<u8>(Variant(_23, 0), 1);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) * Field::<i16>(Variant(_13, 2), 0);
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 3805123059825496447_i64;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_11).fld2 = (*_11).fld0 as f64;
place!(Field::<bool>(Variant(_23, 0), 0)) = _19;
(*_24) = 219333185904747989798234607863629255753_u128 as i64;
(*_11).fld0 = _5 & _5;
(*_11).fld3 = core::ptr::addr_of!((*_24));
match Field::<u8>(Variant(_23, 0), 1) {
0 => bb13,
1 => bb15,
2 => bb6,
92 => bb17,
_ => bb10
}
}
bb17 = {
(*_11).fld1 = Field::<f32>(Variant(_23, 0), 5) as u64;
_27 = Field::<u8>(Variant(_23, 0), 1);
_13 = Adt19::Variant1 { fld0: (*_11).fld1,fld1: _20,fld2: _8,fld3: 211326276150158211687350130647123780880_u128,fld4: 105717748777184369623476199548292589158_i128,fld5: (-490480080_i32) };
_35 = &_25;
(*_24) = -(-7579855986935617556_i64);
RET = core::ptr::addr_of!((*_24));
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) | Field::<i16>(Variant(_23, 0), 4);
place!(Field::<bool>(Variant(_23, 0), 0)) = _19;
Goto(bb18)
}
bb18 = {
_28 = [3669860652_u32,150381238_u32,1849871999_u32];
_33 = !Field::<bool>(Variant(_23, 0), 0);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) ^ Field::<i16>(Variant(_23, 0), 4);
_31.1 = 102_i8 ^ 106_i8;
(*_24) = !8452442411527834526_i64;
_35 = &_17.0;
(*_11).fld3 = Move(RET);
(*_24) = 6352232291868691670_i64 | (-8921571058889491036_i64);
(*_24) = 3649823019949741967_i64;
(*_11).fld1 = !Field::<u64>(Variant(_13, 1), 0);
_22 = -(*_35);
(*_11).fld4 = -Field::<i16>(Variant(_15, 2), 0);
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 7636350275697843650_i64;
(*_11).fld0 = _5 | _5;
_31 = (Move(_35), (-8_i8));
_29 = (_25,);
_23 = Adt25::Variant0 { fld0: _19,fld1: _12,fld2: 2078976268028685619_i64,fld3: _31.1,fld4: Field::<i16>(Variant(_15, 2), 0),fld5: _10 };
(*_11).fld2 = 151907692808583457590780363592746470989_i128 as f64;
place!(Field::<i32>(Variant(_13, 1), 5)) = 218661510_i32 >> (*_11).fld4;
_39.0 = &_25;
(*_11).fld0 = !_5;
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
(*_1) = core::ptr::addr_of!(_39);
_17.0 = Field::<isize>(Variant(_13, 1), 2) - _8;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
match _31.1 {
0 => bb5,
340282366920938463463374607431768211448 => bb19,
_ => bb9
}
}
bb19 = {
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0) - Field::<u64>(Variant(_13, 1), 0);
Goto(bb20)
}
bb20 = {
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
place!(Field::<f32>(Variant(_23, 0), 5)) = 91220768595085267486066686564311277078_u128 as f32;
_36 = &_29.0;
(*_14).0 = &(*_36);
_7.fld0.fld2 = 7837727562527253570_i64 as f64;
_26 = _33 ^ Field::<bool>(Variant(_23, 0), 0);
_39 = (Move(_36), Field::<i8>(Variant(_23, 0), 3));
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0) & Field::<u64>(Variant(_15, 2), 1);
place!(Field::<bool>(Variant(_23, 0), 0)) = (*_11).fld4 > (*_11).fld4;
place!(Field::<i128>(Variant(_13, 1), 4)) = !(-126225975214753351508573535812775793382_i128);
_9 = Field::<u8>(Variant(_23, 0), 1) as f32;
_32 = Field::<char>(Variant(_13, 1), 1);
_13 = _15;
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) - Field::<i16>(Variant(_15, 2), 0);
(*_11).fld0 = _5 | _5;
(*_14).0 = &_4;
match (*_14).1 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
340282366920938463463374607431768211448 => bb26,
_ => bb25
}
}
bb21 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb22 = {
_28 = [3669860652_u32,150381238_u32,1849871999_u32];
_33 = !Field::<bool>(Variant(_23, 0), 0);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) ^ Field::<i16>(Variant(_23, 0), 4);
_31.1 = 102_i8 ^ 106_i8;
(*_24) = !8452442411527834526_i64;
_35 = &_17.0;
(*_11).fld3 = Move(RET);
(*_24) = 6352232291868691670_i64 | (-8921571058889491036_i64);
(*_24) = 3649823019949741967_i64;
(*_11).fld1 = !Field::<u64>(Variant(_13, 1), 0);
_22 = -(*_35);
(*_11).fld4 = -Field::<i16>(Variant(_15, 2), 0);
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 7636350275697843650_i64;
(*_11).fld0 = _5 | _5;
_31 = (Move(_35), (-8_i8));
_29 = (_25,);
_23 = Adt25::Variant0 { fld0: _19,fld1: _12,fld2: 2078976268028685619_i64,fld3: _31.1,fld4: Field::<i16>(Variant(_15, 2), 0),fld5: _10 };
(*_11).fld2 = 151907692808583457590780363592746470989_i128 as f64;
place!(Field::<i32>(Variant(_13, 1), 5)) = 218661510_i32 >> (*_11).fld4;
_39.0 = &_25;
(*_11).fld0 = !_5;
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
(*_1) = core::ptr::addr_of!(_39);
_17.0 = Field::<isize>(Variant(_13, 1), 2) - _8;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
match _31.1 {
0 => bb5,
340282366920938463463374607431768211448 => bb19,
_ => bb9
}
}
bb23 = {
(*_11).fld0 = _5;
(*_11).fld0 = _12 as usize;
(*_11).fld1 = !7322433267140386643_u64;
_7.fld0.fld2 = (*_11).fld1 as f64;
(*_11).fld4 = _9 as i16;
(*_11).fld2 = (-930431134_i32) as f64;
_13 = Adt19::Variant2 { fld0: (*_11).fld4,fld1: (*_11).fld1 };
(*_11).fld0 = _5;
(*_11).fld1 = (-2305116036274076716_i64) as u64;
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) + Field::<i16>(Variant(_13, 2), 0);
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) - Field::<u64>(Variant(_13, 2), 1);
(*_11).fld0 = _5 ^ _5;
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
Goto(bb11)
}
bb24 = {
_4 = (-12563_i16) as isize;
_3 = -_4;
_5 = 12133078642785834517_u64 as usize;
_5 = 3320635142_u32 as usize;
_4 = _3;
_3 = _4 - _4;
_4 = (-60185560813242006373247022310540773049_i128) as isize;
_3 = _4 + _4;
_5 = !18239159928737278027_usize;
_5 = !3189661086463126529_usize;
_5 = 2_usize + 7_usize;
Goto(bb3)
}
bb25 = {
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) * Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
_7.fld0.fld0 = _5 + _5;
(*_11).fld1 = 1662553482_u32 as u64;
(*_11).fld4 = Field::<i16>(Variant(_15, 2), 0);
(*_11).fld2 = (-1801262172_i32) as f64;
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) + Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) * Field::<i16>(Variant(_23, 0), 4);
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) ^ Field::<i16>(Variant(_13, 2), 0);
(*_11).fld2 = Field::<u8>(Variant(_23, 0), 1) as f64;
(*_11).fld2 = 4274148299083255818_i64 as f64;
_22 = _17.0 >> (*_11).fld0;
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) - Field::<u64>(Variant(_15, 2), 1);
(*_11).fld2 = 719957918_i32 as f64;
_24 = core::ptr::addr_of_mut!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_24) = (-3739145058258885465_i64) + 7705626003108942491_i64;
(*_11).fld4 = Field::<i16>(Variant(_13, 2), 0) * Field::<i16>(Variant(_15, 2), 0);
(*_24) = (-7329464632842025730_i64) << (*_11).fld0;
_25 = _4 | _17.0;
_5 = _7.fld0.fld0;
_25 = -_22;
(*_11).fld2 = (-62_i8) as f64;
match Field::<u8>(Variant(_23, 0), 1) {
92 => bb16,
_ => bb7
}
}
bb26 = {
(*_11).fld0 = _5;
place!(Field::<u64>(Variant(_15, 2), 1)) = (*_11).fld1 * (*_11).fld1;
(*_11).fld0 = 8271397949998510851_i64 as usize;
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) & Field::<i16>(Variant(_13, 2), 0);
match (*_14).1 {
0 => bb8,
1 => bb23,
2 => bb20,
3 => bb7,
4 => bb24,
5 => bb6,
340282366920938463463374607431768211448 => bb28,
_ => bb27
}
}
bb27 = {
_8 = -_4;
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
(*_11).fld4 = '\u{182b9}' as i16;
_1 = core::ptr::addr_of!(_14);
(*_11).fld0 = 44928792144011569359229926012823633383_u128 as usize;
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1);
(*_11).fld1 = !Field::<u64>(Variant(_13, 2), 1);
_7.fld0.fld2 = Field::<i16>(Variant(_13, 2), 0) as f64;
place!(Field::<u64>(Variant(_13, 2), 1)) = !(*_11).fld1;
_23 = Adt25::Variant0 { fld0: _19,fld1: _12,fld2: (-7220273927437735430_i64),fld3: 34_i8,fld4: Field::<i16>(Variant(_13, 2), 0),fld5: _10 };
_20 = '\u{d1b7f}';
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld4 = (*_11).fld0 as i16;
(*_11).fld1 = Field::<u64>(Variant(_13, 2), 1) * Field::<u64>(Variant(_13, 2), 1);
_15 = _13;
(*_11).fld2 = _8 as f64;
_9 = 7792706522414123667_i64 as f32;
match _12 {
0 => bb5,
1 => bb6,
2 => bb13,
92 => bb15,
_ => bb14
}
}
bb28 = {
place!(Field::<i16>(Variant(_13, 2), 0)) = !(*_11).fld4;
_44 = core::ptr::addr_of!(_17.0);
_13 = Adt19::Variant1 { fld0: (*_11).fld1,fld1: _32,fld2: (*_44),fld3: 53409401160815398415341978143270504787_u128,fld4: 127933311898493610732637913948445163186_i128,fld5: 2030550881_i32 };
(*_11).fld1 = !Field::<u64>(Variant(_15, 2), 1);
(*_14).1 = -Field::<i8>(Variant(_23, 0), 3);
place!(Field::<u128>(Variant(_13, 1), 3)) = 257782887255037365392168813673719191496_u128 + 190326145901902244271426875772712475666_u128;
(*_11).fld1 = !Field::<u64>(Variant(_13, 1), 0);
(*_11).fld0 = _5 ^ _5;
(*_11).fld1 = !Field::<u64>(Variant(_15, 2), 1);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) | Field::<i16>(Variant(_23, 0), 4);
(*_14).0 = &(*_44);
(*_11).fld2 = (-141059250900377157623551800935605211297_i128) as f64;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
match Field::<i8>(Variant(_23, 0), 3) {
0 => bb3,
1 => bb19,
2 => bb29,
3 => bb30,
4 => bb31,
340282366920938463463374607431768211448 => bb33,
_ => bb32
}
}
bb29 = {
_28 = [3669860652_u32,150381238_u32,1849871999_u32];
_33 = !Field::<bool>(Variant(_23, 0), 0);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4) ^ Field::<i16>(Variant(_23, 0), 4);
_31.1 = 102_i8 ^ 106_i8;
(*_24) = !8452442411527834526_i64;
_35 = &_17.0;
(*_11).fld3 = Move(RET);
(*_24) = 6352232291868691670_i64 | (-8921571058889491036_i64);
(*_24) = 3649823019949741967_i64;
(*_11).fld1 = !Field::<u64>(Variant(_13, 1), 0);
_22 = -(*_35);
(*_11).fld4 = -Field::<i16>(Variant(_15, 2), 0);
(*_11).fld3 = core::ptr::addr_of!((*_24));
(*_24) = 7636350275697843650_i64;
(*_11).fld0 = _5 | _5;
_31 = (Move(_35), (-8_i8));
_29 = (_25,);
_23 = Adt25::Variant0 { fld0: _19,fld1: _12,fld2: 2078976268028685619_i64,fld3: _31.1,fld4: Field::<i16>(Variant(_15, 2), 0),fld5: _10 };
(*_11).fld2 = 151907692808583457590780363592746470989_i128 as f64;
place!(Field::<i32>(Variant(_13, 1), 5)) = 218661510_i32 >> (*_11).fld4;
_39.0 = &_25;
(*_11).fld0 = !_5;
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
(*_1) = core::ptr::addr_of!(_39);
_17.0 = Field::<isize>(Variant(_13, 1), 2) - _8;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
match _31.1 {
0 => bb5,
340282366920938463463374607431768211448 => bb19,
_ => bb9
}
}
bb30 = {
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0) - Field::<u64>(Variant(_13, 1), 0);
Goto(bb20)
}
bb31 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb32 = {
_12 = 92_u8;
_11 = core::ptr::addr_of_mut!(_7.fld0);
(*_11).fld1 = !15404187247240435793_u64;
(*_11).fld2 = 63418_u16 as f64;
(*_11).fld4 = 5745_u16 as i16;
_7.fld0.fld1 = (*_11).fld2 as u64;
(*_11).fld4 = (-10734_i16) ^ (-3973_i16);
(*_11).fld2 = 2973234006_u32 as f64;
(*_11).fld1 = 2580050248218330908_u64 ^ 5471285303257103355_u64;
(*_11).fld1 = '\u{520aa}' as u64;
_9 = _10 - _10;
(*_11).fld4 = 28150_i16 - (-22371_i16);
(*_11).fld2 = _9 as f64;
(*_11).fld1 = 16975438861864077844_u64;
(*_11).fld1 = !13496382187792627736_u64;
_8 = _3;
(*_11).fld1 = 6704441089226610186_u64 * 11381139904395881180_u64;
Goto(bb9)
}
bb33 = {
_7.fld0.fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld2 = _12 as f64;
(*_1) = core::ptr::addr_of!((*_14));
_22 = Field::<char>(Variant(_13, 1), 1) as isize;
(*_14).1 = Field::<i8>(Variant(_23, 0), 3) + Field::<i8>(Variant(_23, 0), 3);
_48 = core::ptr::addr_of!(_44);
(*_48) = core::ptr::addr_of!((*_44));
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0);
(*_11).fld0 = _5 + _5;
(*_11).fld0 = _5 ^ _5;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
_35 = &(*_44);
(*_14).0 = &_29.0;
(*_14).1 = _31.1 + _31.1;
(*_48) = core::ptr::addr_of!(_29.0);
(*_11).fld1 = (*_11).fld2 as u64;
(*_11).fld4 = -Field::<i16>(Variant(_23, 0), 4);
(*_48) = core::ptr::addr_of!((*_35));
(*_14) = (Move(_35), _31.1);
(*_48) = core::ptr::addr_of!((*_44));
place!(Field::<u64>(Variant(_13, 1), 0)) = (*_11).fld1 & (*_11).fld1;
Goto(bb34)
}
bb34 = {
_22 = _17.0;
(*_14).0 = &(*_44);
(*_1) = core::ptr::addr_of!((*_14));
_7.fld0.fld2 = _3 as f64;
(*_1) = core::ptr::addr_of!((*_14));
(*_14).1 = (*_11).fld0 as i8;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
_11 = core::ptr::addr_of_mut!((*_11));
(*_1) = core::ptr::addr_of!((*_14));
place!(Field::<i16>(Variant(_23, 0), 4)) = Field::<i16>(Variant(_15, 2), 0);
(*_11).fld4 = 15908_u16 as i16;
_56 = (*_11).fld2;
_43 = (*_11).fld2 * (*_11).fld2;
_58.fld0.fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
_50 = core::ptr::addr_of!((*_48));
(*_11).fld2 = _56;
_58.fld0.fld4 = Field::<u128>(Variant(_13, 1), 3) as i16;
(*_14).1 = Field::<i8>(Variant(_23, 0), 3) | Field::<i8>(Variant(_23, 0), 3);
_50 = Move(_48);
place!(Field::<i16>(Variant(_15, 2), 0)) = !Field::<i16>(Variant(_23, 0), 4);
match Field::<i8>(Variant(_23, 0), 3) {
0 => bb15,
1 => bb22,
2 => bb19,
340282366920938463463374607431768211448 => bb35,
_ => bb23
}
}
bb35 = {
(*_11).fld0 = _5 - _5;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_14).0 = &_22;
Goto(bb36)
}
bb36 = {
_31.0 = &(*_44);
(*_11).fld2 = _56 + _43;
_31 = (Move(_39.0), (*_14).1);
(*_11).fld2 = _56 - _43;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld0 = !_5;
Goto(bb37)
}
bb37 = {
_31.1 = _12 as i8;
(*_14).1 = _31.1 | _31.1;
(*_11).fld1 = Field::<u128>(Variant(_13, 1), 3) as u64;
(*_14).0 = &(*_44);
_41 = core::ptr::addr_of_mut!((*_11));
Goto(bb38)
}
bb38 = {
(*_11).fld2 = _56 + _43;
match Field::<i8>(Variant(_23, 0), 3) {
0 => bb3,
1 => bb27,
340282366920938463463374607431768211448 => bb40,
_ => bb39
}
}
bb39 = {
_12 = 92_u8;
_11 = core::ptr::addr_of_mut!(_7.fld0);
(*_11).fld1 = !15404187247240435793_u64;
(*_11).fld2 = 63418_u16 as f64;
(*_11).fld4 = 5745_u16 as i16;
_7.fld0.fld1 = (*_11).fld2 as u64;
(*_11).fld4 = (-10734_i16) ^ (-3973_i16);
(*_11).fld2 = 2973234006_u32 as f64;
(*_11).fld1 = 2580050248218330908_u64 ^ 5471285303257103355_u64;
(*_11).fld1 = '\u{520aa}' as u64;
_9 = _10 - _10;
(*_11).fld4 = 28150_i16 - (-22371_i16);
(*_11).fld2 = _9 as f64;
(*_11).fld1 = 16975438861864077844_u64;
(*_11).fld1 = !13496382187792627736_u64;
_8 = _3;
(*_11).fld1 = 6704441089226610186_u64 * 11381139904395881180_u64;
Goto(bb9)
}
bb40 = {
(*_41).fld0 = _5 + _5;
match Field::<i8>(Variant(_23, 0), 3) {
0 => bb16,
1 => bb34,
340282366920938463463374607431768211448 => bb41,
_ => bb27
}
}
bb41 = {
_63 = (-2001213818_i32);
_17.0 = 9218_u16 as isize;
(*_1) = core::ptr::addr_of!((*_14));
(*_11).fld0 = _27 as usize;
_7.fld0.fld1 = 2657763521539037159_i64 as u64;
(*_41).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_41).fld4 = Field::<i16>(Variant(_15, 2), 0);
(*_41).fld4 = Field::<i16>(Variant(_15, 2), 0) ^ Field::<i16>(Variant(_23, 0), 4);
_53 = _26;
(*_11).fld2 = _43 * _43;
place!(Field::<f32>(Variant(_23, 0), 5)) = _9;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld0 = _5 >> (*_41).fld4;
_14 = core::ptr::addr_of!((*_14));
(*_11).fld2 = _43 * _56;
_8 = -Field::<isize>(Variant(_13, 1), 2);
_58 = Adt31 { fld0: Move((*_11)) };
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_41).fld4 = Field::<i16>(Variant(_15, 2), 0) << (*_14).1;
(*_1) = core::ptr::addr_of!(_39);
_33 = _26 ^ _26;
_7.fld0 = Adt26 { fld0: _58.fld0.fld0,fld1: _58.fld0.fld1,fld2: _43,fld3: Move(_58.fld0.fld3),fld4: Field::<i16>(Variant(_15, 2), 0) };
(*_11).fld1 = _58.fld0.fld1;
match Field::<i8>(Variant(_23, 0), 3) {
0 => bb38,
1 => bb24,
2 => bb12,
3 => bb26,
340282366920938463463374607431768211448 => bb43,
_ => bb42
}
}
bb42 = {
_4 = (-12563_i16) as isize;
_3 = -_4;
_5 = 12133078642785834517_u64 as usize;
_5 = 3320635142_u32 as usize;
_4 = _3;
_3 = _4 - _4;
_4 = (-60185560813242006373247022310540773049_i128) as isize;
_3 = _4 + _4;
_5 = !18239159928737278027_usize;
_5 = !3189661086463126529_usize;
_5 = 2_usize + 7_usize;
Goto(bb3)
}
bb43 = {
_36 = &_25;
_23 = Adt25::Variant0 { fld0: _33,fld1: _12,fld2: 2575993897982733690_i64,fld3: (*_14).1,fld4: (*_11).fld4,fld5: _10 };
_66 = (*_36) ^ (*_36);
(*_1) = core::ptr::addr_of!((*_14));
_40 = &(*_1);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
_8 = _9 as isize;
(*_11).fld1 = !Field::<u64>(Variant(_15, 2), 1);
_69 = Field::<u128>(Variant(_13, 1), 3) as f64;
(*_1) = core::ptr::addr_of!((*_14));
Call(_57 = core::intrinsics::transmute((*_14).1), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
(*_11).fld4 = _58.fld0.fld4 | Field::<i16>(Variant(_23, 0), 4);
(*_11).fld0 = !_58.fld0.fld0;
_7.fld0.fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_14) = (Move(_36), Field::<i8>(Variant(_23, 0), 3));
_50 = core::ptr::addr_of!(_44);
Goto(bb45)
}
bb45 = {
_54 = !_66;
_72 = [(*_11).fld1,(*_11).fld1,_7.fld0.fld1,(*_11).fld1,(*_11).fld1,_7.fld0.fld1,(*_11).fld1];
_58.fld0.fld4 = (*_11).fld4 >> (*_11).fld1;
(*_11).fld4 = _58.fld0.fld4;
_23 = Adt25::Variant0 { fld0: _19,fld1: _57,fld2: (-34908020800989944_i64),fld3: _39.1,fld4: (*_11).fld4,fld5: _10 };
(*_11).fld2 = _43 * _56;
_35 = &_54;
(*_11).fld1 = !Field::<u64>(Variant(_15, 2), 1);
_39.0 = &(*_35);
(*_11).fld4 = Field::<i16>(Variant(_23, 0), 4);
_59 = !Field::<u8>(Variant(_23, 0), 1);
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1);
_7.fld0.fld0 = !_5;
(*_1) = core::ptr::addr_of!((*_14));
(*_11).fld4 = _58.fld0.fld4;
(*_50) = core::ptr::addr_of!((*_35));
place!(Field::<i8>(Variant(_23, 0), 3)) = _56 as i8;
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1);
(*_11).fld1 = !Field::<u64>(Variant(_15, 2), 1);
_74 = (-5287351007484101299_i64) * 6592723014871766726_i64;
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0);
match _63 {
0 => bb25,
1 => bb46,
2 => bb47,
340282366920938463463374607429766997638 => bb49,
_ => bb48
}
}
bb46 = {
Return()
}
bb47 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb48 = {
_31.0 = &(*_44);
(*_11).fld2 = _56 + _43;
_31 = (Move(_39.0), (*_14).1);
(*_11).fld2 = _56 - _43;
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld0 = !_5;
Goto(bb37)
}
bb49 = {
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
_4 = !(*_35);
(*_1) = core::ptr::addr_of!((*_14));
_48 = core::ptr::addr_of!((*_50));
(*_11).fld3 = core::ptr::addr_of!(_74);
_75 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld0 = _58.fld0.fld0 ^ _5;
_49 = _20 as u8;
_27 = _12;
(*_14).1 = Field::<i8>(Variant(_23, 0), 3) << (*_44);
match _63 {
0 => bb50,
340282366920938463463374607429766997638 => bb52,
_ => bb51
}
}
bb50 = {
_7.fld0.fld2 = 4289443801_u32 as f64;
_8 = _3 + _3;
_7.fld0.fld4 = (-12634_i16) * 31389_i16;
_3 = !_8;
_7.fld0.fld4 = 10611_i16;
_7.fld0.fld4 = 7908_i16 << _8;
_7.fld0.fld0 = _5;
_7.fld0.fld0 = _5 + _5;
_9 = 318422133903096086129911118181290908391_u128 as f32;
_7.fld0.fld1 = 62341189056746893527037359179195584804_u128 as u64;
_9 = (-143729039178143206449959814568494122855_i128) as f32;
_7.fld0.fld4 = 5446_i16 | 29435_i16;
_7.fld0.fld4 = -(-20708_i16);
_4 = _3;
_9 = _7.fld0.fld0 as f32;
_7.fld0.fld4 = 23526_i16 << _4;
_7.fld0.fld0 = !_5;
_8 = _3;
_7.fld0.fld4 = 7844_i16 * (-3808_i16);
_3 = _8 << _7.fld0.fld1;
_8 = _4;
_5 = 2046209245_u32 as usize;
_7.fld0.fld4 = -2921_i16;
_3 = _8;
_9 = _5 as f32;
_10 = _9 - _9;
_8 = _4;
_9 = _10 * _10;
Goto(bb8)
}
bb51 = {
_3 = 9223372036854775807_isize * (-110_isize);
_3 = 9223372036854775807_isize;
_3 = '\u{7b38c}' as isize;
_3 = 9223372036854775807_isize;
_3 = !9223372036854775807_isize;
_3 = (-9223372036854775808_isize);
_3 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_3 = 9223372036854775807_isize;
_3 = (-49_i8) as isize;
Goto(bb2)
}
bb52 = {
place!(Field::<i16>(Variant(_23, 0), 4)) = _58.fld0.fld4 * (*_11).fld4;
(*_1) = core::ptr::addr_of!((*_14));
(*_48) = core::ptr::addr_of!((*_44));
(*_11).fld0 = (*_44) as usize;
_10 = -_9;
(*_11).fld2 = _58.fld0.fld2 - _58.fld0.fld2;
_17 = _29;
(*_11).fld3 = core::ptr::addr_of!((*_75));
(*_11).fld0 = _58.fld0.fld0 << (*_35);
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0) | Field::<u64>(Variant(_15, 2), 1);
(*_1) = core::ptr::addr_of!((*_14));
(*_75) = _74 & _74;
RET = core::ptr::addr_of!((*_75));
_63 = 118113728_i32 - 1811838233_i32;
(*RET) = _74;
(*_11).fld3 = core::ptr::addr_of!((*RET));
(*_11) = Adt26 { fld0: _58.fld0.fld0,fld1: Field::<u64>(Variant(_15, 2), 1),fld2: _58.fld0.fld2,fld3: Move(RET),fld4: Field::<i16>(Variant(_23, 0), 4) };
_34 = [(*_11).fld4,(*_11).fld4,(*_11).fld4,(*_11).fld4,(*_11).fld4,(*_11).fld4];
(*_11).fld1 = (*_11).fld0 as u64;
Goto(bb53)
}
bb53 = {
(*_75) = _74;
(*_11).fld3 = core::ptr::addr_of!((*_75));
(*_11) = Adt26 { fld0: _58.fld0.fld0,fld1: Field::<u64>(Variant(_15, 2), 1),fld2: _43,fld3: Move(_75),fld4: Field::<i16>(Variant(_23, 0), 4) };
(*_11).fld0 = !_58.fld0.fld0;
place!(Field::<char>(Variant(_13, 1), 1)) = _32;
(*_14) = (Move(_35), Field::<i8>(Variant(_23, 0), 3));
_5 = (*_11).fld0 ^ (*_11).fld0;
place!(Field::<i8>(Variant(_23, 0), 3)) = (*_14).1 << (*_11).fld4;
_58 = Adt31 { fld0: Move((*_11)) };
(*_11) = Move(_58.fld0);
(*_14).1 = 62820593804906569806781023990998650938_i128 as i8;
(*_11).fld2 = -_43;
_26 = (*_11).fld0 == (*_11).fld0;
(*_11).fld0 = _5 ^ _5;
(*_14).1 = Field::<u128>(Variant(_13, 1), 3) as i8;
_78 = &_26;
(*_14).0 = &(*_44);
(*_14).0 = &_66;
(*_1) = core::ptr::addr_of!((*_14));
place!(Field::<char>(Variant(_13, 1), 1)) = _20;
(*_11).fld2 = _43;
(*_11).fld0 = (-76425772220668162020038145965132947969_i128) as usize;
(*_14).0 = &(*_44);
_29 = ((*_44),);
_4 = _17.0 + (*_44);
Call(_48 = core::intrinsics::arith_offset(_50, (-9223372036854775808_isize)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
(*_11).fld3 = core::ptr::addr_of!(_74);
_87 = _74 as u32;
(*_14).0 = &_17.0;
_58 = Adt31 { fld0: Move((*_11)) };
_5 = _58.fld0.fld0;
(*_50) = core::ptr::addr_of!(_22);
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_11).fld0 = Field::<bool>(Variant(_23, 0), 0) as usize;
(*_11).fld1 = Field::<u64>(Variant(_13, 1), 0) ^ Field::<u64>(Variant(_15, 2), 1);
_37 = &mut _78;
(*_11) = Adt26 { fld0: _5,fld1: _58.fld0.fld1,fld2: _58.fld0.fld2,fld3: Move(_58.fld0.fld3),fld4: Field::<i16>(Variant(_15, 2), 0) };
(*_11).fld3 = core::ptr::addr_of!(_74);
(*_11).fld3 = core::ptr::addr_of!(place!(Field::<i64>(Variant(_23, 0), 2)));
(*_50) = core::ptr::addr_of!((*_44));
_58 = Adt31 { fld0: Move((*_11)) };
(*_11) = Move(_58.fld0);
Goto(bb55)
}
bb55 = {
(*_11).fld4 = !Field::<i16>(Variant(_23, 0), 4);
Goto(bb56)
}
bb56 = {
(*_14).0 = &_29.0;
_9 = 65219_u16 as f32;
(*_11).fld2 = _56 * _69;
Call((*_11).fld0 = core::intrinsics::transmute(_4), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
_92.0 = &(*_44);
(*_1) = core::ptr::addr_of!((*_14));
_51 = Field::<f32>(Variant(_23, 0), 5) * Field::<f32>(Variant(_23, 0), 5);
_79 = core::ptr::addr_of!(_87);
_90 = Move((*_14).0);
(*_14).0 = &_8;
(*_79) = !3172759328_u32;
_24 = core::ptr::addr_of_mut!(_77);
Goto(bb58)
}
bb58 = {
(*_11).fld1 = Field::<u64>(Variant(_15, 2), 1) * Field::<u64>(Variant(_15, 2), 1);
(*_11).fld3 = core::ptr::addr_of!((*_24));
_5 = (*_11).fld0;
(*_14).0 = &(*_44);
_61 = &(*_37);
(*_11).fld0 = (*_11).fld2 as usize;
(*_14) = (Move(_92.0), Field::<i8>(Variant(_23, 0), 3));
_58.fld0.fld3 = core::ptr::addr_of!((*_24));
(*_79) = 2354809204_u32 - 1745287447_u32;
_70 = Field::<u128>(Variant(_13, 1), 3) & Field::<u128>(Variant(_13, 1), 3);
(*_11).fld2 = _56 - _43;
(*_24) = Field::<i64>(Variant(_23, 0), 2);
RET = core::ptr::addr_of!((*_24));
(*_14).0 = &(*_44);
(*_50) = core::ptr::addr_of!((*_44));
(*_37) = &_33;
_86 = _63 * _63;
_7.fld0.fld0 = (*_79) as usize;
_70 = !Field::<u128>(Variant(_13, 1), 3);
Goto(bb59)
}
bb59 = {
Call(_94 = dump_var(19_usize, 34_usize, Move(_34), 8_usize, Move(_8), 16_usize, Move(_16), 66_usize, Move(_66)), ReturnTo(bb60), UnwindUnreachable())
}
bb60 = {
Call(_94 = dump_var(19_usize, 53_usize, Move(_53), 32_usize, Move(_32), 57_usize, Move(_57), 3_usize, Move(_3)), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
Call(_94 = dump_var(19_usize, 25_usize, Move(_25), 77_usize, Move(_77), 74_usize, Move(_74), 5_usize, Move(_5)), ReturnTo(bb62), UnwindUnreachable())
}
bb62 = {
Call(_94 = dump_var(19_usize, 72_usize, Move(_72), 63_usize, Move(_63), 54_usize, Move(_54), 95_usize, _95), ReturnTo(bb63), UnwindUnreachable())
}
bb63 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(5_usize), std::hint::black_box('\u{9de42}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box(89_i8), std::hint::black_box((-23102_i16)), std::hint::black_box(35901444_i32), std::hint::black_box(61743_u16), std::hint::black_box(312504719925695767347388604119076710424_u128));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt19 {
Variant0{
fld0: u64,
fld1: char,
fld2: usize,
fld3: [usize; 4],
fld4: i16,
fld5: f32,
fld6: u32,
fld7: f64,

},
Variant1{
fld0: u64,
fld1: char,
fld2: isize,
fld3: u128,
fld4: i128,
fld5: i32,

},
Variant2{
fld0: i16,
fld1: u64,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt25 {
Variant0{
fld0: bool,
fld1: u8,
fld2: i64,
fld3: i8,
fld4: i16,
fld5: f32,

},
Variant1{
fld0: bool,
fld1: Adt19,
fld2: u128,
fld3: i8,
fld4: (f64,),

}}
#[derive(Debug)]
pub struct Adt26 {
fld0: usize,
fld1: u64,
fld2: f64,
fld3: *const i64,
fld4: i16,
}
#[derive(Debug)]
pub struct Adt31 {
fld0: Adt26,
}
#[derive(Debug)]
pub enum Adt43 {
Variant0{
fld0: bool,
fld1: *const i64,
fld2: [usize; 4],
fld3: Adt31,
fld4: Adt19,
fld5: u8,
fld6: i64,

},
Variant1{
fld0: Adt19,
fld1: [u8; 3],
fld2: i64,

},
Variant2{
fld0: f64,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: bool,
fld1: *mut [u128; 2],
fld2: isize,

},
Variant1{
fld0: usize,
fld1: u16,
fld2: isize,
fld3: f64,
fld4: *const i64,
fld5: i32,
fld6: [u8; 3],
fld7: Adt19,

}}
#[derive(Debug)]
pub enum Adt73 {
Variant0{
fld0: ([i128; 2], Adt26, *mut (Adt26, i16, char, Adt31), *const i64),
fld1: Adt57,

},
Variant1{
fld0: *const i64,
fld1: [usize; 1],
fld2: isize,
fld3: u16,
fld4: u128,
fld5: *mut (Adt26, i16, char, Adt31),
fld6: f32,
fld7: [i16; 8],

}}
#[derive(Debug)]
pub enum Adt86 {
Variant0{
fld0: *const u32,
fld1: Adt31,
fld2: (f64,),
fld3: *mut i64,
fld4: *const i8,
fld5: usize,
fld6: [usize; 4],

},
Variant1{
fld0: bool,
fld1: u32,
fld2: (f64,),
fld3: ([i128; 2], Adt26, *mut (Adt26, i16, char, Adt31), *const i64),
fld4: i16,
fld5: i32,
fld6: [bool; 8],
fld7: i128,

}}

