#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: isize,mut _2: u32) -> isize {
mir! {
type RET = isize;
let _3: f32;
let _4: *const &'static mut &'static u16;
let _5: Adt56;
let _6: [i64; 7];
let _7: *mut [i128; 2];
let _8: isize;
let _9: bool;
let _10: (&'static mut &'static u16, *const &'static mut i128);
let _11: f64;
let _12: (f32, [u32; 8], bool, i128);
let _13: *mut u16;
let _14: ([i8; 5], [u32; 2], Adt47);
let _15: &'static mut Adt56;
let _16: (&'static mut [i8; 5], [u64; 1]);
let _17: *const *mut [i128; 2];
let _18: bool;
let _19: isize;
let _20: isize;
let _21: [i8; 5];
let _22: *const &'static (u32, (f32, [u32; 8], bool, i128));
let _23: *mut [i128; 2];
let _24: bool;
let _25: Adt54;
let _26: &'static mut *const &'static (u32, (f32, [u32; 8], bool, i128));
let _27: isize;
let _28: (&'static mut [i8; 5], [u64; 1]);
let _29: [char; 2];
let _30: u128;
let _31: f32;
let _32: (Adt26, (i128, Adt29, isize), u32);
let _33: bool;
let _34: bool;
let _35: [char; 6];
let _36: f32;
let _37: i64;
let _38: ();
let _39: ();
{
_1 = (-39_i8) as isize;
Goto(bb1)
}
bb1 = {
RET = _1 ^ _1;
_1 = RET;
_2 = 2191849819_u32;
_3 = (-1805598860_i32) as f32;
_3 = 5_usize as f32;
_2 = 1995038187_u32 + 1680873639_u32;
_3 = (-1731877544_i32) as f32;
_1 = !RET;
RET = _3 as isize;
_2 = !3418797635_u32;
RET = true as isize;
RET = _1;
_1 = (-124_i8) as isize;
_6 = [7514638404662442094_i64,(-8719532516350993532_i64),(-2686224103004731166_i64),(-5908514755113593807_i64),3261310678380877228_i64,874710657552486381_i64,5519333222245509374_i64];
RET = _1;
RET = '\u{da587}' as isize;
_3 = _2 as f32;
Goto(bb2)
}
bb2 = {
_2 = 1234171356_u32 * 1281252299_u32;
_6 = [(-901903473528979617_i64),1239439641201655455_i64,(-2132914193493127005_i64),959858069051392054_i64,6459641515868401043_i64,8335365552236830467_i64,3913555508011857622_i64];
_2 = 28156_i16 as u32;
_8 = '\u{a5f9b}' as isize;
_6 = [5822995919749423595_i64,3329836293825045013_i64,(-5619199552268831286_i64),(-2903689460144292181_i64),3441495270750287306_i64,7371060564234884376_i64,(-2629262214071947494_i64)];
_1 = -_8;
_2 = 3244592022_u32 << _1;
_2 = 161699983134988179522053940693200073118_u128 as u32;
_6 = [8395180154836834730_i64,(-8059422011141905731_i64),(-8749477330748913484_i64),7874675513830307367_i64,9076227315150726949_i64,5858886022532042942_i64,(-1944771300968301947_i64)];
_1 = !RET;
_1 = '\u{41157}' as isize;
_3 = (-2727555293190673279_i64) as f32;
_8 = _1;
_8 = !RET;
_9 = !false;
_1 = _8 << RET;
RET = _1;
_9 = true;
RET = _8 + _1;
_8 = RET + RET;
_8 = 331983195168398933822078822640939071272_u128 as isize;
_12.3 = 10082572691672739135_u64 as i128;
_3 = _2 as f32;
_8 = 89_u8 as isize;
Goto(bb3)
}
bb3 = {
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = _8 * _8;
_11 = 65446_u16 as f64;
_11 = 42_u8 as f64;
RET = !_1;
_3 = _11 as f32;
_12.3 = _3 as i128;
RET = _8;
_1 = RET + RET;
_12.0 = _3 - _3;
RET = _2 as isize;
RET = _12.3 as isize;
_8 = RET;
RET = 4229444862283040868_u64 as isize;
_9 = _2 > _2;
_12.2 = _9;
_9 = !_12.2;
Goto(bb4)
}
bb4 = {
_9 = _12.2 & _12.2;
_3 = _12.0 * _12.0;
_12.3 = !(-95067928865069303287069199540131577736_i128);
_3 = _12.0;
_12.3 = (-146389736983765147734410497567062391145_i128);
_14.1 = [_2,_2];
_1 = _8 ^ _8;
_3 = _12.0 + _12.0;
_11 = 17185733589166869190_usize as f64;
_3 = _12.0 * _12.0;
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_12.2 = !_9;
_12.0 = 3217560485300477171_u64 as f32;
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_14.1 = [_2,_2];
_9 = _12.2 > _12.2;
_17 = core::ptr::addr_of!(_7);
_12.3 = (-74781382132250005324385723072156616665_i128);
match _12.3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
265500984788688458138988884359611594791 => bb8,
_ => bb7
}
}
bb5 = {
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = _8 * _8;
_11 = 65446_u16 as f64;
_11 = 42_u8 as f64;
RET = !_1;
_3 = _11 as f32;
_12.3 = _3 as i128;
RET = _8;
_1 = RET + RET;
_12.0 = _3 - _3;
RET = _2 as isize;
RET = _12.3 as isize;
_8 = RET;
RET = 4229444862283040868_u64 as isize;
_9 = _2 > _2;
_12.2 = _9;
_9 = !_12.2;
Goto(bb4)
}
bb6 = {
_2 = 1234171356_u32 * 1281252299_u32;
_6 = [(-901903473528979617_i64),1239439641201655455_i64,(-2132914193493127005_i64),959858069051392054_i64,6459641515868401043_i64,8335365552236830467_i64,3913555508011857622_i64];
_2 = 28156_i16 as u32;
_8 = '\u{a5f9b}' as isize;
_6 = [5822995919749423595_i64,3329836293825045013_i64,(-5619199552268831286_i64),(-2903689460144292181_i64),3441495270750287306_i64,7371060564234884376_i64,(-2629262214071947494_i64)];
_1 = -_8;
_2 = 3244592022_u32 << _1;
_2 = 161699983134988179522053940693200073118_u128 as u32;
_6 = [8395180154836834730_i64,(-8059422011141905731_i64),(-8749477330748913484_i64),7874675513830307367_i64,9076227315150726949_i64,5858886022532042942_i64,(-1944771300968301947_i64)];
_1 = !RET;
_1 = '\u{41157}' as isize;
_3 = (-2727555293190673279_i64) as f32;
_8 = _1;
_8 = !RET;
_9 = !false;
_1 = _8 << RET;
RET = _1;
_9 = true;
RET = _8 + _1;
_8 = RET + RET;
_8 = 331983195168398933822078822640939071272_u128 as isize;
_12.3 = 10082572691672739135_u64 as i128;
_3 = _2 as f32;
_8 = 89_u8 as isize;
Goto(bb3)
}
bb7 = {
RET = _1 ^ _1;
_1 = RET;
_2 = 2191849819_u32;
_3 = (-1805598860_i32) as f32;
_3 = 5_usize as f32;
_2 = 1995038187_u32 + 1680873639_u32;
_3 = (-1731877544_i32) as f32;
_1 = !RET;
RET = _3 as isize;
_2 = !3418797635_u32;
RET = true as isize;
RET = _1;
_1 = (-124_i8) as isize;
_6 = [7514638404662442094_i64,(-8719532516350993532_i64),(-2686224103004731166_i64),(-5908514755113593807_i64),3261310678380877228_i64,874710657552486381_i64,5519333222245509374_i64];
RET = _1;
RET = '\u{da587}' as isize;
_3 = _2 as f32;
Goto(bb2)
}
bb8 = {
_12.2 = _9 | _9;
_8 = (-3786_i16) as isize;
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
_17 = core::ptr::addr_of!(_7);
_14.0 = [104_i8,(-68_i8),(-123_i8),33_i8,(-69_i8)];
RET = _1;
_9 = _12.2;
_19 = (-33_i8) as isize;
RET = _1;
_14.0 = [93_i8,9_i8,126_i8,(-19_i8),(-30_i8)];
_3 = _12.3 as f32;
_9 = _12.2 <= _12.2;
_16.0 = &mut _14.0;
_18 = _9;
_16.1 = [2192085706282418504_u64];
Call(_12.3 = fn1(RET, Move(_16), _12.2, _9), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_11 = 6598829442260579796_u64 as f64;
_16.0 = &mut _14.0;
_21 = [(-106_i8),7_i8,(-65_i8),64_i8,75_i8];
_18 = _12.2 < _12.2;
RET = 4163469638536289156_u64 as isize;
_11 = 211032529514454229811321441493365045129_u128 as f64;
_6 = [(-7516143185273833107_i64),7624800207629406052_i64,8658886456318761200_i64,(-5409522062083465965_i64),(-7961901807621336284_i64),(-7421013392097870780_i64),8860947418615354764_i64];
_3 = _12.0;
_8 = !_1;
_16.1 = [8257941800856250495_u64];
_8 = RET ^ _1;
_24 = _12.2;
_20 = _2 as isize;
Goto(bb10)
}
bb10 = {
_21 = _14.0;
_2 = 1099065542_u32;
_14.1 = [_2,_2];
_19 = _11 as isize;
_18 = !_12.2;
_12.3 = (-28622_i16) as i128;
_17 = core::ptr::addr_of!(_23);
RET = _20;
_17 = core::ptr::addr_of!(_23);
_24 = _9 < _9;
_24 = _9;
_27 = -_1;
_21 = [65_i8,74_i8,59_i8,78_i8,96_i8];
_12.3 = -(-164490310087517062429918349077079852709_i128);
_14.0 = _21;
_17 = core::ptr::addr_of!((*_17));
_12.2 = _9;
_14.1 = [_2,_2];
_3 = -_12.0;
_17 = core::ptr::addr_of!((*_17));
_17 = core::ptr::addr_of!((*_17));
Goto(bb11)
}
bb11 = {
_16.0 = &mut _14.0;
_24 = !_12.2;
_28.0 = &mut _14.0;
_28.1 = [12149711454669902720_u64];
_12.0 = _3 * _3;
_8 = _19 >> _27;
_28 = Move(_16);
_2 = 3333453682_u32;
_9 = !_24;
_1 = !_8;
_16.1 = _28.1;
_17 = core::ptr::addr_of!((*_17));
_17 = core::ptr::addr_of!((*_17));
_29 = ['\u{96933}','\u{dbff4}'];
_12.0 = _3 - _3;
Goto(bb12)
}
bb12 = {
_12.2 = _18 > _18;
RET = _1 - _1;
_6 = [(-7422640345278493970_i64),4013268263727102947_i64,(-5614372804614268748_i64),(-3766830523812310789_i64),(-6073334381884434498_i64),(-7882306929151552346_i64),7481963914327067093_i64];
_20 = 5_i8 as isize;
_19 = 182_u8 as isize;
_9 = _24;
_1 = RET >> _2;
_19 = RET << _2;
_12.0 = (-86_i8) as f32;
_27 = !_19;
match _2 {
0 => bb11,
1 => bb2,
3333453682 => bb13,
_ => bb10
}
}
bb13 = {
_12.2 = _9;
_16.0 = &mut _21;
_14.1 = [_2,_2];
_28.0 = Move(_16.0);
_1 = -_19;
_12.2 = _24;
_31 = _3;
_11 = (-940199968_i32) as f64;
_20 = _2 as isize;
_20 = RET >> _19;
_14.0 = [65_i8,95_i8,(-107_i8),59_i8,(-8_i8)];
_31 = _3;
_30 = 5769382554904978666996201576538564612_u128 - 83989928186172372827500979184363688451_u128;
_24 = !_18;
_16.1 = [5654073238829630898_u64];
_30 = 249925558232417250591979221747720286837_u128;
_20 = RET >> RET;
_20 = 12450457255691639282_u64 as isize;
_16.1 = _28.1;
_32.0.fld6 = _31 as i64;
_12.0 = _3;
_30 = 84817436723331059517714756096413704371_u128 | 149246519043124743295542414755488841774_u128;
_27 = RET & _1;
_32.1.0 = -_12.3;
match _2 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
3333453682 => bb19,
_ => bb18
}
}
bb14 = {
RET = _1 ^ _1;
_1 = RET;
_2 = 2191849819_u32;
_3 = (-1805598860_i32) as f32;
_3 = 5_usize as f32;
_2 = 1995038187_u32 + 1680873639_u32;
_3 = (-1731877544_i32) as f32;
_1 = !RET;
RET = _3 as isize;
_2 = !3418797635_u32;
RET = true as isize;
RET = _1;
_1 = (-124_i8) as isize;
_6 = [7514638404662442094_i64,(-8719532516350993532_i64),(-2686224103004731166_i64),(-5908514755113593807_i64),3261310678380877228_i64,874710657552486381_i64,5519333222245509374_i64];
RET = _1;
RET = '\u{da587}' as isize;
_3 = _2 as f32;
Goto(bb2)
}
bb15 = {
_16.0 = &mut _14.0;
_24 = !_12.2;
_28.0 = &mut _14.0;
_28.1 = [12149711454669902720_u64];
_12.0 = _3 * _3;
_8 = _19 >> _27;
_28 = Move(_16);
_2 = 3333453682_u32;
_9 = !_24;
_1 = !_8;
_16.1 = _28.1;
_17 = core::ptr::addr_of!((*_17));
_17 = core::ptr::addr_of!((*_17));
_29 = ['\u{96933}','\u{dbff4}'];
_12.0 = _3 - _3;
Goto(bb12)
}
bb16 = {
RET = _1 ^ _1;
_1 = RET;
_2 = 2191849819_u32;
_3 = (-1805598860_i32) as f32;
_3 = 5_usize as f32;
_2 = 1995038187_u32 + 1680873639_u32;
_3 = (-1731877544_i32) as f32;
_1 = !RET;
RET = _3 as isize;
_2 = !3418797635_u32;
RET = true as isize;
RET = _1;
_1 = (-124_i8) as isize;
_6 = [7514638404662442094_i64,(-8719532516350993532_i64),(-2686224103004731166_i64),(-5908514755113593807_i64),3261310678380877228_i64,874710657552486381_i64,5519333222245509374_i64];
RET = _1;
RET = '\u{da587}' as isize;
_3 = _2 as f32;
Goto(bb2)
}
bb17 = {
_2 = 1234171356_u32 * 1281252299_u32;
_6 = [(-901903473528979617_i64),1239439641201655455_i64,(-2132914193493127005_i64),959858069051392054_i64,6459641515868401043_i64,8335365552236830467_i64,3913555508011857622_i64];
_2 = 28156_i16 as u32;
_8 = '\u{a5f9b}' as isize;
_6 = [5822995919749423595_i64,3329836293825045013_i64,(-5619199552268831286_i64),(-2903689460144292181_i64),3441495270750287306_i64,7371060564234884376_i64,(-2629262214071947494_i64)];
_1 = -_8;
_2 = 3244592022_u32 << _1;
_2 = 161699983134988179522053940693200073118_u128 as u32;
_6 = [8395180154836834730_i64,(-8059422011141905731_i64),(-8749477330748913484_i64),7874675513830307367_i64,9076227315150726949_i64,5858886022532042942_i64,(-1944771300968301947_i64)];
_1 = !RET;
_1 = '\u{41157}' as isize;
_3 = (-2727555293190673279_i64) as f32;
_8 = _1;
_8 = !RET;
_9 = !false;
_1 = _8 << RET;
RET = _1;
_9 = true;
RET = _8 + _1;
_8 = RET + RET;
_8 = 331983195168398933822078822640939071272_u128 as isize;
_12.3 = 10082572691672739135_u64 as i128;
_3 = _2 as f32;
_8 = 89_u8 as isize;
Goto(bb3)
}
bb18 = {
_12.1 = [_2,_2,_2,_2,_2,_2,_2,_2];
RET = _8 * _8;
_11 = 65446_u16 as f64;
_11 = 42_u8 as f64;
RET = !_1;
_3 = _11 as f32;
_12.3 = _3 as i128;
RET = _8;
_1 = RET + RET;
_12.0 = _3 - _3;
RET = _2 as isize;
RET = _12.3 as isize;
_8 = RET;
RET = 4229444862283040868_u64 as isize;
_9 = _2 > _2;
_12.2 = _9;
_9 = !_12.2;
Goto(bb4)
}
bb19 = {
_32.0.fld0 = _12.1;
_18 = _12.2;
_20 = _27 + _1;
Goto(bb20)
}
bb20 = {
Call(_38 = dump_var(0_usize, 8_usize, Move(_8), 18_usize, Move(_18), 19_usize, Move(_19), 30_usize, Move(_30)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_38 = dump_var(0_usize, 24_usize, Move(_24), 29_usize, Move(_29), 39_usize, _39, 39_usize, _39), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: isize,mut _2: (&'static mut [i8; 5], [u64; 1]),mut _3: bool,mut _4: bool) -> i128 {
mir! {
type RET = i128;
let _5: *mut (Adt19,);
let _6: u8;
let _7: [char; 7];
let _8: f32;
let _9: (Adt19,);
let _10: *const *const &'static mut i128;
let _11: f64;
let _12: f64;
let _13: ([i8; 5], [u32; 2], Adt47);
let _14: *mut [i128; 2];
let _15: Adt19;
let _16: u16;
let _17: (&'static mut &'static u16, *const &'static mut i128);
let _18: f32;
let _19: [u32; 2];
let _20: i8;
let _21: *mut &'static mut (u16, i64, Adt26, f32);
let _22: isize;
let _23: *const *const &'static mut i128;
let _24: [u32; 2];
let _25: bool;
let _26: char;
let _27: isize;
let _28: ([char; 7], (&'static mut &'static u16, *const &'static mut i128), [i16; 3], (&'static mut [i8; 5], [u64; 1]));
let _29: bool;
let _30: (i128, Adt29, isize);
let _31: isize;
let _32: f64;
let _33: &'static char;
let _34: Adt47;
let _35: (i128, Adt29, isize);
let _36: [char; 6];
let _37: isize;
let _38: f32;
let _39: [u32; 8];
let _40: i8;
let _41: isize;
let _42: char;
let _43: [i64; 7];
let _44: &'static u32;
let _45: isize;
let _46: Adt29;
let _47: &'static mut *const &'static (u32, (f32, [u32; 8], bool, i128));
let _48: [u32; 8];
let _49: *mut u16;
let _50: i16;
let _51: ();
let _52: ();
{
_2.1 = [3668361755386375055_u64];
RET = !6452918480130773332413783630185209894_i128;
_1 = -9223372036854775807_isize;
RET = 23820803769493636054709993848681374052_i128 * 52764165559640240629902498862429871372_i128;
RET = -158246148085645561638406032367562180085_i128;
RET = (-117537067088505293618423506318072653323_i128);
RET = !48549250731345850596547655305865475723_i128;
_1 = (-9223372036854775808_isize) ^ 100_isize;
Call(_4 = fn2(_3, _3, _3, _3, _1, _3, _3, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_7 = ['\u{d9170}','\u{91eb4}','\u{d18ea}','\u{f9d64}','\u{2749f}','\u{799a0}','\u{ff18b}'];
_6 = 93_u8;
_3 = _4;
_8 = (-9635240_i32) as f32;
_7 = ['\u{200d4}','\u{efec8}','\u{ee886}','\u{71023}','\u{4f114}','\u{fde29}','\u{d6789}'];
_4 = _3;
_4 = _3 <= _3;
match _6 {
93 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_11 = 10333722950897143028_u64 as f64;
_11 = (-20946_i16) as f64;
_2.1 = [15459300356905645158_u64];
_13.1 = [506342796_u32,3860128404_u32];
_5 = core::ptr::addr_of_mut!(_9);
_13.0 = [(-99_i8),115_i8,36_i8,20_i8,(-35_i8)];
_13.1 = [3467814162_u32,3266579912_u32];
_13.1 = [2360629221_u32,738329178_u32];
_12 = _11;
_2.1 = [11750171141490598105_u64];
_6 = 95_u8 << RET;
(*_5).0 = Adt19::Variant0 { fld0: 26245_i16 };
(*_5).0 = Adt19::Variant0 { fld0: 19320_i16 };
place!(Field::<i16>(Variant(_9.0, 0), 0)) = 18498_i16;
(*_5).0 = Adt19::Variant0 { fld0: (-30719_i16) };
_15 = Adt19::Variant0 { fld0: (-18533_i16) };
(*_5).0 = Adt19::Variant0 { fld0: (-18303_i16) };
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = 20248_i16 + (-9302_i16);
Call(_2.1 = fn3(Field::<i16>(Variant((*_5).0, 0), 0), (*_5).0, _3, _4, _3, _4, _3, _4, _4), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = _1 as i16;
_11 = 7407772304774922869_usize as f64;
_7 = ['\u{954a4}','\u{3a0ed}','\u{8a655}','\u{b5dcf}','\u{7bce4}','\u{89b03}','\u{924f9}'];
RET = 170003567393780434130690298411122560724_i128 * 165161878313406781111048088401070141684_i128;
_23 = core::ptr::addr_of!(_17.1);
_4 = _3 | _3;
_18 = -_8;
_24 = [1533288032_u32,4247641291_u32];
_10 = core::ptr::addr_of!((*_23));
_13.0 = [(-98_i8),117_i8,(-91_i8),(-48_i8),(-42_i8)];
Goto(bb5)
}
bb5 = {
_5 = core::ptr::addr_of_mut!(_9);
place!(Field::<i16>(Variant(_15, 0), 0)) = 15471413257745729147_u64 as i16;
_6 = 128_u8 | 216_u8;
_18 = _8 - _8;
_22 = _1;
_25 = _4 & _4;
_12 = -_11;
_2.0 = &mut _13.0;
_18 = _8 - _8;
_13.1 = [1460026011_u32,2635964104_u32];
_28.3.1 = [11864422542028164300_u64];
(*_5).0 = _15;
_20 = !(-77_i8);
SetDiscriminant(_15, 0);
_28.3.0 = &mut _13.0;
place!(Field::<i16>(Variant(_15, 0), 0)) = Field::<i16>(Variant((*_5).0, 0), 0);
(*_5).0 = _15;
_13.1 = [3401248502_u32,2926639243_u32];
_27 = _1;
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = Field::<i16>(Variant(_15, 0), 0);
_18 = -_8;
_25 = !_4;
_28.2 = [Field::<i16>(Variant(_15, 0), 0),Field::<i16>(Variant((*_5).0, 0), 0),Field::<i16>(Variant((*_5).0, 0), 0)];
_1 = _22;
_19 = _13.1;
(*_5).0 = _15;
Goto(bb6)
}
bb6 = {
_2.0 = &mut _13.0;
_3 = _4;
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = -Field::<i16>(Variant(_15, 0), 0);
_11 = _8 as f64;
SetDiscriminant(_9.0, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_9.0, 2), 5)) = (2371320895153017185_u64, RET, '\u{e5afc}', _22);
_6 = Field::<(u64, i128, char, isize)>(Variant((*_5).0, 2), 5).0 as u8;
place!(Field::<(u64, i128, char, isize)>(Variant((*_5).0, 2), 5)) = (14449661992391222767_u64, RET, '\u{3cb7d}', _22);
_20 = _8 as i8;
place!(Field::<(u64, i128, char, isize)>(Variant((*_5).0, 2), 5)).3 = _22 - _1;
Goto(bb7)
}
bb7 = {
place!(Field::<u16>(Variant((*_5).0, 2), 3)) = 5070_u16 << Field::<(u64, i128, char, isize)>(Variant((*_5).0, 2), 5).0;
_9.0 = _15;
_24 = [491890452_u32,2831339749_u32];
_1 = _22;
(*_5) = (_15,);
_7 = ['\u{8592f}','\u{2feeb}','\u{19d4b}','\u{c3017}','\u{6a67f}','\u{5cf61}','\u{f5291}'];
_2.1 = _28.3.1;
_12 = _11;
place!(Field::<i16>(Variant(_9.0, 0), 0)) = Field::<i16>(Variant(_15, 0), 0);
_28.3.0 = Move(_2.0);
_29 = !_25;
SetDiscriminant(_9.0, 1);
_9.0 = _15;
_32 = _12;
_24 = [524899342_u32,4123535527_u32];
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = Field::<i16>(Variant(_15, 0), 0);
_10 = core::ptr::addr_of!((*_10));
(*_5) = (_15,);
_28.3.0 = &mut _13.0;
_6 = 116_u8 & 209_u8;
_37 = 1255775351_u32 as isize;
_15 = (*_5).0;
_10 = core::ptr::addr_of!((*_10));
_28.0 = _7;
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = (-2129280334187041525_i64) as i16;
_28.0 = ['\u{1de67}','\u{6ab97}','\u{100e8b}','\u{98b9a}','\u{80f9f}','\u{f010c}','\u{77899}'];
Call(_35.2 = core::intrinsics::transmute(_1), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_36 = ['\u{6ac21}','\u{7189f}','\u{a9497}','\u{177ed}','\u{38dc7}','\u{c59d9}'];
_28.2 = [Field::<i16>(Variant(_15, 0), 0),Field::<i16>(Variant(_15, 0), 0),Field::<i16>(Variant(_15, 0), 0)];
_4 = _25;
_31 = _1;
place!(Field::<i16>(Variant((*_5).0, 0), 0)) = 16686529751170213356_usize as i16;
_8 = _18;
Goto(bb9)
}
bb9 = {
_37 = RET as isize;
_39 = [174745494_u32,3957968693_u32,2369691246_u32,3885231534_u32,788852693_u32,2645145710_u32,3479960396_u32,3842277278_u32];
_10 = core::ptr::addr_of!(_28.1.1);
_28.3.1 = [5108756480718185088_u64];
_9.0 = _15;
_13.1 = [349694216_u32,1907766181_u32];
_28.0 = _7;
Goto(bb10)
}
bb10 = {
_16 = 12356_u16;
_19 = [3191344668_u32,841189796_u32];
_30.1 = Adt29::Variant2 { fld0: _25,fld1: _6,fld2: _22,fld3: _20,fld4: 0_usize,fld5: _39,fld6: _8,fld7: _16 };
_2.0 = Move(_28.3.0);
_11 = (-5761513390040900559_i64) as f64;
_6 = Field::<f32>(Variant(_30.1, 2), 6) as u8;
RET = (-77993562834256651997975549892577429212_i128) - 57141845693749538550936844276642459334_i128;
_24 = [2821549064_u32,3366219567_u32];
_9.0 = _15;
_2.0 = &mut _13.0;
_40 = _20;
SetDiscriminant((*_5).0, 2);
place!(Field::<(u64, i128, char, isize)>(Variant((*_5).0, 2), 5)).1 = RET;
(*_5) = (_15,);
_35.1 = Adt29::Variant2 { fld0: _25,fld1: Field::<u8>(Variant(_30.1, 2), 1),fld2: _27,fld3: _40,fld4: 9550291921479481992_usize,fld5: Field::<[u32; 8]>(Variant(_30.1, 2), 5),fld6: _18,fld7: _16 };
_26 = '\u{10180c}';
_26 = '\u{2d4a1}';
match Field::<u16>(Variant(_30.1, 2), 7) {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb9,
12356 => bb11,
_ => bb8
}
}
bb11 = {
_41 = _31;
_35.2 = _37;
_12 = _32;
place!(Field::<isize>(Variant(_30.1, 2), 2)) = _32 as isize;
place!(Field::<i16>(Variant(_9.0, 0), 0)) = 193365831940529160960870938895945366713_u128 as i16;
_2.1 = [13791376273315577894_u64];
place!(Field::<u8>(Variant(_30.1, 2), 1)) = Field::<u8>(Variant(_35.1, 2), 1);
_45 = _22 ^ _41;
_16 = Field::<u16>(Variant(_30.1, 2), 7) + Field::<u16>(Variant(_35.1, 2), 7);
place!(Field::<f32>(Variant(_35.1, 2), 6)) = _18 - Field::<f32>(Variant(_30.1, 2), 6);
_42 = _26;
_33 = &_26;
place!(Field::<bool>(Variant(_35.1, 2), 0)) = _25;
RET = 78778032819964263770614958981179920317_i128;
_33 = &_42;
SetDiscriminant(_9.0, 2);
place!(Field::<[u32; 8]>(Variant((*_5).0, 2), 4)) = _39;
place!(Field::<u8>(Variant(_35.1, 2), 1)) = !Field::<u8>(Variant(_30.1, 2), 1);
_2.0 = &mut _13.0;
place!(Field::<u8>(Variant((*_5).0, 2), 1)) = _20 as u8;
(*_5).0 = _15;
Goto(bb12)
}
bb12 = {
_9.0 = _15;
place!(Field::<f32>(Variant(_30.1, 2), 6)) = _18 + _8;
RET = _20 as i128;
_20 = Field::<i8>(Variant(_35.1, 2), 3) >> _31;
_32 = _18 as f64;
place!(Field::<u8>(Variant(_30.1, 2), 1)) = !Field::<u8>(Variant(_35.1, 2), 1);
place!(Field::<f32>(Variant(_35.1, 2), 6)) = -_8;
Goto(bb13)
}
bb13 = {
_19 = _24;
_19 = _24;
place!(Field::<u16>(Variant(_30.1, 2), 7)) = _16 >> Field::<isize>(Variant(_30.1, 2), 2);
(*_5).0 = _15;
_28.3.0 = Move(_2.0);
place!(Field::<f32>(Variant(_35.1, 2), 6)) = Field::<f32>(Variant(_30.1, 2), 6);
_13.0 = [Field::<i8>(Variant(_35.1, 2), 3),Field::<i8>(Variant(_35.1, 2), 3),Field::<i8>(Variant(_30.1, 2), 3),_20,_20];
_29 = _25 != _25;
_27 = -_1;
_31 = _35.2 * _27;
_1 = _37 * _45;
SetDiscriminant((*_5).0, 1);
_9 = (_15,);
_11 = _12;
place!(Field::<isize>(Variant(_35.1, 2), 2)) = _31 | Field::<isize>(Variant(_30.1, 2), 2);
_35.1 = Adt29::Variant2 { fld0: _29,fld1: Field::<u8>(Variant(_30.1, 2), 1),fld2: _1,fld3: _40,fld4: 7261739543522298924_usize,fld5: Field::<[u32; 8]>(Variant(_30.1, 2), 5),fld6: _18,fld7: _16 };
_2.0 = &mut _13.0;
place!(Field::<u8>(Variant(_35.1, 2), 1)) = _6;
place!(Field::<i16>(Variant(_15, 0), 0)) = Field::<i16>(Variant(_9.0, 0), 0) * Field::<i16>(Variant((*_5).0, 0), 0);
Goto(bb14)
}
bb14 = {
place!(Field::<[u32; 8]>(Variant(_35.1, 2), 5)) = _39;
RET = -(-161874598316012643674616736117837884202_i128);
_40 = _20;
_35.0 = RET + RET;
RET = !_35.0;
_46 = Adt29::Variant2 { fld0: Field::<bool>(Variant(_30.1, 2), 0),fld1: Field::<u8>(Variant(_35.1, 2), 1),fld2: _31,fld3: _40,fld4: 6_usize,fld5: Field::<[u32; 8]>(Variant(_30.1, 2), 5),fld6: _18,fld7: Field::<u16>(Variant(_30.1, 2), 7) };
_43 = [(-3395028758308652724_i64),(-3585227786234177801_i64),5164656305612489577_i64,4332206680315702075_i64,286673764532807015_i64,(-1640430688983722307_i64),(-2468308991091994863_i64)];
place!(Field::<isize>(Variant(_30.1, 2), 2)) = 98069264733639342379138578354445650820_u128 as isize;
_48 = [3300143653_u32,1693647553_u32,1670674045_u32,474429991_u32,2519842704_u32,3518850494_u32,2170013239_u32,1102661454_u32];
place!(Field::<isize>(Variant(_30.1, 2), 2)) = _27;
place!(Field::<bool>(Variant(_46, 2), 0)) = !_25;
place!(Field::<usize>(Variant(_35.1, 2), 4)) = 3_usize;
_36 = [_42,_26,_26,_26,(*_33),(*_33)];
_2.1 = _28.3.1;
place!(Field::<[u32; 8]>(Variant(_30.1, 2), 5)) = _48;
_28.2 = [Field::<i16>(Variant(_9.0, 0), 0),Field::<i16>(Variant((*_5).0, 0), 0),Field::<i16>(Variant((*_5).0, 0), 0)];
_29 = !Field::<bool>(Variant(_30.1, 2), 0);
SetDiscriminant((*_5).0, 0);
place!(Field::<i8>(Variant(_35.1, 2), 3)) = !Field::<i8>(Variant(_46, 2), 3);
Goto(bb15)
}
bb15 = {
Call(_51 = dump_var(1_usize, 26_usize, Move(_26), 3_usize, Move(_3), 4_usize, Move(_4), 22_usize, Move(_22)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_51 = dump_var(1_usize, 41_usize, Move(_41), 16_usize, Move(_16), 39_usize, Move(_39), 6_usize, Move(_6)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_51 = dump_var(1_usize, 31_usize, Move(_31), 43_usize, Move(_43), 20_usize, Move(_20), 42_usize, Move(_42)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: isize,mut _6: bool,mut _7: bool,mut _8: bool) -> bool {
mir! {
type RET = bool;
let _9: (i128, Adt29, isize);
let _10: f32;
let _11: char;
let _12: *const ([i8; 5], [u32; 2], Adt47);
let _13: f32;
let _14: u8;
let _15: ();
let _16: ();
{
RET = _4 | _2;
_5 = 119_u8 as isize;
_1 = _3 & RET;
RET = _1;
_7 = RET & _4;
_6 = _1 <= _1;
RET = _6;
_8 = !_6;
_8 = _7 <= _4;
_2 = _6;
RET = _7 & _4;
_9.0 = (-103217622146179945531617002576375526725_i128) - 30778460489891188414104153502395542335_i128;
_7 = _6;
_5 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_5 = -114_isize;
_9.0 = !(-59859443804730645331649348278316462474_i128);
_9.2 = _5 | _5;
RET = !_1;
Goto(bb1)
}
bb1 = {
Call(_15 = dump_var(2_usize, 8_usize, Move(_8), 7_usize, Move(_7), 1_usize, Move(_1), 4_usize, Move(_4)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: i16,mut _2: Adt19,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool) -> [u64; 1] {
mir! {
type RET = [u64; 1];
let _10: f64;
let _11: i32;
let _12: char;
let _13: f64;
let _14: *const &'static mut &'static u16;
let _15: ([isize; 5], *const &'static mut &'static u16, [u32; 8], u8);
let _16: *const &'static (u32, (f32, [u32; 8], bool, i128));
let _17: *mut (Adt19,);
let _18: usize;
let _19: f32;
let _20: &'static (u32, (f32, [u32; 8], bool, i128));
let _21: isize;
let _22: f64;
let _23: isize;
let _24: f64;
let _25: f32;
let _26: ();
let _27: ();
{
_7 = !_8;
RET = [14349443712613724589_u64];
_3 = _7 < _8;
_7 = _6 != _4;
_9 = !_8;
_8 = !_3;
_1 = !Field::<i16>(Variant(_2, 0), 0);
_11 = -1458836630_i32;
_13 = 32034_u16 as f64;
_4 = _8;
_8 = !_7;
RET = [11115535388276971921_u64];
_15.3 = !87_u8;
_10 = _13 - _13;
_15.2 = [3191004272_u32,1643760487_u32,3362097864_u32,3300005586_u32,154729427_u32,29633724_u32,3786551763_u32,2368166248_u32];
_15.3 = 108_u8 * 133_u8;
place!(Field::<i16>(Variant(_2, 0), 0)) = _1;
_15.0 = [(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
place!(Field::<i16>(Variant(_2, 0), 0)) = _11 as i16;
RET = [16516656553644221336_u64];
place!(Field::<i16>(Variant(_2, 0), 0)) = 323964455992701298730765395480368957107_u128 as i16;
_15.0 = [9223372036854775807_isize,(-9223372036854775808_isize),(-33_isize),9223372036854775807_isize,9223372036854775807_isize];
RET = [8605041830747153330_u64];
_9 = _6;
Call(_12 = fn4(_7, _5, _6, _8, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_11 = _6 as i32;
RET = [10619770273531118284_u64];
_13 = -_10;
_9 = _6 & _3;
_3 = _9;
_5 = !_8;
RET = [13334839101500990532_u64];
_13 = -_10;
_11 = (-94655646_i32);
place!(Field::<i16>(Variant(_2, 0), 0)) = !_1;
_19 = _11 as f32;
_15.2 = [24154319_u32,1496073755_u32,3332166972_u32,861944254_u32,731945869_u32,3025980432_u32,308961401_u32,3788895922_u32];
place!(Field::<i16>(Variant(_2, 0), 0)) = 2676876933806300950_i64 as i16;
_6 = !_3;
_8 = _9 <= _5;
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463463374607431673555810 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
place!(Field::<i16>(Variant(_2, 0), 0)) = -_1;
SetDiscriminant(_2, 0);
_4 = _7;
place!(Field::<i16>(Variant(_2, 0), 0)) = 21044_u16 as i16;
_6 = _4 | _3;
_11 = 2056024288_i32;
_12 = '\u{76b0b}';
RET = [609068853105633735_u64];
_8 = _3;
_3 = _9 ^ _8;
_15.3 = 73_u8 ^ 59_u8;
RET = [10236933002007655806_u64];
_13 = _10;
SetDiscriminant(_2, 2);
_15.0 = [9223372036854775807_isize,127_isize,9223372036854775807_isize,9223372036854775807_isize,38_isize];
place!(Field::<u32>(Variant(_2, 2), 0)) = 2539822036_u32 + 3012067072_u32;
place!(Field::<[u32; 8]>(Variant(_2, 2), 4)) = [Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_2, 2), 0)];
match _11 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb4,
4 => bb7,
5 => bb8,
6 => bb9,
2056024288 => bb11,
_ => bb10
}
}
bb7 = {
Return()
}
bb8 = {
_11 = _6 as i32;
RET = [10619770273531118284_u64];
_13 = -_10;
_9 = _6 & _3;
_3 = _9;
_5 = !_8;
RET = [13334839101500990532_u64];
_13 = -_10;
_11 = (-94655646_i32);
place!(Field::<i16>(Variant(_2, 0), 0)) = !_1;
_19 = _11 as f32;
_15.2 = [24154319_u32,1496073755_u32,3332166972_u32,861944254_u32,731945869_u32,3025980432_u32,308961401_u32,3788895922_u32];
place!(Field::<i16>(Variant(_2, 0), 0)) = 2676876933806300950_i64 as i16;
_6 = !_3;
_8 = _9 <= _5;
match _11 {
0 => bb2,
1 => bb3,
2 => bb4,
340282366920938463463374607431673555810 => bb6,
_ => bb5
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = !2661966448368956376_u64;
_13 = 124137185088205395036787646002332069508_i128 as f64;
_18 = 298746432509192714887402779421375735557_u128 as usize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = 11769005597329463682_u64 << _15.3;
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u32>(Variant(_2, 2), 0) as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = 25749_u16 as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).1 = _11 as i128;
_10 = _13;
_13 = _10 + _10;
_18 = 1_usize;
place!(Field::<u8>(Variant(_2, 2), 1)) = _15.3 & _15.3;
_18 = 63769503437536608627276183471427687874_u128 as usize;
RET = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).0];
_19 = Field::<u32>(Variant(_2, 2), 0) as f32;
_4 = !_9;
_15.0 = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3];
place!(Field::<u16>(Variant(_2, 2), 3)) = !14816_u16;
_10 = Field::<u16>(Variant(_2, 2), 3) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (15834822723667072881_u64, 126784692261965609343640058516397954173_i128, _12, (-55_isize));
place!(Field::<f64>(Variant(_2, 2), 2)) = -_13;
_22 = _1 as f64;
_18 = 7_usize;
place!(Field::<[u32; 8]>(Variant(_2, 2), 4))[_18] = !_15.2[_18];
SetDiscriminant(_2, 2);
Call(_15.1 = fn6(_9, _15.2[_18], _4, _9, _4, _8, _8, RET), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_15.2 = [88613192_u32,1675787994_u32,2889402864_u32,1082308981_u32,4219307429_u32,1508332023_u32,2033699903_u32,2141140049_u32];
_3 = _8 & _4;
_23 = _19 as isize;
place!(Field::<u8>(Variant(_2, 2), 1)) = _15.3;
place!(Field::<[u32; 8]>(Variant(_2, 2), 4)) = _15.2;
place!(Field::<u8>(Variant(_2, 2), 1)) = !_15.3;
_12 = '\u{29baa}';
_24 = 2658619432_u32 as f64;
_14 = Move(_15.1);
_22 = _24 * _24;
place!(Field::<u16>(Variant(_2, 2), 3)) = 66610083662984019377566551781254369343_u128 as u16;
_10 = -_13;
match _18 {
7 => bb14,
_ => bb13
}
}
bb13 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = !2661966448368956376_u64;
_13 = 124137185088205395036787646002332069508_i128 as f64;
_18 = 298746432509192714887402779421375735557_u128 as usize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = 11769005597329463682_u64 << _15.3;
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u32>(Variant(_2, 2), 0) as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = 25749_u16 as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).1 = _11 as i128;
_10 = _13;
_13 = _10 + _10;
_18 = 1_usize;
place!(Field::<u8>(Variant(_2, 2), 1)) = _15.3 & _15.3;
_18 = 63769503437536608627276183471427687874_u128 as usize;
RET = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).0];
_19 = Field::<u32>(Variant(_2, 2), 0) as f32;
_4 = !_9;
_15.0 = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3];
place!(Field::<u16>(Variant(_2, 2), 3)) = !14816_u16;
_10 = Field::<u16>(Variant(_2, 2), 3) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (15834822723667072881_u64, 126784692261965609343640058516397954173_i128, _12, (-55_isize));
place!(Field::<f64>(Variant(_2, 2), 2)) = -_13;
_22 = _1 as f64;
_18 = 7_usize;
place!(Field::<[u32; 8]>(Variant(_2, 2), 4))[_18] = !_15.2[_18];
SetDiscriminant(_2, 2);
Call(_15.1 = fn6(_9, _15.2[_18], _4, _9, _4, _8, _8, RET), ReturnTo(bb12), UnwindUnreachable())
}
bb14 = {
_15.3 = Field::<u8>(Variant(_2, 2), 1) >> Field::<u8>(Variant(_2, 2), 1);
_7 = !_3;
_18 = _19 as usize;
_18 = _19 as usize;
place!(Field::<u8>(Variant(_2, 2), 1)) = _12 as u8;
_18 = _13 as usize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = 15536023808089228417_u64;
_12 = '\u{62c15}';
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = _12;
_8 = _5;
_8 = _6 >= _5;
_15.3 = Field::<u8>(Variant(_2, 2), 1);
_13 = -_10;
_18 = 2_usize & 6_usize;
place!(Field::<u16>(Variant(_2, 2), 3)) = 28645_u16 + 24453_u16;
_10 = _22;
RET = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).0];
place!(Field::<u32>(Variant(_2, 2), 0)) = _18 as u32;
_8 = _4;
Goto(bb15)
}
bb15 = {
Call(_26 = dump_var(3_usize, 5_usize, Move(_5), 12_usize, Move(_12), 3_usize, Move(_3), 11_usize, Move(_11)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_26 = dump_var(3_usize, 18_usize, Move(_18), 23_usize, Move(_23), 27_usize, _27, 27_usize, _27), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool) -> char {
mir! {
type RET = char;
let _6: i16;
let _7: u8;
let _8: isize;
let _9: (&'static mut &'static u16, *const &'static mut i128);
let _10: *const char;
let _11: i8;
let _12: [char; 2];
let _13: &'static u16;
let _14: *mut &'static mut (u16, i64, Adt26, f32);
let _15: ([i8; 5], [u32; 2], Adt47);
let _16: i128;
let _17: Adt73;
let _18: [u64; 5];
let _19: ([i8; 5], [u32; 2], Adt47);
let _20: *mut i8;
let _21: u64;
let _22: f32;
let _23: u32;
let _24: [i16; 3];
let _25: isize;
let _26: (Adt19,);
let _27: *const *const &'static (u32, (f32, [u32; 8], bool, i128));
let _28: u32;
let _29: [char; 6];
let _30: ();
let _31: ();
{
_3 = _2 < _4;
_6 = -(-12806_i16);
_2 = !_1;
RET = '\u{710f2}';
_5 = _3;
_3 = _2 & _4;
_4 = _2;
_2 = _3;
RET = '\u{a3ab5}';
RET = '\u{709b6}';
_6 = (-13035_i16) ^ 843_i16;
Goto(bb1)
}
bb1 = {
_6 = (-5933_i16) | 488_i16;
RET = '\u{d50e8}';
_1 = _3;
RET = '\u{ad3b6}';
_7 = !230_u8;
_6 = 18994_i16;
_1 = !_5;
_4 = !_3;
_8 = !(-9223372036854775808_isize);
_4 = !_3;
_2 = _3 < _3;
_4 = _1;
_8 = !3_isize;
_3 = !_1;
_7 = 145_u8;
_11 = _8 as i8;
_5 = _2;
_5 = _2 == _4;
Call(_1 = fn5(_3, _5, _5, _5, _3, _6, _5, _4, _2, _4, _5, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = _4;
_1 = _3 < _2;
_1 = !_4;
_8 = 854353879009810704_u64 as isize;
_7 = (-126665318717579795592467691449340363748_i128) as u8;
_1 = _2;
_1 = _3 >= _5;
_15.0 = [_11,_11,_11,_11,_11];
_16 = !41845829319676456183465882354145390995_i128;
_15.1 = [1296945231_u32,173608311_u32];
_8 = (-95_isize);
_12 = [RET,RET];
_15.0 = [_11,_11,_11,_11,_11];
_7 = 95_u8;
_8 = !9223372036854775807_isize;
_4 = _2;
_6 = 24162_i16 << _16;
_6 = !(-27946_i16);
_5 = _1;
_8 = _16 as isize;
_15.1 = [1899350921_u32,3081393548_u32];
_5 = _2 < _4;
Goto(bb3)
}
bb3 = {
_5 = _1 & _1;
_15.1 = [3807747271_u32,2573234810_u32];
_8 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_10 = core::ptr::addr_of!(RET);
RET = '\u{f1a36}';
_3 = _4;
_10 = core::ptr::addr_of!(RET);
_1 = !_3;
_4 = !_2;
_8 = !71_isize;
_6 = !11959_i16;
RET = '\u{2eab0}';
_19.0 = [_11,_11,_11,_11,_11];
_6 = (-6861_i16);
_19.1 = [440766326_u32,4278045972_u32];
_19.0 = [_11,_11,_11,_11,_11];
_15.0 = [_11,_11,_11,_11,_11];
_1 = _5;
_19.1 = [2584394704_u32,4083036780_u32];
(*_10) = '\u{742af}';
_19.1 = [3872236018_u32,1097837915_u32];
Goto(bb4)
}
bb4 = {
_10 = core::ptr::addr_of!((*_10));
_7 = 86_u8 << _11;
_20 = core::ptr::addr_of_mut!(_11);
_20 = core::ptr::addr_of_mut!((*_20));
RET = '\u{b08ca}';
_16 = 7890869755510570147_i64 as i128;
_12 = [RET,(*_10)];
_19.1 = _15.1;
(*_10) = '\u{c095}';
_21 = 14788539662463941141_u64;
_12 = [(*_10),(*_10)];
(*_20) = (-110_i8);
_19.0 = [_11,_11,(*_20),(*_20),_11];
_6 = (*_10) as i16;
(*_20) = _21 as i8;
match _21 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
4 => bb6,
14788539662463941141 => bb8,
_ => bb7
}
}
bb5 = {
_5 = _1 & _1;
_15.1 = [3807747271_u32,2573234810_u32];
_8 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_10 = core::ptr::addr_of!(RET);
RET = '\u{f1a36}';
_3 = _4;
_10 = core::ptr::addr_of!(RET);
_1 = !_3;
_4 = !_2;
_8 = !71_isize;
_6 = !11959_i16;
RET = '\u{2eab0}';
_19.0 = [_11,_11,_11,_11,_11];
_6 = (-6861_i16);
_19.1 = [440766326_u32,4278045972_u32];
_19.0 = [_11,_11,_11,_11,_11];
_15.0 = [_11,_11,_11,_11,_11];
_1 = _5;
_19.1 = [2584394704_u32,4083036780_u32];
(*_10) = '\u{742af}';
_19.1 = [3872236018_u32,1097837915_u32];
Goto(bb4)
}
bb6 = {
_1 = _4;
_1 = _3 < _2;
_1 = !_4;
_8 = 854353879009810704_u64 as isize;
_7 = (-126665318717579795592467691449340363748_i128) as u8;
_1 = _2;
_1 = _3 >= _5;
_15.0 = [_11,_11,_11,_11,_11];
_16 = !41845829319676456183465882354145390995_i128;
_15.1 = [1296945231_u32,173608311_u32];
_8 = (-95_isize);
_12 = [RET,RET];
_15.0 = [_11,_11,_11,_11,_11];
_7 = 95_u8;
_8 = !9223372036854775807_isize;
_4 = _2;
_6 = 24162_i16 << _16;
_6 = !(-27946_i16);
_5 = _1;
_8 = _16 as isize;
_15.1 = [1899350921_u32,3081393548_u32];
_5 = _2 < _4;
Goto(bb3)
}
bb7 = {
_6 = (-5933_i16) | 488_i16;
RET = '\u{d50e8}';
_1 = _3;
RET = '\u{ad3b6}';
_7 = !230_u8;
_6 = 18994_i16;
_1 = !_5;
_4 = !_3;
_8 = !(-9223372036854775808_isize);
_4 = !_3;
_2 = _3 < _3;
_4 = _1;
_8 = !3_isize;
_3 = !_1;
_7 = 145_u8;
_11 = _8 as i8;
_5 = _2;
_5 = _2 == _4;
Call(_1 = fn5(_3, _5, _5, _5, _3, _6, _5, _4, _2, _4, _5, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
_20 = core::ptr::addr_of_mut!((*_20));
_19.1 = [1904492909_u32,523044844_u32];
_1 = _3 <= _5;
(*_10) = '\u{39e5}';
_15.0 = [_11,(*_20),(*_20),_11,_11];
(*_10) = '\u{cf78f}';
_15.1 = [709735954_u32,2225556213_u32];
_15.0 = [(*_20),(*_20),(*_20),(*_20),_11];
_5 = _3;
_25 = _16 as isize;
_20 = core::ptr::addr_of_mut!(_11);
_22 = _6 as f32;
_26.0 = Adt19::Variant0 { fld0: _6 };
_7 = 183_u8;
SetDiscriminant(_26.0, 0);
_15.0 = [(*_20),(*_20),(*_20),(*_20),(*_20)];
_16 = (-9221170251840269562475593526741782176_i128) ^ (-15120977811390796562397565726133318249_i128);
_12 = [RET,(*_10)];
_19.1 = _15.1;
_12 = [RET,RET];
_23 = 2986453423_u32 & 1702687326_u32;
_19.1 = [_23,_23];
_10 = core::ptr::addr_of!(RET);
match _21 {
0 => bb7,
1 => bb4,
2 => bb3,
3 => bb9,
4 => bb10,
14788539662463941141 => bb12,
_ => bb11
}
}
bb9 = {
_6 = (-5933_i16) | 488_i16;
RET = '\u{d50e8}';
_1 = _3;
RET = '\u{ad3b6}';
_7 = !230_u8;
_6 = 18994_i16;
_1 = !_5;
_4 = !_3;
_8 = !(-9223372036854775808_isize);
_4 = !_3;
_2 = _3 < _3;
_4 = _1;
_8 = !3_isize;
_3 = !_1;
_7 = 145_u8;
_11 = _8 as i8;
_5 = _2;
_5 = _2 == _4;
Call(_1 = fn5(_3, _5, _5, _5, _3, _6, _5, _4, _2, _4, _5, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_5 = _1 & _1;
_15.1 = [3807747271_u32,2573234810_u32];
_8 = (-9223372036854775808_isize) * 9223372036854775807_isize;
_10 = core::ptr::addr_of!(RET);
RET = '\u{f1a36}';
_3 = _4;
_10 = core::ptr::addr_of!(RET);
_1 = !_3;
_4 = !_2;
_8 = !71_isize;
_6 = !11959_i16;
RET = '\u{2eab0}';
_19.0 = [_11,_11,_11,_11,_11];
_6 = (-6861_i16);
_19.1 = [440766326_u32,4278045972_u32];
_19.0 = [_11,_11,_11,_11,_11];
_15.0 = [_11,_11,_11,_11,_11];
_1 = _5;
_19.1 = [2584394704_u32,4083036780_u32];
(*_10) = '\u{742af}';
_19.1 = [3872236018_u32,1097837915_u32];
Goto(bb4)
}
bb11 = {
_1 = _4;
_1 = _3 < _2;
_1 = !_4;
_8 = 854353879009810704_u64 as isize;
_7 = (-126665318717579795592467691449340363748_i128) as u8;
_1 = _2;
_1 = _3 >= _5;
_15.0 = [_11,_11,_11,_11,_11];
_16 = !41845829319676456183465882354145390995_i128;
_15.1 = [1296945231_u32,173608311_u32];
_8 = (-95_isize);
_12 = [RET,RET];
_15.0 = [_11,_11,_11,_11,_11];
_7 = 95_u8;
_8 = !9223372036854775807_isize;
_4 = _2;
_6 = 24162_i16 << _16;
_6 = !(-27946_i16);
_5 = _1;
_8 = _16 as isize;
_15.1 = [1899350921_u32,3081393548_u32];
_5 = _2 < _4;
Goto(bb3)
}
bb12 = {
_11 = !91_i8;
_28 = !_23;
match _7 {
183 => bb14,
_ => bb13
}
}
bb13 = {
_6 = (-5933_i16) | 488_i16;
RET = '\u{d50e8}';
_1 = _3;
RET = '\u{ad3b6}';
_7 = !230_u8;
_6 = 18994_i16;
_1 = !_5;
_4 = !_3;
_8 = !(-9223372036854775808_isize);
_4 = !_3;
_2 = _3 < _3;
_4 = _1;
_8 = !3_isize;
_3 = !_1;
_7 = 145_u8;
_11 = _8 as i8;
_5 = _2;
_5 = _2 == _4;
Call(_1 = fn5(_3, _5, _5, _5, _3, _6, _5, _4, _2, _4, _5, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_8 = _25 << _23;
_29 = [RET,(*_10),RET,(*_10),(*_10),(*_10)];
place!(Field::<i16>(Variant(_26.0, 0), 0)) = _7 as i16;
Goto(bb15)
}
bb15 = {
Call(_30 = dump_var(4_usize, 23_usize, Move(_23), 3_usize, Move(_3), 4_usize, Move(_4), 29_usize, Move(_29)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_30 = dump_var(4_usize, 16_usize, Move(_16), 28_usize, Move(_28), 1_usize, Move(_1), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: i16,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool,mut _12: bool) -> bool {
mir! {
type RET = bool;
let _13: ();
let _14: ();
{
_7 = !_10;
_1 = _12;
RET = _9 < _12;
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(5_usize, 10_usize, Move(_10), 7_usize, Move(_7), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_13 = dump_var(5_usize, 11_usize, Move(_11), 5_usize, Move(_5), 14_usize, _14, 14_usize, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: bool,mut _2: u32,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: [u64; 1]) -> *const &'static mut &'static u16 {
mir! {
type RET = *const &'static mut &'static u16;
let _9: *mut i8;
let _10: (Adt19,);
let _11: *mut i8;
let _12: bool;
let _13: f32;
let _14: isize;
let _15: Adt32;
let _16: i16;
let _17: ([isize; 5], *const &'static mut &'static u16, [u32; 8], u8);
let _18: (u16, i64, Adt26, f32);
let _19: u8;
let _20: i16;
let _21: isize;
let _22: u32;
let _23: *mut (Adt19,);
let _24: f32;
let _25: *const &'static mut i128;
let _26: u32;
let _27: *const ([i8; 5], [u32; 2], Adt47);
let _28: f32;
let _29: i128;
let _30: Adt73;
let _31: [char; 2];
let _32: f64;
let _33: &'static i32;
let _34: bool;
let _35: f64;
let _36: f32;
let _37: *mut [i128; 2];
let _38: &'static (u32, (f32, [u32; 8], bool, i128));
let _39: isize;
let _40: u8;
let _41: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _42: *const ([i8; 5], [u32; 2], Adt47);
let _43: *const &'static mut &'static u16;
let _44: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _45: (&'static mut [i8; 5], [u64; 1]);
let _46: u16;
let _47: u128;
let _48: [isize; 5];
let _49: &'static mut [i8; 5];
let _50: i128;
let _51: Adt73;
let _52: Adt54;
let _53: f32;
let _54: i64;
let _55: char;
let _56: f32;
let _57: (u64, i128, char, isize);
let _58: isize;
let _59: i8;
let _60: isize;
let _61: i16;
let _62: [i16; 3];
let _63: &'static mut i128;
let _64: Adt32;
let _65: u32;
let _66: [i8; 5];
let _67: usize;
let _68: isize;
let _69: [i8; 5];
let _70: &'static u16;
let _71: *mut i8;
let _72: isize;
let _73: Adt73;
let _74: u128;
let _75: u8;
let _76: &'static mut (u16, i64, Adt26, f32);
let _77: f32;
let _78: [char; 7];
let _79: (u32, (f32, [u32; 8], bool, i128));
let _80: (u16, i64, Adt26, f32);
let _81: ([isize; 5], *const &'static mut &'static u16, [u32; 8], u8);
let _82: [u32; 2];
let _83: (Adt26, (i128, Adt29, isize), u32);
let _84: ((Adt19,),);
let _85: (f32, [u32; 8], bool, i128);
let _86: isize;
let _87: *mut i8;
let _88: f32;
let _89: [u64; 1];
let _90: Adt19;
let _91: [char; 2];
let _92: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _93: *const ([i8; 5], [u32; 2], Adt47);
let _94: (&'static mut [i8; 5], [u64; 1]);
let _95: isize;
let _96: Adt29;
let _97: isize;
let _98: i8;
let _99: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _100: (&'static mut &'static u16, *const &'static mut i128);
let _101: f64;
let _102: ();
let _103: ();
{
_4 = !_5;
_4 = _7;
_1 = _7 > _4;
_5 = _3 != _4;
match _2 {
0 => bb1,
1 => bb2,
3788895922 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_5 = !_4;
_5 = _1;
_8 = [1198713310248424100_u64];
_6 = _7;
_3 = !_5;
_7 = _5;
_7 = _4 & _4;
_10.0 = Adt19::Variant0 { fld0: 24855_i16 };
_2 = (-9223372036854775808_isize) as u32;
_1 = _5 < _4;
_8 = [5342430456603845994_u64];
_3 = _7 ^ _1;
_4 = _5 <= _6;
_8 = [13199254196628418860_u64];
_2 = 142069063_u32;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 21776_i16 | (-16306_i16);
_2 = 1839304811_u32;
_5 = _3 ^ _3;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 0_usize as i16;
_4 = _5 & _6;
_12 = _7;
_14 = 94_isize | 9223372036854775807_isize;
_6 = !_3;
_12 = _5;
_7 = !_5;
_12 = _6 | _4;
_4 = _1 > _3;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
1839304811 => bb7,
_ => bb6
}
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7 = !_1;
SetDiscriminant(_10.0, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).2 = '\u{15d12}';
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).3 = 20_i8 as isize;
match _2 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
1839304811 => bb13,
_ => bb12
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_5 = !_4;
_5 = _1;
_8 = [1198713310248424100_u64];
_6 = _7;
_3 = !_5;
_7 = _5;
_7 = _4 & _4;
_10.0 = Adt19::Variant0 { fld0: 24855_i16 };
_2 = (-9223372036854775808_isize) as u32;
_1 = _5 < _4;
_8 = [5342430456603845994_u64];
_3 = _7 ^ _1;
_4 = _5 <= _6;
_8 = [13199254196628418860_u64];
_2 = 142069063_u32;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 21776_i16 | (-16306_i16);
_2 = 1839304811_u32;
_5 = _3 ^ _3;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 0_usize as i16;
_4 = _5 & _6;
_12 = _7;
_14 = 94_isize | 9223372036854775807_isize;
_6 = !_3;
_12 = _5;
_7 = !_5;
_12 = _6 | _4;
_4 = _1 > _3;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
1839304811 => bb7,
_ => bb6
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).0 = 7109830886226539745_u64 + 13315147589834874088_u64;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0];
_2 = 1246903865_u32 & 402236793_u32;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0];
_12 = _7 == _6;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0];
_18.2.fld1 = Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).2;
place!(Field::<bool>(Variant(_10.0, 3), 0)) = _5 ^ _3;
_18.3 = 126_u8 as f32;
_18.2.fld2 = (-122_i8) as isize;
place!(Field::<bool>(Variant(_10.0, 3), 0)) = _7;
place!(Field::<f32>(Variant(_10.0, 3), 3)) = _18.3;
_14 = !_18.2.fld2;
_18.3 = Field::<f32>(Variant(_10.0, 3), 3);
place!(Field::<usize>(Variant(_10.0, 3), 5)) = 0_usize | 5_usize;
Goto(bb14)
}
bb14 = {
_5 = _12;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0];
_14 = 113700705500269533139251999726772213991_u128 as isize;
place!(Field::<f64>(Variant(_10.0, 3), 4)) = (-6764144194480254711_i64) as f64;
_18.2.fld4 = [_2,_2,_2,_2,_2,_2];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).1 = !(-66775462627627133350237065088480450117_i128);
_19 = Field::<f64>(Variant(_10.0, 3), 4) as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).0 = 9887372381498355765_u64;
place!(Field::<isize>(Variant(_10.0, 3), 2)) = Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).3;
_18.2.fld5 = Adt19::Variant3 { fld0: _5,fld1: Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1),fld2: _14,fld3: Field::<f32>(Variant(_10.0, 3), 3),fld4: Field::<f64>(Variant(_10.0, 3), 4),fld5: Field::<usize>(Variant(_10.0, 3), 5),fld6: (-1924213527736835396_i64) };
_18.3 = -Field::<f32>(Variant(_18.2.fld5, 3), 3);
_18.3 = Field::<f32>(Variant(_18.2.fld5, 3), 3) * Field::<f32>(Variant(_18.2.fld5, 3), 3);
_18.2.fld2 = !_14;
_3 = !_6;
_21 = _18.2.fld2 + Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).3;
_16 = 12461_i16 ^ 16231_i16;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).2 = _18.2.fld1;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1)).2 = _18.2.fld1;
_13 = Field::<f32>(Variant(_10.0, 3), 3);
_18.0 = !30083_u16;
_24 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0 as f32;
_3 = !_5;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).3 = Field::<isize>(Variant(_18.2.fld5, 3), 2);
match Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0 {
0 => bb6,
1 => bb2,
2 => bb3,
3 => bb4,
9887372381498355765 => bb15,
_ => bb5
}
}
bb15 = {
_20 = Field::<f64>(Variant(_18.2.fld5, 3), 4) as i16;
place!(Field::<isize>(Variant(_18.2.fld5, 3), 2)) = _2 as isize;
_17.0 = [_14,_14,Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).3,_14,_21];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1, _18.2.fld1, _18.2.fld2);
place!(Field::<f64>(Variant(_10.0, 3), 4)) = Field::<f64>(Variant(_18.2.fld5, 3), 4) - Field::<f64>(Variant(_18.2.fld5, 3), 4);
Call(_10.0 = fn7(_4, _21, _7, _5, _6), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0;
SetDiscriminant(_10.0, 2);
_22 = _2 - _2;
place!(Field::<f32>(Variant(_18.2.fld5, 3), 3)) = _18.3;
place!(Field::<u8>(Variant(_10.0, 2), 1)) = _19;
place!(Field::<f64>(Variant(_10.0, 2), 2)) = 1620094533_i32 as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1)).0 = !8238957583989288047_u64;
_18.2.fld0 = [_22,_22,_22,_22,_2,_2,_22,_2];
_24 = _13;
_24 = _18.3 + _13;
_17.0 = [_21,Field::<isize>(Variant(_18.2.fld5, 3), 2),_18.2.fld2,_21,_18.2.fld2];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1;
_22 = Field::<isize>(Variant(_18.2.fld5, 3), 2) as u32;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = Field::<isize>(Variant(_18.2.fld5, 3), 2);
_18.2.fld3 = 277063158715547714904095769511234662504_u128 >> _22;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).2, Field::<isize>(Variant(_18.2.fld5, 3), 2));
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1)) = (Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).1, _18.2.fld1, _21);
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).1 = -Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1;
place!(Field::<u32>(Variant(_10.0, 2), 0)) = _2 * _2;
_23 = core::ptr::addr_of_mut!(_10);
Goto(bb17)
}
bb17 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0;
place!(Field::<f32>(Variant(_18.2.fld5, 3), 3)) = _18.3;
place!(Field::<[u32; 8]>(Variant((*_23).0, 2), 4)) = [Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1)).3 = !_14;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = -_18.2.fld2;
_26 = _22;
_21 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3;
_18.0 = !33580_u16;
_5 = _6 <= _1;
place!(Field::<u16>(Variant((*_23).0, 2), 3)) = !_18.0;
_28 = Field::<f32>(Variant(_18.2.fld5, 3), 3) + _18.3;
_29 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1;
_12 = !_1;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = Field::<isize>(Variant(_18.2.fld5, 3), 2) as u64;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0),_2];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).1 = !_29;
_2 = Field::<u32>(Variant((*_23).0, 2), 0) * Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<[u32; 8]>(Variant((*_23).0, 2), 4)) = [_2,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_26,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_2];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = Field::<usize>(Variant(_18.2.fld5, 3), 5) as isize;
_18.2.fld3 = 10196548535376044974641633301661086952_u128 & 46459224343145280632055800158493213922_u128;
_18.2.fld3 = 176613683784165268391820275042225447889_u128 + 289948025283605809728904025463037768097_u128;
Goto(bb18)
}
bb18 = {
_18.1 = -3001383403940704265_i64;
_1 = _6 ^ _5;
_1 = _4 & _12;
_18.2.fld5 = (*_23).0;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).0];
_5 = _6 == _6;
_18.2.fld1 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2;
_21 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5).3 >> Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<f64>(Variant((*_23).0, 2), 2)) = Field::<f64>(Variant(_18.2.fld5, 2), 2);
_18.2.fld2 = !Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3;
_5 = _3 <= _6;
_31 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2];
(*_23).0 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_18.2.fld5, 2), 0),fld1: Field::<u8>(Variant(_18.2.fld5, 2), 1),fld2: Field::<f64>(Variant(_18.2.fld5, 2), 2),fld3: Field::<u16>(Variant(_18.2.fld5, 2), 3),fld4: Field::<[u32; 8]>(Variant(_18.2.fld5, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5) };
place!(Field::<u8>(Variant((*_23).0, 2), 1)) = !Field::<u8>(Variant(_18.2.fld5, 2), 1);
_32 = Field::<u16>(Variant(_10.0, 2), 3) as f64;
_23 = core::ptr::addr_of_mut!(_10);
_2 = !Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).2 = _18.2.fld1;
_17.2 = [Field::<u32>(Variant(_10.0, 2), 0),_2,_2,Field::<u32>(Variant(_18.2.fld5, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_2,Field::<u32>(Variant((*_23).0, 2), 0)];
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = fn8(_4, _6, Move(_23), _7, _18.2.fld5, _18.2.fld5, Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3, _3, _12, _1, _18.2.fld5, _18.2.fld5), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
_23 = core::ptr::addr_of_mut!(_10);
place!(Field::<[u32; 8]>(Variant(_18.2.fld5, 2), 4)) = [Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_2,Field::<u32>(Variant(_18.2.fld5, 2), 0),_22,Field::<u32>(Variant(_10.0, 2), 0)];
place!(Field::<[u32; 8]>(Variant((*_23).0, 2), 4)) = [_22,Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_2,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_18.2.fld5, 2), 0),_22,_22];
_17.3 = Field::<u8>(Variant(_10.0, 2), 1) ^ Field::<u8>(Variant(_18.2.fld5, 2), 1);
place!(Field::<u16>(Variant(_10.0, 2), 3)) = _7 as u16;
place!(Field::<u32>(Variant((*_23).0, 2), 0)) = _2 * _2;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5).2;
_17.0 = [_18.2.fld2,_14,_18.2.fld2,_21,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3];
_23 = core::ptr::addr_of_mut!((*_23));
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5).2;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0)];
_29 = _28 as i128;
(*_23) = (_18.2.fld5,);
_17.2 = [_2,_22,_22,_2,_26,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0)];
_3 = _6 | _1;
_18.2.fld6 = !_18.1;
SetDiscriminant((*_23).0, 2);
_4 = _12;
SetDiscriminant(_18.2.fld5, 1);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).1 = _18.2.fld1 as i128;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [_26,_22,_2,_22,_2,_2,_26,_22];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = 6528620085165993187_usize as isize;
place!(Field::<f32>(Variant(_18.2.fld5, 1), 0)) = -_18.3;
_35 = -_32;
_16 = _20;
Goto(bb20)
}
bb20 = {
_18.2.fld0 = [_2,_2,_2,_22,_26,_2,_22,_26];
Goto(bb21)
}
bb21 = {
place!(Field::<u32>(Variant((*_23).0, 2), 0)) = !_26;
_40 = _19;
place!(Field::<u8>(Variant((*_23).0, 2), 1)) = _17.3 << _18.2.fld3;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).2 = _18.2.fld1;
_8 = [12505330566339072148_u64];
_14 = 1707105439_i32 as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).2 = _18.2.fld1;
(*_23).0 = Adt19::Variant0 { fld0: _16 };
_24 = _18.3 + _28;
_39 = -_21;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).3 = _35 as isize;
SetDiscriminant(_10.0, 3);
_28 = _24;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)) = (1634147537404693894_u64, _29, _18.2.fld1, _21);
place!(Field::<f64>(Variant(_10.0, 3), 4)) = -_32;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).2 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).2;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0 * Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).3 = _39 >> Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1).0;
place!(Field::<bool>(Variant((*_23).0, 3), 0)) = _12 | _12;
place!(Field::<usize>(Variant((*_23).0, 3), 5)) = 7538663030678948251_usize;
place!(Field::<usize>(Variant((*_23).0, 3), 5)) = Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0 as usize;
_29 = -Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).1;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)) = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2);
_17.3 = _19;
match Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).0 {
0 => bb19,
1 => bb10,
1634147537404693894 => bb22,
_ => bb14
}
}
bb22 = {
_32 = Field::<f64>(Variant(_10.0, 3), 4);
_19 = 1300769628_i32 as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).3 = -_14;
place!(Field::<isize>(Variant((*_23).0, 3), 2)) = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).2 as isize;
place!(Field::<bool>(Variant((*_23).0, 3), 0)) = !_4;
(*_23).0 = Adt19::Variant1 { fld0: _28,fld1: _40,fld2: Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2),fld3: _29 };
_24 = Field::<f32>(Variant((*_23).0, 1), 0) + Field::<f32>(Variant(_10.0, 1), 0);
place!(Field::<u8>(Variant((*_23).0, 1), 1)) = _40;
_17.0 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,_18.2.fld2,_21,Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3,_14];
place!(Field::<u8>(Variant(_18.2.fld5, 1), 1)) = Field::<u8>(Variant((*_23).0, 1), 1) ^ _40;
SetDiscriminant((*_23).0, 2);
_24 = _28;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).1 = _29 - Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).1;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3 << Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).1;
place!(Field::<u8>(Variant((*_23).0, 2), 1)) = _19 * Field::<u8>(Variant(_18.2.fld5, 1), 1);
Goto(bb23)
}
bb23 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0 - Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0;
place!(Field::<u32>(Variant(_10.0, 2), 0)) = _26 ^ _2;
_47 = !_18.2.fld3;
_39 = !_14;
Goto(bb24)
}
bb24 = {
_6 = Field::<u32>(Variant(_10.0, 2), 0) == Field::<u32>(Variant((*_23).0, 2), 0);
_13 = _24 * _28;
place!(Field::<u16>(Variant((*_23).0, 2), 3)) = _18.0 >> _18.2.fld3;
_18.1 = 5_usize as i64;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).0 = _17.3 as u64;
place!(Field::<u16>(Variant(_10.0, 2), 3)) = !_18.0;
_18.2.fld1 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).2;
_13 = -_28;
_7 = _12 > _1;
_18.2.fld6 = _28 as i64;
_34 = _3 | _5;
_18.1 = _18.2.fld6;
place!(Field::<i128>(Variant(_18.2.fld5, 1), 3)) = Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).1 | Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).1;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3;
_17.0 = [_21,_21,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3,_21,Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3];
_5 = !_34;
place!(Field::<u16>(Variant(_10.0, 2), 3)) = _18.0;
place!(Field::<u8>(Variant(_18.2.fld5, 1), 1)) = Field::<u8>(Variant((*_23).0, 2), 1);
_22 = Field::<u32>(Variant((*_23).0, 2), 0) ^ _2;
_8 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).0];
(*_23) = (_18.2.fld5,);
_6 = _4;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0 + Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0;
Goto(bb25)
}
bb25 = {
place!(Field::<i128>(Variant((*_23).0, 1), 3)) = 5_usize as i128;
_5 = _7 != _12;
(*_23) = (_18.2.fld5,);
_36 = -Field::<f32>(Variant((*_23).0, 1), 0);
place!(Field::<f32>(Variant(_18.2.fld5, 1), 0)) = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0 as f32;
_18.0 = !52940_u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2)).3 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3 * _21;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).1 = (-88660795_i32) as i128;
_54 = -_18.1;
place!(Field::<f32>(Variant(_10.0, 1), 0)) = -_24;
_45.1 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0];
_53 = _28 - Field::<f32>(Variant((*_23).0, 1), 0);
_23 = core::ptr::addr_of_mut!((*_23));
_48 = [_18.2.fld2,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).3];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).1 = !Field::<i128>(Variant(_18.2.fld5, 1), 3);
Goto(bb26)
}
bb26 = {
Goto(bb27)
}
bb27 = {
_56 = -Field::<f32>(Variant(_10.0, 1), 0);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant((*_23).0, 1), 3), _18.2.fld1, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3);
_18.2.fld2 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3 << Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).1;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).0];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).3 = -_21;
_31 = [_18.2.fld1,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2];
_46 = !_18.0;
_10 = (_18.2.fld5,);
_32 = -_35;
_57 = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant((*_23).0, 1), 3), Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2, _18.2.fld2);
place!(Field::<i128>(Variant(_18.2.fld5, 1), 3)) = -Field::<i128>(Variant(_10.0, 1), 3);
_45.1 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0];
Goto(bb28)
}
bb28 = {
(*_23) = (_18.2.fld5,);
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2;
_7 = _34;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant((*_23).0, 1), 3), Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).2, _18.2.fld2);
_53 = Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).3 as f32;
_18.2.fld3 = _47 + _47;
place!(Field::<f32>(Variant((*_23).0, 1), 0)) = Field::<u8>(Variant((*_23).0, 1), 1) as f32;
_11 = core::ptr::addr_of_mut!(_59);
SetDiscriminant(_10.0, 3);
_60 = -_57.3;
_59 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0 as i8;
(*_23).0 = Adt19::Variant0 { fld0: _20 };
_63 = &mut _29;
_18.2.fld3 = _57.0 as u128;
_55 = _57.2;
_41.0 = core::ptr::addr_of_mut!(_59);
Goto(bb29)
}
bb29 = {
_21 = _18.2.fld2;
_67 = 7_usize - 17049041650621324923_usize;
_48 = [_21,_21,Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3,_60,Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3];
_24 = _53 - _28;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = !_20;
Goto(bb30)
}
bb30 = {
_60 = _57.3 & _21;
_66 = [(*_11),_59,(*_11),(*_11),(*_11)];
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).3 = _18.2.fld6 as isize;
_20 = -Field::<i16>(Variant((*_23).0, 0), 0);
_29 = _57.1 >> Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3;
_54 = !_18.2.fld6;
_53 = _56;
_17.2 = [_26,_22,_22,_22,_22,_22,_22,_2];
_6 = !_12;
_44.0 = core::ptr::addr_of_mut!(_59);
Goto(bb31)
}
bb31 = {
_5 = !_7;
place!(Field::<i16>(Variant((*_23).0, 0), 0)) = _20 << _46;
_61 = _67 as i16;
_17.3 = Field::<u8>(Variant(_18.2.fld5, 1), 1) << Field::<i128>(Variant(_18.2.fld5, 1), 3);
_4 = _5 | _5;
_49 = &mut _66;
_34 = !_4;
_9 = Move(_41.0);
_54 = _18.2.fld6;
_70 = &_46;
SetDiscriminant((*_23).0, 1);
place!(Field::<u8>(Variant((*_23).0, 1), 1)) = _17.3 | Field::<u8>(Variant(_18.2.fld5, 1), 1);
_67 = 9947983803651663941_usize;
place!(Field::<i128>(Variant(_10.0, 1), 3)) = -Field::<i128>(Variant(_18.2.fld5, 1), 3);
_65 = !_26;
SetDiscriminant(_18.2.fld5, 0);
_24 = _18.3 + _56;
_44.2 = &mut _70;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2)).1 = Field::<i128>(Variant((*_23).0, 1), 3) >> _29;
_56 = -_13;
_44.2 = &mut _70;
_50 = !Field::<i128>(Variant((*_23).0, 1), 3);
place!(Field::<i16>(Variant(_18.2.fld5, 0), 0)) = _20 ^ _61;
SetDiscriminant(_18.2.fld5, 0);
_11 = Move(_9);
_72 = _67 as isize;
Goto(bb32)
}
bb32 = {
_41.2 = &mut _70;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2)) = (_57.0, _57.1, _57.2, _57.3);
_17.2 = [_22,_22,_22,_22,_26,_22,_2,_2];
_41.2 = Move(_44.2);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).2 = _18.2.fld1;
_57.1 = -_50;
_55 = _57.2;
_18.2.fld2 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3 | Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3;
_71 = Move(_11);
_55 = _18.2.fld1;
_17.3 = !Field::<u8>(Variant(_10.0, 1), 1);
_8 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0];
(*_23).0 = Adt19::Variant0 { fld0: _61 };
_44.2 = &mut _70;
_57.2 = _18.2.fld1;
_65 = _22;
_41.0 = core::ptr::addr_of_mut!(_59);
_1 = _34 <= _5;
_18.2.fld0 = [_2,_22,_22,_2,_22,_65,_65,_22];
_44.2 = &mut _70;
_5 = _6 > _12;
_17.0 = [_21,_18.2.fld2,_18.2.fld2,_18.2.fld2,_18.2.fld2];
SetDiscriminant(_10.0, 1);
_74 = !_47;
_18.2.fld3 = _32 as u128;
_12 = !_4;
_53 = _36 * _56;
match _67 {
0 => bb26,
1 => bb31,
2 => bb5,
3 => bb33,
4 => bb34,
9947983803651663941 => bb36,
_ => bb35
}
}
bb33 = {
_18.1 = -3001383403940704265_i64;
_1 = _6 ^ _5;
_1 = _4 & _12;
_18.2.fld5 = (*_23).0;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).0];
_5 = _6 == _6;
_18.2.fld1 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2;
_21 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5).3 >> Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<f64>(Variant((*_23).0, 2), 2)) = Field::<f64>(Variant(_18.2.fld5, 2), 2);
_18.2.fld2 = !Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3;
_5 = _3 <= _6;
_31 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2];
(*_23).0 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_18.2.fld5, 2), 0),fld1: Field::<u8>(Variant(_18.2.fld5, 2), 1),fld2: Field::<f64>(Variant(_18.2.fld5, 2), 2),fld3: Field::<u16>(Variant(_18.2.fld5, 2), 3),fld4: Field::<[u32; 8]>(Variant(_18.2.fld5, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 2), 5) };
place!(Field::<u8>(Variant((*_23).0, 2), 1)) = !Field::<u8>(Variant(_18.2.fld5, 2), 1);
_32 = Field::<u16>(Variant(_10.0, 2), 3) as f64;
_23 = core::ptr::addr_of_mut!(_10);
_2 = !Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).2 = _18.2.fld1;
_17.2 = [Field::<u32>(Variant(_10.0, 2), 0),_2,_2,Field::<u32>(Variant(_18.2.fld5, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_2,Field::<u32>(Variant((*_23).0, 2), 0)];
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = fn8(_4, _6, Move(_23), _7, _18.2.fld5, _18.2.fld5, Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3, _3, _12, _1, _18.2.fld5, _18.2.fld5), ReturnTo(bb19), UnwindUnreachable())
}
bb34 = {
_56 = -Field::<f32>(Variant(_10.0, 1), 0);
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant((*_23).0, 1), 3), _18.2.fld1, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3);
_18.2.fld2 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3 << Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).1;
_8 = [Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).0];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).3 = -_21;
_31 = [_18.2.fld1,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2];
_46 = !_18.0;
_10 = (_18.2.fld5,);
_32 = -_35;
_57 = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant((*_23).0, 1), 3), Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2, _18.2.fld2);
place!(Field::<i128>(Variant(_18.2.fld5, 1), 3)) = -Field::<i128>(Variant(_10.0, 1), 3);
_45.1 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0];
Goto(bb28)
}
bb35 = {
Return()
}
bb36 = {
_67 = 3_usize;
_78 = [_57.2,_18.2.fld1,_57.2,_57.2,_57.2,_55,_55];
_55 = _78[_67];
_21 = _67 as isize;
match _67 {
0 => bb23,
1 => bb37,
2 => bb38,
4 => bb40,
5 => bb41,
3 => bb43,
_ => bb42
}
}
bb37 = {
_7 = !_1;
SetDiscriminant(_10.0, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).2 = '\u{15d12}';
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)).3 = 20_i8 as isize;
match _2 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
1839304811 => bb13,
_ => bb12
}
}
bb38 = {
place!(Field::<i128>(Variant((*_23).0, 1), 3)) = 5_usize as i128;
_5 = _7 != _12;
(*_23) = (_18.2.fld5,);
_36 = -Field::<f32>(Variant((*_23).0, 1), 0);
place!(Field::<f32>(Variant(_18.2.fld5, 1), 0)) = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0 as f32;
_18.0 = !52940_u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2)).3 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3 * _21;
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).1 = (-88660795_i32) as i128;
_54 = -_18.1;
place!(Field::<f32>(Variant(_10.0, 1), 0)) = -_24;
_45.1 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).0];
_53 = _28 - Field::<f32>(Variant((*_23).0, 1), 0);
_23 = core::ptr::addr_of_mut!((*_23));
_48 = [_18.2.fld2,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2).3];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).1 = !Field::<i128>(Variant(_18.2.fld5, 1), 3);
Goto(bb26)
}
bb39 = {
Return()
}
bb40 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0;
place!(Field::<f32>(Variant(_18.2.fld5, 3), 3)) = _18.3;
place!(Field::<[u32; 8]>(Variant((*_23).0, 2), 4)) = [Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant(_10.0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1)).3 = !_14;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = -_18.2.fld2;
_26 = _22;
_21 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3;
_18.0 = !33580_u16;
_5 = _6 <= _1;
place!(Field::<u16>(Variant((*_23).0, 2), 3)) = !_18.0;
_28 = Field::<f32>(Variant(_18.2.fld5, 3), 3) + _18.3;
_29 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1;
_12 = !_1;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).0 = Field::<isize>(Variant(_18.2.fld5, 3), 2) as u64;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_22,Field::<u32>(Variant((*_23).0, 2), 0),_2];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).1 = !_29;
_2 = Field::<u32>(Variant((*_23).0, 2), 0) * Field::<u32>(Variant((*_23).0, 2), 0);
place!(Field::<[u32; 8]>(Variant((*_23).0, 2), 4)) = [_2,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant((*_23).0, 2), 0),_26,Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_10.0, 2), 0),_2];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).3 = Field::<usize>(Variant(_18.2.fld5, 3), 5) as isize;
_18.2.fld3 = 10196548535376044974641633301661086952_u128 & 46459224343145280632055800158493213922_u128;
_18.2.fld3 = 176613683784165268391820275042225447889_u128 + 289948025283605809728904025463037768097_u128;
Goto(bb18)
}
bb41 = {
_5 = !_7;
place!(Field::<i16>(Variant((*_23).0, 0), 0)) = _20 << _46;
_61 = _67 as i16;
_17.3 = Field::<u8>(Variant(_18.2.fld5, 1), 1) << Field::<i128>(Variant(_18.2.fld5, 1), 3);
_4 = _5 | _5;
_49 = &mut _66;
_34 = !_4;
_9 = Move(_41.0);
_54 = _18.2.fld6;
_70 = &_46;
SetDiscriminant((*_23).0, 1);
place!(Field::<u8>(Variant((*_23).0, 1), 1)) = _17.3 | Field::<u8>(Variant(_18.2.fld5, 1), 1);
_67 = 9947983803651663941_usize;
place!(Field::<i128>(Variant(_10.0, 1), 3)) = -Field::<i128>(Variant(_18.2.fld5, 1), 3);
_65 = !_26;
SetDiscriminant(_18.2.fld5, 0);
_24 = _18.3 + _56;
_44.2 = &mut _70;
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 1), 2)).1 = Field::<i128>(Variant((*_23).0, 1), 3) >> _29;
_56 = -_13;
_44.2 = &mut _70;
_50 = !Field::<i128>(Variant((*_23).0, 1), 3);
place!(Field::<i16>(Variant(_18.2.fld5, 0), 0)) = _20 ^ _61;
SetDiscriminant(_18.2.fld5, 0);
_11 = Move(_9);
_72 = _67 as isize;
Goto(bb32)
}
bb42 = {
Return()
}
bb43 = {
_57.1 = (-2118237883_i32) as i128;
place!(Field::<u8>(Variant((*_23).0, 1), 1)) = !_17.3;
place!(Field::<i128>(Variant((*_23).0, 1), 3)) = _29 - _50;
_17.3 = Field::<u8>(Variant((*_23).0, 1), 1);
_17.1 = core::ptr::addr_of!(_44.2);
_34 = _5 <= _4;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).1 = Field::<i128>(Variant(_10.0, 1), 3) + Field::<i128>(Variant(_10.0, 1), 3);
_81.2[_67] = _65 * _18.2.fld0[_67];
_34 = _5 < _6;
_79.1.2 = !_5;
_17.2[_67] = _22 | _18.2.fld4[_67];
_81.2[_67] = 205348831_i32 as u32;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).0 = Field::<u8>(Variant((*_23).0, 1), 1) as u64;
_48 = [_57.3,_57.3,_60,_18.2.fld2,_18.2.fld2];
_78 = [_57.2,_55,_57.2,_18.2.fld1,_57.2,_55,_18.2.fld1];
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2)).0 = _67 as u64;
_41.1 = _34;
_18.2.fld5 = Adt19::Variant2 { fld0: _26,fld1: Field::<u8>(Variant(_10.0, 1), 1),fld2: _32,fld3: (*_70),fld4: _17.2,fld5: _57 };
_57.0 = Field::<f64>(Variant(_18.2.fld5, 2), 2) as u64;
_83.1.1 = Adt29::Variant2 { fld0: _4,fld1: Field::<u8>(Variant(_18.2.fld5, 2), 1),fld2: _18.2.fld2,fld3: _66[_67],fld4: _67,fld5: Field::<[u32; 8]>(Variant(_18.2.fld5, 2), 4),fld6: _24,fld7: Field::<u16>(Variant(_18.2.fld5, 2), 3) };
_18.3 = -_24;
(*_23) = (_18.2.fld5,);
_84.0 = ((*_23).0,);
_18.2.fld0[_67] = _17.2[_67] * Field::<[u32; 8]>(Variant(_18.2.fld5, 2), 4)[_67];
match _67 {
0 => bb23,
1 => bb44,
3 => bb46,
_ => bb45
}
}
bb44 = {
_5 = !_4;
_5 = _1;
_8 = [1198713310248424100_u64];
_6 = _7;
_3 = !_5;
_7 = _5;
_7 = _4 & _4;
_10.0 = Adt19::Variant0 { fld0: 24855_i16 };
_2 = (-9223372036854775808_isize) as u32;
_1 = _5 < _4;
_8 = [5342430456603845994_u64];
_3 = _7 ^ _1;
_4 = _5 <= _6;
_8 = [13199254196628418860_u64];
_2 = 142069063_u32;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 21776_i16 | (-16306_i16);
_2 = 1839304811_u32;
_5 = _3 ^ _3;
place!(Field::<i16>(Variant(_10.0, 0), 0)) = 0_usize as i16;
_4 = _5 & _6;
_12 = _7;
_14 = 94_isize | 9223372036854775807_isize;
_6 = !_3;
_12 = _5;
_7 = !_5;
_12 = _6 | _4;
_4 = _1 > _3;
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
1839304811 => bb7,
_ => bb6
}
}
bb45 = {
_20 = Field::<f64>(Variant(_18.2.fld5, 3), 4) as i16;
place!(Field::<isize>(Variant(_18.2.fld5, 3), 2)) = _2 as isize;
_17.0 = [_14,_14,Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1).3,_14,_21];
place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 3), 1)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).0, Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 3), 1).1, _18.2.fld1, _18.2.fld2);
place!(Field::<f64>(Variant(_10.0, 3), 4)) = Field::<f64>(Variant(_18.2.fld5, 3), 4) - Field::<f64>(Variant(_18.2.fld5, 3), 4);
Call(_10.0 = fn7(_4, _21, _7, _5, _6), ReturnTo(bb16), UnwindUnreachable())
}
bb46 = {
_83.1.2 = Field::<(u64, i128, char, isize)>(Variant(_84.0.0, 2), 5).2 as isize;
_62 = [_20,_20,_16];
place!(Field::<isize>(Variant(_83.1.1, 2), 2)) = _74 as isize;
_81.0[_67] = _60 >> _17.3;
_83.0.fld6 = _18.2.fld6 - _18.1;
_85.1 = _17.2;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [Field::<[u32; 8]>(Variant(_83.1.1, 2), 5)[_67],Field::<[u32; 8]>(Variant(_83.1.1, 2), 5)[_67],Field::<[u32; 8]>(Variant(_84.0.0, 2), 4)[_67],Field::<u32>(Variant((*_23).0, 2), 0),Field::<u32>(Variant(_84.0.0, 2), 0),_22,Field::<[u32; 8]>(Variant(_84.0.0, 2), 4)[_67],_18.2.fld0[_67]];
_18.2.fld5 = Adt19::Variant0 { fld0: _16 };
_83.1.0 = -_50;
_80.1 = -_18.2.fld6;
_5 = _79.1.2;
_85.0 = _28 * _18.3;
_25 = core::ptr::addr_of!(_63);
_34 = _5;
_83.0.fld5 = (*_23).0;
_71 = core::ptr::addr_of_mut!((*_49)[_67]);
_84 = ((*_23),);
_83.0.fld3 = !_47;
_80.2 = Adt26 { fld0: Field::<[u32; 8]>(Variant(_10.0, 2), 4),fld1: Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).2,fld2: _18.2.fld2,fld3: _83.0.fld3,fld4: _18.2.fld4,fld5: _10.0,fld6: _18.2.fld6 };
_13 = -_53;
place!(Field::<u8>(Variant(_83.0.fld5, 2), 1)) = Field::<u8>(Variant((*_23).0, 2), 1);
_85.3 = _83.1.0 << _83.0.fld3;
_79.0 = !_85.1[_67];
_77 = _85.0;
_83.0.fld4 = [_18.2.fld0[_67],Field::<[u32; 8]>(Variant(_84.0.0, 2), 4)[_67],_22,_17.2[_67],_85.1[_67],_22];
_44.1 = !_79.1.2;
_83.0.fld0[_67] = !_17.2[_67];
_12 = _6 <= _7;
_46 = Field::<u16>(Variant(_83.0.fld5, 2), 3);
_28 = (*_49)[_67] as f32;
_20 = _16;
Call(_83.2 = fn18(Move(_83.1)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 2), 5).0, _85.3, _18.2.fld1, _80.2.fld2);
Goto(bb48)
}
bb48 = {
_74 = _83.0.fld3;
place!(Field::<(u64, i128, char, isize)>(Variant(_83.0.fld5, 2), 5)).0 = _47 as u64;
_79.1.3 = _29 | _29;
_59 = _74 as i8;
_80.2.fld0 = [_79.0,_22,_79.0,_65,Field::<u32>(Variant((*_23).0, 2), 0),_65,Field::<u32>(Variant(_83.0.fld5, 2), 0),Field::<u32>(Variant(_83.0.fld5, 2), 0)];
place!(Field::<u8>(Variant(_10.0, 2), 1)) = Field::<u8>(Variant(_84.0.0, 2), 1) >> Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).3;
_59 = !(*_71);
_80.1 = _83.0.fld6 * _18.2.fld6;
_63 = &mut place!(Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5)).1;
_72 = Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 2), 5).3;
_83.1.2 = _5 as isize;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5)).3 = !_83.1.2;
place!(Field::<u8>(Variant(_84.0.0, 2), 1)) = _80.1 as u8;
_25 = core::ptr::addr_of!((*_25));
_31 = [Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2];
Call(_57.1 = core::intrinsics::bswap(_79.1.3), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
_79.1 = (_85.0, Field::<[u32; 8]>(Variant(_84.0.0, 2), 4), _5, Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).1);
_85.0 = _24;
place!(Field::<f64>(Variant(_10.0, 2), 2)) = -Field::<f64>(Variant(_84.0.0, 2), 2);
_85.1 = [_2,_2,Field::<u32>(Variant(_83.0.fld5, 2), 0),_22,_2,_26,_65,_26];
_80.2.fld6 = _83.0.fld6 * _80.1;
place!(Field::<u8>(Variant(_84.0.0, 2), 1)) = !Field::<u8>(Variant((*_23).0, 2), 1);
_18.2.fld3 = !_83.0.fld3;
_90 = Adt19::Variant3 { fld0: _41.1,fld1: Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5),fld2: Field::<(u64, i128, char, isize)>(Variant(_10.0, 2), 5).3,fld3: _24,fld4: Field::<f64>(Variant(_84.0.0, 2), 2),fld5: _67,fld6: _80.2.fld6 };
_1 = !_7;
place!(Field::<(u64, i128, char, isize)>(Variant(_90, 3), 1)).3 = _18.2.fld2 - Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 2), 5).3;
place!(Field::<bool>(Variant(_90, 3), 0)) = Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 2), 5).3 == _72;
_18.2.fld1 = _57.2;
SetDiscriminant(_80.2.fld5, 3);
_65 = !_22;
_74 = !_18.2.fld3;
_18.2.fld1 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 2), 5).2;
_41.2 = &mut _70;
place!(Field::<[u32; 8]>(Variant(_10.0, 2), 4)) = [_65,_22,Field::<u32>(Variant((*_23).0, 2), 0),_65,_79.0,_79.0,_79.0,_26];
_85 = _79.1;
place!(Field::<(u64, i128, char, isize)>(Variant(_90, 3), 1)).1 = _29 + _79.1.3;
_18.2.fld6 = _80.1;
_10.0 = Adt19::Variant1 { fld0: _77,fld1: Field::<u8>(Variant(_83.0.fld5, 2), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_90, 3), 1),fld3: _50 };
_91 = [Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).2,_80.2.fld1];
Goto(bb50)
}
bb50 = {
_18.2.fld5 = _10.0;
_17.3 = !Field::<u8>(Variant((*_23).0, 1), 1);
_89 = [_57.0];
_39 = Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).3 ^ _60;
_80.3 = _46 as f32;
_7 = _83.0.fld6 == _80.1;
_34 = !_4;
place!(Field::<f32>(Variant((*_23).0, 1), 0)) = Field::<i64>(Variant(_90, 3), 6) as f32;
_85.3 = _79.0 as i128;
_61 = _20;
_81.2 = [_79.0,_65,_65,_79.0,_79.0,_22,_65,_22];
_79.1.3 = !Field::<i128>(Variant((*_23).0, 1), 3);
SetDiscriminant(_84.0.0, 1);
_29 = Field::<(u64, i128, char, isize)>(Variant((*_23).0, 1), 2).1 - Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).1;
_36 = Field::<(u64, i128, char, isize)>(Variant(_90, 3), 1).1 as f32;
_10.0 = _90;
_86 = -_83.1.2;
place!(Field::<(u64, i128, char, isize)>(Variant(_84.0.0, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_83.0.fld5, 2), 5).0, _29, _57.2, Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1).3);
_22 = _65 << _39;
_98 = Field::<(u64, i128, char, isize)>(Variant(_84.0.0, 1), 2).1 as i8;
(*_49) = [_98,_98,_98,_98,_98];
_18.2.fld0 = [_65,_22,_22,_22,_65,_79.0,_22,_22];
_80.2.fld5 = Adt19::Variant1 { fld0: _36,fld1: _17.3,fld2: Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1),fld3: Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1).1 };
_79.1.2 = !_12;
Goto(bb51)
}
bb51 = {
place!(Field::<i128>(Variant(_84.0.0, 1), 3)) = Field::<(u64, i128, char, isize)>(Variant(_84.0.0, 1), 2).1 + Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1).1;
place!(Field::<(u64, i128, char, isize)>(Variant((*_23).0, 3), 1)) = (Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2).0, Field::<i128>(Variant(_84.0.0, 1), 3), _57.2, Field::<isize>(Variant((*_23).0, 3), 2));
SetDiscriminant((*_23).0, 1);
_75 = Field::<u8>(Variant(_83.0.fld5, 2), 1);
_45 = (Move(_49), _8);
_17.0 = _48;
_6 = Field::<(u64, i128, char, isize)>(Variant(_84.0.0, 1), 2).1 == Field::<i128>(Variant(_80.2.fld5, 1), 3);
_83.0.fld1 = _55;
place!(Field::<bool>(Variant(_90, 3), 0)) = !_4;
_43 = Move(_17.1);
RET = Move(_43);
(*_25) = &mut place!(Field::<(u64, i128, char, isize)>(Variant(_18.2.fld5, 1), 2)).1;
(*_25) = &mut place!(Field::<(u64, i128, char, isize)>(Variant(_80.2.fld5, 1), 2)).1;
_79.1.0 = -_77;
Goto(bb52)
}
bb52 = {
Call(_102 = dump_var(6_usize, 3_usize, Move(_3), 54_usize, Move(_54), 29_usize, Move(_29), 34_usize, Move(_34)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_102 = dump_var(6_usize, 91_usize, Move(_91), 46_usize, Move(_46), 59_usize, Move(_59), 62_usize, Move(_62)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_102 = dump_var(6_usize, 2_usize, Move(_2), 1_usize, Move(_1), 5_usize, Move(_5), 89_usize, Move(_89)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_102 = dump_var(6_usize, 65_usize, Move(_65), 67_usize, Move(_67), 72_usize, Move(_72), 48_usize, Move(_48)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_102 = dump_var(6_usize, 75_usize, Move(_75), 40_usize, Move(_40), 14_usize, Move(_14), 57_usize, Move(_57)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_102 = dump_var(6_usize, 31_usize, Move(_31), 103_usize, _103, 103_usize, _103, 103_usize, _103), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: bool,mut _2: isize,mut _3: bool,mut _4: bool,mut _5: bool) -> Adt19 {
mir! {
type RET = Adt19;
let _6: bool;
let _7: u32;
let _8: ([i64; 7],);
let _9: bool;
let _10: f32;
let _11: char;
let _12: i16;
let _13: Adt47;
let _14: Adt26;
let _15: ();
let _16: ();
{
_3 = _5 != _5;
RET = Adt19::Variant0 { fld0: 5041_i16 };
_2 = -(-69_isize);
_1 = _3 != _3;
_5 = _4 <= _4;
_2 = (-125_isize) << 17_u8;
place!(Field::<i16>(Variant(RET, 0), 0)) = 17929_i16 ^ 1566_i16;
_1 = _3 & _4;
_6 = _1;
SetDiscriminant(RET, 3);
place!(Field::<bool>(Variant(RET, 3), 0)) = _4 == _4;
Goto(bb1)
}
bb1 = {
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).2 = '\u{10e3d3}';
place!(Field::<f64>(Variant(RET, 3), 4)) = (-124471026695943781178379871372969706074_i128) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = 84_i8 as isize;
place!(Field::<bool>(Variant(RET, 3), 0)) = _5 | _1;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).0 = 5176871409199222649_u64 >> _2;
place!(Field::<usize>(Variant(RET, 3), 5)) = !3994401162207663634_usize;
_5 = !_3;
_2 = !Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).3;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).0 = 16325339369161050361_u64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).1 = !59925670116493769248522272076518303244_i128;
place!(Field::<bool>(Variant(RET, 3), 0)) = !_5;
place!(Field::<f32>(Variant(RET, 3), 3)) = 123425806911706082224427559618650289390_u128 as f32;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)) = (6599373648668343354_u64, 105318041034194860980780487478865278546_i128, '\u{b30c4}', _2);
place!(Field::<f32>(Variant(RET, 3), 3)) = Field::<f64>(Variant(RET, 3), 4) as f32;
place!(Field::<isize>(Variant(RET, 3), 2)) = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).3;
place!(Field::<f64>(Variant(RET, 3), 4)) = Field::<f32>(Variant(RET, 3), 3) as f64;
_8.0 = [(-1901010994299963988_i64),(-9049436676236483600_i64),(-1274981079758529752_i64),(-4315817349560223140_i64),(-3497324165197577652_i64),(-6912291082596516810_i64),(-6998702851587972229_i64)];
place!(Field::<i64>(Variant(RET, 3), 6)) = !(-1269701785945564888_i64);
place!(Field::<f64>(Variant(RET, 3), 4)) = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).1 as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).1 = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).0 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)) = (606314124138077449_u64, (-126245271266160554521945965555488829786_i128), '\u{4df85}', _2);
SetDiscriminant(RET, 3);
_2 = !(-9223372036854775808_isize);
Call(place!(Field::<i64>(Variant(RET, 3), 6)) = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = _4 >= _3;
place!(Field::<isize>(Variant(RET, 3), 2)) = _2 >> Field::<i64>(Variant(RET, 3), 6);
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = Field::<isize>(Variant(RET, 3), 2);
place!(Field::<usize>(Variant(RET, 3), 5)) = !11942856348545248580_usize;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).0 = 14747687646249475008_u64;
place!(Field::<i64>(Variant(RET, 3), 6)) = !5415510456148637683_i64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).1 = 2042581720_i32 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = Field::<isize>(Variant(RET, 3), 2) + _2;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).2 = '\u{b7353}';
place!(Field::<bool>(Variant(RET, 3), 0)) = _4;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = (-1873781201_i32) as isize;
place!(Field::<f32>(Variant(RET, 3), 3)) = 21_u8 as f32;
_11 = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).2;
_2 = Field::<isize>(Variant(RET, 3), 2) * Field::<isize>(Variant(RET, 3), 2);
match Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).0 {
14747687646249475008 => bb4,
_ => bb3
}
}
bb3 = {
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).2 = '\u{10e3d3}';
place!(Field::<f64>(Variant(RET, 3), 4)) = (-124471026695943781178379871372969706074_i128) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = 84_i8 as isize;
place!(Field::<bool>(Variant(RET, 3), 0)) = _5 | _1;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).0 = 5176871409199222649_u64 >> _2;
place!(Field::<usize>(Variant(RET, 3), 5)) = !3994401162207663634_usize;
_5 = !_3;
_2 = !Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).3;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).0 = 16325339369161050361_u64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).1 = !59925670116493769248522272076518303244_i128;
place!(Field::<bool>(Variant(RET, 3), 0)) = !_5;
place!(Field::<f32>(Variant(RET, 3), 3)) = 123425806911706082224427559618650289390_u128 as f32;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)) = (6599373648668343354_u64, 105318041034194860980780487478865278546_i128, '\u{b30c4}', _2);
place!(Field::<f32>(Variant(RET, 3), 3)) = Field::<f64>(Variant(RET, 3), 4) as f32;
place!(Field::<isize>(Variant(RET, 3), 2)) = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).3;
place!(Field::<f64>(Variant(RET, 3), 4)) = Field::<f32>(Variant(RET, 3), 3) as f64;
_8.0 = [(-1901010994299963988_i64),(-9049436676236483600_i64),(-1274981079758529752_i64),(-4315817349560223140_i64),(-3497324165197577652_i64),(-6912291082596516810_i64),(-6998702851587972229_i64)];
place!(Field::<i64>(Variant(RET, 3), 6)) = !(-1269701785945564888_i64);
place!(Field::<f64>(Variant(RET, 3), 4)) = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).1 as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).1 = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).0 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)) = (606314124138077449_u64, (-126245271266160554521945965555488829786_i128), '\u{4df85}', _2);
SetDiscriminant(RET, 3);
_2 = !(-9223372036854775808_isize);
Call(place!(Field::<i64>(Variant(RET, 3), 6)) = core::intrinsics::transmute(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_7 = 3990185874_u32 - 886867120_u32;
place!(Field::<f64>(Variant(RET, 3), 4)) = _2 as f64;
_11 = Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).2;
_1 = _3;
place!(Field::<usize>(Variant(RET, 3), 5)) = 16900506483093501376_usize;
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)) = (2507493614993537658_u64, (-75558970829020160232922799985639037926_i128), _11, _2);
place!(Field::<isize>(Variant(RET, 3), 2)) = _2 & _2;
place!(Field::<f32>(Variant(RET, 3), 3)) = 517041860_i32 as f32;
place!(Field::<usize>(Variant(RET, 3), 5)) = 4_usize >> Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).0;
place!(Field::<i64>(Variant(RET, 3), 6)) = !1386224388383087350_i64;
_14.fld5 = Adt19::Variant1 { fld0: Field::<f32>(Variant(RET, 3), 3),fld1: 77_u8,fld2: Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1),fld3: Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1).1 };
place!(Field::<(u64, i128, char, isize)>(Variant(RET, 3), 1)).3 = Field::<(u64, i128, char, isize)>(Variant(_14.fld5, 1), 2).3;
_14.fld5 = RET;
_8.0 = [Field::<i64>(Variant(RET, 3), 6),Field::<i64>(Variant(_14.fld5, 3), 6),Field::<i64>(Variant(_14.fld5, 3), 6),Field::<i64>(Variant(_14.fld5, 3), 6),Field::<i64>(Variant(RET, 3), 6),Field::<i64>(Variant(_14.fld5, 3), 6),Field::<i64>(Variant(_14.fld5, 3), 6)];
Goto(bb5)
}
bb5 = {
Call(_15 = dump_var(7_usize, 11_usize, Move(_11), 1_usize, Move(_1), 4_usize, Move(_4), 6_usize, Move(_6)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: bool,mut _2: bool,mut _3: *mut (Adt19,),mut _4: bool,mut _5: Adt19,mut _6: Adt19,mut _7: isize,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: Adt19,mut _12: Adt19) -> u64 {
mir! {
type RET = u64;
let _13: *const [i64; 7];
let _14: bool;
let _15: usize;
let _16: *const &'static mut i128;
let _17: [u32; 6];
let _18: char;
let _19: bool;
let _20: &'static mut &'static i32;
let _21: char;
let _22: (i64, Adt54, (Adt19,), *const [isize; 5]);
let _23: isize;
let _24: i16;
let _25: i128;
let _26: char;
let _27: char;
let _28: *const [i64; 7];
let _29: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _30: i64;
let _31: &'static u16;
let _32: i32;
let _33: &'static mut &'static u16;
let _34: (&'static mut &'static u16, *const &'static mut i128);
let _35: [u64; 5];
let _36: i32;
let _37: f64;
let _38: f64;
let _39: u8;
let _40: f64;
let _41: i128;
let _42: ([i8; 5], [u32; 2], Adt47);
let _43: f64;
let _44: [char; 2];
let _45: (*const &'static (u32, (f32, [u32; 8], bool, i128)), [char; 6]);
let _46: ();
let _47: ();
{
place!(Field::<u16>(Variant(_6, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).3 as u16;
_8 = _4 | _9;
RET = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0 & Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0;
place!(Field::<u16>(Variant(_5, 2), 3)) = Field::<f64>(Variant(_5, 2), 2) as u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).3 << Field::<u8>(Variant(_6, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
place!(Field::<u16>(Variant(_6, 2), 3)) = Field::<u16>(Variant(_12, 2), 3) + Field::<u16>(Variant(_5, 2), 3);
Call(_14 = fn9(_11, _11, _6, _11, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5), _10, _8, _11), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<f64>(Variant(_11, 2), 2)) = Field::<f64>(Variant(_6, 2), 2) + Field::<f64>(Variant(_6, 2), 2);
_2 = _8 != _1;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (RET, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2, _7);
place!(Field::<u32>(Variant(_5, 2), 0)) = !Field::<u32>(Variant(_6, 2), 0);
_9 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).3;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).0;
_12 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_6, 2), 0),fld1: Field::<u8>(Variant(_5, 2), 1),fld2: Field::<f64>(Variant(_6, 2), 2),fld3: Field::<u16>(Variant(_6, 2), 3),fld4: Field::<[u32; 8]>(Variant(_11, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5) };
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5);
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2;
place!(Field::<[u32; 8]>(Variant(_11, 2), 4)) = Field::<[u32; 8]>(Variant(_6, 2), 4);
place!(Field::<[u32; 8]>(Variant(_11, 2), 4)) = Field::<[u32; 8]>(Variant(_6, 2), 4);
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5);
_15 = 1_usize * 2_usize;
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<u8>(Variant(_12, 2), 1) | Field::<u8>(Variant(_6, 2), 1);
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<u8>(Variant(_11, 2), 1) >> Field::<u32>(Variant(_12, 2), 0);
_18 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2, _7);
place!(Field::<u8>(Variant(_12, 2), 1)) = Field::<u8>(Variant(_6, 2), 1);
place!(Field::<u32>(Variant(_5, 2), 0)) = !Field::<u32>(Variant(_12, 2), 0);
Goto(bb2)
}
bb2 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
place!(Field::<[u32; 8]>(Variant(_5, 2), 4)) = [Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_12, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).0 = (-506910141689088658_i64) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).1 = 62_i8 as i128;
_21 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
Goto(bb3)
}
bb3 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).2 = _18;
place!(Field::<u16>(Variant(_5, 2), 3)) = Field::<u16>(Variant(_12, 2), 3) ^ Field::<u16>(Variant(_12, 2), 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).3);
_17 = [Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_6, 2), 0)];
_9 = _14 == _10;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).1, _21, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).3);
_12 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_5, 2), 0),fld1: Field::<u8>(Variant(_5, 2), 1),fld2: Field::<f64>(Variant(_11, 2), 2),fld3: Field::<u16>(Variant(_5, 2), 3),fld4: Field::<[u32; 8]>(Variant(_11, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5) };
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3 as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
_18 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
_18 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2;
place!(Field::<[u32; 8]>(Variant(_12, 2), 4)) = [Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_12, 2), 0),Field::<u32>(Variant(_12, 2), 0)];
_24 = (-20058_i16) << _7;
_3 = core::ptr::addr_of_mut!(_22.2);
_12 = _11;
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
(*_3).0 = _12;
place!(Field::<u16>(Variant((*_3).0, 2), 3)) = 251003714207083040227772273210095362146_u128 as u16;
place!(Field::<u16>(Variant(_5, 2), 3)) = _1 as u16;
_24 = -(-21103_i16);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).0 = RET | Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).1;
place!(Field::<u8>(Variant(_12, 2), 1)) = (-105_i8) as u8;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).0 = !RET;
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5).0 + Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5).0;
(*_3).0 = _5;
Goto(bb4)
}
bb4 = {
Goto(bb5)
}
bb5 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = _21;
_22.2.0 = _12;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0 << Field::<u16>(Variant(_5, 2), 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = !Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).1;
SetDiscriminant((*_3).0, 0);
place!(Field::<u32>(Variant(_12, 2), 0)) = Field::<u32>(Variant(_5, 2), 0);
(*_3).0 = Adt19::Variant0 { fld0: _24 };
SetDiscriminant(_12, 0);
_19 = _4 ^ _8;
SetDiscriminant((*_3).0, 3);
Goto(bb6)
}
bb6 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5);
(*_3).0 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_5, 2), 0),fld1: Field::<u8>(Variant(_5, 2), 1),fld2: Field::<f64>(Variant(_6, 2), 2),fld3: Field::<u16>(Variant(_5, 2), 3),fld4: Field::<[u32; 8]>(Variant(_6, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5) };
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = _15 as u16;
place!(Field::<f64>(Variant((*_3).0, 2), 2)) = Field::<f64>(Variant(_11, 2), 2) - Field::<f64>(Variant(_11, 2), 2);
place!(Field::<u32>(Variant(_6, 2), 0)) = !Field::<u32>(Variant(_5, 2), 0);
RET = Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).0;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).1 = !Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).1;
_22.2 = (_6,);
(*_3) = (_11,);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).0;
place!(Field::<u32>(Variant(_11, 2), 0)) = Field::<u32>(Variant(_22.2.0, 2), 0);
place!(Field::<u8>(Variant(_6, 2), 1)) = !Field::<u8>(Variant((*_3).0, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5).3 ^ Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).3;
(*_3).0 = _5;
place!(Field::<f64>(Variant((*_3).0, 2), 2)) = Field::<f64>(Variant(_11, 2), 2) * Field::<f64>(Variant(_11, 2), 2);
Call(RET = fn10(_9, _22.2.0, Field::<u16>(Variant(_5, 2), 3), _8, Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5), _5, Move(_3), _10, _1, _2), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_18 = _21;
place!(Field::<u16>(Variant(_6, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).0 as u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).3 = -Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
_23 = _7;
_10 = _4;
_18 = _21;
place!(Field::<[u32; 8]>(Variant(_6, 2), 4)) = Field::<[u32; 8]>(Variant(_5, 2), 4);
RET = Field::<u8>(Variant(_6, 2), 1) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).0 = !RET;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).0;
_3 = core::ptr::addr_of_mut!(_22.2);
place!(Field::<f64>(Variant(_22.2.0, 2), 2)) = Field::<f64>(Variant(_11, 2), 2);
RET = Field::<u32>(Variant(_6, 2), 0) as u64;
_17 = [Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant((*_3).0, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (RET, Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).1, _21, _7);
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).2 = _18;
_12 = Adt19::Variant0 { fld0: _24 };
Goto(bb8)
}
bb8 = {
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3);
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = (-23542971_i32) as u16;
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = 136927025594693154374805233249886348382_u128 as u16;
_26 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<u8>(Variant((*_3).0, 2), 1)) = Field::<u8>(Variant(_6, 2), 1) - Field::<u8>(Variant(_6, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2;
Call(_32 = fn17((*_3), (*_3).0, Move(_3), _22.2), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).1 = !Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).1;
_31 = &place!(Field::<u16>(Variant(_6, 2), 3));
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2;
Goto(bb10)
}
bb10 = {
_19 = _24 >= Field::<i16>(Variant(_12, 0), 0);
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = Field::<u16>(Variant(_5, 2), 3) >> Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).1;
_29.2 = &mut _31;
place!(Field::<u16>(Variant(_11, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).1 as u16;
_15 = !4561820133132155904_usize;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).1;
_23 = -Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).3;
_9 = _10 <= _4;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).1;
_22.2.0 = _5;
place!(Field::<[u32; 8]>(Variant(_22.2.0, 2), 4)) = [Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_6, 2), 0)];
_37 = -Field::<f64>(Variant(_5, 2), 2);
_34.0 = Move(_29.2);
_30 = _24 as i64;
place!(Field::<u16>(Variant(_5, 2), 3)) = Field::<u16>(Variant(_22.2.0, 2), 3);
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = Field::<u16>(Variant(_5, 2), 3) >> Field::<u16>(Variant(_5, 2), 3);
_25 = !Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).1;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).2 = _18;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5);
_37 = _30 as f64;
_29.1 = !_4;
_22.0 = !_30;
RET = !Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).0;
_3 = core::ptr::addr_of_mut!(_22.2);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)) = (RET, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3);
match _32 {
0 => bb4,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
709837512 => bb16,
_ => bb15
}
}
bb11 = {
RET = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<f64>(Variant(_11, 2), 2)) = Field::<f64>(Variant(_6, 2), 2) + Field::<f64>(Variant(_6, 2), 2);
_2 = _8 != _1;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (RET, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2, _7);
place!(Field::<u32>(Variant(_5, 2), 0)) = !Field::<u32>(Variant(_6, 2), 0);
_9 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).3;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).0;
_12 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_6, 2), 0),fld1: Field::<u8>(Variant(_5, 2), 1),fld2: Field::<f64>(Variant(_6, 2), 2),fld3: Field::<u16>(Variant(_6, 2), 3),fld4: Field::<[u32; 8]>(Variant(_11, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5) };
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5);
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).2;
place!(Field::<[u32; 8]>(Variant(_11, 2), 4)) = Field::<[u32; 8]>(Variant(_6, 2), 4);
place!(Field::<[u32; 8]>(Variant(_11, 2), 4)) = Field::<[u32; 8]>(Variant(_6, 2), 4);
place!(Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5);
_15 = 1_usize * 2_usize;
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<u8>(Variant(_12, 2), 1) | Field::<u8>(Variant(_6, 2), 1);
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<u8>(Variant(_11, 2), 1) >> Field::<u32>(Variant(_12, 2), 0);
_18 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2, _7);
place!(Field::<u8>(Variant(_12, 2), 1)) = Field::<u8>(Variant(_6, 2), 1);
place!(Field::<u32>(Variant(_5, 2), 0)) = !Field::<u32>(Variant(_12, 2), 0);
Goto(bb2)
}
bb12 = {
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3);
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = (-23542971_i32) as u16;
place!(Field::<u16>(Variant(_22.2.0, 2), 3)) = 136927025594693154374805233249886348382_u128 as u16;
_26 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).2;
place!(Field::<u8>(Variant((*_3).0, 2), 1)) = Field::<u8>(Variant(_6, 2), 1) - Field::<u8>(Variant(_6, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5).2;
Call(_32 = fn17((*_3), (*_3).0, Move(_3), _22.2), ReturnTo(bb9), UnwindUnreachable())
}
bb13 = {
_18 = _21;
place!(Field::<u16>(Variant(_6, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).0 as u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)).3 = -Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
_23 = _7;
_10 = _4;
_18 = _21;
place!(Field::<[u32; 8]>(Variant(_6, 2), 4)) = Field::<[u32; 8]>(Variant(_5, 2), 4);
RET = Field::<u8>(Variant(_6, 2), 1) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).0 = !RET;
place!(Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5)).0 = !Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).0;
_3 = core::ptr::addr_of_mut!(_22.2);
place!(Field::<f64>(Variant(_22.2.0, 2), 2)) = Field::<f64>(Variant(_11, 2), 2);
RET = Field::<u32>(Variant(_6, 2), 0) as u64;
_17 = [Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_11, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant((*_3).0, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5)) = (RET, Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5).1, _21, _7);
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).2 = _18;
_12 = Adt19::Variant0 { fld0: _24 };
Goto(bb8)
}
bb14 = {
Goto(bb5)
}
bb15 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = _21;
_22.2.0 = _12;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_12, 2), 5).0 << Field::<u16>(Variant(_5, 2), 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = !Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).1;
SetDiscriminant((*_3).0, 0);
place!(Field::<u32>(Variant(_12, 2), 0)) = Field::<u32>(Variant(_5, 2), 0);
(*_3).0 = Adt19::Variant0 { fld0: _24 };
SetDiscriminant(_12, 0);
_19 = _4 ^ _8;
SetDiscriminant((*_3).0, 3);
Goto(bb6)
}
bb16 = {
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).1 = _15 as i128;
place!(Field::<u16>(Variant(_5, 2), 3)) = Field::<u16>(Variant(_22.2.0, 2), 3) & Field::<u16>(Variant((*_3).0, 2), 3);
_9 = _14;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = _26;
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = _30 as i128;
_29.2 = &mut _31;
_10 = _29.1 == _8;
_17 = [Field::<u32>(Variant((*_3).0, 2), 0),Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_5, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant((*_3).0, 2), 0)];
_22.0 = _30;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).3 = !Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
place!(Field::<u16>(Variant(_5, 2), 3)) = Field::<u16>(Variant((*_3).0, 2), 3);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).1 = _25 << Field::<u16>(Variant((*_3).0, 2), 3);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).1 = 49_i8 as i128;
place!(Field::<u8>(Variant(_5, 2), 1)) = Field::<u8>(Variant((*_3).0, 2), 1) & Field::<u8>(Variant(_22.2.0, 2), 1);
(*_3).0 = _6;
place!(Field::<u16>(Variant((*_3).0, 2), 3)) = _15 as u16;
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.0, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_5, 2), 5).3 ^ Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
_5 = _11;
_43 = -Field::<f64>(Variant(_22.2.0, 2), 2);
_42.1 = [Field::<u32>(Variant(_22.2.0, 2), 0),Field::<u32>(Variant(_11, 2), 0)];
_37 = Field::<f64>(Variant(_11, 2), 2) - Field::<f64>(Variant(_11, 2), 2);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_11, 2), 5);
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).2 = _26;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 2), 5)).3 = _7;
Goto(bb17)
}
bb17 = {
Call(_46 = dump_var(8_usize, 21_usize, Move(_21), 19_usize, Move(_19), 2_usize, Move(_2), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_46 = dump_var(8_usize, 10_usize, Move(_10), 26_usize, Move(_26), 9_usize, Move(_9), 24_usize, Move(_24)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_46 = dump_var(8_usize, 30_usize, Move(_30), 47_usize, _47, 47_usize, _47, 47_usize, _47), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: Adt19,mut _2: Adt19,mut _3: Adt19,mut _4: Adt19,mut _5: (u64, i128, char, isize),mut _6: bool,mut _7: bool,mut _8: Adt19) -> bool {
mir! {
type RET = bool;
let _9: bool;
let _10: &'static u32;
let _11: ();
let _12: ();
{
place!(Field::<f64>(Variant(_1, 2), 2)) = Field::<f64>(Variant(_2, 2), 2);
RET = !_7;
RET = _6 <= _7;
place!(Field::<u32>(Variant(_8, 2), 0)) = !Field::<u32>(Variant(_2, 2), 0);
SetDiscriminant(_1, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_1, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_4, 2), 5).3;
SetDiscriminant(_4, 0);
place!(Field::<(u64, i128, char, isize)>(Variant(_8, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5);
place!(Field::<u8>(Variant(_3, 2), 1)) = 4228611675498695042_i64 as u8;
_5.3 = Field::<(u64, i128, char, isize)>(Variant(_3, 2), 5).3;
place!(Field::<[u32; 8]>(Variant(_8, 2), 4)) = [Field::<u32>(Variant(_8, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_3, 2), 0),Field::<u32>(Variant(_8, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_8, 2), 0),Field::<u32>(Variant(_3, 2), 0),Field::<u32>(Variant(_3, 2), 0)];
_1 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_3, 2), 0),fld1: Field::<u8>(Variant(_3, 2), 1),fld2: Field::<f64>(Variant(_3, 2), 2),fld3: Field::<u16>(Variant(_3, 2), 3),fld4: Field::<[u32; 8]>(Variant(_3, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_8, 2), 5) };
place!(Field::<f64>(Variant(_2, 2), 2)) = Field::<f64>(Variant(_8, 2), 2) + Field::<f64>(Variant(_8, 2), 2);
SetDiscriminant(_8, 3);
Goto(bb1)
}
bb1 = {
Call(_11 = dump_var(9_usize, 7_usize, Move(_7), 12_usize, _12, 12_usize, _12, 12_usize, _12), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: Adt19,mut _3: u16,mut _4: bool,mut _5: (u64, i128, char, isize),mut _6: Adt19,mut _7: *mut (Adt19,),mut _8: bool,mut _9: bool,mut _10: bool) -> u64 {
mir! {
type RET = u64;
let _11: (*const &'static mut &'static u16,);
let _12: (&'static mut [i8; 5], [u64; 1]);
let _13: f32;
let _14: isize;
let _15: ([isize; 5], *const &'static mut &'static u16, [u32; 8], u8);
let _16: Adt29;
let _17: (Adt19,);
let _18: Adt32;
let _19: (Adt26, (i128, Adt29, isize), u32);
let _20: f32;
let _21: &'static mut Adt56;
let _22: u64;
let _23: [char; 7];
let _24: isize;
let _25: isize;
let _26: [isize; 5];
let _27: i16;
let _28: *mut &'static mut (u16, i64, Adt26, f32);
let _29: *mut [i128; 2];
let _30: &'static char;
let _31: (u32, (f32, [u32; 8], bool, i128));
let _32: u16;
let _33: ();
let _34: ();
{
place!(Field::<u16>(Variant(_6, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1 as u16;
_10 = Field::<u16>(Variant(_2, 2), 3) <= Field::<u16>(Variant(_2, 2), 3);
_10 = _4 & _9;
Goto(bb1)
}
bb1 = {
place!(Field::<u16>(Variant(_6, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_6, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = fn11(_8, _3, _8, _9, _4, _10, Move(_7), _10, _3, _10, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = _5.1 << Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_2, 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)) = _5;
place!(Field::<[u32; 8]>(Variant(_6, 2), 4)) = [115260930_u32,3900912163_u32,3023374449_u32,1253053754_u32,2552632131_u32,366612466_u32,117280972_u32,46191545_u32];
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).3 = !Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3;
place!(Field::<u32>(Variant(_6, 2), 0)) = 841670034_u32 & 391718355_u32;
_9 = _8;
place!(Field::<u16>(Variant(_6, 2), 3)) = _5.0 as u16;
place!(Field::<[u32; 8]>(Variant(_6, 2), 4)) = [Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).3 = _5.3;
RET = 25950_i16 as u64;
place!(Field::<u16>(Variant(_6, 2), 3)) = !_3;
_5.2 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).2;
place!(Field::<u8>(Variant(_2, 1), 1)) = 233_u8;
place!(Field::<f32>(Variant(_2, 1), 0)) = 7_usize as f32;
_5.3 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
match Field::<u8>(Variant(_2, 1), 1) {
0 => bb1,
233 => bb4,
_ => bb3
}
}
bb3 = {
place!(Field::<u16>(Variant(_6, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_6, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = fn11(_8, _3, _8, _9, _4, _10, Move(_7), _10, _3, _10, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
_15.2 = [Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).2 = _5.2;
RET = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0;
_5.0 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0;
_15.0 = [_5.3,Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3,_5.3,_5.3];
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)) = _5;
_15.2 = [Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0),Field::<u32>(Variant(_6, 2), 0)];
_14 = _5.3;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
_19.1.0 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).1 * _5.1;
_5.2 = Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).2;
match Field::<u8>(Variant(_2, 1), 1) {
0 => bb1,
1 => bb2,
233 => bb6,
_ => bb5
}
}
bb5 = {
place!(Field::<u16>(Variant(_6, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_6, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = fn11(_8, _3, _8, _9, _4, _10, Move(_7), _10, _3, _10, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
_5.2 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).2;
_16 = Adt29::Variant2 { fld0: _4,fld1: Field::<u8>(Variant(_2, 1), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3,fld3: 32_i8,fld4: 15039114798890271900_usize,fld5: _15.2,fld6: Field::<f32>(Variant(_2, 1), 0),fld7: Field::<u16>(Variant(_6, 2), 3) };
place!(Field::<f64>(Variant(_6, 2), 2)) = Field::<u16>(Variant(_6, 2), 3) as f64;
_12.1 = [Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0];
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)).3 = -Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5).3;
_15.3 = Field::<u8>(Variant(_16, 2), 1);
place!(Field::<i128>(Variant(_2, 1), 3)) = (-846387135_i32) as i128;
place!(Field::<usize>(Variant(_16, 2), 4)) = 2910779518800961838_usize;
_7 = core::ptr::addr_of_mut!(_17);
_6 = Adt19::Variant0 { fld0: (-7705_i16) };
_1 = _10;
place!(Field::<i16>(Variant(_6, 0), 0)) = 27816_i16;
_15.0 = [_5.3,Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3,Field::<isize>(Variant(_16, 2), 2),_14];
_19.2 = 3056776412_u32;
_19.0.fld5 = _2;
_19.0.fld0 = _15.2;
place!(Field::<[u32; 8]>(Variant(_16, 2), 5)) = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
_10 = !_8;
_19.1.1 = Adt29::Variant2 { fld0: _4,fld1: Field::<u8>(Variant(_16, 2), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3,fld3: 22_i8,fld4: Field::<usize>(Variant(_16, 2), 4),fld5: Field::<[u32; 8]>(Variant(_16, 2), 5),fld6: Field::<f32>(Variant(_2, 1), 0),fld7: Field::<u16>(Variant(_16, 2), 7) };
(*_7) = (_2,);
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).3 = !_5.3;
place!(Field::<i128>(Variant(_2, 1), 3)) = Field::<i128>(Variant((*_7).0, 1), 3) & Field::<i128>(Variant(_17.0, 1), 3);
_19.0.fld3 = 300874333755801303226499161257506637357_u128 | 52302358712633487636810769539286448677_u128;
place!(Field::<u8>(Variant((*_7).0, 1), 1)) = Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).2 as u8;
match Field::<u8>(Variant(_16, 2), 1) {
0 => bb1,
1 => bb5,
2 => bb7,
233 => bb9,
_ => bb8
}
}
bb7 = {
place!(Field::<u16>(Variant(_6, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_6, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = fn11(_8, _3, _8, _9, _4, _10, Move(_7), _10, _3, _10, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
place!(Field::<u16>(Variant(_6, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
SetDiscriminant(_6, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_6, 2), 5)).1 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).2 = fn11(_8, _3, _8, _9, _4, _10, Move(_7), _10, _3, _10, _4), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
place!(Field::<[u32; 8]>(Variant(_16, 2), 5)) = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
_13 = Field::<f32>(Variant(_2, 1), 0);
place!(Field::<[u32; 8]>(Variant(_19.1.1, 2), 5)) = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
SetDiscriminant(_17.0, 0);
_7 = core::ptr::addr_of_mut!(_17);
place!(Field::<f32>(Variant(_2, 1), 0)) = Field::<f32>(Variant(_19.1.1, 2), 6) - Field::<f32>(Variant(_19.0.fld5, 1), 0);
_2 = _19.0.fld5;
place!(Field::<(u64, i128, char, isize)>(Variant(_19.0.fld5, 1), 2)) = _5;
place!(Field::<i128>(Variant(_19.0.fld5, 1), 3)) = _19.2 as i128;
_19.0.fld5 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_6, 0), 0) };
Goto(bb10)
}
bb10 = {
_17.0 = _2;
RET = Field::<f32>(Variant((*_7).0, 1), 0) as u64;
_17 = (_2,);
_19.0.fld4 = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
place!(Field::<f32>(Variant((*_7).0, 1), 0)) = Field::<u8>(Variant((*_7).0, 1), 1) as f32;
place!(Field::<usize>(Variant(_19.1.1, 2), 4)) = _19.0.fld3 as usize;
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)) = (RET, _19.1.0, _5.2, Field::<isize>(Variant(_16, 2), 2));
_6 = (*_7).0;
place!(Field::<u8>(Variant(_17.0, 1), 1)) = Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).0 as u8;
_9 = !Field::<bool>(Variant(_16, 2), 0);
_19.0.fld0 = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
_19.1.0 = Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).1;
place!(Field::<i8>(Variant(_16, 2), 3)) = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3 as i8;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2)).0 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0;
SetDiscriminant((*_7).0, 0);
_17.0 = _6;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)) = Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2);
place!(Field::<isize>(Variant(_19.1.1, 2), 2)) = Field::<isize>(Variant(_16, 2), 2) - Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).3;
SetDiscriminant(_6, 0);
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).0 = _5.0 | Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0;
_1 = Field::<bool>(Variant(_19.1.1, 2), 0);
place!(Field::<f32>(Variant(_17.0, 1), 0)) = -Field::<f32>(Variant(_2, 1), 0);
_12.1 = [RET];
_19.2 = 2066123799_u32;
Call(_19.1.0 = core::intrinsics::bswap(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).1), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
SetDiscriminant(_17.0, 0);
place!(Field::<usize>(Variant(_19.1.1, 2), 4)) = !Field::<usize>(Variant(_16, 2), 4);
RET = !_5.0;
_19.1.0 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0 as i128;
(*_7) = (_2,);
place!(Field::<i16>(Variant(_6, 0), 0)) = !Field::<i16>(Variant(_19.0.fld5, 0), 0);
SetDiscriminant(_19.0.fld5, 0);
Goto(bb12)
}
bb12 = {
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).3 = !Field::<isize>(Variant(_19.1.1, 2), 2);
_19.0.fld1 = Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).2;
place!(Field::<u8>(Variant(_2, 1), 1)) = Field::<u8>(Variant(_19.1.1, 2), 1) & Field::<u8>(Variant(_17.0, 1), 1);
place!(Field::<i16>(Variant(_19.0.fld5, 0), 0)) = _19.0.fld3 as i16;
match _15.3 {
0 => bb1,
1 => bb7,
233 => bb13,
_ => bb3
}
}
bb13 = {
_19.1.2 = 1574317699_i32 as isize;
place!(Field::<[u32; 8]>(Variant(_16, 2), 5)) = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
place!(Field::<[u32; 8]>(Variant(_19.1.1, 2), 5)) = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).2 = _19.0.fld1;
_19.0.fld0 = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
place!(Field::<f32>(Variant(_17.0, 1), 0)) = Field::<i128>(Variant((*_7).0, 1), 3) as f32;
place!(Field::<u8>(Variant((*_7).0, 1), 1)) = !Field::<u8>(Variant(_19.1.1, 2), 1);
Call(_19.0.fld2 = fn16(_9, _9, _6, _17.0, _17.0), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_19.0.fld5 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_6, 0), 0) };
_4 = Field::<bool>(Variant(_19.1.1, 2), 0) & _10;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2)).0 = _19.0.fld3 as u64;
place!(Field::<i8>(Variant(_19.1.1, 2), 3)) = Field::<i8>(Variant(_16, 2), 3);
_23 = [Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).2,Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).2,Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).2,_5.2,_5.2,Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).2,Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).2];
_19.0.fld5 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_6, 0), 0) };
place!(Field::<bool>(Variant(_19.1.1, 2), 0)) = _1 ^ _8;
_5.0 = !Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0;
_15.0 = [Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2).3,Field::<isize>(Variant(_19.1.1, 2), 2),_5.3,_19.0.fld2,Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).3];
_19.0.fld2 = Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2).3;
place!(Field::<u8>(Variant(_17.0, 1), 1)) = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).1 as u8;
SetDiscriminant(_6, 0);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)) = Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).2;
_18 = Adt32::Variant0 { fld0: Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2),fld1: Field::<u8>(Variant(_16, 2), 1),fld2: Field::<i8>(Variant(_16, 2), 3) };
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2).0, _5.1, Field::<(u64, i128, char, isize)>(Variant(_18, 0), 0).2, Field::<isize>(Variant(_16, 2), 2));
SetDiscriminant(_2, 2);
place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).2 = _19.0.fld1;
_19.0.fld4 = [_19.2,_19.2,_19.2,_19.2,_19.2,_19.2];
_5.0 = !Field::<(u64, i128, char, isize)>(Variant(_18, 0), 0).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2)).0 = !RET;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.0, 1), 2)).2 = _19.0.fld1;
_32 = !_3;
place!(Field::<u8>(Variant((*_7).0, 1), 1)) = Field::<u8>(Variant(_18, 0), 1) << _3;
_30 = &place!(Field::<(u64, i128, char, isize)>(Variant((*_7).0, 1), 2)).2;
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(10_usize, 23_usize, Move(_23), 10_usize, Move(_10), 4_usize, Move(_4), 32_usize, Move(_32)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(10_usize, 14_usize, Move(_14), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: bool,mut _2: u16,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: *mut (Adt19,),mut _8: bool,mut _9: u16,mut _10: bool,mut _11: bool) -> char {
mir! {
type RET = char;
let _12: isize;
let _13: u64;
let _14: Adt47;
let _15: *const [isize; 5];
let _16: *const [i64; 7];
let _17: Adt26;
let _18: isize;
let _19: u8;
let _20: f64;
let _21: i8;
let _22: isize;
let _23: [u32; 6];
let _24: bool;
let _25: &'static mut Adt56;
let _26: (i128, Adt29, isize);
let _27: u64;
let _28: bool;
let _29: &'static mut &'static i32;
let _30: ([i8; 5], [u32; 2], Adt47);
let _31: (u16, i64, Adt26, f32);
let _32: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _33: (i64, Adt54, (Adt19,), *const [isize; 5]);
let _34: i32;
let _35: i64;
let _36: bool;
let _37: char;
let _38: ([i64; 7],);
let _39: [i16; 3];
let _40: ();
let _41: ();
{
RET = '\u{9d78b}';
_8 = _1 >= _3;
_10 = _8 & _8;
Goto(bb1)
}
bb1 = {
_4 = _3;
_6 = _3;
RET = '\u{10f7d3}';
_1 = _4 != _10;
_11 = _10;
_11 = _1;
_4 = _2 != _2;
_12 = -(-9223372036854775808_isize);
RET = '\u{500d7}';
_10 = _3;
_8 = _11;
_4 = !_10;
_13 = 10_u8 as u64;
_5 = !_4;
_9 = _12 as u16;
_13 = (-25073_i16) as u64;
RET = '\u{ea697}';
RET = '\u{9d732}';
_5 = _8;
_4 = _5;
_17.fld3 = 224554862371714050693624700907970197680_u128 >> _2;
_4 = _11 == _5;
_17.fld1 = RET;
_1 = !_6;
_17.fld2 = _13 as isize;
Goto(bb2)
}
bb2 = {
_17.fld1 = RET;
_18 = !_12;
RET = _17.fld1;
_3 = _11 == _8;
_17.fld2 = _12 - _18;
_17.fld0 = [4278409184_u32,228604272_u32,3107900258_u32,3068824396_u32,1085503902_u32,3122325265_u32,135886073_u32,4231005113_u32];
Goto(bb3)
}
bb3 = {
_1 = _5;
_11 = _5 != _10;
Call(_3 = fn12(_11, _2, _4, Move(_7), _17.fld2, _11, _11, _8, _17.fld3, _11), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_11 = _10;
_17.fld6 = !4872921427312433451_i64;
_2 = _9;
_9 = _2 << _17.fld3;
_17.fld4 = [2787497329_u32,3454833676_u32,726516787_u32,1995070684_u32,3099686056_u32,2916378844_u32];
_13 = !15006421097955388349_u64;
_11 = !_6;
_5 = !_8;
RET = _17.fld1;
_11 = _1 & _10;
Goto(bb5)
}
bb5 = {
RET = _17.fld1;
_17.fld4 = [862963359_u32,1796139757_u32,2926881004_u32,2137638936_u32,262239680_u32,2206112412_u32];
_17.fld5 = Adt19::Variant0 { fld0: 1088_i16 };
_19 = 33_u8 - 33_u8;
_17.fld6 = !(-295500631150409495_i64);
_17.fld1 = RET;
_20 = (-47_i8) as f64;
place!(Field::<i16>(Variant(_17.fld5, 0), 0)) = 8807_i16;
_12 = -_17.fld2;
_18 = _12 & _12;
_17.fld1 = RET;
_17.fld0 = [3963893883_u32,587756023_u32,1604757_u32,3643558760_u32,620079775_u32,2360349840_u32,1542756984_u32,2849806283_u32];
_12 = _18;
_17.fld4 = [1089296926_u32,3213697655_u32,1744005291_u32,2636731701_u32,1516032676_u32,1522835529_u32];
_17.fld6 = Field::<i16>(Variant(_17.fld5, 0), 0) as i64;
_19 = !46_u8;
_19 = 247_u8 | 136_u8;
RET = _17.fld1;
RET = _17.fld1;
_20 = 42_i8 as f64;
_20 = _18 as f64;
_23 = _17.fld4;
SetDiscriminant(_17.fld5, 1);
_19 = (-33_i8) as u8;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).1 = fn14(_1, _1, _9, _1, _1, _3, _8, _20, _6, _9, _9, _1), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_8 = !_4;
place!(Field::<u8>(Variant(_17.fld5, 1), 1)) = _20 as u8;
_17.fld1 = RET;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).0 = !_13;
RET = _17.fld1;
_1 = _11;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)) = (_13, 94415419524592693772211678675100217035_i128, RET, _17.fld2);
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).2 = _17.fld1;
_24 = _17.fld3 < _17.fld3;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).0 = _20 as u64;
_8 = _5;
_13 = _9 as u64;
_12 = _18 + _17.fld2;
match Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2).1 {
0 => bb7,
1 => bb8,
2 => bb9,
94415419524592693772211678675100217035 => bb11,
_ => bb10
}
}
bb7 = {
RET = _17.fld1;
_17.fld4 = [862963359_u32,1796139757_u32,2926881004_u32,2137638936_u32,262239680_u32,2206112412_u32];
_17.fld5 = Adt19::Variant0 { fld0: 1088_i16 };
_19 = 33_u8 - 33_u8;
_17.fld6 = !(-295500631150409495_i64);
_17.fld1 = RET;
_20 = (-47_i8) as f64;
place!(Field::<i16>(Variant(_17.fld5, 0), 0)) = 8807_i16;
_12 = -_17.fld2;
_18 = _12 & _12;
_17.fld1 = RET;
_17.fld0 = [3963893883_u32,587756023_u32,1604757_u32,3643558760_u32,620079775_u32,2360349840_u32,1542756984_u32,2849806283_u32];
_12 = _18;
_17.fld4 = [1089296926_u32,3213697655_u32,1744005291_u32,2636731701_u32,1516032676_u32,1522835529_u32];
_17.fld6 = Field::<i16>(Variant(_17.fld5, 0), 0) as i64;
_19 = !46_u8;
_19 = 247_u8 | 136_u8;
RET = _17.fld1;
RET = _17.fld1;
_20 = 42_i8 as f64;
_20 = _18 as f64;
_23 = _17.fld4;
SetDiscriminant(_17.fld5, 1);
_19 = (-33_i8) as u8;
Call(place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).1 = fn14(_1, _1, _9, _1, _1, _3, _8, _20, _6, _9, _9, _1), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_11 = _10;
_17.fld6 = !4872921427312433451_i64;
_2 = _9;
_9 = _2 << _17.fld3;
_17.fld4 = [2787497329_u32,3454833676_u32,726516787_u32,1995070684_u32,3099686056_u32,2916378844_u32];
_13 = !15006421097955388349_u64;
_11 = !_6;
_5 = !_8;
RET = _17.fld1;
_11 = _1 & _10;
Goto(bb5)
}
bb9 = {
_4 = _3;
_6 = _3;
RET = '\u{10f7d3}';
_1 = _4 != _10;
_11 = _10;
_11 = _1;
_4 = _2 != _2;
_12 = -(-9223372036854775808_isize);
RET = '\u{500d7}';
_10 = _3;
_8 = _11;
_4 = !_10;
_13 = 10_u8 as u64;
_5 = !_4;
_9 = _12 as u16;
_13 = (-25073_i16) as u64;
RET = '\u{ea697}';
RET = '\u{9d732}';
_5 = _8;
_4 = _5;
_17.fld3 = 224554862371714050693624700907970197680_u128 >> _2;
_4 = _11 == _5;
_17.fld1 = RET;
_1 = !_6;
_17.fld2 = _13 as isize;
Goto(bb2)
}
bb10 = {
_17.fld1 = RET;
_18 = !_12;
RET = _17.fld1;
_3 = _11 == _8;
_17.fld2 = _12 - _18;
_17.fld0 = [4278409184_u32,228604272_u32,3107900258_u32,3068824396_u32,1085503902_u32,3122325265_u32,135886073_u32,4231005113_u32];
Goto(bb3)
}
bb11 = {
_17.fld6 = (-90960895340447594_i64);
_21 = (-14_i8) << _9;
place!(Field::<f32>(Variant(_17.fld5, 1), 0)) = _21 as f32;
_3 = !_10;
_17.fld4 = [3432992602_u32,977097808_u32,353524363_u32,1172494543_u32,4227290455_u32,235410685_u32];
_11 = !_24;
_22 = _12 * _12;
_4 = !_5;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).0 = !_13;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).0 = _13;
_23 = [2188297262_u32,231356223_u32,50274625_u32,2745743553_u32,786850049_u32,3120596671_u32];
_5 = _1 <= _3;
_26.2 = _22 + _12;
_17.fld1 = RET;
RET = _17.fld1;
_9 = _2;
_26.0 = _17.fld3 as i128;
_9 = RET as u16;
match Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2).1 {
0 => bb5,
1 => bb3,
94415419524592693772211678675100217035 => bb13,
_ => bb12
}
}
bb12 = {
_4 = _3;
_6 = _3;
RET = '\u{10f7d3}';
_1 = _4 != _10;
_11 = _10;
_11 = _1;
_4 = _2 != _2;
_12 = -(-9223372036854775808_isize);
RET = '\u{500d7}';
_10 = _3;
_8 = _11;
_4 = !_10;
_13 = 10_u8 as u64;
_5 = !_4;
_9 = _12 as u16;
_13 = (-25073_i16) as u64;
RET = '\u{ea697}';
RET = '\u{9d732}';
_5 = _8;
_4 = _5;
_17.fld3 = 224554862371714050693624700907970197680_u128 >> _2;
_4 = _11 == _5;
_17.fld1 = RET;
_1 = !_6;
_17.fld2 = _13 as isize;
Goto(bb2)
}
bb13 = {
_28 = !_8;
_1 = _6;
_28 = _11;
_31.1 = 2711604402_u32 as i64;
_24 = _4 >= _6;
_31.2.fld5 = Adt19::Variant3 { fld0: _4,fld1: Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2),fld2: _22,fld3: Field::<f32>(Variant(_17.fld5, 1), 0),fld4: _20,fld5: 1_usize,fld6: _31.1 };
place!(Field::<(u64, i128, char, isize)>(Variant(_31.2.fld5, 3), 1)) = (Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2).0, _26.0, RET, _12);
_31.2.fld5 = Adt19::Variant3 { fld0: _5,fld1: Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2),fld2: _18,fld3: Field::<f32>(Variant(_17.fld5, 1), 0),fld4: _20,fld5: 13683816875651726191_usize,fld6: _31.1 };
_31.2.fld5 = Adt19::Variant1 { fld0: Field::<f32>(Variant(_17.fld5, 1), 0),fld1: _19,fld2: Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2),fld3: _26.0 };
_31.2.fld0 = _17.fld0;
RET = _17.fld1;
place!(Field::<(u64, i128, char, isize)>(Variant(_17.fld5, 1), 2)).2 = _17.fld1;
_9 = _20 as u16;
_32.1 = !_5;
_17 = Adt26 { fld0: _31.2.fld0,fld1: RET,fld2: _12,fld3: 94589848329388209038003367510560034709_u128,fld4: _23,fld5: _31.2.fld5,fld6: _31.1 };
_18 = 31623_i16 as isize;
_31.2 = _17;
Goto(bb14)
}
bb14 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_31.2.fld5, 1), 2)).1 = !_26.0;
_24 = _1;
_34 = !917402090_i32;
place!(Field::<(u64, i128, char, isize)>(Variant(_31.2.fld5, 1), 2)).1 = _20 as i128;
_33.2.0 = Adt19::Variant0 { fld0: (-20468_i16) };
_32.0 = core::ptr::addr_of_mut!(_21);
place!(Field::<f32>(Variant(_31.2.fld5, 1), 0)) = Field::<f32>(Variant(_17.fld5, 1), 0);
_30.0 = [_21,_21,_21,_21,_21];
_20 = _31.2.fld6 as f64;
_37 = Field::<(u64, i128, char, isize)>(Variant(_31.2.fld5, 1), 2).2;
_31.2.fld2 = -_26.2;
place!(Field::<f32>(Variant(_31.2.fld5, 1), 0)) = -Field::<f32>(Variant(_17.fld5, 1), 0);
_31.0 = _9 >> _17.fld3;
_3 = _21 <= _21;
_39 = [(-20985_i16),(-2463_i16),(-31717_i16)];
_6 = !_5;
_31.2.fld2 = -_18;
_31.2.fld0 = [3198955449_u32,3577126596_u32,3624294117_u32,4229284504_u32,1075487561_u32,2074255161_u32,2473288944_u32,2871133260_u32];
_31.2.fld1 = _37;
_30.1 = [190694226_u32,1437948393_u32];
_7 = core::ptr::addr_of_mut!(_33.2);
_33.2 = (_31.2.fld5,);
Goto(bb15)
}
bb15 = {
Call(_40 = dump_var(11_usize, 4_usize, Move(_4), 21_usize, Move(_21), 22_usize, Move(_22), 1_usize, Move(_1)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_40 = dump_var(11_usize, 13_usize, Move(_13), 3_usize, Move(_3), 37_usize, Move(_37), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_40 = dump_var(11_usize, 6_usize, Move(_6), 34_usize, Move(_34), 2_usize, Move(_2), 41_usize, _41), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: bool,mut _2: u16,mut _3: bool,mut _4: *mut (Adt19,),mut _5: isize,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: u128,mut _10: bool) -> bool {
mir! {
type RET = bool;
let _11: *mut (Adt19,);
let _12: (*mut i8, bool, &'static mut &'static u16, *const &'static (u32, (f32, [u32; 8], bool, i128)));
let _13: ();
let _14: ();
{
_2 = 53411_u16;
_1 = !_7;
Call(_7 = fn13(Move(_4), _8, _9, _9, _8, _6, _1, _1, _3, _8, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = !_3;
RET = _1;
RET = _1 | _3;
Goto(bb2)
}
bb2 = {
Call(_13 = dump_var(12_usize, 2_usize, Move(_2), 9_usize, Move(_9), 8_usize, Move(_8), 10_usize, Move(_10)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: *mut (Adt19,),mut _2: bool,mut _3: u128,mut _4: u128,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: bool,mut _10: bool,mut _11: bool) -> bool {
mir! {
type RET = bool;
let _12: [isize; 5];
let _13: *mut f64;
let _14: i128;
let _15: ();
let _16: ();
{
_3 = _4;
_3 = !_4;
_7 = !_11;
_11 = !_6;
Goto(bb1)
}
bb1 = {
_9 = !_6;
RET = !_8;
_2 = _8;
_7 = !_6;
_9 = !_8;
_6 = _2 ^ _9;
RET = _9;
_6 = !_2;
_9 = !_11;
_9 = _2 | _10;
_4 = _3 - _3;
_5 = _3 != _4;
_4 = !_3;
_5 = _8 | _10;
_7 = _4 <= _4;
_9 = !_7;
_7 = _2;
_2 = _9 | _10;
_4 = _3 * _3;
RET = _2;
_6 = _5;
_7 = !_11;
RET = _11;
RET = _5;
_9 = !_11;
_9 = _10 == _7;
_4 = _3;
_14 = 51595225421642240890680410022303888427_i128;
_2 = _6 | _6;
Goto(bb2)
}
bb2 = {
Call(_15 = dump_var(13_usize, 6_usize, Move(_6), 2_usize, Move(_2), 14_usize, Move(_14), 7_usize, Move(_7)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_15 = dump_var(13_usize, 3_usize, Move(_3), 16_usize, _16, 16_usize, _16, 16_usize, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: bool,mut _3: u16,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: f64,mut _9: bool,mut _10: u16,mut _11: u16,mut _12: bool) -> i128 {
mir! {
type RET = i128;
let _13: i16;
let _14: isize;
let _15: Adt26;
let _16: i32;
let _17: u32;
let _18: char;
let _19: f32;
let _20: isize;
let _21: char;
let _22: (u16, i64, Adt26, f32);
let _23: u32;
let _24: (*const &'static (u32, (f32, [u32; 8], bool, i128)), [char; 6]);
let _25: u32;
let _26: [i64; 7];
let _27: (Adt26, (i128, Adt29, isize), u32);
let _28: bool;
let _29: isize;
let _30: ([i64; 7],);
let _31: i16;
let _32: &'static mut &'static u16;
let _33: ();
let _34: ();
{
_12 = _9;
_2 = !_4;
_4 = _12 == _1;
RET = 65237464909865680046332545151376441291_i128 | 29888448471693455087002582073466104927_i128;
_13 = -31359_i16;
_10 = _3;
_7 = _1;
_5 = _4;
_8 = 12163389825338071591_usize as f64;
_7 = _12;
_10 = _13 as u16;
_6 = _9 | _4;
_3 = _11 + _11;
_3 = _11;
Call(_9 = fn15(_1, _7, _7, _6, _6, _4, _2, _12, _3, _5, _6, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_9 = !_6;
_8 = 9032974473507068646_u64 as f64;
_15.fld4 = [4149964677_u32,1818235939_u32,3624957777_u32,1579450613_u32,4291751164_u32,1945132981_u32];
_15.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_10 = !_3;
_9 = _7 <= _4;
_6 = _4 < _5;
_13 = !28830_i16;
_14 = _15.fld2;
_11 = _3 ^ _10;
_15.fld3 = 194584913673377117858631106109679568252_u128 >> _3;
_3 = _15.fld3 as u16;
_11 = _10;
_3 = _4 as u16;
_11 = _3;
_15.fld6 = 105_u8 as i64;
_2 = !_6;
_8 = 55_u8 as f64;
_15.fld1 = '\u{10f74b}';
_15.fld3 = _13 as u128;
_11 = _10;
_13 = !12835_i16;
_14 = -_15.fld2;
_13 = 1537511770_i32 as i16;
_15.fld2 = _15.fld1 as isize;
Goto(bb2)
}
bb2 = {
_15.fld1 = '\u{92e2e}';
_13 = 28051_i16 ^ 14608_i16;
_15.fld0 = [3095475939_u32,361462096_u32,3272682210_u32,2816691219_u32,2040135904_u32,4273820397_u32,143394246_u32,2009409072_u32];
_20 = _14;
_15.fld5 = Adt19::Variant0 { fld0: _13 };
_18 = _15.fld1;
_15.fld3 = 126431824722504660314274112893480281171_u128 | 239475943144084075801053917494649210537_u128;
Goto(bb3)
}
bb3 = {
_9 = !_12;
_8 = 2123593045_i32 as f64;
_15.fld1 = _18;
_17 = _13 as u32;
_15.fld3 = !25253609642859919693762624642471410115_u128;
_10 = _3;
_6 = _2;
_13 = -Field::<i16>(Variant(_15.fld5, 0), 0);
_22.2 = Adt26 { fld0: _15.fld0,fld1: _15.fld1,fld2: _20,fld3: _15.fld3,fld4: _15.fld4,fld5: _15.fld5,fld6: _15.fld6 };
SetDiscriminant(_22.2.fld5, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_22.2.fld5, 3), 1)) = (3731309378065262569_u64, RET, _18, _14);
place!(Field::<f32>(Variant(_22.2.fld5, 3), 3)) = (-457186200_i32) as f32;
place!(Field::<i64>(Variant(_22.2.fld5, 3), 6)) = 4_usize as i64;
_22.0 = _10;
_4 = _12;
_17 = RET as u32;
place!(Field::<bool>(Variant(_22.2.fld5, 3), 0)) = _2;
Goto(bb4)
}
bb4 = {
_21 = _15.fld1;
_15.fld3 = (-98_i8) as u128;
_14 = 237_u8 as isize;
_25 = RET as u32;
_23 = _8 as u32;
_22.1 = Field::<f32>(Variant(_22.2.fld5, 3), 3) as i64;
_22.2.fld6 = Field::<i64>(Variant(_22.2.fld5, 3), 6);
_15.fld4 = _22.2.fld4;
place!(Field::<i16>(Variant(_15.fld5, 0), 0)) = _13 | _13;
_6 = !_4;
_3 = _11 | _11;
_22.2.fld6 = -_22.1;
match Field::<(u64, i128, char, isize)>(Variant(_22.2.fld5, 3), 1).0 {
3731309378065262569 => bb6,
_ => bb5
}
}
bb5 = {
_9 = !_6;
_8 = 9032974473507068646_u64 as f64;
_15.fld4 = [4149964677_u32,1818235939_u32,3624957777_u32,1579450613_u32,4291751164_u32,1945132981_u32];
_15.fld2 = 9223372036854775807_isize - 9223372036854775807_isize;
_10 = !_3;
_9 = _7 <= _4;
_6 = _4 < _5;
_13 = !28830_i16;
_14 = _15.fld2;
_11 = _3 ^ _10;
_15.fld3 = 194584913673377117858631106109679568252_u128 >> _3;
_3 = _15.fld3 as u16;
_11 = _10;
_3 = _4 as u16;
_11 = _3;
_15.fld6 = 105_u8 as i64;
_2 = !_6;
_8 = 55_u8 as f64;
_15.fld1 = '\u{10f74b}';
_15.fld3 = _13 as u128;
_11 = _10;
_13 = !12835_i16;
_14 = -_15.fld2;
_13 = 1537511770_i32 as i16;
_15.fld2 = _15.fld1 as isize;
Goto(bb2)
}
bb6 = {
_15.fld6 = _22.1;
_15.fld5 = Adt19::Variant3 { fld0: _6,fld1: Field::<(u64, i128, char, isize)>(Variant(_22.2.fld5, 3), 1),fld2: _14,fld3: Field::<f32>(Variant(_22.2.fld5, 3), 3),fld4: _8,fld5: 7_usize,fld6: Field::<i64>(Variant(_22.2.fld5, 3), 6) };
place!(Field::<(u64, i128, char, isize)>(Variant(_15.fld5, 3), 1)) = Field::<(u64, i128, char, isize)>(Variant(_22.2.fld5, 3), 1);
_27.1.0 = (-153063394_i32) as i128;
place!(Field::<bool>(Variant(_15.fld5, 3), 0)) = _5 < _1;
place!(Field::<usize>(Variant(_22.2.fld5, 3), 5)) = !15759662701180946807_usize;
place!(Field::<f64>(Variant(_15.fld5, 3), 4)) = _3 as f64;
RET = Field::<(u64, i128, char, isize)>(Variant(_22.2.fld5, 3), 1).1;
_27.0.fld4 = [_25,_17,_17,_17,_17,_17];
RET = _10 as i128;
_27.2 = _25 + _23;
_16 = -(-1468684651_i32);
_30.0 = [_22.2.fld6,Field::<i64>(Variant(_22.2.fld5, 3), 6),Field::<i64>(Variant(_15.fld5, 3), 6),_22.2.fld6,Field::<i64>(Variant(_22.2.fld5, 3), 6),_22.2.fld6,Field::<i64>(Variant(_22.2.fld5, 3), 6)];
_22.0 = !_11;
place!(Field::<bool>(Variant(_15.fld5, 3), 0)) = _11 > _11;
_15.fld6 = -_22.2.fld6;
Goto(bb7)
}
bb7 = {
Call(_33 = dump_var(14_usize, 23_usize, Move(_23), 9_usize, Move(_9), 17_usize, Move(_17), 18_usize, Move(_18)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Call(_33 = dump_var(14_usize, 2_usize, Move(_2), 16_usize, Move(_16), 14_usize, Move(_14), 10_usize, Move(_10)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_33 = dump_var(14_usize, 20_usize, Move(_20), 13_usize, Move(_13), 34_usize, _34, 34_usize, _34), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool,mut _9: u16,mut _10: bool,mut _11: bool,mut _12: bool) -> bool {
mir! {
type RET = bool;
let _13: char;
let _14: i128;
let _15: (u16, i64, Adt26, f32);
let _16: [char; 6];
let _17: [u64; 5];
let _18: u16;
let _19: *const char;
let _20: ();
let _21: ();
{
_12 = _4 & _2;
_1 = !_10;
_5 = _2;
_5 = _2;
_13 = '\u{a42}';
_6 = _10 >= _11;
RET = !_12;
RET = _3 < _5;
_15.2.fld4 = [4280761153_u32,2285573307_u32,333622512_u32,4002316271_u32,3190156176_u32,3602548708_u32];
_15.3 = 88_i8 as f32;
_15.2.fld0 = [3567769429_u32,151729629_u32,3207548197_u32,3173050073_u32,2647103182_u32,4151074175_u32,4233494092_u32,1901039180_u32];
_15.2.fld3 = _9 as u128;
_9 = 50398_u16 >> _15.2.fld3;
_15.1 = 359121996729616978_i64 << _15.2.fld3;
_15.0 = _9 | _9;
_15.2.fld2 = -55_isize;
_15.2.fld5 = Adt19::Variant0 { fld0: 2545_i16 };
_17 = [5787936672871369067_u64,14327140083311849155_u64,17174552563488808191_u64,10659252375618747095_u64,1019202477293587688_u64];
_8 = _1 <= _4;
_15.0 = _13 as u16;
Goto(bb1)
}
bb1 = {
Call(_20 = dump_var(15_usize, 5_usize, Move(_5), 10_usize, Move(_10), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_20 = dump_var(15_usize, 9_usize, Move(_9), 2_usize, Move(_2), 11_usize, Move(_11), 21_usize, _21), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: bool,mut _2: bool,mut _3: Adt19,mut _4: Adt19,mut _5: Adt19) -> isize {
mir! {
type RET = isize;
let _6: *mut &'static mut (u16, i64, Adt26, f32);
let _7: isize;
let _8: f64;
let _9: i32;
let _10: i128;
let _11: isize;
let _12: bool;
let _13: (Adt26, (i128, Adt29, isize), u32);
let _14: (i128, Adt29, isize);
let _15: ();
let _16: ();
{
place!(Field::<f32>(Variant(_5, 1), 0)) = -Field::<f32>(Variant(_4, 1), 0);
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2)).1 = !Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).1;
place!(Field::<f32>(Variant(_4, 1), 0)) = Field::<f32>(Variant(_5, 1), 0);
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2)) = Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2);
place!(Field::<f32>(Variant(_5, 1), 0)) = -Field::<f32>(Variant(_4, 1), 0);
_1 = !_2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).1 = _1 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0, Field::<i128>(Variant(_5, 1), 3), Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2, Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).3);
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).0, Field::<i128>(Variant(_5, 1), 3), Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).2, Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).3);
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).0 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0 >> Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).1;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0, Field::<i128>(Variant(_4, 1), 3), Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2, Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).3);
place!(Field::<i16>(Variant(_3, 0), 0)) = !(-22589_i16);
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).1 = -Field::<i128>(Variant(_4, 1), 3);
Goto(bb1)
}
bb1 = {
place!(Field::<i128>(Variant(_5, 1), 3)) = 117392776031814507978888055319012691983_u128 as i128;
RET = Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).3 - Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).3;
place!(Field::<i128>(Variant(_4, 1), 3)) = -Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).1;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0, Field::<i128>(Variant(_4, 1), 3), Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2, RET);
_1 = _2;
_7 = Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).3;
_3 = _5;
_1 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0, Field::<(u64, i128, char, isize)>(Variant(_3, 1), 2).1, Field::<(u64, i128, char, isize)>(Variant(_3, 1), 2).2, RET);
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).2;
SetDiscriminant(_3, 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2)).3 = Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).3 << Field::<u8>(Variant(_5, 1), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).0 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0;
place!(Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2)).3 = _7;
_8 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).0 as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2)).3 = -Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).3;
_12 = Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).3 == RET;
_11 = !Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).3;
place!(Field::<(u64, i128, char, isize)>(Variant(_3, 1), 2)) = (Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).0, Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2).1, Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).2, RET);
_3 = Adt19::Variant1 { fld0: Field::<f32>(Variant(_5, 1), 0),fld1: Field::<u8>(Variant(_4, 1), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_5, 1), 2),fld3: Field::<(u64, i128, char, isize)>(Variant(_4, 1), 2).1 };
Goto(bb2)
}
bb2 = {
Call(_15 = dump_var(16_usize, 11_usize, Move(_11), 7_usize, Move(_7), 16_usize, _16, 16_usize, _16), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: (Adt19,),mut _2: Adt19,mut _3: *mut (Adt19,),mut _4: (Adt19,)) -> i32 {
mir! {
type RET = i32;
let _5: isize;
let _6: [i16; 3];
let _7: &'static mut &'static u16;
let _8: ((Adt19,),);
let _9: u32;
let _10: *const *const &'static mut i128;
let _11: [u32; 6];
let _12: char;
let _13: [char; 6];
let _14: (&'static mut &'static u16, *const &'static mut i128);
let _15: *mut f64;
let _16: &'static (u32, (f32, [u32; 8], bool, i128));
let _17: *const [isize; 5];
let _18: f32;
let _19: [char; 6];
let _20: u64;
let _21: *const *const &'static mut i128;
let _22: Adt47;
let _23: *const *mut [i128; 2];
let _24: i8;
let _25: f64;
let _26: *const &'static mut i128;
let _27: (f32, [u32; 8], bool, i128);
let _28: i128;
let _29: *const char;
let _30: i8;
let _31: *mut i8;
let _32: [usize; 8];
let _33: [u32; 8];
let _34: [u64; 5];
let _35: [isize; 5];
let _36: i64;
let _37: *mut [i128; 2];
let _38: char;
let _39: *const *mut [i128; 2];
let _40: i64;
let _41: u8;
let _42: isize;
let _43: ();
let _44: ();
{
place!(Field::<f64>(Variant(_2, 2), 2)) = Field::<u32>(Variant(_2, 2), 0) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
place!(Field::<u8>(Variant(_2, 2), 1)) = !Field::<u8>(Variant(_1.0, 2), 1);
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u8>(Variant(_1.0, 2), 1) * Field::<u8>(Variant(_4.0, 2), 1);
SetDiscriminant(_1.0, 1);
Goto(bb1)
}
bb1 = {
place!(Field::<u8>(Variant(_4.0, 2), 1)) = Field::<u8>(Variant(_2, 2), 1) - Field::<u8>(Variant(_2, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = Field::<u16>(Variant(_4.0, 2), 3) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = Field::<u8>(Variant(_4.0, 2), 1) as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).3);
SetDiscriminant(_2, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0;
place!(Field::<bool>(Variant(_2, 3), 0)) = !true;
place!(Field::<usize>(Variant(_2, 3), 5)) = 16901827553471103081_usize >> Field::<u8>(Variant(_4.0, 2), 1);
place!(Field::<i128>(Variant(_1.0, 1), 3)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1 | Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1;
_2 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_4.0, 2), 0),fld1: Field::<u8>(Variant(_4.0, 2), 1),fld2: Field::<f64>(Variant(_4.0, 2), 2),fld3: Field::<u16>(Variant(_4.0, 2), 3),fld4: Field::<[u32; 8]>(Variant(_4.0, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5) };
place!(Field::<u8>(Variant(_1.0, 1), 1)) = (-5495732174446803108_i64) as u8;
place!(Field::<f64>(Variant(_2, 2), 2)) = -Field::<f64>(Variant(_4.0, 2), 2);
place!(Field::<u16>(Variant(_4.0, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
_1.0 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).1 = 126_i8 as i128;
_1.0 = _4.0;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5);
_1.0 = _2;
_6 = [32084_i16,24425_i16,(-27732_i16)];
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2;
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u8>(Variant(_1.0, 2), 1) & Field::<u8>(Variant(_1.0, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
Goto(bb2)
}
bb2 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
place!(Field::<[u32; 8]>(Variant(_4.0, 2), 4)) = [Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_4.0, 2), 0),Field::<u32>(Variant(_2, 2), 0)];
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3 & Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3;
RET = (-845699545_i32);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).3 | Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).3;
_2 = _1.0;
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).3 = (-13_i8) as isize;
_1 = (_4.0,);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).1 = 11081853187125816436_usize as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
_1 = (_4.0,);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).3 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).3;
place!(Field::<u32>(Variant(_2, 2), 0)) = !Field::<u32>(Variant(_4.0, 2), 0);
place!(Field::<[u32; 8]>(Variant(_4.0, 2), 4)) = [Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_4.0, 2), 0),Field::<u32>(Variant(_4.0, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_1.0, 2), 0),Field::<u32>(Variant(_2, 2), 0),Field::<u32>(Variant(_4.0, 2), 0),Field::<u32>(Variant(_1.0, 2), 0)];
place!(Field::<f64>(Variant(_1.0, 2), 2)) = Field::<f64>(Variant(_2, 2), 2);
place!(Field::<f64>(Variant(_2, 2), 2)) = Field::<f64>(Variant(_4.0, 2), 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).1 = 196846233023074209111804159009064667910_u128 as i128;
RET = 552730132_i32;
_8.0.0 = _4.0;
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).0 = 175068110322807407588175437047271059965_u128 as u64;
_1.0 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_4.0, 2), 0),fld1: Field::<u8>(Variant(_8.0.0, 2), 1),fld2: Field::<f64>(Variant(_2, 2), 2),fld3: Field::<u16>(Variant(_2, 2), 3),fld4: Field::<[u32; 8]>(Variant(_8.0.0, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5) };
SetDiscriminant(_4.0, 0);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).3);
_8 = (_1,);
match RET {
552730132 => bb4,
_ => bb3
}
}
bb3 = {
place!(Field::<u8>(Variant(_4.0, 2), 1)) = Field::<u8>(Variant(_2, 2), 1) - Field::<u8>(Variant(_2, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = Field::<u16>(Variant(_4.0, 2), 3) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = Field::<u8>(Variant(_4.0, 2), 1) as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).3);
SetDiscriminant(_2, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0;
place!(Field::<bool>(Variant(_2, 3), 0)) = !true;
place!(Field::<usize>(Variant(_2, 3), 5)) = 16901827553471103081_usize >> Field::<u8>(Variant(_4.0, 2), 1);
place!(Field::<i128>(Variant(_1.0, 1), 3)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1 | Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1;
_2 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_4.0, 2), 0),fld1: Field::<u8>(Variant(_4.0, 2), 1),fld2: Field::<f64>(Variant(_4.0, 2), 2),fld3: Field::<u16>(Variant(_4.0, 2), 3),fld4: Field::<[u32; 8]>(Variant(_4.0, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5) };
place!(Field::<u8>(Variant(_1.0, 1), 1)) = (-5495732174446803108_i64) as u8;
place!(Field::<f64>(Variant(_2, 2), 2)) = -Field::<f64>(Variant(_4.0, 2), 2);
place!(Field::<u16>(Variant(_4.0, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
_1.0 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).1 = 126_i8 as i128;
_1.0 = _4.0;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5);
_1.0 = _2;
_6 = [32084_i16,24425_i16,(-27732_i16)];
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2;
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u8>(Variant(_1.0, 2), 1) & Field::<u8>(Variant(_1.0, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
Goto(bb2)
}
bb4 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).3);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = !Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).3;
_13 = [Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2,Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5).2];
place!(Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5)).0 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).0;
SetDiscriminant(_1.0, 0);
SetDiscriminant(_2, 3);
place!(Field::<usize>(Variant(_2, 3), 5)) = (-1248052051677757135_i64) as usize;
place!(Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5)).2 = '\u{32aec}';
place!(Field::<u16>(Variant(_8.0.0, 2), 3)) = 116124855101671260458508937332924333141_u128 as u16;
place!(Field::<f64>(Variant(_8.0.0, 2), 2)) = Field::<usize>(Variant(_2, 3), 5) as f64;
place!(Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5)).1 = (-146731142024491108846623954010078089299_i128);
_11 = [Field::<u32>(Variant(_8.0.0, 2), 0),Field::<u32>(Variant(_8.0.0, 2), 0),Field::<u32>(Variant(_8.0.0, 2), 0),Field::<u32>(Variant(_8.0.0, 2), 0),Field::<u32>(Variant(_8.0.0, 2), 0),Field::<u32>(Variant(_8.0.0, 2), 0)];
_2 = _8.0.0;
_2 = Adt19::Variant0 { fld0: (-16544_i16) };
_5 = 2_usize as isize;
RET = (-1132255062_i32) ^ 1086649888_i32;
SetDiscriminant(_8.0.0, 1);
place!(Field::<i128>(Variant(_8.0.0, 1), 3)) = (-109497077288203299146694530687796059968_i128) + 22311731819595617164414491413129852095_i128;
Goto(bb5)
}
bb5 = {
_12 = '\u{8845a}';
_2 = Adt19::Variant0 { fld0: 4399_i16 };
_1.0 = Adt19::Variant0 { fld0: (-26369_i16) };
_10 = core::ptr::addr_of!(_14.1);
place!(Field::<i16>(Variant(_2, 0), 0)) = !11780_i16;
_8.0.0 = _2;
_1 = (_8.0.0,);
_4.0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
_1 = (_4.0,);
_1 = (_8.0.0,);
_13 = [_12,_12,_12,_12,_12,_12];
_8.0 = (_1.0,);
_1 = (_8.0.0,);
_3 = core::ptr::addr_of_mut!(_4);
_11 = [1347992244_u32,3310019170_u32,440227673_u32,1143972658_u32,2239103827_u32,3392014758_u32];
_1 = ((*_3).0,);
_4.0 = _2;
_4 = (_8.0.0,);
_8.0 = (_4.0,);
RET = (-533997118_i32) >> Field::<i16>(Variant(_1.0, 0), 0);
_10 = core::ptr::addr_of!(_14.1);
SetDiscriminant(_1.0, 1);
_18 = 6171646288862155715_u64 as f32;
_10 = core::ptr::addr_of!(_14.1);
Goto(bb6)
}
bb6 = {
place!(Field::<i16>(Variant(_8.0.0, 0), 0)) = Field::<i16>(Variant((*_3).0, 0), 0);
SetDiscriminant(_4.0, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 3), 1)).3 = _5 << Field::<i16>(Variant(_2, 0), 0);
_4 = (_2,);
_13 = [_12,_12,_12,_12,_12,_12];
_3 = core::ptr::addr_of_mut!(_4);
_10 = core::ptr::addr_of!((*_10));
SetDiscriminant((*_3).0, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)) = (18318957059438660709_u64, 127396607462249540390790143194628792720_i128, _12, _5);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 1), 2)).1 = 2827602133483002822_i64 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).3 = 135216263622436499333845986044172225190_u128 as isize;
(*_3).0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
Goto(bb7)
}
bb7 = {
RET = -(-2094624129_i32);
_1.0 = (*_3).0;
_15 = core::ptr::addr_of_mut!(_25);
place!(Field::<i16>(Variant((*_3).0, 0), 0)) = -Field::<i16>(Variant(_8.0.0, 0), 0);
_25 = 69_u8 as f64;
_4 = _8.0;
(*_15) = 2413537047767682378_u64 as f64;
(*_3) = (_8.0.0,);
_2 = Adt19::Variant0 { fld0: Field::<i16>(Variant((*_3).0, 0), 0) };
place!(Field::<i16>(Variant(_4.0, 0), 0)) = -Field::<i16>(Variant(_2, 0), 0);
_27.1 = [1993994613_u32,250326568_u32,3564389304_u32,3262457512_u32,2976974801_u32,1445821233_u32,2217603873_u32,810511563_u32];
place!(Field::<i16>(Variant(_8.0.0, 0), 0)) = -Field::<i16>(Variant(_1.0, 0), 0);
_10 = core::ptr::addr_of!((*_10));
_8.0.0 = (*_3).0;
_27.0 = RET as f32;
_27.3 = 48396831794104949708911376320071741205_i128 << _5;
_27.2 = false;
SetDiscriminant(_8.0.0, 0);
_4.0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
_25 = Field::<i16>(Variant((*_3).0, 0), 0) as f64;
_27.2 = true;
_28 = _27.3;
_15 = core::ptr::addr_of_mut!((*_15));
_3 = core::ptr::addr_of_mut!((*_3));
(*_3).0 = _1.0;
(*_3) = (_2,);
Goto(bb8)
}
bb8 = {
_2 = (*_3).0;
(*_3) = (_1.0,);
_1.0 = _4.0;
place!(Field::<i16>(Variant(_4.0, 0), 0)) = -Field::<i16>(Variant(_1.0, 0), 0);
_30 = _25 as i8;
_8 = ((*_3),);
_1 = _8.0;
place!(Field::<i16>(Variant((*_3).0, 0), 0)) = !Field::<i16>(Variant(_1.0, 0), 0);
(*_3) = (_8.0.0,);
SetDiscriminant((*_3).0, 1);
(*_15) = 61_u8 as f64;
place!(Field::<u8>(Variant((*_3).0, 1), 1)) = _30 as u8;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2)) = (15258754280479307617_u64, _27.3, _12, _5);
match Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).0 {
0 => bb6,
1 => bb2,
15258754280479307617 => bb9,
_ => bb3
}
}
bb9 = {
place!(Field::<i128>(Variant((*_3).0, 1), 3)) = _27.3;
_30 = -76_i8;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2)).3 = _5 - _5;
_8.0.0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
RET = 7692528628355971409_i64 as i32;
place!(Field::<u8>(Variant((*_3).0, 1), 1)) = 124_u8;
_8.0.0 = Adt19::Variant2 { fld0: 3182833625_u32,fld1: Field::<u8>(Variant((*_3).0, 1), 1),fld2: _25,fld3: 61581_u16,fld4: _27.1,fld5: Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2) };
_8.0.0 = Adt19::Variant1 { fld0: _27.0,fld1: Field::<u8>(Variant(_4.0, 1), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2),fld3: Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2).1 };
_35 = [_5,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3];
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 1), 2).0;
SetDiscriminant(_2, 1);
_1.0 = Adt19::Variant0 { fld0: 31778_i16 };
Goto(bb10)
}
bb10 = {
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2)).2 = Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 1), 2).2;
SetDiscriminant(_8.0.0, 0);
place!(Field::<i16>(Variant(_8.0.0, 0), 0)) = 310748891459368261125141558371685354608_u128 as i16;
(*_3).0 = _8.0.0;
_34 = [7033493450008143130_u64,1752049060073559988_u64,481263197420114986_u64,8200143800607213994_u64,15141094743619609101_u64];
_13 = [_12,_12,_12,_12,_12,_12];
Goto(bb11)
}
bb11 = {
place!(Field::<i16>(Variant(_4.0, 0), 0)) = Field::<i16>(Variant(_8.0.0, 0), 0);
_13 = [_12,_12,_12,_12,_12,_12];
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 1), 2)).1 = _27.3 * _28;
SetDiscriminant(_8.0.0, 2);
place!(Field::<i16>(Variant((*_3).0, 0), 0)) = !31460_i16;
place!(Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 2), 5)).1 = _27.3 - _28;
_3 = core::ptr::addr_of_mut!(_8.0);
_1 = (_4.0,);
_38 = _12;
place!(Field::<u8>(Variant((*_3).0, 2), 1)) = 149_u8 - 220_u8;
Goto(bb12)
}
bb12 = {
_8.0.0 = _1.0;
_1.0 = _8.0.0;
_11 = [1208462023_u32,3894581621_u32,2133286798_u32,3511003170_u32,1114856904_u32,1364878554_u32];
_6 = [Field::<i16>(Variant(_1.0, 0), 0),Field::<i16>(Variant((*_3).0, 0), 0),Field::<i16>(Variant(_8.0.0, 0), 0)];
RET = 709837512_i32;
place!(Field::<i16>(Variant(_1.0, 0), 0)) = Field::<i16>(Variant(_4.0, 0), 0) << _27.3;
_1 = ((*_3).0,);
_5 = !9223372036854775807_isize;
_15 = core::ptr::addr_of_mut!(_25);
_5 = 9223372036854775807_isize - (-9223372036854775808_isize);
_2 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_1.0, 0), 0) };
match RET {
0 => bb13,
1 => bb14,
709837512 => bb16,
_ => bb15
}
}
bb13 = {
place!(Field::<i16>(Variant(_8.0.0, 0), 0)) = Field::<i16>(Variant((*_3).0, 0), 0);
SetDiscriminant(_4.0, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 3), 1)).3 = _5 << Field::<i16>(Variant(_2, 0), 0);
_4 = (_2,);
_13 = [_12,_12,_12,_12,_12,_12];
_3 = core::ptr::addr_of_mut!(_4);
_10 = core::ptr::addr_of!((*_10));
SetDiscriminant((*_3).0, 2);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)) = (18318957059438660709_u64, 127396607462249540390790143194628792720_i128, _12, _5);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 1), 2)).1 = 2827602133483002822_i64 as i128;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).3 = 135216263622436499333845986044172225190_u128 as isize;
(*_3).0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
Goto(bb7)
}
bb14 = {
place!(Field::<u8>(Variant(_4.0, 2), 1)) = Field::<u8>(Variant(_2, 2), 1) - Field::<u8>(Variant(_2, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).0 = Field::<u16>(Variant(_4.0, 2), 3) as u64;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)).3 = Field::<u8>(Variant(_4.0, 2), 1) as isize;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = (Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2, Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).3);
SetDiscriminant(_2, 3);
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).0;
place!(Field::<bool>(Variant(_2, 3), 0)) = !true;
place!(Field::<usize>(Variant(_2, 3), 5)) = 16901827553471103081_usize >> Field::<u8>(Variant(_4.0, 2), 1);
place!(Field::<i128>(Variant(_1.0, 1), 3)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1 | Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).1;
_2 = Adt19::Variant2 { fld0: Field::<u32>(Variant(_4.0, 2), 0),fld1: Field::<u8>(Variant(_4.0, 2), 1),fld2: Field::<f64>(Variant(_4.0, 2), 2),fld3: Field::<u16>(Variant(_4.0, 2), 3),fld4: Field::<[u32; 8]>(Variant(_4.0, 2), 4),fld5: Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5) };
place!(Field::<u8>(Variant(_1.0, 1), 1)) = (-5495732174446803108_i64) as u8;
place!(Field::<f64>(Variant(_2, 2), 2)) = -Field::<f64>(Variant(_4.0, 2), 2);
place!(Field::<u16>(Variant(_4.0, 2), 3)) = !Field::<u16>(Variant(_2, 2), 3);
_1.0 = _2;
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).1 = 126_i8 as i128;
_1.0 = _4.0;
place!(Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5)) = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5);
_1.0 = _2;
_6 = [32084_i16,24425_i16,(-27732_i16)];
place!(Field::<(u64, i128, char, isize)>(Variant(_1.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5).2;
place!(Field::<u8>(Variant(_2, 2), 1)) = Field::<u8>(Variant(_1.0, 2), 1) & Field::<u8>(Variant(_1.0, 2), 1);
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 2), 5)).2 = Field::<(u64, i128, char, isize)>(Variant(_2, 2), 5).2;
Goto(bb2)
}
bb15 = {
place!(Field::<i128>(Variant((*_3).0, 1), 3)) = _27.3;
_30 = -76_i8;
place!(Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2)).3 = _5 - _5;
_8.0.0 = Adt19::Variant0 { fld0: Field::<i16>(Variant(_2, 0), 0) };
RET = 7692528628355971409_i64 as i32;
place!(Field::<u8>(Variant((*_3).0, 1), 1)) = 124_u8;
_8.0.0 = Adt19::Variant2 { fld0: 3182833625_u32,fld1: Field::<u8>(Variant((*_3).0, 1), 1),fld2: _25,fld3: 61581_u16,fld4: _27.1,fld5: Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2) };
_8.0.0 = Adt19::Variant1 { fld0: _27.0,fld1: Field::<u8>(Variant(_4.0, 1), 1),fld2: Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2),fld3: Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2).1 };
_35 = [_5,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3,Field::<(u64, i128, char, isize)>(Variant((*_3).0, 1), 2).3];
place!(Field::<(u64, i128, char, isize)>(Variant(_4.0, 1), 2)).0 = !Field::<(u64, i128, char, isize)>(Variant(_8.0.0, 1), 2).0;
SetDiscriminant(_2, 1);
_1.0 = Adt19::Variant0 { fld0: 31778_i16 };
Goto(bb10)
}
bb16 = {
SetDiscriminant(_1.0, 1);
_25 = 4506981972319077226_i64 as f64;
Goto(bb17)
}
bb17 = {
Call(_43 = dump_var(17_usize, 11_usize, Move(_11), 35_usize, Move(_35), 5_usize, Move(_5), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_43 = dump_var(17_usize, 30_usize, Move(_30), 44_usize, _44, 44_usize, _44, 44_usize, _44), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: (i128, Adt29, isize)) -> u32 {
mir! {
type RET = u32;
let _2: f32;
let _3: u16;
let _4: (Adt26, (i128, Adt29, isize), u32);
let _5: u8;
let _6: [i64; 7];
let _7: u64;
let _8: Adt32;
let _9: [u32; 2];
let _10: *const [i64; 7];
let _11: [i8; 5];
let _12: &'static u32;
let _13: *const *const &'static (u32, (f32, [u32; 8], bool, i128));
let _14: f64;
let _15: &'static (u32, (f32, [u32; 8], bool, i128));
let _16: f32;
let _17: *mut (Adt19,);
let _18: u64;
let _19: usize;
let _20: ([isize; 5], *const &'static mut &'static u16, [u32; 8], u8);
let _21: bool;
let _22: u64;
let _23: Adt32;
let _24: (u64, i128, char, isize);
let _25: &'static char;
let _26: i32;
let _27: Adt54;
let _28: Adt32;
let _29: *const [isize; 5];
let _30: isize;
let _31: *mut i8;
let _32: isize;
let _33: isize;
let _34: [u32; 2];
let _35: f64;
let _36: f64;
let _37: char;
let _38: ();
let _39: ();
{
RET = 2184197480_u32;
place!(Field::<u8>(Variant(_1.1, 2), 1)) = 150_u8 | 91_u8;
place!(Field::<bool>(Variant(_1.1, 2), 0)) = Field::<f32>(Variant(_1.1, 2), 6) > Field::<f32>(Variant(_1.1, 2), 6);
place!(Field::<u8>(Variant(_1.1, 2), 1)) = 157_u8 | 76_u8;
RET = !673812617_u32;
RET = !778146228_u32;
place!(Field::<[u32; 8]>(Variant(_1.1, 2), 5)) = [RET,RET,RET,RET,RET,RET,RET,RET];
_1.0 = 139370222268265299025390809276470831018_i128 | (-163670662784112018717167745970598874538_i128);
place!(Field::<f32>(Variant(_1.1, 2), 6)) = 27180_i16 as f32;
RET = 228256617_u32 ^ 257083227_u32;
SetDiscriminant(_1.1, 2);
Goto(bb1)
}
bb1 = {
place!(Field::<bool>(Variant(_1.1, 2), 0)) = false;
_1.2 = 9223372036854775807_isize;
place!(Field::<f32>(Variant(_1.1, 2), 6)) = 55039_u16 as f32;
match _1.2 {
0 => bb2,
9223372036854775807 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
RET = 59_u8 as u32;
place!(Field::<usize>(Variant(_1.1, 2), 4)) = (-2254349479394672305_i64) as usize;
place!(Field::<usize>(Variant(_1.1, 2), 4)) = 5_usize;
_4.0.fld1 = '\u{64665}';
RET = _1.2 as u32;
_4.0.fld0 = [RET,RET,RET,RET,RET,RET,RET,RET];
_4.0.fld1 = '\u{3a87a}';
_4.0.fld5 = Adt19::Variant0 { fld0: 26439_i16 };
place!(Field::<u8>(Variant(_1.1, 2), 1)) = Field::<usize>(Variant(_1.1, 2), 4) as u8;
_4.0.fld4 = [RET,RET,RET,RET,RET,RET];
place!(Field::<f32>(Variant(_1.1, 2), 6)) = 6568994080401170708_u64 as f32;
_3 = 6777_u16 - 15796_u16;
place!(Field::<isize>(Variant(_1.1, 2), 2)) = !_1.2;
place!(Field::<i8>(Variant(_1.1, 2), 3)) = RET as i8;
Call(place!(Field::<[u32; 8]>(Variant(_1.1, 2), 5)) = core::intrinsics::transmute(_4.0.fld0), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
place!(Field::<i8>(Variant(_1.1, 2), 3)) = (-115_i8);
place!(Field::<f32>(Variant(_1.1, 2), 6)) = 20607_i16 as f32;
match Field::<i8>(Variant(_1.1, 2), 3) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463463374607431768211341 => bb7,
_ => bb6
}
}
bb6 = {
Return()
}
bb7 = {
_4.2 = RET - RET;
_4.0.fld6 = -1241899350090164517_i64;
place!(Field::<isize>(Variant(_1.1, 2), 2)) = _1.2 + _1.2;
_4.1.0 = _1.0;
place!(Field::<isize>(Variant(_1.1, 2), 2)) = 50383403497381711798722054444930810769_u128 as isize;
_2 = Field::<f32>(Variant(_1.1, 2), 6) * Field::<f32>(Variant(_1.1, 2), 6);
_4.1.0 = _1.0 & _1.0;
_4.2 = !RET;
place!(Field::<u16>(Variant(_1.1, 2), 7)) = !_3;
place!(Field::<i8>(Variant(_1.1, 2), 3)) = 87_i8 ^ 48_i8;
_12 = &_4.2;
_6 = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
_4.1.1 = Move(_1.1);
_10 = core::ptr::addr_of!(_6);
_11 = [Field::<i8>(Variant(_4.1.1, 2), 3),Field::<i8>(Variant(_4.1.1, 2), 3),Field::<i8>(Variant(_4.1.1, 2), 3),Field::<i8>(Variant(_4.1.1, 2), 3),Field::<i8>(Variant(_4.1.1, 2), 3)];
_2 = Field::<i8>(Variant(_4.1.1, 2), 3) as f32;
_4.0.fld6 = (-1388631687473596614_i64) >> Field::<u16>(Variant(_4.1.1, 2), 7);
_1.1 = Adt29::Variant2 { fld0: Field::<bool>(Variant(_4.1.1, 2), 0),fld1: Field::<u8>(Variant(_4.1.1, 2), 1),fld2: _1.2,fld3: Field::<i8>(Variant(_4.1.1, 2), 3),fld4: Field::<usize>(Variant(_4.1.1, 2), 4),fld5: Field::<[u32; 8]>(Variant(_4.1.1, 2), 5),fld6: Field::<f32>(Variant(_4.1.1, 2), 6),fld7: _3 };
SetDiscriminant(_4.1.1, 0);
place!(Field::<u16>(Variant(_1.1, 2), 7)) = !_3;
Goto(bb8)
}
bb8 = {
place!(Field::<(u32, (f32, [u32; 8], bool, i128))>(Variant(_4.1.1, 0), 2)).0 = RET;
_12 = &RET;
_4.1 = (_1.0, Move(_1.1), _1.2);
place!(Field::<u8>(Variant(_4.1.1, 2), 1)) = 40_u8;
place!(Field::<isize>(Variant(_4.1.1, 2), 2)) = _3 as isize;
_1.2 = _4.1.2 * Field::<isize>(Variant(_4.1.1, 2), 2);
_4.0.fld3 = 180628944366372573616114258370384497341_u128 * 195694299748118420489703419072394642379_u128;
_14 = 5864716273273727840_u64 as f64;
_7 = _3 as u64;
(*_10) = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
_18 = !_7;
Goto(bb9)
}
bb9 = {
place!(Field::<u8>(Variant(_4.1.1, 2), 1)) = _4.1.0 as u8;
_16 = _2;
_4.0.fld2 = _4.1.2;
_4.0.fld0 = [(*_12),_4.2,RET,(*_12),(*_12),_4.2,RET,(*_12)];
place!(Field::<isize>(Variant(_4.1.1, 2), 2)) = _1.2 * _1.2;
_4.0.fld5 = Adt19::Variant0 { fld0: 5911_i16 };
_18 = _7;
place!(Field::<u8>(Variant(_4.1.1, 2), 1)) = 11_u8 & 119_u8;
place!(Field::<usize>(Variant(_4.1.1, 2), 4)) = Field::<i8>(Variant(_4.1.1, 2), 3) as usize;
_7 = _18;
_20.3 = !Field::<u8>(Variant(_4.1.1, 2), 1);
_4.0.fld1 = '\u{d1102}';
_4.0.fld3 = 201340508672929079541275280433668469984_u128;
_19 = Field::<usize>(Variant(_4.1.1, 2), 4);
(*_10) = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
Call(place!(Field::<isize>(Variant(_4.1.1, 2), 2)) = fn19(Field::<bool>(Variant(_4.1.1, 2), 0), _1.2, _1.2, _2, Move(_12), _4.1.2, _11), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_4.1.1 = Adt29::Variant2 { fld0: false,fld1: _20.3,fld2: _1.2,fld3: 63_i8,fld4: _19,fld5: _4.0.fld0,fld6: _2,fld7: _3 };
_4.0.fld2 = _1.2 & _1.2;
place!(Field::<[u32; 8]>(Variant(_4.1.1, 2), 5)) = [_4.2,_4.2,_4.2,RET,RET,_4.2,RET,_4.2];
place!(Field::<i8>(Variant(_4.1.1, 2), 3)) = !59_i8;
_22 = !_7;
_25 = &_4.0.fld1;
_4.1.0 = _1.0;
place!(Field::<i8>(Variant(_4.1.1, 2), 3)) = -(-28_i8);
_10 = core::ptr::addr_of!((*_10));
_20.3 = !Field::<u8>(Variant(_4.1.1, 2), 1);
_22 = _14 as u64;
_21 = !true;
_9 = [RET,RET];
place!(Field::<usize>(Variant(_4.1.1, 2), 4)) = !_19;
_24.1 = _4.1.0;
match _4.1.2 {
9223372036854775807 => bb11,
_ => bb8
}
}
bb11 = {
_20.2 = [RET,RET,RET,RET,_4.2,RET,_4.2,RET];
_24.1 = -_4.1.0;
_21 = !true;
_20.0 = [Field::<isize>(Variant(_4.1.1, 2), 2),Field::<isize>(Variant(_4.1.1, 2), 2),Field::<isize>(Variant(_4.1.1, 2), 2),_4.0.fld2,Field::<isize>(Variant(_4.1.1, 2), 2)];
_6 = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
_24.2 = (*_25);
_24.3 = _14 as isize;
place!(Field::<bool>(Variant(_4.1.1, 2), 0)) = _21 ^ _21;
_22 = _18;
_10 = core::ptr::addr_of!((*_10));
_1.0 = _4.0.fld3 as i128;
_26 = (-1771898504_i32);
_19 = Field::<usize>(Variant(_4.1.1, 2), 4);
_14 = Field::<i8>(Variant(_4.1.1, 2), 3) as f64;
_12 = &_4.2;
_4.0.fld3 = 311618192197213311600809176768883353198_u128 - 70280902575825753321577919794885531377_u128;
_24.3 = Field::<isize>(Variant(_4.1.1, 2), 2) << _1.2;
_24.2 = (*_25);
_31 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_4.1.1, 2), 3)));
Goto(bb12)
}
bb12 = {
_1.1 = Adt29::Variant2 { fld0: _21,fld1: _20.3,fld2: _24.3,fld3: (*_31),fld4: _19,fld5: Field::<[u32; 8]>(Variant(_4.1.1, 2), 5),fld6: Field::<f32>(Variant(_4.1.1, 2), 6),fld7: _3 };
_4.1.0 = _1.0;
_24.2 = (*_25);
_18 = _19 as u64;
_3 = _18 as u16;
_19 = !Field::<usize>(Variant(_1.1, 2), 4);
place!(Field::<u16>(Variant(_4.1.1, 2), 7)) = !Field::<u16>(Variant(_1.1, 2), 7);
_18 = !_22;
_24.2 = (*_25);
place!(Field::<i16>(Variant(_4.0.fld5, 0), 0)) = 6115_i16;
place!(Field::<usize>(Variant(_4.1.1, 2), 4)) = !Field::<usize>(Variant(_1.1, 2), 4);
_7 = _22;
_4.0.fld6 = 3212956671676801860_i64;
_29 = core::ptr::addr_of!(_20.0);
_5 = Field::<u8>(Variant(_1.1, 2), 1) << Field::<isize>(Variant(_1.1, 2), 2);
_30 = _4.0.fld6 as isize;
_4.0.fld6 = (-8651553339055976772_i64) - (-5907060789804896438_i64);
(*_31) = Field::<i8>(Variant(_1.1, 2), 3) * Field::<i8>(Variant(_1.1, 2), 3);
match Field::<i16>(Variant(_4.0.fld5, 0), 0) {
0 => bb9,
1 => bb7,
2 => bb8,
3 => bb4,
4 => bb13,
5 => bb14,
6115 => bb16,
_ => bb15
}
}
bb13 = {
_20.2 = [RET,RET,RET,RET,_4.2,RET,_4.2,RET];
_24.1 = -_4.1.0;
_21 = !true;
_20.0 = [Field::<isize>(Variant(_4.1.1, 2), 2),Field::<isize>(Variant(_4.1.1, 2), 2),Field::<isize>(Variant(_4.1.1, 2), 2),_4.0.fld2,Field::<isize>(Variant(_4.1.1, 2), 2)];
_6 = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
_24.2 = (*_25);
_24.3 = _14 as isize;
place!(Field::<bool>(Variant(_4.1.1, 2), 0)) = _21 ^ _21;
_22 = _18;
_10 = core::ptr::addr_of!((*_10));
_1.0 = _4.0.fld3 as i128;
_26 = (-1771898504_i32);
_19 = Field::<usize>(Variant(_4.1.1, 2), 4);
_14 = Field::<i8>(Variant(_4.1.1, 2), 3) as f64;
_12 = &_4.2;
_4.0.fld3 = 311618192197213311600809176768883353198_u128 - 70280902575825753321577919794885531377_u128;
_24.3 = Field::<isize>(Variant(_4.1.1, 2), 2) << _1.2;
_24.2 = (*_25);
_31 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_4.1.1, 2), 3)));
Goto(bb12)
}
bb14 = {
_4.1.1 = Adt29::Variant2 { fld0: false,fld1: _20.3,fld2: _1.2,fld3: 63_i8,fld4: _19,fld5: _4.0.fld0,fld6: _2,fld7: _3 };
_4.0.fld2 = _1.2 & _1.2;
place!(Field::<[u32; 8]>(Variant(_4.1.1, 2), 5)) = [_4.2,_4.2,_4.2,RET,RET,_4.2,RET,_4.2];
place!(Field::<i8>(Variant(_4.1.1, 2), 3)) = !59_i8;
_22 = !_7;
_25 = &_4.0.fld1;
_4.1.0 = _1.0;
place!(Field::<i8>(Variant(_4.1.1, 2), 3)) = -(-28_i8);
_10 = core::ptr::addr_of!((*_10));
_20.3 = !Field::<u8>(Variant(_4.1.1, 2), 1);
_22 = _14 as u64;
_21 = !true;
_9 = [RET,RET];
place!(Field::<usize>(Variant(_4.1.1, 2), 4)) = !_19;
_24.1 = _4.1.0;
match _4.1.2 {
9223372036854775807 => bb11,
_ => bb8
}
}
bb15 = {
place!(Field::<u8>(Variant(_4.1.1, 2), 1)) = _4.1.0 as u8;
_16 = _2;
_4.0.fld2 = _4.1.2;
_4.0.fld0 = [(*_12),_4.2,RET,(*_12),(*_12),_4.2,RET,(*_12)];
place!(Field::<isize>(Variant(_4.1.1, 2), 2)) = _1.2 * _1.2;
_4.0.fld5 = Adt19::Variant0 { fld0: 5911_i16 };
_18 = _7;
place!(Field::<u8>(Variant(_4.1.1, 2), 1)) = 11_u8 & 119_u8;
place!(Field::<usize>(Variant(_4.1.1, 2), 4)) = Field::<i8>(Variant(_4.1.1, 2), 3) as usize;
_7 = _18;
_20.3 = !Field::<u8>(Variant(_4.1.1, 2), 1);
_4.0.fld1 = '\u{d1102}';
_4.0.fld3 = 201340508672929079541275280433668469984_u128;
_19 = Field::<usize>(Variant(_4.1.1, 2), 4);
(*_10) = [_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6,_4.0.fld6];
Call(place!(Field::<isize>(Variant(_4.1.1, 2), 2)) = fn19(Field::<bool>(Variant(_4.1.1, 2), 0), _1.2, _1.2, _2, Move(_12), _4.1.2, _11), ReturnTo(bb10), UnwindUnreachable())
}
bb16 = {
_3 = _18 as u16;
_34 = [(*_12),RET];
place!(Field::<u8>(Variant(_1.1, 2), 1)) = _5;
place!(Field::<[u32; 8]>(Variant(_1.1, 2), 5)) = Field::<[u32; 8]>(Variant(_4.1.1, 2), 5);
_4.0.fld1 = _24.2;
_1.2 = Field::<isize>(Variant(_4.1.1, 2), 2);
_31 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_4.1.1, 2), 3)));
_33 = _24.3 + _1.2;
Goto(bb17)
}
bb17 = {
Call(_38 = dump_var(18_usize, 6_usize, Move(_6), 7_usize, Move(_7), 33_usize, Move(_33), 30_usize, Move(_30)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(18_usize, 26_usize, Move(_26), 21_usize, Move(_21), 5_usize, Move(_5), 39_usize, _39), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: bool,mut _2: isize,mut _3: isize,mut _4: f32,mut _5: &'static u32,mut _6: isize,mut _7: [i8; 5]) -> isize {
mir! {
type RET = isize;
let _8: f32;
let _9: isize;
let _10: &'static mut *const &'static (u32, (f32, [u32; 8], bool, i128));
let _11: u128;
let _12: Adt29;
let _13: bool;
let _14: isize;
let _15: f32;
let _16: Adt47;
let _17: Adt26;
let _18: bool;
let _19: f64;
let _20: ();
let _21: ();
{
_6 = _2 + _2;
_1 = _6 > _2;
RET = _3;
_6 = _2;
_3 = -_6;
_3 = _2 & RET;
_7 = [8_i8,(-52_i8),85_i8,(-4_i8),20_i8];
_6 = !_3;
_7 = [32_i8,61_i8,19_i8,(-7_i8),(-93_i8)];
_1 = false;
_3 = RET;
_8 = _4 - _4;
RET = -_3;
_7 = [(-21_i8),(-108_i8),(-94_i8),(-106_i8),77_i8];
_2 = RET;
RET = -_2;
_8 = 8321581149119238397_usize as f32;
_6 = !RET;
RET = _3 | _3;
RET = _2;
_7 = [74_i8,(-34_i8),5_i8,125_i8,(-58_i8)];
_9 = _2 << _6;
_11 = RET as u128;
Goto(bb1)
}
bb1 = {
RET = _3;
_9 = RET;
RET = _9 | _9;
_9 = RET;
_9 = !RET;
_8 = 188_u8 as f32;
_4 = (-1045933184_i32) as f32;
_8 = -_4;
_4 = 26025_u16 as f32;
_1 = _11 < _11;
_3 = 4_usize as isize;
_1 = _4 != _4;
_6 = !RET;
Goto(bb2)
}
bb2 = {
_8 = 40189_u16 as f32;
RET = _2;
_11 = 16991_i16 as u128;
_1 = _6 == _6;
_1 = true;
_13 = !_1;
Goto(bb3)
}
bb3 = {
_7 = [(-104_i8),(-69_i8),(-36_i8),(-36_i8),(-42_i8)];
_14 = '\u{f6119}' as isize;
RET = _6 & _6;
_3 = RET + RET;
_6 = _4 as isize;
_2 = 158190366158758979757369312092474519401_i128 as isize;
_6 = _3 - _3;
_14 = '\u{2f9f3}' as isize;
RET = _6;
RET = _6 - _3;
_3 = '\u{b449c}' as isize;
_13 = _1 & _1;
_7 = [(-20_i8),96_i8,(-33_i8),103_i8,33_i8];
_17.fld6 = 8559771355072696036_i64 & 4429770006120264257_i64;
_17.fld3 = !_11;
_17.fld2 = _6;
_6 = RET + RET;
_17.fld4 = [705390260_u32,2441005091_u32,3373265849_u32,2464936999_u32,1497736881_u32,2688211873_u32];
_8 = _4 * _4;
_17.fld2 = RET - _6;
Goto(bb4)
}
bb4 = {
Call(_20 = dump_var(19_usize, 13_usize, Move(_13), 6_usize, Move(_6), 11_usize, Move(_11), 3_usize, Move(_3)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(386775969_u32));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt19 {
Variant0{
fld0: i16,

},
Variant1{
fld0: f32,
fld1: u8,
fld2: (u64, i128, char, isize),
fld3: i128,

},
Variant2{
fld0: u32,
fld1: u8,
fld2: f64,
fld3: u16,
fld4: [u32; 8],
fld5: (u64, i128, char, isize),

},
Variant3{
fld0: bool,
fld1: (u64, i128, char, isize),
fld2: isize,
fld3: f32,
fld4: f64,
fld5: usize,
fld6: i64,

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt26 {
fld0: [u32; 8],
fld1: char,
fld2: isize,
fld3: u128,
fld4: [u32; 6],
fld5: Adt19,
fld6: i64,
}
#[derive(Debug)]
pub enum Adt29 {
Variant0{
fld0: u8,
fld1: char,
fld2: (u32, (f32, [u32; 8], bool, i128)),
fld3: i8,
fld4: i16,
fld5: i32,
fld6: u128,
fld7: [isize; 5],

},
Variant1{
fld0: u64,
fld1: Adt19,
fld2: (f32, [u32; 8], bool, i128),
fld3: i8,
fld4: (u64, i128, char, isize),
fld5: f32,
fld6: usize,

},
Variant2{
fld0: bool,
fld1: u8,
fld2: isize,
fld3: i8,
fld4: usize,
fld5: [u32; 8],
fld6: f32,
fld7: u16,

}}
#[derive(Debug)]
pub enum Adt32 {
Variant0{
fld0: (u64, i128, char, isize),
fld1: u8,
fld2: i8,

},
Variant1{
fld0: (f32, [u32; 8], bool, i128),
fld1: u128,
fld2: *const char,
fld3: u64,
fld4: i16,
fld5: i32,
fld6: u16,
fld7: i128,

}}
#[derive(Debug)]
pub enum Adt47 {
Variant0{
fld0: (Adt19,),
fld1: char,
fld2: [u64; 1],
fld3: (u64, i128, char, isize),
fld4: (u16, i64, Adt26, f32),
fld5: u16,
fld6: [u32; 8],

},
Variant1{
fld0: (u16, i64, Adt26, f32),
fld1: char,
fld2: u8,
fld3: i8,

},
Variant2{
fld0: *mut u16,
fld1: [i128; 2],
fld2: (Adt19,),
fld3: (u64, i128, char, isize),
fld4: [char; 6],

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: f32,
fld1: [i64; 7],
fld2: (Adt26, (i128, Adt29, isize), u32),
fld3: [u64; 1],
fld4: (i128, Adt29, isize),
fld5: i32,
fld6: [usize; 8],
fld7: f64,

},
Variant1{
fld0: (Adt19,),
fld1: u128,
fld2: u64,
fld3: (u64, i128, char, isize),
fld4: [usize; 8],
fld5: i32,
fld6: usize,
fld7: *mut i8,

},
Variant2{
fld0: *const char,
fld1: *mut i8,
fld2: u16,
fld3: u8,
fld4: [u32; 8],
fld5: i32,
fld6: [i64; 7],
fld7: (u32, (f32, [u32; 8], bool, i128)),

},
Variant3{
fld0: [u32; 8],
fld1: (i128, Adt29, isize),
fld2: [u32; 6],
fld3: *mut u16,

}}
#[derive(Debug)]
pub enum Adt56 {
Variant0{
fld0: u64,
fld1: i64,
fld2: *const [isize; 5],

},
Variant1{
fld0: *mut i8,
fld1: i32,
fld2: (u32, (f32, [u32; 8], bool, i128)),
fld3: [usize; 8],

},
Variant2{
fld0: u16,
fld1: (u16, i64, Adt26, f32),
fld2: u128,
fld3: (u32, (f32, [u32; 8], bool, i128)),
fld4: Adt54,

},
Variant3{
fld0: u128,
fld1: *mut i8,
fld2: *mut u16,
fld3: u16,
fld4: u8,
fld5: Adt54,
fld6: (u32, (f32, [u32; 8], bool, i128)),

}}
#[derive(Debug)]
pub enum Adt73 {
Variant0{
fld0: (i128, Adt29, isize),
fld1: i128,
fld2: Adt54,
fld3: *const char,
fld4: *const *mut [i128; 2],
fld5: [u32; 6],

},
Variant1{
fld0: bool,
fld1: [i128; 2],
fld2: [i8; 5],
fld3: Adt29,
fld4: ([i8; 5], [u32; 2], Adt47),

},
Variant2{
fld0: (u64, i128, char, isize),
fld1: u8,
fld2: Adt32,
fld3: Adt54,

}}

