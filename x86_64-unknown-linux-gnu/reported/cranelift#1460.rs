#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: u128,mut _2: char,mut _3: isize,mut _4: i8,mut _5: u8,mut _6: u16,mut _7: i64,mut _8: i128) -> isize {
mir! {
type RET = isize;
let _9: bool;
let _10: isize;
let _11: *mut i64;
let _12: u8;
let _13: char;
let _14: bool;
let _15: i32;
let _16: bool;
let _17: i128;
let _18: &'static &'static mut *mut u64;
let _19: isize;
let _20: [u128; 4];
let _21: &'static [u64; 2];
let _22: ();
let _23: ();
{
_1 = 222410576164364660651435345991628531315_u128 >> 136_u8;
_7 = -(-3379503611401372735_i64);
RET = 16_isize;
_3 = RET & RET;
_3 = 4817051566969314874_u64 as isize;
_1 = 110162975275414258817597925569879574717_u128 + 264271524796790441105479898883535386278_u128;
_4 = -42_i8;
_6 = _7 as u16;
_3 = RET & RET;
_8 = 72667007181061261474564059621267299115_i128;
_3 = RET * RET;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
16 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_1 = !281191540795721982416304563808793367705_u128;
RET = -_3;
_7 = 13726_i16 as i64;
_9 = _4 <= _4;
_7 = -(-2472841120123179127_i64);
_1 = 245124445566144497561155595094209517819_u128;
_4 = (-13_i8);
_5 = !220_u8;
_2 = '\u{a4bab}';
Call(_5 = fn1(_1, RET, _2), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_2 = '\u{c4e62}';
_9 = !false;
RET = _3;
_8 = _5 as i128;
_9 = false | true;
_9 = true;
RET = _3;
_10 = _8 as isize;
_11 = core::ptr::addr_of_mut!(_7);
_11 = core::ptr::addr_of_mut!(_7);
RET = (-1649369632_i32) as isize;
RET = _3 * _10;
_4 = _8 as i8;
_11 = core::ptr::addr_of_mut!(_7);
_1 = 174449307147447248807687581418947601722_u128 ^ 290884771633927173478202182513074980606_u128;
Goto(bb9)
}
bb9 = {
_8 = (-111196695985569933299581274304146579539_i128) - 117505636232828896657901987771702117598_i128;
_8 = 75915794066629761035470001183983334289_i128 + (-110869618721026889103196149572217679674_i128);
_11 = core::ptr::addr_of_mut!((*_11));
_9 = RET <= _10;
(*_11) = 4_usize as i64;
_12 = 2781451028_u32 as u8;
_8 = 108214044225696555603930665866395144169_i128 + (-80673629686649247734488586229358217584_i128);
_3 = 193656755261796298_u64 as isize;
_6 = RET as u16;
_11 = core::ptr::addr_of_mut!((*_11));
_13 = _2;
(*_11) = (-8136782563088372497_i64);
_5 = RET as u8;
_10 = _2 as isize;
_11 = core::ptr::addr_of_mut!((*_11));
RET = -_10;
_12 = _6 as u8;
_14 = _9 & _9;
_4 = -88_i8;
_15 = _8 as i32;
_11 = core::ptr::addr_of_mut!((*_11));
_3 = _4 as isize;
match (*_11) {
0 => bb6,
1 => bb4,
2 => bb5,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463455237824868679838959 => bb15,
_ => bb14
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_6 = !60_u16;
(*_11) = 9043709386158018989_i64;
_8 = -160132190817082646548605417622731723866_i128;
_20 = [_1,_1,_1,_1];
_7 = -7663872152327500241_i64;
_13 = _2;
_2 = _13;
_16 = !_9;
_11 = core::ptr::addr_of_mut!(_7);
_19 = RET;
_3 = _10 ^ _10;
_1 = !233544267252556225200299908899373095141_u128;
Goto(bb16)
}
bb16 = {
Call(_22 = dump_var(0_usize, 13_usize, Move(_13), 4_usize, Move(_4), 9_usize, Move(_9), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_22 = dump_var(0_usize, 5_usize, Move(_5), 7_usize, Move(_7), 1_usize, Move(_1), 20_usize, Move(_20)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: u128,mut _2: isize,mut _3: char) -> u8 {
mir! {
type RET = u8;
let _4: i16;
let _5: [u128; 4];
let _6: (u64, &'static u128);
let _7: &'static mut [i128; 4];
let _8: (i32, (bool,));
let _9: f64;
let _10: *const u128;
let _11: &'static *const [u128; 2];
let _12: u8;
let _13: f32;
let _14: *mut i64;
let _15: char;
let _16: [u64; 4];
let _17: f64;
let _18: isize;
let _19: u64;
let _20: f32;
let _21: char;
let _22: i128;
let _23: *const (u128, i64, bool, [u128; 2]);
let _24: [i128; 7];
let _25: isize;
let _26: *mut u16;
let _27: f32;
let _28: ();
let _29: ();
{
_2 = (-9223372036854775808_isize);
RET = (-16608_i16) as u8;
_2 = -9223372036854775807_isize;
RET = 136_u8 << _2;
RET = 0_u8 | 45_u8;
_1 = 91593090475078119662664418325838362090_u128;
_1 = 85615906019356746902363346133637079877_u128 >> RET;
_3 = '\u{bd2aa}';
_3 = '\u{21b23}';
_3 = '\u{47410}';
_2 = 9223372036854775807_isize;
_1 = 3314088204060418570_i64 as u128;
_4 = !31020_i16;
_8.1.0 = true;
_6.1 = &_1;
_1 = !288828557172934857752912894909967038860_u128;
_2 = (-9223372036854775808_isize) | (-9223372036854775808_isize);
_2 = (-9223372036854775808_isize) & 9223372036854775807_isize;
_3 = '\u{f78ba}';
_6.0 = 7151824620115343385_usize as u64;
Goto(bb1)
}
bb1 = {
_3 = '\u{100d9d}';
_8.0 = 152762533_i32;
_8.1 = (false,);
match _8.0 {
0 => bb2,
152762533 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_3 = '\u{98ec0}';
_9 = _1 as f64;
_6.1 = &_1;
_9 = 32279_u16 as f64;
_9 = 3831_u16 as f64;
_2 = -9223372036854775807_isize;
_2 = 29655256361652027_i64 as isize;
_9 = _8.0 as f64;
_5 = [_1,_1,_1,_1];
_10 = core::ptr::addr_of!(_1);
_4 = 23672_i16 ^ (-21234_i16);
RET = _9 as u8;
_5 = [(*_10),(*_10),_1,_1];
_1 = 48234890136929169748323689213912855327_u128;
RET = 117_u8 - 120_u8;
_12 = !RET;
_3 = '\u{49a91}';
RET = !_12;
_8.1 = (true,);
_8.0 = (-1297578969_i32) ^ (-1050560569_i32);
RET = !_12;
_2 = -(-9223372036854775808_isize);
_12 = RET | RET;
_8.1 = (true,);
RET = (-3059081995732765084_i64) as u8;
Call(_10 = fn2(_12, _4, _1, _3, _3, _8, _2, Move(_6.1), _2), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_4 = (-6961_i16);
_4 = !(-9991_i16);
_6.0 = _3 as u64;
_9 = 36240_u16 as f64;
_4 = (-17796_i16) - 10298_i16;
_9 = _8.0 as f64;
_4 = _1 as i16;
_6.0 = 10528680462793459611_u64 >> _2;
_8.1 = (true,);
_15 = _3;
_8.1.0 = true;
_4 = -27535_i16;
_5 = [_1,_1,_1,_1];
_16 = [_6.0,_6.0,_6.0,_6.0];
_13 = _12 as f32;
_6.0 = 3109233913719481065_u64 + 18013918099186007941_u64;
_18 = !_2;
Goto(bb6)
}
bb6 = {
_17 = -_9;
_8.0 = -(-672551521_i32);
match _1 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
48234890136929169748323689213912855327 => bb12,
_ => bb11
}
}
bb7 = {
_4 = (-6961_i16);
_4 = !(-9991_i16);
_6.0 = _3 as u64;
_9 = 36240_u16 as f64;
_4 = (-17796_i16) - 10298_i16;
_9 = _8.0 as f64;
_4 = _1 as i16;
_6.0 = 10528680462793459611_u64 >> _2;
_8.1 = (true,);
_15 = _3;
_8.1.0 = true;
_4 = -27535_i16;
_5 = [_1,_1,_1,_1];
_16 = [_6.0,_6.0,_6.0,_6.0];
_13 = _12 as f32;
_6.0 = 3109233913719481065_u64 + 18013918099186007941_u64;
_18 = !_2;
Goto(bb6)
}
bb8 = {
_3 = '\u{98ec0}';
_9 = _1 as f64;
_6.1 = &_1;
_9 = 32279_u16 as f64;
_9 = 3831_u16 as f64;
_2 = -9223372036854775807_isize;
_2 = 29655256361652027_i64 as isize;
_9 = _8.0 as f64;
_5 = [_1,_1,_1,_1];
_10 = core::ptr::addr_of!(_1);
_4 = 23672_i16 ^ (-21234_i16);
RET = _9 as u8;
_5 = [(*_10),(*_10),_1,_1];
_1 = 48234890136929169748323689213912855327_u128;
RET = 117_u8 - 120_u8;
_12 = !RET;
_3 = '\u{49a91}';
RET = !_12;
_8.1 = (true,);
_8.0 = (-1297578969_i32) ^ (-1050560569_i32);
RET = !_12;
_2 = -(-9223372036854775808_isize);
_12 = RET | RET;
_8.1 = (true,);
RET = (-3059081995732765084_i64) as u8;
Call(_10 = fn2(_12, _4, _1, _3, _3, _8, _2, Move(_6.1), _2), ReturnTo(bb5), UnwindUnreachable())
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_3 = '\u{100d9d}';
_8.0 = 152762533_i32;
_8.1 = (false,);
match _8.0 {
0 => bb2,
152762533 => bb4,
_ => bb3
}
}
bb12 = {
_8.1 = (true,);
_15 = _3;
_8.1 = (false,);
_16 = [_6.0,_6.0,_6.0,_6.0];
_5 = [_1,_1,_1,_1];
_6.0 = !1606435097015971355_u64;
_9 = -_17;
_8.1 = (true,);
_8.1.0 = false;
_1 = 167795191281786952489043338117456339919_u128 << _6.0;
_6.1 = &_1;
_12 = RET & RET;
_6.1 = &_1;
_8.0 = _4 as i32;
_6.0 = 3064482078323274743_u64 * 4685043398331824784_u64;
_18 = _2 * _2;
_4 = 557741736453667420_i64 as i16;
_18 = 6499238226197299445_i64 as isize;
RET = _12;
_13 = 106_i8 as f32;
_4 = (-45906831907429170781074665530109366990_i128) as i16;
_20 = _4 as f32;
_4 = _3 as i16;
_5 = [_1,_1,_1,_1];
_6.1 = &_1;
_8.1 = (false,);
_6.1 = &_1;
_6.0 = !8520425304837953789_u64;
_17 = (-41_i8) as f64;
Goto(bb13)
}
bb13 = {
_18 = _2;
_10 = core::ptr::addr_of!(_1);
_13 = -_20;
RET = _12 | _12;
_6.1 = &_1;
_22 = -166732673732530225602905078782443949768_i128;
_16 = [_6.0,_6.0,_6.0,_6.0];
_18 = -_2;
_19 = _6.0 - _6.0;
_6.1 = &(*_10);
RET = !_12;
_22 = (-164170186412627778114214630543619211646_i128) << _2;
Goto(bb14)
}
bb14 = {
_25 = 1415305131_u32 as isize;
_8.0 = (-320504491_i32);
_2 = -_18;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(1_usize, 3_usize, Move(_3), 4_usize, Move(_4), 18_usize, Move(_18), 19_usize, Move(_19)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(1_usize, 2_usize, Move(_2), 16_usize, Move(_16), 29_usize, _29, 29_usize, _29), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: u8,mut _2: i16,mut _3: u128,mut _4: char,mut _5: char,mut _6: (i32, (bool,)),mut _7: isize,mut _8: &'static u128,mut _9: isize) -> *const u128 {
mir! {
type RET = *const u128;
let _10: &'static *const [u128; 2];
let _11: f32;
let _12: bool;
let _13: &'static mut Adt23;
let _14: u64;
let _15: (i32, (bool,));
let _16: &'static u128;
let _17: *mut f64;
let _18: [usize; 2];
let _19: f32;
let _20: Adt83;
let _21: [isize; 2];
let _22: f32;
let _23: isize;
let _24: isize;
let _25: ();
let _26: ();
{
_5 = _4;
_2 = (-10862_i16);
_6.1 = (true,);
_7 = !_9;
_6.1.0 = false ^ true;
_6.1 = (false,);
_5 = _4;
RET = core::ptr::addr_of!(_3);
match _2 {
0 => bb1,
1 => bb2,
2 => bb3,
340282366920938463463374607431768200594 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_4 = _5;
_7 = _9;
_7 = 925894230_u32 as isize;
(*RET) = 205463381604572418059831583015045140029_u128;
(*RET) = 303980679154784857824882336067107894569_u128;
_1 = _6.1.0 as u8;
_2 = _6.1.0 as i16;
(*RET) = !134193486838720139622600181177463031840_u128;
_6.1.0 = false;
_6.1.0 = (*RET) > _3;
_7 = -_9;
_1 = 189_u8;
_3 = !268489884315753797430780360317702076488_u128;
_3 = !160106989819401264636545104418901766932_u128;
(*RET) = !226745458863430921558824079157427644861_u128;
(*RET) = !115353478469695450388170890292052589070_u128;
_6.0 = (-844281140_i32);
_5 = _4;
_5 = _4;
_6.1.0 = true & false;
_6.0 = 1296448067_i32 - 1910457521_i32;
_3 = 203180864425050078444851020919017008064_u128;
_12 = _6.1.0;
_5 = _4;
_11 = 67_i8 as f32;
_5 = _4;
_9 = _7 + _7;
_1 = 156_u8 | 132_u8;
match (*RET) {
0 => bb3,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
203180864425050078444851020919017008064 => bb11,
_ => bb10
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
(*RET) = 155555516435394162434448754440446869927_u128 - 71643978225391860449171190430317081920_u128;
_12 = !_6.1.0;
_8 = &_3;
(*RET) = 33886464193867046240498383655075687111_u128 << _1;
_12 = !_6.1.0;
(*RET) = 114332783815490608952397377063469886250_u128;
_3 = 16200481365470202483090162548833206260_u128;
_11 = 3678437684_u32 as f32;
(*RET) = !197383545959574779364513711386970043045_u128;
_2 = (-25829_i16) + 263_i16;
_6.1.0 = _12;
(*RET) = 237391509688937395156049187397131490419_u128 ^ 266992941212036790892562731004429595012_u128;
_15.0 = 13048553996155730349_usize as i32;
_15.1 = (_12,);
Goto(bb12)
}
bb12 = {
_6.1.0 = !_12;
_6 = (_15.0, _15.1);
RET = core::ptr::addr_of!(_3);
_14 = !15538398909370076996_u64;
_15.1 = (_12,);
Call((*RET) = fn3(_9, _5, _15.1), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_15.0 = _6.0;
_6 = _15;
_7 = (*RET) as isize;
_15.1.0 = !_12;
RET = core::ptr::addr_of!((*RET));
_12 = _6.1.0;
_6.1 = (_12,);
_15.1.0 = _12;
_15.1 = _6.1;
_6.1.0 = !_12;
_5 = _4;
_4 = _5;
_15.1.0 = _7 < _9;
_15.1 = (_6.1.0,);
(*RET) = 245795507641069781434730792443985471713_u128 << _9;
Call(_1 = fn4(_5, (*RET), _6.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
RET = core::ptr::addr_of!(_3);
_19 = -_11;
(*RET) = 164530277672184162112510018945208208558_u128 ^ 186847906993947968730617638389246776318_u128;
_21 = [_7,_7];
_15.0 = _4 as i32;
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(2_usize, 7_usize, Move(_7), 12_usize, Move(_12), 9_usize, Move(_9), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(2_usize, 21_usize, Move(_21), 1_usize, Move(_1), 26_usize, _26, 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: isize,mut _2: char,mut _3: (bool,)) -> u128 {
mir! {
type RET = u128;
let _4: &'static *const [u128; 2];
let _5: i32;
let _6: (u32,);
let _7: *const [i128; 7];
let _8: u16;
let _9: i64;
let _10: Adt48;
let _11: i8;
let _12: (&'static bool,);
let _13: (u64, &'static u128);
let _14: isize;
let _15: [u64; 4];
let _16: &'static mut &'static mut [i128; 4];
let _17: &'static mut [u128; 2];
let _18: u16;
let _19: bool;
let _20: ();
let _21: ();
{
_3.0 = !false;
_2 = '\u{223e8}';
RET = !266066363168468546901113106701844238311_u128;
RET = 35550074394896024935196237053602386086_u128;
_3.0 = true;
Goto(bb1)
}
bb1 = {
_3 = (false,);
_3.0 = false;
_3 = (false,);
_3.0 = !false;
_1 = 112965749645698051510508041965394509633_i128 as isize;
_3.0 = !false;
RET = 319286262833499909630553196971204995677_u128;
_1 = !(-86_isize);
_1 = -9223372036854775807_isize;
_3.0 = false;
RET = !211489181310967492788818463487369517579_u128;
_5 = (-28885929078085267999544575525379847280_i128) as i32;
_6.0 = !1525517161_u32;
_6.0 = 3599862701_u32 & 3543367693_u32;
_6 = (3811142183_u32,);
_8 = 31172_u16;
RET = _8 as u128;
_3 = (false,);
_2 = '\u{47061}';
_6.0 = 3780814679_u32;
_6.0 = _8 as u32;
_9 = 8386477270705439722_i64 - (-6163654224393905565_i64);
_9 = !883044807235468961_i64;
_3 = (true,);
match _8 {
0 => bb2,
31172 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_8 = _6.0 as u16;
_6 = (475414600_u32,);
_9 = _6.0 as i64;
_11 = 14_i8 << _5;
_2 = '\u{dd0e8}';
_8 = !27388_u16;
_2 = '\u{e228a}';
_9 = (-701367208889207805_i64);
_6 = (2417675638_u32,);
_12.0 = &_3.0;
_6 = (1446163372_u32,);
_12.0 = &_3.0;
Goto(bb5)
}
bb5 = {
_11 = _1 as i8;
_12.0 = &_3.0;
_3 = (false,);
_3 = (true,);
_13.0 = 72817543769239968_u64;
_11 = _6.0 as i8;
_8 = !56994_u16;
_5 = 1144453741_i32 ^ (-1809597958_i32);
_8 = 18455_u16;
_5 = -1299344536_i32;
_8 = _1 as u16;
match _9 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
340282366920938463462673240222879003651 => bb9,
_ => bb8
}
}
bb6 = {
_8 = _6.0 as u16;
_6 = (475414600_u32,);
_9 = _6.0 as i64;
_11 = 14_i8 << _5;
_2 = '\u{dd0e8}';
_8 = !27388_u16;
_2 = '\u{e228a}';
_9 = (-701367208889207805_i64);
_6 = (2417675638_u32,);
_12.0 = &_3.0;
_6 = (1446163372_u32,);
_12.0 = &_3.0;
Goto(bb5)
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
RET = 4_usize as u128;
_9 = _11 as i64;
_15 = [_13.0,_13.0,_13.0,_13.0];
_15 = [_13.0,_13.0,_13.0,_13.0];
_13.0 = _1 as u64;
_9 = -3355192767631557937_i64;
_5 = -869382800_i32;
_12.0 = &_3.0;
_14 = _2 as isize;
_3.0 = false;
_11 = 62_u8 as i8;
_2 = '\u{be133}';
_9 = 3605041539803141390_i64 + 3350279485268332526_i64;
match _6.0 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
1446163372 => bb17,
_ => bb16
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_3 = (false,);
_3.0 = false;
_3 = (false,);
_3.0 = !false;
_1 = 112965749645698051510508041965394509633_i128 as isize;
_3.0 = !false;
RET = 319286262833499909630553196971204995677_u128;
_1 = !(-86_isize);
_1 = -9223372036854775807_isize;
_3.0 = false;
RET = !211489181310967492788818463487369517579_u128;
_5 = (-28885929078085267999544575525379847280_i128) as i32;
_6.0 = !1525517161_u32;
_6.0 = 3599862701_u32 & 3543367693_u32;
_6 = (3811142183_u32,);
_8 = 31172_u16;
RET = _8 as u128;
_3 = (false,);
_2 = '\u{47061}';
_6.0 = 3780814679_u32;
_6.0 = _8 as u32;
_9 = 8386477270705439722_i64 - (-6163654224393905565_i64);
_9 = !883044807235468961_i64;
_3 = (true,);
match _8 {
0 => bb2,
31172 => bb4,
_ => bb3
}
}
bb13 = {
_11 = _1 as i8;
_12.0 = &_3.0;
_3 = (false,);
_3 = (true,);
_13.0 = 72817543769239968_u64;
_11 = _6.0 as i8;
_8 = !56994_u16;
_5 = 1144453741_i32 ^ (-1809597958_i32);
_8 = 18455_u16;
_5 = -1299344536_i32;
_8 = _1 as u16;
match _9 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
340282366920938463462673240222879003651 => bb9,
_ => bb8
}
}
bb14 = {
_8 = _6.0 as u16;
_6 = (475414600_u32,);
_9 = _6.0 as i64;
_11 = 14_i8 << _5;
_2 = '\u{dd0e8}';
_8 = !27388_u16;
_2 = '\u{e228a}';
_9 = (-701367208889207805_i64);
_6 = (2417675638_u32,);
_12.0 = &_3.0;
_6 = (1446163372_u32,);
_12.0 = &_3.0;
Goto(bb5)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_14 = _1 + _1;
_13.0 = !6737979007275282665_u64;
_18 = !_8;
_6 = (3160695423_u32,);
_19 = !_3.0;
_12.0 = &_3.0;
_9 = 9121219869422991267_i64;
Goto(bb18)
}
bb18 = {
Call(_20 = dump_var(3_usize, 3_usize, Move(_3), 2_usize, Move(_2), 15_usize, Move(_15), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_20 = dump_var(3_usize, 9_usize, Move(_9), 1_usize, Move(_1), 21_usize, _21, 21_usize, _21), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: char,mut _2: u128,mut _3: (bool,)) -> u8 {
mir! {
type RET = u8;
let _4: isize;
let _5: i64;
let _6: [i64; 5];
let _7: bool;
let _8: &'static [u64; 2];
let _9: (&'static bool,);
let _10: char;
let _11: *mut [u64; 4];
let _12: i8;
let _13: i64;
let _14: i128;
let _15: u32;
let _16: usize;
let _17: (i32, *const (u128, i64, bool, [u128; 2]));
let _18: bool;
let _19: &'static i32;
let _20: char;
let _21: i8;
let _22: (i32, (bool,));
let _23: [usize; 6];
let _24: char;
let _25: char;
let _26: i128;
let _27: isize;
let _28: i128;
let _29: f64;
let _30: *const bool;
let _31: usize;
let _32: ([u128; 4], *const [u128; 2], [u64; 2]);
let _33: i16;
let _34: u32;
let _35: &'static bool;
let _36: ();
let _37: ();
{
RET = 198_u8 + 2_u8;
_2 = 159876667195528302694106748370383965096_u128 >> RET;
_2 = 7598143901119307423762808475570643739_u128 ^ 53738233651525125218444046348273561246_u128;
_2 = (-103_i8) as u128;
_3 = (false,);
Goto(bb1)
}
bb1 = {
_3 = (false,);
_4 = -(-27_isize);
_5 = -(-1779380964628052092_i64);
_2 = 84343445444420775468798407663166459244_i128 as u128;
_5 = 5874582598058751255_i64;
_2 = 56827077003910001178038277342090132979_u128 + 216393763628430438894291316110103299209_u128;
_3 = (false,);
_5 = RET as i64;
_1 = '\u{5d611}';
RET = !109_u8;
Goto(bb2)
}
bb2 = {
_3 = (false,);
_4 = -9223372036854775807_isize;
RET = 197_u8 | 141_u8;
RET = _2 as u8;
_2 = _3.0 as u128;
RET = !138_u8;
_1 = '\u{a6d5c}';
RET = 144_u8;
match RET {
144 => bb3,
_ => bb1
}
}
bb3 = {
_1 = '\u{4d0a4}';
_4 = 32_isize & (-9223372036854775808_isize);
_3 = (false,);
_6 = [_5,_5,_5,_5,_5];
_1 = '\u{c37d4}';
_1 = '\u{58d4e}';
_7 = !_3.0;
RET = 34590_u16 as u8;
RET = 104_u8 * 125_u8;
_3 = (_7,);
_3 = (_7,);
_2 = !148207727544255814831889819557181069330_u128;
RET = 114_u8;
_2 = _1 as u128;
RET = 153_u8;
_1 = '\u{2b721}';
RET = (-22653_i16) as u8;
_3.0 = !_7;
RET = 34_i8 as u8;
RET = _7 as u8;
_5 = _1 as i64;
_5 = -8650122748516517197_i64;
_6 = [_5,_5,_5,_5,_5];
_4 = -9223372036854775807_isize;
_5 = -9077372847095268994_i64;
_2 = _3.0 as u128;
_2 = 84956420491130410674324312020469833927_u128 | 198280778803007392689091140493356157411_u128;
RET = 134_u8;
_9.0 = &_3.0;
match RET {
0 => bb1,
1 => bb4,
134 => bb6,
_ => bb5
}
}
bb4 = {
_3 = (false,);
_4 = -9223372036854775807_isize;
RET = 197_u8 | 141_u8;
RET = _2 as u8;
_2 = _3.0 as u128;
RET = !138_u8;
_1 = '\u{a6d5c}';
RET = 144_u8;
match RET {
144 => bb3,
_ => bb1
}
}
bb5 = {
_3 = (false,);
_4 = -(-27_isize);
_5 = -(-1779380964628052092_i64);
_2 = 84343445444420775468798407663166459244_i128 as u128;
_5 = 5874582598058751255_i64;
_2 = 56827077003910001178038277342090132979_u128 + 216393763628430438894291316110103299209_u128;
_3 = (false,);
_5 = RET as i64;
_1 = '\u{5d611}';
RET = !109_u8;
Goto(bb2)
}
bb6 = {
_9.0 = &_3.0;
_10 = _1;
_7 = _2 >= _2;
RET = 251_u8 - 58_u8;
_3.0 = _7 < _7;
_2 = 4116595787067254330398654947403609614_i128 as u128;
_7 = _3.0;
_10 = _1;
Goto(bb7)
}
bb7 = {
RET = 222_u8 + 219_u8;
_5 = (-4457865361713894418_i64);
_1 = _10;
RET = 190_u8 >> _5;
_7 = _3.0;
_12 = _1 as i8;
_3.0 = _7;
_5 = 5204903690683105383_i64 + 3230438501678261766_i64;
RET = 80252169076326699750970023612788337571_i128 as u8;
_9.0 = &_7;
_2 = 7712901107321642668_usize as u128;
_4 = 33791_u16 as isize;
_3.0 = _7;
_2 = 2801668093_u32 as u128;
_9.0 = &_3.0;
_9.0 = &_7;
_1 = _10;
_14 = !(-16645906153322106857895832226930491063_i128);
_14 = 64292_u16 as i128;
_7 = _3.0;
_12 = (-48_i8) * (-43_i8);
_1 = _10;
_10 = _1;
_5 = !(-7558892743064787696_i64);
Call(_11 = fn5(_3, _3.0, _12, Move(_9.0)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_12 = (-61_i8);
_2 = 13773876911209199483_u64 as u128;
_3.0 = !_7;
_18 = _3.0;
_16 = !1_usize;
_9.0 = &_3.0;
_10 = _1;
_3.0 = !_7;
_1 = _10;
_3.0 = !_18;
_13 = 33621_u16 as i64;
_14 = -(-41763632897449081183121445763953541745_i128);
_5 = _13;
_5 = _13;
_15 = 3081496176_u32;
_4 = _15 as isize;
_15 = !1468830418_u32;
_17.0 = -(-1847309724_i32);
_19 = &_17.0;
_19 = &_17.0;
_1 = _10;
Goto(bb9)
}
bb9 = {
_17.0 = 13872_u16 as i32;
_13 = !_5;
_14 = (-115133424303133015153052949858529505463_i128) | (-84372621066755892131902971166356247322_i128);
_18 = !_3.0;
_7 = !_18;
_9.0 = &_7;
_13 = -_5;
_20 = _10;
_17.0 = (-3393316_i32) | 477078568_i32;
_4 = _1 as isize;
_20 = _1;
_22 = (_17.0, _3);
_22 = (_17.0, _3);
_6 = [_13,_13,_5,_13,_5];
RET = 164_u8;
_6 = [_5,_13,_5,_5,_5];
_2 = !216956749257730574005518362912463109931_u128;
RET = !249_u8;
_22.1.0 = _7;
_3 = _22.1;
_23 = [_16,_16,_16,_16,_16,_16];
_23 = [_16,_16,_16,_16,_16,_16];
_20 = _1;
_18 = _3.0;
_6 = [_13,_13,_5,_5,_5];
_23 = [_16,_16,_16,_16,_16,_16];
Goto(bb10)
}
bb10 = {
_1 = _20;
Goto(bb11)
}
bb11 = {
_16 = 4793663396836075229_usize << _22.0;
_24 = _1;
_6 = [_5,_5,_13,_13,_13];
_27 = _4;
_9.0 = &_3.0;
_4 = -_27;
RET = _17.0 as u8;
_2 = !165226936480999298274256809405192530050_u128;
_24 = _10;
Goto(bb12)
}
bb12 = {
_3.0 = _22.1.0;
_7 = _22.1.0;
_4 = _27;
_18 = _7;
RET = 201_u8 & 32_u8;
_21 = _12 * _12;
_25 = _24;
_18 = _7;
_19 = &_17.0;
_28 = _14;
_16 = !3_usize;
_19 = &_17.0;
_3 = (_22.1.0,);
_12 = !_21;
_6 = [_5,_5,_5,_13,_13];
_30 = core::ptr::addr_of!(_18);
_6 = [_13,_5,_13,_5,_5];
_3 = (_22.1.0,);
_20 = _10;
_12 = _21 >> (*_19);
_26 = !_28;
Goto(bb13)
}
bb13 = {
_19 = &(*_19);
Goto(bb14)
}
bb14 = {
_29 = _2 as f64;
_22.0 = _17.0;
_6 = [_5,_5,_5,_13,_13];
_12 = _21 & _21;
_32.2 = [4006589363896180595_u64,3148443094939769684_u64];
(*_30) = !_22.1.0;
_22.1.0 = !(*_30);
_6 = [_5,_5,_13,_13,_13];
_10 = _25;
(*_30) = _7;
_18 = _3.0;
_18 = _3.0;
_33 = 15050_i16 - (-2763_i16);
_31 = _16 | _16;
_34 = _26 as u32;
_21 = _12 << _33;
_3.0 = (*_30);
(*_30) = RET == RET;
_29 = 7316707966002583285_u64 as f64;
_17.0 = _5 as i32;
_30 = core::ptr::addr_of!(_7);
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(4_usize, 23_usize, Move(_23), 5_usize, Move(_5), 15_usize, Move(_15), 31_usize, Move(_31)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(4_usize, 20_usize, Move(_20), 34_usize, Move(_34), 33_usize, Move(_33), 3_usize, Move(_3)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_36 = dump_var(4_usize, 7_usize, Move(_7), 22_usize, Move(_22), 28_usize, Move(_28), 1_usize, Move(_1)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(4_usize, 27_usize, Move(_27), 37_usize, _37, 37_usize, _37, 37_usize, _37), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: (bool,),mut _2: bool,mut _3: i8,mut _4: &'static bool) -> *mut [u64; 4] {
mir! {
type RET = *mut [u64; 4];
let _5: f64;
let _6: *const bool;
let _7: (*const (u128, i64, bool, [u128; 2]),);
let _8: &'static mut Adt21;
let _9: &'static mut *mut u64;
let _10: Adt21;
let _11: i64;
let _12: *const [i128; 7];
let _13: [isize; 2];
let _14: bool;
let _15: (bool,);
let _16: isize;
let _17: &'static mut *const u128;
let _18: i128;
let _19: Adt70;
let _20: (i32, (bool,));
let _21: f64;
let _22: u128;
let _23: isize;
let _24: u32;
let _25: &'static [u64; 4];
let _26: f64;
let _27: &'static bool;
let _28: (u128, i64, bool, [u128; 2]);
let _29: f64;
let _30: i64;
let _31: [isize; 2];
let _32: (bool,);
let _33: u8;
let _34: &'static [u64; 4];
let _35: char;
let _36: isize;
let _37: u8;
let _38: &'static mut [u128; 2];
let _39: f32;
let _40: u16;
let _41: (u32,);
let _42: f64;
let _43: [u64; 2];
let _44: (*mut f64, *mut u16, bool);
let _45: &'static *const [u128; 2];
let _46: i8;
let _47: Adt48;
let _48: f32;
let _49: isize;
let _50: *mut u64;
let _51: Adt70;
let _52: Adt48;
let _53: *mut [u128; 2];
let _54: f32;
let _55: &'static mut *const bool;
let _56: [usize; 2];
let _57: &'static mut [u128; 4];
let _58: (u64, &'static u128);
let _59: ([u128; 4], *const [u128; 2], [u64; 2]);
let _60: bool;
let _61: isize;
let _62: i8;
let _63: u8;
let _64: [u64; 4];
let _65: *const [i128; 7];
let _66: (u8, [u128; 2], i32, *const [u128; 2]);
let _67: *mut *mut [u128; 2];
let _68: isize;
let _69: u32;
let _70: (u64, &'static u128);
let _71: i16;
let _72: i16;
let _73: [i128; 7];
let _74: ([u128; 4], *const [u128; 2], [u64; 2]);
let _75: isize;
let _76: u128;
let _77: &'static mut [u128; 2];
let _78: (&'static bool,);
let _79: char;
let _80: (bool,);
let _81: *mut f64;
let _82: u32;
let _83: (*mut f64, *mut u16, bool);
let _84: Adt23;
let _85: bool;
let _86: u16;
let _87: Adt34;
let _88: isize;
let _89: &'static mut [i128; 4];
let _90: bool;
let _91: ();
let _92: ();
{
_4 = &_1.0;
_4 = &(*_4);
_1 = (_2,);
_1.0 = _2;
_3 = 8875224744063918728_i64 as i8;
_1.0 = !_2;
_1 = (_2,);
_4 = &_1.0;
_4 = &_1.0;
_1 = (_2,);
_3 = 4_i8 ^ 108_i8;
_1.0 = !_2;
_3 = (-25_i8);
_1 = (_2,);
_1 = (_2,);
_4 = &_1.0;
_1.0 = _2 < _2;
_1.0 = _2;
_1 = (_2,);
_3 = (-27_i8);
_2 = _1.0;
_6 = core::ptr::addr_of!(_1.0);
Goto(bb1)
}
bb1 = {
_2 = _1.0 <= (*_6);
_6 = core::ptr::addr_of!((*_6));
_3 = !61_i8;
_1 = (_2,);
_5 = 243588945725166175044600213280214214665_u128 as f64;
_5 = 8562131461054590146_i64 as f64;
(*_6) = _2;
_3 = !49_i8;
(*_6) = !_2;
_4 = &(*_6);
_3 = -82_i8;
_5 = 2903310954228921205_u64 as f64;
_3 = -(-77_i8);
(*_6) = !_2;
_1 = (_2,);
_6 = core::ptr::addr_of!(_1.0);
(*_6) = _2 <= _2;
_4 = &(*_6);
_10.fld0 = 108_u8;
_5 = 12404456000253110719_usize as f64;
_6 = core::ptr::addr_of!(_14);
_13 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
match _10.fld0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
108 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_14 = (*_4);
_8 = &mut _10;
_3 = 71_i8;
(*_6) = (*_4) > (*_4);
_8 = &mut (*_8);
_13 = [(-9223372036854775808_isize),9223372036854775807_isize];
_2 = !_14;
_11 = (-2684225396650495107_i64) >> _3;
(*_8) = Adt21 { fld0: 17_u8 };
_3 = -35_i8;
(*_6) = (*_4);
(*_6) = _1.0;
_1.0 = _2;
_3 = '\u{f8cc6}' as i8;
_15.0 = _14;
_14 = !_15.0;
_8 = &mut _10;
(*_8) = Adt21 { fld0: 229_u8 };
Goto(bb8)
}
bb8 = {
_2 = !_15.0;
_13 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
_3 = -(-12_i8);
_8 = &mut _10;
_2 = !(*_6);
_18 = -56293856484493422787112324950741294340_i128;
_1.0 = !(*_6);
_15 = (_14,);
_8 = &mut _10;
(*_8) = Adt21 { fld0: 170_u8 };
_16 = 9223372036854775807_isize << _11;
_20 = (1473221185_i32, _15);
_18 = _16 as i128;
_14 = _2 != _1.0;
_20.1.0 = _15.0 == _1.0;
match _10.fld0 {
0 => bb1,
1 => bb2,
2 => bb5,
170 => bb9,
_ => bb7
}
}
bb9 = {
_23 = _5 as isize;
_11 = (-3903971513419626823_i64) * 8978601547851748934_i64;
_20.1.0 = _20.0 <= _20.0;
_14 = _15.0;
_24 = _20.0 as u32;
_20 = (909598325_i32, _15);
_18 = -(-7367031397628452922250073089260984010_i128);
_6 = core::ptr::addr_of!(_20.1.0);
_26 = _5;
_24 = !3683285826_u32;
_1 = (_15.0,);
_15.0 = _1.0 <= _2;
_18 = (-75765348251940207351952674088752921452_i128);
_13 = [_16,_23];
_8 = &mut _10;
_20.0 = (-557896155_i32) | (-1028023909_i32);
_23 = !_16;
Goto(bb10)
}
bb10 = {
_22 = 161945185769956924424940236709696093073_u128;
_26 = -_5;
(*_8) = Adt21 { fld0: 93_u8 };
_23 = _24 as isize;
_4 = &_1.0;
_20.1 = (_14,);
_28.2 = _20.1.0 < _2;
_27 = &_15.0;
_28.0 = _10.fld0 as u128;
_22 = _28.0;
_6 = core::ptr::addr_of!(_20.1.0);
_1 = _15;
_20.1 = (_15.0,);
_20.0 = (-28704431_i32) << _10.fld0;
_29 = _5 + _26;
_11 = (-2443775860313164966_i64);
Goto(bb11)
}
bb11 = {
_15.0 = _1.0;
_31 = _13;
match _11 {
0 => bb1,
1 => bb2,
340282366920938463460930831571455046490 => bb12,
_ => bb7
}
}
bb12 = {
_23 = 18293_i16 as isize;
_7.0 = core::ptr::addr_of!(_28);
_22 = !_28.0;
(*_6) = _2 != _1.0;
_7.0 = core::ptr::addr_of!(_28);
_23 = _16;
_26 = _5 - _29;
_33 = !_10.fld0;
_15 = _20.1;
_32 = (_28.2,);
_20.0 = (-1195287801_i32) >> _11;
(*_6) = !_32.0;
_6 = core::ptr::addr_of!(_14);
_13 = [_23,_16];
_1.0 = _15.0;
_4 = &_1.0;
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb11,
6 => bb7,
264517018668998256111421933343015290004 => bb13,
_ => bb8
}
}
bb13 = {
_29 = _16 as f64;
_21 = _5 + _5;
_28.3 = [_28.0,_22];
_38 = &mut _28.3;
_32 = (_28.2,);
_20.1 = _1;
_35 = '\u{9812f}';
_28.1 = !_11;
_8 = &mut _10;
_4 = Move(_27);
(*_8) = Adt21 { fld0: _33 };
_38 = &mut _28.3;
_38 = &mut (*_38);
_37 = 1_usize as u8;
_15.0 = (*_6);
match _11 {
0 => bb10,
1 => bb5,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463460930831571455046490 => bb19,
_ => bb18
}
}
bb14 = {
_23 = 18293_i16 as isize;
_7.0 = core::ptr::addr_of!(_28);
_22 = !_28.0;
(*_6) = _2 != _1.0;
_7.0 = core::ptr::addr_of!(_28);
_23 = _16;
_26 = _5 - _29;
_33 = !_10.fld0;
_15 = _20.1;
_32 = (_28.2,);
_20.0 = (-1195287801_i32) >> _11;
(*_6) = !_32.0;
_6 = core::ptr::addr_of!(_14);
_13 = [_23,_16];
_1.0 = _15.0;
_4 = &_1.0;
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb11,
6 => bb7,
264517018668998256111421933343015290004 => bb13,
_ => bb8
}
}
bb15 = {
_14 = (*_4);
_8 = &mut _10;
_3 = 71_i8;
(*_6) = (*_4) > (*_4);
_8 = &mut (*_8);
_13 = [(-9223372036854775808_isize),9223372036854775807_isize];
_2 = !_14;
_11 = (-2684225396650495107_i64) >> _3;
(*_8) = Adt21 { fld0: 17_u8 };
_3 = -35_i8;
(*_6) = (*_4);
(*_6) = _1.0;
_1.0 = _2;
_3 = '\u{f8cc6}' as i8;
_15.0 = _14;
_14 = !_15.0;
_8 = &mut _10;
(*_8) = Adt21 { fld0: 229_u8 };
Goto(bb8)
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
Return()
}
bb19 = {
_39 = _20.0 as f32;
_16 = _23;
_40 = 42958_u16;
_21 = 7_usize as f64;
_41.0 = _24 >> _16;
_10 = Adt21 { fld0: _37 };
_36 = _16;
_33 = _10.fld0;
(*_6) = _28.2;
_37 = !_10.fld0;
_42 = -_29;
_20 = (802517445_i32, _32);
_29 = _26 - _42;
_37 = _33;
_44.1 = core::ptr::addr_of_mut!(_40);
_20 = (190760819_i32, _32);
_28.1 = _29 as i64;
_16 = !_23;
_6 = core::ptr::addr_of!(_32.0);
_13 = _31;
_10 = Adt21 { fld0: _33 };
_20.0 = 2074215721_i32 >> _16;
_20 = ((-1586550986_i32), _1);
_1.0 = _32.0 ^ _28.2;
_32 = (_28.2,);
_28.1 = _35 as i64;
match _20.0 {
0 => bb12,
1 => bb17,
2 => bb9,
3 => bb20,
4 => bb21,
5 => bb22,
340282366920938463463374607430181660470 => bb24,
_ => bb23
}
}
bb20 = {
Return()
}
bb21 = {
_29 = _16 as f64;
_21 = _5 + _5;
_28.3 = [_28.0,_22];
_38 = &mut _28.3;
_32 = (_28.2,);
_20.1 = _1;
_35 = '\u{9812f}';
_28.1 = !_11;
_8 = &mut _10;
_4 = Move(_27);
(*_8) = Adt21 { fld0: _33 };
_38 = &mut _28.3;
_38 = &mut (*_38);
_37 = 1_usize as u8;
_15.0 = (*_6);
match _11 {
0 => bb10,
1 => bb5,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463460930831571455046490 => bb19,
_ => bb18
}
}
bb22 = {
_2 = _1.0 <= (*_6);
_6 = core::ptr::addr_of!((*_6));
_3 = !61_i8;
_1 = (_2,);
_5 = 243588945725166175044600213280214214665_u128 as f64;
_5 = 8562131461054590146_i64 as f64;
(*_6) = _2;
_3 = !49_i8;
(*_6) = !_2;
_4 = &(*_6);
_3 = -82_i8;
_5 = 2903310954228921205_u64 as f64;
_3 = -(-77_i8);
(*_6) = !_2;
_1 = (_2,);
_6 = core::ptr::addr_of!(_1.0);
(*_6) = _2 <= _2;
_4 = &(*_6);
_10.fld0 = 108_u8;
_5 = 12404456000253110719_usize as f64;
_6 = core::ptr::addr_of!(_14);
_13 = [(-9223372036854775808_isize),(-9223372036854775808_isize)];
match _10.fld0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
108 => bb7,
_ => bb6
}
}
bb23 = {
Return()
}
bb24 = {
(*_6) = !_2;
_41 = (_24,);
Goto(bb25)
}
bb25 = {
_28.0 = _22;
_27 = &_2;
_3 = 75_i8 | (-115_i8);
_11 = _28.1;
_6 = core::ptr::addr_of!(_44.2);
_28.0 = _22;
_33 = 7594012403331656153_u64 as u8;
_4 = Move(_27);
_8 = &mut _10;
_2 = !_14;
_31 = [_23,_36];
_8 = &mut (*_8);
Goto(bb26)
}
bb26 = {
_6 = core::ptr::addr_of!(_28.2);
_28.0 = !_22;
(*_8) = Adt21 { fld0: _37 };
_24 = _35 as u32;
_29 = -_5;
_4 = &_2;
_44.2 = !(*_4);
_44.1 = core::ptr::addr_of_mut!(_40);
_31 = [_16,_16];
_20 = (1469660894_i32, _1);
_31 = [_23,_16];
_28.1 = -_11;
_44.0 = core::ptr::addr_of_mut!(_5);
(*_38) = [_22,_22];
_28.3 = [_22,_22];
_31 = _13;
_4 = &_14;
_28.3 = [_22,_22];
_30 = _2 as i64;
_8 = &mut _10;
_36 = _42 as isize;
_38 = &mut _28.3;
(*_6) = _2;
match _20.0 {
0 => bb25,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb20,
5 => bb9,
6 => bb19,
1469660894 => bb27,
_ => bb17
}
}
bb27 = {
(*_8) = Adt21 { fld0: _37 };
Goto(bb28)
}
bb28 = {
_18 = (-37421827179812252033887392528822612250_i128);
_2 = !_14;
_49 = (*_6) as isize;
_35 = '\u{4b372}';
_36 = _49 + _16;
_43 = [415696793900168830_u64,17518680399726955809_u64];
_20.1.0 = !(*_4);
_43 = [5337855086601564767_u64,1912839513649047487_u64];
_41.0 = _35 as u32;
_27 = &(*_4);
_49 = -_36;
_48 = _18 as f32;
_7.0 = core::ptr::addr_of!(_28);
_54 = _41.0 as f32;
_21 = _26;
match _20.0 {
0 => bb29,
1469660894 => bb31,
_ => bb30
}
}
bb29 = {
Return()
}
bb30 = {
_6 = core::ptr::addr_of!(_28.2);
_28.0 = !_22;
(*_8) = Adt21 { fld0: _37 };
_24 = _35 as u32;
_29 = -_5;
_4 = &_2;
_44.2 = !(*_4);
_44.1 = core::ptr::addr_of_mut!(_40);
_31 = [_16,_16];
_20 = (1469660894_i32, _1);
_31 = [_23,_16];
_28.1 = -_11;
_44.0 = core::ptr::addr_of_mut!(_5);
(*_38) = [_22,_22];
_28.3 = [_22,_22];
_31 = _13;
_4 = &_14;
_28.3 = [_22,_22];
_30 = _2 as i64;
_8 = &mut _10;
_36 = _42 as isize;
_38 = &mut _28.3;
(*_6) = _2;
match _20.0 {
0 => bb25,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb20,
5 => bb9,
6 => bb19,
1469660894 => bb27,
_ => bb17
}
}
bb31 = {
_5 = _42 * _26;
_32 = (_14,);
_28.2 = _32.0;
_22 = _28.0;
_15 = _32;
_2 = _1.0;
_55 = &mut _6;
_31 = [_49,_36];
_18 = 13744764325478887174_u64 as i128;
_20.1 = ((*_4),);
_44.2 = _14;
_27 = &(*_4);
_15 = _20.1;
_1 = _32;
_21 = -_5;
_41 = (_24,);
_18 = (-90395173226767811459138860114493871707_i128);
Goto(bb32)
}
bb32 = {
_32.0 = (*_6);
_56 = [14841593324371970717_usize,70604773079568164_usize];
match _20.0 {
0 => bb25,
1 => bb2,
2 => bb33,
3 => bb34,
4 => bb35,
5 => bb36,
6 => bb37,
1469660894 => bb39,
_ => bb38
}
}
bb33 = {
_15.0 = _1.0;
_31 = _13;
match _11 {
0 => bb1,
1 => bb2,
340282366920938463460930831571455046490 => bb12,
_ => bb7
}
}
bb34 = {
_29 = _16 as f64;
_21 = _5 + _5;
_28.3 = [_28.0,_22];
_38 = &mut _28.3;
_32 = (_28.2,);
_20.1 = _1;
_35 = '\u{9812f}';
_28.1 = !_11;
_8 = &mut _10;
_4 = Move(_27);
(*_8) = Adt21 { fld0: _33 };
_38 = &mut _28.3;
_38 = &mut (*_38);
_37 = 1_usize as u8;
_15.0 = (*_6);
match _11 {
0 => bb10,
1 => bb5,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463460930831571455046490 => bb19,
_ => bb18
}
}
bb35 = {
Return()
}
bb36 = {
_14 = (*_4);
_8 = &mut _10;
_3 = 71_i8;
(*_6) = (*_4) > (*_4);
_8 = &mut (*_8);
_13 = [(-9223372036854775808_isize),9223372036854775807_isize];
_2 = !_14;
_11 = (-2684225396650495107_i64) >> _3;
(*_8) = Adt21 { fld0: 17_u8 };
_3 = -35_i8;
(*_6) = (*_4);
(*_6) = _1.0;
_1.0 = _2;
_3 = '\u{f8cc6}' as i8;
_15.0 = _14;
_14 = !_15.0;
_8 = &mut _10;
(*_8) = Adt21 { fld0: 229_u8 };
Goto(bb8)
}
bb37 = {
(*_8) = Adt21 { fld0: _37 };
Goto(bb28)
}
bb38 = {
_39 = _20.0 as f32;
_16 = _23;
_40 = 42958_u16;
_21 = 7_usize as f64;
_41.0 = _24 >> _16;
_10 = Adt21 { fld0: _37 };
_36 = _16;
_33 = _10.fld0;
(*_6) = _28.2;
_37 = !_10.fld0;
_42 = -_29;
_20 = (802517445_i32, _32);
_29 = _26 - _42;
_37 = _33;
_44.1 = core::ptr::addr_of_mut!(_40);
_20 = (190760819_i32, _32);
_28.1 = _29 as i64;
_16 = !_23;
_6 = core::ptr::addr_of!(_32.0);
_13 = _31;
_10 = Adt21 { fld0: _33 };
_20.0 = 2074215721_i32 >> _16;
_20 = ((-1586550986_i32), _1);
_1.0 = _32.0 ^ _28.2;
_32 = (_28.2,);
_28.1 = _35 as i64;
match _20.0 {
0 => bb12,
1 => bb17,
2 => bb9,
3 => bb20,
4 => bb21,
5 => bb22,
340282366920938463463374607430181660470 => bb24,
_ => bb23
}
}
bb39 = {
_20.0 = -1608687594_i32;
_59.2 = _43;
_23 = _5 as isize;
(*_6) = _44.2;
_35 = '\u{106ddd}';
_46 = _3 << _36;
_31 = [_49,_36];
_2 = (*_6);
_46 = _18 as i8;
(*_38) = [_22,_22];
_59.0 = [_22,_22,_22,_28.0];
(*_55) = core::ptr::addr_of!(_15.0);
_20 = (787230953_i32, _1);
_15.0 = _14 & _2;
_20.0 = -(-354627287_i32);
_13 = [_36,_36];
_2 = (*_27) != (*_6);
_10 = Adt21 { fld0: _33 };
Goto(bb40)
}
bb40 = {
_15.0 = !_28.2;
_13 = [_49,_49];
_3 = _46;
_15.0 = _30 == _30;
_15.0 = !_1.0;
_63 = _37 * _33;
(*_6) = !_20.1.0;
_50 = core::ptr::addr_of_mut!(_58.0);
_41.0 = _37 as u32;
_10.fld0 = _63 << _30;
_6 = core::ptr::addr_of!(_20.1.0);
_57 = &mut _59.0;
_56 = [13972767038965719118_usize,0_usize];
_43 = [1024777612948689975_u64,2017832062976207804_u64];
_26 = -_21;
_64 = [16466111855825778352_u64,6639270170179102018_u64,3857909549423906411_u64,15216520205857460702_u64];
_14 = _1.0 | _15.0;
_42 = _21 - _26;
Goto(bb41)
}
bb41 = {
_66.3 = core::ptr::addr_of!(_66.1);
_67 = core::ptr::addr_of_mut!(_53);
_13 = [_36,_49];
_27 = Move(_4);
_66.1 = _28.3;
_2 = _44.2;
_45 = &_66.3;
_20.1 = _32;
_15.0 = _2 == _14;
_58.1 = &_22;
_28.0 = !_22;
_28.0 = !_22;
_26 = _5;
_71 = 14008956205574655748_u64 as i16;
_16 = !_36;
(*_67) = core::ptr::addr_of_mut!(_28.3);
_1.0 = _30 <= _30;
(*_57) = [_28.0,_28.0,_22,_22];
_45 = &_66.3;
_42 = _26;
_4 = &_14;
_12 = core::ptr::addr_of!(_73);
Goto(bb42)
}
bb42 = {
_74.2 = _59.2;
_70 = (2221833732798262132_u64, Move(_58.1));
(*_67) = core::ptr::addr_of_mut!((*_53));
_41 = (_24,);
_58.0 = _18 as u64;
_7.0 = core::ptr::addr_of!(_28);
_43 = [(*_50),(*_50)];
_49 = (*_50) as isize;
_74 = (_59.0, Move(_66.3), _59.2);
_32.0 = _1.0;
_49 = -_16;
_33 = _28.0 as u8;
(*_67) = core::ptr::addr_of_mut!((*_53));
_18 = !54055071573816793109611160085317721199_i128;
_78.0 = Move(_4);
_1.0 = (*_6) <= (*_6);
Call(_44.1 = fn6(Move((*_67)), _13, _10, _32.0, _32, _13, Move(_7), _13, _36, _32), ReturnTo(bb43), UnwindUnreachable())
}
bb43 = {
_78.0 = &(*_6);
match _70.0 {
0 => bb16,
1 => bb7,
2 => bb31,
2221833732798262132 => bb45,
_ => bb44
}
}
bb44 = {
_23 = 18293_i16 as isize;
_7.0 = core::ptr::addr_of!(_28);
_22 = !_28.0;
(*_6) = _2 != _1.0;
_7.0 = core::ptr::addr_of!(_28);
_23 = _16;
_26 = _5 - _29;
_33 = !_10.fld0;
_15 = _20.1;
_32 = (_28.2,);
_20.0 = (-1195287801_i32) >> _11;
(*_6) = !_32.0;
_6 = core::ptr::addr_of!(_14);
_13 = [_23,_16];
_1.0 = _15.0;
_4 = &_1.0;
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb11,
6 => bb7,
264517018668998256111421933343015290004 => bb13,
_ => bb8
}
}
bb45 = {
_25 = &_64;
_66 = (_10.fld0, _28.3, _20.0, Move(_74.1));
_7.0 = core::ptr::addr_of!(_28);
_46 = _3;
_12 = core::ptr::addr_of!(_73);
_28.3 = [_28.0,_22];
_58.1 = &_28.0;
_56 = [7_usize,6501549394294030829_usize];
(*_12) = [_18,_18,_18,_18,_18,_18,_18];
_44.2 = _1.0;
_29 = _39 as f64;
_80.0 = _15.0;
_15 = (_20.1.0,);
_74.2 = [(*_50),_70.0];
_29 = _3 as f64;
_79 = _35;
_58.0 = _54 as u64;
_45 = &_66.3;
_21 = _26 - _42;
_76 = !_28.0;
(*_67) = core::ptr::addr_of_mut!(_28.3);
match _70.0 {
0 => bb22,
1 => bb17,
2 => bb46,
3 => bb47,
4 => bb48,
2221833732798262132 => bb50,
_ => bb49
}
}
bb46 = {
(*_8) = Adt21 { fld0: _37 };
Goto(bb28)
}
bb47 = {
(*_6) = !_2;
_41 = (_24,);
Goto(bb25)
}
bb48 = {
_6 = core::ptr::addr_of!(_28.2);
_28.0 = !_22;
(*_8) = Adt21 { fld0: _37 };
_24 = _35 as u32;
_29 = -_5;
_4 = &_2;
_44.2 = !(*_4);
_44.1 = core::ptr::addr_of_mut!(_40);
_31 = [_16,_16];
_20 = (1469660894_i32, _1);
_31 = [_23,_16];
_28.1 = -_11;
_44.0 = core::ptr::addr_of_mut!(_5);
(*_38) = [_22,_22];
_28.3 = [_22,_22];
_31 = _13;
_4 = &_14;
_28.3 = [_22,_22];
_30 = _2 as i64;
_8 = &mut _10;
_36 = _42 as isize;
_38 = &mut _28.3;
(*_6) = _2;
match _20.0 {
0 => bb25,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb20,
5 => bb9,
6 => bb19,
1469660894 => bb27,
_ => bb17
}
}
bb49 = {
_29 = _16 as f64;
_21 = _5 + _5;
_28.3 = [_28.0,_22];
_38 = &mut _28.3;
_32 = (_28.2,);
_20.1 = _1;
_35 = '\u{9812f}';
_28.1 = !_11;
_8 = &mut _10;
_4 = Move(_27);
(*_8) = Adt21 { fld0: _33 };
_38 = &mut _28.3;
_38 = &mut (*_38);
_37 = 1_usize as u8;
_15.0 = (*_6);
match _11 {
0 => bb10,
1 => bb5,
2 => bb14,
3 => bb15,
4 => bb16,
5 => bb17,
340282366920938463460930831571455046490 => bb19,
_ => bb18
}
}
bb50 = {
_20 = (_66.2, _80);
_59 = (_74.0, Move(_66.3), _74.2);
_44.1 = core::ptr::addr_of_mut!(_40);
_83.0 = core::ptr::addr_of_mut!(_21);
_29 = _42 * _26;
_74.1 = core::ptr::addr_of!((*_53));
_40 = 1675_u16;
_20 = (_66.2, _15);
_31 = [_16,_36];
_76 = _28.0;
_14 = _66.0 < _37;
_68 = _80.0 as isize;
_28.3 = _66.1;
_20.1.0 = !_15.0;
_80.0 = !_14;
_4 = &_2;
RET = core::ptr::addr_of_mut!((*_25));
_74 = (_59.0, Move(_59.1), _59.2);
_74.0 = _59.0;
_24 = !_41.0;
_58.1 = &_22;
_67 = core::ptr::addr_of_mut!(_53);
_46 = !_3;
Goto(bb51)
}
bb51 = {
Call(_91 = dump_var(5_usize, 23_usize, Move(_23), 80_usize, Move(_80), 28_usize, Move(_28), 76_usize, Move(_76)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_91 = dump_var(5_usize, 49_usize, Move(_49), 20_usize, Move(_20), 18_usize, Move(_18), 73_usize, Move(_73)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_91 = dump_var(5_usize, 22_usize, Move(_22), 13_usize, Move(_13), 36_usize, Move(_36), 43_usize, Move(_43)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_91 = dump_var(5_usize, 35_usize, Move(_35), 68_usize, Move(_68), 46_usize, Move(_46), 3_usize, Move(_3)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_91 = dump_var(5_usize, 2_usize, Move(_2), 92_usize, _92, 92_usize, _92, 92_usize, _92), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: *mut [u128; 2],mut _2: [isize; 2],mut _3: Adt21,mut _4: bool,mut _5: (bool,),mut _6: [isize; 2],mut _7: (*const (u128, i64, bool, [u128; 2]),),mut _8: [isize; 2],mut _9: isize,mut _10: (bool,)) -> *mut u16 {
mir! {
type RET = *mut u16;
let _11: Adt23;
let _12: [usize; 2];
let _13: *mut u64;
let _14: isize;
let _15: i128;
let _16: *mut *mut [u128; 2];
let _17: Adt23;
let _18: i8;
let _19: char;
let _20: [i128; 4];
let _21: [i128; 4];
let _22: *mut i64;
let _23: isize;
let _24: f32;
let _25: ();
let _26: ();
{
_4 = !_10.0;
_3.fld0 = 164_u8;
_5.0 = !_10.0;
_6 = [_9,_9];
_8 = [_9,_9];
_3 = Adt21 { fld0: 63_u8 };
_10.0 = _4;
_6 = _8;
_10 = _5;
_5 = (_4,);
_8 = [_9,_9];
_10 = _5;
_9 = 9223372036854775807_isize | (-9223372036854775808_isize);
_6 = [_9,_9];
_3 = Adt21 { fld0: 131_u8 };
_10 = _5;
_3 = Adt21 { fld0: 147_u8 };
_6 = _8;
_10.0 = !_5.0;
match _3.fld0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
147 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_10 = (_5.0,);
_3 = Adt21 { fld0: 34_u8 };
_5.0 = _4 | _10.0;
_8 = _2;
_4 = _10.0;
_2 = [_9,_9];
match _3.fld0 {
0 => bb1,
34 => bb8,
_ => bb7
}
}
bb7 = {
Return()
}
bb8 = {
_2 = _6;
_10.0 = !_5.0;
Call(RET = fn7(), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
_2 = [_9,_9];
_3 = Adt21 { fld0: 29_u8 };
_3.fld0 = !217_u8;
_9 = -9223372036854775807_isize;
_8 = _6;
_6 = _8;
_5 = (_10.0,);
_10 = _5;
_12 = [10347322478121720199_usize,6392464848883007162_usize];
_3.fld0 = 90_i8 as u8;
_5 = (_10.0,);
Goto(bb10)
}
bb10 = {
_5 = (_4,);
_5 = _10;
_8 = _6;
_4 = !_5.0;
_10.0 = _4;
_3 = Adt21 { fld0: 245_u8 };
_5.0 = _4;
_3 = Adt21 { fld0: 14_u8 };
_10.0 = !_4;
_5.0 = _10.0;
_9 = (-9223372036854775808_isize);
_12 = [4_usize,5_usize];
_10 = (_5.0,);
_12 = [10476990182409979544_usize,2_usize];
_10 = _5;
_2 = [_9,_9];
_12 = [10170616853963139989_usize,4248430494403294520_usize];
_10 = (_4,);
_5.0 = _4 == _10.0;
_5.0 = _10.0 == _10.0;
_15 = 124506010003517512116484559456514267098_i128;
_14 = _9;
_3 = Adt21 { fld0: 20_u8 };
_10.0 = _4;
_4 = _10.0 != _5.0;
_5.0 = !_4;
_12 = [0_usize,2116572915624477423_usize];
_9 = _14;
Goto(bb11)
}
bb11 = {
_3 = Adt21 { fld0: 224_u8 };
_18 = (-59_i8) & 88_i8;
_9 = _14;
_3 = Adt21 { fld0: 64_u8 };
_2 = [_14,_14];
_10.0 = _4;
_8 = _6;
_8 = [_14,_9];
_14 = -_9;
_10 = (_4,);
_3.fld0 = 75_u8 + 84_u8;
_10 = (_5.0,);
_2 = _6;
_16 = core::ptr::addr_of_mut!(_1);
_12 = [15973176352268607374_usize,16664943602160509854_usize];
_16 = core::ptr::addr_of_mut!(_1);
_2 = _6;
_4 = _5.0 < _10.0;
_20 = [_15,_15,_15,_15];
_16 = core::ptr::addr_of_mut!((*_16));
_19 = '\u{8a7ac}';
_6 = [_14,_14];
_6 = _2;
_14 = _19 as isize;
_15 = -20696944047406335420051073817407672071_i128;
_18 = 37_i8;
_8 = [_14,_9];
match _18 {
0 => bb9,
1 => bb10,
2 => bb7,
3 => bb4,
4 => bb5,
5 => bb6,
37 => bb13,
_ => bb12
}
}
bb12 = {
Return()
}
bb13 = {
_3 = Adt21 { fld0: 190_u8 };
_9 = _14;
_8 = [_14,_14];
Goto(bb14)
}
bb14 = {
_8 = _2;
_14 = !_9;
_16 = core::ptr::addr_of_mut!((*_16));
_6 = _8;
_15 = 7363088601195664653_u64 as i128;
_21 = [_15,_15,_15,_15];
_9 = -_14;
_14 = -_9;
_20 = [_15,_15,_15,_15];
_9 = _3.fld0 as isize;
_19 = '\u{519f1}';
_6 = _8;
_9 = -_14;
_3.fld0 = 119_u8;
_8 = _6;
_21 = [_15,_15,_15,_15];
_9 = _14 & _14;
_19 = '\u{88294}';
_19 = '\u{6a067}';
_24 = (-5881_i16) as f32;
_5 = (_10.0,);
_5 = _10;
_16 = core::ptr::addr_of_mut!(_1);
Goto(bb15)
}
bb15 = {
Call(_25 = dump_var(6_usize, 21_usize, Move(_21), 6_usize, Move(_6), 19_usize, Move(_19), 12_usize, Move(_12)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_25 = dump_var(6_usize, 9_usize, Move(_9), 15_usize, Move(_15), 8_usize, Move(_8), 26_usize, _26), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7() -> *mut u16 {
mir! {
type RET = *mut u16;
let _1: &'static mut u8;
let _2: (*mut u64, Adt34, char, &'static mut [u128; 2]);
let _3: [u16; 2];
let _4: bool;
let _5: bool;
let _6: i16;
let _7: f32;
let _8: (u128, i64, bool, [u128; 2]);
let _9: i16;
let _10: i32;
let _11: [u64; 2];
let _12: &'static i32;
let _13: [isize; 2];
let _14: bool;
let _15: Adt79;
let _16: Adt48;
let _17: ([u128; 4], *const [u128; 2], [u64; 2]);
let _18: i64;
let _19: [i128; 4];
let _20: f64;
let _21: (u64, &'static u128);
let _22: &'static mut &'static mut [i128; 4];
let _23: (*mut u64, Adt34, char, &'static mut [u128; 2]);
let _24: &'static i32;
let _25: Adt85;
let _26: (char, i64, u128, &'static bool);
let _27: &'static mut *const u128;
let _28: char;
let _29: [usize; 6];
let _30: Adt79;
let _31: [u128; 4];
let _32: (u32,);
let _33: &'static mut [u128; 4];
let _34: char;
let _35: i64;
let _36: Adt21;
let _37: &'static mut *mut u64;
let _38: isize;
let _39: &'static mut u8;
let _40: isize;
let _41: f32;
let _42: [i128; 4];
let _43: &'static mut u8;
let _44: u16;
let _45: (u128, i64, bool, [u128; 2]);
let _46: isize;
let _47: usize;
let _48: i8;
let _49: (*mut f64, *mut u16, bool);
let _50: ();
let _51: ();
{
Goto(bb1)
}
bb1 = {
_2.2 = '\u{30c18}';
_3 = [42770_u16,56544_u16];
_3 = [3164_u16,33040_u16];
_2.2 = '\u{5ffe}';
_3 = [8859_u16,49026_u16];
_2.2 = '\u{a2b34}';
_4 = _2.2 >= _2.2;
_2.2 = '\u{e48a8}';
_5 = _4 != _4;
_6 = 45_isize as i16;
_6 = _2.2 as i16;
_2.2 = '\u{10f6b5}';
_4 = _5;
_2.1 = Adt34::Variant1 { fld0: 150_u8 };
_2.2 = '\u{d5773}';
Call(_4 = fn8(_5, _5, _3, _5, _5, _5, _5, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.1 = Adt34::Variant1 { fld0: 252_u8 };
Goto(bb3)
}
bb3 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb4 = {
_2.3 = &mut _8.3;
_8.3 = [_8.0,_8.0];
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 56_u8;
_10 = -837240043_i32;
_11 = [16879384959061832319_u64,9599528495440080254_u64];
_11 = [17557005949983611205_u64,1071186135183239038_u64];
_2.3 = &mut _8.3;
SetDiscriminant(_2.1, 0);
place!(Field::<Adt21>(Variant(_2.1, 0), 6)) = Adt21 { fld0: 214_u8 };
_4 = !_5;
_7 = 9804284187838760181_usize as f32;
_8.1 = 6777041768752530679_i64;
_2.1 = Adt34::Variant1 { fld0: 198_u8 };
_13 = [(-53_isize),(-25_isize)];
_12 = &_10;
_14 = _5 < _4;
match _8.0 {
0 => bb2,
1 => bb5,
213719029091791634913921442054783677929 => bb7,
_ => bb6
}
}
bb5 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb6 = {
_2.1 = Adt34::Variant1 { fld0: 252_u8 };
Goto(bb3)
}
bb7 = {
_12 = &_10;
_8.2 = _4;
_8.2 = _14;
_6 = !2225_i16;
_10 = 1970674083_i32;
_17.1 = core::ptr::addr_of!(_8.3);
_11 = [14348796927460936299_u64,3618056779570429024_u64];
_17.0 = [_8.0,_8.0,_8.0,_8.0];
_3 = [49414_u16,29489_u16];
_2.3 = &mut _8.3;
_5 = !_14;
_8.1 = (-7298309531940820439_i64) ^ 2044409978430195303_i64;
_18 = _8.1;
_9 = _6;
_17.1 = core::ptr::addr_of!(_8.3);
_11 = [10691466122437066589_u64,234824799399602989_u64];
_11 = [17951161233861004000_u64,7843121052209774304_u64];
_2.3 = &mut _8.3;
_2.1 = Adt34::Variant1 { fld0: 205_u8 };
_8.1 = _10 as i64;
_11 = [5815993732127687527_u64,9232767267107221722_u64];
_14 = _8.2;
_15 = Adt79::Variant1 { fld0: (-85_i8),fld1: _10 };
place!(Field::<i8>(Variant(_15, 1), 0)) = 9559277819020781189_usize as i8;
SetDiscriminant(_15, 1);
_2.1 = Adt34::Variant1 { fld0: 160_u8 };
_2.1 = Adt34::Variant2 { fld0: Move(_17.1),fld1: _2.2,fld2: _8.0,fld3: _10 };
Goto(bb8)
}
bb8 = {
_3 = [6468_u16,37885_u16];
SetDiscriminant(_2.1, 1);
_9 = !_6;
_9 = _6;
_5 = _4 > _14;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
_8.1 = _18 | _18;
_20 = _8.0 as f64;
_21.0 = 81_u8 as u64;
_2.0 = core::ptr::addr_of_mut!(_21.0);
_17.0 = [_8.0,_8.0,_8.0,_8.0];
place!(Field::<u8>(Variant(_2.1, 1), 0)) = !21_u8;
SetDiscriminant(_2.1, 1);
_2.3 = &mut _8.3;
_23.3 = Move(_2.3);
_2.3 = &mut _8.3;
Call(_10 = fn13(_7), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
place!(Field::<i8>(Variant(_15, 1), 0)) = _21.0 as i8;
_17.2 = [_21.0,_21.0];
_23.2 = _2.2;
_7 = 9223372036854775807_isize as f32;
_3 = [25993_u16,30965_u16];
_26.1 = -_8.1;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
match _8.0 {
0 => bb10,
213719029091791634913921442054783677929 => bb12,
_ => bb11
}
}
bb10 = {
_2.1 = Adt34::Variant1 { fld0: 252_u8 };
Goto(bb3)
}
bb11 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb12 = {
_26.0 = _23.2;
_11 = [_21.0,_21.0];
_23.0 = Move(_2.0);
_26.3 = &_8.2;
_23.2 = _2.2;
_28 = _23.2;
_24 = &_10;
_8.1 = 14736492136337301142_usize as i64;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
_2.0 = core::ptr::addr_of_mut!(_21.0);
_13 = [(-9223372036854775808_isize),103_isize];
_8.2 = _26.1 != _26.1;
_2.2 = _28;
_21.0 = 6_usize as u64;
_19 = [(-85206713296141332217948491097978494163_i128),(-89000371029388159026984885480192655331_i128),80158162338119380548123169264936878325_i128,(-150401388534632690833022605476394274146_i128)];
_18 = _26.1;
_29 = [3_usize,5_usize,5_usize,8381834056901728870_usize,1280546111120951925_usize,8685960952821799398_usize];
_23.3 = &mut _8.3;
_32 = (2448263431_u32,);
Call(_17 = fn14(_14, _8.2, _8, Move(_26.3)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_8.3 = [_8.0,_8.0];
_32.0 = 1609922354_u32;
_33 = &mut _17.0;
_30 = Adt79::Variant0 { fld0: _19 };
_17.1 = core::ptr::addr_of!(_8.3);
_24 = Move(_12);
match _32.0 {
0 => bb11,
1 => bb2,
1609922354 => bb15,
_ => bb14
}
}
bb14 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb15 = {
_9 = _6;
_34 = _2.2;
_29 = [7_usize,7645707354895276569_usize,12588799662649847733_usize,1_usize,4738089710216695869_usize,2799484993308024007_usize];
_36 = Adt21 { fld0: 172_u8 };
_2.0 = core::ptr::addr_of_mut!(_21.0);
_37 = &mut _2.0;
_23.1 = Adt34::Variant2 { fld0: Move(_17.1),fld1: _26.0,fld2: _8.0,fld3: _10 };
_26.3 = &_14;
(*_37) = Move(_23.0);
_2.0 = core::ptr::addr_of_mut!(_21.0);
_21.1 = &_8.0;
_19 = [(-40007898249261640043762749141293968844_i128),(-147809989160114023303492599567739192412_i128),(-10453332825485176184695535263963441375_i128),(-80685597299544377281077233055324073978_i128)];
(*_33) = [Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),_8.0,Field::<u128>(Variant(_23.1, 2), 2)];
SetDiscriminant(_30, 2);
_26.3 = &_4;
_13 = [9223372036854775807_isize,(-127_isize)];
place!(Field::<[u64; 2]>(Variant(_30, 2), 0)) = _17.2;
_5 = Field::<char>(Variant(_23.1, 2), 1) != _28;
_12 = &_10;
place!(Field::<*const [u128; 2]>(Variant(_23.1, 2), 0)) = core::ptr::addr_of!(_8.3);
match _32.0 {
0 => bb16,
1609922354 => bb18,
_ => bb17
}
}
bb16 = {
place!(Field::<i8>(Variant(_15, 1), 0)) = _21.0 as i8;
_17.2 = [_21.0,_21.0];
_23.2 = _2.2;
_7 = 9223372036854775807_isize as f32;
_3 = [25993_u16,30965_u16];
_26.1 = -_8.1;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
match _8.0 {
0 => bb10,
213719029091791634913921442054783677929 => bb12,
_ => bb11
}
}
bb17 = {
_3 = [6468_u16,37885_u16];
SetDiscriminant(_2.1, 1);
_9 = !_6;
_9 = _6;
_5 = _4 > _14;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
_8.1 = _18 | _18;
_20 = _8.0 as f64;
_21.0 = 81_u8 as u64;
_2.0 = core::ptr::addr_of_mut!(_21.0);
_17.0 = [_8.0,_8.0,_8.0,_8.0];
place!(Field::<u8>(Variant(_2.1, 1), 0)) = !21_u8;
SetDiscriminant(_2.1, 1);
_2.3 = &mut _8.3;
_23.3 = Move(_2.3);
_2.3 = &mut _8.3;
Call(_10 = fn13(_7), ReturnTo(bb9), UnwindUnreachable())
}
bb18 = {
_2.0 = core::ptr::addr_of_mut!(_21.0);
_23.0 = Move(_2.0);
_15 = Adt79::Variant0 { fld0: _19 };
place!(Field::<[usize; 6]>(Variant(_30, 2), 1)) = [2_usize,2_usize,7_usize,7_usize,4_usize,2_usize];
_10 = Field::<i32>(Variant(_23.1, 2), 3);
SetDiscriminant(_15, 1);
place!(Field::<i8>(Variant(_15, 1), 0)) = _36.fld0 as i8;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = _36.fld0;
_26.2 = Field::<u128>(Variant(_23.1, 2), 2);
_31 = [Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),_26.2];
place!(Field::<[usize; 6]>(Variant(_30, 2), 1)) = _29;
_8.1 = _7 as i64;
Goto(bb19)
}
bb19 = {
_2.0 = core::ptr::addr_of_mut!(_21.0);
_17.0 = [_26.2,Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),_26.2];
place!(Field::<u16>(Variant(_30, 2), 2)) = !3355_u16;
_34 = _23.2;
_31 = _17.0;
_5 = _14;
_17.0 = _31;
place!(Field::<i32>(Variant(_15, 1), 1)) = Field::<u128>(Variant(_23.1, 2), 2) as i32;
_35 = _26.1;
_19 = [(-20941765799879658927165925087102533641_i128),(-53508976408869713834842237959074640074_i128),2273825516012273933603761464861554835_i128,(-63346454548165479901108895715255716674_i128)];
_42 = _19;
_26.0 = Field::<char>(Variant(_23.1, 2), 1);
_8.2 = _23.2 != _26.0;
_2.1 = Adt34::Variant1 { fld0: _36.fld0 };
_6 = _9 | _9;
_39 = &mut _36.fld0;
_5 = _26.2 != _8.0;
_5 = _14;
_43 = Move(_39);
Goto(bb20)
}
bb20 = {
_46 = Field::<i8>(Variant(_15, 1), 0) as isize;
_8.1 = Field::<i8>(Variant(_15, 1), 0) as i64;
_15 = _30;
_17.0 = _31;
_31 = [_8.0,_8.0,_8.0,_26.2];
_34 = Field::<char>(Variant(_23.1, 2), 1);
_26.2 = !_8.0;
_28 = Field::<char>(Variant(_23.1, 2), 1);
_48 = _8.0 as i8;
_6 = Field::<u16>(Variant(_15, 2), 2) as i16;
_30 = Adt79::Variant0 { fld0: _19 };
_45 = (Field::<u128>(Variant(_23.1, 2), 2), _18, _8.2, _8.3);
_9 = _20 as i16;
_29 = [7329556283742230829_usize,0_usize,6_usize,16790546972581693790_usize,7_usize,7405755514542300045_usize];
_17.0 = [_45.0,_8.0,_8.0,Field::<u128>(Variant(_23.1, 2), 2)];
_47 = 11344183074857342955_usize;
match _8.0 {
0 => bb21,
1 => bb22,
2 => bb23,
3 => bb24,
4 => bb25,
5 => bb26,
213719029091791634913921442054783677929 => bb28,
_ => bb27
}
}
bb21 = {
_2.0 = core::ptr::addr_of_mut!(_21.0);
_17.0 = [_26.2,Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),_26.2];
place!(Field::<u16>(Variant(_30, 2), 2)) = !3355_u16;
_34 = _23.2;
_31 = _17.0;
_5 = _14;
_17.0 = _31;
place!(Field::<i32>(Variant(_15, 1), 1)) = Field::<u128>(Variant(_23.1, 2), 2) as i32;
_35 = _26.1;
_19 = [(-20941765799879658927165925087102533641_i128),(-53508976408869713834842237959074640074_i128),2273825516012273933603761464861554835_i128,(-63346454548165479901108895715255716674_i128)];
_42 = _19;
_26.0 = Field::<char>(Variant(_23.1, 2), 1);
_8.2 = _23.2 != _26.0;
_2.1 = Adt34::Variant1 { fld0: _36.fld0 };
_6 = _9 | _9;
_39 = &mut _36.fld0;
_5 = _26.2 != _8.0;
_5 = _14;
_43 = Move(_39);
Goto(bb20)
}
bb22 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb23 = {
_3 = [6468_u16,37885_u16];
SetDiscriminant(_2.1, 1);
_9 = !_6;
_9 = _6;
_5 = _4 > _14;
_17.0 = [_8.0,_8.0,_8.0,_8.0];
_8.1 = _18 | _18;
_20 = _8.0 as f64;
_21.0 = 81_u8 as u64;
_2.0 = core::ptr::addr_of_mut!(_21.0);
_17.0 = [_8.0,_8.0,_8.0,_8.0];
place!(Field::<u8>(Variant(_2.1, 1), 0)) = !21_u8;
SetDiscriminant(_2.1, 1);
_2.3 = &mut _8.3;
_23.3 = Move(_2.3);
_2.3 = &mut _8.3;
Call(_10 = fn13(_7), ReturnTo(bb9), UnwindUnreachable())
}
bb24 = {
_2.1 = Adt34::Variant1 { fld0: 252_u8 };
Goto(bb3)
}
bb25 = {
_9 = _6;
_34 = _2.2;
_29 = [7_usize,7645707354895276569_usize,12588799662649847733_usize,1_usize,4738089710216695869_usize,2799484993308024007_usize];
_36 = Adt21 { fld0: 172_u8 };
_2.0 = core::ptr::addr_of_mut!(_21.0);
_37 = &mut _2.0;
_23.1 = Adt34::Variant2 { fld0: Move(_17.1),fld1: _26.0,fld2: _8.0,fld3: _10 };
_26.3 = &_14;
(*_37) = Move(_23.0);
_2.0 = core::ptr::addr_of_mut!(_21.0);
_21.1 = &_8.0;
_19 = [(-40007898249261640043762749141293968844_i128),(-147809989160114023303492599567739192412_i128),(-10453332825485176184695535263963441375_i128),(-80685597299544377281077233055324073978_i128)];
(*_33) = [Field::<u128>(Variant(_23.1, 2), 2),Field::<u128>(Variant(_23.1, 2), 2),_8.0,Field::<u128>(Variant(_23.1, 2), 2)];
SetDiscriminant(_30, 2);
_26.3 = &_4;
_13 = [9223372036854775807_isize,(-127_isize)];
place!(Field::<[u64; 2]>(Variant(_30, 2), 0)) = _17.2;
_5 = Field::<char>(Variant(_23.1, 2), 1) != _28;
_12 = &_10;
place!(Field::<*const [u128; 2]>(Variant(_23.1, 2), 0)) = core::ptr::addr_of!(_8.3);
match _32.0 {
0 => bb16,
1609922354 => bb18,
_ => bb17
}
}
bb26 = {
_2.1 = Adt34::Variant1 { fld0: 252_u8 };
Goto(bb3)
}
bb27 = {
_6 = -9019_i16;
_6 = (-6779_i16);
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 35_u8 << _6;
_3 = [1036_u16,20930_u16];
_3 = [20258_u16,45597_u16];
_2.1 = Adt34::Variant1 { fld0: 216_u8 };
_4 = _5;
_8.2 = !_4;
_4 = _8.2 > _8.2;
_8.0 = 213719029091791634913921442054783677929_u128;
_2.2 = '\u{5f32e}';
_8.3 = [_8.0,_8.0];
_4 = !_8.2;
place!(Field::<u8>(Variant(_2.1, 1), 0)) = 189_u8 * 144_u8;
_3 = [60294_u16,39295_u16];
_11 = [7249062327866909820_u64,14789721871952990036_u64];
Goto(bb4)
}
bb28 = {
RET = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_15, 2), 2)));
_34 = _28;
_36 = Adt21 { fld0: Field::<u8>(Variant(_2.1, 1), 0) };
_32.0 = _36.fld0 as u32;
_3 = [(*RET),(*RET)];
_2.1 = Move(_23.1);
_37 = &mut _23.0;
_49.1 = core::ptr::addr_of_mut!((*RET));
_40 = _32.0 as isize;
place!(Field::<*const [u128; 2]>(Variant(_2.1, 2), 0)) = core::ptr::addr_of!(_8.3);
_49.1 = core::ptr::addr_of_mut!(place!(Field::<u16>(Variant(_15, 2), 2)));
_36 = Adt21 { fld0: 55_u8 };
_2.0 = Move(_23.0);
Goto(bb29)
}
bb29 = {
Call(_50 = dump_var(7_usize, 31_usize, Move(_31), 29_usize, Move(_29), 46_usize, Move(_46), 5_usize, Move(_5)), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
Call(_50 = dump_var(7_usize, 18_usize, Move(_18), 9_usize, Move(_9), 42_usize, Move(_42), 48_usize, Move(_48)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_50 = dump_var(7_usize, 8_usize, Move(_8), 13_usize, Move(_13), 35_usize, Move(_35), 47_usize, Move(_47)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: bool,mut _2: bool,mut _3: [u16; 2],mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool) -> bool {
mir! {
type RET = bool;
let _9: [usize; 2];
let _10: f64;
let _11: *mut u64;
let _12: Adt85;
let _13: isize;
let _14: (&'static bool,);
let _15: (char, i64, u128, &'static bool);
let _16: isize;
let _17: isize;
let _18: f64;
let _19: i16;
let _20: ();
let _21: ();
{
_4 = _6;
RET = _4;
RET = !_6;
_3 = [14059_u16,46664_u16];
_6 = !_2;
_1 = _8 ^ _7;
_8 = !_5;
_3 = [30772_u16,17763_u16];
_7 = !_1;
_3 = [31775_u16,4810_u16];
Goto(bb1)
}
bb1 = {
_7 = !_1;
_7 = RET;
RET = _4;
_3 = [26800_u16,52573_u16];
_6 = _8 != _5;
_3 = [62482_u16,35529_u16];
_5 = _7;
_10 = 52325652453698095046679897220127510591_i128 as f64;
_2 = !_8;
Goto(bb2)
}
bb2 = {
_8 = _5 < _2;
RET = _7;
RET = _4;
_1 = _5 ^ _7;
_10 = 3309208841_u32 as f64;
RET = _1;
_15.1 = (-6541393719748833212_i64) ^ 8610328845116946444_i64;
_15.2 = 214495616357795602660251215458991930921_u128;
_7 = !_1;
_15.1 = !189110114162838676_i64;
_15.2 = 81375995602814154952701910275574127693_u128 * 278429568720240800279362332687591050385_u128;
_17 = (-91330252827460351032680180334644937919_i128) as isize;
Call(_9 = fn9(_6, _6, _2, _8), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_15.0 = '\u{7818c}';
_9 = [13061815177867362668_usize,7_usize];
_8 = _1 > _1;
RET = _7 | _8;
_18 = _10;
_9 = [5_usize,17217215287935683033_usize];
Goto(bb4)
}
bb4 = {
Call(_20 = dump_var(8_usize, 7_usize, Move(_7), 17_usize, Move(_17), 6_usize, Move(_6), 3_usize, Move(_3)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_20 = dump_var(8_usize, 8_usize, Move(_8), 21_usize, _21, 21_usize, _21, 21_usize, _21), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _5: [u128; 4];
let _6: (char, i64, u128, &'static bool);
let _7: f64;
let _8: u64;
let _9: *const [i128; 4];
let _10: (u32,);
let _11: *mut [bool; 7];
let _12: *const bool;
let _13: f64;
let _14: *mut [u128; 2];
let _15: char;
let _16: u32;
let _17: char;
let _18: i128;
let _19: [u16; 2];
let _20: isize;
let _21: bool;
let _22: [u64; 4];
let _23: Adt21;
let _24: bool;
let _25: i64;
let _26: (char, i64, u128, &'static bool);
let _27: i8;
let _28: (u128, i64, bool, [u128; 2]);
let _29: [u128; 4];
let _30: (i32, (bool,));
let _31: ();
let _32: ();
{
_2 = _4 != _3;
_2 = !_1;
RET = [13836832255643678713_usize,6_usize];
_4 = _1;
_3 = _1 < _4;
RET = [2_usize,2_usize];
_1 = !_2;
Call(RET = fn10(_3, _2, _1), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = [14524288071523299571_usize,11787483741021791172_usize];
RET = [3_usize,7_usize];
_4 = !_3;
RET = [11699733631112919355_usize,17704630783631402380_usize];
Goto(bb2)
}
bb2 = {
_3 = _2 >= _2;
Call(RET = fn11(_2, _4, _1, _1, _2, _3, _2, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = _3 & _3;
RET = [7237117218496033475_usize,2_usize];
_1 = !_2;
_1 = !_4;
_4 = _3 <= _2;
_4 = _2;
_5 = [165159430573826439684663240749393216096_u128,193391414286556568362276726145673656803_u128,160188461238929611802305236365211078404_u128,279977990500299544807620041883600820788_u128];
_2 = _1;
_3 = _2 | _2;
_2 = _4;
_4 = _2;
_5 = [339542722138604029402556426208448365421_u128,155189407410376022252525357100046206749_u128,204085614002538797404328366329883889856_u128,62327913303373809247178397640949130921_u128];
_6.3 = &_4;
_6.2 = 168326523980870702246199078245174031627_u128;
_3 = !_4;
_6.1 = -(-8282516821773101933_i64);
_7 = 51720_u16 as f64;
_2 = _3 | _1;
RET = [6966868081669040885_usize,14702732730460852474_usize];
_7 = 29_u8 as f64;
_1 = !_2;
_4 = _1 == _3;
RET = [2_usize,0_usize];
match _6.2 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
168326523980870702246199078245174031627 => bb10,
_ => bb9
}
}
bb4 = {
_3 = _2 >= _2;
Call(RET = fn11(_2, _4, _1, _1, _2, _3, _2, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
RET = [14524288071523299571_usize,11787483741021791172_usize];
RET = [3_usize,7_usize];
_4 = !_3;
RET = [11699733631112919355_usize,17704630783631402380_usize];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_2 = _4 > _3;
_8 = 15211017757070686960_u64;
_6.2 = !312711399875260594790407279572401092505_u128;
_6.0 = '\u{3e8eb}';
_1 = _2;
_3 = !_1;
RET = [4300516601477935801_usize,1_usize];
_2 = !_3;
_6.0 = '\u{48a53}';
_5 = [_6.2,_6.2,_6.2,_6.2];
_3 = _1 & _2;
_2 = _1;
_10.0 = 52721_u16 as u32;
_10 = (1763926533_u32,);
_6.2 = 126087287858552414108368186858679095575_u128 | 198148361477202300832807986148003583970_u128;
_6.2 = 25241579632986772436253582033607869275_u128 & 211723726206699848398805554435178671477_u128;
_8 = 8972664407231124511_u64 ^ 16373135553273288821_u64;
_6.2 = 39874695582184461288486824020379679845_u128;
_12 = core::ptr::addr_of!(_1);
(*_12) = _4;
_6.2 = 255921281226218398915737274160273747262_u128;
_10 = (3557170005_u32,);
Goto(bb11)
}
bb11 = {
_15 = _6.0;
_17 = _15;
_3 = (*_12);
_6.0 = _17;
(*_12) = !_3;
_12 = core::ptr::addr_of!(_4);
RET = [0_usize,5_usize];
_18 = 22938324281001151285478220543858743905_i128;
_13 = _7 - _7;
_6.3 = &(*_12);
_8 = 7196760679080654764_u64 & 13704981138429213025_u64;
_7 = _13 + _13;
_4 = !_1;
_6.3 = &_2;
_6.2 = _8 as u128;
_16 = _10.0;
_6.2 = !158586173009112684634405550833741312112_u128;
_6.2 = !318160135335230792956723092997135883161_u128;
_10 = (_16,);
_3 = _2 != _4;
_7 = _13 - _13;
_17 = _6.0;
(*_12) = _1;
_17 = _15;
_10.0 = !_16;
_10.0 = _16 | _16;
_17 = _15;
_19 = [1094_u16,32173_u16];
Goto(bb12)
}
bb12 = {
_10.0 = _16;
_5 = [_6.2,_6.2,_6.2,_6.2];
RET = [6_usize,3_usize];
_5 = [_6.2,_6.2,_6.2,_6.2];
_19 = [28185_u16,22587_u16];
_17 = _15;
_8 = !9196550261762559233_u64;
_12 = core::ptr::addr_of!(_4);
(*_12) = _8 > _8;
_7 = _13 - _13;
match _10.0 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
3557170005 => bb19,
_ => bb18
}
}
bb13 = {
RET = [14524288071523299571_usize,11787483741021791172_usize];
RET = [3_usize,7_usize];
_4 = !_3;
RET = [11699733631112919355_usize,17704630783631402380_usize];
Goto(bb2)
}
bb14 = {
_2 = _4 > _3;
_8 = 15211017757070686960_u64;
_6.2 = !312711399875260594790407279572401092505_u128;
_6.0 = '\u{3e8eb}';
_1 = _2;
_3 = !_1;
RET = [4300516601477935801_usize,1_usize];
_2 = !_3;
_6.0 = '\u{48a53}';
_5 = [_6.2,_6.2,_6.2,_6.2];
_3 = _1 & _2;
_2 = _1;
_10.0 = 52721_u16 as u32;
_10 = (1763926533_u32,);
_6.2 = 126087287858552414108368186858679095575_u128 | 198148361477202300832807986148003583970_u128;
_6.2 = 25241579632986772436253582033607869275_u128 & 211723726206699848398805554435178671477_u128;
_8 = 8972664407231124511_u64 ^ 16373135553273288821_u64;
_6.2 = 39874695582184461288486824020379679845_u128;
_12 = core::ptr::addr_of!(_1);
(*_12) = _4;
_6.2 = 255921281226218398915737274160273747262_u128;
_10 = (3557170005_u32,);
Goto(bb11)
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_3 = _2 >= _2;
Call(RET = fn11(_2, _4, _1, _1, _2, _3, _2, _3), ReturnTo(bb3), UnwindUnreachable())
}
bb18 = {
RET = [14524288071523299571_usize,11787483741021791172_usize];
RET = [3_usize,7_usize];
_4 = !_3;
RET = [11699733631112919355_usize,17704630783631402380_usize];
Goto(bb2)
}
bb19 = {
_19 = [47312_u16,22404_u16];
_23.fld0 = 40_u8;
_13 = _7 * _7;
_6.2 = !219995868664312430529887627072818440779_u128;
_12 = core::ptr::addr_of!(_1);
RET = [4_usize,4193326671452363940_usize];
_5 = [_6.2,_6.2,_6.2,_6.2];
_6.2 = 9204770778238323973_usize as u128;
_21 = _3;
_23 = Adt21 { fld0: 170_u8 };
_22 = [_8,_8,_8,_8];
_16 = _6.2 as u32;
_24 = !_3;
_21 = _24 ^ _2;
(*_12) = _3 | _3;
_7 = -_13;
_25 = 14855_u16 as i64;
_10.0 = !_16;
_3 = !_1;
_24 = !_1;
_17 = _6.0;
_10.0 = _18 as u32;
_25 = _6.1 ^ _6.1;
_6.3 = &_3;
RET = [6610180054723101389_usize,2_usize];
_28.0 = _6.2 & _6.2;
Goto(bb20)
}
bb20 = {
Call(_31 = dump_var(9_usize, 16_usize, Move(_16), 4_usize, Move(_4), 21_usize, Move(_21), 19_usize, Move(_19)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_31 = dump_var(9_usize, 10_usize, Move(_10), 18_usize, Move(_18), 25_usize, Move(_25), 22_usize, Move(_22)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: bool,mut _2: bool,mut _3: bool) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _4: f64;
let _5: u8;
let _6: i16;
let _7: isize;
let _8: *mut [bool; 7];
let _9: f32;
let _10: i128;
let _11: &'static mut *const bool;
let _12: u32;
let _13: isize;
let _14: [i128; 4];
let _15: char;
let _16: (u128, i64, bool, [u128; 2]);
let _17: (bool,);
let _18: [u16; 2];
let _19: i16;
let _20: f32;
let _21: [u128; 2];
let _22: [u16; 2];
let _23: ();
let _24: ();
{
RET = [5133203306975798951_usize,3_usize];
_4 = 9223372036854775807_isize as f64;
Goto(bb1)
}
bb1 = {
RET = [8619519296866002593_usize,963872360403595234_usize];
_2 = !_1;
_3 = !_2;
_3 = _1;
_3 = _2;
_2 = _3 != _1;
_3 = !_2;
RET = [1456955750730601068_usize,928403528773361807_usize];
_2 = _1 | _3;
RET = [13740201298765199762_usize,6_usize];
_5 = 15269664550056814587_u64 as u8;
RET = [3_usize,10367391993722294920_usize];
_5 = '\u{4cc73}' as u8;
_4 = 28393_u16 as f64;
_1 = _3;
_5 = 59431_u16 as u8;
_5 = 64126_u16 as u8;
RET = [270225244284393009_usize,9122880112435564689_usize];
_1 = !_2;
_6 = 621_i16;
_3 = _1;
_4 = _5 as f64;
_6 = 9223372036854775807_isize as i16;
Goto(bb2)
}
bb2 = {
_2 = _1;
_4 = 10_i8 as f64;
RET = [955498546403384913_usize,1_usize];
RET = [3_usize,7_usize];
_2 = _1;
RET = [5179241615221030540_usize,4_usize];
_9 = _4 as f32;
_2 = !_1;
_1 = !_2;
_3 = _1 | _1;
_7 = 200607038371613652828115105982406599460_u128 as isize;
_12 = !4085347877_u32;
Goto(bb3)
}
bb3 = {
_5 = 17254951470236818161_u64 as u8;
_2 = !_1;
_2 = _3 | _3;
RET = [6_usize,0_usize];
_16.0 = 61385108042897484031627700659762007715_u128 | 104797845862764908420762524308645365309_u128;
_16.3 = [_16.0,_16.0];
_16.3 = [_16.0,_16.0];
_5 = 157_u8;
_15 = '\u{9ec31}';
_16.0 = 75149530814730275548773339928233564655_u128 ^ 211292380210990624546793991135983282891_u128;
_3 = _2;
_16.2 = _3;
_15 = '\u{b79d8}';
_10 = -109285555417061571737424423970165816315_i128;
_10 = !(-167734443179662748457027497218691845873_i128);
_16.0 = 71015974556573364460445452169736025202_u128 << _5;
_16.2 = _2 != _2;
_17.0 = !_2;
_16.2 = _1;
_13 = !_7;
_7 = _13;
_12 = !3434708137_u32;
_18 = [56231_u16,8801_u16];
_14 = [_10,_10,_10,_10];
_1 = _16.2;
_16.1 = 8603389360631511953_i64 << _13;
_13 = _7 - _7;
Goto(bb4)
}
bb4 = {
_12 = 3489851689_u32 ^ 1834303466_u32;
_16.0 = 39139435425155192418532288786065449083_u128;
_10 = 18959457581550453378769438138103817011_i128;
match _5 {
0 => bb1,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
157 => bb12,
_ => bb11
}
}
bb5 = {
_5 = 17254951470236818161_u64 as u8;
_2 = !_1;
_2 = _3 | _3;
RET = [6_usize,0_usize];
_16.0 = 61385108042897484031627700659762007715_u128 | 104797845862764908420762524308645365309_u128;
_16.3 = [_16.0,_16.0];
_16.3 = [_16.0,_16.0];
_5 = 157_u8;
_15 = '\u{9ec31}';
_16.0 = 75149530814730275548773339928233564655_u128 ^ 211292380210990624546793991135983282891_u128;
_3 = _2;
_16.2 = _3;
_15 = '\u{b79d8}';
_10 = -109285555417061571737424423970165816315_i128;
_10 = !(-167734443179662748457027497218691845873_i128);
_16.0 = 71015974556573364460445452169736025202_u128 << _5;
_16.2 = _2 != _2;
_17.0 = !_2;
_16.2 = _1;
_13 = !_7;
_7 = _13;
_12 = !3434708137_u32;
_18 = [56231_u16,8801_u16];
_14 = [_10,_10,_10,_10];
_1 = _16.2;
_16.1 = 8603389360631511953_i64 << _13;
_13 = _7 - _7;
Goto(bb4)
}
bb6 = {
_2 = _1;
_4 = 10_i8 as f64;
RET = [955498546403384913_usize,1_usize];
RET = [3_usize,7_usize];
_2 = _1;
RET = [5179241615221030540_usize,4_usize];
_9 = _4 as f32;
_2 = !_1;
_1 = !_2;
_3 = _1 | _1;
_7 = 200607038371613652828115105982406599460_u128 as isize;
_12 = !4085347877_u32;
Goto(bb3)
}
bb7 = {
RET = [8619519296866002593_usize,963872360403595234_usize];
_2 = !_1;
_3 = !_2;
_3 = _1;
_3 = _2;
_2 = _3 != _1;
_3 = !_2;
RET = [1456955750730601068_usize,928403528773361807_usize];
_2 = _1 | _3;
RET = [13740201298765199762_usize,6_usize];
_5 = 15269664550056814587_u64 as u8;
RET = [3_usize,10367391993722294920_usize];
_5 = '\u{4cc73}' as u8;
_4 = 28393_u16 as f64;
_1 = _3;
_5 = 59431_u16 as u8;
_5 = 64126_u16 as u8;
RET = [270225244284393009_usize,9122880112435564689_usize];
_1 = !_2;
_6 = 621_i16;
_3 = _1;
_4 = _5 as f64;
_6 = 9223372036854775807_isize as i16;
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_19 = _6;
_14 = [_10,_10,_10,_10];
_17 = (_2,);
_16.1 = _15 as i64;
_18 = [21287_u16,7276_u16];
RET = [13545137313077735427_usize,2820589614648926967_usize];
RET = [9437634164083106583_usize,0_usize];
RET = [7773338782947323684_usize,7_usize];
_5 = 188_u8 >> _12;
_12 = 1327930498_u32 << _13;
_12 = 344252243_u32;
_5 = !195_u8;
_14 = [_10,_10,_10,_10];
_17 = (_3,);
_5 = 75_u8;
_20 = _9 * _9;
_13 = 51021669_i32 as isize;
_13 = _7 & _7;
match _10 {
0 => bb5,
1 => bb2,
2 => bb3,
3 => bb9,
18959457581550453378769438138103817011 => bb14,
_ => bb13
}
}
bb13 = {
RET = [8619519296866002593_usize,963872360403595234_usize];
_2 = !_1;
_3 = !_2;
_3 = _1;
_3 = _2;
_2 = _3 != _1;
_3 = !_2;
RET = [1456955750730601068_usize,928403528773361807_usize];
_2 = _1 | _3;
RET = [13740201298765199762_usize,6_usize];
_5 = 15269664550056814587_u64 as u8;
RET = [3_usize,10367391993722294920_usize];
_5 = '\u{4cc73}' as u8;
_4 = 28393_u16 as f64;
_1 = _3;
_5 = 59431_u16 as u8;
_5 = 64126_u16 as u8;
RET = [270225244284393009_usize,9122880112435564689_usize];
_1 = !_2;
_6 = 621_i16;
_3 = _1;
_4 = _5 as f64;
_6 = 9223372036854775807_isize as i16;
Goto(bb2)
}
bb14 = {
_16.1 = !(-2533750354595453701_i64);
_16.0 = 212258197883243627951122440073959661622_u128 ^ 30156039903259437917000160525246967406_u128;
_10 = (-59395014206582198603688998207961507752_i128);
_21 = [_16.0,_16.0];
_12 = !839099613_u32;
_16 = (216926739426488040644753880965984931628_u128, (-2750379319638670570_i64), _17.0, _21);
_20 = _5 as f32;
_21 = [_16.0,_16.0];
_16.1 = _4 as i64;
_16.2 = _3;
_17 = (_3,);
_2 = _17.0;
_2 = !_3;
_1 = !_16.2;
_2 = !_3;
_9 = -_20;
_6 = _19 >> _16.0;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(10_usize, 17_usize, Move(_17), 5_usize, Move(_5), 15_usize, Move(_15), 7_usize, Move(_7)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(10_usize, 18_usize, Move(_18), 16_usize, Move(_16), 3_usize, Move(_3), 19_usize, Move(_19)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn11(mut _1: bool,mut _2: bool,mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool,mut _7: bool,mut _8: bool) -> [usize; 2] {
mir! {
type RET = [usize; 2];
let _9: u32;
let _10: Adt21;
let _11: &'static i32;
let _12: isize;
let _13: [i64; 5];
let _14: isize;
let _15: &'static &'static mut *mut u64;
let _16: f64;
let _17: isize;
let _18: [u128; 4];
let _19: (u8, [u128; 2], i32, *const [u128; 2]);
let _20: [u128; 2];
let _21: isize;
let _22: i8;
let _23: ();
let _24: ();
{
_6 = _8 ^ _7;
RET = [2_usize,1_usize];
_3 = _2;
_3 = _5;
_8 = !_6;
_1 = _8 == _4;
_7 = !_6;
_1 = _8;
_8 = !_5;
_6 = _4 == _7;
_6 = !_2;
_6 = _4 == _1;
_9 = 4289158034_u32 ^ 2757765655_u32;
_3 = _2;
_10 = Adt21 { fld0: 240_u8 };
RET = [12390446648061565344_usize,0_usize];
_3 = !_4;
match _10.fld0 {
0 => bb1,
1 => bb2,
2 => bb3,
240 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7 = _3 >= _5;
_8 = _2 >= _7;
_6 = _1 > _8;
_4 = _1;
_7 = _4 ^ _6;
RET = [6676799823948835640_usize,15204219966600791664_usize];
_6 = !_8;
RET = [1_usize,7_usize];
_4 = !_6;
_1 = _6;
_4 = _6 | _1;
_5 = _6;
Goto(bb6)
}
bb6 = {
_16 = (-6796965626667719524_i64) as f64;
Call(_14 = fn12(_7, _5), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_16 = 22011234378429962455879812935368537113_i128 as f64;
RET = [6119450188306360976_usize,3_usize];
_6 = !_7;
_10 = Adt21 { fld0: 220_u8 };
RET = [0_usize,14584413649722857914_usize];
_2 = !_6;
_7 = !_6;
_9 = 4248128528_u32;
_10.fld0 = !135_u8;
_19.1 = [145116679162407971864063246335669749460_u128,337544224590823587757487554888001963332_u128];
RET = [14473397694475219139_usize,3_usize];
_1 = !_7;
_19.2 = 1785722818_i32 >> _9;
_16 = _9 as f64;
_19.0 = _10.fld0;
_6 = _1;
_19.1 = [288230403430745800146025127067536866632_u128,321612179436919938045391674238794398114_u128];
_14 = 22_isize ^ (-9223372036854775808_isize);
_11 = &_19.2;
_21 = _14 + _14;
_19.2 = 223214221_i32;
_12 = _21 | _14;
_19.3 = core::ptr::addr_of!(_19.1);
match _9 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
4248128528 => bb14,
_ => bb13
}
}
bb8 = {
_16 = (-6796965626667719524_i64) as f64;
Call(_14 = fn12(_7, _5), ReturnTo(bb7), UnwindUnreachable())
}
bb9 = {
_7 = _3 >= _5;
_8 = _2 >= _7;
_6 = _1 > _8;
_4 = _1;
_7 = _4 ^ _6;
RET = [6676799823948835640_usize,15204219966600791664_usize];
_6 = !_8;
RET = [1_usize,7_usize];
_4 = !_6;
_1 = _6;
_4 = _6 | _1;
_5 = _6;
Goto(bb6)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_19.1 = [181262966672089136034254220996858189546_u128,157212604795731559245250947680402423544_u128];
_22 = _10.fld0 as i8;
_18 = [74525523421163640788991414286764459857_u128,326544293616585849981512036963355973287_u128,2167205322981108648797842627995585947_u128,331222881841128742142875531929533908196_u128];
_20 = [192754209143697323377385049173881465128_u128,109388440872969274457933382290546733636_u128];
_17 = -_12;
_5 = _2 | _8;
_19.1 = _20;
_19.2 = (-261806689_i32) << _9;
_10.fld0 = _19.0 - _19.0;
_20 = [103380794353581109514275494257128758175_u128,15564214189189671716238540204070333439_u128];
_17 = _12;
_11 = &_19.2;
_8 = _5;
_19.1 = [23012726568603908903700012827135334707_u128,319725650704564713094844290430934227375_u128];
_4 = _8;
_2 = _1;
_6 = _7 | _7;
_5 = !_1;
RET = [4645416606876097859_usize,13377040108558850824_usize];
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(11_usize, 1_usize, Move(_1), 2_usize, Move(_2), 12_usize, Move(_12), 20_usize, Move(_20)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_23 = dump_var(11_usize, 21_usize, Move(_21), 8_usize, Move(_8), 5_usize, Move(_5), 22_usize, Move(_22)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: bool,mut _2: bool) -> isize {
mir! {
type RET = isize;
let _3: isize;
let _4: [bool; 7];
let _5: char;
let _6: &'static [u64; 4];
let _7: [i64; 5];
let _8: f64;
let _9: usize;
let _10: u16;
let _11: (i32, (bool,));
let _12: u128;
let _13: f64;
let _14: isize;
let _15: isize;
let _16: f32;
let _17: [u16; 2];
let _18: [u64; 4];
let _19: (i32, *const (u128, i64, bool, [u128; 2]));
let _20: ();
let _21: ();
{
RET = !(-9223372036854775808_isize);
_1 = _2 > _2;
RET = -9223372036854775807_isize;
_1 = _2 > _2;
_1 = !_2;
_1 = _2 & _2;
_1 = _2;
_2 = !_1;
RET = 166_u8 as isize;
_4 = [_1,_1,_1,_1,_1,_2,_2];
_5 = '\u{f820b}';
RET = 20_isize;
_4 = [_2,_2,_2,_1,_2,_2,_1];
_2 = !_1;
_5 = '\u{3f17c}';
_5 = '\u{e4231}';
_4 = [_2,_2,_2,_2,_2,_2,_2];
_3 = !RET;
_1 = _2;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
20 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_2 = !_1;
_1 = _2 > _2;
RET = _3 ^ _3;
_1 = !_2;
RET = (-3925674138805106159_i64) as isize;
RET = _3 >> _3;
RET = _3 & _3;
_2 = !_1;
_3 = (-8249058290634843302_i64) as isize;
_8 = RET as f64;
_3 = (-122408491245396988586632264541420788518_i128) as isize;
RET = _8 as isize;
_1 = _2;
Goto(bb9)
}
bb9 = {
_9 = 613682038862811033_usize >> _3;
_4 = [_2,_2,_1,_2,_2,_2,_1];
RET = _3;
_10 = 29448_u16;
_3 = _2 as isize;
_5 = '\u{996c3}';
_5 = '\u{fca61}';
_4 = [_1,_1,_2,_2,_1,_2,_1];
_7 = [2522192034402464428_i64,(-3131819493956303830_i64),(-1418044469959857575_i64),(-7353211185904186560_i64),6802026888767664564_i64];
_10 = 50233_u16;
Goto(bb10)
}
bb10 = {
_9 = 13886728808580804497_usize >> _3;
_9 = 0_usize;
RET = !_3;
_2 = _4[_9];
_11.1.0 = !_1;
_1 = !_11.1.0;
_4[_9] = !_1;
_11.0 = 10454435393547991670_u64 as i32;
RET = _4[_9] as isize;
_5 = '\u{b4870}';
_11.0 = 81908097260589589214216926050885995031_u128 as i32;
RET = -_3;
_4 = [_2,_1,_1,_1,_11.1.0,_11.1.0,_1];
RET = 16284691041349009430_u64 as isize;
_12 = 169143298665626562456675198112202352703_u128 - 170233847226198064102581374335440878272_u128;
_7 = [2173147436320023051_i64,(-6894773390346404598_i64),5473414426159371020_i64,8990041825991252317_i64,7311710692647892483_i64];
_3 = RET << RET;
_7 = [1548834350847519167_i64,4403476124946968459_i64,8239047575649337613_i64,8535644407292262719_i64,3096157093790665873_i64];
_12 = 314181305629276126504220047221076085700_u128 >> _9;
RET = _3;
_4 = [_1,_2,_1,_1,_2,_2,_1];
match _7[_9] {
0 => bb1,
1 => bb8,
2 => bb7,
3 => bb6,
4 => bb9,
1548834350847519167 => bb12,
_ => bb11
}
}
bb11 = {
Return()
}
bb12 = {
_7[_9] = (-1107393610402956658_i64) >> _9;
_14 = RET;
_10 = !60982_u16;
RET = -_3;
RET = _3;
_5 = '\u{c1249}';
_1 = !_4[_9];
_11.1.0 = _2;
Goto(bb13)
}
bb13 = {
_11.1.0 = !_4[_9];
_11.0 = 1483134200_i32;
_14 = RET;
_15 = 11235_i16 as isize;
_10 = 18938_u16;
_11.1.0 = _2 != _1;
_4[_9] = !_11.1.0;
_7 = [9129536306932818829_i64,7503844678047750021_i64,6399667428590235397_i64,7687820432864583527_i64,4874501866343632278_i64];
_15 = _14;
_4 = [_2,_11.1.0,_11.1.0,_1,_2,_11.1.0,_11.1.0];
_8 = 39_i8 as f64;
_2 = _11.1.0;
RET = (-124_i8) as isize;
_4[_9] = _1 >= _11.1.0;
_9 = !7_usize;
_16 = _9 as f32;
_13 = 7409555246089892041_i64 as f64;
_10 = !32040_u16;
_10 = 36089_u16 - 21015_u16;
_9 = 13429691527471147074_usize & 1974678039867934196_usize;
_10 = 59162_u16 >> RET;
match _11.0 {
0 => bb10,
1 => bb14,
1483134200 => bb16,
_ => bb15
}
}
bb14 = {
Return()
}
bb15 = {
_9 = 613682038862811033_usize >> _3;
_4 = [_2,_2,_1,_2,_2,_2,_1];
RET = _3;
_10 = 29448_u16;
_3 = _2 as isize;
_5 = '\u{996c3}';
_5 = '\u{fca61}';
_4 = [_1,_1,_2,_2,_1,_2,_1];
_7 = [2522192034402464428_i64,(-3131819493956303830_i64),(-1418044469959857575_i64),(-7353211185904186560_i64),6802026888767664564_i64];
_10 = 50233_u16;
Goto(bb10)
}
bb16 = {
_12 = !337089750296557585828354013584195975855_u128;
_1 = !_11.1.0;
_16 = _9 as f32;
RET = _14 >> _10;
_2 = _1;
_3 = (-24042_i16) as isize;
_5 = '\u{1d6fb}';
_18 = [8239355058005914777_u64,1030871651418851781_u64,9182289734980966333_u64,1027512855504644665_u64];
_4 = [_2,_1,_2,_11.1.0,_2,_2,_1];
_12 = !124650265282869500285150997834095326826_u128;
_6 = &_18;
_16 = (-28077_i16) as f32;
_19.0 = -_11.0;
_13 = _8 - _8;
Goto(bb17)
}
bb17 = {
Call(_20 = dump_var(12_usize, 18_usize, Move(_18), 11_usize, Move(_11), 14_usize, Move(_14), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_20 = dump_var(12_usize, 9_usize, Move(_9), 2_usize, Move(_2), 21_usize, _21, 21_usize, _21), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: f32) -> i32 {
mir! {
type RET = i32;
let _2: i16;
let _3: [bool; 7];
let _4: isize;
let _5: u64;
let _6: [i128; 7];
let _7: i128;
let _8: &'static mut &'static mut [i128; 4];
let _9: *mut [bool; 7];
let _10: isize;
let _11: &'static u128;
let _12: i32;
let _13: *const char;
let _14: i64;
let _15: i128;
let _16: [u128; 2];
let _17: [u16; 2];
let _18: i16;
let _19: u128;
let _20: i32;
let _21: Adt21;
let _22: [i64; 5];
let _23: &'static mut *mut u64;
let _24: ();
let _25: ();
{
_1 = 98116021822296932690201947883766927548_i128 as f32;
RET = 1135934215_i32;
RET = (-1784167714_i32);
RET = 940516397_i32;
RET = 1287418271_i32 << (-6546_i16);
Goto(bb1)
}
bb1 = {
_1 = 21953_u16 as f32;
_2 = (-34762201954310691073678659597233244382_i128) as i16;
RET = !1963951240_i32;
RET = 17839200328963800593_u64 as i32;
_1 = 146824446052582890172801972204345610029_i128 as f32;
RET = !(-1792612295_i32);
_2 = false as i16;
_1 = 2866253145433663226_i64 as f32;
_3 = [false,true,true,false,true,true,false];
_1 = 2_usize as f32;
_4 = (-2935364300912950599_i64) as isize;
RET = 1250093214_i32;
RET = _4 as i32;
_3 = [true,true,true,false,true,true,true];
_6 = [67813586550463645129045035879401875801_i128,143987294868514674677991047349967019317_i128,23525819642901512486299765074281911814_i128,(-135672773853483510357705820775283160542_i128),5825755703799922738017811649156853846_i128,46678486355611667233123409632869075853_i128,(-20971555467485918044192781755654703155_i128)];
_2 = 19507_i16;
Goto(bb2)
}
bb2 = {
_4 = false as isize;
_7 = 146322469743049016236803608287611859978_i128;
_7 = 2022670439929445238_usize as i128;
_5 = !15829077512041692511_u64;
_5 = 17320643594154079783_u64 * 6515115571563399216_u64;
_4 = 37_i8 as isize;
RET = 1317485947_i32;
_1 = 145205996856176353212778164167166792396_u128 as f32;
_5 = 13978080185563247706_u64;
_2 = (-22485_i16);
_3 = [false,true,false,true,false,false,true];
_1 = 35791_u16 as f32;
_9 = core::ptr::addr_of_mut!(_3);
(*_9) = [false,true,false,true,true,true,true];
_7 = (-38804418270595802819629140049243092928_i128);
match RET {
1317485947 => bb3,
_ => bb1
}
}
bb3 = {
_4 = 9223372036854775807_isize >> RET;
_6 = [_7,_7,_7,_7,_7,_7,_7];
_10 = _4 & _4;
RET = '\u{ec003}' as i32;
(*_9) = [false,true,true,false,true,true,true];
_4 = _10;
RET = (-1211261422_i32);
_2 = (-7706982469156469144_i64) as i16;
Goto(bb4)
}
bb4 = {
_6 = [_7,_7,_7,_7,_7,_7,_7];
_12 = RET << _10;
_5 = 9493509345863175385_u64 * 5377623511924099809_u64;
_12 = RET;
_5 = 10163312812173454205_u64;
(*_9) = [true,true,true,true,false,false,true];
_15 = _7;
RET = !_12;
_3 = [true,true,false,false,true,true,true];
Goto(bb5)
}
bb5 = {
_5 = 13285050053669085503_u64 & 6521934153751855403_u64;
_15 = _7;
_16 = [123213950259830130780172212783505113497_u128,129726846814065578543320547556271312802_u128];
_1 = _12 as f32;
(*_9) = [false,true,true,false,true,true,false];
Goto(bb6)
}
bb6 = {
_17 = [48994_u16,59833_u16];
_18 = _2 & _2;
_5 = !4622760297957385411_u64;
_4 = _10 * _10;
_4 = _10;
_7 = -_15;
_1 = 1235042969_u32 as f32;
match _15 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
301477948650342660643745467382525118528 => bb15,
_ => bb14
}
}
bb7 = {
_5 = 13285050053669085503_u64 & 6521934153751855403_u64;
_15 = _7;
_16 = [123213950259830130780172212783505113497_u128,129726846814065578543320547556271312802_u128];
_1 = _12 as f32;
(*_9) = [false,true,true,false,true,true,false];
Goto(bb6)
}
bb8 = {
_6 = [_7,_7,_7,_7,_7,_7,_7];
_12 = RET << _10;
_5 = 9493509345863175385_u64 * 5377623511924099809_u64;
_12 = RET;
_5 = 10163312812173454205_u64;
(*_9) = [true,true,true,true,false,false,true];
_15 = _7;
RET = !_12;
_3 = [true,true,false,false,true,true,true];
Goto(bb5)
}
bb9 = {
_4 = 9223372036854775807_isize >> RET;
_6 = [_7,_7,_7,_7,_7,_7,_7];
_10 = _4 & _4;
RET = '\u{ec003}' as i32;
(*_9) = [false,true,true,false,true,true,true];
_4 = _10;
RET = (-1211261422_i32);
_2 = (-7706982469156469144_i64) as i16;
Goto(bb4)
}
bb10 = {
_4 = false as isize;
_7 = 146322469743049016236803608287611859978_i128;
_7 = 2022670439929445238_usize as i128;
_5 = !15829077512041692511_u64;
_5 = 17320643594154079783_u64 * 6515115571563399216_u64;
_4 = 37_i8 as isize;
RET = 1317485947_i32;
_1 = 145205996856176353212778164167166792396_u128 as f32;
_5 = 13978080185563247706_u64;
_2 = (-22485_i16);
_3 = [false,true,false,true,false,false,true];
_1 = 35791_u16 as f32;
_9 = core::ptr::addr_of_mut!(_3);
(*_9) = [false,true,false,true,true,true,true];
_7 = (-38804418270595802819629140049243092928_i128);
match RET {
1317485947 => bb3,
_ => bb1
}
}
bb11 = {
_1 = 21953_u16 as f32;
_2 = (-34762201954310691073678659597233244382_i128) as i16;
RET = !1963951240_i32;
RET = 17839200328963800593_u64 as i32;
_1 = 146824446052582890172801972204345610029_i128 as f32;
RET = !(-1792612295_i32);
_2 = false as i16;
_1 = 2866253145433663226_i64 as f32;
_3 = [false,true,true,false,true,true,false];
_1 = 2_usize as f32;
_4 = (-2935364300912950599_i64) as isize;
RET = 1250093214_i32;
RET = _4 as i32;
_3 = [true,true,true,false,true,true,true];
_6 = [67813586550463645129045035879401875801_i128,143987294868514674677991047349967019317_i128,23525819642901512486299765074281911814_i128,(-135672773853483510357705820775283160542_i128),5825755703799922738017811649156853846_i128,46678486355611667233123409632869075853_i128,(-20971555467485918044192781755654703155_i128)];
_2 = 19507_i16;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_7 = _5 as i128;
_17 = [32033_u16,52625_u16];
RET = 1186008412_u32 as i32;
(*_9) = [true,true,false,true,false,true,false];
_17 = [10088_u16,5718_u16];
_19 = 196754684551897767501303464367530581329_u128 | 7109779202371840418879135741405531505_u128;
(*_9) = [false,false,false,false,true,true,true];
_7 = RET as i128;
_3 = [true,false,true,true,false,false,false];
_18 = !_2;
_3 = [true,true,true,false,true,true,false];
_11 = &_19;
_16 = [(*_11),_19];
_6 = [_15,_15,_7,_15,_15,_7,_15];
_4 = !_10;
_10 = _4;
_2 = -_18;
_9 = core::ptr::addr_of_mut!(_3);
_11 = &(*_11);
_20 = -_12;
_5 = !4942962319211351829_u64;
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(13_usize, 20_usize, Move(_20), 10_usize, Move(_10), 17_usize, Move(_17), 7_usize, Move(_7)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(13_usize, 15_usize, Move(_15), 19_usize, Move(_19), 6_usize, Move(_6), 25_usize, _25), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: bool,mut _2: bool,mut _3: (u128, i64, bool, [u128; 2]),mut _4: &'static bool) -> ([u128; 4], *const [u128; 2], [u64; 2]) {
mir! {
type RET = ([u128; 4], *const [u128; 2], [u64; 2]);
let _5: (&'static bool,);
let _6: [u128; 4];
let _7: (&'static bool,);
let _8: isize;
let _9: (i32, (bool,));
let _10: Adt83;
let _11: (u32,);
let _12: f32;
let _13: &'static mut [u128; 4];
let _14: [u64; 2];
let _15: Adt79;
let _16: i128;
let _17: u8;
let _18: Adt34;
let _19: char;
let _20: bool;
let _21: isize;
let _22: (*mut u64, Adt34, char, &'static mut [u128; 2]);
let _23: [u64; 2];
let _24: (i32, (bool,));
let _25: *mut u16;
let _26: Adt79;
let _27: *const [i128; 7];
let _28: char;
let _29: f64;
let _30: (u128, i64, bool, [u128; 2]);
let _31: *mut [u64; 4];
let _32: isize;
let _33: i64;
let _34: isize;
let _35: [u16; 4];
let _36: i32;
let _37: isize;
let _38: i128;
let _39: u16;
let _40: ();
let _41: ();
{
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_3.1 = !383996913366304615_i64;
_3.1 = (-4625087024701196412_i64);
_4 = &_1;
RET.1 = core::ptr::addr_of!(_3.3);
RET.0 = [_3.0,_3.0,_3.0,_3.0];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_3.3 = [_3.0,_3.0];
_5 = (Move(_4),);
RET.0 = [_3.0,_3.0,_3.0,_3.0];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_3.2 = _1;
_3.1 = 59388_u16 as i64;
RET.2 = [14253056971487747793_u64,14910623069754731637_u64];
_3.2 = _2 == _1;
_3.3 = [_3.0,_3.0];
Call(RET.2 = fn15(_3.2, _3, _3.2, _2, _3.2, _3.2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5.0 = &_3.2;
_3.3 = [_3.0,_3.0];
_2 = _3.2;
_6 = [_3.0,_3.0,_3.0,_3.0];
_1 = _2 & _2;
_3.2 = !_2;
_3.3 = [_3.0,_3.0];
_3.0 = 70725696403523396034347128449996716419_u128 ^ 274217806433357144329565950033584402060_u128;
Goto(bb2)
}
bb2 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb3 = {
_6 = [_3.0,_3.0,_3.0,_3.0];
_7.0 = Move(_5.0);
_9.1 = (_1,);
RET.1 = core::ptr::addr_of!(_3.3);
_7.0 = &_3.2;
_8 = (-9223372036854775808_isize);
_4 = &_3.2;
RET.2 = [2686191017967316290_u64,16152832858300805056_u64];
_3.3 = [_3.0,_3.0];
_7 = (Move(_4),);
_11.0 = 1501836540_u32;
_5.0 = &_2;
RET.2 = [2860743720034300636_u64,123862448929074343_u64];
match _11.0 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
1501836540 => bb10,
_ => bb9
}
}
bb4 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb5 = {
_5.0 = &_3.2;
_3.3 = [_3.0,_3.0];
_2 = _3.2;
_6 = [_3.0,_3.0,_3.0,_3.0];
_1 = _2 & _2;
_3.2 = !_2;
_3.3 = [_3.0,_3.0];
_3.0 = 70725696403523396034347128449996716419_u128 ^ 274217806433357144329565950033584402060_u128;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_6 = [_3.0,_3.0,_3.0,_3.0];
_6 = RET.0;
_3.1 = -2662705878494043923_i64;
_12 = 21974_i16 as f32;
_5.0 = &_9.1.0;
_7 = (Move(_5.0),);
_13 = &mut _6;
RET.2 = [9611719502120793520_u64,5749766280996697760_u64];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_14 = [13978769697180543968_u64,3594623745884427258_u64];
RET.2 = [2377563900692900530_u64,6553032353729421507_u64];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_6 = [_3.0,_3.0,_3.0,_3.0];
_16 = 70679788447995273833919033265873086228_i128 >> _3.0;
_9.1.0 = !_1;
_14 = [7332587226866606696_u64,3423264809497206844_u64];
RET.0 = _6;
RET.1 = core::ptr::addr_of!(_3.3);
_11.0 = (-23809_i16) as u32;
_3.0 = 266945227072493179267891449078488475768_u128 | 116568459564775207413047061462561377998_u128;
_14 = RET.2;
Goto(bb11)
}
bb11 = {
_11 = (1700052297_u32,);
_13 = &mut _6;
_2 = _1;
_19 = '\u{7b733}';
Call(_3.0 = core::intrinsics::bswap(313374017935726122713651826249831465446_u128), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_14 = [2170104818856162048_u64,8699002419076383360_u64];
_17 = 75_u8 ^ 35_u8;
_3.1 = (-8045170367261304598_i64);
RET.2 = _14;
(*_13) = [_3.0,_3.0,_3.0,_3.0];
RET.1 = core::ptr::addr_of!(_3.3);
_3.0 = 220696616750525630747534242701454245627_u128;
_13 = &mut _6;
_8 = (-9223372036854775808_isize);
_22.3 = &mut _3.3;
_7.0 = &_2;
_11 = (998204858_u32,);
_5 = Move(_7);
_18 = Adt34::Variant1 { fld0: _17 };
place!(Field::<u8>(Variant(_18, 1), 0)) = (-28_i8) as u8;
(*_13) = RET.0;
_3.2 = _2;
_19 = '\u{40f0}';
_24 = _9;
_14 = [6059937374516213279_u64,2384185229246605749_u64];
SetDiscriminant(_18, 1);
_21 = _11.0 as isize;
Call(_24.0 = core::intrinsics::transmute(_9.0), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_24.1.0 = _9.1.0 != _2;
_2 = _3.2 == _9.1.0;
_4 = &_9.1.0;
_5 = (Move(_4),);
_9.1.0 = _24.1.0;
_23 = [3764291403204678703_u64,11133516732930541845_u64];
_3.3 = [_3.0,_3.0];
_22.1 = Adt34::Variant2 { fld0: Move(RET.1),fld1: _19,fld2: _3.0,fld3: _24.0 };
_19 = Field::<char>(Variant(_22.1, 2), 1);
_22.2 = Field::<char>(Variant(_22.1, 2), 1);
_23 = _14;
_14 = [9508400505150332684_u64,16795686125220530896_u64];
RET.0 = [Field::<u128>(Variant(_22.1, 2), 2),Field::<u128>(Variant(_22.1, 2), 2),Field::<u128>(Variant(_22.1, 2), 2),_3.0];
_1 = !_9.1.0;
_5.0 = &_9.1.0;
Goto(bb14)
}
bb14 = {
RET.2 = _23;
RET = (_6, Move(Field::<*const [u128; 2]>(Variant(_22.1, 2), 0)), _23);
place!(Field::<u8>(Variant(_18, 1), 0)) = 18128_i16 as u8;
_3.0 = _3.1 as u128;
_22.2 = _19;
_22.1 = Adt34::Variant2 { fld0: Move(RET.1),fld1: _19,fld2: _3.0,fld3: _24.0 };
match _3.1 {
0 => bb15,
1 => bb16,
340282366920938463455329437064506906858 => bb18,
_ => bb17
}
}
bb15 = {
Return()
}
bb16 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb17 = {
_11 = (1700052297_u32,);
_13 = &mut _6;
_2 = _1;
_19 = '\u{7b733}';
Call(_3.0 = core::intrinsics::bswap(313374017935726122713651826249831465446_u128), ReturnTo(bb12), UnwindUnreachable())
}
bb18 = {
RET.1 = core::ptr::addr_of!(_3.3);
_11 = (2759870120_u32,);
_21 = _8;
_4 = Move(_5.0);
SetDiscriminant(_22.1, 0);
_24.1.0 = _1;
SetDiscriminant(_18, 2);
place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)).1 = -_3.1;
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_29 = 26282_i16 as f64;
place!(Field::<*const u128>(Variant(_22.1, 0), 4)) = core::ptr::addr_of!(place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)).0);
_24.1.0 = _1;
place!(Field::<Adt21>(Variant(_22.1, 0), 6)) = Adt21 { fld0: _17 };
place!(Field::<*const [u128; 2]>(Variant(_18, 2), 0)) = Move(RET.1);
_3.3 = [_3.0,_3.0];
_30.2 = _1;
_8 = _21;
_9.1.0 = _24.1.0;
place!(Field::<*const bool>(Variant(_22.1, 0), 0)) = core::ptr::addr_of!(_3.2);
_4 = &_1;
_7.0 = Move(_4);
place!(Field::<i128>(Variant(_22.1, 0), 7)) = 28864_i16 as i128;
_29 = 1543_u16 as f64;
match _21 {
0 => bb16,
1 => bb12,
2 => bb19,
3 => bb20,
340282366920938463454151235394913435648 => bb22,
_ => bb21
}
}
bb19 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb20 = {
_11 = (1700052297_u32,);
_13 = &mut _6;
_2 = _1;
_19 = '\u{7b733}';
Call(_3.0 = core::intrinsics::bswap(313374017935726122713651826249831465446_u128), ReturnTo(bb12), UnwindUnreachable())
}
bb21 = {
Return()
}
bb22 = {
_3.1 = Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1 ^ Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1;
_3.1 = !Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1;
place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)).2 = !_24.1.0;
_7.0 = &_24.1.0;
_3.0 = 153846760586928532898712571611847384840_u128 ^ 110664841672836513371722320153158223594_u128;
place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)) = _3;
_14 = [7867893160915984910_u64,12521879984504260534_u64];
_8 = !_21;
_7.0 = &_1;
_21 = 645585386121598374_u64 as isize;
match _11.0 {
0 => bb12,
1 => bb13,
2 => bb23,
2759870120 => bb25,
_ => bb24
}
}
bb23 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb24 = {
RET.2 = _23;
RET = (_6, Move(Field::<*const [u128; 2]>(Variant(_22.1, 2), 0)), _23);
place!(Field::<u8>(Variant(_18, 1), 0)) = 18128_i16 as u8;
_3.0 = _3.1 as u128;
_22.2 = _19;
_22.1 = Adt34::Variant2 { fld0: Move(RET.1),fld1: _19,fld2: _3.0,fld3: _24.0 };
match _3.1 {
0 => bb15,
1 => bb16,
340282366920938463455329437064506906858 => bb18,
_ => bb17
}
}
bb25 = {
place!(Field::<Adt21>(Variant(_22.1, 0), 6)) = Adt21 { fld0: _17 };
RET.0 = [Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).0,_3.0,Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).0,_3.0];
match _11.0 {
0 => bb3,
1 => bb26,
2 => bb27,
3 => bb28,
2759870120 => bb30,
_ => bb29
}
}
bb26 = {
RET.2 = _23;
RET = (_6, Move(Field::<*const [u128; 2]>(Variant(_22.1, 2), 0)), _23);
place!(Field::<u8>(Variant(_18, 1), 0)) = 18128_i16 as u8;
_3.0 = _3.1 as u128;
_22.2 = _19;
_22.1 = Adt34::Variant2 { fld0: Move(RET.1),fld1: _19,fld2: _3.0,fld3: _24.0 };
match _3.1 {
0 => bb15,
1 => bb16,
340282366920938463455329437064506906858 => bb18,
_ => bb17
}
}
bb27 = {
RET.2 = [2016349559283661296_u64,17024493785134055473_u64];
RET.0 = _6;
_3.0 = 122796241051486322902572281688003841090_u128 ^ 64339227665950156855985502237300005900_u128;
_9.0 = (-733524940_i32) | (-1684338230_i32);
_9.1 = (_3.2,);
Goto(bb3)
}
bb28 = {
_3.1 = Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1 ^ Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1;
_3.1 = !Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5).1;
place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)).2 = !_24.1.0;
_7.0 = &_24.1.0;
_3.0 = 153846760586928532898712571611847384840_u128 ^ 110664841672836513371722320153158223594_u128;
place!(Field::<(u128, i64, bool, [u128; 2])>(Variant(_22.1, 0), 5)) = _3;
_14 = [7867893160915984910_u64,12521879984504260534_u64];
_8 = !_21;
_7.0 = &_1;
_21 = 645585386121598374_u64 as isize;
match _11.0 {
0 => bb12,
1 => bb13,
2 => bb23,
2759870120 => bb25,
_ => bb24
}
}
bb29 = {
_6 = [_3.0,_3.0,_3.0,_3.0];
_6 = RET.0;
_3.1 = -2662705878494043923_i64;
_12 = 21974_i16 as f32;
_5.0 = &_9.1.0;
_7 = (Move(_5.0),);
_13 = &mut _6;
RET.2 = [9611719502120793520_u64,5749766280996697760_u64];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_14 = [13978769697180543968_u64,3594623745884427258_u64];
RET.2 = [2377563900692900530_u64,6553032353729421507_u64];
RET.0 = [_3.0,_3.0,_3.0,_3.0];
_6 = [_3.0,_3.0,_3.0,_3.0];
_16 = 70679788447995273833919033265873086228_i128 >> _3.0;
_9.1.0 = !_1;
_14 = [7332587226866606696_u64,3423264809497206844_u64];
RET.0 = _6;
RET.1 = core::ptr::addr_of!(_3.3);
_11.0 = (-23809_i16) as u32;
_3.0 = 266945227072493179267891449078488475768_u128 | 116568459564775207413047061462561377998_u128;
_14 = RET.2;
Goto(bb11)
}
bb30 = {
place!(Field::<u128>(Variant(_18, 2), 2)) = _3.0;
_36 = -_24.0;
match _11.0 {
0 => bb25,
1 => bb2,
2759870120 => bb32,
_ => bb31
}
}
bb31 = {
Return()
}
bb32 = {
place!(Field::<i32>(Variant(_18, 2), 3)) = _9.0;
_9 = (_36, _24.1);
RET.1 = Move(Field::<*const [u128; 2]>(Variant(_18, 2), 0));
place!(Field::<u128>(Variant(_22.1, 0), 3)) = !_3.0;
RET.1 = core::ptr::addr_of!(_30.3);
Goto(bb33)
}
bb33 = {
Call(_40 = dump_var(14_usize, 11_usize, Move(_11), 9_usize, Move(_9), 1_usize, Move(_1), 36_usize, Move(_36)), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Call(_40 = dump_var(14_usize, 21_usize, Move(_21), 16_usize, Move(_16), 2_usize, Move(_2), 41_usize, _41), ReturnTo(bb35), UnwindUnreachable())
}
bb35 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: bool,mut _2: (u128, i64, bool, [u128; 2]),mut _3: bool,mut _4: bool,mut _5: bool,mut _6: bool) -> [u64; 2] {
mir! {
type RET = [u64; 2];
let _7: &'static mut [i128; 4];
let _8: i64;
let _9: [i128; 7];
let _10: bool;
let _11: &'static mut [i128; 4];
let _12: &'static mut *mut u64;
let _13: [usize; 6];
let _14: [u16; 4];
let _15: [u16; 4];
let _16: *mut u16;
let _17: bool;
let _18: bool;
let _19: &'static mut Adt21;
let _20: *mut u16;
let _21: [usize; 2];
let _22: isize;
let _23: [i128; 7];
let _24: i64;
let _25: [u128; 2];
let _26: *mut *mut [u128; 2];
let _27: (i32, *const (u128, i64, bool, [u128; 2]));
let _28: Adt21;
let _29: i64;
let _30: f32;
let _31: [u64; 2];
let _32: ();
let _33: ();
{
RET = [1681170890553804408_u64,3337227329980413147_u64];
_2.1 = -(-4342871369575186494_i64);
RET = [7129410701523122199_u64,10112333288041111178_u64];
RET = [9725716177994859863_u64,15389829533669743979_u64];
_2.2 = _6 < _1;
_2.2 = _4 <= _5;
_5 = !_6;
RET = [131983797693839741_u64,5903826923487689758_u64];
RET = [4207252368599195326_u64,2326553717183470567_u64];
RET = [18161348004105090238_u64,18375622502451832536_u64];
_5 = _4 <= _3;
Goto(bb1)
}
bb1 = {
_2.3 = [_2.0,_2.0];
_2.2 = !_5;
RET = [2202500745590103130_u64,13975837176726199104_u64];
_3 = _2.2;
_5 = _1 >= _4;
_2.1 = 793164839860015924_i64;
_5 = _1;
_2.1 = 4210103484567837837_i64;
_3 = !_5;
_2.2 = _6;
_2.3 = [_2.0,_2.0];
_6 = _4;
RET = [7983141768993356022_u64,4976667636190580995_u64];
match _2.0 {
0 => bb2,
1 => bb3,
213719029091791634913921442054783677929 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
RET = [2253675771471175211_u64,6562542409941040335_u64];
_5 = _1;
RET = [8868973327947750273_u64,16895175811063106494_u64];
_3 = !_5;
_9 = [(-115352526813013957205454774089894468617_i128),(-19856357623178913781309200224743589815_i128),41021451631112683094723200512865325831_i128,(-56079415666006207570854877709299540635_i128),(-98487798522873952445962428787201682382_i128),115439509702974392418101218053165253593_i128,(-105771262747117127966964034906527698260_i128)];
_4 = _6;
_9 = [(-116039009436254677576623052907868690567_i128),74909037049261802748142519382059635035_i128,(-89982015272160307936016422932618224711_i128),33221938325974181973352877078975007685_i128,(-136525248499581740203931071528533325417_i128),101243988956274625152666058099648744436_i128,26601794576594035272163101873492506170_i128];
_2.0 = !25790326709245741734201535684915254316_u128;
_6 = _5;
_2.2 = _6;
_2.3 = [_2.0,_2.0];
_10 = _5;
_2.3 = [_2.0,_2.0];
_4 = _6 ^ _3;
RET = [1075776523701038858_u64,1058100088075450848_u64];
RET = [6203097795110124718_u64,13206529504870411053_u64];
_9 = [(-55774128322544310015497320639468290563_i128),57554224973974703875695988034734556471_i128,(-28721494865881028299128685540269224251_i128),(-7525389656367533438244699472777172615_i128),108027100835081894278596487326194424304_i128,75132868084401261990243251867162184140_i128,115939356499616874639572508297630178820_i128];
_1 = _5;
Goto(bb6)
}
bb6 = {
_1 = _6;
_8 = _2.1;
_10 = _5;
_4 = _6;
RET = [733721371944825819_u64,10407489842454394757_u64];
_2.0 = !198162603920766222449467818460768464356_u128;
_9 = [69465157172296092921728131480973373328_i128,(-155431630308993799554723595300345619104_i128),88679787793576150166916818626990422363_i128,(-29626573772268016567080011987566326807_i128),(-70096882872982142644601687553613828602_i128),37813843365158211708736877646665773001_i128,34708660040612087825242798909033101382_i128];
RET = [17916848598976752199_u64,13592068238329193979_u64];
RET = [15388661701623391521_u64,16068765463431265797_u64];
match _8 {
0 => bb1,
1 => bb5,
2 => bb7,
3 => bb8,
4210103484567837837 => bb10,
_ => bb9
}
}
bb7 = {
RET = [2253675771471175211_u64,6562542409941040335_u64];
_5 = _1;
RET = [8868973327947750273_u64,16895175811063106494_u64];
_3 = !_5;
_9 = [(-115352526813013957205454774089894468617_i128),(-19856357623178913781309200224743589815_i128),41021451631112683094723200512865325831_i128,(-56079415666006207570854877709299540635_i128),(-98487798522873952445962428787201682382_i128),115439509702974392418101218053165253593_i128,(-105771262747117127966964034906527698260_i128)];
_4 = _6;
_9 = [(-116039009436254677576623052907868690567_i128),74909037049261802748142519382059635035_i128,(-89982015272160307936016422932618224711_i128),33221938325974181973352877078975007685_i128,(-136525248499581740203931071528533325417_i128),101243988956274625152666058099648744436_i128,26601794576594035272163101873492506170_i128];
_2.0 = !25790326709245741734201535684915254316_u128;
_6 = _5;
_2.2 = _6;
_2.3 = [_2.0,_2.0];
_10 = _5;
_2.3 = [_2.0,_2.0];
_4 = _6 ^ _3;
RET = [1075776523701038858_u64,1058100088075450848_u64];
RET = [6203097795110124718_u64,13206529504870411053_u64];
_9 = [(-55774128322544310015497320639468290563_i128),57554224973974703875695988034734556471_i128,(-28721494865881028299128685540269224251_i128),(-7525389656367533438244699472777172615_i128),108027100835081894278596487326194424304_i128,75132868084401261990243251867162184140_i128,115939356499616874639572508297630178820_i128];
_1 = _5;
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = [12092220328750252807_u64,13653043528381331037_u64];
_2.2 = !_3;
_2.3 = [_2.0,_2.0];
_14 = [57224_u16,22933_u16,51697_u16,58828_u16];
_2.2 = !_5;
_3 = _10;
_4 = !_5;
_8 = _2.1;
_5 = _3;
_2.3 = [_2.0,_2.0];
_4 = _2.2 > _5;
_4 = _6 < _2.2;
_13 = [2227977426413353193_usize,12750046538895510757_usize,6_usize,15577182112432633765_usize,4_usize,5_usize];
_8 = _2.1;
_4 = _5;
_1 = _2.2 > _10;
_17 = !_4;
_4 = _1 != _3;
_1 = !_4;
_2.2 = _4 >= _10;
_10 = _4;
_2.3 = [_2.0,_2.0];
_9 = [136227362858313482059624661583013349415_i128,(-10520139826601323275908378895945353906_i128),(-19037783578637125881456942037581159056_i128),130135481048409509734033904803773658662_i128,(-89439657932384358859717157119298424491_i128),107374548650474496277104643939667164725_i128,1978640543510196966287940562349608158_i128];
Goto(bb11)
}
bb11 = {
_15 = [29162_u16,60474_u16,32874_u16,13784_u16];
_10 = _6;
_8 = _2.1 ^ _2.1;
_5 = _4 != _1;
_6 = _5 <= _5;
RET = [8486103415433902553_u64,9740422266166365702_u64];
_10 = _4 <= _3;
_5 = _10;
_13 = [5566194735307297361_usize,1_usize,3_usize,5_usize,9763143066193287995_usize,17819280999261623164_usize];
_6 = _1 > _3;
_1 = _2.2;
_14 = _15;
_18 = _2.2 < _1;
_2.2 = _8 != _8;
_1 = !_6;
_6 = !_17;
_3 = _1;
match _2.1 {
4210103484567837837 => bb12,
_ => bb3
}
}
bb12 = {
_8 = -_2.1;
_10 = _5;
_2.1 = _8 >> _2.0;
_17 = _18 > _4;
_15 = [57349_u16,55349_u16,4742_u16,12284_u16];
_1 = !_4;
_15 = [26342_u16,33278_u16,21303_u16,41959_u16];
_10 = _17 & _18;
_18 = _17;
_2.3 = [_2.0,_2.0];
_9 = [(-55663004408591028875107402604199975973_i128),1820260389158022668830895369712981322_i128,(-125156759057873279135554567549392010786_i128),95737487940757340509151340452831663157_i128,97586281716327525120859986735127598386_i128,(-144541775088623850226133666465823608881_i128),117463113109969971685089065906925439406_i128];
_2.3 = [_2.0,_2.0];
_18 = _3;
_9 = [(-40447904285052236086410102772801188548_i128),(-39656558611943902811755378408563216382_i128),(-56999195689231857335109874650754310325_i128),89070928804423873441560616911220960222_i128,(-74629063371523991091592806753825151215_i128),134982427629067827309892713458026384000_i128,(-66425541591065456603988491975111389089_i128)];
_18 = _17 != _6;
_2.0 = 201456840864787328275647397989158464890_u128 & 108104212974839972967075773684658510885_u128;
RET = [4087610016123618902_u64,4934587822667697842_u64];
Goto(bb13)
}
bb13 = {
_21 = [7_usize,14603760559523221678_usize];
_3 = _17 | _17;
_22 = _2.1 as isize;
_17 = _3 >= _5;
_2.0 = 11323270756330023239_u64 as u128;
_9 = [(-130523028055074561604751725237498976211_i128),(-162130751959789139026140207427368152425_i128),(-114376931821769413318810615625668392261_i128),117846743281125268809729231361104455977_i128,(-29128549724220480475842132840367769403_i128),112630599832088851914349797355851029877_i128,(-41193977407242997068813249483415511632_i128)];
_14 = _15;
_24 = 227_u8 as i64;
_18 = _17 != _1;
_2.2 = !_17;
_27.0 = 6_usize as i32;
_9 = [120829570135833778210018516660589498869_i128,(-26221823243160982640538941758544627421_i128),111527598800286312316321226646557895940_i128,8057719325272300090675762072695413665_i128,26038056612247880565297295862698217745_i128,(-47156342282200247997002263674432395090_i128),93956241102051585835100023502201680890_i128];
_27.0 = (-8767243_i32);
Call(_27.1 = fn16(_4), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_2.2 = _18 >= _3;
_24 = -_8;
_28 = Adt21 { fld0: 81_u8 };
RET = [13845033197678346429_u64,18418866006842263282_u64];
_19 = &mut _28;
_8 = !_2.1;
(*_19) = Adt21 { fld0: 198_u8 };
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(15_usize, 5_usize, Move(_5), 10_usize, Move(_10), 6_usize, Move(_6), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(15_usize, 2_usize, Move(_2), 4_usize, Move(_4), 22_usize, Move(_22), 24_usize, Move(_24)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: bool) -> *const (u128, i64, bool, [u128; 2]) {
mir! {
type RET = *const (u128, i64, bool, [u128; 2]);
let _2: isize;
let _3: isize;
let _4: f32;
let _5: ([u128; 4], *const [u128; 2], [u64; 2]);
let _6: char;
let _7: [usize; 2];
let _8: *const [i128; 4];
let _9: [usize; 6];
let _10: *mut *mut [u128; 2];
let _11: u16;
let _12: *mut i64;
let _13: Adt79;
let _14: char;
let _15: (*const (u128, i64, bool, [u128; 2]),);
let _16: *const (u128, i64, bool, [u128; 2]);
let _17: [u64; 2];
let _18: i64;
let _19: char;
let _20: [u16; 2];
let _21: u16;
let _22: u128;
let _23: [u64; 2];
let _24: f32;
let _25: *const char;
let _26: i64;
let _27: (bool,);
let _28: (char, i64, u128, &'static bool);
let _29: u32;
let _30: f32;
let _31: (u64, &'static u128);
let _32: i32;
let _33: i16;
let _34: f32;
let _35: f32;
let _36: (Adt48, &'static mut Adt21);
let _37: *const bool;
let _38: f64;
let _39: *const u128;
let _40: [isize; 2];
let _41: bool;
let _42: isize;
let _43: bool;
let _44: (i32, (bool,));
let _45: usize;
let _46: u64;
let _47: f64;
let _48: *mut u16;
let _49: [u64; 2];
let _50: f32;
let _51: &'static mut [i128; 4];
let _52: &'static [u64; 2];
let _53: i16;
let _54: Adt70;
let _55: &'static mut [u128; 4];
let _56: Adt34;
let _57: (u128, i64, bool, [u128; 2]);
let _58: Adt79;
let _59: &'static mut *const bool;
let _60: (u32,);
let _61: f64;
let _62: [usize; 6];
let _63: ();
let _64: ();
{
_1 = 12651537018610380317_u64 >= 15658919502766735404_u64;
_1 = true;
_1 = false | false;
_1 = !true;
_1 = !false;
_1 = 15696012521020917228_u64 < 8880363962972822422_u64;
_1 = true;
_1 = true;
_1 = true;
_1 = true;
_1 = true;
_1 = false;
_1 = !false;
_1 = false;
_1 = false ^ true;
_2 = 9223372036854775807_isize + 91_isize;
_1 = true;
_1 = !false;
_3 = _2;
_3 = -_2;
_3 = '\u{5a8d3}' as isize;
_1 = !true;
_2 = !_3;
_3 = 449936683637936342_i64 as isize;
_1 = !true;
Goto(bb1)
}
bb1 = {
_2 = 35268908869501076111818871404401959700_u128 as isize;
_2 = (-1806054301914336721_i64) as isize;
_3 = _2 + _2;
_1 = _2 == _2;
_3 = _2;
_4 = (-4438990033133682379_i64) as f32;
_4 = 6_usize as f32;
_1 = true;
_4 = 61277_u16 as f32;
_2 = _3;
Goto(bb2)
}
bb2 = {
_1 = false & false;
_5.2 = [3003294159969627220_u64,8146323874989288961_u64];
_4 = 179397020_u32 as f32;
_4 = _3 as f32;
_5.0 = [180092921205996332091544176829291983006_u128,198234469851176705233078293724673609122_u128,40085527040605551580317280045557373499_u128,120086228920638555241035361319626303736_u128];
_6 = '\u{3b8ef}';
_4 = 31582_u16 as f32;
_3 = _2;
_6 = '\u{6bff1}';
_5.2 = [7281203579076705302_u64,14539234938925425949_u64];
_5.2 = [2848608707479081254_u64,8857906361257243144_u64];
_5.2 = [15200143704278255043_u64,10437992771514342293_u64];
_2 = _3;
_6 = '\u{20310}';
_3 = _2;
_1 = !true;
_1 = false;
_6 = '\u{ac675}';
_5.0 = [145182395640816366662200918327878281213_u128,197792702322551385316850343618629377776_u128,217950217369726389291008989298839906443_u128,39474485180961664050383965659596050635_u128];
_9 = [18195936685888856981_usize,11048027912280819042_usize,5_usize,15728181848312491223_usize,3005385876852599399_usize,10577121516287661556_usize];
_3 = 1922858563_u32 as isize;
_2 = _3;
_5.0 = [77085621513838200209831172300012520967_u128,246657112076117824158854385686666863170_u128,309949375302551743128099917247194184455_u128,5746542167687550456826002900796751115_u128];
Call(_1 = fn17(_4, _9, _6, _9, _6, _6, _9, _5.0, _5.0, _2, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_2 = 44596552004071181508953648875239334979_u128 as isize;
_5.2 = [16372807175885960101_u64,15849239435788044474_u64];
_7 = [16440112548672743476_usize,8736974439630318226_usize];
_1 = true;
_2 = _3 << _3;
_3 = 4_usize as isize;
_2 = _3;
_3 = !_2;
_6 = '\u{c4f74}';
Goto(bb4)
}
bb4 = {
_6 = '\u{92462}';
_5.2 = [13346142963768920683_u64,9444631214924551163_u64];
_9 = [3_usize,1_usize,3385653111585979404_usize,11577207692209293559_usize,17906972991035101719_usize,0_usize];
_2 = _3;
_1 = !false;
_6 = '\u{397d3}';
_14 = _6;
_5.0 = [72844386476854716725431740653890608283_u128,282669322178031709224211820636499538441_u128,224917978259279445170214613526237908532_u128,220019425365391376174175966492565854311_u128];
_9 = [6550736273777057774_usize,8195191472018431441_usize,9103083325091206484_usize,1_usize,0_usize,17979034421631601637_usize];
_2 = _3;
_7 = [14791702453420164357_usize,3_usize];
_9 = [4_usize,15648219399932196091_usize,4712857642980019737_usize,17578504606317756589_usize,2582033222040214245_usize,3_usize];
_5.2 = [14661041948055417117_u64,2693897662136629730_u64];
Goto(bb5)
}
bb5 = {
_1 = true;
_13 = Adt79::Variant1 { fld0: (-49_i8),fld1: (-727123187_i32) };
place!(Field::<i32>(Variant(_13, 1), 1)) = 1160462465_i32;
_11 = 17011_u16;
_17 = _5.2;
_17 = _5.2;
place!(Field::<i32>(Variant(_13, 1), 1)) = 1204928703_i32;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_2 = _3 + _3;
_6 = _14;
_3 = _2 >> _2;
_5.2 = [17621415360832256826_u64,808569986684821787_u64];
_18 = (-1732675373112115609_i64);
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463461641932058656095847 => bb10,
_ => bb9
}
}
bb6 = {
_6 = '\u{92462}';
_5.2 = [13346142963768920683_u64,9444631214924551163_u64];
_9 = [3_usize,1_usize,3385653111585979404_usize,11577207692209293559_usize,17906972991035101719_usize,0_usize];
_2 = _3;
_1 = !false;
_6 = '\u{397d3}';
_14 = _6;
_5.0 = [72844386476854716725431740653890608283_u128,282669322178031709224211820636499538441_u128,224917978259279445170214613526237908532_u128,220019425365391376174175966492565854311_u128];
_9 = [6550736273777057774_usize,8195191472018431441_usize,9103083325091206484_usize,1_usize,0_usize,17979034421631601637_usize];
_2 = _3;
_7 = [14791702453420164357_usize,3_usize];
_9 = [4_usize,15648219399932196091_usize,4712857642980019737_usize,17578504606317756589_usize,2582033222040214245_usize,3_usize];
_5.2 = [14661041948055417117_u64,2693897662136629730_u64];
Goto(bb5)
}
bb7 = {
_2 = 44596552004071181508953648875239334979_u128 as isize;
_5.2 = [16372807175885960101_u64,15849239435788044474_u64];
_7 = [16440112548672743476_usize,8736974439630318226_usize];
_1 = true;
_2 = _3 << _3;
_3 = 4_usize as isize;
_2 = _3;
_3 = !_2;
_6 = '\u{c4f74}';
Goto(bb4)
}
bb8 = {
_1 = false & false;
_5.2 = [3003294159969627220_u64,8146323874989288961_u64];
_4 = 179397020_u32 as f32;
_4 = _3 as f32;
_5.0 = [180092921205996332091544176829291983006_u128,198234469851176705233078293724673609122_u128,40085527040605551580317280045557373499_u128,120086228920638555241035361319626303736_u128];
_6 = '\u{3b8ef}';
_4 = 31582_u16 as f32;
_3 = _2;
_6 = '\u{6bff1}';
_5.2 = [7281203579076705302_u64,14539234938925425949_u64];
_5.2 = [2848608707479081254_u64,8857906361257243144_u64];
_5.2 = [15200143704278255043_u64,10437992771514342293_u64];
_2 = _3;
_6 = '\u{20310}';
_3 = _2;
_1 = !true;
_1 = false;
_6 = '\u{ac675}';
_5.0 = [145182395640816366662200918327878281213_u128,197792702322551385316850343618629377776_u128,217950217369726389291008989298839906443_u128,39474485180961664050383965659596050635_u128];
_9 = [18195936685888856981_usize,11048027912280819042_usize,5_usize,15728181848312491223_usize,3005385876852599399_usize,10577121516287661556_usize];
_3 = 1922858563_u32 as isize;
_2 = _3;
_5.0 = [77085621513838200209831172300012520967_u128,246657112076117824158854385686666863170_u128,309949375302551743128099917247194184455_u128,5746542167687550456826002900796751115_u128];
Call(_1 = fn17(_4, _9, _6, _9, _6, _6, _9, _5.0, _5.0, _2, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_2 = 35268908869501076111818871404401959700_u128 as isize;
_2 = (-1806054301914336721_i64) as isize;
_3 = _2 + _2;
_1 = _2 == _2;
_3 = _2;
_4 = (-4438990033133682379_i64) as f32;
_4 = 6_usize as f32;
_1 = true;
_4 = 61277_u16 as f32;
_2 = _3;
Goto(bb2)
}
bb10 = {
_3 = _2 + _2;
_4 = 13535191149215642743_u64 as f32;
place!(Field::<[u64; 2]>(Variant(_13, 2), 0)) = [10021622969879770872_u64,8926166114675656388_u64];
_17 = [1447861860226389992_u64,18208859561319417463_u64];
_3 = _2 & _2;
_14 = _6;
_3 = _2;
_2 = !_3;
_12 = core::ptr::addr_of_mut!(_18);
_11 = Field::<u16>(Variant(_13, 2), 2);
_6 = _14;
_11 = _1 as u16;
Call(_3 = core::intrinsics::bswap(_2), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
(*_12) = 124_i8 as i64;
_21 = Field::<u16>(Variant(_13, 2), 2) % Field::<u16>(Variant(_13, 2), 2);
_5.0 = [265212709613487246594794530324237152709_u128,158499529272211104606211846429988364904_u128,244740346836113775440966266326362939567_u128,199863024473189158020220601997354373627_u128];
(*_12) = (-155948865272280733238534744339436802986_i128) as i64;
_6 = _14;
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [4_usize,6_usize,3191523975108085112_usize,2_usize,2620177218432088333_usize,1_usize];
_11 = !Field::<u16>(Variant(_13, 2), 2);
_19 = _6;
(*_12) = !(-2766378337489569815_i64);
_22 = 37941562424207060077892532248343197007_u128 - 237186465272892122623540914492677580172_u128;
_17 = [12105869616449744627_u64,1852670947871728649_u64];
SetDiscriminant(_13, 0);
_22 = !305677727992153342371283354425910771532_u128;
_7 = [15683906604822194977_usize,0_usize];
_1 = _2 < _2;
_3 = _2;
_7 = [14764656745523983207_usize,0_usize];
_1 = false;
_17 = [5696834489227225466_u64,5594557696248886006_u64];
_7 = [0_usize,8095109327716269505_usize];
place!(Field::<[i128; 4]>(Variant(_13, 0), 0)) = [(-65094035723880591579333792578908079917_i128),61474867989352131479621146089474727807_i128,31605267253618560568045217437937614766_i128,(-56441080740882320805917956195926374940_i128)];
_12 = core::ptr::addr_of_mut!((*_12));
_19 = _6;
_20 = [_11,_21];
_4 = 20159_i16 as f32;
_14 = _19;
_2 = (-30992_i16) as isize;
_6 = _19;
_18 = -(-5962243077460069522_i64);
Call(place!(Field::<[i128; 4]>(Variant(_13, 0), 0)) = fn18(_9, _19, _1, Move(_12)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
SetDiscriminant(_13, 0);
_9 = [1_usize,12307998880028507034_usize,12674923553501090327_usize,2_usize,11357395213472661112_usize,2687115262829518789_usize];
_21 = _3 as u16;
_20 = [_21,_11];
_22 = 9943005725908705798035595917458520149_u128 << _3;
_4 = (-29_i8) as f32;
_5.0 = [_22,_22,_22,_22];
Goto(bb13)
}
bb13 = {
_21 = _11 - _11;
_12 = core::ptr::addr_of_mut!(_18);
_11 = !_21;
_14 = _19;
_21 = _11 - _11;
_1 = true;
_11 = (*_12) as u16;
_4 = (-48140458092184479573561134547299765453_i128) as f32;
_24 = -_4;
_12 = core::ptr::addr_of_mut!((*_12));
_11 = _21;
_1 = !false;
_1 = true;
(*_12) = -(-4584393077804205262_i64);
_17 = [3540072914447385952_u64,10579462033316254855_u64];
_14 = _6;
_8 = core::ptr::addr_of!(place!(Field::<[i128; 4]>(Variant(_13, 0), 0)));
(*_12) = -(-4493134787231314559_i64);
_9 = [13127636796308094222_usize,3_usize,13958496801535419956_usize,8515041147978988299_usize,6_usize,7_usize];
place!(Field::<[i128; 4]>(Variant(_13, 0), 0)) = [(-157413721216440323191991396654858418676_i128),96559784509716455580753906232534799321_i128,1252355853997011380226889078376418156_i128,(-106028990908671689453616576563419385067_i128)];
_25 = core::ptr::addr_of!(_6);
_14 = _19;
_9 = [7_usize,5_usize,4092098813368790433_usize,2232264278353612699_usize,18007196265301499981_usize,7_usize];
_14 = (*_25);
SetDiscriminant(_13, 1);
_13 = Adt79::Variant1 { fld0: (-82_i8),fld1: (-1265369416_i32) };
_18 = (-6384209937865076131_i64) << _3;
_7 = [10250670554481990488_usize,8636218476756371199_usize];
Goto(bb14)
}
bb14 = {
_11 = !_21;
_5.0 = [_22,_22,_22,_22];
_28.1 = (*_12) | (*_12);
_26 = _18;
Goto(bb15)
}
bb15 = {
_18 = (-563343851_i32) as i64;
_28.0 = _6;
_5.2 = _17;
(*_12) = _4 as i64;
_13 = Adt79::Variant2 { fld0: _5.2,fld1: _9,fld2: _21 };
_11 = Field::<u16>(Variant(_13, 2), 2);
_28.3 = &_1;
_26 = (*_25) as i64;
_27 = (_1,);
_31.0 = !15559752650728431179_u64;
_29 = !1932415950_u32;
_25 = core::ptr::addr_of!(_28.0);
_1 = (*_25) != _28.0;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_20 = [_11,_21];
(*_25) = _6;
_29 = _14 as u32;
_28.2 = _22 & _22;
_9 = Field::<[usize; 6]>(Variant(_13, 2), 1);
_22 = _14 as u128;
_19 = (*_25);
Goto(bb16)
}
bb16 = {
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [4569935803765213679_usize,6_usize,3_usize,2773880652467213836_usize,2732699833549560641_usize,15445936838871561183_usize];
(*_12) = _28.2 as i64;
_30 = (*_12) as f32;
_33 = (-11219_i16);
_24 = -_30;
_28.0 = _6;
_31.1 = &_28.2;
Goto(bb17)
}
bb17 = {
_5.2 = [_31.0,_31.0];
_33 = -(-23387_i16);
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [14245295885592722845_usize,10960870940287624948_usize,11265187909712273832_usize,4_usize,4038334540403370367_usize,14212945885314136142_usize];
_6 = _19;
_11 = !_21;
_29 = !2889382485_u32;
_29 = 2648203797_u32;
SetDiscriminant(_13, 1);
_28.2 = _22 >> (*_12);
_3 = _2;
_2 = _3;
_14 = _28.0;
_3 = _2 >> (*_12);
_35 = _29 as f32;
place!(Field::<i8>(Variant(_13, 1), 0)) = 18_i8;
_27 = (_1,);
_19 = _28.0;
_21 = _11 >> _18;
_3 = _28.1 as isize;
_3 = _31.0 as isize;
match _29 {
0 => bb18,
2648203797 => bb20,
_ => bb19
}
}
bb18 = {
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [4569935803765213679_usize,6_usize,3_usize,2773880652467213836_usize,2732699833549560641_usize,15445936838871561183_usize];
(*_12) = _28.2 as i64;
_30 = (*_12) as f32;
_33 = (-11219_i16);
_24 = -_30;
_28.0 = _6;
_31.1 = &_28.2;
Goto(bb17)
}
bb19 = {
_1 = false & false;
_5.2 = [3003294159969627220_u64,8146323874989288961_u64];
_4 = 179397020_u32 as f32;
_4 = _3 as f32;
_5.0 = [180092921205996332091544176829291983006_u128,198234469851176705233078293724673609122_u128,40085527040605551580317280045557373499_u128,120086228920638555241035361319626303736_u128];
_6 = '\u{3b8ef}';
_4 = 31582_u16 as f32;
_3 = _2;
_6 = '\u{6bff1}';
_5.2 = [7281203579076705302_u64,14539234938925425949_u64];
_5.2 = [2848608707479081254_u64,8857906361257243144_u64];
_5.2 = [15200143704278255043_u64,10437992771514342293_u64];
_2 = _3;
_6 = '\u{20310}';
_3 = _2;
_1 = !true;
_1 = false;
_6 = '\u{ac675}';
_5.0 = [145182395640816366662200918327878281213_u128,197792702322551385316850343618629377776_u128,217950217369726389291008989298839906443_u128,39474485180961664050383965659596050635_u128];
_9 = [18195936685888856981_usize,11048027912280819042_usize,5_usize,15728181848312491223_usize,3005385876852599399_usize,10577121516287661556_usize];
_3 = 1922858563_u32 as isize;
_2 = _3;
_5.0 = [77085621513838200209831172300012520967_u128,246657112076117824158854385686666863170_u128,309949375302551743128099917247194184455_u128,5746542167687550456826002900796751115_u128];
Call(_1 = fn17(_4, _9, _6, _9, _6, _6, _9, _5.0, _5.0, _2, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb20 = {
_3 = !_2;
_24 = _30 - _30;
_32 = 1701484554_i32 << _28.2;
_5.2 = [_31.0,_31.0];
_24 = _30 - _4;
_31.0 = 17136499772353428912_u64;
_19 = (*_25);
_11 = 96248554778029781477787013185950074499_i128 as u16;
_28.0 = _14;
_18 = -_28.1;
_5.2 = _17;
_4 = -_24;
_23 = _5.2;
_14 = _6;
_20 = [_21,_21];
(*_25) = _6;
_3 = _29 as isize;
_25 = core::ptr::addr_of!(_28.0);
_22 = !_28.2;
Goto(bb21)
}
bb21 = {
_33 = 15505_i16;
(*_25) = _14;
Call(_1 = fn19(Move(_31), _29, _24, (*_12), _22), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
_28.1 = 11001714153613022708_usize as i64;
_31.0 = Field::<i8>(Variant(_13, 1), 0) as u64;
_34 = _31.0 as f32;
_33 = !(-24321_i16);
_7 = [5_usize,6115545215739379549_usize];
_28.2 = _3 as u128;
_23 = [_31.0,_31.0];
_3 = _2 << _22;
place!(Field::<i8>(Variant(_13, 1), 0)) = 65_i8 | (-127_i8);
Goto(bb23)
}
bb23 = {
_28.3 = &_1;
_42 = _3 ^ _3;
_28.1 = _18 & _26;
_26 = -_18;
_26 = (*_12);
_3 = _42;
_30 = _34 - _24;
_31.1 = &_28.2;
_31.1 = &_22;
_2 = _42;
_38 = _22 as f64;
_13 = Adt79::Variant1 { fld0: (-20_i8),fld1: _32 };
_7 = [6350214803741964527_usize,5962447475155162220_usize];
_31.1 = &_22;
_39 = core::ptr::addr_of!(_28.2);
_42 = !_2;
_38 = _33 as f64;
(*_25) = _19;
(*_12) = _26;
_29 = 2453793847_u32 & 3405014079_u32;
_31.0 = 6995202246645175310_u64;
_22 = 142_u8 as u128;
_13 = Adt79::Variant1 { fld0: (-58_i8),fld1: _32 };
_45 = 5975227122686913581_usize * 340983294599440545_usize;
_26 = _22 as i64;
_14 = (*_25);
_40 = [_2,_42];
match _31.0 {
6995202246645175310 => bb25,
_ => bb24
}
}
bb24 = {
_18 = (-563343851_i32) as i64;
_28.0 = _6;
_5.2 = _17;
(*_12) = _4 as i64;
_13 = Adt79::Variant2 { fld0: _5.2,fld1: _9,fld2: _21 };
_11 = Field::<u16>(Variant(_13, 2), 2);
_28.3 = &_1;
_26 = (*_25) as i64;
_27 = (_1,);
_31.0 = !15559752650728431179_u64;
_29 = !1932415950_u32;
_25 = core::ptr::addr_of!(_28.0);
_1 = (*_25) != _28.0;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_20 = [_11,_21];
(*_25) = _6;
_29 = _14 as u32;
_28.2 = _22 & _22;
_9 = Field::<[usize; 6]>(Variant(_13, 2), 1);
_22 = _14 as u128;
_19 = (*_25);
Goto(bb16)
}
bb25 = {
_6 = _28.0;
match _31.0 {
0 => bb26,
1 => bb27,
6995202246645175310 => bb29,
_ => bb28
}
}
bb26 = {
_2 = 44596552004071181508953648875239334979_u128 as isize;
_5.2 = [16372807175885960101_u64,15849239435788044474_u64];
_7 = [16440112548672743476_usize,8736974439630318226_usize];
_1 = true;
_2 = _3 << _3;
_3 = 4_usize as isize;
_2 = _3;
_3 = !_2;
_6 = '\u{c4f74}';
Goto(bb4)
}
bb27 = {
_1 = false & false;
_5.2 = [3003294159969627220_u64,8146323874989288961_u64];
_4 = 179397020_u32 as f32;
_4 = _3 as f32;
_5.0 = [180092921205996332091544176829291983006_u128,198234469851176705233078293724673609122_u128,40085527040605551580317280045557373499_u128,120086228920638555241035361319626303736_u128];
_6 = '\u{3b8ef}';
_4 = 31582_u16 as f32;
_3 = _2;
_6 = '\u{6bff1}';
_5.2 = [7281203579076705302_u64,14539234938925425949_u64];
_5.2 = [2848608707479081254_u64,8857906361257243144_u64];
_5.2 = [15200143704278255043_u64,10437992771514342293_u64];
_2 = _3;
_6 = '\u{20310}';
_3 = _2;
_1 = !true;
_1 = false;
_6 = '\u{ac675}';
_5.0 = [145182395640816366662200918327878281213_u128,197792702322551385316850343618629377776_u128,217950217369726389291008989298839906443_u128,39474485180961664050383965659596050635_u128];
_9 = [18195936685888856981_usize,11048027912280819042_usize,5_usize,15728181848312491223_usize,3005385876852599399_usize,10577121516287661556_usize];
_3 = 1922858563_u32 as isize;
_2 = _3;
_5.0 = [77085621513838200209831172300012520967_u128,246657112076117824158854385686666863170_u128,309949375302551743128099917247194184455_u128,5746542167687550456826002900796751115_u128];
Call(_1 = fn17(_4, _9, _6, _9, _6, _6, _9, _5.0, _5.0, _2, _2), ReturnTo(bb3), UnwindUnreachable())
}
bb28 = {
_5.2 = [_31.0,_31.0];
_33 = -(-23387_i16);
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [14245295885592722845_usize,10960870940287624948_usize,11265187909712273832_usize,4_usize,4038334540403370367_usize,14212945885314136142_usize];
_6 = _19;
_11 = !_21;
_29 = !2889382485_u32;
_29 = 2648203797_u32;
SetDiscriminant(_13, 1);
_28.2 = _22 >> (*_12);
_3 = _2;
_2 = _3;
_14 = _28.0;
_3 = _2 >> (*_12);
_35 = _29 as f32;
place!(Field::<i8>(Variant(_13, 1), 0)) = 18_i8;
_27 = (_1,);
_19 = _28.0;
_21 = _11 >> _18;
_3 = _28.1 as isize;
_3 = _31.0 as isize;
match _29 {
0 => bb18,
2648203797 => bb20,
_ => bb19
}
}
bb29 = {
_44.1.0 = !_27.0;
_18 = _28.1;
_38 = _4 as f64;
place!(Field::<i32>(Variant(_13, 1), 1)) = -_32;
_29 = !1952313621_u32;
_45 = 1_usize;
(*_12) = -_28.1;
_44.1 = _27;
_41 = _26 > _28.1;
_26 = (-77407814932607065250703481219104158098_i128) as i64;
_14 = (*_25);
match _7[_45] {
0 => bb1,
1 => bb30,
2 => bb31,
3 => bb32,
4 => bb33,
5 => bb34,
5962447475155162220 => bb36,
_ => bb35
}
}
bb30 = {
(*_12) = 124_i8 as i64;
_21 = Field::<u16>(Variant(_13, 2), 2) % Field::<u16>(Variant(_13, 2), 2);
_5.0 = [265212709613487246594794530324237152709_u128,158499529272211104606211846429988364904_u128,244740346836113775440966266326362939567_u128,199863024473189158020220601997354373627_u128];
(*_12) = (-155948865272280733238534744339436802986_i128) as i64;
_6 = _14;
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [4_usize,6_usize,3191523975108085112_usize,2_usize,2620177218432088333_usize,1_usize];
_11 = !Field::<u16>(Variant(_13, 2), 2);
_19 = _6;
(*_12) = !(-2766378337489569815_i64);
_22 = 37941562424207060077892532248343197007_u128 - 237186465272892122623540914492677580172_u128;
_17 = [12105869616449744627_u64,1852670947871728649_u64];
SetDiscriminant(_13, 0);
_22 = !305677727992153342371283354425910771532_u128;
_7 = [15683906604822194977_usize,0_usize];
_1 = _2 < _2;
_3 = _2;
_7 = [14764656745523983207_usize,0_usize];
_1 = false;
_17 = [5696834489227225466_u64,5594557696248886006_u64];
_7 = [0_usize,8095109327716269505_usize];
place!(Field::<[i128; 4]>(Variant(_13, 0), 0)) = [(-65094035723880591579333792578908079917_i128),61474867989352131479621146089474727807_i128,31605267253618560568045217437937614766_i128,(-56441080740882320805917956195926374940_i128)];
_12 = core::ptr::addr_of_mut!((*_12));
_19 = _6;
_20 = [_11,_21];
_4 = 20159_i16 as f32;
_14 = _19;
_2 = (-30992_i16) as isize;
_6 = _19;
_18 = -(-5962243077460069522_i64);
Call(place!(Field::<[i128; 4]>(Variant(_13, 0), 0)) = fn18(_9, _19, _1, Move(_12)), ReturnTo(bb12), UnwindUnreachable())
}
bb31 = {
_6 = '\u{92462}';
_5.2 = [13346142963768920683_u64,9444631214924551163_u64];
_9 = [3_usize,1_usize,3385653111585979404_usize,11577207692209293559_usize,17906972991035101719_usize,0_usize];
_2 = _3;
_1 = !false;
_6 = '\u{397d3}';
_14 = _6;
_5.0 = [72844386476854716725431740653890608283_u128,282669322178031709224211820636499538441_u128,224917978259279445170214613526237908532_u128,220019425365391376174175966492565854311_u128];
_9 = [6550736273777057774_usize,8195191472018431441_usize,9103083325091206484_usize,1_usize,0_usize,17979034421631601637_usize];
_2 = _3;
_7 = [14791702453420164357_usize,3_usize];
_9 = [4_usize,15648219399932196091_usize,4712857642980019737_usize,17578504606317756589_usize,2582033222040214245_usize,3_usize];
_5.2 = [14661041948055417117_u64,2693897662136629730_u64];
Goto(bb5)
}
bb32 = {
_1 = true;
_13 = Adt79::Variant1 { fld0: (-49_i8),fld1: (-727123187_i32) };
place!(Field::<i32>(Variant(_13, 1), 1)) = 1160462465_i32;
_11 = 17011_u16;
_17 = _5.2;
_17 = _5.2;
place!(Field::<i32>(Variant(_13, 1), 1)) = 1204928703_i32;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_2 = _3 + _3;
_6 = _14;
_3 = _2 >> _2;
_5.2 = [17621415360832256826_u64,808569986684821787_u64];
_18 = (-1732675373112115609_i64);
match _18 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463461641932058656095847 => bb10,
_ => bb9
}
}
bb33 = {
_18 = (-563343851_i32) as i64;
_28.0 = _6;
_5.2 = _17;
(*_12) = _4 as i64;
_13 = Adt79::Variant2 { fld0: _5.2,fld1: _9,fld2: _21 };
_11 = Field::<u16>(Variant(_13, 2), 2);
_28.3 = &_1;
_26 = (*_25) as i64;
_27 = (_1,);
_31.0 = !15559752650728431179_u64;
_29 = !1932415950_u32;
_25 = core::ptr::addr_of!(_28.0);
_1 = (*_25) != _28.0;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_20 = [_11,_21];
(*_25) = _6;
_29 = _14 as u32;
_28.2 = _22 & _22;
_9 = Field::<[usize; 6]>(Variant(_13, 2), 1);
_22 = _14 as u128;
_19 = (*_25);
Goto(bb16)
}
bb34 = {
_18 = (-563343851_i32) as i64;
_28.0 = _6;
_5.2 = _17;
(*_12) = _4 as i64;
_13 = Adt79::Variant2 { fld0: _5.2,fld1: _9,fld2: _21 };
_11 = Field::<u16>(Variant(_13, 2), 2);
_28.3 = &_1;
_26 = (*_25) as i64;
_27 = (_1,);
_31.0 = !15559752650728431179_u64;
_29 = !1932415950_u32;
_25 = core::ptr::addr_of!(_28.0);
_1 = (*_25) != _28.0;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _11 };
_20 = [_11,_21];
(*_25) = _6;
_29 = _14 as u32;
_28.2 = _22 & _22;
_9 = Field::<[usize; 6]>(Variant(_13, 2), 1);
_22 = _14 as u128;
_19 = (*_25);
Goto(bb16)
}
bb35 = {
_28.3 = &_1;
_42 = _3 ^ _3;
_28.1 = _18 & _26;
_26 = -_18;
_26 = (*_12);
_3 = _42;
_30 = _34 - _24;
_31.1 = &_28.2;
_31.1 = &_22;
_2 = _42;
_38 = _22 as f64;
_13 = Adt79::Variant1 { fld0: (-20_i8),fld1: _32 };
_7 = [6350214803741964527_usize,5962447475155162220_usize];
_31.1 = &_22;
_39 = core::ptr::addr_of!(_28.2);
_42 = !_2;
_38 = _33 as f64;
(*_25) = _19;
(*_12) = _26;
_29 = 2453793847_u32 & 3405014079_u32;
_31.0 = 6995202246645175310_u64;
_22 = 142_u8 as u128;
_13 = Adt79::Variant1 { fld0: (-58_i8),fld1: _32 };
_45 = 5975227122686913581_usize * 340983294599440545_usize;
_26 = _22 as i64;
_14 = (*_25);
_40 = [_2,_42];
match _31.0 {
6995202246645175310 => bb25,
_ => bb24
}
}
bb36 = {
(*_25) = _14;
_31.1 = &_22;
_31.0 = _29 as u64;
_17 = [_23[_45],_31.0];
_14 = (*_25);
_38 = _20[_45] as f64;
_3 = _38 as isize;
_14 = (*_25);
_5.2 = [_31.0,_31.0];
_26 = _29 as i64;
_25 = core::ptr::addr_of!((*_25));
_2 = -_42;
_23 = [_5.2[_45],_17[_45]];
_25 = core::ptr::addr_of!(_6);
_49[_45] = 112_u8 as u64;
_44.0 = _32;
_13 = Adt79::Variant2 { fld0: _17,fld1: _9,fld2: _21 };
_50 = _4 - _4;
_29 = 2987996830_u32;
_52 = &_5.2;
_44.0 = -_32;
_37 = core::ptr::addr_of!(_1);
_23 = _5.2;
_47 = 17_i8 as f64;
_14 = _19;
(*_25) = _19;
Goto(bb37)
}
bb37 = {
_46 = (*_52)[_45];
_48 = core::ptr::addr_of_mut!(_11);
_24 = _30 * _4;
_29 = 2846297354_u32 & 396959081_u32;
_20 = [_21,Field::<u16>(Variant(_13, 2), 2)];
_6 = _14;
_16 = core::ptr::addr_of!(_57);
(*_25) = _19;
_57.3[_45] = (*_39);
_20 = [_21,_21];
place!(Field::<[usize; 6]>(Variant(_13, 2), 1)) = [_45,_9[_45],_9[_45],_9[_45],_9[_45],_9[_45]];
_5.2 = [_46,_17[_45]];
RET = Move(_16);
_13 = Adt79::Variant1 { fld0: 44_i8,fld1: _32 };
_57.3[_45] = _22 ^ _5.0[_45];
RET = core::ptr::addr_of!(_57);
_50 = _34 + _34;
_45 = _5.0[_45] as usize;
_5.2 = _23;
(*RET).1 = _29 as i64;
(*RET).0 = !_22;
_37 = core::ptr::addr_of!(_41);
Goto(bb38)
}
bb38 = {
Call(_63 = dump_var(16_usize, 11_usize, Move(_11), 23_usize, Move(_23), 17_usize, Move(_17), 41_usize, Move(_41)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_63 = dump_var(16_usize, 44_usize, Move(_44), 21_usize, Move(_21), 40_usize, Move(_40), 3_usize, Move(_3)), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Call(_63 = dump_var(16_usize, 1_usize, Move(_1), 22_usize, Move(_22), 33_usize, Move(_33), 2_usize, Move(_2)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
Call(_63 = dump_var(16_usize, 29_usize, Move(_29), 64_usize, _64, 64_usize, _64, 64_usize, _64), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: f32,mut _2: [usize; 6],mut _3: char,mut _4: [usize; 6],mut _5: char,mut _6: char,mut _7: [usize; 6],mut _8: [u128; 4],mut _9: [u128; 4],mut _10: isize,mut _11: isize) -> bool {
mir! {
type RET = bool;
let _12: f32;
let _13: [i128; 7];
let _14: Adt23;
let _15: Adt85;
let _16: *const [i128; 4];
let _17: *mut i64;
let _18: [i128; 4];
let _19: &'static bool;
let _20: isize;
let _21: &'static mut Adt23;
let _22: [isize; 2];
let _23: u8;
let _24: Adt23;
let _25: &'static mut *const u128;
let _26: isize;
let _27: *const (u128, i64, bool, [u128; 2]);
let _28: f32;
let _29: char;
let _30: char;
let _31: bool;
let _32: f32;
let _33: usize;
let _34: Adt21;
let _35: bool;
let _36: Adt48;
let _37: char;
let _38: f64;
let _39: f64;
let _40: i64;
let _41: f64;
let _42: char;
let _43: i128;
let _44: isize;
let _45: usize;
let _46: char;
let _47: [usize; 2];
let _48: f32;
let _49: ();
let _50: ();
{
_9 = _8;
_1 = (-102295909199331345046275116662051818879_i128) as f32;
_6 = _3;
_10 = (-152156514897792587579730299875524500993_i128) as isize;
_8 = _9;
RET = _3 != _6;
RET = true | false;
_9 = [167240583886377762072260148400130841247_u128,182090598083565243878965922313130421152_u128,20200337574703523443784194307104985406_u128,8532542401602100106658659127171138225_u128];
_3 = _6;
_2 = [2_usize,5526556833974802239_usize,18195789239993614190_usize,0_usize,5_usize,7063105509500483894_usize];
_6 = _5;
_10 = _11;
_2 = _4;
_8 = [101690363842561907731098572270584743628_u128,240626466973813441270033720874280812796_u128,120369854489733114977614588280567422073_u128,112324382392047792732246518056056312809_u128];
_2 = [17868672787006880043_usize,14265780706188095389_usize,799513332193627892_usize,5_usize,6_usize,6_usize];
_9 = [318321566501711730543588062711485731349_u128,141073500409840688993306202940224775176_u128,238777346303490326014238882521646724862_u128,32120853671791667607817700627824851132_u128];
RET = !false;
_9 = _8;
_10 = _11;
_4 = [3_usize,7805114345885917940_usize,5238397613486274429_usize,922051952032659766_usize,6_usize,4_usize];
_4 = _7;
_4 = [1_usize,15617320939589824538_usize,1_usize,7329754382424464010_usize,5_usize,15035252479651636694_usize];
_1 = 1_u8 as f32;
_12 = -_1;
Goto(bb1)
}
bb1 = {
_12 = _1;
_9 = [136518261410629734950346947385009518004_u128,159432959332487947839742839977399313170_u128,287395712876601300771737359036032419572_u128,47221419527842102830418934380138937971_u128];
_13 = [(-38827550846682479820316322309301268585_i128),(-161577959587695627472078959071271359643_i128),152961313752535627425269986951349967753_i128,7391303169389026125058031216375847956_i128,84202796097789373577589639262953754978_i128,(-113487673277950040741417543697700898458_i128),(-126723802692286445655338598708978919194_i128)];
_13 = [78283487016234292109927806828984587550_i128,109619449920055323300103957367409047615_i128,(-179754226046883630903627504557848194_i128),65903369285956611234098286545990205455_i128,(-159816731103001107221843827278555707144_i128),(-124294958557165166993066414000039384505_i128),(-111377957964046130101338331094602564917_i128)];
_2 = _7;
_18 = [138674189076976912524331547483103333976_i128,139094001327125108396522751426350704355_i128,(-75480193064574800062387547564336811807_i128),(-139049575027302467937088362184661714057_i128)];
_4 = [7563144793138609029_usize,10712397519988995638_usize,2_usize,0_usize,16633323616370570310_usize,4_usize];
_4 = _7;
_3 = _6;
RET = _11 < _11;
_10 = _11;
_4 = [228696769501763016_usize,13058134876935677173_usize,16523577784363904772_usize,2_usize,2028782623832809936_usize,15345960807267266666_usize];
_13 = [(-57238850070605870866938556222057236694_i128),(-152347829421594195841644026161132781131_i128),150452297129911390268026523642303567460_i128,9183366134837476014799916171405660215_i128,78853020109994745497913189252255390549_i128,(-29359626973527396169351998734907378597_i128),(-160884626232344711000728870808545734569_i128)];
_13 = [34846565464495156631326391355397295759_i128,61143053561963882972384549607417457626_i128,(-23054829919648166668300671247482743269_i128),53736870232254724798829758640318381489_i128,(-119123102955114386472249510941953166128_i128),162052198046513576476788872311663176729_i128,(-51686054837461420569315784366113320335_i128)];
Goto(bb2)
}
bb2 = {
_8 = _9;
_9 = _8;
RET = false;
_22 = [_11,_11];
_16 = core::ptr::addr_of!(_18);
_19 = &RET;
_1 = 159773634869389912345870996903268847590_u128 as f32;
_11 = -_10;
_7 = _2;
_7 = [9557560968886831862_usize,0_usize,7465147870391726955_usize,5_usize,15758494445300768174_usize,5129306817648903197_usize];
(*_16) = [42166823443384850154953132020220331232_i128,(-110198846005286346814200872982670319482_i128),75286999950830969097771799155810140709_i128,126267001415391046757104352089964229738_i128];
_7 = _4;
_23 = 241_u8 + 32_u8;
RET = !false;
_5 = _3;
RET = false;
Goto(bb3)
}
bb3 = {
_6 = _3;
_16 = core::ptr::addr_of!((*_16));
_20 = !_10;
_11 = _10 ^ _20;
_4 = _7;
RET = !false;
_7 = _2;
(*_16) = [(-152569021654607496870901371352783022936_i128),131366484136053620538117423758314758204_i128,67165778572719950249876843733948845902_i128,(-50499414329080545024303504179547540857_i128)];
_8 = _9;
_1 = -_12;
_20 = _10 - _11;
_29 = _6;
_2 = [11085851252523485652_usize,12976605139939394394_usize,5_usize,16273736578327516940_usize,2_usize,6222674358729086650_usize];
_7 = _2;
Goto(bb4)
}
bb4 = {
_11 = _20 << _23;
_26 = (-53730315936176267372991390428514533309_i128) as isize;
_28 = _23 as f32;
_26 = _11 + _11;
_5 = _3;
Goto(bb5)
}
bb5 = {
_28 = _12;
_12 = _1 * _1;
_11 = 37202_u16 as isize;
_30 = _6;
_10 = _11 & _26;
_10 = -_26;
(*_16) = [(-136212529204862432995711587149541975075_i128),(-113346142424506931476537483473911476562_i128),102382616309168934286532220911920886553_i128,90418984370041865532537231206337161555_i128];
_30 = _3;
_4 = [4_usize,17593415603474917453_usize,8451611397163480213_usize,2_usize,2_usize,8914729251479943950_usize];
_18 = [(-149580647631369485362681889380525410340_i128),42113878949489869923628205741530446668_i128,84595981866399436911376828439388298915_i128,136060760526438999948813039965205520580_i128];
_13 = [(-130666095697343850630839635966808953752_i128),(-142440752965527027429218853745396673234_i128),(-124716433816107425213368322722895712096_i128),(-1621764468005539986344676630665824177_i128),(-75302141044250318918399109473757954618_i128),(-83389007681706296991503033874637911673_i128),(-36117335960463873774851146508578433091_i128)];
_10 = (-13704_i16) as isize;
_22 = [_26,_26];
_12 = _1;
_5 = _3;
_31 = RET;
Goto(bb6)
}
bb6 = {
_32 = -_1;
_13 = [(-26918978155503764136427833629496446637_i128),(-65669689871127217159315658336336423733_i128),49033501946881884147626275423880952390_i128,58760623804763518205131822473094485620_i128,(-36864303168934161761363838687850212232_i128),(-145208331532328575099154881558745388891_i128),115178283110276733549920685936514178243_i128];
_1 = _12;
_12 = -_32;
_8 = _9;
_32 = -_28;
_34.fld0 = _23;
_13 = [(-116575695430990858074725339154740082974_i128),141536852110931321852399159491973235951_i128,(-111047502534911155719068883906109176109_i128),(-105632167957128284366153765040925976276_i128),(-141862340311732440801393189439629396967_i128),59414869529679125776532970456873994197_i128,132525439990379300803752064144830629819_i128];
Goto(bb7)
}
bb7 = {
_2 = [7677596121328122957_usize,13561408319172882203_usize,2_usize,3_usize,1_usize,6_usize];
_34.fld0 = 5408039816328815097_u64 as u8;
_16 = core::ptr::addr_of!((*_16));
_31 = _20 > _11;
RET = _31;
_29 = _5;
(*_16) = [14257773488076606564614816364923958872_i128,(-48880262480351481524825343192241002981_i128),12007170977662404167621459768446259701_i128,107459791341662697395663280345135560015_i128];
_1 = -_12;
_5 = _6;
Goto(bb8)
}
bb8 = {
_30 = _29;
_20 = _26;
_3 = _5;
_7 = [4723203143955246475_usize,13525953773999860282_usize,15050825557605205681_usize,0_usize,3_usize,8859383040138695089_usize];
_8 = [255924180293493549911511702257839026427_u128,173845105999910078516234624909896381519_u128,83100461123900195408775247487017925675_u128,108258181268543177776583623307352539314_u128];
(*_16) = [(-77959805486123214484332449264608046499_i128),(-67265891851751189827895642538724805636_i128),(-161841774912098968296461540874221337105_i128),90088589526088333326231357540139987328_i128];
_32 = -_1;
_26 = _11;
_7 = [18378021713503284284_usize,2_usize,6_usize,13635322384607012215_usize,2_usize,2_usize];
_20 = !_10;
(*_16) = [168727328166901480300803883800022731326_i128,(-137625371921752254221672979347076242865_i128),136686446676525024174292295512673676984_i128,(-129276982524749169807004954663329706543_i128)];
_11 = _10;
Goto(bb9)
}
bb9 = {
_28 = _32 - _32;
_33 = _29 as usize;
(*_16) = [(-79025185753828006157436356015238429408_i128),(-98603527911184887250503394389370261560_i128),(-48913022630942708465208834914898648597_i128),(-61911585273827892675494271004995724450_i128)];
_32 = -_28;
_31 = RET == RET;
_12 = _33 as f32;
_6 = _3;
_2 = [_33,_33,_33,_33,_33,_33];
_8 = _9;
_7 = [_33,_33,_33,_33,_33,_33];
_34 = Adt21 { fld0: _23 };
_39 = (-3681536990103222877361466464476769624_i128) as f64;
Goto(bb10)
}
bb10 = {
_30 = _5;
_34.fld0 = _23;
_22 = [_20,_10];
_19 = &RET;
_13 = [(-153537106619696599375386896655187091233_i128),37097613656703980091361691835971513278_i128,140260007536801128517422870453515835358_i128,(-121713167358969103006408081009227169456_i128),(-57439772383997573290493956555367248748_i128),23162258032883368511745519683494121310_i128,22004312932886973109150366793640157758_i128];
_13 = [(-17640146401837909707147605852502601327_i128),28263088041720310628351479453743796342_i128,28836386149543265506712737828526590439_i128,138811909794840386299678038751222451370_i128,(-109614858568965274757504013568411865868_i128),54053089650523840774268044504377185741_i128,2947634053640721163201279890193344477_i128];
_1 = -_28;
_34.fld0 = !_23;
_23 = !_34.fld0;
_12 = _33 as f32;
_16 = core::ptr::addr_of!(_18);
_16 = core::ptr::addr_of!((*_16));
_8 = _9;
Goto(bb11)
}
bb11 = {
_34 = Adt21 { fld0: _23 };
_28 = _23 as f32;
RET = _31;
_18 = [17630583590375845427053571692925312968_i128,10742941317619238166049448908846059307_i128,134981148924159550780072914556002952787_i128,(-101432029008587341650065195304461725090_i128)];
_5 = _6;
_19 = &RET;
_32 = _12 - _1;
RET = _31;
_43 = !(-76166867899614195713670816967243904103_i128);
_40 = (-2909496265813328175_i64);
_35 = _31;
_4 = _2;
RET = _31 & _35;
_34.fld0 = _23;
RET = !_35;
_31 = _35;
_28 = _32;
_45 = _5 as usize;
match _40 {
0 => bb2,
340282366920938463460465111165954883281 => bb13,
_ => bb12
}
}
bb12 = {
_8 = _9;
_9 = _8;
RET = false;
_22 = [_11,_11];
_16 = core::ptr::addr_of!(_18);
_19 = &RET;
_1 = 159773634869389912345870996903268847590_u128 as f32;
_11 = -_10;
_7 = _2;
_7 = [9557560968886831862_usize,0_usize,7465147870391726955_usize,5_usize,15758494445300768174_usize,5129306817648903197_usize];
(*_16) = [42166823443384850154953132020220331232_i128,(-110198846005286346814200872982670319482_i128),75286999950830969097771799155810140709_i128,126267001415391046757104352089964229738_i128];
_7 = _4;
_23 = 241_u8 + 32_u8;
RET = !false;
_5 = _3;
RET = false;
Goto(bb3)
}
bb13 = {
_17 = core::ptr::addr_of_mut!(_40);
_47 = [_45,_33];
_1 = _28 + _28;
RET = _35 <= _35;
_35 = RET;
_17 = core::ptr::addr_of_mut!((*_17));
RET = _35 == _35;
_46 = _3;
_11 = _6 as isize;
_23 = _34.fld0;
_35 = !_31;
_28 = _1;
(*_17) = 5414998763315735173_i64;
_19 = &RET;
_22 = [_11,_11];
_1 = _32;
_23 = _34.fld0 & _34.fld0;
RET = _31 < _31;
_48 = _28 - _32;
_19 = &_35;
_45 = _35 as usize;
_9 = [216395382426853829628063359809572122745_u128,321928741751021113360419827482234052309_u128,1424708124680196424097181131111198168_u128,258899051636145646047681268967040099777_u128];
_2 = [_45,_33,_45,_45,_45,_45];
_39 = 159289756_u32 as f64;
Goto(bb14)
}
bb14 = {
Call(_49 = dump_var(17_usize, 30_usize, Move(_30), 7_usize, Move(_7), 26_usize, Move(_26), 18_usize, Move(_18)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Call(_49 = dump_var(17_usize, 47_usize, Move(_47), 9_usize, Move(_9), 13_usize, Move(_13), 40_usize, Move(_40)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(17_usize, 23_usize, Move(_23), 4_usize, Move(_4), 3_usize, Move(_3), 45_usize, Move(_45)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(17_usize, 2_usize, Move(_2), 50_usize, _50, 50_usize, _50, 50_usize, _50), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [usize; 6],mut _2: char,mut _3: bool,mut _4: *mut i64) -> [i128; 4] {
mir! {
type RET = [i128; 4];
let _5: i16;
let _6: bool;
let _7: i64;
let _8: &'static mut [bool; 7];
let _9: i16;
let _10: i64;
let _11: isize;
let _12: char;
let _13: &'static mut u8;
let _14: bool;
let _15: char;
let _16: Adt79;
let _17: u128;
let _18: (i32, (bool,));
let _19: Adt79;
let _20: f64;
let _21: [i128; 7];
let _22: (i32, *const (u128, i64, bool, [u128; 2]));
let _23: *const char;
let _24: u128;
let _25: (u8, [u128; 2], i32, *const [u128; 2]);
let _26: (bool,);
let _27: isize;
let _28: &'static mut Adt23;
let _29: [u64; 4];
let _30: &'static mut *const u128;
let _31: f64;
let _32: [u16; 4];
let _33: i32;
let _34: (i32, *const (u128, i64, bool, [u128; 2]));
let _35: bool;
let _36: *const [i128; 4];
let _37: &'static i32;
let _38: u128;
let _39: f32;
let _40: *mut [u128; 2];
let _41: isize;
let _42: [u128; 2];
let _43: f32;
let _44: isize;
let _45: *mut f64;
let _46: isize;
let _47: [usize; 6];
let _48: (&'static bool,);
let _49: isize;
let _50: &'static mut [u128; 4];
let _51: i64;
let _52: i64;
let _53: isize;
let _54: ();
let _55: ();
{
RET = [110016575015712283527787179085117726313_i128,25739193905139108631517857761313742230_i128,(-61093180595133952101010879416056578566_i128),7465503908806829992574475597630088646_i128];
_5 = 11701_i16 + (-29280_i16);
_5 = !(-28524_i16);
_2 = '\u{e104d}';
_2 = '\u{89775}';
_1 = [5681223809612376739_usize,5_usize,2_usize,5_usize,2_usize,18377486985606933039_usize];
RET = [(-136984365054811424585920295884406178937_i128),4254856827131865567373613788680419227_i128,81449160233809604897410887165606929666_i128,(-43458913947675924456701193314990108627_i128)];
RET = [(-14901309208654242270150124557791886357_i128),677192366820378624181597241706375202_i128,84855139108929011178284684829715395754_i128,(-66529277238261338560353239925887049278_i128)];
RET = [(-57170925702115206865456061066663032200_i128),119952092999515008156054222816240663192_i128,3185751500744001234571308154517507922_i128,119048571851187958387645635004683585368_i128];
_1 = [5_usize,5977008779693694022_usize,6262840159865705846_usize,12377350862497148165_usize,13826559290474280314_usize,1_usize];
RET = [(-159772796244238879874376056134746093122_i128),90018808745448479096440765524735368978_i128,(-35358373703640606707378532192473983352_i128),89634999518538421239767810088112077129_i128];
_6 = !_3;
_4 = core::ptr::addr_of_mut!(_7);
Goto(bb1)
}
bb1 = {
RET = [(-164059410278276350166154786425649247177_i128),(-93870822406730945410843574044305045143_i128),12081731471077796535916210256255215803_i128,(-163139404244937085673297669740584210722_i128)];
(*_4) = !(-6765944774061955952_i64);
_9 = (*_4) as i16;
_2 = '\u{32c50}';
_9 = _5 + _5;
_1 = [7_usize,2_usize,7_usize,489254943129969074_usize,6_usize,3_usize];
_3 = !_6;
_1 = [0_usize,4001615435150087941_usize,7_usize,7756995296924207739_usize,0_usize,715735246383697499_usize];
_3 = _6;
_3 = !_6;
_9 = _5 + _5;
(*_4) = 11372_u16 as i64;
(*_4) = (-1373298870110520198_i64) & 8380178850866974908_i64;
_7 = (-886142531124270107_i64) * 3954972521138886046_i64;
RET = [(-62731447700138171937791476855263853016_i128),37692252473340675619646248294641352939_i128,(-42125272724235519338298354223686198558_i128),83870553178625116783176423722893585561_i128];
_12 = _2;
_10 = _12 as i64;
(*_4) = _10 | _10;
RET = [149842887100817737217468304018961924188_i128,114659763306313806355681127465003075488_i128,(-65765372187084324959239680713801745734_i128),160352857913319174232930561607724307352_i128];
_2 = _12;
Call((*_4) = core::intrinsics::bswap(_10), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_1 = [0_usize,4_usize,6_usize,3_usize,5_usize,9525207232592287459_usize];
(*_4) = _10 ^ _10;
_5 = _9 ^ _9;
_6 = !_3;
Goto(bb3)
}
bb3 = {
_2 = _12;
(*_4) = 243_u8 as i64;
_9 = _5;
_12 = _2;
_11 = (-9223372036854775808_isize);
RET = [125882111554090273375473174121483927697_i128,115590499226145045418797285694021923442_i128,121246913709464923651358875488088719315_i128,(-56776900482930891353388695078733795152_i128)];
_2 = _12;
_7 = -_10;
_2 = _12;
(*_4) = _10;
_5 = !_9;
_7 = 2642237278263806528_usize as i64;
_2 = _12;
(*_4) = 124_u8 as i64;
_14 = _3;
(*_4) = _10 ^ _10;
(*_4) = 63_i8 as i64;
RET = [(-4046777018823625130632829563396845078_i128),(-101748061724060813718344945087707794144_i128),18142430690172201998043380980649802730_i128,(-19253736958044796107465114255520824384_i128)];
_14 = _11 >= _11;
RET = [76585907314553135337113903931486590321_i128,3981626312608022647466919056501555405_i128,18248630274617272086311575374471582207_i128,(-155667703373668444368935933748991000642_i128)];
_15 = _2;
_15 = _2;
_11 = -9223372036854775807_isize;
(*_4) = !_10;
Goto(bb4)
}
bb4 = {
_15 = _12;
_4 = core::ptr::addr_of_mut!((*_4));
_18.1 = (_3,);
RET = [(-142182493084781970628944854872620554682_i128),15353162668302749204973922457994688497_i128,83210460113974967838439871119637866883_i128,138294794023493942353817470368773431610_i128];
(*_4) = _10 << _9;
_18.1.0 = !_14;
Call(_18.0 = core::intrinsics::transmute(_12), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
(*_4) = 62781369279666243029024297329754620444_i128 as i64;
_6 = _3;
_7 = !_10;
_18.1.0 = _14;
_1 = [7_usize,7120253777426761119_usize,0_usize,10820723645999484812_usize,5_usize,10163301540365974477_usize];
_7 = -_10;
RET = [(-108793932633276998033597523266721840130_i128),(-127411515596784238826407427663006520323_i128),(-122484751446113879198030538998816990849_i128),(-67801935181590824216612169844883114681_i128)];
_21 = [(-55905662196236949799741071842740117489_i128),(-145849945432443498530123146135115728219_i128),(-70696913159368390235913491780502132798_i128),(-166268289753378334730435101854120610914_i128),115239808921787395342301841747245592219_i128,139830535727148793309634946474602323599_i128,28694429435055092885891456392293902534_i128];
Goto(bb6)
}
bb6 = {
_16 = Adt79::Variant0 { fld0: RET };
_18.0 = (-1997983255_i32) * 1553839171_i32;
_3 = _7 != _10;
_21 = [114685490509099222931794583480304757212_i128,60819000182840661561713988061229046329_i128,(-124826779292117749255494355641506481268_i128),(-44899725213888923974834054996921497152_i128),35681550412279262411480635546467455446_i128,(-168738306834361811077117513132235339928_i128),(-88313321134014393976137748104770216292_i128)];
_4 = core::ptr::addr_of_mut!(_7);
_17 = !268002779010924192686442393986583641598_u128;
_18.1 = (_3,);
_11 = (-9223372036854775808_isize);
RET = Field::<[i128; 4]>(Variant(_16, 0), 0);
(*_4) = _18.1.0 as i64;
RET = [(-44209919284614320163710924599443481211_i128),(-68187191830581041722157438457461496482_i128),(-32617759922866265884738899385949218541_i128),47888206171772561672470287997009468890_i128];
_21 = [22834115206283644461170934444820695944_i128,135854463015907288897009935527093721765_i128,158993174452386396435295942525748995443_i128,73017125445383436314137375246749633446_i128,115969558239947577646895130297572928098_i128,(-136750583033605222621209656076334951276_i128),(-81770689729613003028843312419468100596_i128)];
_23 = core::ptr::addr_of!(_15);
_17 = 126161896788056234069904473259378272839_u128 >> _9;
_24 = !_17;
(*_23) = _2;
Goto(bb7)
}
bb7 = {
_25.3 = core::ptr::addr_of!(_25.1);
SetDiscriminant(_16, 1);
_26.0 = !_3;
place!(Field::<i32>(Variant(_16, 1), 1)) = _18.0;
_18.1.0 = !_14;
_3 = _26.0;
RET = [(-74681217476595369756208593038222235880_i128),(-164033226265614793297087451642526667995_i128),(-12637310038593615431355932126451666390_i128),(-41813286130454706915838933073571738829_i128)];
place!(Field::<i8>(Variant(_16, 1), 0)) = _17 as i8;
_5 = !_9;
RET = [28867785937814538158550430929995998992_i128,67652518748129344753954908096078762760_i128,83475892268492256145952620989811320176_i128,102618676783792284618618879844461801065_i128];
_14 = !_26.0;
_25.0 = !224_u8;
_6 = _26.0;
place!(Field::<i32>(Variant(_16, 1), 1)) = (-164619075225857393252931429626501682870_i128) as i32;
_22.0 = _18.0;
_25.0 = !138_u8;
_26.0 = !_6;
_27 = !_11;
_6 = _18.1.0;
_7 = _10;
_5 = (*_4) as i16;
_18.1.0 = !_26.0;
Goto(bb8)
}
bb8 = {
_25.2 = _22.0;
_2 = _15;
_23 = core::ptr::addr_of!(_12);
_25.3 = core::ptr::addr_of!(_25.1);
_19 = Adt79::Variant1 { fld0: Field::<i8>(Variant(_16, 1), 0),fld1: _22.0 };
_7 = _10;
_18 = (_25.2, _26);
(*_4) = 4_usize as i64;
_22.0 = -_25.2;
_3 = !_18.1.0;
RET = [(-65255749486164222130930903042064644248_i128),(-62167857863168415767953736564107557061_i128),149013686029491948175948888971272689016_i128,(-29704122684537218557075427230392237538_i128)];
_4 = core::ptr::addr_of_mut!(_7);
_13 = &mut _25.0;
_18.1.0 = !_14;
place!(Field::<i32>(Variant(_19, 1), 1)) = !_18.0;
_10 = _7;
_12 = _15;
_20 = Field::<i32>(Variant(_19, 1), 1) as f64;
place!(Field::<i32>(Variant(_19, 1), 1)) = _22.0 >> Field::<i8>(Variant(_19, 1), 0);
_29 = [2073342708881389306_u64,8392184861818511394_u64,17779518759141492092_u64,12211448790782989400_u64];
_18.1 = (_3,);
Goto(bb9)
}
bb9 = {
place!(Field::<i32>(Variant(_19, 1), 1)) = -_18.0;
_24 = _17 * _17;
_25.0 = 107_u8 | 239_u8;
_23 = core::ptr::addr_of!(_2);
_7 = _10 << _25.2;
SetDiscriminant(_16, 1);
Goto(bb10)
}
bb10 = {
RET = [(-35675335957682341572176965056284655058_i128),(-94808426569767840065190317797106539078_i128),38990962569363770889283565587036483385_i128,(-122721534490900243993475463868417061430_i128)];
_18.1 = (_6,);
_18 = (_25.2, _26);
_26.0 = !_14;
SetDiscriminant(_19, 1);
(*_23) = _15;
_5 = (-58_i8) as i16;
place!(Field::<i32>(Variant(_16, 1), 1)) = _22.0 << _17;
_13 = &mut _25.0;
_12 = _15;
_4 = core::ptr::addr_of_mut!(_10);
_10 = _17 as i64;
_19 = Adt79::Variant0 { fld0: RET };
(*_4) = !_7;
(*_4) = -_7;
_31 = _20;
Goto(bb11)
}
bb11 = {
_34.0 = _9 as i32;
place!(Field::<[i128; 4]>(Variant(_19, 0), 0)) = [(-81017529943485736001254650077640144100_i128),72690948216980581922384801465237669019_i128,(-83119362445294700119304469567462192008_i128),(-15056692365757586512574015109332942804_i128)];
place!(Field::<i32>(Variant(_16, 1), 1)) = 4223539091_u32 as i32;
_21 = [4878939307568357858425786821093914919_i128,(-169464344059738887305573469714137797570_i128),157485714593862872496785061562676250557_i128,(-160862223168544901332482659058702053897_i128),155716812539212868054242491333042471074_i128,(-17676252899430636191843250900499949669_i128),100116253340375085719146525370812740655_i128];
_2 = _12;
_22.0 = _18.0 >> _24;
_32 = [44543_u16,34644_u16,52501_u16,8158_u16];
_37 = &_18.0;
_9 = !_5;
_26.0 = !_3;
_37 = &_34.0;
place!(Field::<[i128; 4]>(Variant(_19, 0), 0)) = RET;
place!(Field::<i32>(Variant(_16, 1), 1)) = _18.0 >> _24;
_27 = -_11;
_26.0 = _3 | _18.1.0;
_21 = [(-87298059469897223029805724982906913985_i128),(-56823634836610508153267398899468896519_i128),(-120576476404795578898848669221280860790_i128),70113185791386076326000230711672258624_i128,(-167369340797060739246579037502883244225_i128),(-30700103949959715221695598529434792184_i128),(-164876646604322424006286708231970757704_i128)];
_25.2 = !_34.0;
_16 = _19;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
6 => bb7,
340282366920938463454151235394913435648 => bb12,
_ => bb8
}
}
bb12 = {
_32 = [17612_u16,19559_u16,28750_u16,10353_u16];
_16 = _19;
_9 = !_5;
_18.1.0 = _6 ^ _3;
_6 = _14;
_31 = _20 + _20;
_43 = (-100570375451943401542052388501627028779_i128) as f32;
_3 = !_14;
_34.0 = _22.0;
_14 = _17 >= _24;
_10 = _25.0 as i64;
_34.0 = -_22.0;
_38 = _31 as u128;
_34.0 = _22.0;
Goto(bb13)
}
bb13 = {
_25.1 = [_17,_24];
_39 = _43 - _43;
_36 = core::ptr::addr_of!(place!(Field::<[i128; 4]>(Variant(_19, 0), 0)));
_1 = [6950794667193986479_usize,16066591354156212648_usize,5_usize,6846450465167544809_usize,13759274055609658238_usize,5_usize];
_34.0 = _25.2;
_42 = _25.1;
_24 = _38;
_25.3 = core::ptr::addr_of!(_25.1);
_46 = _25.0 as isize;
_45 = core::ptr::addr_of_mut!(_20);
RET = [24110243129190015603953492259230383079_i128,30512434934823035217834501519190371871_i128,40197392080049666531594237101550339455_i128,91617019672231769386216896749400708878_i128];
_25.3 = core::ptr::addr_of!(_42);
_32 = [43415_u16,57113_u16,23029_u16,20694_u16];
_22.0 = (-13944876955459965343496259952445086203_i128) as i32;
_37 = &_18.0;
_42 = [_17,_38];
_29 = [16561500166713157499_u64,7784604565012424545_u64,12558341666857889225_u64,985254597624725836_u64];
_29 = [10538436241404323714_u64,12148670453811464034_u64,11301435608829678020_u64,6485133948912727079_u64];
SetDiscriminant(_16, 1);
_18.1.0 = !_14;
_16 = Adt79::Variant1 { fld0: 83_i8,fld1: _25.2 };
_25.1 = [_17,_24];
_47 = [5_usize,13266569639324494510_usize,0_usize,2_usize,7_usize,12378618124921566221_usize];
place!(Field::<i8>(Variant(_16, 1), 0)) = (-58_i8) >> _25.2;
_25.2 = _22.0 ^ _34.0;
_35 = !_14;
_10 = _7 - _7;
(*_45) = _31 - _31;
_44 = _27 + _46;
Goto(bb14)
}
bb14 = {
_32 = [30976_u16,984_u16,25553_u16,36469_u16];
_45 = core::ptr::addr_of_mut!((*_45));
_33 = !_25.2;
_23 = core::ptr::addr_of!((*_23));
_10 = 8716859768002538709_u64 as i64;
_51 = _10 | _7;
_26.0 = _6;
(*_13) = 62_u8 * 103_u8;
_1 = _47;
_35 = !_14;
_41 = _11;
_11 = _25.0 as isize;
SetDiscriminant(_19, 0);
_27 = _46 - _41;
_33 = _34.0;
(*_45) = _31 - _31;
_11 = !_27;
_11 = _27 >> _41;
_19 = Adt79::Variant0 { fld0: RET };
_52 = _51;
(*_4) = !_51;
Goto(bb15)
}
bb15 = {
Call(_54 = dump_var(18_usize, 2_usize, Move(_2), 38_usize, Move(_38), 7_usize, Move(_7), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_54 = dump_var(18_usize, 1_usize, Move(_1), 33_usize, Move(_33), 52_usize, Move(_52), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_54 = dump_var(18_usize, 11_usize, Move(_11), 51_usize, Move(_51), 18_usize, Move(_18), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_54 = dump_var(18_usize, 46_usize, Move(_46), 32_usize, Move(_32), 44_usize, Move(_44), 55_usize, _55), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: (u64, &'static u128),mut _2: u32,mut _3: f32,mut _4: i64,mut _5: u128) -> bool {
mir! {
type RET = bool;
let _6: [i128; 4];
let _7: ();
let _8: ();
{
_1.0 = 114_i8 as u64;
RET = _5 > _5;
_3 = 53159_u16 as f32;
Goto(bb1)
}
bb1 = {
Call(_7 = dump_var(19_usize, 4_usize, Move(_4), 8_usize, _8, 8_usize, _8, 8_usize, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(243824996410259369642846159156977069209_u128), std::hint::black_box('\u{18c69}'), std::hint::black_box(9223372036854775807_isize), std::hint::black_box((-15_i8)), std::hint::black_box(148_u8), std::hint::black_box(26122_u16), std::hint::black_box(3995278503982937114_i64), std::hint::black_box(41962491160491620672782591079036915325_i128));
                
            }
#[derive(Debug,Copy,Clone)]
pub struct Adt21 {
fld0: u8,
}
#[derive(Debug)]
pub enum Adt23 {
Variant0{
fld0: f64,
fld1: *mut u64,
fld2: isize,
fld3: i8,
fld4: u16,
fld5: i32,

},
Variant1{
fld0: u128,
fld1: [u64; 2],
fld2: *mut u64,
fld3: [u128; 2],

},
Variant2{
fld0: [i128; 4],
fld1: char,
fld2: isize,
fld3: f64,
fld4: [u64; 2],
fld5: f32,
fld6: [u128; 2],
fld7: u64,

}}
#[derive(Debug)]
pub enum Adt34 {
Variant0{
fld0: *const bool,
fld1: *mut u64,
fld2: isize,
fld3: u128,
fld4: *const u128,
fld5: (u128, i64, bool, [u128; 2]),
fld6: Adt21,
fld7: i128,

},
Variant1{
fld0: u8,

},
Variant2{
fld0: *const [u128; 2],
fld1: char,
fld2: u128,
fld3: i32,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: Adt34,
fld1: u32,
fld2: u16,
fld3: i64,
fld4: *mut u16,

},
Variant1{
fld0: [i128; 4],
fld1: char,
fld2: isize,
fld3: [bool; 7],
fld4: *mut i64,
fld5: f64,
fld6: i64,
fld7: *const bool,

},
Variant2{
fld0: bool,
fld1: [bool; 7],
fld2: f32,
fld3: u16,

},
Variant3{
fld0: *mut u64,
fld1: u8,
fld2: u32,
fld3: i8,
fld4: Adt21,
fld5: f64,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt70 {
Variant0{
fld0: *mut [bool; 7],
fld1: (bool,),
fld2: f32,

},
Variant1{
fld0: f32,
fld1: *const u128,
fld2: isize,
fld3: i8,

},
Variant2{
fld0: [bool; 7],
fld1: *const bool,

},
Variant3{
fld0: u128,
fld1: Adt21,
fld2: u32,
fld3: *mut [bool; 7],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt79 {
Variant0{
fld0: [i128; 4],

},
Variant1{
fld0: i8,
fld1: i32,

},
Variant2{
fld0: [u64; 2],
fld1: [usize; 6],
fld2: u16,

}}
#[derive(Debug)]
pub enum Adt83 {
Variant0{
fld0: *mut *mut [u128; 2],
fld1: (u128, i64, bool, [u128; 2]),
fld2: isize,
fld3: (i32, *const (u128, i64, bool, [u128; 2])),
fld4: Adt34,
fld5: *const (u128, i64, bool, [u128; 2]),
fld6: *const [i128; 4],

},
Variant1{
fld0: bool,
fld1: Adt48,
fld2: (*mut f64, *mut u16, bool),
fld3: (u32,),

},
Variant2{
fld0: i64,
fld1: u64,
fld2: [u16; 4],
fld3: usize,

},
Variant3{
fld0: [usize; 6],
fld1: f64,
fld2: u128,
fld3: i16,

}}
#[derive(Debug)]
pub enum Adt85 {
Variant0{
fld0: bool,
fld1: (u128, i64, bool, [u128; 2]),
fld2: isize,
fld3: Adt83,
fld4: f64,
fld5: [usize; 2],
fld6: (u32,),
fld7: *const [i128; 7],

},
Variant1{
fld0: isize,
fld1: [u64; 4],

},
Variant2{
fld0: (i32, (bool,)),

}}

