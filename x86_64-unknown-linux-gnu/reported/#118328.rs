#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u64,mut _3: u128,mut _4: i8,mut _5: u32,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u16) -> *const i32 {
mir! {
type RET = *const i32;
let _12: char;
let _13: f32;
let _14: u128;
let _15: u32;
let _16: [i16; 7];
let _17: (u8, *const i32);
let _18: [i128; 5];
let _19: isize;
let _20: *const i32;
let _21: char;
let _22: [u64; 3];
let _23: char;
let _24: Adt63;
let _25: [u16; 8];
let _26: i128;
let _27: (usize,);
let _28: i16;
let _29: *mut [i16; 5];
let _30: [u8; 2];
let _31: *mut u128;
let _32: *mut [i16; 5];
let _33: Adt61;
let _34: char;
let _35: f32;
let _36: f64;
let _37: [i16; 8];
let _38: (u8, ([i8; 1],), ([i8; 1],));
let _39: [i16; 7];
let _40: [i16; 4];
let _41: isize;
let _42: u8;
let _43: ();
let _44: ();
{
_6 = -(-628986869_i32);
_4 = 27_i8;
_8 = 159373731703904484282539246577463564259_i128 << _4;
_10 = !202_u8;
_4 = (-120_i8);
_12 = '\u{a7084}';
_3 = 16005225523987620730_usize as u128;
Goto(bb1)
}
bb1 = {
_11 = 6996560998752809695_u64 as u16;
RET = core::ptr::addr_of!(_6);
_7 = (-1061840165006115112_i64) ^ 6298763322789321811_i64;
Goto(bb2)
}
bb2 = {
_1 = _6 < (*RET);
_11 = 17536_u16 ^ 10485_u16;
_16 = [(-26085_i16),10126_i16,15917_i16,19561_i16,(-30005_i16),20310_i16,8242_i16];
_15 = _3 as u32;
_17 = (_10, RET);
RET = _17.1;
_4 = (-106_i8) >> _8;
_17 = (_10, RET);
_6 = -(-940374399_i32);
_1 = !false;
_15 = 1209419625_u32;
_17.1 = RET;
_17.0 = _10;
_15 = 3008202532_u32;
Goto(bb3)
}
bb3 = {
_6 = 753173737_i32 ^ 556613309_i32;
_3 = !268357575292755277563676363746957387120_u128;
_13 = 7_usize as f32;
(*RET) = !(-1084387096_i32);
_14 = !_3;
Call(_16 = fn1(_8, _17.1, _8), bb4, UnwindUnreachable())
}
bb4 = {
RET = _17.1;
(*RET) = _13 as i32;
(*RET) = 1099709395_i32 * (-681525789_i32);
_1 = !true;
_12 = '\u{84f8b}';
_11 = _8 as u16;
(*RET) = 2045443865_i32 | 37216268_i32;
_20 = core::ptr::addr_of!((*RET));
_18 = [_8,_8,_8,_8,_8];
(*RET) = (-2101026162_i32);
_16 = [20782_i16,206_i16,17942_i16,(-13481_i16),14682_i16,(-27316_i16),(-23566_i16)];
_12 = '\u{10f4d7}';
_21 = _12;
(*_20) = 17603400752912679804_u64 as i32;
_16 = [19405_i16,(-8848_i16),27928_i16,(-21051_i16),(-32575_i16),25102_i16,(-25751_i16)];
(*RET) = (-1032600913_i32) | 694687729_i32;
_10 = _17.0;
match _15 {
0 => bb1,
1 => bb2,
2 => bb5,
3008202532 => bb7,
_ => bb6
}
}
bb5 = {
_11 = 6996560998752809695_u64 as u16;
RET = core::ptr::addr_of!(_6);
_7 = (-1061840165006115112_i64) ^ 6298763322789321811_i64;
Goto(bb2)
}
bb6 = {
_1 = _6 < (*RET);
_11 = 17536_u16 ^ 10485_u16;
_16 = [(-26085_i16),10126_i16,15917_i16,19561_i16,(-30005_i16),20310_i16,8242_i16];
_15 = _3 as u32;
_17 = (_10, RET);
RET = _17.1;
_4 = (-106_i8) >> _8;
_17 = (_10, RET);
_6 = -(-940374399_i32);
_1 = !false;
_15 = 1209419625_u32;
_17.1 = RET;
_17.0 = _10;
_15 = 3008202532_u32;
Goto(bb3)
}
bb7 = {
_10 = _17.0 * _17.0;
_11 = _15 as u16;
_7 = 4842441634628015187_i64;
(*_20) = _14 as i32;
_4 = 35_i8;
_22 = [8429708292820199927_u64,1601951827581009680_u64,2123790403483303005_u64];
_14 = !_3;
(*RET) = !593150339_i32;
_2 = _21 as u64;
_25 = [_11,_11,_11,_11,_11,_11,_11,_11];
_19 = -15_isize;
(*_20) = (-2129239095_i32) | 1367909252_i32;
_8 = (-137579558846434839102228758620243267271_i128) * 21303660722569016070300099871655876123_i128;
(*_20) = (-972629803_i32) * (-2093964572_i32);
(*_20) = -2067832518_i32;
(*RET) = (-117013548_i32) - (-319314494_i32);
(*_20) = 474732424_i32;
_2 = _4 as u64;
_23 = _21;
_9 = 16961894576226832440_usize;
Goto(bb8)
}
bb8 = {
_3 = !_14;
_12 = _23;
_21 = _12;
RET = core::ptr::addr_of!((*RET));
RET = core::ptr::addr_of!((*_20));
(*RET) = _8 as i32;
_27 = (_9,);
_20 = core::ptr::addr_of!((*_20));
_3 = !_14;
_17 = (_10, _20);
(*RET) = _17.0 as i32;
(*_20) = (-888628686_i32) ^ (-370261032_i32);
_12 = _23;
_22 = [_2,_2,_2];
match _7 {
0 => bb1,
1 => bb6,
2 => bb3,
3 => bb5,
4 => bb9,
5 => bb10,
4842441634628015187 => bb12,
_ => bb11
}
}
bb9 = {
_10 = _17.0 * _17.0;
_11 = _15 as u16;
_7 = 4842441634628015187_i64;
(*_20) = _14 as i32;
_4 = 35_i8;
_22 = [8429708292820199927_u64,1601951827581009680_u64,2123790403483303005_u64];
_14 = !_3;
(*RET) = !593150339_i32;
_2 = _21 as u64;
_25 = [_11,_11,_11,_11,_11,_11,_11,_11];
_19 = -15_isize;
(*_20) = (-2129239095_i32) | 1367909252_i32;
_8 = (-137579558846434839102228758620243267271_i128) * 21303660722569016070300099871655876123_i128;
(*_20) = (-972629803_i32) * (-2093964572_i32);
(*_20) = -2067832518_i32;
(*RET) = (-117013548_i32) - (-319314494_i32);
(*_20) = 474732424_i32;
_2 = _4 as u64;
_23 = _21;
_9 = 16961894576226832440_usize;
Goto(bb8)
}
bb10 = {
_1 = _6 < (*RET);
_11 = 17536_u16 ^ 10485_u16;
_16 = [(-26085_i16),10126_i16,15917_i16,19561_i16,(-30005_i16),20310_i16,8242_i16];
_15 = _3 as u32;
_17 = (_10, RET);
RET = _17.1;
_4 = (-106_i8) >> _8;
_17 = (_10, RET);
_6 = -(-940374399_i32);
_1 = !false;
_15 = 1209419625_u32;
_17.1 = RET;
_17.0 = _10;
_15 = 3008202532_u32;
Goto(bb3)
}
bb11 = {
_11 = 6996560998752809695_u64 as u16;
RET = core::ptr::addr_of!(_6);
_7 = (-1061840165006115112_i64) ^ 6298763322789321811_i64;
Goto(bb2)
}
bb12 = {
_11 = 26285_u16 ^ 16743_u16;
_13 = _15 as f32;
_4 = (-38_i8);
_1 = false | false;
_9 = _27.0 >> (*_20);
(*RET) = 435664987_i32 + (-62617735_i32);
_18 = [_8,_8,_8,_8,_8];
_17 = (_10, RET);
(*_20) = (-2098513749_i32);
RET = _20;
(*RET) = (-1278178399_i32) >> _9;
_5 = !_15;
_18 = [_8,_8,_8,_8,_8];
_31 = core::ptr::addr_of_mut!(_3);
RET = core::ptr::addr_of!((*_20));
_9 = !_27.0;
_12 = _23;
_34 = _21;
match _27.0 {
0 => bb9,
1 => bb2,
2 => bb3,
16961894576226832440 => bb13,
_ => bb8
}
}
bb13 = {
_12 = _23;
_19 = 9223372036854775807_isize + (-9223372036854775808_isize);
_28 = (-21371_i16);
_2 = 14378735212947044896_u64 ^ 8919865245502653390_u64;
_35 = _15 as f32;
_18 = [_8,_8,_8,_8,_8];
_10 = _17.0;
_37 = [_28,_28,_28,_28,_28,_28,_28,_28];
(*RET) = 1957425441_i32;
_36 = _19 as f64;
_38.2.0 = [_4];
(*_31) = _14 << _2;
_25 = [_11,_11,_11,_11,_11,_11,_11,_11];
_9 = !_27.0;
_10 = _17.0 | _17.0;
_6 = !433763804_i32;
_19 = (-64_isize) | 9223372036854775807_isize;
_38.0 = _28 as u8;
(*RET) = 1470359565_i32;
_10 = _38.0;
_6 = !(-1215270814_i32);
_38.1 = (_38.2.0,);
match _28 {
0 => bb1,
1 => bb10,
2 => bb3,
3 => bb14,
4 => bb15,
340282366920938463463374607431768190085 => bb17,
_ => bb16
}
}
bb14 = {
_11 = 26285_u16 ^ 16743_u16;
_13 = _15 as f32;
_4 = (-38_i8);
_1 = false | false;
_9 = _27.0 >> (*_20);
(*RET) = 435664987_i32 + (-62617735_i32);
_18 = [_8,_8,_8,_8,_8];
_17 = (_10, RET);
(*_20) = (-2098513749_i32);
RET = _20;
(*RET) = (-1278178399_i32) >> _9;
_5 = !_15;
_18 = [_8,_8,_8,_8,_8];
_31 = core::ptr::addr_of_mut!(_3);
RET = core::ptr::addr_of!((*_20));
_9 = !_27.0;
_12 = _23;
_34 = _21;
match _27.0 {
0 => bb9,
1 => bb2,
2 => bb3,
16961894576226832440 => bb13,
_ => bb8
}
}
bb15 = {
_11 = 6996560998752809695_u64 as u16;
RET = core::ptr::addr_of!(_6);
_7 = (-1061840165006115112_i64) ^ 6298763322789321811_i64;
Goto(bb2)
}
bb16 = {
_1 = _6 < (*RET);
_11 = 17536_u16 ^ 10485_u16;
_16 = [(-26085_i16),10126_i16,15917_i16,19561_i16,(-30005_i16),20310_i16,8242_i16];
_15 = _3 as u32;
_17 = (_10, RET);
RET = _17.1;
_4 = (-106_i8) >> _8;
_17 = (_10, RET);
_6 = -(-940374399_i32);
_1 = !false;
_15 = 1209419625_u32;
_17.1 = RET;
_17.0 = _10;
_15 = 3008202532_u32;
Goto(bb3)
}
bb17 = {
(*RET) = (-1503993171_i32) << _11;
_38.2.0 = _38.1.0;
_19 = 9223372036854775807_isize & 7_isize;
_30 = [_10,_17.0];
_21 = _34;
_17.1 = core::ptr::addr_of!((*RET));
_34 = _12;
_18 = [_8,_8,_8,_8,_8];
(*_31) = _14;
_30 = [_17.0,_38.0];
_21 = _12;
RET = core::ptr::addr_of!(_6);
_17.1 = core::ptr::addr_of!((*_20));
_30 = [_17.0,_10];
_27 = (_9,);
_23 = _34;
_38.1.0 = [_4];
Goto(bb18)
}
bb18 = {
Call(_43 = dump_var(0_usize, 12_usize, Move(_12), 4_usize, Move(_4), 18_usize, Move(_18), 22_usize, Move(_22)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_43 = dump_var(0_usize, 27_usize, Move(_27), 3_usize, Move(_3), 28_usize, Move(_28), 21_usize, Move(_21)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_43 = dump_var(0_usize, 34_usize, Move(_34), 5_usize, Move(_5), 1_usize, Move(_1), 30_usize, Move(_30)), bb21, UnwindUnreachable())
}
bb21 = {
Call(_43 = dump_var(0_usize, 10_usize, Move(_10), 44_usize, _44, 44_usize, _44, 44_usize, _44), bb22, UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: i128,mut _2: *const i32,mut _3: i128) -> [i16; 7] {
mir! {
type RET = [i16; 7];
let _4: *mut isize;
let _5: isize;
let _6: ([i8; 1],);
let _7: u8;
let _8: isize;
let _9: f32;
let _10: char;
let _11: u16;
let _12: [i16; 7];
let _13: (u8, ([i8; 1],), ([i8; 1],));
let _14: *mut i16;
let _15: u8;
let _16: char;
let _17: [usize; 1];
let _18: [i16; 4];
let _19: (f64, *mut i16);
let _20: bool;
let _21: isize;
let _22: ([i8; 1],);
let _23: isize;
let _24: [i16; 7];
let _25: [i8; 1];
let _26: isize;
let _27: [usize; 1];
let _28: isize;
let _29: char;
let _30: [i8; 1];
let _31: i128;
let _32: [usize; 1];
let _33: i8;
let _34: [u16; 8];
let _35: isize;
let _36: ();
let _37: ();
{
RET = [24240_i16,(-29909_i16),28554_i16,30328_i16,(-5967_i16),(-4990_i16),(-10980_i16)];
RET = [(-15694_i16),28215_i16,(-16908_i16),10207_i16,19584_i16,29858_i16,9700_i16];
_3 = _1 & _1;
RET = [30563_i16,26789_i16,14043_i16,(-18964_i16),29679_i16,25147_i16,4115_i16];
(*_2) = 10307333960146925438_usize as i32;
Call(_2 = fn2(RET, RET, _3, RET), bb1, UnwindUnreachable())
}
bb1 = {
RET = [18510_i16,4531_i16,29849_i16,11570_i16,(-129_i16),(-25492_i16),(-31592_i16)];
RET = [24797_i16,17509_i16,13978_i16,29626_i16,(-8300_i16),3338_i16,(-24762_i16)];
RET = [25492_i16,(-12038_i16),(-21772_i16),(-11535_i16),(-6930_i16),26737_i16,26438_i16];
_3 = !_1;
_3 = !_1;
RET = [17414_i16,(-13881_i16),22254_i16,20420_i16,(-23741_i16),(-32679_i16),7346_i16];
_5 = 9922_u16 as isize;
_6.0 = [(-107_i8)];
_4 = core::ptr::addr_of_mut!(_5);
_4 = core::ptr::addr_of_mut!((*_4));
Call(_1 = core::intrinsics::transmute(_3), bb2, UnwindUnreachable())
}
bb2 = {
RET = [14870_i16,15424_i16,11554_i16,(-6214_i16),(-8663_i16),24175_i16,(-9133_i16)];
_3 = 163231052753563828181724142646825216763_u128 as i128;
_6.0 = [(-128_i8)];
RET = [25391_i16,29507_i16,10685_i16,(-1868_i16),(-26674_i16),(-22153_i16),(-14551_i16)];
_3 = _1;
_1 = _3;
RET = [(-20180_i16),(-20450_i16),(-24084_i16),(-32089_i16),(-23202_i16),496_i16,24591_i16];
_7 = 139_u8;
_1 = _3 << _7;
_5 = 9223372036854775807_isize;
(*_4) = 219904350159754813442606745808008964379_u128 as isize;
RET = [2922_i16,4184_i16,(-16015_i16),23617_i16,(-8648_i16),(-29111_i16),163_i16];
_3 = !_1;
RET = [1445_i16,15709_i16,(-10829_i16),(-25060_i16),(-23741_i16),19840_i16,24359_i16];
_6.0 = [(-96_i8)];
RET = [9947_i16,(-2371_i16),(-29630_i16),(-14372_i16),(-981_i16),(-20648_i16),(-25529_i16)];
(*_4) = !9223372036854775807_isize;
_8 = (*_4) | (*_4);
_1 = -_3;
(*_4) = !_8;
_6.0 = [56_i8];
_9 = _5 as f32;
_10 = '\u{d0724}';
Goto(bb3)
}
bb3 = {
RET = [7447_i16,(-10703_i16),(-17805_i16),(-9717_i16),(-19172_i16),(-20737_i16),(-16093_i16)];
_6.0 = [(-69_i8)];
RET = [(-28474_i16),14719_i16,9159_i16,8524_i16,(-14144_i16),13515_i16,(-31859_i16)];
_7 = _10 as u8;
(*_4) = _8;
_1 = _3;
_7 = !5_u8;
_11 = (-21235_i16) as u16;
RET = [(-11012_i16),(-3282_i16),23161_i16,309_i16,(-19276_i16),(-29721_i16),5749_i16];
Goto(bb4)
}
bb4 = {
_4 = core::ptr::addr_of_mut!((*_4));
(*_4) = 42_i8 as isize;
_5 = !_8;
_6.0 = [110_i8];
_5 = !_8;
_6.0 = [29_i8];
_9 = 11114797273945118689_u64 as f32;
_7 = !37_u8;
_10 = '\u{c58fe}';
_3 = _1;
_10 = '\u{24dbe}';
_7 = 238_u8 >> _8;
_5 = -_8;
_4 = core::ptr::addr_of_mut!((*_4));
_11 = 3997062050_u32 as u16;
(*_4) = 17783_i16 as isize;
_9 = _7 as f32;
(*_4) = _1 as isize;
_1 = _3;
(*_4) = _8;
_7 = !120_u8;
(*_4) = 1261569977_u32 as isize;
_10 = '\u{4fbf7}';
_10 = '\u{ac835}';
RET = [(-520_i16),12786_i16,29731_i16,7296_i16,(-4984_i16),(-7799_i16),11371_i16];
Goto(bb5)
}
bb5 = {
RET = [25559_i16,1501_i16,13298_i16,(-14594_i16),10376_i16,1041_i16,(-10225_i16)];
(*_4) = _10 as isize;
_13.1 = (_6.0,);
_13.0 = _7 | _7;
_13.2.0 = _6.0;
_13.0 = !_7;
_13.0 = _7 & _7;
_13 = (_7, _6, _6);
_6.0 = [123_i8];
(*_4) = _8;
_1 = _13.0 as i128;
_11 = !53263_u16;
Goto(bb6)
}
bb6 = {
_6.0 = _13.2.0;
_15 = _13.0 ^ _7;
_4 = core::ptr::addr_of_mut!((*_4));
_13.1.0 = _6.0;
_8 = (*_4);
_9 = _11 as f32;
_15 = _13.0 | _13.0;
_13.0 = _15 * _7;
_12 = RET;
_13.1 = _6;
_1 = _3 ^ _3;
Goto(bb7)
}
bb7 = {
_13.2 = (_6.0,);
_13 = (_15, _6, _6);
RET = _12;
_16 = _10;
_13.0 = _15;
_6.0 = [72_i8];
_15 = (*_4) as u8;
_13.1 = _13.2;
_13.2.0 = [117_i8];
_8 = _5 ^ (*_4);
_6.0 = [(-22_i8)];
_13 = (_15, _6, _6);
_9 = (-1493828743_i32) as f32;
_10 = _16;
_6.0 = [0_i8];
_13.2 = _6;
_6.0 = _13.1.0;
_3 = !_1;
_6 = (_13.2.0,);
(*_4) = -_8;
_18 = [20815_i16,15051_i16,19158_i16,(-10606_i16)];
_11 = 39433_u16 >> _1;
_7 = _15 + _15;
_6 = (_13.2.0,);
_13.2.0 = _6.0;
Goto(bb8)
}
bb8 = {
_23 = (-673843046_i32) as isize;
_21 = true as isize;
_20 = _5 > (*_4);
_5 = _3 as isize;
_21 = 12579128174664719953_u64 as isize;
_10 = _16;
_21 = (*_4) + (*_4);
RET = [(-27810_i16),30444_i16,14229_i16,(-26868_i16),(-31832_i16),29020_i16,(-21433_i16)];
_1 = 11189981617553974300_u64 as i128;
_13.2 = (_13.1.0,);
_24 = [(-5472_i16),(-22171_i16),(-16742_i16),(-21811_i16),(-17031_i16),18387_i16,(-13209_i16)];
_13.2.0 = [65_i8];
_11 = 24863_u16 << _3;
_3 = _1;
_21 = 1264047630_i32 as isize;
_17 = [7_usize];
_6.0 = [121_i8];
_19.0 = 69_i8 as f64;
Goto(bb9)
}
bb9 = {
_26 = (*_4);
_1 = _3 << _8;
_4 = core::ptr::addr_of_mut!(_5);
_6.0 = [108_i8];
_13.0 = _15;
_11 = 56997_u16;
_19.0 = _11 as f64;
_8 = _5;
(*_4) = _23;
_15 = _7 | _7;
_26 = _5 + (*_4);
_28 = 468752356_u32 as isize;
RET = [23909_i16,6824_i16,(-28761_i16),(-3291_i16),12353_i16,(-2235_i16),(-840_i16)];
RET = [6533_i16,(-13292_i16),(-10781_i16),(-2406_i16),32565_i16,26041_i16,(-10548_i16)];
_19.0 = 3405865473_u32 as f64;
_9 = 278912396939933366722074158409755277731_u128 as f32;
_19.0 = _11 as f64;
_20 = !true;
_15 = _7;
_21 = _8 * _23;
RET = [29741_i16,(-5740_i16),26132_i16,(-29155_i16),22224_i16,(-26237_i16),4302_i16];
_11 = 49095_u16;
_25 = [(-34_i8)];
_30 = _6.0;
_29 = _16;
_1 = _3;
match _11 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
49095 => bb16,
_ => bb15
}
}
bb10 = {
_23 = (-673843046_i32) as isize;
_21 = true as isize;
_20 = _5 > (*_4);
_5 = _3 as isize;
_21 = 12579128174664719953_u64 as isize;
_10 = _16;
_21 = (*_4) + (*_4);
RET = [(-27810_i16),30444_i16,14229_i16,(-26868_i16),(-31832_i16),29020_i16,(-21433_i16)];
_1 = 11189981617553974300_u64 as i128;
_13.2 = (_13.1.0,);
_24 = [(-5472_i16),(-22171_i16),(-16742_i16),(-21811_i16),(-17031_i16),18387_i16,(-13209_i16)];
_13.2.0 = [65_i8];
_11 = 24863_u16 << _3;
_3 = _1;
_21 = 1264047630_i32 as isize;
_17 = [7_usize];
_6.0 = [121_i8];
_19.0 = 69_i8 as f64;
Goto(bb9)
}
bb11 = {
RET = [14870_i16,15424_i16,11554_i16,(-6214_i16),(-8663_i16),24175_i16,(-9133_i16)];
_3 = 163231052753563828181724142646825216763_u128 as i128;
_6.0 = [(-128_i8)];
RET = [25391_i16,29507_i16,10685_i16,(-1868_i16),(-26674_i16),(-22153_i16),(-14551_i16)];
_3 = _1;
_1 = _3;
RET = [(-20180_i16),(-20450_i16),(-24084_i16),(-32089_i16),(-23202_i16),496_i16,24591_i16];
_7 = 139_u8;
_1 = _3 << _7;
_5 = 9223372036854775807_isize;
(*_4) = 219904350159754813442606745808008964379_u128 as isize;
RET = [2922_i16,4184_i16,(-16015_i16),23617_i16,(-8648_i16),(-29111_i16),163_i16];
_3 = !_1;
RET = [1445_i16,15709_i16,(-10829_i16),(-25060_i16),(-23741_i16),19840_i16,24359_i16];
_6.0 = [(-96_i8)];
RET = [9947_i16,(-2371_i16),(-29630_i16),(-14372_i16),(-981_i16),(-20648_i16),(-25529_i16)];
(*_4) = !9223372036854775807_isize;
_8 = (*_4) | (*_4);
_1 = -_3;
(*_4) = !_8;
_6.0 = [56_i8];
_9 = _5 as f32;
_10 = '\u{d0724}';
Goto(bb3)
}
bb12 = {
_6.0 = _13.2.0;
_15 = _13.0 ^ _7;
_4 = core::ptr::addr_of_mut!((*_4));
_13.1.0 = _6.0;
_8 = (*_4);
_9 = _11 as f32;
_15 = _13.0 | _13.0;
_13.0 = _15 * _7;
_12 = RET;
_13.1 = _6;
_1 = _3 ^ _3;
Goto(bb7)
}
bb13 = {
RET = [25559_i16,1501_i16,13298_i16,(-14594_i16),10376_i16,1041_i16,(-10225_i16)];
(*_4) = _10 as isize;
_13.1 = (_6.0,);
_13.0 = _7 | _7;
_13.2.0 = _6.0;
_13.0 = !_7;
_13.0 = _7 & _7;
_13 = (_7, _6, _6);
_6.0 = [123_i8];
(*_4) = _8;
_1 = _13.0 as i128;
_11 = !53263_u16;
Goto(bb6)
}
bb14 = {
_4 = core::ptr::addr_of_mut!((*_4));
(*_4) = 42_i8 as isize;
_5 = !_8;
_6.0 = [110_i8];
_5 = !_8;
_6.0 = [29_i8];
_9 = 11114797273945118689_u64 as f32;
_7 = !37_u8;
_10 = '\u{c58fe}';
_3 = _1;
_10 = '\u{24dbe}';
_7 = 238_u8 >> _8;
_5 = -_8;
_4 = core::ptr::addr_of_mut!((*_4));
_11 = 3997062050_u32 as u16;
(*_4) = 17783_i16 as isize;
_9 = _7 as f32;
(*_4) = _1 as isize;
_1 = _3;
(*_4) = _8;
_7 = !120_u8;
(*_4) = 1261569977_u32 as isize;
_10 = '\u{4fbf7}';
_10 = '\u{ac835}';
RET = [(-520_i16),12786_i16,29731_i16,7296_i16,(-4984_i16),(-7799_i16),11371_i16];
Goto(bb5)
}
bb15 = {
RET = [7447_i16,(-10703_i16),(-17805_i16),(-9717_i16),(-19172_i16),(-20737_i16),(-16093_i16)];
_6.0 = [(-69_i8)];
RET = [(-28474_i16),14719_i16,9159_i16,8524_i16,(-14144_i16),13515_i16,(-31859_i16)];
_7 = _10 as u8;
(*_4) = _8;
_1 = _3;
_7 = !5_u8;
_11 = (-21235_i16) as u16;
RET = [(-11012_i16),(-3282_i16),23161_i16,309_i16,(-19276_i16),(-29721_i16),5749_i16];
Goto(bb4)
}
bb16 = {
_21 = _8 << _7;
_31 = -_3;
_20 = !false;
_16 = _29;
_6.0 = _25;
_22 = _6;
_25 = [(-65_i8)];
_10 = _29;
_13 = (_15, _6, _6);
_13.2 = (_22.0,);
_16 = _10;
_35 = _20 as isize;
_13.0 = _7;
_25 = [(-120_i8)];
_11 = 2_usize as u16;
_28 = !(*_4);
_13.2.0 = _22.0;
Goto(bb17)
}
bb17 = {
Call(_36 = dump_var(1_usize, 1_usize, Move(_1), 11_usize, Move(_11), 8_usize, Move(_8), 13_usize, Move(_13)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_36 = dump_var(1_usize, 23_usize, Move(_23), 17_usize, Move(_17), 25_usize, Move(_25), 22_usize, Move(_22)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_36 = dump_var(1_usize, 29_usize, Move(_29), 7_usize, Move(_7), 31_usize, Move(_31), 24_usize, Move(_24)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_36 = dump_var(1_usize, 3_usize, Move(_3), 37_usize, _37, 37_usize, _37, 37_usize, _37), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [i16; 7],mut _2: [i16; 7],mut _3: i128,mut _4: [i16; 7]) -> *const i32 {
mir! {
type RET = *const i32;
let _5: [u8; 2];
let _6: *mut i8;
let _7: f32;
let _8: *const (([i8; 1],), *const i8);
let _9: bool;
let _10: Adt57;
let _11: [i16; 4];
let _12: isize;
let _13: isize;
let _14: isize;
let _15: [u16; 8];
let _16: isize;
let _17: isize;
let _18: Adt52;
let _19: f64;
let _20: [i128; 5];
let _21: char;
let _22: Adt50;
let _23: bool;
let _24: [u64; 3];
let _25: [i128; 5];
let _26: (usize,);
let _27: u32;
let _28: [usize; 1];
let _29: Adt63;
let _30: [u64; 3];
let _31: f64;
let _32: f32;
let _33: isize;
let _34: u64;
let _35: usize;
let _36: [usize; 1];
let _37: f64;
let _38: f64;
let _39: isize;
let _40: ();
let _41: ();
{
_1 = _4;
_3 = 11862885054249668635_u64 as i128;
_4 = _1;
_2 = _4;
_4 = _1;
_3 = (-9580950770410489383615198406223450055_i128) >> 12_u8;
_4 = [(-18167_i16),23763_i16,19264_i16,(-17171_i16),8572_i16,28935_i16,(-3227_i16)];
_2 = [11561_i16,(-17510_i16),18164_i16,18868_i16,(-6118_i16),5233_i16,(-32545_i16)];
_5 = [38_u8,36_u8];
_3 = (-124766769517731337900026320891308875318_i128);
_4 = _1;
_3 = 19514220178209841690147037138007239457_i128;
_3 = 2435632022530769393_i64 as i128;
Goto(bb1)
}
bb1 = {
_3 = 58417916163336316478219714157036058351_i128 ^ 162792216345825036968606729011627474826_i128;
_5 = [58_u8,113_u8];
_4 = _2;
_7 = _3 as f32;
_7 = 18406753057707803367_u64 as f32;
_1 = _2;
_4 = _2;
_1 = _2;
_2 = _4;
_1 = _2;
_5 = [29_u8,192_u8];
_1 = _4;
_1 = [(-28782_i16),(-10600_i16),(-23129_i16),23426_i16,(-5696_i16),31381_i16,(-20678_i16)];
_5 = [242_u8,110_u8];
_1 = [23808_i16,(-10311_i16),27745_i16,(-2876_i16),(-3173_i16),31726_i16,(-12378_i16)];
_4 = [28401_i16,(-12200_i16),(-11633_i16),14841_i16,(-23624_i16),(-12633_i16),(-20092_i16)];
_3 = 9206244683481012999534751493050200038_i128;
_1 = [7084_i16,13505_i16,(-13306_i16),29387_i16,(-15161_i16),1201_i16,31137_i16];
_10 = Adt57::Variant0 { fld0: 3717522090800964951_i64,fld1: (-122_i8) };
place!(Field::<i64>(Variant(_10, 0), 0)) = (-9175502786758908794_i64) ^ 3170756380694416680_i64;
_1 = [9337_i16,(-27535_i16),9309_i16,10087_i16,(-22326_i16),10753_i16,(-25655_i16)];
place!(Field::<i64>(Variant(_10, 0), 0)) = (-550281333632257832_i64);
place!(Field::<i8>(Variant(_10, 0), 1)) = (-114_i8) & 48_i8;
_3 = 7479092819195090628_usize as i128;
_3 = !(-149030655270871310418964669341896579231_i128);
match Field::<i64>(Variant(_10, 0), 0) {
340282366920938463462824326098135953624 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_4 = [4159_i16,(-18204_i16),13092_i16,23577_i16,(-7075_i16),(-13924_i16),29434_i16];
place!(Field::<i8>(Variant(_10, 0), 1)) = _7 as i8;
_6 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_10, 0), 1)));
(*_6) = 89_i8;
_9 = !false;
_9 = true | false;
_1 = [(-3707_i16),3333_i16,27979_i16,11256_i16,3863_i16,10954_i16,12606_i16];
_11 = [2041_i16,12411_i16,13754_i16,(-13528_i16)];
place!(Field::<i8>(Variant(_10, 0), 1)) = (-93_i8) + 12_i8;
_4 = _2;
_1 = _4;
_1 = [21252_i16,(-3734_i16),(-10916_i16),12920_i16,19762_i16,24163_i16,(-7212_i16)];
_9 = Field::<i64>(Variant(_10, 0), 0) != Field::<i64>(Variant(_10, 0), 0);
_11 = [603_i16,31997_i16,(-19664_i16),17332_i16];
_2 = _4;
Call(_8 = fn3(_4, Field::<i64>(Variant(_10, 0), 0), _4, _4, Move(_10), _2, _4, _1, _6, _11, _11, _2, _1, _11), bb4, UnwindUnreachable())
}
bb4 = {
_10 = Adt57::Variant0 { fld0: 439524558202564911_i64,fld1: 12_i8 };
_1 = [25845_i16,(-5787_i16),5652_i16,(-26589_i16),(-3317_i16),(-31905_i16),(-12221_i16)];
place!(Field::<i8>(Variant(_10, 0), 1)) = !102_i8;
(*_6) = -(-127_i8);
_1 = _4;
_6 = core::ptr::addr_of_mut!((*_6));
_1 = [(-7561_i16),18352_i16,(-31207_i16),(-31989_i16),12528_i16,(-26770_i16),21990_i16];
place!(Field::<i64>(Variant(_10, 0), 0)) = -(-5256358403780515648_i64);
_1 = [(-32320_i16),28567_i16,5476_i16,(-2211_i16),24838_i16,(-11284_i16),(-30037_i16)];
_9 = Field::<i64>(Variant(_10, 0), 0) > Field::<i64>(Variant(_10, 0), 0);
_3 = 158084995987871733535286064567400298081_i128 << (*_6);
_5 = [123_u8,148_u8];
SetDiscriminant(_10, 0);
_5 = [193_u8,36_u8];
_1 = [14522_i16,6419_i16,(-1396_i16),(-9000_i16),(-20165_i16),(-22094_i16),31891_i16];
_2 = [(-14390_i16),10186_i16,(-31520_i16),10003_i16,(-13661_i16),28763_i16,1835_i16];
(*_6) = 9223372036854775807_isize as i8;
_13 = 9223372036854775807_isize;
place!(Field::<i64>(Variant(_10, 0), 0)) = _3 as i64;
_3 = 13396_u16 as i128;
Call(_12 = core::intrinsics::bswap(_13), bb5, UnwindUnreachable())
}
bb5 = {
_1 = [31745_i16,(-4541_i16),9908_i16,(-28472_i16),(-11717_i16),25193_i16,12128_i16];
_13 = -(-9223372036854775808_isize);
_14 = _13 * _13;
_20 = [_3,_3,_3,_3,_3];
_9 = !false;
SetDiscriminant(_10, 1);
_15 = [23545_u16,62439_u16,3188_u16,27788_u16,56378_u16,57298_u16,64386_u16,52998_u16];
_2 = [(-9052_i16),(-22632_i16),(-1659_i16),(-31542_i16),(-31242_i16),9065_i16,(-15975_i16)];
_21 = '\u{99b31}';
_14 = !_13;
_1 = [7930_i16,(-17513_i16),(-30157_i16),(-3923_i16),(-14422_i16),24426_i16,30122_i16];
Goto(bb6)
}
bb6 = {
_16 = _13 - _13;
_20 = [_3,_3,_3,_3,_3];
_1 = _2;
_9 = !false;
_14 = _3 as isize;
_25 = _20;
_19 = _3 as f64;
_15 = [59248_u16,32879_u16,19165_u16,1663_u16,86_u16,22442_u16,34894_u16,19848_u16];
_13 = (-2119467308_i32) as isize;
Goto(bb7)
}
bb7 = {
_3 = _9 as i128;
_20 = _25;
_26.0 = !2_usize;
_23 = _9 | _9;
_17 = _16 * _16;
_9 = _23;
_23 = !_9;
Goto(bb8)
}
bb8 = {
_3 = 46233288932528351658158776745889634694_i128;
_12 = !_16;
_3 = (-168955506157288847432733808197074171321_i128);
_9 = !_23;
_15 = [50825_u16,44972_u16,30093_u16,18116_u16,30681_u16,46360_u16,11912_u16,5400_u16];
_15 = [20319_u16,53997_u16,61193_u16,59377_u16,47327_u16,20724_u16,24074_u16,518_u16];
_4 = [(-13309_i16),(-23872_i16),15256_i16,31929_i16,23262_i16,(-13022_i16),(-24260_i16)];
_27 = 830394338_u32;
_12 = !_17;
Goto(bb9)
}
bb9 = {
_12 = _23 as isize;
_17 = _3 as isize;
_24 = [9602219590853454881_u64,15920244458567460146_u64,15370340236210332514_u64];
_11 = [4817_i16,(-23379_i16),545_i16,(-4264_i16)];
_14 = _17 * _17;
_5 = [88_u8,129_u8];
_25 = [_3,_3,_3,_3,_3];
_29 = Adt63::Variant1 { fld0: _11 };
_3 = 7841257338914515608269169983591953959_i128 | (-85748393009175216530269423385674113929_i128);
_23 = _19 != _19;
_2 = [14359_i16,17685_i16,4274_i16,8366_i16,20855_i16,19415_i16,13280_i16];
_16 = _17 << _14;
_16 = _14;
_26.0 = 10292409238764697784_usize & 6_usize;
_28 = [_26.0];
_11 = [(-14941_i16),(-727_i16),(-553_i16),(-24928_i16)];
_26 = (12239156160650309532_usize,);
_12 = (-19777_i16) as isize;
_27 = !1291793005_u32;
Call(_16 = core::intrinsics::bswap(_14), bb10, UnwindUnreachable())
}
bb10 = {
_17 = !_16;
SetDiscriminant(_29, 1);
_25 = [_3,_3,_3,_3,_3];
_19 = _27 as f64;
_2 = [25835_i16,(-16587_i16),(-25405_i16),16155_i16,(-29352_i16),28360_i16,(-5228_i16)];
_16 = _12;
_19 = _26.0 as f64;
SetDiscriminant(_29, 0);
_12 = _13;
RET = core::ptr::addr_of!(place!(Field::<i32>(Variant(_29, 0), 5)));
(*RET) = 188122691_i32;
_12 = _13 + _17;
_16 = _21 as isize;
place!(Field::<u64>(Variant(_29, 0), 1)) = 17907399244726013907_u64 & 11434535531433591222_u64;
_14 = !_12;
_26 = (17032087668482430968_usize,);
(*RET) = 746810526_i32 - 1699282990_i32;
_33 = (-1766_i16) as isize;
Goto(bb11)
}
bb11 = {
place!(Field::<f64>(Variant(_29, 0), 3)) = _19 - _19;
(*RET) = _21 as i32;
_3 = 67364782305150478501876827547892520484_i128 & 142950485336625885368226528554189591495_i128;
_10 = Adt57::Variant0 { fld0: (-8109410740678037925_i64),fld1: (-28_i8) };
(*RET) = (-470863353_i32);
_26.0 = Field::<f64>(Variant(_29, 0), 3) as usize;
_2 = [4214_i16,6240_i16,27149_i16,19217_i16,5734_i16,(-1632_i16),(-24871_i16)];
place!(Field::<i64>(Variant(_29, 0), 6)) = Field::<i64>(Variant(_10, 0), 0);
_4 = _2;
(*RET) = (-1754327738_i32) * 124372700_i32;
_32 = 40510426644202926090138227425131295987_u128 as f32;
_24 = [Field::<u64>(Variant(_29, 0), 1),Field::<u64>(Variant(_29, 0), 1),Field::<u64>(Variant(_29, 0), 1)];
_34 = (-31106_i16) as u64;
_33 = _13 & _13;
(*RET) = 2785505_i32 << _26.0;
place!(Field::<i64>(Variant(_10, 0), 0)) = Field::<i64>(Variant(_29, 0), 6);
place!(Field::<*const i8>(Variant(_29, 0), 4)) = core::ptr::addr_of!(place!(Field::<i8>(Variant(_10, 0), 1)));
_5 = [230_u8,23_u8];
place!(Field::<i64>(Variant(_10, 0), 0)) = Field::<i64>(Variant(_29, 0), 6);
place!(Field::<i64>(Variant(_29, 0), 6)) = Field::<i64>(Variant(_10, 0), 0);
_5 = [161_u8,230_u8];
(*RET) = !(-1067123228_i32);
RET = core::ptr::addr_of!((*RET));
_29 = Adt63::Variant1 { fld0: _11 };
match Field::<i8>(Variant(_10, 0), 1) {
0 => bb5,
1 => bb9,
2 => bb12,
3 => bb13,
4 => bb14,
340282366920938463463374607431768211428 => bb16,
_ => bb15
}
}
bb12 = {
_17 = !_16;
SetDiscriminant(_29, 1);
_25 = [_3,_3,_3,_3,_3];
_19 = _27 as f64;
_2 = [25835_i16,(-16587_i16),(-25405_i16),16155_i16,(-29352_i16),28360_i16,(-5228_i16)];
_16 = _12;
_19 = _26.0 as f64;
SetDiscriminant(_29, 0);
_12 = _13;
RET = core::ptr::addr_of!(place!(Field::<i32>(Variant(_29, 0), 5)));
(*RET) = 188122691_i32;
_12 = _13 + _17;
_16 = _21 as isize;
place!(Field::<u64>(Variant(_29, 0), 1)) = 17907399244726013907_u64 & 11434535531433591222_u64;
_14 = !_12;
_26 = (17032087668482430968_usize,);
(*RET) = 746810526_i32 - 1699282990_i32;
_33 = (-1766_i16) as isize;
Goto(bb11)
}
bb13 = {
_1 = [31745_i16,(-4541_i16),9908_i16,(-28472_i16),(-11717_i16),25193_i16,12128_i16];
_13 = -(-9223372036854775808_isize);
_14 = _13 * _13;
_20 = [_3,_3,_3,_3,_3];
_9 = !false;
SetDiscriminant(_10, 1);
_15 = [23545_u16,62439_u16,3188_u16,27788_u16,56378_u16,57298_u16,64386_u16,52998_u16];
_2 = [(-9052_i16),(-22632_i16),(-1659_i16),(-31542_i16),(-31242_i16),9065_i16,(-15975_i16)];
_21 = '\u{99b31}';
_14 = !_13;
_1 = [7930_i16,(-17513_i16),(-30157_i16),(-3923_i16),(-14422_i16),24426_i16,30122_i16];
Goto(bb6)
}
bb14 = {
Return()
}
bb15 = {
_10 = Adt57::Variant0 { fld0: 439524558202564911_i64,fld1: 12_i8 };
_1 = [25845_i16,(-5787_i16),5652_i16,(-26589_i16),(-3317_i16),(-31905_i16),(-12221_i16)];
place!(Field::<i8>(Variant(_10, 0), 1)) = !102_i8;
(*_6) = -(-127_i8);
_1 = _4;
_6 = core::ptr::addr_of_mut!((*_6));
_1 = [(-7561_i16),18352_i16,(-31207_i16),(-31989_i16),12528_i16,(-26770_i16),21990_i16];
place!(Field::<i64>(Variant(_10, 0), 0)) = -(-5256358403780515648_i64);
_1 = [(-32320_i16),28567_i16,5476_i16,(-2211_i16),24838_i16,(-11284_i16),(-30037_i16)];
_9 = Field::<i64>(Variant(_10, 0), 0) > Field::<i64>(Variant(_10, 0), 0);
_3 = 158084995987871733535286064567400298081_i128 << (*_6);
_5 = [123_u8,148_u8];
SetDiscriminant(_10, 0);
_5 = [193_u8,36_u8];
_1 = [14522_i16,6419_i16,(-1396_i16),(-9000_i16),(-20165_i16),(-22094_i16),31891_i16];
_2 = [(-14390_i16),10186_i16,(-31520_i16),10003_i16,(-13661_i16),28763_i16,1835_i16];
(*_6) = 9223372036854775807_isize as i8;
_13 = 9223372036854775807_isize;
place!(Field::<i64>(Variant(_10, 0), 0)) = _3 as i64;
_3 = 13396_u16 as i128;
Call(_12 = core::intrinsics::bswap(_13), bb5, UnwindUnreachable())
}
bb16 = {
_33 = _26.0 as isize;
_3 = 144351174691803900202818232740354653897_i128 | (-23277645115251847169680591495989954728_i128);
_34 = 12255988251503346657_u64;
SetDiscriminant(_29, 1);
_37 = _19 - _19;
_12 = Field::<i8>(Variant(_10, 0), 1) as isize;
_34 = 4991860667796443931_u64;
_27 = _26.0 as u32;
SetDiscriminant(_29, 1);
_6 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_10, 0), 1)));
_6 = core::ptr::addr_of_mut!((*_6));
_17 = _27 as isize;
SetDiscriminant(_10, 1);
_17 = 5766_i16 as isize;
Goto(bb17)
}
bb17 = {
Call(_40 = dump_var(2_usize, 12_usize, Move(_12), 26_usize, Move(_26), 9_usize, Move(_9), 33_usize, Move(_33)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_40 = dump_var(2_usize, 17_usize, Move(_17), 23_usize, Move(_23), 5_usize, Move(_5), 16_usize, Move(_16)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_40 = dump_var(2_usize, 24_usize, Move(_24), 14_usize, Move(_14), 28_usize, Move(_28), 41_usize, _41), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: [i16; 7],mut _2: i64,mut _3: [i16; 7],mut _4: [i16; 7],mut _5: Adt57,mut _6: [i16; 7],mut _7: [i16; 7],mut _8: [i16; 7],mut _9: *mut i8,mut _10: [i16; 4],mut _11: [i16; 4],mut _12: [i16; 7],mut _13: [i16; 7],mut _14: [i16; 4]) -> *const (([i8; 1],), *const i8) {
mir! {
type RET = *const (([i8; 1],), *const i8);
let _15: f64;
let _16: ([i8; 1],);
let _17: Adt47;
let _18: Adt49;
let _19: f64;
let _20: *mut u128;
let _21: char;
let _22: isize;
let _23: *const [u64; 3];
let _24: isize;
let _25: f64;
let _26: [i16; 8];
let _27: (usize,);
let _28: isize;
let _29: ([i8; 1],);
let _30: [i16; 8];
let _31: [i16; 7];
let _32: (u8, ([i8; 1],), ([i8; 1],));
let _33: isize;
let _34: isize;
let _35: ([i16; 8], *mut isize);
let _36: ([i8; 1],);
let _37: i8;
let _38: Adt53;
let _39: *const (([i8; 1],), *const i8);
let _40: u128;
let _41: isize;
let _42: isize;
let _43: bool;
let _44: char;
let _45: isize;
let _46: isize;
let _47: [i16; 4];
let _48: [u64; 3];
let _49: f64;
let _50: f32;
let _51: [i16; 8];
let _52: char;
let _53: (u8, ([i8; 1],), ([i8; 1],));
let _54: f32;
let _55: [u8; 2];
let _56: isize;
let _57: [u64; 3];
let _58: usize;
let _59: f64;
let _60: u128;
let _61: (usize,);
let _62: Adt51;
let _63: [i16; 4];
let _64: i16;
let _65: (u8, *const i32);
let _66: *mut i16;
let _67: char;
let _68: u32;
let _69: u64;
let _70: f32;
let _71: [i16; 8];
let _72: *const i32;
let _73: f64;
let _74: char;
let _75: [i16; 8];
let _76: (u8, ([i8; 1],), ([i8; 1],));
let _77: (f64, *mut i16);
let _78: isize;
let _79: u64;
let _80: ();
let _81: ();
{
_2 = Field::<i64>(Variant(_5, 0), 0);
SetDiscriminant(_5, 0);
_1 = [(-2444_i16),(-26244_i16),(-16617_i16),21784_i16,30806_i16,(-19797_i16),(-32281_i16)];
_12 = _3;
_15 = _2 as f64;
place!(Field::<i8>(Variant(_5, 0), 1)) = (-1700482356_i32) as i8;
place!(Field::<i64>(Variant(_5, 0), 0)) = -_2;
_7 = [4905_i16,17356_i16,3771_i16,2570_i16,29111_i16,(-9485_i16),(-766_i16)];
_4 = _8;
_12 = [12427_i16,14216_i16,(-16150_i16),(-12084_i16),(-32144_i16),(-3067_i16),(-1642_i16)];
_11 = _10;
_6 = [23313_i16,(-6592_i16),(-1470_i16),7466_i16,29243_i16,12021_i16,(-29908_i16)];
_1 = [(-22190_i16),(-15307_i16),17639_i16,(-12545_i16),15916_i16,(-31926_i16),12334_i16];
_6 = [8466_i16,1292_i16,27173_i16,(-109_i16),(-24158_i16),(-5663_i16),(-12055_i16)];
match _2 {
340282366920938463462824326098135953624 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_16.0 = [Field::<i8>(Variant(_5, 0), 1)];
_10 = _14;
SetDiscriminant(_5, 1);
_14 = _10;
_6 = [16360_i16,(-28717_i16),(-28445_i16),29618_i16,(-5620_i16),(-4733_i16),(-5739_i16)];
_7 = [1740_i16,(-32695_i16),(-5441_i16),18815_i16,22838_i16,(-17928_i16),(-12848_i16)];
_6 = [(-10923_i16),(-9360_i16),3510_i16,(-10567_i16),10365_i16,(-5579_i16),29265_i16];
Goto(bb3)
}
bb3 = {
_14 = [2506_i16,(-3328_i16),(-20357_i16),3169_i16];
place!(Field::<Adt47>(Variant(_5, 1), 0)) = Adt47::Variant0 { fld0: (-21495_i16),fld1: 8597643115369685025_u64 };
_14 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
place!(Field::<u64>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 0), 1)) = 592549754811507613_u64;
_15 = 2913754413898390235_usize as f64;
_12 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_10 = _11;
_8 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_17 = Field::<Adt47>(Variant(_5, 1), 0);
_4 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_12 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_11 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_16.0 = [114_i8];
_17 = Field::<Adt47>(Variant(_5, 1), 0);
_5 = Adt57::Variant0 { fld0: _2,fld1: 10_i8 };
_6 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_21 = '\u{6338a}';
match Field::<u64>(Variant(_17, 0), 1) {
0 => bb1,
1 => bb2,
592549754811507613 => bb5,
_ => bb4
}
}
bb4 = {
Return()
}
bb5 = {
_13 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_21 = '\u{7b7df}';
_15 = 2721552660_u32 as f64;
place!(Field::<i64>(Variant(_5, 0), 0)) = _2;
_19 = -_15;
_14 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_8 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_25 = (-1581787016_i32) as f64;
_14 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_22 = 9223372036854775807_isize;
_4 = _3;
_27.0 = 137548030940344439_usize;
Goto(bb6)
}
bb6 = {
_15 = _25;
_13 = _3;
place!(Field::<i64>(Variant(_5, 0), 0)) = 120_u8 as i64;
_1 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_27 = (1_usize,);
_29.0 = [Field::<i8>(Variant(_5, 0), 1)];
_26 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_3 = _7;
match _22 {
0 => bb1,
1 => bb3,
2 => bb7,
3 => bb8,
4 => bb9,
5 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb7 = {
_13 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_21 = '\u{7b7df}';
_15 = 2721552660_u32 as f64;
place!(Field::<i64>(Variant(_5, 0), 0)) = _2;
_19 = -_15;
_14 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_8 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_25 = (-1581787016_i32) as f64;
_14 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_22 = 9223372036854775807_isize;
_4 = _3;
_27.0 = 137548030940344439_usize;
Goto(bb6)
}
bb8 = {
Return()
}
bb9 = {
_14 = [2506_i16,(-3328_i16),(-20357_i16),3169_i16];
place!(Field::<Adt47>(Variant(_5, 1), 0)) = Adt47::Variant0 { fld0: (-21495_i16),fld1: 8597643115369685025_u64 };
_14 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
place!(Field::<u64>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 0), 1)) = 592549754811507613_u64;
_15 = 2913754413898390235_usize as f64;
_12 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_10 = _11;
_8 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_17 = Field::<Adt47>(Variant(_5, 1), 0);
_4 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_12 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_11 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
_16.0 = [114_i8];
_17 = Field::<Adt47>(Variant(_5, 1), 0);
_5 = Adt57::Variant0 { fld0: _2,fld1: 10_i8 };
_6 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_21 = '\u{6338a}';
match Field::<u64>(Variant(_17, 0), 1) {
0 => bb1,
1 => bb2,
592549754811507613 => bb5,
_ => bb4
}
}
bb10 = {
_16.0 = [Field::<i8>(Variant(_5, 0), 1)];
_10 = _14;
SetDiscriminant(_5, 1);
_14 = _10;
_6 = [16360_i16,(-28717_i16),(-28445_i16),29618_i16,(-5620_i16),(-4733_i16),(-5739_i16)];
_7 = [1740_i16,(-32695_i16),(-5441_i16),18815_i16,22838_i16,(-17928_i16),(-12848_i16)];
_6 = [(-10923_i16),(-9360_i16),3510_i16,(-10567_i16),10365_i16,(-5579_i16),29265_i16];
Goto(bb3)
}
bb11 = {
Return()
}
bb12 = {
_13 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_32.0 = 48066_u16 as u8;
_1 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_33 = _22;
_29.0 = [Field::<i8>(Variant(_5, 0), 1)];
_16 = (_29.0,);
_32.2.0 = [Field::<i8>(Variant(_5, 0), 1)];
_33 = _22 << Field::<i16>(Variant(_17, 0), 0);
_30 = _26;
_14 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_22 = _33;
SetDiscriminant(_5, 0);
_35.1 = core::ptr::addr_of_mut!(_33);
_34 = false as isize;
place!(Field::<i16>(Variant(_17, 0), 0)) = (-67_i16);
_28 = -_22;
_36 = (_29.0,);
Call(place!(Field::<u64>(Variant(_17, 0), 1)) = fn4(_28, _4, _22), bb13, UnwindUnreachable())
}
bb13 = {
_32.1 = _36;
SetDiscriminant(_17, 3);
_29.0 = _16.0;
SetDiscriminant(_5, 0);
_28 = Field::<i8>(Variant(_5, 0), 1) as isize;
_35.0 = [(-9176_i16),12745_i16,(-7049_i16),11292_i16,(-24710_i16),(-19331_i16),20136_i16,7434_i16];
_3 = [27730_i16,20699_i16,(-23181_i16),17133_i16,4433_i16,5474_i16,(-4988_i16)];
_9 = core::ptr::addr_of_mut!(place!(Field::<i8>(Variant(_5, 0), 1)));
_24 = _22;
_36.0 = _32.2.0;
_29 = (_32.2.0,);
_8 = [27902_i16,30173_i16,16959_i16,(-20320_i16),(-4049_i16),(-2073_i16),17466_i16];
_34 = 16526760369845754013_u64 as isize;
_29.0 = _36.0;
SetDiscriminant(_5, 1);
_32.2 = (_36.0,);
place!(Field::<([i8; 1],)>(Variant(_17, 3), 0)) = (_16.0,);
_19 = _15 + _15;
_18 = Adt49::Variant1 { fld0: _35.1 };
Goto(bb14)
}
bb14 = {
_37 = -(-42_i8);
_19 = (-107784855797307799365323565078419849328_i128) as f64;
_16 = Field::<([i8; 1],)>(Variant(_17, 3), 0);
_24 = _22 ^ _22;
_30 = _35.0;
_32.2 = (_29.0,);
place!(Field::<*mut isize>(Variant(_17, 3), 1)) = core::ptr::addr_of_mut!(_28);
_36 = _32.2;
_31 = [(-25819_i16),26256_i16,9151_i16,(-19520_i16),(-4362_i16),15539_i16,(-4250_i16)];
_9 = core::ptr::addr_of_mut!(_37);
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_22);
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_28);
_19 = (*_9) as f64;
_34 = _33 & _28;
_30 = _35.0;
_35 = (_30, Field::<*mut isize>(Variant(_18, 1), 0));
_36.0 = [(*_9)];
_8 = [(-6096_i16),21288_i16,8172_i16,15816_i16,(-22207_i16),5297_i16,(-11688_i16)];
_11 = [1650_i16,23048_i16,30741_i16,(-18432_i16)];
_15 = _19 * _25;
_35.1 = core::ptr::addr_of_mut!(_28);
_42 = (-27563_i16) as isize;
Goto(bb15)
}
bb15 = {
_41 = !_34;
_22 = _24;
_35.1 = core::ptr::addr_of_mut!(_28);
place!(Field::<([i8; 1],)>(Variant(_17, 3), 0)).0 = _36.0;
_33 = _34;
_36 = Field::<([i8; 1],)>(Variant(_17, 3), 0);
_13 = _7;
_38 = Adt53::Variant0 { fld0: _21 };
_8 = [18906_i16,(-21696_i16),(-31529_i16),15111_i16,6067_i16,26251_i16,14321_i16];
_21 = Field::<char>(Variant(_38, 0), 0);
SetDiscriminant(_18, 1);
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_34);
_43 = !true;
_33 = 1401560738_i32 as isize;
_9 = core::ptr::addr_of_mut!((*_9));
_19 = _15;
_20 = core::ptr::addr_of_mut!(_40);
_14 = [(-10317_i16),7064_i16,(-21989_i16),19471_i16];
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_33);
SetDiscriminant(_17, 0);
_36 = _32.2;
match _2 {
0 => bb6,
340282366920938463462824326098135953624 => bb17,
_ => bb16
}
}
bb16 = {
Return()
}
bb17 = {
_21 = Field::<char>(Variant(_38, 0), 0);
place!(Field::<u64>(Variant(_17, 0), 1)) = 14863096834081400174_u64 ^ 15032825246090978243_u64;
_46 = _41 * _22;
_14 = _10;
_33 = _41;
_13 = _3;
_17 = Adt47::Variant0 { fld0: 2608_i16,fld1: 8788601922961313401_u64 };
_17 = Adt47::Variant0 { fld0: (-4160_i16),fld1: 7954319218645883990_u64 };
(*_20) = _27.0 as u128;
Goto(bb18)
}
bb18 = {
_5 = Adt57::Variant1 { fld0: _17 };
(*_20) = 9076_u16 as u128;
_26 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0)];
place!(Field::<i16>(Variant(_17, 0), 0)) = Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0);
_32.1 = (_36.0,);
_30 = [Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_33 = 13699674072982532863821887290511202333_i128 as isize;
_25 = _19;
_36.0 = [(*_9)];
_15 = _25;
_20 = core::ptr::addr_of_mut!(_40);
_17 = Field::<Adt47>(Variant(_5, 1), 0);
match Field::<i16>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 0), 0) {
0 => bb15,
340282366920938463463374607431768207296 => bb20,
_ => bb19
}
}
bb19 = {
Return()
}
bb20 = {
SetDiscriminant(_5, 0);
_21 = Field::<char>(Variant(_38, 0), 0);
_5 = Adt57::Variant1 { fld0: _17 };
_11 = _14;
SetDiscriminant(Field::<Adt47>(Variant(_5, 1), 0), 2);
place!(Field::<(([i8; 1],), *const i8)>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 2), 0)).0.0 = [_37];
_40 = 101268438843270283696818221642285085543_u128 << _46;
SetDiscriminant(_38, 0);
Goto(bb21)
}
bb21 = {
_50 = _37 as f32;
_29.0 = _16.0;
_22 = _34;
_16.0 = [_37];
_53.0 = _32.0 & _32.0;
_56 = Field::<u64>(Variant(_17, 0), 1) as isize;
place!(Field::<i16>(Variant(_17, 0), 0)) = _2 as i16;
(*_9) = 51_i8 - 69_i8;
(*_9) = (-3_i8) - (-1_i8);
_27 = (8480814345440335730_usize,);
place!(Field::<(([i8; 1],), *const i8)>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 2), 0)).0 = (_32.1.0,);
_11 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_53 = (_32.0, _16, _32.1);
_58 = _27.0;
Goto(bb22)
}
bb22 = {
_53.0 = _32.0;
_32 = (_53.0, _29, Field::<(([i8; 1],), *const i8)>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 2), 0).0);
_49 = (*_9) as f64;
_44 = Field::<char>(Variant(_38, 0), 0);
_48 = [Field::<u64>(Variant(_17, 0), 1),Field::<u64>(Variant(_17, 0), 1),Field::<u64>(Variant(_17, 0), 1)];
_28 = _34 | _24;
_24 = _46 << _40;
_44 = Field::<char>(Variant(_38, 0), 0);
_47 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
place!(Field::<char>(Variant(_38, 0), 0)) = _21;
_25 = _19;
_8 = _3;
Call(_32.0 = core::intrinsics::transmute(_32.1.0), bb23, UnwindUnreachable())
}
bb23 = {
place!(Field::<usize>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 2), 2)) = 1153609538_u32 as usize;
_10 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
SetDiscriminant(_18, 0);
SetDiscriminant(_38, 1);
Goto(bb24)
}
bb24 = {
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1)).0 = _53.0 | _32.0;
_35.0 = _30;
_19 = _15;
_20 = core::ptr::addr_of_mut!(_40);
_19 = _49;
Goto(bb25)
}
bb25 = {
_10 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_43 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1).0 > _32.0;
place!(Field::<[u8; 2]>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 2), 1)) = [_53.0,_53.0];
_30 = _26;
(*_9) = !63_i8;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1)).2 = _53.1;
_32 = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1).0, _53.1, _53.1);
match _2 {
0 => bb4,
1 => bb16,
2 => bb26,
340282366920938463462824326098135953624 => bb28,
_ => bb27
}
}
bb26 = {
_37 = -(-42_i8);
_19 = (-107784855797307799365323565078419849328_i128) as f64;
_16 = Field::<([i8; 1],)>(Variant(_17, 3), 0);
_24 = _22 ^ _22;
_30 = _35.0;
_32.2 = (_29.0,);
place!(Field::<*mut isize>(Variant(_17, 3), 1)) = core::ptr::addr_of_mut!(_28);
_36 = _32.2;
_31 = [(-25819_i16),26256_i16,9151_i16,(-19520_i16),(-4362_i16),15539_i16,(-4250_i16)];
_9 = core::ptr::addr_of_mut!(_37);
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_22);
place!(Field::<*mut isize>(Variant(_18, 1), 0)) = core::ptr::addr_of_mut!(_28);
_19 = (*_9) as f64;
_34 = _33 & _28;
_30 = _35.0;
_35 = (_30, Field::<*mut isize>(Variant(_18, 1), 0));
_36.0 = [(*_9)];
_8 = [(-6096_i16),21288_i16,8172_i16,15816_i16,(-22207_i16),5297_i16,(-11688_i16)];
_11 = [1650_i16,23048_i16,30741_i16,(-18432_i16)];
_15 = _19 * _25;
_35.1 = core::ptr::addr_of_mut!(_28);
_42 = (-27563_i16) as isize;
Goto(bb15)
}
bb27 = {
_21 = Field::<char>(Variant(_38, 0), 0);
place!(Field::<u64>(Variant(_17, 0), 1)) = 14863096834081400174_u64 ^ 15032825246090978243_u64;
_46 = _41 * _22;
_14 = _10;
_33 = _41;
_13 = _3;
_17 = Adt47::Variant0 { fld0: 2608_i16,fld1: 8788601922961313401_u64 };
_17 = Adt47::Variant0 { fld0: (-4160_i16),fld1: 7954319218645883990_u64 };
(*_20) = _27.0 as u128;
Goto(bb18)
}
bb28 = {
_25 = 696709936_i32 as f64;
_62 = Adt51 { fld0: _49 };
SetDiscriminant(_17, 0);
place!(Field::<i128>(Variant(_38, 1), 3)) = 3303591012_u32 as i128;
_30 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_35.0 = [Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0),Field::<i16>(Variant(_17, 0), 0)];
_45 = _24 & _28;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1)).2.0 = [(*_9)];
(*_20) = 248625782045568166519527550874405832129_u128 << _45;
SetDiscriminant(_17, 1);
_1 = [(-21295_i16),(-22477_i16),15283_i16,(-5814_i16),2975_i16,(-23826_i16),25750_i16];
place!(Field::<i64>(Variant(_38, 1), 6)) = 9671209733058774864_u64 as i64;
_32.2.0 = _53.2.0;
place!(Field::<*mut char>(Variant(_17, 1), 3)) = core::ptr::addr_of_mut!(_44);
place!(Field::<*mut isize>(Variant(_38, 1), 0)) = core::ptr::addr_of_mut!(_33);
_36.0 = [(*_9)];
place!(Field::<[u16; 8]>(Variant(_17, 1), 4)) = [25418_u16,48195_u16,795_u16,1141_u16,40520_u16,57787_u16,44388_u16,36652_u16];
place!(Field::<i32>(Variant(_17, 1), 5)) = 250692675_i32;
_62 = Adt51 { fld0: _15 };
_53 = (_32.0, _29, _16);
_60 = (-2722_i16) as u128;
Goto(bb29)
}
bb29 = {
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1)).1 = (_36.0,);
_38 = Adt53::Variant0 { fld0: _44 };
_16 = (_53.2.0,);
_59 = 3949596485786230746_u64 as f64;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_17, 1), 1)).2.0 = _32.1.0;
match _58 {
0 => bb1,
1 => bb21,
2 => bb3,
3 => bb4,
4 => bb13,
5 => bb15,
6 => bb28,
8480814345440335730 => bb30,
_ => bb10
}
}
bb30 = {
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_17, 1), 1)).2 = _32.1;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_17, 1), 1)) = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1).0, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1).2, _32.1);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1)).1.0 = [(*_9)];
_63 = [(-9182_i16),(-29741_i16),17984_i16,29457_i16];
_44 = Field::<char>(Variant(_38, 0), 0);
_39 = core::ptr::addr_of!(place!(Field::<(([i8; 1],), *const i8)>(Variant(place!(Field::<Adt47>(Variant(_5, 1), 0)), 2), 0)));
SetDiscriminant(_38, 1);
place!(Field::<(usize,)>(Variant(_17, 1), 7)).0 = Field::<usize>(Variant(Field::<Adt47>(Variant(_5, 1), 0), 2), 2) - _58;
_43 = false;
(*_39).0 = _16;
_65.0 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_18, 0), 1).0 & Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_17, 1), 1).0;
_55 = [_53.0,_53.0];
_34 = _19 as isize;
_41 = 3642336377119826492_u64 as isize;
(*_39).1 = core::ptr::addr_of!(_37);
place!(Field::<i128>(Variant(_38, 1), 3)) = 74982148030354206515002746586643124934_i128;
_35.1 = core::ptr::addr_of_mut!(_33);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_17, 1), 1)) = (_65.0, _32.2, _32.2);
(*_39).0.0 = _53.1.0;
_24 = _33;
_32.2.0 = [_37];
place!(Field::<i64>(Variant(_18, 0), 2)) = _2 | _2;
place!(Field::<*mut char>(Variant(_17, 1), 3)) = core::ptr::addr_of_mut!(_21);
_61.0 = _27.0 >> _28;
_53.0 = (*_20) as u8;
_37 = -31_i8;
Call(_22 = core::intrinsics::bswap(_46), bb31, UnwindUnreachable())
}
bb31 = {
_10 = _11;
_69 = !201681923408744616_u64;
SetDiscriminant(Field::<Adt47>(Variant(_5, 1), 0), 2);
(*_39).0 = (_53.1.0,);
_47 = _14;
_19 = -_15;
RET = core::ptr::addr_of!((*_39));
SetDiscriminant(_5, 1);
_75 = [815_i16,(-28878_i16),6209_i16,11710_i16,6463_i16,4339_i16,3956_i16,(-32544_i16)];
Goto(bb32)
}
bb32 = {
Call(_80 = dump_var(3_usize, 31_usize, Move(_31), 21_usize, Move(_21), 16_usize, Move(_16), 34_usize, Move(_34)), bb33, UnwindUnreachable())
}
bb33 = {
Call(_80 = dump_var(3_usize, 32_usize, Move(_32), 4_usize, Move(_4), 12_usize, Move(_12), 8_usize, Move(_8)), bb34, UnwindUnreachable())
}
bb34 = {
Call(_80 = dump_var(3_usize, 3_usize, Move(_3), 1_usize, Move(_1), 46_usize, Move(_46), 14_usize, Move(_14)), bb35, UnwindUnreachable())
}
bb35 = {
Call(_80 = dump_var(3_usize, 69_usize, Move(_69), 26_usize, Move(_26), 22_usize, Move(_22), 28_usize, Move(_28)), bb36, UnwindUnreachable())
}
bb36 = {
Call(_80 = dump_var(3_usize, 27_usize, Move(_27), 61_usize, Move(_61), 37_usize, Move(_37), 44_usize, Move(_44)), bb37, UnwindUnreachable())
}
bb37 = {
Call(_80 = dump_var(3_usize, 60_usize, Move(_60), 55_usize, Move(_55), 81_usize, _81, 81_usize, _81), bb38, UnwindUnreachable())
}
bb38 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: isize,mut _2: [i16; 7],mut _3: isize) -> u64 {
mir! {
type RET = u64;
let _4: bool;
let _5: [u16; 8];
let _6: [i16; 8];
let _7: i128;
let _8: f32;
let _9: char;
let _10: (u8, ([i8; 1],), ([i8; 1],));
let _11: [u64; 3];
let _12: Adt55;
let _13: u8;
let _14: [u64; 3];
let _15: *mut i8;
let _16: i8;
let _17: [i16; 5];
let _18: bool;
let _19: [u64; 3];
let _20: f32;
let _21: f32;
let _22: [i8; 1];
let _23: ([i8; 1],);
let _24: i8;
let _25: (u8, ([i8; 1],), ([i8; 1],));
let _26: ([i8; 1],);
let _27: [i16; 8];
let _28: i8;
let _29: f64;
let _30: [u8; 2];
let _31: [i16; 5];
let _32: char;
let _33: ();
let _34: ();
{
RET = !6674191013182762770_u64;
RET = !9929292748599002645_u64;
_5 = [31972_u16,4076_u16,46649_u16,6221_u16,57400_u16,30788_u16,5641_u16,3563_u16];
_2 = [13242_i16,4111_i16,(-456_i16),(-16001_i16),(-15063_i16),(-1904_i16),10397_i16];
RET = 169817621006992879182917613706977943598_u128 as u64;
_4 = _3 >= _3;
_3 = (-5491451091662137407_i64) as isize;
_1 = _3 >> RET;
_1 = 259573952990622609145905045902073142441_u128 as isize;
RET = 12657962579880475040_u64 - 17229019378653887232_u64;
Goto(bb1)
}
bb1 = {
_6 = [(-3333_i16),29587_i16,1154_i16,(-995_i16),11676_i16,(-4649_i16),(-20604_i16),22398_i16];
_6 = [14892_i16,(-15962_i16),(-26212_i16),4919_i16,15664_i16,(-2911_i16),12804_i16,(-29581_i16)];
_6 = [22608_i16,(-11057_i16),21131_i16,(-14759_i16),8335_i16,16631_i16,26502_i16,32763_i16];
_3 = _1 >> RET;
_3 = _1 << RET;
_5 = [2733_u16,49775_u16,23975_u16,43740_u16,28510_u16,43086_u16,20050_u16,30326_u16];
RET = 11188128670998237236_u64 - 14379799486266445956_u64;
RET = !1767435448605699984_u64;
Call(_7 = fn5(_6, _6, _6, _3, _4, _5), bb2, UnwindUnreachable())
}
bb2 = {
_3 = _1 + _1;
_1 = _3 << _3;
_7 = !(-108730684406270747160469141676931587486_i128);
RET = 5710330962492251013_u64;
_8 = 922423779_u32 as f32;
Goto(bb3)
}
bb3 = {
_1 = _3;
_1 = 116192423925370514745364730602299055391_u128 as isize;
_3 = _1;
_5 = [54537_u16,35199_u16,60508_u16,5945_u16,8561_u16,3988_u16,14964_u16,32304_u16];
RET = 2369023025393133768_u64 + 9397671128498424938_u64;
RET = 965804112177776875_u64;
RET = !142237601433551336_u64;
_1 = _3 << _3;
_5 = [9270_u16,28957_u16,32369_u16,53716_u16,12423_u16,62949_u16,13791_u16,9702_u16];
_2 = [30746_i16,(-20594_i16),22973_i16,31191_i16,18673_i16,(-16390_i16),7506_i16];
_2 = [17417_i16,31698_i16,24697_i16,20361_i16,(-26497_i16),(-1199_i16),7103_i16];
_8 = _1 as f32;
_3 = _1 & _1;
_4 = !true;
_1 = _3 | _3;
_1 = _3;
_3 = _1 & _1;
_8 = (-187129584_i32) as f32;
_9 = '\u{7928f}';
_9 = '\u{dfe69}';
_4 = true;
_1 = -_3;
_9 = '\u{421e}';
_2 = [(-26098_i16),18142_i16,31793_i16,(-3407_i16),(-32208_i16),1916_i16,(-18285_i16)];
RET = !13233314728222435072_u64;
_4 = true;
_9 = '\u{843df}';
Call(RET = core::intrinsics::transmute(_1), bb4, UnwindUnreachable())
}
bb4 = {
_3 = 26_i8 as isize;
_7 = _9 as i128;
_1 = _3;
_3 = _7 as isize;
_5 = [65360_u16,34314_u16,50334_u16,21702_u16,61314_u16,51019_u16,34064_u16,54025_u16];
_4 = RET == RET;
_8 = 47_i8 as f32;
_9 = '\u{9dce1}';
_2 = [14094_i16,(-18410_i16),18616_i16,31277_i16,(-4493_i16),7780_i16,(-11146_i16)];
RET = 10975004859448284630_u64 + 11015214032328035756_u64;
_2 = [20897_i16,(-23501_i16),13427_i16,(-27624_i16),(-19274_i16),21220_i16,(-8907_i16)];
_5 = [53553_u16,24199_u16,39515_u16,53084_u16,34606_u16,44933_u16,57970_u16,39083_u16];
_7 = 47701434746255741061696993422053559515_i128;
_4 = _8 == _8;
_3 = _1;
Goto(bb5)
}
bb5 = {
_10.0 = 32849_u16 as u8;
_10.2.0 = [(-109_i8)];
_8 = _7 as f32;
_10.0 = !70_u8;
RET = !3099728602200620762_u64;
_11 = [RET,RET,RET];
_8 = 1_usize as f32;
_11 = [RET,RET,RET];
_1 = _3;
_6 = [(-30117_i16),7969_i16,(-22297_i16),(-30774_i16),(-4759_i16),(-26468_i16),6859_i16,13344_i16];
_10.1 = (_10.2.0,);
_4 = !true;
_4 = false;
_1 = _3 ^ _3;
_13 = _10.0;
_10.0 = _13 + _13;
_9 = '\u{ed0b6}';
_7 = (-124459075002423131191277474568593581674_i128);
_12 = Adt55::Variant1 { fld0: _10,fld1: _11,fld2: _5,fld3: _10.1.0 };
_7 = (-19999_i16) as i128;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).1 = (Field::<[i8; 1]>(Variant(_12, 1), 3),);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2.0 = [91_i8];
_10 = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).0, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).1, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).2);
SetDiscriminant(_12, 1);
Goto(bb6)
}
bb6 = {
_11 = [RET,RET,RET];
_8 = 27553416111127358973405322241910869406_u128 as f32;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).0 = !_10.0;
_10.1.0 = [(-71_i8)];
_5 = Field::<[u16; 8]>(Variant(_12, 1), 2);
_10.2.0 = [70_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2.0 = _10.2.0;
_3 = _1;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)) = _10;
_6 = [(-12433_i16),(-3714_i16),4739_i16,(-1135_i16),2510_i16,28315_i16,8091_i16,(-26038_i16)];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)) = (_13, _10.1, _10.1);
_10 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0);
_6 = [25728_i16,7524_i16,(-17361_i16),4492_i16,(-32148_i16),818_i16,(-8472_i16),(-18857_i16)];
_6 = [4107_i16,32471_i16,(-10506_i16),7870_i16,26583_i16,17092_i16,29152_i16,30921_i16];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2 = (Field::<[i8; 1]>(Variant(_12, 1), 3),);
RET = 9263985419527857029_u64;
_10.0 = 15068904760748178153_usize as u8;
_10.2 = (Field::<[i8; 1]>(Variant(_12, 1), 3),);
_10.2 = _10.1;
RET = 14333696386662236070_u64;
_10.0 = _13 << _7;
RET = _8 as u64;
_16 = !51_i8;
_10 = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).0, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).1, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).2);
_7 = (-127197633321160793015490064120358155592_i128) | (-130536182572371798161833383091131064471_i128);
_12 = Adt55::Variant1 { fld0: _10,fld1: _11,fld2: _5,fld3: _10.2.0 };
_6 = [(-9479_i16),24930_i16,(-18871_i16),3497_i16,(-12422_i16),(-28919_i16),(-6098_i16),(-3800_i16)];
Goto(bb7)
}
bb7 = {
_13 = _3 as u8;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).1.0 = [_16];
_4 = true;
SetDiscriminant(_12, 0);
_9 = '\u{7478}';
_10.2.0 = [_16];
_17 = [(-2357_i16),(-23264_i16),(-20954_i16),(-31103_i16),(-14053_i16)];
_18 = !_4;
_13 = _10.0;
_5 = [53511_u16,38770_u16,1148_u16,26861_u16,43233_u16,6604_u16,7786_u16,3812_u16];
_16 = (-100_i8) & 2_i8;
_7 = _3 as i128;
_18 = _4;
_15 = core::ptr::addr_of_mut!(_16);
(*_15) = 5694263220329554416_usize as i8;
_10.1.0 = [(*_15)];
place!(Field::<*mut isize>(Variant(_12, 0), 0)) = core::ptr::addr_of_mut!(_1);
_10.0 = _13;
place!(Field::<*mut i8>(Variant(_12, 0), 1)) = core::ptr::addr_of_mut!((*_15));
_10.0 = 22634377372627199905148899473656820185_u128 as u8;
(*_15) = !103_i8;
Goto(bb8)
}
bb8 = {
_10.2.0 = [(*_15)];
_10.2.0 = [(*_15)];
_15 = core::ptr::addr_of_mut!((*_15));
_10.2.0 = [(*_15)];
_22 = [(*_15)];
_23 = (_22,);
_8 = 339086717447577638043971256947180018946_u128 as f32;
Goto(bb9)
}
bb9 = {
_18 = _4;
(*_15) = (-19_i8) - (-33_i8);
Goto(bb10)
}
bb10 = {
_22 = [_16];
_10.1.0 = [(*_15)];
_4 = _18;
_17 = [3172_i16,12462_i16,22408_i16,(-5466_i16),(-9132_i16)];
_14 = [RET,RET,RET];
_25.0 = _10.0;
(*_15) = !(-4_i8);
_15 = core::ptr::addr_of_mut!(_24);
place!(Field::<*mut isize>(Variant(_12, 0), 0)) = core::ptr::addr_of_mut!(_1);
_19 = [RET,RET,RET];
_25.1.0 = _22;
Call(_25.2.0 = fn19(Field::<*mut isize>(Variant(_12, 0), 0), _12, _9, _12), bb11, UnwindUnreachable())
}
bb11 = {
RET = !12279692411986837869_u64;
_16 = !108_i8;
_25.1.0 = [_16];
_25.0 = _10.0 + _13;
_23.0 = [_16];
Goto(bb12)
}
bb12 = {
_6 = [4242_i16,16419_i16,18965_i16,(-14223_i16),(-17034_i16),(-14040_i16),20663_i16,(-1508_i16)];
_8 = RET as f32;
(*_15) = _7 as i8;
_10.1.0 = [(*_15)];
_13 = _10.0;
RET = !6826845352037210506_u64;
(*_15) = _16 >> _7;
SetDiscriminant(_12, 1);
_18 = _8 < _8;
place!(Field::<[u64; 3]>(Variant(_12, 1), 1)) = [RET,RET,RET];
_23 = (_10.2.0,);
_13 = _25.0 ^ _25.0;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2.0 = [_24];
_14 = [RET,RET,RET];
_28 = _24;
_15 = core::ptr::addr_of_mut!((*_15));
Goto(bb13)
}
bb13 = {
place!(Field::<[i8; 1]>(Variant(_12, 1), 3)) = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0).2.0;
_25.1 = (_10.1.0,);
Goto(bb14)
}
bb14 = {
_17 = [5241_i16,(-10162_i16),23240_i16,(-10778_i16),(-10079_i16)];
RET = 4973078688193644504_u64 >> _16;
_10.2 = _10.1;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2 = (_22,);
RET = 8160248859310369237_u64 & 11839645192980750580_u64;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)) = (_25.0, _10.2, _23);
_8 = _7 as f32;
_8 = _3 as f32;
_10.2.0 = Field::<[i8; 1]>(Variant(_12, 1), 3);
_10.1 = (_25.1.0,);
_22 = [_28];
_24 = _16 & _28;
RET = 8574385465417609220_u64 << (*_15);
RET = !720315221361527655_u64;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).2 = (_10.1.0,);
RET = !16599480105147620738_u64;
(*_15) = RET as i8;
_26.0 = [_28];
place!(Field::<[i8; 1]>(Variant(_12, 1), 3)) = [_28];
_18 = (*_15) != _16;
_13 = 17292935298625340171_usize as u8;
_17 = [20751_i16,(-10179_i16),12010_i16,23056_i16,23037_i16];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).0 = (-1808101152623424389_i64) as u8;
place!(Field::<[u16; 8]>(Variant(_12, 1), 2)) = [42527_u16,20262_u16,53772_u16,18378_u16,3215_u16,49569_u16,59780_u16,61116_u16];
_10 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0);
_10.2 = _25.2;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_12, 1), 0)).1 = (_23.0,);
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(4_usize, 6_usize, Move(_6), 9_usize, Move(_9), 17_usize, Move(_17), 2_usize, Move(_2)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(4_usize, 25_usize, Move(_25), 10_usize, Move(_10), 23_usize, Move(_23), 18_usize, Move(_18)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(4_usize, 14_usize, Move(_14), 24_usize, Move(_24), 4_usize, Move(_4), 34_usize, _34), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: [i16; 8],mut _2: [i16; 8],mut _3: [i16; 8],mut _4: isize,mut _5: bool,mut _6: [u16; 8]) -> i128 {
mir! {
type RET = i128;
let _7: i128;
let _8: char;
let _9: *mut isize;
let _10: isize;
let _11: u16;
let _12: i32;
let _13: Adt47;
let _14: *mut i16;
let _15: isize;
let _16: i64;
let _17: f32;
let _18: Adt62;
let _19: u64;
let _20: [i16; 4];
let _21: *const (([i8; 1],), *const i8);
let _22: [usize; 1];
let _23: *mut [i16; 5];
let _24: i8;
let _25: ();
let _26: ();
{
RET = 137469245814670964339604745522712652756_i128 >> _4;
_3 = _2;
RET = 43572760318773811549976273186422173464_i128 ^ 127303523574774963933919800827123403975_i128;
_3 = [(-12592_i16),14079_i16,(-12332_i16),13231_i16,(-32131_i16),(-22802_i16),(-11472_i16),(-5476_i16)];
_8 = '\u{efd19}';
_6 = [47345_u16,2040_u16,51907_u16,26114_u16,34025_u16,20565_u16,43252_u16,41059_u16];
Call(_6 = fn6(_3, _2, _3, _4, _1, _2), bb1, UnwindUnreachable())
}
bb1 = {
RET = -(-67438248280592068585216263374832796067_i128);
_9 = core::ptr::addr_of_mut!(_4);
_4 = -9223372036854775807_isize;
_1 = [(-23356_i16),13697_i16,(-27058_i16),16437_i16,6051_i16,13701_i16,(-279_i16),16595_i16];
_2 = [10535_i16,(-351_i16),8110_i16,16317_i16,25749_i16,16804_i16,(-12737_i16),(-3629_i16)];
_7 = RET;
(*_9) = 9223372036854775807_isize;
(*_9) = -(-2_isize);
_2 = _1;
RET = -_7;
_7 = -RET;
_2 = [(-18329_i16),28881_i16,(-28309_i16),31584_i16,(-19227_i16),(-7072_i16),(-29669_i16),(-17545_i16)];
_5 = false;
_10 = (*_9);
_7 = -RET;
(*_9) = _10;
_5 = _7 > _7;
RET = !_7;
_2 = [(-24306_i16),(-5920_i16),(-6696_i16),27158_i16,4519_i16,9963_i16,24499_i16,31344_i16];
_1 = _2;
_1 = [29857_i16,16093_i16,21967_i16,29988_i16,(-5167_i16),7125_i16,(-9995_i16),22664_i16];
_13 = Adt47::Variant0 { fld0: (-2726_i16),fld1: 17700051269819194149_u64 };
_12 = -189918339_i32;
(*_9) = -_10;
(*_9) = _10;
(*_9) = -_10;
match Field::<u64>(Variant(_13, 0), 1) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
17700051269819194149 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_12 = !502358159_i32;
_2 = [Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0),Field::<i16>(Variant(_13, 0), 0)];
_7 = 3_usize as i128;
_8 = '\u{8bb5f}';
SetDiscriminant(_13, 1);
_2 = [(-13964_i16),17969_i16,7205_i16,5952_i16,22586_i16,(-16262_i16),(-7242_i16),29905_i16];
place!(Field::<[u64; 3]>(Variant(_13, 1), 0)) = [10064370375274894023_u64,1021449033813464872_u64,6954309350431133103_u64];
_6 = [30729_u16,65437_u16,2187_u16,51015_u16,24198_u16,42627_u16,35867_u16,787_u16];
Call(_7 = fn7(_2, _6, Field::<[u64; 3]>(Variant(_13, 1), 0), _6), bb10, UnwindUnreachable())
}
bb10 = {
place!(Field::<[u16; 8]>(Variant(_13, 1), 4)) = _6;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).2.0 = [120_i8];
_5 = !true;
place!(Field::<(usize,)>(Variant(_13, 1), 7)).0 = !12868865826274580903_usize;
place!(Field::<(usize,)>(Variant(_13, 1), 7)) = (0_usize,);
place!(Field::<[u16; 8]>(Variant(_13, 1), 4)) = [47929_u16,59140_u16,63648_u16,39476_u16,60996_u16,64838_u16,54646_u16,30467_u16];
place!(Field::<i32>(Variant(_13, 1), 5)) = _12;
_15 = !_4;
place!(Field::<(usize,)>(Variant(_13, 1), 7)) = (10019108652747715018_usize,);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).1.0 = [65_i8];
_4 = _15 >> Field::<i32>(Variant(_13, 1), 5);
place!(Field::<i32>(Variant(_13, 1), 5)) = _8 as i32;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).2.0 = [73_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).2.0 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1).1.0;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).2.0 = [(-15_i8)];
place!(Field::<usize>(Variant(_13, 1), 2)) = Field::<(usize,)>(Variant(_13, 1), 7).0 >> (*_9);
_10 = -(*_9);
_5 = (*_9) <= (*_9);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).2 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1).1;
_19 = 15618551917968558756_u64;
_1 = [18470_i16,(-19795_i16),(-17341_i16),25933_i16,(-24058_i16),4361_i16,13959_i16,548_i16];
place!(Field::<i64>(Variant(_13, 1), 6)) = (-3533183081387696446_i64);
_19 = 8116770000340991526_u64 ^ 242177967423750832_u64;
_22 = [Field::<usize>(Variant(_13, 1), 2)];
Goto(bb11)
}
bb11 = {
_1 = _3;
_17 = (-10768_i16) as f32;
_16 = !Field::<i64>(Variant(_13, 1), 6);
_20 = [(-15819_i16),26583_i16,8331_i16,(-30349_i16)];
_10 = (*_9) ^ (*_9);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).0 = 139_u8;
_1 = [(-24329_i16),19232_i16,(-10049_i16),(-23561_i16),32044_i16,226_i16,27229_i16,(-25743_i16)];
match Field::<(usize,)>(Variant(_13, 1), 7).0 {
0 => bb6,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
10019108652747715018 => bb17,
_ => bb16
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
place!(Field::<[u64; 3]>(Variant(_13, 1), 0)) = [_19,_19,_19];
_15 = _10 - _10;
place!(Field::<[u16; 8]>(Variant(_13, 1), 4)) = [50038_u16,55513_u16,2258_u16,38152_u16,51363_u16,15106_u16,15513_u16,54601_u16];
place!(Field::<i32>(Variant(_13, 1), 5)) = Field::<usize>(Variant(_13, 1), 2) as i32;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).0 = _15 as u8;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).1.0 = [(-110_i8)];
place!(Field::<i64>(Variant(_13, 1), 6)) = !_16;
_2 = [(-18171_i16),5903_i16,(-11857_i16),11736_i16,(-8776_i16),5178_i16,14039_i16,28463_i16];
RET = _7 << (*_9);
_7 = _8 as i128;
_20 = [6350_i16,13633_i16,(-10745_i16),7553_i16];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1)).1 = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_13, 1), 1).2.0,);
Goto(bb18)
}
bb18 = {
Call(_25 = dump_var(5_usize, 20_usize, Move(_20), 4_usize, Move(_4), 12_usize, Move(_12), 19_usize, Move(_19)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_25 = dump_var(5_usize, 6_usize, Move(_6), 8_usize, Move(_8), 15_usize, Move(_15), 26_usize, _26), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: [i16; 8],mut _2: [i16; 8],mut _3: [i16; 8],mut _4: isize,mut _5: [i16; 8],mut _6: [i16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _7: bool;
let _8: *mut [i16; 5];
let _9: (u8, ([i8; 1],), ([i8; 1],));
let _10: Adt50;
let _11: ([i8; 1],);
let _12: [i16; 4];
let _13: f64;
let _14: f64;
let _15: u16;
let _16: (f64, *mut i16);
let _17: f64;
let _18: ();
let _19: ();
{
_6 = [(-21891_i16),(-24614_i16),(-16491_i16),(-13463_i16),10157_i16,4818_i16,(-477_i16),(-12610_i16)];
RET = [13446_u16,43876_u16,18303_u16,42304_u16,18683_u16,30994_u16,2798_u16,46113_u16];
_2 = _6;
_2 = _6;
_7 = !true;
_2 = [(-17762_i16),(-24293_i16),(-3983_i16),(-10441_i16),(-12115_i16),(-5997_i16),26783_i16,(-32707_i16)];
_1 = [(-12496_i16),(-19010_i16),(-24275_i16),650_i16,(-15534_i16),(-14804_i16),30707_i16,20127_i16];
_1 = [(-3188_i16),18296_i16,(-31165_i16),21325_i16,(-23221_i16),21889_i16,(-9086_i16),23206_i16];
_6 = [16248_i16,(-20118_i16),(-3139_i16),(-27555_i16),29027_i16,20071_i16,16382_i16,3545_i16];
_9.0 = 129547618972489188775512294580343839899_i128 as u8;
RET = [33324_u16,16246_u16,16729_u16,65441_u16,35688_u16,2694_u16,6696_u16,5873_u16];
_9.0 = 5956943940006934173_u64 as u8;
_6 = _3;
RET = [4160_u16,16707_u16,27549_u16,14479_u16,35100_u16,37885_u16,9249_u16,24422_u16];
_9.0 = 57_u8 << _4;
_9.1.0 = [(-39_i8)];
_3 = _6;
_6 = [(-5084_i16),(-31076_i16),(-7068_i16),(-27307_i16),(-1727_i16),(-25728_i16),(-13307_i16),(-17617_i16)];
_2 = [(-28435_i16),(-3522_i16),2133_i16,(-12890_i16),24621_i16,(-13895_i16),(-4520_i16),(-14326_i16)];
_9.1.0 = [101_i8];
_2 = _6;
_9.2 = _9.1;
_2 = [11016_i16,26861_i16,11740_i16,(-14939_i16),(-12937_i16),(-24945_i16),13980_i16,17330_i16];
_11 = (_9.2.0,);
_9.1 = (_9.2.0,);
_9 = (14_u8, _11, _11);
match _9.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
14 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = [38770_u16,62354_u16,10873_u16,34772_u16,52513_u16,28345_u16,9388_u16,63189_u16];
_9 = (12_u8, _11, _11);
_4 = 9223372036854775807_isize;
_9.0 = 35223_u16 as u8;
_7 = true;
_1 = [(-16776_i16),(-19627_i16),3810_i16,(-18016_i16),25030_i16,(-7568_i16),(-2136_i16),(-5446_i16)];
_11 = (_9.1.0,);
_14 = 4_usize as f64;
_9.2.0 = _11.0;
_14 = 2624369514309644557_u64 as f64;
match _4 {
0 => bb1,
1 => bb5,
2 => bb9,
3 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_11 = (_9.2.0,);
_6 = [(-32172_i16),(-22109_i16),17633_i16,(-5727_i16),19980_i16,(-17066_i16),(-4688_i16),(-6277_i16)];
_14 = _9.0 as f64;
_6 = [2588_i16,14678_i16,14609_i16,(-1303_i16),(-22370_i16),1854_i16,32496_i16,13604_i16];
match _4 {
0 => bb13,
1 => bb14,
2 => bb15,
3 => bb16,
9223372036854775807 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
RET = [38770_u16,62354_u16,10873_u16,34772_u16,52513_u16,28345_u16,9388_u16,63189_u16];
_9 = (12_u8, _11, _11);
_4 = 9223372036854775807_isize;
_9.0 = 35223_u16 as u8;
_7 = true;
_1 = [(-16776_i16),(-19627_i16),3810_i16,(-18016_i16),25030_i16,(-7568_i16),(-2136_i16),(-5446_i16)];
_11 = (_9.1.0,);
_14 = 4_usize as f64;
_9.2.0 = _11.0;
_14 = 2624369514309644557_u64 as f64;
match _4 {
0 => bb1,
1 => bb5,
2 => bb9,
3 => bb10,
9223372036854775807 => bb12,
_ => bb11
}
}
bb17 = {
Return()
}
bb18 = {
_9.1.0 = [0_i8];
_9.2 = _9.1;
_9.2.0 = [49_i8];
_9.1.0 = [(-126_i8)];
_13 = 37257443915967652565050544093057783747_i128 as f64;
_11 = _9.1;
_5 = [(-8388_i16),21421_i16,(-18931_i16),(-1934_i16),(-24880_i16),9365_i16,6414_i16,(-18262_i16)];
Goto(bb19)
}
bb19 = {
Call(_18 = dump_var(6_usize, 9_usize, Move(_9), 2_usize, Move(_2), 7_usize, Move(_7), 6_usize, Move(_6)), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn7(mut _1: [i16; 8],mut _2: [u16; 8],mut _3: [u64; 3],mut _4: [u16; 8]) -> i128 {
mir! {
type RET = i128;
let _5: Adt62;
let _6: ([i8; 1],);
let _7: isize;
let _8: [i16; 8];
let _9: [usize; 1];
let _10: f64;
let _11: i16;
let _12: i128;
let _13: *mut char;
let _14: Adt49;
let _15: (([i8; 1],), *const i8);
let _16: f32;
let _17: [u16; 8];
let _18: i64;
let _19: i16;
let _20: u128;
let _21: bool;
let _22: f32;
let _23: Adt63;
let _24: *mut i8;
let _25: u16;
let _26: *mut u128;
let _27: [i16; 5];
let _28: *const i32;
let _29: isize;
let _30: f32;
let _31: *const (([i8; 1],), *const i8);
let _32: Adt51;
let _33: Adt51;
let _34: u8;
let _35: [i16; 8];
let _36: bool;
let _37: ();
let _38: ();
{
RET = (-154208021690655499129631628872651696442_i128);
_6.0 = [(-15_i8)];
Goto(bb1)
}
bb1 = {
_1 = [11926_i16,16345_i16,(-1693_i16),(-19969_i16),11845_i16,27860_i16,29224_i16,(-2110_i16)];
_4 = _2;
_1 = [18801_i16,20303_i16,28604_i16,3623_i16,5991_i16,4788_i16,8841_i16,(-17108_i16)];
_7 = !(-9223372036854775808_isize);
RET = 152090903014617640522904881290118106539_i128 & 7496059296123651297071938351202748495_i128;
RET = -(-164695365798028560867359423421107958913_i128);
RET = (-102939992319524622545555843302609787759_i128) | (-158182384580503108907276846530725795867_i128);
RET = !12864921050547615128787559651235542316_i128;
_6.0 = [16_i8];
_7 = 9223372036854775807_isize << RET;
_7 = 9223372036854775807_isize;
RET = 79469612256661126602294420506215850638_i128 * 134229299601094133274901771170794433056_i128;
_3 = [17533225697070406983_u64,17106760061934742506_u64,1631141083899190169_u64];
RET = 154_u8 as i128;
_7 = 105_isize - (-9223372036854775808_isize);
_6.0 = [30_i8];
RET = !112552526241236945612934052940766855640_i128;
RET = 31596_u16 as i128;
_10 = 69_u8 as f64;
_3 = [4529193548634454260_u64,3777630379141665164_u64,2319156109483207167_u64];
_3 = [10267429347304796728_u64,10335189856583363728_u64,10614280081589232977_u64];
_1 = [(-5618_i16),22560_i16,(-18213_i16),(-25782_i16),(-5577_i16),32081_i16,15636_i16,28312_i16];
_8 = _1;
RET = 93002348932483264087526171805868089708_i128;
_6.0 = [(-36_i8)];
_11 = 5099_i16 * 7556_i16;
RET = false as i128;
Goto(bb2)
}
bb2 = {
_6.0 = [(-37_i8)];
_10 = 8740608824815109780_i64 as f64;
_6.0 = [(-125_i8)];
RET = !(-86080316810543554522569508140489505458_i128);
_6.0 = [97_i8];
RET = 20572_u16 as i128;
_8 = [_11,_11,_11,_11,_11,_11,_11,_11];
_12 = RET;
_4 = _2;
_6.0 = [113_i8];
_10 = 11201821223656411859_usize as f64;
_7 = (-32_isize) >> _11;
RET = _12 | _12;
_10 = 10189386452548471403_usize as f64;
RET = -_12;
_9 = [4087217245934737174_usize];
_10 = 10167928752934103807_u64 as f64;
RET = _12;
_2 = _4;
Call(_1 = fn8(RET, _3, _4, _3, _4, _7, _4, _10, RET, _3, _11), bb3, UnwindUnreachable())
}
bb3 = {
_7 = (-9223372036854775808_isize) << _11;
_8 = [_11,_11,_11,_11,_11,_11,_11,_11];
_9 = [14486131435329544870_usize];
_10 = (-1502156060_i32) as f64;
_1 = [_11,_11,_11,_11,_11,_11,_11,_11];
_1 = [_11,_11,_11,_11,_11,_11,_11,_11];
_8 = [_11,_11,_11,_11,_11,_11,_11,_11];
_9 = [4_usize];
_6.0 = [21_i8];
_6.0 = [(-67_i8)];
_10 = 9725216622752330168_u64 as f64;
_2 = _4;
RET = _12;
_2 = [42982_u16,11621_u16,14415_u16,17437_u16,46446_u16,11099_u16,17655_u16,17544_u16];
RET = _12;
_7 = '\u{f71d2}' as isize;
_7 = 71_isize;
_16 = 62793_u16 as f32;
_6.0 = [79_i8];
_15.0 = (_6.0,);
_10 = 34743_u16 as f64;
_7 = 22_isize;
match _7 {
0 => bb4,
1 => bb5,
22 => bb7,
_ => bb6
}
}
bb4 = {
_6.0 = [(-37_i8)];
_10 = 8740608824815109780_i64 as f64;
_6.0 = [(-125_i8)];
RET = !(-86080316810543554522569508140489505458_i128);
_6.0 = [97_i8];
RET = 20572_u16 as i128;
_8 = [_11,_11,_11,_11,_11,_11,_11,_11];
_12 = RET;
_4 = _2;
_6.0 = [113_i8];
_10 = 11201821223656411859_usize as f64;
_7 = (-32_isize) >> _11;
RET = _12 | _12;
_10 = 10189386452548471403_usize as f64;
RET = -_12;
_9 = [4087217245934737174_usize];
_10 = 10167928752934103807_u64 as f64;
RET = _12;
_2 = _4;
Call(_1 = fn8(RET, _3, _4, _3, _4, _7, _4, _10, RET, _3, _11), bb3, UnwindUnreachable())
}
bb5 = {
_1 = [11926_i16,16345_i16,(-1693_i16),(-19969_i16),11845_i16,27860_i16,29224_i16,(-2110_i16)];
_4 = _2;
_1 = [18801_i16,20303_i16,28604_i16,3623_i16,5991_i16,4788_i16,8841_i16,(-17108_i16)];
_7 = !(-9223372036854775808_isize);
RET = 152090903014617640522904881290118106539_i128 & 7496059296123651297071938351202748495_i128;
RET = -(-164695365798028560867359423421107958913_i128);
RET = (-102939992319524622545555843302609787759_i128) | (-158182384580503108907276846530725795867_i128);
RET = !12864921050547615128787559651235542316_i128;
_6.0 = [16_i8];
_7 = 9223372036854775807_isize << RET;
_7 = 9223372036854775807_isize;
RET = 79469612256661126602294420506215850638_i128 * 134229299601094133274901771170794433056_i128;
_3 = [17533225697070406983_u64,17106760061934742506_u64,1631141083899190169_u64];
RET = 154_u8 as i128;
_7 = 105_isize - (-9223372036854775808_isize);
_6.0 = [30_i8];
RET = !112552526241236945612934052940766855640_i128;
RET = 31596_u16 as i128;
_10 = 69_u8 as f64;
_3 = [4529193548634454260_u64,3777630379141665164_u64,2319156109483207167_u64];
_3 = [10267429347304796728_u64,10335189856583363728_u64,10614280081589232977_u64];
_1 = [(-5618_i16),22560_i16,(-18213_i16),(-25782_i16),(-5577_i16),32081_i16,15636_i16,28312_i16];
_8 = _1;
RET = 93002348932483264087526171805868089708_i128;
_6.0 = [(-36_i8)];
_11 = 5099_i16 * 7556_i16;
RET = false as i128;
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_7 = 9223372036854775807_isize | (-73_isize);
_16 = 251_u8 as f32;
_2 = [30760_u16,17034_u16,49251_u16,46502_u16,31418_u16,44794_u16,51773_u16,50541_u16];
_4 = [30054_u16,30489_u16,20442_u16,47448_u16,26993_u16,54159_u16,7368_u16,50545_u16];
_3 = [17631198159489357592_u64,10371571312842096893_u64,9146570927709123884_u64];
_10 = _12 as f64;
_11 = (-5967921895001860516_i64) as i16;
_2 = [60563_u16,21978_u16,16246_u16,16569_u16,42441_u16,34800_u16,9904_u16,14132_u16];
_11 = (-427_i16);
_12 = RET * RET;
_19 = (-1891257867_i32) as i16;
_12 = _16 as i128;
_8 = [_11,_11,_11,_11,_19,_19,_19,_19];
Goto(bb8)
}
bb8 = {
_10 = _7 as f64;
_22 = _16;
_22 = _16 * _16;
_2 = _4;
_11 = !_19;
_21 = false;
_8 = _1;
_11 = _22 as i16;
_6 = (_15.0.0,);
_8 = _1;
_7 = (-9223372036854775808_isize) * 102_isize;
_16 = _22 + _22;
_8 = _1;
_20 = !118560203409389499543482403650814352108_u128;
_9 = [0_usize];
_21 = !false;
RET = _12 ^ _12;
_1 = [_11,_11,_19,_11,_19,_11,_19,_11];
_6 = _15.0;
_20 = !133422359107253330279512622417423506519_u128;
_2 = [3016_u16,31636_u16,40416_u16,65061_u16,10472_u16,53218_u16,44269_u16,18611_u16];
_15.0 = (_6.0,);
Goto(bb9)
}
bb9 = {
_6 = (_15.0.0,);
_21 = !true;
_20 = 249292968916053853165313767503023674917_u128 + 201257268201970246649529488116489058116_u128;
_20 = 215922185871178219875109635706505151297_u128;
_6 = (_15.0.0,);
_16 = RET as f32;
_11 = !_19;
_20 = !275685577930706402137344361143854432725_u128;
_17 = [40683_u16,56416_u16,55160_u16,3978_u16,60837_u16,55142_u16,13492_u16,50281_u16];
_1 = [_19,_11,_19,_11,_19,_19,_19,_19];
_17 = [62053_u16,51723_u16,46716_u16,46643_u16,60833_u16,6026_u16,65488_u16,16651_u16];
_21 = false ^ false;
_22 = _16 + _16;
Goto(bb10)
}
bb10 = {
_10 = 31017_u16 as f64;
_7 = !(-37_isize);
_1 = [_19,_19,_19,_11,_11,_19,_11,_11];
_15.0.0 = _6.0;
_9 = [2_usize];
_20 = !269678349176872236172598866233227042541_u128;
_6 = (_15.0.0,);
_22 = -_16;
Call(_15.0.0 = core::intrinsics::transmute(_21), bb11, UnwindUnreachable())
}
bb11 = {
_10 = _20 as f64;
_11 = _19;
_19 = _11 * _11;
_15.0.0 = _6.0;
_15.0 = (_6.0,);
_21 = !true;
_27 = [_19,_19,_19,_11,_11];
_16 = (-31_i8) as f32;
_9 = [6257056537438860080_usize];
_20 = _22 as u128;
_15.0 = (_6.0,);
_3 = [6970109699289337307_u64,11539703073732239304_u64,5401020681279415473_u64];
_15.0.0 = _6.0;
_6 = (_15.0.0,);
_10 = (-59_i8) as f64;
_22 = (-8419409973852609929_i64) as f32;
_19 = 250_u8 as i16;
RET = !_12;
_6 = (_15.0.0,);
_18 = (-3293250480091074853_i64) + 1007393886034965233_i64;
_15.0.0 = [(-83_i8)];
_27 = [_19,_11,_19,_19,_11];
_18 = 3349215_i32 as i64;
_19 = _11 ^ _11;
Goto(bb12)
}
bb12 = {
_16 = _18 as f32;
_1 = _8;
_8 = [_19,_19,_19,_19,_19,_11,_11,_19];
_8 = [_11,_19,_19,_19,_11,_19,_19,_19];
_25 = !45701_u16;
_18 = -(-144591377603040264_i64);
_8 = [_19,_19,_19,_19,_11,_11,_11,_11];
_30 = _7 as f32;
_2 = [_25,_25,_25,_25,_25,_25,_25,_25];
_20 = 80915633251913954939992784071093009484_u128 - 238814956410641435086956300421546607697_u128;
_30 = _22;
_29 = _7 << RET;
Call(_12 = fn17(_17, _20, _4, _4, _10, _21, _4, _22, _4, _17, _4, _17, _1, _17, _4), bb13, UnwindUnreachable())
}
bb13 = {
_11 = !_19;
_31 = core::ptr::addr_of!(_15);
_20 = 133910228561941254190596025046564589369_u128 << _7;
_9 = [1_usize];
_16 = _22;
(*_31).0.0 = _6.0;
_26 = core::ptr::addr_of_mut!(_20);
_32.fld0 = _16 as f64;
_15.0.0 = _6.0;
_31 = core::ptr::addr_of!((*_31));
RET = _12 >> _29;
_27 = [_11,_11,_11,_19,_19];
RET = -_12;
(*_31).0.0 = _6.0;
_15.0.0 = [8_i8];
_3 = [15743560140551301457_u64,9372914877608450829_u64,3925233805996607511_u64];
_3 = [15908438673717951424_u64,3767088858252301603_u64,18080053681696986059_u64];
_33.fld0 = 1175505710_u32 as f64;
_35 = [_11,_11,_11,_11,_19,_19,_19,_11];
RET = _12 >> _12;
(*_26) = 64681601371314698651645791524650594458_u128 ^ 219501483169603561367189899531732132542_u128;
_1 = _35;
(*_31).0.0 = _6.0;
_20 = !81829559258481361146078353759431373865_u128;
_25 = 33030_u16 - 44493_u16;
_15.0.0 = [(-53_i8)];
(*_26) = !147493414641836614823295817131478348817_u128;
Goto(bb14)
}
bb14 = {
RET = !_12;
_25 = 40653_u16 - 52835_u16;
_33.fld0 = _10 - _32.fld0;
(*_31).0 = (_6.0,);
_8 = [_19,_11,_19,_11,_19,_19,_11,_19];
_27 = [_19,_19,_11,_11,_19];
(*_31).0.0 = [16_i8];
_4 = _17;
_34 = !51_u8;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(7_usize, 21_usize, Move(_21), 29_usize, Move(_29), 34_usize, Move(_34), 35_usize, Move(_35)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(7_usize, 3_usize, Move(_3), 18_usize, Move(_18), 2_usize, Move(_2), 17_usize, Move(_17)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(7_usize, 11_usize, Move(_11), 12_usize, Move(_12), 38_usize, _38, 38_usize, _38), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: i128,mut _2: [u64; 3],mut _3: [u16; 8],mut _4: [u64; 3],mut _5: [u16; 8],mut _6: isize,mut _7: [u16; 8],mut _8: f64,mut _9: i128,mut _10: [u64; 3],mut _11: i16) -> [i16; 8] {
mir! {
type RET = [i16; 8];
let _12: [usize; 1];
let _13: [i16; 4];
let _14: [i8; 1];
let _15: i128;
let _16: u16;
let _17: char;
let _18: *mut i8;
let _19: f32;
let _20: *mut u128;
let _21: (usize,);
let _22: [i128; 5];
let _23: [u16; 8];
let _24: u16;
let _25: i64;
let _26: isize;
let _27: f32;
let _28: [i16; 4];
let _29: [i16; 4];
let _30: i64;
let _31: ([i8; 1],);
let _32: ();
let _33: ();
{
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_10 = _2;
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_8 = _11 as f64;
_7 = [47065_u16,57452_u16,33871_u16,16922_u16,35580_u16,45155_u16,46561_u16,1644_u16];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_1 = 426032963_i32 as i128;
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_3 = [25100_u16,25396_u16,60000_u16,10419_u16,382_u16,45283_u16,26178_u16,59136_u16];
_1 = -_9;
_6 = -17_isize;
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_2 = [7311335894970632938_u64,8625522711430755887_u64,12593511334945861459_u64];
_5 = _7;
_3 = [46115_u16,43956_u16,34314_u16,36081_u16,38656_u16,3493_u16,30551_u16,21612_u16];
_2 = [12934903183570532878_u64,3393621271139999415_u64,18417961385922189870_u64];
_6 = (-108_isize) & 9223372036854775807_isize;
Goto(bb1)
}
bb1 = {
_14 = [30_i8];
_8 = 95_u8 as f64;
_15 = 76_u8 as i128;
_5 = [46872_u16,57223_u16,585_u16,50865_u16,29876_u16,40407_u16,10606_u16,6299_u16];
_7 = [10153_u16,64618_u16,33313_u16,45772_u16,58671_u16,36779_u16,35074_u16,29644_u16];
_11 = _1 as i16;
Call(_7 = fn9(_10, _6, _2, _5, _6, _1, _4, _14, _11, _5, _3, _10, _5), bb2, UnwindUnreachable())
}
bb2 = {
_13 = [_11,_11,_11,_11];
_10 = _4;
_14 = [(-14_i8)];
_12 = [1_usize];
_12 = [1_usize];
_1 = -_9;
_11 = 27907_i16 >> _9;
_14 = [9_i8];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_15 = !_1;
_16 = 22001_u16 * 12829_u16;
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = '\u{9e2a2}';
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_5 = _7;
_19 = _6 as f32;
_6 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_10 = _2;
_7 = [_16,_16,_16,_16,_16,_16,_16,_16];
Goto(bb3)
}
bb3 = {
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_11 = 20011_i16 - (-2800_i16);
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_6 = 9223372036854775807_isize & (-85_isize);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_6 = (-9223372036854775808_isize);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = [40_i8];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_21 = (8015107125020855194_usize,);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_7 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_4 = [2869354994855762888_u64,12437084282906903648_u64,8136508044839216594_u64];
_12 = [_21.0];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = [81_i8];
Goto(bb4)
}
bb4 = {
_9 = _15 >> _11;
Goto(bb5)
}
bb5 = {
_22 = [_9,_15,_9,_9,_9];
_9 = -_15;
_21 = (1201941672659648331_usize,);
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_13 = [_11,_11,_11,_11];
_10 = [10657447591314152127_u64,14377299194960779333_u64,10948038638933904282_u64];
_26 = !_6;
_21.0 = !4_usize;
_21.0 = !5_usize;
_23 = [_16,_16,_16,_16,_16,_16,_16,_16];
_9 = _1;
match _6 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb6 = {
_9 = _15 >> _11;
Goto(bb5)
}
bb7 = {
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_11 = 20011_i16 - (-2800_i16);
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_6 = 9223372036854775807_isize & (-85_isize);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_6 = (-9223372036854775808_isize);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = [40_i8];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_21 = (8015107125020855194_usize,);
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_7 = [_16,_16,_16,_16,_16,_16,_16,_16];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_5 = [_16,_16,_16,_16,_16,_16,_16,_16];
_4 = [2869354994855762888_u64,12437084282906903648_u64,8136508044839216594_u64];
_12 = [_21.0];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_14 = [81_i8];
Goto(bb4)
}
bb8 = {
_13 = [_11,_11,_11,_11];
_10 = _4;
_14 = [(-14_i8)];
_12 = [1_usize];
_12 = [1_usize];
_1 = -_9;
_11 = 27907_i16 >> _9;
_14 = [9_i8];
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_15 = !_1;
_16 = 22001_u16 * 12829_u16;
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_17 = '\u{9e2a2}';
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_3 = [_16,_16,_16,_16,_16,_16,_16,_16];
_5 = _7;
_19 = _6 as f32;
_6 = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
_10 = _2;
_7 = [_16,_16,_16,_16,_16,_16,_16,_16];
Goto(bb3)
}
bb9 = {
_14 = [30_i8];
_8 = 95_u8 as f64;
_15 = 76_u8 as i128;
_5 = [46872_u16,57223_u16,585_u16,50865_u16,29876_u16,40407_u16,10606_u16,6299_u16];
_7 = [10153_u16,64618_u16,33313_u16,45772_u16,58671_u16,36779_u16,35074_u16,29644_u16];
_11 = _1 as i16;
Call(_7 = fn9(_10, _6, _2, _5, _6, _1, _4, _14, _11, _5, _3, _10, _5), bb2, UnwindUnreachable())
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_15 = 3114967805201798000_u64 as i128;
_26 = -_6;
_24 = _16;
_13 = [_11,_11,_11,_11];
_15 = _1 + _9;
_9 = _1 >> _24;
_23 = [_24,_24,_16,_16,_24,_24,_24,_16];
_9 = 11662123434799156604_u64 as i128;
_22 = [_1,_1,_1,_1,_9];
_27 = _19 - _19;
_12 = [_21.0];
_6 = -_26;
_26 = _6 | _6;
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
Goto(bb13)
}
bb13 = {
_5 = _7;
_17 = '\u{1004d8}';
RET = [_11,_11,_11,_11,_11,_11,_11,_11];
_15 = !_9;
_25 = 120_i8 as i64;
Goto(bb14)
}
bb14 = {
_15 = -_1;
_3 = _5;
Goto(bb15)
}
bb15 = {
Call(_32 = dump_var(8_usize, 14_usize, Move(_14), 21_usize, Move(_21), 24_usize, Move(_24), 4_usize, Move(_4)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_32 = dump_var(8_usize, 1_usize, Move(_1), 26_usize, Move(_26), 12_usize, Move(_12), 15_usize, Move(_15)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(8_usize, 6_usize, Move(_6), 22_usize, Move(_22), 25_usize, Move(_25), 33_usize, _33), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: [u64; 3],mut _2: isize,mut _3: [u64; 3],mut _4: [u16; 8],mut _5: isize,mut _6: i128,mut _7: [u64; 3],mut _8: [i8; 1],mut _9: i16,mut _10: [u16; 8],mut _11: [u16; 8],mut _12: [u64; 3],mut _13: [u16; 8]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _14: [i16; 7];
let _15: isize;
let _16: i8;
let _17: f32;
let _18: [u8; 2];
let _19: isize;
let _20: i8;
let _21: u64;
let _22: bool;
let _23: [u8; 2];
let _24: char;
let _25: [u8; 2];
let _26: usize;
let _27: (u8, ([i8; 1],), ([i8; 1],));
let _28: (([i8; 1],), *const i8);
let _29: u32;
let _30: isize;
let _31: [u16; 8];
let _32: u8;
let _33: bool;
let _34: (u8, ([i8; 1],), ([i8; 1],));
let _35: (([i8; 1],), *const i8);
let _36: (f64, *mut i16);
let _37: i8;
let _38: u8;
let _39: *mut isize;
let _40: isize;
let _41: bool;
let _42: i128;
let _43: char;
let _44: u16;
let _45: ();
let _46: ();
{
_3 = _12;
RET = [52048_u16,32095_u16,6604_u16,60809_u16,35820_u16,32941_u16,35_u16,34665_u16];
_12 = [11801593888445583163_u64,4412459786838168677_u64,10584683746754996463_u64];
_12 = _7;
_3 = _7;
_10 = _13;
_11 = RET;
RET = _11;
_4 = _10;
_14 = [_9,_9,_9,_9,_9,_9,_9];
RET = [1114_u16,9520_u16,13952_u16,36198_u16,5438_u16,63303_u16,13093_u16,23911_u16];
_7 = [9778437584642494193_u64,3654382727857798073_u64,17115340337166434802_u64];
_6 = 164296479894544701689477289076744265150_i128;
_11 = [56348_u16,1977_u16,20894_u16,15547_u16,64358_u16,1588_u16,32664_u16,64521_u16];
_8 = [88_i8];
_5 = !_2;
_1 = _3;
Call(_14 = fn10(RET, _7, _11, _12, _11, _13, _12, _13), bb1, UnwindUnreachable())
}
bb1 = {
_16 = 81_i8 | (-68_i8);
_15 = -_2;
_5 = _2;
_4 = _11;
Call(_5 = core::intrinsics::bswap(_2), bb2, UnwindUnreachable())
}
bb2 = {
_3 = [2168904938603110520_u64,13772251746868860932_u64,5321899627290489702_u64];
_2 = _15 ^ _5;
_10 = [50475_u16,40481_u16,7304_u16,10178_u16,34212_u16,9317_u16,38220_u16,11364_u16];
_18 = [70_u8,166_u8];
_17 = (-770466910_i32) as f32;
_13 = [7887_u16,3655_u16,63199_u16,48335_u16,33105_u16,21627_u16,14089_u16,22826_u16];
_9 = 11610_i16;
_4 = [23420_u16,3042_u16,12305_u16,64489_u16,33593_u16,44412_u16,17453_u16,62241_u16];
_3 = [16707347121541087964_u64,11684881778592412826_u64,11910665903610397592_u64];
_1 = [8162495172216431807_u64,7419665377137583343_u64,778909860619000108_u64];
_10 = _4;
_1 = _3;
_19 = '\u{57798}' as isize;
_9 = 3958_i16;
Call(_20 = fn15(_3, _13, RET, _2, _4, _1, _5, _16, _10, _11, _16, _9, RET, _9, _5), bb3, UnwindUnreachable())
}
bb3 = {
_8 = [_20];
RET = _4;
_4 = _10;
_4 = [63360_u16,2599_u16,7600_u16,21787_u16,17751_u16,53753_u16,33324_u16,2981_u16];
_9 = -10224_i16;
_14 = [_9,_9,_9,_9,_9,_9,_9];
_14 = [_9,_9,_9,_9,_9,_9,_9];
_22 = true;
_17 = (-1707128955_i32) as f32;
_10 = _4;
_8 = [_16];
_12 = [3915765045710921889_u64,7487120146496565165_u64,10912078735644054426_u64];
_1 = [10260573932773057398_u64,13776956999737890036_u64,6226302327523856881_u64];
_10 = [20818_u16,47682_u16,34479_u16,3581_u16,9933_u16,8014_u16,60016_u16,38075_u16];
_15 = _2 * _2;
_25 = [85_u8,110_u8];
_1 = _12;
_27.1.0 = _8;
_23 = [51_u8,252_u8];
_21 = 5_usize as u64;
RET = [3765_u16,56226_u16,41040_u16,6204_u16,25961_u16,45097_u16,39767_u16,41004_u16];
_10 = _13;
match _6 {
0 => bb4,
164296479894544701689477289076744265150 => bb6,
_ => bb5
}
}
bb4 = {
_3 = [2168904938603110520_u64,13772251746868860932_u64,5321899627290489702_u64];
_2 = _15 ^ _5;
_10 = [50475_u16,40481_u16,7304_u16,10178_u16,34212_u16,9317_u16,38220_u16,11364_u16];
_18 = [70_u8,166_u8];
_17 = (-770466910_i32) as f32;
_13 = [7887_u16,3655_u16,63199_u16,48335_u16,33105_u16,21627_u16,14089_u16,22826_u16];
_9 = 11610_i16;
_4 = [23420_u16,3042_u16,12305_u16,64489_u16,33593_u16,44412_u16,17453_u16,62241_u16];
_3 = [16707347121541087964_u64,11684881778592412826_u64,11910665903610397592_u64];
_1 = [8162495172216431807_u64,7419665377137583343_u64,778909860619000108_u64];
_10 = _4;
_1 = _3;
_19 = '\u{57798}' as isize;
_9 = 3958_i16;
Call(_20 = fn15(_3, _13, RET, _2, _4, _1, _5, _16, _10, _11, _16, _9, RET, _9, _5), bb3, UnwindUnreachable())
}
bb5 = {
_16 = 81_i8 | (-68_i8);
_15 = -_2;
_5 = _2;
_4 = _11;
Call(_5 = core::intrinsics::bswap(_2), bb2, UnwindUnreachable())
}
bb6 = {
_24 = '\u{67c4c}';
_10 = [43964_u16,32155_u16,39610_u16,59928_u16,51258_u16,34242_u16,25107_u16,18395_u16];
_9 = (-8675_i16) * 29571_i16;
_29 = (-1411332731_i32) as u32;
_27.2.0 = _8;
_13 = [8773_u16,4528_u16,42534_u16,38656_u16,35319_u16,25609_u16,35425_u16,33762_u16];
_23 = [120_u8,15_u8];
_29 = 228895107300581762817674097938028612446_u128 as u32;
_30 = _9 as isize;
_12 = [_21,_21,_21];
Goto(bb7)
}
bb7 = {
_5 = -_30;
_28.1 = core::ptr::addr_of!(_20);
_11 = _4;
_27.2 = (_27.1.0,);
_16 = _29 as i8;
_4 = _13;
_20 = 4709829396920151069_i64 as i8;
_23 = [125_u8,12_u8];
_28.0.0 = [_20];
_8 = _27.2.0;
_27.1 = (_28.0.0,);
_21 = 8521955705834545395_u64;
_27.1 = (_8,);
_8 = [_16];
_27 = (224_u8, _28.0, _28.0);
_7 = [_21,_21,_21];
Call(_35.1 = core::intrinsics::arith_offset(_28.1, 9223372036854775807_isize), bb8, UnwindUnreachable())
}
bb8 = {
_32 = !_27.0;
_23 = [_32,_27.0];
_1 = [_21,_21,_21];
_34.2 = _28.0;
_27.2.0 = [_20];
_24 = '\u{1035d8}';
_27.1 = (_34.2.0,);
_34.1 = (_8,);
_28 = (_27.2, _35.1);
_27.1 = (_34.2.0,);
_27.1.0 = [_16];
_28 = (_34.2, _35.1);
_28 = (_27.1, _35.1);
_36.0 = _17 as f64;
_34.2 = (_27.1.0,);
_7 = _12;
_12 = _3;
_12 = [_21,_21,_21];
_37 = !_20;
_36.1 = core::ptr::addr_of_mut!(_9);
_28 = (_27.1, _35.1);
_2 = _15;
match _27.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb9,
224 => bb11,
_ => bb10
}
}
bb9 = {
_16 = 81_i8 | (-68_i8);
_15 = -_2;
_5 = _2;
_4 = _11;
Call(_5 = core::intrinsics::bswap(_2), bb2, UnwindUnreachable())
}
bb10 = {
_24 = '\u{67c4c}';
_10 = [43964_u16,32155_u16,39610_u16,59928_u16,51258_u16,34242_u16,25107_u16,18395_u16];
_9 = (-8675_i16) * 29571_i16;
_29 = (-1411332731_i32) as u32;
_27.2.0 = _8;
_13 = [8773_u16,4528_u16,42534_u16,38656_u16,35319_u16,25609_u16,35425_u16,33762_u16];
_23 = [120_u8,15_u8];
_29 = 228895107300581762817674097938028612446_u128 as u32;
_30 = _9 as isize;
_12 = [_21,_21,_21];
Goto(bb7)
}
bb11 = {
_36.1 = core::ptr::addr_of_mut!(_9);
_35.0.0 = [_37];
_35.0.0 = [_37];
_39 = core::ptr::addr_of_mut!(_19);
_28.0.0 = [_20];
_6 = 126241803717481914588933810189731688523_i128 * 142022328258526226232363149275708163881_i128;
_35 = (_34.2, _28.1);
_31 = RET;
_36.1 = core::ptr::addr_of_mut!(_9);
match _27.0 {
0 => bb1,
224 => bb13,
_ => bb12
}
}
bb12 = {
_3 = [2168904938603110520_u64,13772251746868860932_u64,5321899627290489702_u64];
_2 = _15 ^ _5;
_10 = [50475_u16,40481_u16,7304_u16,10178_u16,34212_u16,9317_u16,38220_u16,11364_u16];
_18 = [70_u8,166_u8];
_17 = (-770466910_i32) as f32;
_13 = [7887_u16,3655_u16,63199_u16,48335_u16,33105_u16,21627_u16,14089_u16,22826_u16];
_9 = 11610_i16;
_4 = [23420_u16,3042_u16,12305_u16,64489_u16,33593_u16,44412_u16,17453_u16,62241_u16];
_3 = [16707347121541087964_u64,11684881778592412826_u64,11910665903610397592_u64];
_1 = [8162495172216431807_u64,7419665377137583343_u64,778909860619000108_u64];
_10 = _4;
_1 = _3;
_19 = '\u{57798}' as isize;
_9 = 3958_i16;
Call(_20 = fn15(_3, _13, RET, _2, _4, _1, _5, _16, _10, _11, _16, _9, RET, _9, _5), bb3, UnwindUnreachable())
}
bb13 = {
_27.0 = _32;
_34.2.0 = [_20];
_42 = _6 << _2;
_41 = _37 > _20;
_9 = !(-15858_i16);
_9 = _42 as i16;
_35 = _28;
_27 = (_32, _34.1, _35.0);
_10 = [29474_u16,35923_u16,21949_u16,26479_u16,55756_u16,64647_u16,45040_u16,51623_u16];
_19 = _21 as isize;
_42 = -_6;
_30 = _2;
_24 = '\u{9c4fe}';
_34.2 = _28.0;
_41 = _22;
_34 = (_32, _27.2, _27.1);
_25 = [_27.0,_32];
_7 = [_21,_21,_21];
_24 = '\u{1f3d5}';
_10 = [53017_u16,59945_u16,17041_u16,40493_u16,1954_u16,35310_u16,47663_u16,20328_u16];
_10 = [21526_u16,28811_u16,4896_u16,24818_u16,54195_u16,3026_u16,61609_u16,161_u16];
_25 = _18;
_26 = 5881465428649135272_usize & 3198355505333456212_usize;
_34.1.0 = _27.2.0;
_28.0.0 = _27.1.0;
Call(_29 = fn16(_28.1, _12, _5, _4, _10, _11, _15), bb14, UnwindUnreachable())
}
bb14 = {
_38 = !_34.0;
_3 = _12;
_6 = _42 | _42;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(9_usize, 16_usize, Move(_16), 37_usize, Move(_37), 32_usize, Move(_32), 20_usize, Move(_20)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(9_usize, 15_usize, Move(_15), 26_usize, Move(_26), 5_usize, Move(_5), 19_usize, Move(_19)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(9_usize, 27_usize, Move(_27), 31_usize, Move(_31), 12_usize, Move(_12), 8_usize, Move(_8)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(9_usize, 24_usize, Move(_24), 4_usize, Move(_4), 9_usize, Move(_9), 3_usize, Move(_3)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_45 = dump_var(9_usize, 38_usize, Move(_38), 46_usize, _46, 46_usize, _46, 46_usize, _46), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: [u16; 8],mut _2: [u64; 3],mut _3: [u16; 8],mut _4: [u64; 3],mut _5: [u16; 8],mut _6: [u16; 8],mut _7: [u64; 3],mut _8: [u16; 8]) -> [i16; 7] {
mir! {
type RET = [i16; 7];
let _9: (usize,);
let _10: usize;
let _11: Adt56;
let _12: ([i8; 1],);
let _13: isize;
let _14: char;
let _15: [i16; 4];
let _16: [i16; 4];
let _17: (u8, *const i32);
let _18: (usize,);
let _19: [u8; 2];
let _20: *mut i16;
let _21: (u8, ([i8; 1],), ([i8; 1],));
let _22: f32;
let _23: (u8, *const i32);
let _24: (usize,);
let _25: u128;
let _26: bool;
let _27: i8;
let _28: Adt52;
let _29: isize;
let _30: u64;
let _31: char;
let _32: [i16; 4];
let _33: isize;
let _34: u128;
let _35: [usize; 1];
let _36: (u8, ([i8; 1],), ([i8; 1],));
let _37: u16;
let _38: ();
let _39: ();
{
RET = [8308_i16,(-28551_i16),(-19954_i16),(-18350_i16),(-21704_i16),(-31090_i16),22041_i16];
_1 = [19552_u16,25846_u16,2035_u16,37536_u16,57865_u16,43414_u16,54167_u16,45450_u16];
_10 = 13791226582410824614_usize >> 8549_u16;
_8 = [13929_u16,39908_u16,41588_u16,55171_u16,51554_u16,61958_u16,25150_u16,41499_u16];
_7 = [4056841842761015906_u64,12714250673692336386_u64,6634788657921914128_u64];
_9 = (_10,);
_4 = [9404750349058525494_u64,4941504354008619077_u64,1861002492358135704_u64];
_2 = _4;
_11.fld1 = '\u{f70d4}';
_6 = [17574_u16,6295_u16,37588_u16,55608_u16,54437_u16,53259_u16,63854_u16,49396_u16];
_9 = (_10,);
_12.0 = [87_i8];
_7 = [17114885919121259686_u64,411475632788420828_u64,14803205327558186482_u64];
_9.0 = _10;
_7 = _4;
RET = [12_i16,24901_i16,8453_i16,(-15486_i16),18805_i16,10465_i16,(-1559_i16)];
_16 = [(-16984_i16),11823_i16,(-22091_i16),(-23057_i16)];
Goto(bb1)
}
bb1 = {
_18 = _9;
_3 = [9932_u16,45956_u16,42879_u16,44856_u16,5616_u16,63274_u16,18149_u16,43424_u16];
_11.fld1 = '\u{cc1d9}';
_4 = [5741335053134001736_u64,16916023082930273318_u64,15816700839401909767_u64];
_13 = 9223372036854775807_isize;
_11.fld0.0 = 30_u8 + 252_u8;
_5 = _8;
_17.0 = _11.fld0.0 + _11.fld0.0;
_15 = [(-3676_i16),24499_i16,10726_i16,14337_i16];
_16 = [4450_i16,27673_i16,29875_i16,(-6211_i16)];
_14 = _11.fld1;
RET = [(-7294_i16),(-27792_i16),(-21185_i16),4872_i16,9535_i16,(-7641_i16),656_i16];
_7 = [8047117893672337340_u64,10697978845447033255_u64,16116566291243418529_u64];
Goto(bb2)
}
bb2 = {
_4 = [7585140016967628133_u64,2233885969278806897_u64,6867580208314943765_u64];
RET = [(-20023_i16),(-28023_i16),15017_i16,(-17129_i16),16538_i16,(-13102_i16),25840_i16];
_18.0 = 64106981846239216479557239062756071818_i128 as usize;
_21.1.0 = [(-73_i8)];
_21.2 = _12;
_3 = [5593_u16,50826_u16,12733_u16,9213_u16,48296_u16,37819_u16,16188_u16,8755_u16];
_21 = (_11.fld0.0, _12, _12);
_5 = [43499_u16,686_u16,63030_u16,17621_u16,20306_u16,49466_u16,23927_u16,11585_u16];
_11.fld1 = _14;
_12.0 = [15_i8];
_11.fld1 = _14;
_3 = [12044_u16,7567_u16,41798_u16,16679_u16,14527_u16,57609_u16,21110_u16,50509_u16];
_21.2 = _21.1;
_10 = _9.0 << _17.0;
_12 = _21.2;
_6 = [60950_u16,3080_u16,27499_u16,42381_u16,61106_u16,22717_u16,5891_u16,2060_u16];
_19 = [_17.0,_17.0];
_23.0 = _17.0;
_12.0 = [(-81_i8)];
_18.0 = !_10;
_4 = [18390733012680791208_u64,2288264286934109468_u64,6474234041970408949_u64];
_21 = (_23.0, _12, _12);
_11.fld0.0 = _17.0 | _23.0;
_21.2 = _21.1;
_8 = [51314_u16,65507_u16,39901_u16,51883_u16,27548_u16,25718_u16,1596_u16,14211_u16];
Call(_22 = fn11(RET, _8, _18, _21.1, _10, _18.0, _16, _16), bb3, UnwindUnreachable())
}
bb3 = {
_1 = _6;
_8 = [55439_u16,3607_u16,16964_u16,58494_u16,43691_u16,27643_u16,27353_u16,59554_u16];
_2 = [10181714209736613877_u64,7408786874392623821_u64,8803277402090793497_u64];
_10 = _18.0 & _9.0;
_24.0 = (-1145140621_i32) as usize;
_4 = _2;
_21.0 = _11.fld0.0;
_6 = [22425_u16,45367_u16,58842_u16,28041_u16,5762_u16,52243_u16,28825_u16,61980_u16];
_21.1 = (_12.0,);
_26 = _21.0 < _23.0;
_29 = _13;
_25 = 182153923313846061728075554710674819151_u128;
RET = [1715_i16,1534_i16,(-4326_i16),(-1276_i16),(-3238_i16),18355_i16,15287_i16];
_2 = [9933575450068991801_u64,2632233364727515823_u64,7381778037563143857_u64];
_27 = 547425072959162759_i64 as i8;
_26 = !true;
_14 = _11.fld1;
_24 = (_10,);
_19 = [_17.0,_11.fld0.0];
_25 = (-6071_i16) as u128;
_9 = (_10,);
_32 = [32465_i16,(-5745_i16),(-6269_i16),(-3719_i16)];
match _13 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
9223372036854775807 => bb11,
_ => bb10
}
}
bb4 = {
_4 = [7585140016967628133_u64,2233885969278806897_u64,6867580208314943765_u64];
RET = [(-20023_i16),(-28023_i16),15017_i16,(-17129_i16),16538_i16,(-13102_i16),25840_i16];
_18.0 = 64106981846239216479557239062756071818_i128 as usize;
_21.1.0 = [(-73_i8)];
_21.2 = _12;
_3 = [5593_u16,50826_u16,12733_u16,9213_u16,48296_u16,37819_u16,16188_u16,8755_u16];
_21 = (_11.fld0.0, _12, _12);
_5 = [43499_u16,686_u16,63030_u16,17621_u16,20306_u16,49466_u16,23927_u16,11585_u16];
_11.fld1 = _14;
_12.0 = [15_i8];
_11.fld1 = _14;
_3 = [12044_u16,7567_u16,41798_u16,16679_u16,14527_u16,57609_u16,21110_u16,50509_u16];
_21.2 = _21.1;
_10 = _9.0 << _17.0;
_12 = _21.2;
_6 = [60950_u16,3080_u16,27499_u16,42381_u16,61106_u16,22717_u16,5891_u16,2060_u16];
_19 = [_17.0,_17.0];
_23.0 = _17.0;
_12.0 = [(-81_i8)];
_18.0 = !_10;
_4 = [18390733012680791208_u64,2288264286934109468_u64,6474234041970408949_u64];
_21 = (_23.0, _12, _12);
_11.fld0.0 = _17.0 | _23.0;
_21.2 = _21.1;
_8 = [51314_u16,65507_u16,39901_u16,51883_u16,27548_u16,25718_u16,1596_u16,14211_u16];
Call(_22 = fn11(RET, _8, _18, _21.1, _10, _18.0, _16, _16), bb3, UnwindUnreachable())
}
bb5 = {
_18 = _9;
_3 = [9932_u16,45956_u16,42879_u16,44856_u16,5616_u16,63274_u16,18149_u16,43424_u16];
_11.fld1 = '\u{cc1d9}';
_4 = [5741335053134001736_u64,16916023082930273318_u64,15816700839401909767_u64];
_13 = 9223372036854775807_isize;
_11.fld0.0 = 30_u8 + 252_u8;
_5 = _8;
_17.0 = _11.fld0.0 + _11.fld0.0;
_15 = [(-3676_i16),24499_i16,10726_i16,14337_i16];
_16 = [4450_i16,27673_i16,29875_i16,(-6211_i16)];
_14 = _11.fld1;
RET = [(-7294_i16),(-27792_i16),(-21185_i16),4872_i16,9535_i16,(-7641_i16),656_i16];
_7 = [8047117893672337340_u64,10697978845447033255_u64,16116566291243418529_u64];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_13 = 8535890190889668057_i64 as isize;
_21.2 = _21.1;
RET = [(-20407_i16),(-13849_i16),13545_i16,13061_i16,(-25697_i16),23543_i16,(-11066_i16)];
_8 = [22887_u16,26623_u16,45698_u16,178_u16,53364_u16,45109_u16,48459_u16,23127_u16];
_16 = [7043_i16,(-24726_i16),3626_i16,(-2414_i16)];
_21 = (_11.fld0.0, _12, _12);
_9.0 = !_10;
_11.fld1 = _14;
match _29 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb9,
4 => bb7,
9223372036854775807 => bb13,
_ => bb12
}
}
bb12 = {
_1 = _6;
_8 = [55439_u16,3607_u16,16964_u16,58494_u16,43691_u16,27643_u16,27353_u16,59554_u16];
_2 = [10181714209736613877_u64,7408786874392623821_u64,8803277402090793497_u64];
_10 = _18.0 & _9.0;
_24.0 = (-1145140621_i32) as usize;
_4 = _2;
_21.0 = _11.fld0.0;
_6 = [22425_u16,45367_u16,58842_u16,28041_u16,5762_u16,52243_u16,28825_u16,61980_u16];
_21.1 = (_12.0,);
_26 = _21.0 < _23.0;
_29 = _13;
_25 = 182153923313846061728075554710674819151_u128;
RET = [1715_i16,1534_i16,(-4326_i16),(-1276_i16),(-3238_i16),18355_i16,15287_i16];
_2 = [9933575450068991801_u64,2632233364727515823_u64,7381778037563143857_u64];
_27 = 547425072959162759_i64 as i8;
_26 = !true;
_14 = _11.fld1;
_24 = (_10,);
_19 = [_17.0,_11.fld0.0];
_25 = (-6071_i16) as u128;
_9 = (_10,);
_32 = [32465_i16,(-5745_i16),(-6269_i16),(-3719_i16)];
match _13 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
9223372036854775807 => bb11,
_ => bb10
}
}
bb13 = {
_11.fld0.0 = _29 as u8;
_12.0 = _21.1.0;
_27 = _25 as i8;
Goto(bb14)
}
bb14 = {
_9 = (_24.0,);
_22 = _24.0 as f32;
_34 = _25;
_30 = 2868055371398020710_u64;
_8 = _3;
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(10_usize, 29_usize, Move(_29), 34_usize, Move(_34), 16_usize, Move(_16), 24_usize, Move(_24)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(10_usize, 19_usize, Move(_19), 7_usize, Move(_7), 4_usize, Move(_4), 15_usize, Move(_15)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(10_usize, 10_usize, Move(_10), 21_usize, Move(_21), 18_usize, Move(_18), 13_usize, Move(_13)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(10_usize, 25_usize, Move(_25), 39_usize, _39, 39_usize, _39, 39_usize, _39), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [i16; 7],mut _2: [u16; 8],mut _3: (usize,),mut _4: ([i8; 1],),mut _5: usize,mut _6: usize,mut _7: [i16; 4],mut _8: [i16; 4]) -> f32 {
mir! {
type RET = f32;
let _9: char;
let _10: isize;
let _11: f64;
let _12: [i16; 5];
let _13: Adt55;
let _14: isize;
let _15: bool;
let _16: *const (([i8; 1],), *const i8);
let _17: [i128; 5];
let _18: f32;
let _19: f64;
let _20: isize;
let _21: Adt48;
let _22: i8;
let _23: [i8; 1];
let _24: (u8, ([i8; 1],), ([i8; 1],));
let _25: u128;
let _26: [i8; 1];
let _27: [i128; 5];
let _28: [i16; 7];
let _29: char;
let _30: (u8, *const i32);
let _31: f32;
let _32: i32;
let _33: bool;
let _34: isize;
let _35: [i16; 8];
let _36: [i16; 7];
let _37: ();
let _38: ();
{
_1 = [(-10002_i16),9303_i16,19385_i16,(-10781_i16),(-28898_i16),556_i16,(-21670_i16)];
Goto(bb1)
}
bb1 = {
RET = 9223372036854775807_isize as f32;
_2 = [8768_u16,36082_u16,4252_u16,53424_u16,54075_u16,62816_u16,15149_u16,57119_u16];
_5 = !_6;
RET = 805770693342442880_i64 as f32;
_4.0 = [(-22_i8)];
_2 = [32307_u16,21467_u16,55797_u16,51056_u16,33853_u16,24061_u16,12040_u16,830_u16];
Call(_6 = fn12(_3.0, _7, _1, _3.0, _5, _8, _2, _3.0, _7, _5, _5), bb2, UnwindUnreachable())
}
bb2 = {
_1 = [(-8656_i16),20720_i16,6119_i16,1918_i16,(-17249_i16),(-22378_i16),(-31964_i16)];
_9 = '\u{fc81d}';
_1 = [(-28845_i16),23944_i16,(-18007_i16),(-30538_i16),(-21935_i16),(-8897_i16),20755_i16];
_9 = '\u{f2e3d}';
_3.0 = !_6;
_8 = [(-5055_i16),(-32038_i16),(-30670_i16),(-9945_i16)];
_7 = [15450_i16,26333_i16,(-21457_i16),22021_i16];
Goto(bb3)
}
bb3 = {
_3.0 = _9 as usize;
Goto(bb4)
}
bb4 = {
_12 = [(-6624_i16),(-26131_i16),22880_i16,(-11886_i16),(-7766_i16)];
_11 = 7_u8 as f64;
_9 = '\u{a3db4}';
_12 = [(-7386_i16),3782_i16,13050_i16,(-32580_i16),23731_i16];
RET = (-33_i8) as f32;
_10 = (-9223372036854775808_isize);
_7 = [31347_i16,(-16868_i16),(-2187_i16),(-15080_i16)];
_3.0 = 25914_i16 as usize;
Call(_7 = core::intrinsics::transmute(_5), bb5, UnwindUnreachable())
}
bb5 = {
_12 = [(-1734_i16),20964_i16,5175_i16,18129_i16,17183_i16];
_2 = [22074_u16,7095_u16,38110_u16,1421_u16,63474_u16,9012_u16,19843_u16,44718_u16];
_7 = [(-18569_i16),(-31395_i16),(-1132_i16),539_i16];
_14 = -_10;
_7 = _8;
_14 = _10;
_4.0 = [122_i8];
_8 = [(-19664_i16),(-31500_i16),(-32682_i16),12637_i16];
_3 = (_6,);
_1 = [23049_i16,(-30203_i16),8998_i16,(-3568_i16),(-13051_i16),3756_i16,(-18404_i16)];
_4.0 = [(-48_i8)];
_11 = 15445503254124754657_u64 as f64;
_19 = _11;
_18 = RET;
_4.0 = [29_i8];
_9 = '\u{eb0f2}';
_3.0 = _6 + _6;
_5 = 1293415268_i32 as usize;
_19 = (-33_i8) as f64;
_7 = [(-23232_i16),(-22474_i16),2994_i16,(-6982_i16)];
Goto(bb6)
}
bb6 = {
_5 = _6;
_3.0 = (-40672860652211422694146027221726496089_i128) as usize;
_19 = 149700961124617843285703836751437622214_i128 as f64;
_17 = [(-46406046627241333543941953358076846130_i128),(-41876029024776531247647130786873881094_i128),(-60816142636462196093752296038142994023_i128),90539193007799685212533378544388140154_i128,(-56470156830117584940212417592931543568_i128)];
_10 = 59500_u16 as isize;
_7 = _8;
_4.0 = [11_i8];
_14 = _9 as isize;
_3.0 = _6;
_17 = [(-119557903657188230285486231150986428019_i128),(-105895824238166892960181384362137849486_i128),92375838723153580641124786058850916801_i128,(-113808551477015905822382646965326893050_i128),(-25316636607288746313730555957402902713_i128)];
Goto(bb7)
}
bb7 = {
_3.0 = _5 + _5;
_15 = false & true;
_20 = _14 + _14;
_20 = RET as isize;
_4.0 = [(-67_i8)];
_19 = RET as f64;
_5 = _19 as usize;
_15 = false;
_10 = (-30_i8) as isize;
_24.0 = 9539_i16 as u8;
_24 = (159_u8, _4, _4);
_8 = [(-453_i16),10265_i16,(-31098_i16),(-20565_i16)];
_4 = _24.1;
_25 = !51809006440775497534205964793304044767_u128;
_4.0 = [(-72_i8)];
Call(_4 = fn13(_6, _6, _1), bb8, UnwindUnreachable())
}
bb8 = {
_22 = -58_i8;
_22 = 115_i8;
_24.1 = (_4.0,);
_9 = '\u{aaae5}';
_27 = [(-79055361991822205541722692544014895135_i128),(-92220982629001796367364659764546413124_i128),131438140378214326487266223410152804891_i128,97227113096935656039398350789674466024_i128,80774444726762650828167939825288891687_i128];
_24.1 = _24.2;
_24.2 = (_4.0,);
_7 = _8;
_24.2.0 = [_22];
_17 = [(-3713346988852809687011916473463246338_i128),164044742114908365476259592838357874266_i128,67772614212520854263549951455462187050_i128,(-49356044252576505024247894979013349710_i128),(-73773413978291003870935602021846956994_i128)];
_11 = _19 + _19;
_24 = (99_u8, _4, _4);
match _24.0 {
0 => bb1,
1 => bb9,
2 => bb10,
3 => bb11,
99 => bb13,
_ => bb12
}
}
bb9 = {
_3.0 = _9 as usize;
Goto(bb4)
}
bb10 = {
_5 = _6;
_3.0 = (-40672860652211422694146027221726496089_i128) as usize;
_19 = 149700961124617843285703836751437622214_i128 as f64;
_17 = [(-46406046627241333543941953358076846130_i128),(-41876029024776531247647130786873881094_i128),(-60816142636462196093752296038142994023_i128),90539193007799685212533378544388140154_i128,(-56470156830117584940212417592931543568_i128)];
_10 = 59500_u16 as isize;
_7 = _8;
_4.0 = [11_i8];
_14 = _9 as isize;
_3.0 = _6;
_17 = [(-119557903657188230285486231150986428019_i128),(-105895824238166892960181384362137849486_i128),92375838723153580641124786058850916801_i128,(-113808551477015905822382646965326893050_i128),(-25316636607288746313730555957402902713_i128)];
Goto(bb7)
}
bb11 = {
_12 = [(-1734_i16),20964_i16,5175_i16,18129_i16,17183_i16];
_2 = [22074_u16,7095_u16,38110_u16,1421_u16,63474_u16,9012_u16,19843_u16,44718_u16];
_7 = [(-18569_i16),(-31395_i16),(-1132_i16),539_i16];
_14 = -_10;
_7 = _8;
_14 = _10;
_4.0 = [122_i8];
_8 = [(-19664_i16),(-31500_i16),(-32682_i16),12637_i16];
_3 = (_6,);
_1 = [23049_i16,(-30203_i16),8998_i16,(-3568_i16),(-13051_i16),3756_i16,(-18404_i16)];
_4.0 = [(-48_i8)];
_11 = 15445503254124754657_u64 as f64;
_19 = _11;
_18 = RET;
_4.0 = [29_i8];
_9 = '\u{eb0f2}';
_3.0 = _6 + _6;
_5 = 1293415268_i32 as usize;
_19 = (-33_i8) as f64;
_7 = [(-23232_i16),(-22474_i16),2994_i16,(-6982_i16)];
Goto(bb6)
}
bb12 = {
_12 = [(-6624_i16),(-26131_i16),22880_i16,(-11886_i16),(-7766_i16)];
_11 = 7_u8 as f64;
_9 = '\u{a3db4}';
_12 = [(-7386_i16),3782_i16,13050_i16,(-32580_i16),23731_i16];
RET = (-33_i8) as f32;
_10 = (-9223372036854775808_isize);
_7 = [31347_i16,(-16868_i16),(-2187_i16),(-15080_i16)];
_3.0 = 25914_i16 as usize;
Call(_7 = core::intrinsics::transmute(_5), bb5, UnwindUnreachable())
}
bb13 = {
_23 = [_22];
_26 = [_22];
_18 = RET * RET;
_8 = [367_i16,(-293_i16),(-19196_i16),31814_i16];
_18 = -RET;
_5 = (-3834786779641392677_i64) as usize;
_24 = (108_u8, _4, _4);
_29 = _9;
_24.1.0 = [_22];
_20 = 47328_u16 as isize;
_31 = _18;
_11 = _19 + _19;
_34 = _14 - _14;
_33 = _3.0 != _3.0;
_30.1 = core::ptr::addr_of!(_32);
_10 = _34;
match _24.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb11,
108 => bb14,
_ => bb10
}
}
bb14 = {
_32 = _22 as i32;
Goto(bb15)
}
bb15 = {
Call(_37 = dump_var(11_usize, 20_usize, Move(_20), 6_usize, Move(_6), 4_usize, Move(_4), 8_usize, Move(_8)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_37 = dump_var(11_usize, 26_usize, Move(_26), 12_usize, Move(_12), 3_usize, Move(_3), 27_usize, Move(_27)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_37 = dump_var(11_usize, 22_usize, Move(_22), 23_usize, Move(_23), 15_usize, Move(_15), 1_usize, Move(_1)), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: usize,mut _2: [i16; 4],mut _3: [i16; 7],mut _4: usize,mut _5: usize,mut _6: [i16; 4],mut _7: [u16; 8],mut _8: usize,mut _9: [i16; 4],mut _10: usize,mut _11: usize) -> usize {
mir! {
type RET = usize;
let _12: i8;
let _13: i16;
let _14: u128;
let _15: *mut u32;
let _16: (u8, ([i8; 1],), ([i8; 1],));
let _17: isize;
let _18: [u8; 2];
let _19: [u8; 2];
let _20: char;
let _21: ();
let _22: ();
{
_8 = _4;
RET = !_8;
_4 = _1;
_2 = [11882_i16,8285_i16,4859_i16,(-31480_i16)];
_11 = _8 >> _10;
_7 = [8580_u16,61868_u16,49615_u16,1802_u16,7911_u16,56539_u16,12412_u16,19094_u16];
_13 = -(-5812_i16);
_12 = -(-44_i8);
RET = _5;
_16.2.0 = [_12];
_1 = !_5;
_16.0 = 252_u8 * 37_u8;
_5 = _8 | _10;
_14 = _16.0 as u128;
_2 = _6;
_16.0 = _12 as u8;
RET = _8 << _8;
_16.1.0 = _16.2.0;
_1 = (-157108717664840307610654707793461842015_i128) as usize;
_4 = !RET;
Goto(bb1)
}
bb1 = {
Call(_21 = dump_var(12_usize, 10_usize, Move(_10), 5_usize, Move(_5), 6_usize, Move(_6), 9_usize, Move(_9)), bb2, UnwindUnreachable())
}
bb2 = {
Call(_21 = dump_var(12_usize, 13_usize, Move(_13), 1_usize, Move(_1), 2_usize, Move(_2), 22_usize, _22), bb3, UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: usize,mut _2: usize,mut _3: [i16; 7]) -> ([i8; 1],) {
mir! {
type RET = ([i8; 1],);
let _4: [u8; 2];
let _5: Adt63;
let _6: isize;
let _7: isize;
let _8: Adt59;
let _9: isize;
let _10: [i128; 5];
let _11: [i8; 1];
let _12: isize;
let _13: f32;
let _14: u8;
let _15: [usize; 1];
let _16: [i128; 5];
let _17: i128;
let _18: f32;
let _19: isize;
let _20: u32;
let _21: u32;
let _22: [i8; 1];
let _23: Adt51;
let _24: f64;
let _25: *const i8;
let _26: u8;
let _27: [u16; 8];
let _28: f32;
let _29: i32;
let _30: Adt57;
let _31: [u64; 3];
let _32: [i16; 5];
let _33: char;
let _34: [i16; 4];
let _35: ();
let _36: ();
{
_2 = _1;
_1 = _2 & _2;
_3 = [(-14396_i16),(-24472_i16),25305_i16,(-18696_i16),(-4391_i16),(-22103_i16),(-11750_i16)];
_4 = [193_u8,210_u8];
RET.0 = [61_i8];
_2 = _1 >> _1;
RET.0 = [25_i8];
_6 = 36032_u16 as isize;
RET.0 = [90_i8];
_2 = !_1;
_7 = _6 * _6;
RET.0 = [18_i8];
_3 = [(-19615_i16),3923_i16,(-18169_i16),(-25029_i16),(-22586_i16),20841_i16,(-7543_i16)];
_7 = -_6;
_6 = _7;
_4 = [245_u8,137_u8];
_7 = _6;
_1 = _2 - _2;
Goto(bb1)
}
bb1 = {
_3 = [21720_i16,6607_i16,22815_i16,27724_i16,(-24054_i16),19230_i16,(-13622_i16)];
RET.0 = [(-80_i8)];
_6 = -_7;
_4 = [36_u8,88_u8];
_6 = 31735267739654238341169713976320090826_u128 as isize;
RET.0 = [30_i8];
_6 = -_7;
_1 = !_2;
RET.0 = [(-14_i8)];
_4 = [18_u8,161_u8];
_2 = _1;
RET.0 = [(-126_i8)];
_6 = _7 + _7;
_7 = !_6;
RET.0 = [127_i8];
_9 = false as isize;
RET.0 = [53_i8];
RET.0 = [2_i8];
_7 = !_6;
_7 = _9;
_7 = _6 - _6;
Goto(bb2)
}
bb2 = {
RET.0 = [44_i8];
_7 = _9;
_7 = '\u{32e42}' as isize;
_9 = (-75_i8) as isize;
RET.0 = [(-30_i8)];
_4 = [241_u8,168_u8];
_10 = [102410303471045024753315687096833456223_i128,(-88767208472549443465046815110353790633_i128),96602619528653442952992635629044409021_i128,159570206467570640041301470887538503801_i128,(-160733802889954733190801539644761149693_i128)];
_1 = _2 - _2;
_3 = [31206_i16,(-15384_i16),18839_i16,(-14187_i16),(-8377_i16),21006_i16,10061_i16];
_10 = [112625815907748508534119783028240510586_i128,103086508319823079480322717965661292319_i128,(-83929133650562346032030815863580363071_i128),2042976137143418684125647603013313183_i128,(-149525113868713751707105709606364949125_i128)];
_6 = _7;
_11 = RET.0;
_10 = [(-34953857834516725445094502443430198645_i128),151535532981351605200781718848749937896_i128,128470918418100491799758407925459473295_i128,(-56816274740420707841906155394734293485_i128),(-65348291075301336183770278783252226586_i128)];
_10 = [63182141165618372970526481255304624871_i128,31526039466521918073439802362321572092_i128,112683446717735204250248943275988746347_i128,139562168029526708388742088912240697165_i128,67367280818296485009271850272939321321_i128];
_13 = (-639460950_i32) as f32;
RET.0 = [(-113_i8)];
_12 = !_6;
Call(_9 = core::intrinsics::bswap(_12), bb3, UnwindUnreachable())
}
bb3 = {
RET = (_11,);
RET = (_11,);
_6 = -_7;
_1 = _2 << _2;
RET.0 = [73_i8];
_6 = !_12;
_11 = [80_i8];
RET = (_11,);
_3 = [15923_i16,(-17610_i16),3302_i16,(-25722_i16),(-16814_i16),(-13260_i16),(-1342_i16)];
_4 = [68_u8,182_u8];
RET = (_11,);
Call(_16 = core::intrinsics::transmute(_10), bb4, UnwindUnreachable())
}
bb4 = {
RET.0 = _11;
_16 = [(-94053578674997201267136339286481639103_i128),47555972796179698605050291495151081781_i128,31169788215290420274465828327826169930_i128,147927074428080736937471135978247292631_i128,(-133604933595870464481301711623631607060_i128)];
_16 = _10;
_15 = [_1];
_14 = 179_u8 << _2;
_3 = [(-20853_i16),(-3830_i16),(-5572_i16),25081_i16,14596_i16,(-17325_i16),(-221_i16)];
_17 = 108336140620135713277616673171906664609_i128;
RET.0 = [(-64_i8)];
_17 = 126523992065788723455335423698613951019_i128 * (-69120759107178054229832760371436912844_i128);
_4 = [_14,_14];
_13 = 12059270390551388080_u64 as f32;
_17 = (-145252543619377277431040751179127733477_i128);
_18 = -_13;
_17 = (-16683254848556610830876980629111882770_i128);
_20 = !3987512324_u32;
_10 = [_17,_17,_17,_17,_17];
_21 = !_20;
_19 = _9 - _12;
_19 = _6 | _7;
_20 = '\u{44eea}' as u32;
_4 = [_14,_14];
_9 = _12 - _12;
_4 = [_14,_14];
_20 = _17 as u32;
_18 = _13;
Goto(bb5)
}
bb5 = {
RET.0 = _11;
RET = (_11,);
_17 = (-98349670894208980620793317040132320315_i128) * 68488204729357224421471618800119376862_i128;
_20 = _21 << _14;
_22 = [59_i8];
RET = (_22,);
_6 = 8952_u16 as isize;
_12 = _9 | _7;
RET.0 = [92_i8];
_22 = [(-51_i8)];
_9 = -_12;
RET = (_11,);
_11 = [(-12_i8)];
Goto(bb6)
}
bb6 = {
_21 = _20 ^ _20;
_12 = true as isize;
Goto(bb7)
}
bb7 = {
_9 = _6 + _12;
Call(_17 = core::intrinsics::bswap(97018014190501977955624686973106691767_i128), bb8, UnwindUnreachable())
}
bb8 = {
_17 = (-160442677470142560276682217427340117815_i128) << _21;
_22 = [40_i8];
_23.fld0 = 29605685566890121740870814468711548268_u128 as f64;
_12 = _6 * _7;
_10 = _16;
_22 = _11;
_11 = [(-14_i8)];
_23.fld0 = _17 as f64;
_12 = _6;
_3 = [(-10485_i16),(-31974_i16),(-27027_i16),18192_i16,30347_i16,(-31994_i16),(-9583_i16)];
_3 = [(-6130_i16),24017_i16,(-20066_i16),(-27302_i16),(-9263_i16),29496_i16,29952_i16];
_7 = _9;
_23.fld0 = 301855812276403488717983826036371196956_u128 as f64;
_6 = _9;
_2 = _1;
_16 = _10;
_15 = [_2];
_24 = 71594455702823537427914535786877326306_u128 as f64;
_18 = _13 * _13;
_23.fld0 = _24 + _24;
_15 = [_1];
RET = (_22,);
_1 = !_2;
_13 = _18 + _18;
Call(_3 = fn14(_20, _17, _20, _2, _1, _21, _2, _17, _17, _4, _17), bb9, UnwindUnreachable())
}
bb9 = {
RET.0 = [86_i8];
RET.0 = [46_i8];
Goto(bb10)
}
bb10 = {
_11 = [94_i8];
_26 = 16066_u16 as u8;
_11 = [46_i8];
_24 = _23.fld0;
_28 = 54_i8 as f32;
_9 = _14 as isize;
Goto(bb11)
}
bb11 = {
_9 = _6 * _19;
_20 = !_21;
_29 = !1523758326_i32;
_18 = -_13;
_6 = _14 as isize;
Goto(bb12)
}
bb12 = {
_7 = !_6;
_21 = _20 * _20;
_4 = [_14,_14];
_20 = _21;
_4 = [_14,_14];
_23.fld0 = _24 * _24;
RET.0 = [(-28_i8)];
Goto(bb13)
}
bb13 = {
_20 = _21 ^ _21;
_7 = -_6;
RET = (_11,);
_14 = 18303082706602452735_u64 as u8;
RET.0 = [14_i8];
_16 = [_17,_17,_17,_17,_17];
Goto(bb14)
}
bb14 = {
_32 = [(-17129_i16),(-18663_i16),(-5479_i16),(-23925_i16),(-13416_i16)];
_10 = [_17,_17,_17,_17,_17];
_10 = [_17,_17,_17,_17,_17];
_16 = [_17,_17,_17,_17,_17];
_33 = '\u{700cd}';
Goto(bb15)
}
bb15 = {
Call(_35 = dump_var(13_usize, 16_usize, Move(_16), 2_usize, Move(_2), 12_usize, Move(_12), 7_usize, Move(_7)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_35 = dump_var(13_usize, 22_usize, Move(_22), 11_usize, Move(_11), 19_usize, Move(_19), 3_usize, Move(_3)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_35 = dump_var(13_usize, 15_usize, Move(_15), 17_usize, Move(_17), 32_usize, Move(_32), 36_usize, _36), bb18, UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: u32,mut _2: i128,mut _3: u32,mut _4: usize,mut _5: usize,mut _6: u32,mut _7: usize,mut _8: i128,mut _9: i128,mut _10: [u8; 2],mut _11: i128) -> [i16; 7] {
mir! {
type RET = [i16; 7];
let _12: f64;
let _13: u16;
let _14: ([i8; 1],);
let _15: Adt50;
let _16: i32;
let _17: [i16; 8];
let _18: (usize,);
let _19: isize;
let _20: [usize; 1];
let _21: i128;
let _22: u16;
let _23: u16;
let _24: Adt48;
let _25: char;
let _26: [i8; 1];
let _27: Adt56;
let _28: Adt47;
let _29: usize;
let _30: isize;
let _31: u128;
let _32: *mut *const [u64; 3];
let _33: f32;
let _34: *const (([i8; 1],), *const i8);
let _35: Adt56;
let _36: bool;
let _37: isize;
let _38: ();
let _39: ();
{
_3 = 56137_u16 as u32;
_11 = 4182184085680676276_u64 as i128;
_10 = [164_u8,144_u8];
_5 = 13827835795366968844_u64 as usize;
_3 = _6;
Goto(bb1)
}
bb1 = {
_10 = [202_u8,101_u8];
_12 = (-1737380273_i32) as f64;
_12 = 59_isize as f64;
_5 = _4;
_3 = (-4_i8) as u32;
_2 = !_8;
RET = [10926_i16,27118_i16,(-9863_i16),(-27887_i16),(-7301_i16),(-18118_i16),(-8441_i16)];
Goto(bb2)
}
bb2 = {
_5 = !_4;
_7 = !_5;
Goto(bb3)
}
bb3 = {
RET = [9661_i16,(-10240_i16),24407_i16,9016_i16,(-24700_i16),24348_i16,32641_i16];
RET = [(-559_i16),(-26175_i16),(-1756_i16),31277_i16,(-12051_i16),(-14416_i16),(-27444_i16)];
_5 = _7 - _7;
_11 = _9;
_14.0 = [7_i8];
_4 = !_7;
_14.0 = [57_i8];
RET = [2209_i16,(-30404_i16),31344_i16,(-14406_i16),(-30633_i16),20203_i16,24108_i16];
RET = [(-24202_i16),(-18876_i16),(-16869_i16),(-20478_i16),8068_i16,18630_i16,(-12340_i16)];
Goto(bb4)
}
bb4 = {
_5 = !_7;
_8 = _2 * _9;
_5 = _4;
_9 = (-889287054_i32) as i128;
Goto(bb5)
}
bb5 = {
RET = [(-21001_i16),15178_i16,(-15607_i16),14184_i16,12790_i16,(-13549_i16),8122_i16];
_5 = true as usize;
_5 = _4;
_13 = !63236_u16;
_8 = -_2;
_16 = (-2009676839_i32);
_18.0 = !_4;
_3 = !_6;
_6 = _1 + _3;
_4 = _18.0;
_9 = _2;
RET = [(-29847_i16),12641_i16,(-13207_i16),17016_i16,19060_i16,(-22491_i16),(-23667_i16)];
_2 = !_9;
_18 = (_7,);
Goto(bb6)
}
bb6 = {
_9 = -_8;
_7 = _18.0 ^ _4;
_21 = _11 << _5;
_20 = [_18.0];
_10 = [249_u8,91_u8];
_17 = [21645_i16,13883_i16,(-8307_i16),26129_i16,24992_i16,(-31857_i16),7508_i16,18245_i16];
_19 = (-9223372036854775808_isize);
_7 = !_5;
_8 = _13 as i128;
_20 = [_18.0];
_18.0 = _7 ^ _7;
_14.0 = [(-75_i8)];
_13 = _11 as u16;
_9 = _1 as i128;
RET = [(-8287_i16),11034_i16,(-12345_i16),(-31449_i16),(-17394_i16),7781_i16,7078_i16];
_2 = _21 + _21;
_4 = !_7;
_4 = _7 - _18.0;
Call(_16 = core::intrinsics::transmute(_1), bb7, UnwindUnreachable())
}
bb7 = {
_16 = !1990113562_i32;
_18.0 = 261370372420640702199527997697811922015_u128 as usize;
_11 = _21 * _21;
_19 = 12652842963469439772_u64 as isize;
_21 = -_2;
_12 = 300528665037608615335855793970664234866_u128 as f64;
_3 = 9_u8 as u32;
_5 = 10644281791157993407_u64 as usize;
_25 = '\u{40595}';
_4 = _7 & _7;
_21 = _11 << _6;
_5 = (-98_i8) as usize;
_25 = '\u{b9094}';
_9 = _11 | _2;
_22 = _12 as u16;
RET = [17896_i16,5706_i16,(-20987_i16),1327_i16,(-15088_i16),(-8122_i16),6437_i16];
_19 = 105_isize * 9223372036854775807_isize;
_29 = (-2096965390810131124_i64) as usize;
_1 = false as u32;
_26 = [86_i8];
_7 = _4 & _4;
_1 = _6 * _6;
Goto(bb8)
}
bb8 = {
_27.fld1 = _25;
_30 = 2845_i16 as isize;
_8 = _21;
_28 = Adt47::Variant0 { fld0: 16765_i16,fld1: 15261321707612321997_u64 };
_3 = !_1;
_26 = [123_i8];
_22 = 291606241816121805919538959709069212418_u128 as u16;
_4 = !_7;
_13 = !_22;
_25 = _27.fld1;
_14 = (_26,);
_23 = _22;
_21 = _11 & _11;
_35.fld1 = _25;
_2 = _8 & _9;
_1 = _6;
_33 = 110_u8 as f32;
_12 = 89_u8 as f64;
_19 = _30;
RET = [Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0)];
_35.fld0.0 = 208_u8 | 158_u8;
_31 = 76473609454645786166938999466702477315_u128 >> _13;
_23 = !_13;
_35.fld0.0 = 150_u8;
_17 = [Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0)];
RET = [Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0)];
Goto(bb9)
}
bb9 = {
_33 = _19 as f32;
_36 = true;
_35.fld0.1 = core::ptr::addr_of!(_16);
place!(Field::<i16>(Variant(_28, 0), 0)) = 1332_i16 << _1;
_25 = _27.fld1;
_19 = -_30;
RET = [Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0),Field::<i16>(Variant(_28, 0), 0)];
_36 = _6 != _6;
_6 = !_1;
_26 = [(-128_i8)];
_27.fld0.1 = core::ptr::addr_of!(_16);
_1 = _6;
_18.0 = !_7;
_27.fld0 = (_35.fld0.0, _35.fld0.1);
place!(Field::<i16>(Variant(_28, 0), 0)) = (-21478_i16) ^ 31020_i16;
_18 = (_7,);
_4 = _18.0 | _18.0;
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(14_usize, 5_usize, Move(_5), 13_usize, Move(_13), 25_usize, Move(_25), 18_usize, Move(_18)), bb11, UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(14_usize, 11_usize, Move(_11), 6_usize, Move(_6), 36_usize, Move(_36), 4_usize, Move(_4)), bb12, UnwindUnreachable())
}
bb12 = {
Call(_38 = dump_var(14_usize, 7_usize, Move(_7), 14_usize, Move(_14), 21_usize, Move(_21), 9_usize, Move(_9)), bb13, UnwindUnreachable())
}
bb13 = {
Call(_38 = dump_var(14_usize, 22_usize, Move(_22), 39_usize, _39, 39_usize, _39, 39_usize, _39), bb14, UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [u64; 3],mut _2: [u16; 8],mut _3: [u16; 8],mut _4: isize,mut _5: [u16; 8],mut _6: [u64; 3],mut _7: isize,mut _8: i8,mut _9: [u16; 8],mut _10: [u16; 8],mut _11: i8,mut _12: i16,mut _13: [u16; 8],mut _14: i16,mut _15: isize) -> i8 {
mir! {
type RET = i8;
let _16: u32;
let _17: [u8; 2];
let _18: (usize,);
let _19: u128;
let _20: [u64; 3];
let _21: bool;
let _22: usize;
let _23: *mut char;
let _24: *const (([i8; 1],), *const i8);
let _25: isize;
let _26: *mut i16;
let _27: i128;
let _28: (u8, ([i8; 1],), ([i8; 1],));
let _29: u64;
let _30: *const (([i8; 1],), *const i8);
let _31: f64;
let _32: isize;
let _33: [i128; 5];
let _34: isize;
let _35: isize;
let _36: *mut i16;
let _37: ([i8; 1],);
let _38: ();
let _39: ();
{
_7 = !_15;
_6 = _1;
RET = _11;
_4 = _7 & _15;
_15 = _12 as isize;
Goto(bb1)
}
bb1 = {
_12 = _14;
_4 = _7;
_13 = [46268_u16,47768_u16,64580_u16,25993_u16,30217_u16,36277_u16,50127_u16,6655_u16];
_17 = [193_u8,39_u8];
_18.0 = 1311291304_i32 as usize;
_13 = [63725_u16,11062_u16,13647_u16,50167_u16,41365_u16,57699_u16,36198_u16,56874_u16];
_12 = 130_u8 as i16;
_16 = 1772388953_u32 - 3246572263_u32;
_4 = _18.0 as isize;
_14 = _12;
_5 = [20763_u16,59040_u16,40844_u16,45453_u16,16305_u16,60507_u16,38222_u16,41080_u16];
RET = _18.0 as i8;
_11 = _8 << _7;
RET = !_11;
_5 = [24562_u16,61072_u16,10534_u16,65337_u16,18141_u16,6607_u16,56001_u16,24618_u16];
_8 = _11;
_7 = '\u{c2d47}' as isize;
_19 = _11 as u128;
_5 = [4587_u16,60310_u16,41666_u16,32479_u16,27390_u16,15100_u16,14920_u16,22929_u16];
_14 = 89823341872514759639252321327517505615_i128 as i16;
_13 = [11198_u16,20640_u16,23865_u16,40627_u16,29539_u16,41465_u16,22483_u16,42390_u16];
_2 = [60674_u16,42584_u16,37830_u16,56626_u16,35727_u16,40715_u16,14726_u16,46366_u16];
RET = _8 ^ _8;
Goto(bb2)
}
bb2 = {
_5 = [42694_u16,1709_u16,52520_u16,33149_u16,61587_u16,35050_u16,61060_u16,17950_u16];
_10 = [47867_u16,59947_u16,60470_u16,30916_u16,25344_u16,29854_u16,48653_u16,31697_u16];
_12 = _14 + _14;
_2 = [64746_u16,20743_u16,29887_u16,54067_u16,1156_u16,2800_u16,7339_u16,31831_u16];
Goto(bb3)
}
bb3 = {
_8 = (-3050440276576677045_i64) as i8;
_2 = [18490_u16,16283_u16,19014_u16,3411_u16,20617_u16,63604_u16,48407_u16,37556_u16];
_15 = !_7;
_21 = true;
_12 = _14 - _14;
RET = '\u{ac413}' as i8;
_22 = (-161303483235480708229114099126210742860_i128) as usize;
RET = 4938036735970667170_i64 as i8;
_10 = [52549_u16,13412_u16,46120_u16,19245_u16,34531_u16,31563_u16,2749_u16,50625_u16];
_10 = [8269_u16,50276_u16,9098_u16,22096_u16,55505_u16,49083_u16,930_u16,40510_u16];
_11 = _8;
_7 = _15 + _4;
_18 = (_22,);
_18.0 = !_22;
RET = !_8;
_14 = _22 as i16;
_13 = [51999_u16,28000_u16,49284_u16,32920_u16,41287_u16,31850_u16,64336_u16,25293_u16];
_2 = _13;
_15 = -_4;
_15 = 16743861766549649374_u64 as isize;
_10 = [16609_u16,26004_u16,49015_u16,36446_u16,5675_u16,44227_u16,39372_u16,38885_u16];
_20 = _6;
_10 = [45911_u16,27253_u16,34761_u16,50047_u16,2559_u16,39155_u16,15927_u16,55786_u16];
_5 = [9432_u16,42730_u16,58151_u16,46939_u16,55050_u16,5754_u16,46563_u16,12561_u16];
_20 = _1;
Goto(bb4)
}
bb4 = {
_18 = (_22,);
RET = _7 as i8;
RET = _8;
_1 = [12558980840773969913_u64,5891249514474896017_u64,8030831786854251797_u64];
_6 = [9109558114307108926_u64,8288557154173139991_u64,5053281895621953230_u64];
_15 = _4 | _7;
_1 = [17528520047449061352_u64,3491123994747363682_u64,14914258485765538621_u64];
_2 = _9;
_13 = [51231_u16,62491_u16,27795_u16,63465_u16,17396_u16,38859_u16,12692_u16,38800_u16];
_21 = false;
_22 = _18.0 + _18.0;
_22 = '\u{a8cad}' as usize;
_19 = 198246123341545257344142001066397413014_u128 & 183384290847795207962922471464161210039_u128;
_15 = _7;
RET = _14 as i8;
_21 = _12 < _12;
_20 = _1;
_17 = [250_u8,13_u8];
Goto(bb5)
}
bb5 = {
_13 = [16258_u16,46182_u16,23215_u16,51541_u16,49615_u16,10455_u16,14885_u16,55863_u16];
_27 = _14 as i128;
_21 = false;
_25 = _4;
_13 = _5;
_5 = [40014_u16,35930_u16,56889_u16,55599_u16,26244_u16,39846_u16,5211_u16,24501_u16];
_28.2.0 = [_8];
Goto(bb6)
}
bb6 = {
_28.1.0 = [_8];
_8 = RET | RET;
_16 = 2594165568_u32;
match _16 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb7,
4 => bb8,
5 => bb9,
2594165568 => bb11,
_ => bb10
}
}
bb7 = {
_13 = [16258_u16,46182_u16,23215_u16,51541_u16,49615_u16,10455_u16,14885_u16,55863_u16];
_27 = _14 as i128;
_21 = false;
_25 = _4;
_13 = _5;
_5 = [40014_u16,35930_u16,56889_u16,55599_u16,26244_u16,39846_u16,5211_u16,24501_u16];
_28.2.0 = [_8];
Goto(bb6)
}
bb8 = {
_18 = (_22,);
RET = _7 as i8;
RET = _8;
_1 = [12558980840773969913_u64,5891249514474896017_u64,8030831786854251797_u64];
_6 = [9109558114307108926_u64,8288557154173139991_u64,5053281895621953230_u64];
_15 = _4 | _7;
_1 = [17528520047449061352_u64,3491123994747363682_u64,14914258485765538621_u64];
_2 = _9;
_13 = [51231_u16,62491_u16,27795_u16,63465_u16,17396_u16,38859_u16,12692_u16,38800_u16];
_21 = false;
_22 = _18.0 + _18.0;
_22 = '\u{a8cad}' as usize;
_19 = 198246123341545257344142001066397413014_u128 & 183384290847795207962922471464161210039_u128;
_15 = _7;
RET = _14 as i8;
_21 = _12 < _12;
_20 = _1;
_17 = [250_u8,13_u8];
Goto(bb5)
}
bb9 = {
_8 = (-3050440276576677045_i64) as i8;
_2 = [18490_u16,16283_u16,19014_u16,3411_u16,20617_u16,63604_u16,48407_u16,37556_u16];
_15 = !_7;
_21 = true;
_12 = _14 - _14;
RET = '\u{ac413}' as i8;
_22 = (-161303483235480708229114099126210742860_i128) as usize;
RET = 4938036735970667170_i64 as i8;
_10 = [52549_u16,13412_u16,46120_u16,19245_u16,34531_u16,31563_u16,2749_u16,50625_u16];
_10 = [8269_u16,50276_u16,9098_u16,22096_u16,55505_u16,49083_u16,930_u16,40510_u16];
_11 = _8;
_7 = _15 + _4;
_18 = (_22,);
_18.0 = !_22;
RET = !_8;
_14 = _22 as i16;
_13 = [51999_u16,28000_u16,49284_u16,32920_u16,41287_u16,31850_u16,64336_u16,25293_u16];
_2 = _13;
_15 = -_4;
_15 = 16743861766549649374_u64 as isize;
_10 = [16609_u16,26004_u16,49015_u16,36446_u16,5675_u16,44227_u16,39372_u16,38885_u16];
_20 = _6;
_10 = [45911_u16,27253_u16,34761_u16,50047_u16,2559_u16,39155_u16,15927_u16,55786_u16];
_5 = [9432_u16,42730_u16,58151_u16,46939_u16,55050_u16,5754_u16,46563_u16,12561_u16];
_20 = _1;
Goto(bb4)
}
bb10 = {
_12 = _14;
_4 = _7;
_13 = [46268_u16,47768_u16,64580_u16,25993_u16,30217_u16,36277_u16,50127_u16,6655_u16];
_17 = [193_u8,39_u8];
_18.0 = 1311291304_i32 as usize;
_13 = [63725_u16,11062_u16,13647_u16,50167_u16,41365_u16,57699_u16,36198_u16,56874_u16];
_12 = 130_u8 as i16;
_16 = 1772388953_u32 - 3246572263_u32;
_4 = _18.0 as isize;
_14 = _12;
_5 = [20763_u16,59040_u16,40844_u16,45453_u16,16305_u16,60507_u16,38222_u16,41080_u16];
RET = _18.0 as i8;
_11 = _8 << _7;
RET = !_11;
_5 = [24562_u16,61072_u16,10534_u16,65337_u16,18141_u16,6607_u16,56001_u16,24618_u16];
_8 = _11;
_7 = '\u{c2d47}' as isize;
_19 = _11 as u128;
_5 = [4587_u16,60310_u16,41666_u16,32479_u16,27390_u16,15100_u16,14920_u16,22929_u16];
_14 = 89823341872514759639252321327517505615_i128 as i16;
_13 = [11198_u16,20640_u16,23865_u16,40627_u16,29539_u16,41465_u16,22483_u16,42390_u16];
_2 = [60674_u16,42584_u16,37830_u16,56626_u16,35727_u16,40715_u16,14726_u16,46366_u16];
RET = _8 ^ _8;
Goto(bb2)
}
bb11 = {
_28.0 = (-1305655170_i32) as u8;
_3 = [61920_u16,54777_u16,9688_u16,5437_u16,50848_u16,37154_u16,48586_u16,14490_u16];
_18 = (_22,);
_8 = _11;
RET = -_8;
_20 = _1;
_28.0 = 5_u8;
_11 = _16 as i8;
_22 = !_18.0;
_29 = _28.0 as u64;
match _28.0 {
5 => bb12,
_ => bb1
}
}
bb12 = {
_2 = [21981_u16,25736_u16,4296_u16,39971_u16,16137_u16,59660_u16,12968_u16,11970_u16];
_16 = !3668984889_u32;
_26 = core::ptr::addr_of_mut!(_14);
_4 = _15;
match _28.0 {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb11,
4 => bb5,
6 => bb10,
5 => bb14,
_ => bb13
}
}
bb13 = {
_5 = [42694_u16,1709_u16,52520_u16,33149_u16,61587_u16,35050_u16,61060_u16,17950_u16];
_10 = [47867_u16,59947_u16,60470_u16,30916_u16,25344_u16,29854_u16,48653_u16,31697_u16];
_12 = _14 + _14;
_2 = [64746_u16,20743_u16,29887_u16,54067_u16,1156_u16,2800_u16,7339_u16,31831_u16];
Goto(bb3)
}
bb14 = {
_21 = (*_26) != _12;
_22 = _18.0 ^ _18.0;
_31 = (-1733121155_i32) as f64;
_4 = _15;
_17 = [_28.0,_28.0];
_33 = [_27,_27,_27,_27,_27];
_28.1.0 = [_11];
_32 = _15 >> RET;
_14 = !_12;
_20 = _1;
RET = _8 & _11;
_18.0 = _19 as usize;
_5 = [54563_u16,24028_u16,29029_u16,7724_u16,7493_u16,41260_u16,29420_u16,45627_u16];
RET = _11;
_20 = _6;
_8 = RET;
_8 = _21 as i8;
_9 = _3;
_35 = -_4;
_26 = core::ptr::addr_of_mut!(_12);
_14 = _12;
_28.0 = 143_u8 | 64_u8;
(*_26) = _19 as i16;
_33 = [_27,_27,_27,_27,_27];
(*_26) = _14;
_25 = -_4;
_26 = core::ptr::addr_of_mut!(_12);
Goto(bb15)
}
bb15 = {
Call(_38 = dump_var(15_usize, 7_usize, Move(_7), 16_usize, Move(_16), 10_usize, Move(_10), 13_usize, Move(_13)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_38 = dump_var(15_usize, 11_usize, Move(_11), 25_usize, Move(_25), 12_usize, Move(_12), 4_usize, Move(_4)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_38 = dump_var(15_usize, 28_usize, Move(_28), 20_usize, Move(_20), 8_usize, Move(_8), 35_usize, Move(_35)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_38 = dump_var(15_usize, 33_usize, Move(_33), 22_usize, Move(_22), 39_usize, _39, 39_usize, _39), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: *const i8,mut _2: [u64; 3],mut _3: isize,mut _4: [u16; 8],mut _5: [u16; 8],mut _6: [u16; 8],mut _7: isize) -> u32 {
mir! {
type RET = u32;
let _8: char;
let _9: Adt56;
let _10: isize;
let _11: f32;
let _12: u64;
let _13: bool;
let _14: bool;
let _15: [u8; 2];
let _16: [i16; 8];
let _17: [i128; 5];
let _18: f32;
let _19: f32;
let _20: isize;
let _21: i16;
let _22: *mut u128;
let _23: i128;
let _24: *const i8;
let _25: isize;
let _26: Adt54;
let _27: ();
let _28: ();
{
_5 = _6;
_8 = '\u{30c4d}';
_3 = _7;
_7 = _3 << _3;
_7 = _3;
_8 = '\u{efc70}';
RET = 1159274598_u32 + 1249994699_u32;
Goto(bb1)
}
bb1 = {
_2 = [11062904622637523027_u64,15643002526098458165_u64,15802795664023841373_u64];
_4 = _6;
_8 = '\u{6566}';
_7 = _3;
RET = !3795005265_u32;
_5 = [6136_u16,61735_u16,3720_u16,14931_u16,6465_u16,50254_u16,33434_u16,6513_u16];
_8 = '\u{381a8}';
_9.fld0.0 = RET as u8;
RET = !1015727958_u32;
_4 = _5;
_4 = [7792_u16,17327_u16,41599_u16,25077_u16,61889_u16,22157_u16,45898_u16,6888_u16];
_9.fld1 = _8;
_10 = -_7;
_6 = [37865_u16,56751_u16,603_u16,38983_u16,7220_u16,41794_u16,17429_u16,50350_u16];
_7 = _3;
_9.fld1 = _8;
_11 = 12898400340790347812_u64 as f32;
Goto(bb2)
}
bb2 = {
_5 = [13354_u16,13977_u16,49598_u16,1105_u16,30640_u16,14252_u16,53950_u16,16369_u16];
_8 = _9.fld1;
_12 = 17897430367621226565_u64 + 15281633036189678835_u64;
_8 = _9.fld1;
_3 = 31785298871820337277956139815766206267_u128 as isize;
_6 = [7517_u16,47855_u16,33620_u16,20105_u16,47097_u16,23123_u16,1647_u16,63073_u16];
_3 = 5_usize as isize;
_10 = _3;
_10 = 1544592234_i32 as isize;
_11 = 4_usize as f32;
_4 = [1279_u16,8133_u16,55191_u16,48215_u16,48885_u16,11953_u16,15017_u16,51541_u16];
_14 = true | false;
_12 = _14 as u64;
_14 = !true;
_13 = _9.fld1 <= _9.fld1;
_8 = _9.fld1;
_9.fld0.0 = 224_u8 * 127_u8;
_4 = _6;
_12 = 2053100712987201761_u64 ^ 16176140003959520232_u64;
_5 = [3379_u16,17679_u16,32939_u16,13538_u16,44628_u16,24895_u16,12099_u16,34282_u16];
_13 = _14;
Goto(bb3)
}
bb3 = {
_3 = -_10;
RET = !3903236821_u32;
_13 = !_14;
RET = 123230603_u32;
_13 = _14;
_4 = [35526_u16,31014_u16,35730_u16,4249_u16,40761_u16,31863_u16,3504_u16,13364_u16];
_15 = [_9.fld0.0,_9.fld0.0];
_4 = [40864_u16,56101_u16,35051_u16,39119_u16,6390_u16,56900_u16,17863_u16,7103_u16];
_7 = _10;
Goto(bb4)
}
bb4 = {
_11 = 40600_u16 as f32;
_9.fld0.0 = !55_u8;
_12 = 1769128487370204878_u64 >> _9.fld0.0;
_15 = [_9.fld0.0,_9.fld0.0];
RET = 2561439636_u32;
RET = 2659031259_u32 << _9.fld0.0;
_9.fld0.0 = 8_u8 & 115_u8;
_11 = RET as f32;
_9.fld1 = _8;
_9.fld0.0 = 151_u8 ^ 104_u8;
_2 = [_12,_12,_12];
Goto(bb5)
}
bb5 = {
_16 = [13697_i16,(-16532_i16),5780_i16,18310_i16,(-4558_i16),(-28271_i16),32451_i16,(-12615_i16)];
_3 = 3_usize as isize;
_9.fld1 = _8;
_15 = [_9.fld0.0,_9.fld0.0];
_9.fld0.0 = !193_u8;
_9.fld0.0 = !81_u8;
_14 = _13;
_18 = _11 + _11;
_9.fld1 = _8;
_2 = [_12,_12,_12];
_4 = _5;
_15 = [_9.fld0.0,_9.fld0.0];
_6 = [56911_u16,52176_u16,64504_u16,40520_u16,5373_u16,45639_u16,41008_u16,30392_u16];
_17 = [110403320769786141739312104703645344237_i128,68221966132734069484730725767879233238_i128,74871489343765546967976313142409725908_i128,54222533925467918053749976868201443467_i128,44740916928133052452882365406710942471_i128];
_15 = [_9.fld0.0,_9.fld0.0];
_16 = [(-31031_i16),24189_i16,22856_i16,995_i16,(-3519_i16),7704_i16,(-17181_i16),(-21508_i16)];
_9.fld1 = _8;
_13 = !_14;
_9.fld0.0 = 242_u8;
RET = 952323929_u32 * 4167657558_u32;
_20 = -_10;
_4 = _6;
Goto(bb6)
}
bb6 = {
_19 = _18 + _18;
RET = 3647289250_u32 << _12;
_2 = [_12,_12,_12];
_5 = [55694_u16,3707_u16,57525_u16,63733_u16,49253_u16,41309_u16,49952_u16,58806_u16];
RET = !504759197_u32;
_14 = !_13;
_6 = [17976_u16,60125_u16,52850_u16,30196_u16,20113_u16,21490_u16,50730_u16,9400_u16];
_16 = [7838_i16,(-31104_i16),9175_i16,(-2288_i16),17435_i16,24163_i16,(-10207_i16),(-7556_i16)];
_17 = [126532063070386316176295033813453562768_i128,99952285319832440230477558857089540641_i128,90752712603320358568756426350271878448_i128,4933331097341214947676517780292497988_i128,(-24425547406064617409569505009033849729_i128)];
match _9.fld0.0 {
0 => bb5,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
242 => bb12,
_ => bb11
}
}
bb7 = {
_16 = [13697_i16,(-16532_i16),5780_i16,18310_i16,(-4558_i16),(-28271_i16),32451_i16,(-12615_i16)];
_3 = 3_usize as isize;
_9.fld1 = _8;
_15 = [_9.fld0.0,_9.fld0.0];
_9.fld0.0 = !193_u8;
_9.fld0.0 = !81_u8;
_14 = _13;
_18 = _11 + _11;
_9.fld1 = _8;
_2 = [_12,_12,_12];
_4 = _5;
_15 = [_9.fld0.0,_9.fld0.0];
_6 = [56911_u16,52176_u16,64504_u16,40520_u16,5373_u16,45639_u16,41008_u16,30392_u16];
_17 = [110403320769786141739312104703645344237_i128,68221966132734069484730725767879233238_i128,74871489343765546967976313142409725908_i128,54222533925467918053749976868201443467_i128,44740916928133052452882365406710942471_i128];
_15 = [_9.fld0.0,_9.fld0.0];
_16 = [(-31031_i16),24189_i16,22856_i16,995_i16,(-3519_i16),7704_i16,(-17181_i16),(-21508_i16)];
_9.fld1 = _8;
_13 = !_14;
_9.fld0.0 = 242_u8;
RET = 952323929_u32 * 4167657558_u32;
_20 = -_10;
_4 = _6;
Goto(bb6)
}
bb8 = {
_11 = 40600_u16 as f32;
_9.fld0.0 = !55_u8;
_12 = 1769128487370204878_u64 >> _9.fld0.0;
_15 = [_9.fld0.0,_9.fld0.0];
RET = 2561439636_u32;
RET = 2659031259_u32 << _9.fld0.0;
_9.fld0.0 = 8_u8 & 115_u8;
_11 = RET as f32;
_9.fld1 = _8;
_9.fld0.0 = 151_u8 ^ 104_u8;
_2 = [_12,_12,_12];
Goto(bb5)
}
bb9 = {
_3 = -_10;
RET = !3903236821_u32;
_13 = !_14;
RET = 123230603_u32;
_13 = _14;
_4 = [35526_u16,31014_u16,35730_u16,4249_u16,40761_u16,31863_u16,3504_u16,13364_u16];
_15 = [_9.fld0.0,_9.fld0.0];
_4 = [40864_u16,56101_u16,35051_u16,39119_u16,6390_u16,56900_u16,17863_u16,7103_u16];
_7 = _10;
Goto(bb4)
}
bb10 = {
_5 = [13354_u16,13977_u16,49598_u16,1105_u16,30640_u16,14252_u16,53950_u16,16369_u16];
_8 = _9.fld1;
_12 = 17897430367621226565_u64 + 15281633036189678835_u64;
_8 = _9.fld1;
_3 = 31785298871820337277956139815766206267_u128 as isize;
_6 = [7517_u16,47855_u16,33620_u16,20105_u16,47097_u16,23123_u16,1647_u16,63073_u16];
_3 = 5_usize as isize;
_10 = _3;
_10 = 1544592234_i32 as isize;
_11 = 4_usize as f32;
_4 = [1279_u16,8133_u16,55191_u16,48215_u16,48885_u16,11953_u16,15017_u16,51541_u16];
_14 = true | false;
_12 = _14 as u64;
_14 = !true;
_13 = _9.fld1 <= _9.fld1;
_8 = _9.fld1;
_9.fld0.0 = 224_u8 * 127_u8;
_4 = _6;
_12 = 2053100712987201761_u64 ^ 16176140003959520232_u64;
_5 = [3379_u16,17679_u16,32939_u16,13538_u16,44628_u16,24895_u16,12099_u16,34282_u16];
_13 = _14;
Goto(bb3)
}
bb11 = {
_2 = [11062904622637523027_u64,15643002526098458165_u64,15802795664023841373_u64];
_4 = _6;
_8 = '\u{6566}';
_7 = _3;
RET = !3795005265_u32;
_5 = [6136_u16,61735_u16,3720_u16,14931_u16,6465_u16,50254_u16,33434_u16,6513_u16];
_8 = '\u{381a8}';
_9.fld0.0 = RET as u8;
RET = !1015727958_u32;
_4 = _5;
_4 = [7792_u16,17327_u16,41599_u16,25077_u16,61889_u16,22157_u16,45898_u16,6888_u16];
_9.fld1 = _8;
_10 = -_7;
_6 = [37865_u16,56751_u16,603_u16,38983_u16,7220_u16,41794_u16,17429_u16,50350_u16];
_7 = _3;
_9.fld1 = _8;
_11 = 12898400340790347812_u64 as f32;
Goto(bb2)
}
bb12 = {
_13 = !_14;
_11 = -_19;
_10 = _20 * _20;
match _9.fld0.0 {
0 => bb5,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
242 => bb18,
_ => bb17
}
}
bb13 = {
_19 = _18 + _18;
RET = 3647289250_u32 << _12;
_2 = [_12,_12,_12];
_5 = [55694_u16,3707_u16,57525_u16,63733_u16,49253_u16,41309_u16,49952_u16,58806_u16];
RET = !504759197_u32;
_14 = !_13;
_6 = [17976_u16,60125_u16,52850_u16,30196_u16,20113_u16,21490_u16,50730_u16,9400_u16];
_16 = [7838_i16,(-31104_i16),9175_i16,(-2288_i16),17435_i16,24163_i16,(-10207_i16),(-7556_i16)];
_17 = [126532063070386316176295033813453562768_i128,99952285319832440230477558857089540641_i128,90752712603320358568756426350271878448_i128,4933331097341214947676517780292497988_i128,(-24425547406064617409569505009033849729_i128)];
match _9.fld0.0 {
0 => bb5,
1 => bb7,
2 => bb8,
3 => bb9,
4 => bb10,
242 => bb12,
_ => bb11
}
}
bb14 = {
_3 = -_10;
RET = !3903236821_u32;
_13 = !_14;
RET = 123230603_u32;
_13 = _14;
_4 = [35526_u16,31014_u16,35730_u16,4249_u16,40761_u16,31863_u16,3504_u16,13364_u16];
_15 = [_9.fld0.0,_9.fld0.0];
_4 = [40864_u16,56101_u16,35051_u16,39119_u16,6390_u16,56900_u16,17863_u16,7103_u16];
_7 = _10;
Goto(bb4)
}
bb15 = {
_11 = 40600_u16 as f32;
_9.fld0.0 = !55_u8;
_12 = 1769128487370204878_u64 >> _9.fld0.0;
_15 = [_9.fld0.0,_9.fld0.0];
RET = 2561439636_u32;
RET = 2659031259_u32 << _9.fld0.0;
_9.fld0.0 = 8_u8 & 115_u8;
_11 = RET as f32;
_9.fld1 = _8;
_9.fld0.0 = 151_u8 ^ 104_u8;
_2 = [_12,_12,_12];
Goto(bb5)
}
bb16 = {
_2 = [11062904622637523027_u64,15643002526098458165_u64,15802795664023841373_u64];
_4 = _6;
_8 = '\u{6566}';
_7 = _3;
RET = !3795005265_u32;
_5 = [6136_u16,61735_u16,3720_u16,14931_u16,6465_u16,50254_u16,33434_u16,6513_u16];
_8 = '\u{381a8}';
_9.fld0.0 = RET as u8;
RET = !1015727958_u32;
_4 = _5;
_4 = [7792_u16,17327_u16,41599_u16,25077_u16,61889_u16,22157_u16,45898_u16,6888_u16];
_9.fld1 = _8;
_10 = -_7;
_6 = [37865_u16,56751_u16,603_u16,38983_u16,7220_u16,41794_u16,17429_u16,50350_u16];
_7 = _3;
_9.fld1 = _8;
_11 = 12898400340790347812_u64 as f32;
Goto(bb2)
}
bb17 = {
_16 = [13697_i16,(-16532_i16),5780_i16,18310_i16,(-4558_i16),(-28271_i16),32451_i16,(-12615_i16)];
_3 = 3_usize as isize;
_9.fld1 = _8;
_15 = [_9.fld0.0,_9.fld0.0];
_9.fld0.0 = !193_u8;
_9.fld0.0 = !81_u8;
_14 = _13;
_18 = _11 + _11;
_9.fld1 = _8;
_2 = [_12,_12,_12];
_4 = _5;
_15 = [_9.fld0.0,_9.fld0.0];
_6 = [56911_u16,52176_u16,64504_u16,40520_u16,5373_u16,45639_u16,41008_u16,30392_u16];
_17 = [110403320769786141739312104703645344237_i128,68221966132734069484730725767879233238_i128,74871489343765546967976313142409725908_i128,54222533925467918053749976868201443467_i128,44740916928133052452882365406710942471_i128];
_15 = [_9.fld0.0,_9.fld0.0];
_16 = [(-31031_i16),24189_i16,22856_i16,995_i16,(-3519_i16),7704_i16,(-17181_i16),(-21508_i16)];
_9.fld1 = _8;
_13 = !_14;
_9.fld0.0 = 242_u8;
RET = 952323929_u32 * 4167657558_u32;
_20 = -_10;
_4 = _6;
Goto(bb6)
}
bb18 = {
_18 = (-62993804261579275355596101414121482336_i128) as f32;
_11 = _19 * _19;
RET = 2727368949_u32;
_19 = -_11;
_9.fld0.0 = 61_u8;
_3 = _20 >> _10;
_8 = _9.fld1;
_5 = [52_u16,45254_u16,44686_u16,22186_u16,10182_u16,24359_u16,19497_u16,15624_u16];
_3 = _10 ^ _7;
_12 = RET as u64;
_8 = _9.fld1;
_9.fld1 = _8;
_21 = (-31167_i16);
_5 = [18038_u16,11828_u16,40134_u16,26666_u16,4873_u16,31110_u16,14901_u16,13054_u16];
_10 = _3;
Goto(bb19)
}
bb19 = {
Call(_27 = dump_var(16_usize, 2_usize, Move(_2), 14_usize, Move(_14), 20_usize, Move(_20), 16_usize, Move(_16)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_27 = dump_var(16_usize, 21_usize, Move(_21), 8_usize, Move(_8), 4_usize, Move(_4), 3_usize, Move(_3)), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [u16; 8],mut _2: u128,mut _3: [u16; 8],mut _4: [u16; 8],mut _5: f64,mut _6: bool,mut _7: [u16; 8],mut _8: f32,mut _9: [u16; 8],mut _10: [u16; 8],mut _11: [u16; 8],mut _12: [u16; 8],mut _13: [i16; 8],mut _14: [u16; 8],mut _15: [u16; 8]) -> i128 {
mir! {
type RET = i128;
let _16: i16;
let _17: f64;
let _18: f32;
let _19: Adt63;
let _20: u128;
let _21: (usize,);
let _22: [i16; 5];
let _23: [i16; 4];
let _24: [i16; 4];
let _25: u16;
let _26: bool;
let _27: isize;
let _28: isize;
let _29: f64;
let _30: Adt55;
let _31: *mut *const [u64; 3];
let _32: char;
let _33: Adt54;
let _34: u16;
let _35: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]);
let _36: i8;
let _37: (usize,);
let _38: *mut u32;
let _39: Adt55;
let _40: ([i16; 8], *mut isize);
let _41: [i16; 4];
let _42: i32;
let _43: i8;
let _44: u16;
let _45: ();
let _46: ();
{
_1 = [16360_u16,52771_u16,65275_u16,33649_u16,45951_u16,39233_u16,5069_u16,16663_u16];
_4 = [14369_u16,7968_u16,13919_u16,21097_u16,7906_u16,24988_u16,39625_u16,42041_u16];
_12 = _7;
_7 = [21028_u16,35239_u16,2445_u16,5743_u16,23962_u16,40812_u16,48795_u16,7962_u16];
_1 = [11806_u16,10400_u16,33726_u16,22809_u16,10402_u16,26367_u16,43366_u16,35116_u16];
_2 = 292384100267790472536768243292410675072_u128;
_6 = !true;
_9 = _12;
_14 = [33471_u16,17477_u16,1976_u16,39188_u16,57849_u16,19993_u16,25665_u16,33826_u16];
_8 = 4255824653_u32 as f32;
_11 = _15;
_7 = [42804_u16,45277_u16,65269_u16,22916_u16,46178_u16,49414_u16,35661_u16,14060_u16];
_15 = [30566_u16,17082_u16,17757_u16,54902_u16,50422_u16,43799_u16,1906_u16,43002_u16];
_15 = _3;
RET = (-68450080601230877481803463176028245365_i128) * 145172010799426088732719391913211996230_i128;
_1 = _9;
_9 = _10;
_2 = 56090_u16 as u128;
_12 = [33997_u16,33706_u16,18825_u16,25359_u16,2098_u16,51059_u16,58743_u16,48698_u16];
_6 = !false;
_13 = [(-29550_i16),(-4216_i16),(-26981_i16),20271_i16,15422_i16,(-138_i16),12756_i16,(-28059_i16)];
_9 = _15;
Call(_16 = fn18(_3, _10, _1), bb1, UnwindUnreachable())
}
bb1 = {
_11 = [61174_u16,48720_u16,26192_u16,33697_u16,45907_u16,48672_u16,62777_u16,57599_u16];
_4 = [56257_u16,48869_u16,34124_u16,49556_u16,30456_u16,22223_u16,46915_u16,17164_u16];
RET = !55760335477006290487493848729457508438_i128;
_6 = _8 > _8;
_7 = [14403_u16,11892_u16,38525_u16,21669_u16,31133_u16,19646_u16,21366_u16,45992_u16];
_8 = 146625275_u32 as f32;
_15 = [25467_u16,57776_u16,34411_u16,14209_u16,33745_u16,51167_u16,64638_u16,40063_u16];
RET = (-810639980_i32) as i128;
_11 = [8842_u16,35078_u16,22352_u16,15463_u16,55825_u16,43032_u16,14877_u16,13035_u16];
_12 = [6426_u16,55127_u16,23817_u16,46393_u16,8873_u16,21587_u16,35030_u16,10151_u16];
_8 = _2 as f32;
_14 = _11;
_18 = -_8;
_4 = [16874_u16,35453_u16,62820_u16,16679_u16,62616_u16,37021_u16,15502_u16,49209_u16];
Goto(bb2)
}
bb2 = {
_9 = [2214_u16,3863_u16,65196_u16,25850_u16,1651_u16,13873_u16,16091_u16,51195_u16];
_17 = _5 + _5;
_5 = _17;
_4 = [13181_u16,27799_u16,58763_u16,25189_u16,52212_u16,24743_u16,54955_u16,6796_u16];
_21.0 = _5 as usize;
_18 = _8;
Call(_2 = core::intrinsics::transmute(_14), bb3, UnwindUnreachable())
}
bb3 = {
_7 = _3;
RET = _5 as i128;
_2 = 116_u8 as u128;
_21.0 = 4168376230903295725_usize >> RET;
_17 = _5 * _5;
_5 = -_17;
_12 = _10;
RET = 153976494705474208461354792460100837393_i128;
Goto(bb4)
}
bb4 = {
_21 = (1_usize,);
_21 = (5_usize,);
_18 = RET as f32;
_8 = _18 + _18;
_22 = [_16,_16,_16,_16,_16];
_5 = _17;
RET = 83475082217378112394804934520362510925_i128;
_11 = _14;
_17 = -_5;
_24 = [_16,_16,_16,_16];
_20 = !_2;
_11 = [34887_u16,32993_u16,14501_u16,39074_u16,52689_u16,18996_u16,20144_u16,44313_u16];
_21 = (5849907520089996267_usize,);
_10 = _1;
_8 = -_18;
_22 = [_16,_16,_16,_16,_16];
_24 = [_16,_16,_16,_16];
_2 = !_20;
_21.0 = 8128650208455482775_usize & 6_usize;
_15 = [3688_u16,7656_u16,60728_u16,61377_u16,32541_u16,988_u16,13311_u16,63400_u16];
_2 = !_20;
_19 = Adt63::Variant1 { fld0: _24 };
_6 = _20 == _20;
_21.0 = !1_usize;
_11 = [32919_u16,59843_u16,21126_u16,54925_u16,3984_u16,49239_u16,41468_u16,59028_u16];
_6 = false;
_5 = -_17;
match RET {
0 => bb1,
1 => bb2,
2 => bb5,
83475082217378112394804934520362510925 => bb7,
_ => bb6
}
}
bb5 = {
_7 = _3;
RET = _5 as i128;
_2 = 116_u8 as u128;
_21.0 = 4168376230903295725_usize >> RET;
_17 = _5 * _5;
_5 = -_17;
_12 = _10;
RET = 153976494705474208461354792460100837393_i128;
Goto(bb4)
}
bb6 = {
_11 = [61174_u16,48720_u16,26192_u16,33697_u16,45907_u16,48672_u16,62777_u16,57599_u16];
_4 = [56257_u16,48869_u16,34124_u16,49556_u16,30456_u16,22223_u16,46915_u16,17164_u16];
RET = !55760335477006290487493848729457508438_i128;
_6 = _8 > _8;
_7 = [14403_u16,11892_u16,38525_u16,21669_u16,31133_u16,19646_u16,21366_u16,45992_u16];
_8 = 146625275_u32 as f32;
_15 = [25467_u16,57776_u16,34411_u16,14209_u16,33745_u16,51167_u16,64638_u16,40063_u16];
RET = (-810639980_i32) as i128;
_11 = [8842_u16,35078_u16,22352_u16,15463_u16,55825_u16,43032_u16,14877_u16,13035_u16];
_12 = [6426_u16,55127_u16,23817_u16,46393_u16,8873_u16,21587_u16,35030_u16,10151_u16];
_8 = _2 as f32;
_14 = _11;
_18 = -_8;
_4 = [16874_u16,35453_u16,62820_u16,16679_u16,62616_u16,37021_u16,15502_u16,49209_u16];
Goto(bb2)
}
bb7 = {
_24 = [_16,_16,_16,_16];
_21 = (7_usize,);
_25 = '\u{5d461}' as u16;
_20 = _2;
RET = _8 as i128;
_16 = (-10454_i16);
_25 = 59559_u16;
_19 = Adt63::Variant1 { fld0: _24 };
_8 = _18 * _18;
_26 = _6 ^ _6;
_27 = _16 as isize;
_10 = _11;
_4 = [_25,_25,_25,_25,_25,_25,_25,_25];
_10 = _3;
_20 = _2;
_29 = -_17;
_8 = _18;
RET = !(-137575506087734024866889667561451862530_i128);
_2 = _20 - _20;
_3 = [_25,_25,_25,_25,_25,_25,_25,_25];
_21 = (10632527526377170757_usize,);
match _25 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
59559 => bb8,
_ => bb6
}
}
bb8 = {
SetDiscriminant(_19, 0);
_28 = _27 ^ _27;
_14 = _9;
_32 = '\u{2c43c}';
_15 = [_25,_25,_25,_25,_25,_25,_25,_25];
RET = _20 as i128;
place!(Field::<i32>(Variant(_19, 0), 5)) = !(-737010797_i32);
_34 = _25;
_11 = [_34,_34,_25,_25,_25,_25,_25,_25];
_5 = _17 - _29;
_19 = Adt63::Variant1 { fld0: _24 };
_14 = [_34,_25,_34,_34,_25,_34,_34,_34];
_29 = _21.0 as f64;
_35.4 = [53_i8];
SetDiscriminant(_19, 0);
place!(Field::<isize>(Variant(_19, 0), 2)) = _28 - _28;
match _34 {
0 => bb9,
1 => bb10,
2 => bb11,
3 => bb12,
59559 => bb14,
_ => bb13
}
}
bb9 = {
_9 = [2214_u16,3863_u16,65196_u16,25850_u16,1651_u16,13873_u16,16091_u16,51195_u16];
_17 = _5 + _5;
_5 = _17;
_4 = [13181_u16,27799_u16,58763_u16,25189_u16,52212_u16,24743_u16,54955_u16,6796_u16];
_21.0 = _5 as usize;
_18 = _8;
Call(_2 = core::intrinsics::transmute(_14), bb3, UnwindUnreachable())
}
bb10 = {
_11 = [61174_u16,48720_u16,26192_u16,33697_u16,45907_u16,48672_u16,62777_u16,57599_u16];
_4 = [56257_u16,48869_u16,34124_u16,49556_u16,30456_u16,22223_u16,46915_u16,17164_u16];
RET = !55760335477006290487493848729457508438_i128;
_6 = _8 > _8;
_7 = [14403_u16,11892_u16,38525_u16,21669_u16,31133_u16,19646_u16,21366_u16,45992_u16];
_8 = 146625275_u32 as f32;
_15 = [25467_u16,57776_u16,34411_u16,14209_u16,33745_u16,51167_u16,64638_u16,40063_u16];
RET = (-810639980_i32) as i128;
_11 = [8842_u16,35078_u16,22352_u16,15463_u16,55825_u16,43032_u16,14877_u16,13035_u16];
_12 = [6426_u16,55127_u16,23817_u16,46393_u16,8873_u16,21587_u16,35030_u16,10151_u16];
_8 = _2 as f32;
_14 = _11;
_18 = -_8;
_4 = [16874_u16,35453_u16,62820_u16,16679_u16,62616_u16,37021_u16,15502_u16,49209_u16];
Goto(bb2)
}
bb11 = {
_7 = _3;
RET = _5 as i128;
_2 = 116_u8 as u128;
_21.0 = 4168376230903295725_usize >> RET;
_17 = _5 * _5;
_5 = -_17;
_12 = _10;
RET = 153976494705474208461354792460100837393_i128;
Goto(bb4)
}
bb12 = {
_21 = (1_usize,);
_21 = (5_usize,);
_18 = RET as f32;
_8 = _18 + _18;
_22 = [_16,_16,_16,_16,_16];
_5 = _17;
RET = 83475082217378112394804934520362510925_i128;
_11 = _14;
_17 = -_5;
_24 = [_16,_16,_16,_16];
_20 = !_2;
_11 = [34887_u16,32993_u16,14501_u16,39074_u16,52689_u16,18996_u16,20144_u16,44313_u16];
_21 = (5849907520089996267_usize,);
_10 = _1;
_8 = -_18;
_22 = [_16,_16,_16,_16,_16];
_24 = [_16,_16,_16,_16];
_2 = !_20;
_21.0 = 8128650208455482775_usize & 6_usize;
_15 = [3688_u16,7656_u16,60728_u16,61377_u16,32541_u16,988_u16,13311_u16,63400_u16];
_2 = !_20;
_19 = Adt63::Variant1 { fld0: _24 };
_6 = _20 == _20;
_21.0 = !1_usize;
_11 = [32919_u16,59843_u16,21126_u16,54925_u16,3984_u16,49239_u16,41468_u16,59028_u16];
_6 = false;
_5 = -_17;
match RET {
0 => bb1,
1 => bb2,
2 => bb5,
83475082217378112394804934520362510925 => bb7,
_ => bb6
}
}
bb13 = {
_11 = [61174_u16,48720_u16,26192_u16,33697_u16,45907_u16,48672_u16,62777_u16,57599_u16];
_4 = [56257_u16,48869_u16,34124_u16,49556_u16,30456_u16,22223_u16,46915_u16,17164_u16];
RET = !55760335477006290487493848729457508438_i128;
_6 = _8 > _8;
_7 = [14403_u16,11892_u16,38525_u16,21669_u16,31133_u16,19646_u16,21366_u16,45992_u16];
_8 = 146625275_u32 as f32;
_15 = [25467_u16,57776_u16,34411_u16,14209_u16,33745_u16,51167_u16,64638_u16,40063_u16];
RET = (-810639980_i32) as i128;
_11 = [8842_u16,35078_u16,22352_u16,15463_u16,55825_u16,43032_u16,14877_u16,13035_u16];
_12 = [6426_u16,55127_u16,23817_u16,46393_u16,8873_u16,21587_u16,35030_u16,10151_u16];
_8 = _2 as f32;
_14 = _11;
_18 = -_8;
_4 = [16874_u16,35453_u16,62820_u16,16679_u16,62616_u16,37021_u16,15502_u16,49209_u16];
Goto(bb2)
}
bb14 = {
_9 = [_25,_34,_34,_25,_25,_34,_25,_25];
_20 = !_2;
_15 = [_34,_25,_34,_34,_25,_34,_34,_34];
_6 = _26 ^ _26;
_36 = (-125_i8);
_3 = [_34,_25,_34,_25,_25,_34,_25,_34];
_37 = _21;
_5 = -_17;
place!(Field::<i128>(Variant(_19, 0), 0)) = !RET;
_6 = _26;
_9 = [_25,_34,_34,_34,_34,_34,_34,_34];
_19 = Adt63::Variant1 { fld0: _24 };
_11 = _12;
_2 = !_20;
_22 = [_16,_16,_16,_16,_16];
_1 = [_25,_34,_34,_34,_34,_34,_25,_34];
_2 = !_20;
_17 = -_29;
_40.1 = core::ptr::addr_of_mut!(_27);
_40.1 = core::ptr::addr_of_mut!(_28);
_25 = !_34;
_28 = _27 + _27;
_1 = [_34,_25,_25,_25,_25,_25,_34,_25];
_14 = [_25,_34,_34,_25,_34,_34,_25,_34];
_9 = [_34,_25,_34,_34,_25,_25,_25,_25];
_17 = _5 + _29;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(17_usize, 20_usize, Move(_20), 25_usize, Move(_25), 6_usize, Move(_6), 3_usize, Move(_3)), bb16, UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(17_usize, 1_usize, Move(_1), 26_usize, Move(_26), 2_usize, Move(_2), 9_usize, Move(_9)), bb17, UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(17_usize, 11_usize, Move(_11), 27_usize, Move(_27), 15_usize, Move(_15), 14_usize, Move(_14)), bb18, UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(17_usize, 12_usize, Move(_12), 46_usize, _46, 46_usize, _46, 46_usize, _46), bb19, UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: [u16; 8],mut _2: [u16; 8],mut _3: [u16; 8]) -> i16 {
mir! {
type RET = i16;
let _4: i32;
let _5: u64;
let _6: char;
let _7: i64;
let _8: Adt60;
let _9: [usize; 1];
let _10: bool;
let _11: [u16; 8];
let _12: u32;
let _13: isize;
let _14: [i16; 5];
let _15: (usize,);
let _16: [i8; 1];
let _17: [u8; 2];
let _18: Adt59;
let _19: f32;
let _20: [u8; 2];
let _21: i32;
let _22: Adt55;
let _23: isize;
let _24: u32;
let _25: [i16; 8];
let _26: ();
let _27: ();
{
_1 = [45640_u16,125_u16,47392_u16,18107_u16,9702_u16,21853_u16,64783_u16,27960_u16];
_3 = [44059_u16,40571_u16,21660_u16,32741_u16,13716_u16,53080_u16,26402_u16,4878_u16];
RET = (-9706_i16);
_3 = [50028_u16,25844_u16,46525_u16,61864_u16,45491_u16,65139_u16,30922_u16,23356_u16];
RET = !30071_i16;
RET = (-13681_i16);
_3 = [47393_u16,58546_u16,10530_u16,35538_u16,43334_u16,20321_u16,11820_u16,36262_u16];
RET = -(-3540_i16);
RET = 140035155989162402877078852595628902133_i128 as i16;
RET = (-27328_i16);
RET = (-7584_i16);
_3 = _1;
_3 = [19915_u16,5128_u16,35034_u16,41394_u16,50229_u16,9151_u16,5326_u16,38097_u16];
_2 = _1;
_3 = [40801_u16,14122_u16,658_u16,8400_u16,3752_u16,45904_u16,11899_u16,12316_u16];
_1 = [31137_u16,38444_u16,14631_u16,18737_u16,56800_u16,31761_u16,32089_u16,36213_u16];
Call(_1 = core::intrinsics::transmute(_2), bb1, UnwindUnreachable())
}
bb1 = {
_1 = _3;
_3 = [16123_u16,64427_u16,37298_u16,21516_u16,2286_u16,43323_u16,16325_u16,27954_u16];
_3 = _1;
_3 = _2;
_3 = [54883_u16,32559_u16,40229_u16,9634_u16,23421_u16,12802_u16,52833_u16,24329_u16];
_1 = [48469_u16,62250_u16,34276_u16,44522_u16,31964_u16,29942_u16,47972_u16,15379_u16];
_3 = [9149_u16,57763_u16,30509_u16,46845_u16,43040_u16,28312_u16,13369_u16,6652_u16];
RET = false as i16;
RET = (-6953_i16) + 25374_i16;
RET = (-8533_i16);
RET = !29509_i16;
_3 = [34673_u16,11787_u16,32105_u16,13776_u16,61366_u16,14468_u16,60905_u16,36490_u16];
_1 = [27930_u16,9713_u16,8464_u16,30750_u16,31715_u16,34227_u16,51342_u16,54526_u16];
Goto(bb2)
}
bb2 = {
_2 = [4715_u16,15871_u16,41423_u16,25300_u16,46185_u16,40674_u16,42980_u16,54399_u16];
_1 = _2;
RET = (-31431_i16);
_3 = _2;
_3 = [4521_u16,65471_u16,45737_u16,46877_u16,64907_u16,18187_u16,21821_u16,16188_u16];
_1 = _2;
_3 = [2076_u16,62428_u16,644_u16,36366_u16,64828_u16,16496_u16,12212_u16,14742_u16];
_3 = _1;
_5 = 9644574852942730167_u64 & 5681370356254466479_u64;
_5 = true as u64;
_5 = '\u{95fc7}' as u64;
_1 = [5395_u16,58434_u16,42350_u16,56191_u16,20693_u16,4233_u16,35718_u16,29348_u16];
_4 = false as i32;
_3 = [3583_u16,5475_u16,22858_u16,38441_u16,48780_u16,43651_u16,30337_u16,33138_u16];
_1 = [5171_u16,21518_u16,24078_u16,62849_u16,9736_u16,5363_u16,42748_u16,34146_u16];
_3 = _2;
_1 = _3;
_6 = '\u{be0cd}';
RET = (-26744_i16);
_5 = 15391178363607799473_u64;
RET = !(-24894_i16);
_6 = '\u{b0ec1}';
Goto(bb3)
}
bb3 = {
_2 = _3;
_1 = [28795_u16,19909_u16,56932_u16,32163_u16,54383_u16,39617_u16,52645_u16,13848_u16];
_7 = -(-6988158254240690632_i64);
_4 = _7 as i32;
_7 = 3858113768433400183_i64 * 3429202128417250407_i64;
_3 = _1;
_3 = [51464_u16,1878_u16,65523_u16,48186_u16,38980_u16,30532_u16,13389_u16,63517_u16];
_2 = [44352_u16,8331_u16,4196_u16,48980_u16,52437_u16,56446_u16,19350_u16,60689_u16];
_4 = 1765198577_u32 as i32;
_2 = [6231_u16,63251_u16,52853_u16,3297_u16,59384_u16,63744_u16,25634_u16,6245_u16];
RET = 11998484950689504837_usize as i16;
RET = 4098_i16 << _7;
_3 = _1;
_6 = '\u{4b3b5}';
RET = (-22731_i16) - 24783_i16;
_5 = 42_u8 as u64;
RET = -7001_i16;
_3 = _2;
Goto(bb4)
}
bb4 = {
_2 = [52981_u16,43883_u16,3586_u16,61527_u16,49094_u16,10495_u16,15467_u16,34411_u16];
_6 = '\u{d66e0}';
_3 = _1;
_7 = 3345605068_u32 as i64;
_3 = _1;
RET = (-15684_i16) << _4;
_5 = 93_i8 as u64;
_6 = '\u{d16c7}';
_5 = _4 as u64;
_5 = _7 as u64;
_1 = [28669_u16,26128_u16,44330_u16,17807_u16,22222_u16,22278_u16,51890_u16,62204_u16];
_5 = 7604554920090072012_u64;
_1 = [26291_u16,24262_u16,25713_u16,31947_u16,34684_u16,2736_u16,4890_u16,7347_u16];
_6 = '\u{6d1e0}';
_9 = [6_usize];
RET = (-20892_i16);
_2 = [28877_u16,36960_u16,43193_u16,24865_u16,34057_u16,51833_u16,14499_u16,25834_u16];
_4 = 31_i8 as i32;
_4 = 1109416050_i32;
_2 = [18908_u16,34682_u16,11905_u16,50781_u16,53065_u16,39465_u16,20917_u16,9221_u16];
_7 = _6 as i64;
_3 = _2;
Goto(bb5)
}
bb5 = {
_10 = !false;
RET = (-40690988476834555655958538244121594368_i128) as i16;
match _4 {
0 => bb1,
1 => bb2,
2 => bb4,
1109416050 => bb7,
_ => bb6
}
}
bb6 = {
_2 = [52981_u16,43883_u16,3586_u16,61527_u16,49094_u16,10495_u16,15467_u16,34411_u16];
_6 = '\u{d66e0}';
_3 = _1;
_7 = 3345605068_u32 as i64;
_3 = _1;
RET = (-15684_i16) << _4;
_5 = 93_i8 as u64;
_6 = '\u{d16c7}';
_5 = _4 as u64;
_5 = _7 as u64;
_1 = [28669_u16,26128_u16,44330_u16,17807_u16,22222_u16,22278_u16,51890_u16,62204_u16];
_5 = 7604554920090072012_u64;
_1 = [26291_u16,24262_u16,25713_u16,31947_u16,34684_u16,2736_u16,4890_u16,7347_u16];
_6 = '\u{6d1e0}';
_9 = [6_usize];
RET = (-20892_i16);
_2 = [28877_u16,36960_u16,43193_u16,24865_u16,34057_u16,51833_u16,14499_u16,25834_u16];
_4 = 31_i8 as i32;
_4 = 1109416050_i32;
_2 = [18908_u16,34682_u16,11905_u16,50781_u16,53065_u16,39465_u16,20917_u16,9221_u16];
_7 = _6 as i64;
_3 = _2;
Goto(bb5)
}
bb7 = {
_9 = [6_usize];
_10 = false;
_4 = !927304575_i32;
_2 = [18767_u16,64916_u16,17678_u16,45565_u16,17609_u16,44669_u16,19986_u16,37155_u16];
_7 = -7360598502982425513_i64;
_11 = _3;
RET = (-18335_i16);
RET = !(-26707_i16);
_11 = [33387_u16,13297_u16,62822_u16,19990_u16,15976_u16,35317_u16,65320_u16,3999_u16];
_7 = (-216547430668572505_i64);
_14 = [RET,RET,RET,RET,RET];
_2 = _11;
RET = !(-1020_i16);
_5 = 4807164457065617189_u64 ^ 13795164964586234857_u64;
match _7 {
0 => bb8,
340282366920938463463158060001099638951 => bb10,
_ => bb9
}
}
bb8 = {
_2 = [52981_u16,43883_u16,3586_u16,61527_u16,49094_u16,10495_u16,15467_u16,34411_u16];
_6 = '\u{d66e0}';
_3 = _1;
_7 = 3345605068_u32 as i64;
_3 = _1;
RET = (-15684_i16) << _4;
_5 = 93_i8 as u64;
_6 = '\u{d16c7}';
_5 = _4 as u64;
_5 = _7 as u64;
_1 = [28669_u16,26128_u16,44330_u16,17807_u16,22222_u16,22278_u16,51890_u16,62204_u16];
_5 = 7604554920090072012_u64;
_1 = [26291_u16,24262_u16,25713_u16,31947_u16,34684_u16,2736_u16,4890_u16,7347_u16];
_6 = '\u{6d1e0}';
_9 = [6_usize];
RET = (-20892_i16);
_2 = [28877_u16,36960_u16,43193_u16,24865_u16,34057_u16,51833_u16,14499_u16,25834_u16];
_4 = 31_i8 as i32;
_4 = 1109416050_i32;
_2 = [18908_u16,34682_u16,11905_u16,50781_u16,53065_u16,39465_u16,20917_u16,9221_u16];
_7 = _6 as i64;
_3 = _2;
Goto(bb5)
}
bb9 = {
_1 = _3;
_3 = [16123_u16,64427_u16,37298_u16,21516_u16,2286_u16,43323_u16,16325_u16,27954_u16];
_3 = _1;
_3 = _2;
_3 = [54883_u16,32559_u16,40229_u16,9634_u16,23421_u16,12802_u16,52833_u16,24329_u16];
_1 = [48469_u16,62250_u16,34276_u16,44522_u16,31964_u16,29942_u16,47972_u16,15379_u16];
_3 = [9149_u16,57763_u16,30509_u16,46845_u16,43040_u16,28312_u16,13369_u16,6652_u16];
RET = false as i16;
RET = (-6953_i16) + 25374_i16;
RET = (-8533_i16);
RET = !29509_i16;
_3 = [34673_u16,11787_u16,32105_u16,13776_u16,61366_u16,14468_u16,60905_u16,36490_u16];
_1 = [27930_u16,9713_u16,8464_u16,30750_u16,31715_u16,34227_u16,51342_u16,54526_u16];
Goto(bb2)
}
bb10 = {
Goto(bb11)
}
bb11 = {
_15.0 = 11054788536549656353_usize;
_5 = !11419312873693693829_u64;
RET = -(-29961_i16);
_15.0 = 5_usize ^ 8117623567096471821_usize;
_5 = 2992961719160979812_u64 << _4;
_15 = (2_usize,);
_15.0 = 17580340049588218662_usize;
_3 = [30829_u16,13479_u16,17888_u16,53791_u16,4301_u16,65430_u16,752_u16,35692_u16];
_13 = -(-9223372036854775808_isize);
_13 = 2158835965_u32 as isize;
_16 = [107_i8];
_17 = [53_u8,201_u8];
_6 = '\u{70ed0}';
_15.0 = !3999844125219220243_usize;
match _7 {
0 => bb3,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
340282366920938463463158060001099638951 => bb17,
_ => bb16
}
}
bb12 = {
Goto(bb11)
}
bb13 = {
_1 = _3;
_3 = [16123_u16,64427_u16,37298_u16,21516_u16,2286_u16,43323_u16,16325_u16,27954_u16];
_3 = _1;
_3 = _2;
_3 = [54883_u16,32559_u16,40229_u16,9634_u16,23421_u16,12802_u16,52833_u16,24329_u16];
_1 = [48469_u16,62250_u16,34276_u16,44522_u16,31964_u16,29942_u16,47972_u16,15379_u16];
_3 = [9149_u16,57763_u16,30509_u16,46845_u16,43040_u16,28312_u16,13369_u16,6652_u16];
RET = false as i16;
RET = (-6953_i16) + 25374_i16;
RET = (-8533_i16);
RET = !29509_i16;
_3 = [34673_u16,11787_u16,32105_u16,13776_u16,61366_u16,14468_u16,60905_u16,36490_u16];
_1 = [27930_u16,9713_u16,8464_u16,30750_u16,31715_u16,34227_u16,51342_u16,54526_u16];
Goto(bb2)
}
bb14 = {
_10 = !false;
RET = (-40690988476834555655958538244121594368_i128) as i16;
match _4 {
0 => bb1,
1 => bb2,
2 => bb4,
1109416050 => bb7,
_ => bb6
}
}
bb15 = {
_2 = [52981_u16,43883_u16,3586_u16,61527_u16,49094_u16,10495_u16,15467_u16,34411_u16];
_6 = '\u{d66e0}';
_3 = _1;
_7 = 3345605068_u32 as i64;
_3 = _1;
RET = (-15684_i16) << _4;
_5 = 93_i8 as u64;
_6 = '\u{d16c7}';
_5 = _4 as u64;
_5 = _7 as u64;
_1 = [28669_u16,26128_u16,44330_u16,17807_u16,22222_u16,22278_u16,51890_u16,62204_u16];
_5 = 7604554920090072012_u64;
_1 = [26291_u16,24262_u16,25713_u16,31947_u16,34684_u16,2736_u16,4890_u16,7347_u16];
_6 = '\u{6d1e0}';
_9 = [6_usize];
RET = (-20892_i16);
_2 = [28877_u16,36960_u16,43193_u16,24865_u16,34057_u16,51833_u16,14499_u16,25834_u16];
_4 = 31_i8 as i32;
_4 = 1109416050_i32;
_2 = [18908_u16,34682_u16,11905_u16,50781_u16,53065_u16,39465_u16,20917_u16,9221_u16];
_7 = _6 as i64;
_3 = _2;
Goto(bb5)
}
bb16 = {
_2 = _3;
_1 = [28795_u16,19909_u16,56932_u16,32163_u16,54383_u16,39617_u16,52645_u16,13848_u16];
_7 = -(-6988158254240690632_i64);
_4 = _7 as i32;
_7 = 3858113768433400183_i64 * 3429202128417250407_i64;
_3 = _1;
_3 = [51464_u16,1878_u16,65523_u16,48186_u16,38980_u16,30532_u16,13389_u16,63517_u16];
_2 = [44352_u16,8331_u16,4196_u16,48980_u16,52437_u16,56446_u16,19350_u16,60689_u16];
_4 = 1765198577_u32 as i32;
_2 = [6231_u16,63251_u16,52853_u16,3297_u16,59384_u16,63744_u16,25634_u16,6245_u16];
RET = 11998484950689504837_usize as i16;
RET = 4098_i16 << _7;
_3 = _1;
_6 = '\u{4b3b5}';
RET = (-22731_i16) - 24783_i16;
_5 = 42_u8 as u64;
RET = -7001_i16;
_3 = _2;
Goto(bb4)
}
bb17 = {
_3 = [16500_u16,53924_u16,20405_u16,21328_u16,18048_u16,23967_u16,51481_u16,46878_u16];
_15 = (990473985446124454_usize,);
_9 = [_15.0];
_10 = false;
_12 = 3381997606_u32 >> _15.0;
_7 = 4158645328109247830_i64;
_11 = [31135_u16,34519_u16,12925_u16,8863_u16,4326_u16,54463_u16,9090_u16,44147_u16];
_10 = false;
_11 = [18450_u16,22132_u16,44651_u16,31664_u16,49219_u16,59739_u16,21061_u16,43923_u16];
_11 = [41415_u16,61896_u16,950_u16,15032_u16,29509_u16,50298_u16,63717_u16,26724_u16];
_3 = [34427_u16,56684_u16,62606_u16,62972_u16,19154_u16,7324_u16,45375_u16,35727_u16];
_10 = _13 == _13;
RET = !(-13783_i16);
_9 = [_15.0];
_4 = (-847457932_i32) - (-1836213037_i32);
_1 = [14849_u16,2875_u16,28917_u16,53019_u16,62952_u16,49281_u16,28978_u16,52566_u16];
_5 = _7 as u64;
_6 = '\u{a8d29}';
_15 = (13215376781712740859_usize,);
_21 = _4 | _4;
_19 = _7 as f32;
_6 = '\u{fb06b}';
RET = !3159_i16;
_1 = [47191_u16,15414_u16,21649_u16,2706_u16,23989_u16,24957_u16,39601_u16,23574_u16];
_23 = -_13;
Goto(bb18)
}
bb18 = {
Call(_26 = dump_var(18_usize, 5_usize, Move(_5), 4_usize, Move(_4), 1_usize, Move(_1), 11_usize, Move(_11)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_26 = dump_var(18_usize, 9_usize, Move(_9), 16_usize, Move(_16), 12_usize, Move(_12), 23_usize, Move(_23)), bb20, UnwindUnreachable())
}
bb20 = {
Call(_26 = dump_var(18_usize, 14_usize, Move(_14), 27_usize, _27, 27_usize, _27, 27_usize, _27), bb21, UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn19(mut _1: *mut isize,mut _2: Adt55,mut _3: char,mut _4: Adt55) -> [i8; 1] {
mir! {
type RET = [i8; 1];
let _5: Adt59;
let _6: isize;
let _7: char;
let _8: isize;
let _9: u8;
let _10: isize;
let _11: char;
let _12: Adt51;
let _13: f32;
let _14: f64;
let _15: bool;
let _16: isize;
let _17: (usize,);
let _18: isize;
let _19: [u16; 8];
let _20: Adt61;
let _21: bool;
let _22: [u8; 2];
let _23: ();
let _24: ();
{
_1 = core::ptr::addr_of_mut!((*_1));
RET = [91_i8];
place!(Field::<*mut i8>(Variant(_2, 0), 1)) = Field::<*mut i8>(Variant(_4, 0), 1);
SetDiscriminant(_2, 1);
RET = [(-18_i8)];
place!(Field::<[i8; 1]>(Variant(_2, 1), 3)) = RET;
(*_1) = 60_u8 as isize;
Goto(bb1)
}
bb1 = {
place!(Field::<*mut isize>(Variant(_4, 0), 0)) = _1;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0)).0 = 49_u8;
SetDiscriminant(_4, 1);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).0 = false as u8;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).2.0 = [32_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).2.0 = [75_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0)).2 = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0).2.0,);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).1 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).2;
match Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
49 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_7 = _3;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)) = (Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).0, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).2, Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).2);
_6 = (*_1) >> Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).0;
place!(Field::<[i8; 1]>(Variant(_4, 1), 3)) = [(-117_i8)];
match Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0).0 {
0 => bb1,
1 => bb2,
2 => bb6,
3 => bb8,
4 => bb9,
49 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_8 = 1842590894_i32 as isize;
place!(Field::<[u64; 3]>(Variant(_4, 1), 1)) = [7849375587680150649_u64,1916266633004560518_u64,1561733525765625434_u64];
_9 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).0 + Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0).0;
RET = [67_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).2 = (RET,);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0)) = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0);
place!(Field::<[u64; 3]>(Variant(_2, 1), 1)) = [13752182861550310861_u64,11517498070078426212_u64,14251091253275305912_u64];
_7 = _3;
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0)).2.0 = [9_i8];
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_4, 1), 0)).1 = Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0).1;
(*_1) = _8;
_6 = (*_1);
place!(Field::<[u16; 8]>(Variant(_2, 1), 2)) = [53767_u16,28858_u16,4679_u16,35429_u16,27774_u16,35696_u16,53933_u16,32654_u16];
(*_1) = _6;
Goto(bb12)
}
bb12 = {
_4 = _2;
SetDiscriminant(_4, 0);
place!(Field::<(u8, ([i8; 1],), ([i8; 1],))>(Variant(_2, 1), 0)).0 = _9 & _9;
SetDiscriminant(_2, 0);
place!(Field::<*mut isize>(Variant(_2, 0), 0)) = _1;
_6 = (*_1);
_11 = _3;
_10 = (-908595100837661788_i64) as isize;
_10 = _6 ^ (*_1);
place!(Field::<*mut isize>(Variant(_4, 0), 0)) = core::ptr::addr_of_mut!(_10);
_1 = core::ptr::addr_of_mut!(_16);
(*_1) = (-5339_i16) as isize;
_15 = !true;
_12.fld0 = 1012881125524294500_i64 as f64;
_12.fld0 = 126654569806805299453782280476790897021_u128 as f64;
_11 = _3;
_17 = (3_usize,);
_17 = (1_usize,);
_15 = !false;
place!(Field::<*mut isize>(Variant(_2, 0), 0)) = core::ptr::addr_of_mut!((*_1));
(*_1) = _10 ^ _10;
_6 = -(*_1);
_6 = 25894_u16 as isize;
match _17.0 {
0 => bb13,
2 => bb15,
1 => bb17,
_ => bb16
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
place!(Field::<*mut isize>(Variant(_2, 0), 0)) = core::ptr::addr_of_mut!(_10);
RET = [(-93_i8)];
_11 = _3;
_13 = 1800962127_u32 as f32;
place!(Field::<*mut isize>(Variant(_2, 0), 0)) = _1;
_6 = -(*_1);
_21 = !_15;
_18 = _17.0 as isize;
_6 = -_16;
_16 = _10 ^ _6;
_15 = _16 >= _16;
RET = [12_i8];
_9 = !30_u8;
_7 = _11;
_7 = _3;
_17.0 = 4_usize;
(*_1) = _6;
_14 = _12.fld0 + _12.fld0;
_17 = (5_usize,);
_14 = _12.fld0 + _12.fld0;
_21 = _16 >= _6;
_10 = _17.0 as isize;
_13 = 1534369626049979265_u64 as f32;
Goto(bb18)
}
bb18 = {
Call(_23 = dump_var(19_usize, 7_usize, Move(_7), 11_usize, Move(_11), 3_usize, Move(_3), 21_usize, Move(_21)), bb19, UnwindUnreachable())
}
bb19 = {
Call(_23 = dump_var(19_usize, 15_usize, Move(_15), 8_usize, Move(_8), 24_usize, _24, 24_usize, _24), bb20, UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(7041686806122647235_u64), std::hint::black_box(238153717748928166307195479068164673622_u128), std::hint::black_box((-75_i8)), std::hint::black_box(2383386632_u32), std::hint::black_box(218869558_i32), std::hint::black_box((-6169401604971124756_i64)), std::hint::black_box(38619782788765659193236576352578811582_i128), std::hint::black_box(2_usize), std::hint::black_box(162_u8), std::hint::black_box(30253_u16));
                
            }
#[derive(Debug,Copy,Clone)]
pub enum Adt47 {
Variant0{
fld0: i16,
fld1: u64,

},
Variant1{
fld0: [u64; 3],
fld1: (u8, ([i8; 1],), ([i8; 1],)),
fld2: usize,
fld3: *mut char,
fld4: [u16; 8],
fld5: i32,
fld6: i64,
fld7: (usize,),

},
Variant2{
fld0: (([i8; 1],), *const i8),
fld1: [u8; 2],
fld2: usize,

},
Variant3{
fld0: ([i8; 1],),
fld1: *mut isize,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt48 {
Variant0{
fld0: *mut u32,
fld1: f32,
fld2: isize,
fld3: *const i32,

},
Variant1{
fld0: f64,
fld1: *mut i8,
fld2: *const i8,
fld3: *mut [i16; 5],
fld4: *mut u128,

},
Variant2{
fld0: bool,
fld1: *mut u32,

},
Variant3{
fld0: [i16; 7],
fld1: [usize; 1],
fld2: ([i16; 8], *mut isize),
fld3: i128,
fld4: [i128; 5],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt49 {
Variant0{
fld0: *mut [i16; 5],
fld1: (u8, ([i8; 1],), ([i8; 1],)),
fld2: i64,
fld3: u16,

},
Variant1{
fld0: *mut isize,

},
Variant2{
fld0: u16,
fld1: *mut u32,
fld2: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),
fld3: i32,

},
Variant3{
fld0: u128,
fld1: [u16; 8],
fld2: *mut char,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt50 {
Variant0{
fld0: [u16; 8],
fld1: *mut i8,
fld2: (([i8; 1],), *const i8),
fld3: [i16; 4],
fld4: (u8, *const i32),
fld5: i128,
fld6: [usize; 1],

},
Variant1{
fld0: *const i8,

},
Variant2{
fld0: (u8, ([i8; 1],), ([i8; 1],)),
fld1: *mut i16,
fld2: usize,
fld3: i64,
fld4: *mut *const [u64; 3],
fld5: i32,

},
Variant3{
fld0: [i128; 5],
fld1: [i16; 5],

}}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: f64,
}
#[derive(Debug)]
pub enum Adt52 {
Variant0{
fld0: (u8, ([i8; 1],), ([i8; 1],)),
fld1: Adt48,
fld2: isize,
fld3: i8,
fld4: u64,
fld5: [u8; 2],
fld6: *mut char,
fld7: *mut i16,

},
Variant1{
fld0: ([i8; 1],),
fld1: usize,
fld2: Adt49,
fld3: u64,

},
Variant2{
fld0: *const i32,

},
Variant3{
fld0: *mut char,
fld1: (u8, *const i32),
fld2: isize,
fld3: *const (([i8; 1],), *const i8),
fld4: i128,
fld5: u64,
fld6: f32,

}}
#[derive(Debug)]
pub enum Adt53 {
Variant0{
fld0: char,

},
Variant1{
fld0: *mut isize,
fld1: f32,
fld2: isize,
fld3: i128,
fld4: [u16; 8],
fld5: i32,
fld6: i64,

}}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: Adt51,
fld1: [usize; 1],
fld2: Adt53,
fld3: i8,
fld4: Adt50,

},
Variant1{
fld0: *const (([i8; 1],), *const i8),
fld1: [u64; 3],
fld2: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),

},
Variant2{
fld0: [u16; 8],
fld1: u128,
fld2: i32,
fld3: u8,

},
Variant3{
fld0: Adt50,
fld1: char,
fld2: (u8, ([i8; 1],), ([i8; 1],)),
fld3: [u16; 8],
fld4: Adt49,
fld5: f64,
fld6: i64,

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt55 {
Variant0{
fld0: *mut isize,
fld1: *mut i8,

},
Variant1{
fld0: (u8, ([i8; 1],), ([i8; 1],)),
fld1: [u64; 3],
fld2: [u16; 8],
fld3: [i8; 1],

}}
#[derive(Debug)]
pub struct Adt56 {
fld0: (u8, *const i32),
fld1: char,
fld2: Adt48,
}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: i64,
fld1: i8,

},
Variant1{
fld0: Adt47,

}}
#[derive(Debug)]
pub enum Adt58 {
Variant0{
fld0: Adt52,
fld1: Adt53,
fld2: (u8, *const i32),
fld3: *mut [i16; 5],
fld4: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),

},
Variant1{
fld0: (u8, ([i8; 1],), ([i8; 1],)),
fld1: [i16; 5],
fld2: [i16; 8],
fld3: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),
fld4: Adt52,
fld5: u64,
fld6: *const [u64; 3],
fld7: *const i8,

},
Variant2{
fld0: Adt57,

},
Variant3{
fld0: f32,
fld1: *mut char,
fld2: ([i8; 1],),
fld3: [usize; 1],
fld4: *mut *const [u64; 3],
fld5: i32,
fld6: u128,

}}
#[derive(Debug)]
pub enum Adt59 {
Variant0{
fld0: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),
fld1: i64,
fld2: ([i16; 8], *mut isize),
fld3: Adt52,

},
Variant1{
fld0: *mut i8,

}}
#[derive(Debug)]
pub enum Adt60 {
Variant0{
fld0: Adt55,

},
Variant1{
fld0: ([i8; 1],),
fld1: usize,
fld2: *const (([i8; 1],), *const i8),
fld3: *mut *const [u64; 3],
fld4: Adt53,
fld5: *mut i8,

},
Variant2{
fld0: ([i8; 1],),
fld1: *const i8,
fld2: (u8, ([i8; 1],), ([i8; 1],)),
fld3: (usize,),
fld4: (bool, *const i32, [u16; 8], *mut isize, [i8; 1]),
fld5: Adt58,
fld6: [i128; 5],

},
Variant3{
fld0: u128,
fld1: Adt52,
fld2: isize,
fld3: *mut char,

}}
#[derive(Debug)]
pub enum Adt61 {
Variant0{
fld0: (u8, ([i8; 1],), ([i8; 1],)),
fld1: [i16; 7],

},
Variant1{
fld0: *mut *const [u64; 3],

},
Variant2{
fld0: Adt52,
fld1: char,
fld2: u128,
fld3: Adt56,
fld4: f32,
fld5: ([i8; 1],),

},
Variant3{
fld0: u128,
fld1: Adt57,
fld2: Adt56,
fld3: f64,
fld4: [u8; 2],
fld5: [usize; 1],
fld6: usize,
fld7: u32,

}}
#[derive(Debug)]
pub enum Adt62 {
Variant0{
fld0: Adt61,
fld1: [i16; 7],
fld2: u64,
fld3: ([i16; 8], *mut isize),

},
Variant1{
fld0: u32,
fld1: i128,
fld2: (f64, *mut i16),
fld3: i8,
fld4: Adt56,
fld5: Adt55,
fld6: (u8, ([i8; 1],), ([i8; 1],)),

},
Variant2{
fld0: *mut i16,
fld1: *mut *const [u64; 3],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt63 {
Variant0{
fld0: i128,
fld1: u64,
fld2: isize,
fld3: f64,
fld4: *const i8,
fld5: i32,
fld6: i64,

},
Variant1{
fld0: [i16; 4],

}}

