#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: i64,mut _8: i128,mut _9: u64,mut _10: u8,mut _11: u32) -> char {
mir! {
type RET = char;
let _12: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _13: [u128; 2];
let _14: isize;
let _15: f64;
let _16: u32;
let _17: (i8, [bool; 6], [i64; 4], i128, u8);
let _18: isize;
let _19: Adt52;
let _20: bool;
let _21: *const *const bool;
let _22: u32;
let _23: (i8, [bool; 6], [i64; 4], i128, u8);
let _24: [u8; 5];
let _25: Adt62;
let _26: u32;
let _27: ();
let _28: ();
{
_1 = !true;
_5 = (-16401_i16) | 31516_i16;
_12.0.3 = 61516163486937479715852917532496611922_i128;
_1 = !true;
_2 = '\u{a93aa}';
_8 = _12.0.3 | _12.0.3;
_12.0.1 = [_1,_1,_1,_1,_1,_1];
Call(RET = fn1(_1, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_4 = 13_isize as i8;
_7 = _5 as i64;
_15 = 311548904024119231457729917454937964232_u128 as f64;
_5 = -24077_i16;
RET = _2;
_3 = (-891782074_i32) as isize;
_12.0.2 = [_7,_7,_7,_7];
_10 = 174_u8;
match _12.0.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
61516163486937479715852917532496611922 => bb8,
_ => bb7
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_16 = !3911595118_u32;
_13 = [279969985672330504645513866217637979559_u128,333334407994940766266037072280929824820_u128];
_1 = false;
_10 = 147233325308791840890582038698835057809_u128 as u8;
RET = _2;
_2 = '\u{7c570}';
_12.0.3 = -_8;
_7 = !3230837074128835109_i64;
RET = _2;
_4 = (-51_i8);
_19.fld3.fld6 = _8;
_6 = -(-296158363_i32);
_19.fld1 = core::ptr::addr_of_mut!(_19.fld2.fld1.0);
_19.fld3.fld5 = (_12.0.2, _2, _19.fld3.fld6);
_20 = _15 != _15;
_19.fld3.fld3 = core::ptr::addr_of!(_17.4);
_19.fld3.fld2 = _15;
_17.4 = _10;
match _4 {
0 => bb6,
1 => bb2,
2 => bb7,
3 => bb4,
4 => bb9,
5 => bb10,
6 => bb11,
340282366920938463463374607431768211405 => bb13,
_ => bb12
}
}
bb9 = {
Return()
}
bb10 = {
_4 = 13_isize as i8;
_7 = _5 as i64;
_15 = 311548904024119231457729917454937964232_u128 as f64;
_5 = -24077_i16;
RET = _2;
_3 = (-891782074_i32) as isize;
_12.0.2 = [_7,_7,_7,_7];
_10 = 174_u8;
match _12.0.3 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
61516163486937479715852917532496611922 => bb8,
_ => bb7
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_19.fld2.fld1.3 = [_5,_5,_5];
_19.fld2.fld1.1 = core::ptr::addr_of!(_7);
_11 = _1 as u32;
_17.2 = [_7,_7,_7,_7];
_16 = !_11;
_17 = (_4, _12.0.1, _12.0.2, _8, _10);
_17.4 = !_10;
_19.fld3.fld2 = _15 - _15;
_1 = !_20;
_18 = _3;
_10 = _17.4 % 136_u8;
_19.fld2.fld1.3 = [_5,_5,_5];
_19.fld2.fld0 = core::ptr::addr_of_mut!(_12.0);
_19.fld2.fld1.3 = [_5,_5,_5];
_14 = _6 as isize;
_23.1 = [_20,_20,_20,_20,_20,_20];
_17.0 = _19.fld3.fld2 as i8;
_19.fld3.fld1 = [_17.3,_19.fld3.fld6];
_23.0 = _17.0;
match _4 {
0 => bb6,
1 => bb14,
2 => bb15,
340282366920938463463374607431768211405 => bb17,
_ => bb16
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
_19.fld2.fld4 = _5;
_25.fld4 = !6_usize;
_21 = core::ptr::addr_of!(_19.fld2.fld3);
Goto(bb18)
}
bb18 = {
Call(_27 = dump_var(0_usize, 13_usize, Move(_13), 3_usize, Move(_3), 5_usize, Move(_5), 14_usize, Move(_14)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_27 = dump_var(0_usize, 4_usize, Move(_4), 1_usize, Move(_1), 11_usize, Move(_11), 16_usize, Move(_16)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn1(mut _1: bool,mut _2: char,mut _3: char) -> char {
mir! {
type RET = char;
let _4: bool;
let _5: Adt59;
let _6: [i64; 7];
let _7: i128;
let _8: [i128; 3];
let _9: u8;
let _10: [bool; 6];
let _11: f64;
let _12: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _13: char;
let _14: Adt62;
let _15: bool;
let _16: isize;
let _17: Adt58;
let _18: [i64; 6];
let _19: [bool; 6];
let _20: isize;
let _21: isize;
let _22: bool;
let _23: isize;
let _24: u32;
let _25: [u128; 2];
let _26: *const *mut i128;
let _27: isize;
let _28: ();
let _29: ();
{
_3 = _2;
_2 = _3;
_1 = _2 > _2;
_3 = _2;
RET = _3;
_4 = _1 | _1;
_5.fld2 = [(-19473_i16),(-3724_i16),13908_i16];
_5.fld6.fld2 = 145573158316515313443934523856241976468_u128 as f64;
_1 = !_4;
RET = _3;
_5.fld6.fld1 = [(-106072577318515924273604524655439703524_i128),(-37125717610849865187477129746505206975_i128)];
Goto(bb1)
}
bb1 = {
_5.fld6.fld5.1 = _2;
_5.fld1 = (31_isize,);
_6 = [1287278933258127402_i64,1682818471468296134_i64,(-7134807149099172052_i64),2137000682422031283_i64,(-36346942287436377_i64),7853305443831590388_i64,(-5578875288903201758_i64)];
_5.fld6.fld5.0 = [7765751291203021537_i64,(-2691035456005450656_i64),(-2462342701536904173_i64),(-8148149474050141879_i64)];
_5.fld6.fld0 = core::ptr::addr_of_mut!(_5.fld2);
_5.fld6.fld0 = core::ptr::addr_of_mut!(_5.fld2);
_5.fld3 = _5.fld1.0 as f32;
_6 = [3149287896090093868_i64,8842426676058019442_i64,(-5474263842502376338_i64),(-482226704243526967_i64),(-8275641461394818682_i64),5992616094584389885_i64,898579065890986615_i64];
_5.fld6.fld3 = core::ptr::addr_of!(_9);
_9 = 90_u8;
_10 = [_1,_1,_1,_4,_1,_4];
Goto(bb2)
}
bb2 = {
_5.fld0 = [186715012439295169243232876628975008893_u128,227772810660470662249470443381861334547_u128];
Goto(bb3)
}
bb3 = {
_10 = [_1,_1,_4,_1,_4,_1];
_7 = 82549363054475345685990888333327001674_i128 | (-108675959079923763882773211369097183404_i128);
_5.fld1 = ((-9223372036854775808_isize),);
_12.0.3 = _7;
_5.fld1.0 = 33_isize >> _12.0.3;
_14.fld3.fld4 = 6_usize as u64;
_12.0 = ((-124_i8), _10, _5.fld6.fld5.0, _7, _9);
_14.fld3.fld1 = _5.fld6.fld1;
_14.fld3.fld3 = core::ptr::addr_of!(_9);
_14.fld3.fld5 = (_12.0.2, _3, _7);
_11 = -_5.fld6.fld2;
match _12.0.0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768211332 => bb10,
_ => bb9
}
}
bb4 = {
_5.fld0 = [186715012439295169243232876628975008893_u128,227772810660470662249470443381861334547_u128];
Goto(bb3)
}
bb5 = {
_5.fld6.fld5.1 = _2;
_5.fld1 = (31_isize,);
_6 = [1287278933258127402_i64,1682818471468296134_i64,(-7134807149099172052_i64),2137000682422031283_i64,(-36346942287436377_i64),7853305443831590388_i64,(-5578875288903201758_i64)];
_5.fld6.fld5.0 = [7765751291203021537_i64,(-2691035456005450656_i64),(-2462342701536904173_i64),(-8148149474050141879_i64)];
_5.fld6.fld0 = core::ptr::addr_of_mut!(_5.fld2);
_5.fld6.fld0 = core::ptr::addr_of_mut!(_5.fld2);
_5.fld3 = _5.fld1.0 as f32;
_6 = [3149287896090093868_i64,8842426676058019442_i64,(-5474263842502376338_i64),(-482226704243526967_i64),(-8275641461394818682_i64),5992616094584389885_i64,898579065890986615_i64];
_5.fld6.fld3 = core::ptr::addr_of!(_9);
_9 = 90_u8;
_10 = [_1,_1,_1,_4,_1,_4];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_12.0.3 = _14.fld3.fld5.2;
_5.fld6.fld2 = _11;
_5.fld6.fld0 = core::ptr::addr_of_mut!(_5.fld2);
_14.fld3.fld4 = !1349073969014356125_u64;
_5.fld2 = [15561_i16,(-22198_i16),26382_i16];
Goto(bb11)
}
bb11 = {
_17.fld0.0 = -_5.fld1.0;
_14.fld7 = _14.fld3.fld5.2;
RET = _3;
_5.fld6.fld5 = _14.fld3.fld5;
_18 = [6025199807177613894_i64,(-3498327246608080287_i64),5946750634697368414_i64,(-8577651348887848054_i64),8603368030766690063_i64,(-6976330645122184107_i64)];
_14.fld5 = -_5.fld6.fld2;
_1 = _4;
_14.fld1 = core::ptr::addr_of!(_5.fld6.fld1);
_13 = _5.fld6.fld5.1;
_6 = [(-1768198669346634050_i64),5209714403241830797_i64,1964419052721014087_i64,(-9094575045361612484_i64),(-7126754212382482782_i64),(-5469304208801631010_i64),1671409919002224241_i64];
RET = _3;
_17.fld0 = (_5.fld1.0,);
_14.fld3.fld1 = _5.fld6.fld1;
_12.0 = ((-112_i8), _10, _5.fld6.fld5.0, _5.fld6.fld5.2, _9);
_12.0.3 = _14.fld7;
match _12.0.0 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
340282366920938463463374607431768211344 => bb13,
_ => bb12
}
}
bb12 = {
_5.fld0 = [186715012439295169243232876628975008893_u128,227772810660470662249470443381861334547_u128];
Goto(bb3)
}
bb13 = {
_14.fld4 = !5188840446891594053_usize;
_14.fld0.2 = -_5.fld3;
_12.0.1 = [_4,_4,_1,_4,_1,_1];
_7 = _12.0.3 * _14.fld3.fld5.2;
_5.fld0 = [320043782120371532523879789731429537200_u128,20153382990447352460289909006428579529_u128];
_12.0.3 = (-1919198698_i32) as i128;
_14.fld3.fld6 = _5.fld6.fld5.2 | _14.fld7;
_5.fld5 = [5516_i16,16167_i16,2425_i16,2349_i16,3865_i16];
_14.fld3.fld5.2 = _14.fld3.fld6 + _14.fld3.fld6;
_5.fld1 = (_17.fld0.0,);
_17.fld0.0 = _11 as isize;
_21 = !_5.fld1.0;
_5.fld6.fld6 = -_5.fld6.fld5.2;
_12.0.3 = _14.fld3.fld5.2;
_5.fld6.fld5.2 = 2320788356_u32 as i128;
_8 = [_14.fld3.fld5.2,_12.0.3,_7];
_14.fld2 = -_5.fld3;
_4 = !_1;
_12.0.1 = _10;
_24 = 2856532509_u32;
_14.fld0.3 = _14.fld3.fld4;
_14.fld3.fld2 = _5.fld6.fld2;
_25 = _5.fld0;
_14.fld0.1 = core::ptr::addr_of_mut!(_26);
Call(_5.fld1 = fn2(_13, _5.fld6.fld5.1), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_5.fld6.fld2 = -_14.fld3.fld2;
_5.fld0 = [312390266832176789003767299192125490406_u128,120584766387558140357158840821626018369_u128];
_16 = _21;
_17.fld1 = (-694173024252689016_i64) as u8;
_5.fld6.fld5.2 = _12.0.0 as i128;
_14.fld4 = !7_usize;
RET = _13;
_14.fld3.fld4 = _14.fld0.3;
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(1_usize, 18_usize, Move(_18), 13_usize, Move(_13), 12_usize, Move(_12), 10_usize, Move(_10)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(1_usize, 7_usize, Move(_7), 25_usize, Move(_25), 1_usize, Move(_1), 8_usize, Move(_8)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: char,mut _2: char) -> (isize,) {
mir! {
type RET = (isize,);
let _3: [i64; 7];
let _4: isize;
let _5: isize;
let _6: Adt51;
let _7: *mut i128;
let _8: Adt52;
let _9: u64;
let _10: bool;
let _11: [u8; 5];
let _12: Adt61;
let _13: Adt49;
let _14: ([i64; 4], char, i128);
let _15: *const [i64; 4];
let _16: [i16; 3];
let _17: *const bool;
let _18: bool;
let _19: (i8, [bool; 6], [i64; 4], i128, u8);
let _20: u16;
let _21: Adt64;
let _22: [i128; 3];
let _23: *mut *const *mut i128;
let _24: f64;
let _25: isize;
let _26: [i64; 6];
let _27: isize;
let _28: char;
let _29: isize;
let _30: *mut *const *mut i128;
let _31: [i16; 5];
let _32: f32;
let _33: [i64; 7];
let _34: char;
let _35: (isize,);
let _36: ();
let _37: ();
{
_2 = _1;
RET = (9223372036854775807_isize,);
Call(_1 = fn3(_2, _2, _2, _2, _2, _2, _2, _2, _2), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.0 = (-9223372036854775808_isize) & 9223372036854775807_isize;
RET.0 = !(-9223372036854775808_isize);
RET.0 = (-16_isize);
RET.0 = -9223372036854775807_isize;
_4 = (-9223372036854775808_isize) * (-65_isize);
RET = (_4,);
RET = (_4,);
RET.0 = _4 & _4;
RET.0 = 55_u8 as isize;
RET = (_4,);
_4 = !(-9223372036854775808_isize);
RET.0 = _4 + _4;
RET.0 = _4 & _4;
RET = (_4,);
_1 = _2;
_3 = [8251258255985326956_i64,(-5076190561318822172_i64),8953405231796992587_i64,2520270540671454937_i64,(-3370582571956284779_i64),3352289767414742091_i64,(-2514219088304218722_i64)];
_5 = (-27086_i16) as isize;
RET.0 = _5;
Goto(bb2)
}
bb2 = {
_6.fld5 = core::ptr::addr_of_mut!(_6.fld1.0);
_6.fld4 = !19688_i16;
_6.fld1.2 = _4 as f64;
_6.fld1.2 = _4 as f64;
_3 = [(-6585970941879088649_i64),(-1843116631472692062_i64),8803398078233638549_i64,8398057106167815132_i64,5543872250859960606_i64,(-4360520114965513814_i64),(-1488427872727605479_i64)];
_8.fld2.fld1.3 = [_6.fld4,_6.fld4,_6.fld4];
_8.fld3.fld6 = (-100961492306801754763324594148398014673_i128);
_6.fld1.4 = core::ptr::addr_of_mut!(_6.fld1.3);
RET.0 = _5 >> _4;
_8.fld3.fld5.2 = _8.fld3.fld6;
Call(_8.fld2.fld1.2 = core::intrinsics::transmute(_4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8.fld3.fld6 = _8.fld3.fld5.2 << _4;
_8.fld3.fld5.1 = _2;
_8.fld2.fld1.2 = _6.fld1.2 + _6.fld1.2;
match _8.fld3.fld5.2 {
0 => bb1,
1 => bb2,
239320874614136708700050013283370196783 => bb5,
_ => bb4
}
}
bb4 = {
RET.0 = (-9223372036854775808_isize) & 9223372036854775807_isize;
RET.0 = !(-9223372036854775808_isize);
RET.0 = (-16_isize);
RET.0 = -9223372036854775807_isize;
_4 = (-9223372036854775808_isize) * (-65_isize);
RET = (_4,);
RET = (_4,);
RET.0 = _4 & _4;
RET.0 = 55_u8 as isize;
RET = (_4,);
_4 = !(-9223372036854775808_isize);
RET.0 = _4 + _4;
RET.0 = _4 & _4;
RET = (_4,);
_1 = _2;
_3 = [8251258255985326956_i64,(-5076190561318822172_i64),8953405231796992587_i64,2520270540671454937_i64,(-3370582571956284779_i64),3352289767414742091_i64,(-2514219088304218722_i64)];
_5 = (-27086_i16) as isize;
RET.0 = _5;
Goto(bb2)
}
bb5 = {
_8.fld3.fld4 = 206908422220811171292496404932704366582_u128 as u64;
_6.fld1.3 = [_6.fld4,_6.fld4,_6.fld4];
RET = (_5,);
RET.0 = _5;
_8.fld3.fld5.2 = -_8.fld3.fld6;
_12.fld0 = [_8.fld3.fld6,_8.fld3.fld6];
_8.fld2.fld1.4 = _6.fld1.4;
_8.fld2.fld1.0 = core::ptr::addr_of!(_7);
_8.fld2.fld1.0 = core::ptr::addr_of!(_7);
_6.fld1.2 = _8.fld2.fld1.2;
_6.fld1.0 = core::ptr::addr_of!(_7);
_6.fld1.4 = core::ptr::addr_of_mut!(_6.fld1.3);
Goto(bb6)
}
bb6 = {
_11 = [209_u8,75_u8,229_u8,161_u8,62_u8];
_8.fld2.fld5 = core::ptr::addr_of_mut!(_8.fld2.fld1.0);
_6.fld3 = core::ptr::addr_of!(_10);
_8.fld2.fld2 = [85_u8,226_u8,68_u8,255_u8,16_u8];
RET = (_4,);
_8.fld3.fld5.2 = _8.fld3.fld6 & _8.fld3.fld6;
_13.fld2 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_9 = !_8.fld3.fld4;
_13.fld2 = [_6.fld4,_6.fld4,_6.fld4,_6.fld4,_6.fld4];
_8.fld3.fld1 = [_8.fld3.fld6,_8.fld3.fld5.2];
_8.fld2.fld1.4 = core::ptr::addr_of_mut!(_6.fld1.3);
_6.fld1.3 = _8.fld2.fld1.3;
_7 = core::ptr::addr_of_mut!(_8.fld3.fld6);
_6.fld2 = [47_u8,147_u8,123_u8,40_u8,12_u8];
_14.0 = [921343203556965448_i64,(-2298113329070143550_i64),(-5829598610360061172_i64),3903573658589533178_i64];
_8.fld0 = [false,false,false,false,false,false];
RET.0 = _5 ^ _4;
(*_7) = _8.fld3.fld5.2 ^ _8.fld3.fld5.2;
_14.1 = _2;
_8.fld3.fld4 = !_9;
Goto(bb7)
}
bb7 = {
_14.2 = !(*_7);
_8.fld2.fld2 = [251_u8,88_u8,225_u8,162_u8,229_u8];
_5 = _4 & _4;
_13.fld1 = core::ptr::addr_of_mut!(_6.fld1.0);
_8.fld3.fld5 = _14;
_5 = -_4;
_6.fld1.2 = _8.fld2.fld1.2 - _8.fld2.fld1.2;
_8.fld2.fld4 = _6.fld4 ^ _6.fld4;
_8.fld3.fld2 = (-2416906519671760287_i64) as f64;
_8.fld3.fld5.2 = -(*_7);
_6.fld2 = [86_u8,29_u8,138_u8,173_u8,216_u8];
Goto(bb8)
}
bb8 = {
_8.fld2.fld4 = _6.fld4 | _6.fld4;
_19.2 = [3913230971664440710_i64,9201354796302552186_i64,(-8820503196654482157_i64),(-6749477508578303263_i64)];
_8.fld0 = [false,false,false,false,true,true];
_1 = _8.fld3.fld5.1;
_8.fld3.fld6 = _8.fld3.fld5.2 & _8.fld3.fld5.2;
_14.0 = [8831552380525355106_i64,(-3099380390277815604_i64),(-9206201910269879807_i64),(-910824650124739790_i64)];
_6.fld1.4 = _8.fld2.fld1.4;
_6.fld4 = _8.fld2.fld4;
_17 = core::ptr::addr_of!(_10);
_8.fld2.fld0 = core::ptr::addr_of_mut!(_19);
(*_7) = !_8.fld3.fld5.2;
Goto(bb9)
}
bb9 = {
_16 = _8.fld2.fld1.3;
_21.fld4.fld0.2 = _8.fld3.fld5.2 as f32;
_8.fld2.fld1.2 = -_6.fld1.2;
_8.fld2.fld3 = core::ptr::addr_of!((*_17));
_8.fld2.fld3 = core::ptr::addr_of!((*_17));
_13.fld1 = core::ptr::addr_of_mut!(_21.fld5.fld0);
_21.fld4.fld2 = -_21.fld4.fld0.2;
_20 = 48925_u16;
_19.3 = -_14.2;
_21.fld4.fld0.1 = core::ptr::addr_of_mut!(_8.fld2.fld1.0);
Call(_21.fld4.fld5 = core::intrinsics::transmute(_4), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_8.fld1 = core::ptr::addr_of_mut!(_6.fld1.0);
Goto(bb11)
}
bb11 = {
_21.fld4.fld3.fld1 = [_19.3,(*_7)];
_13.fld1 = core::ptr::addr_of_mut!(_8.fld2.fld1.0);
_19.0 = 24_i8;
_23 = _6.fld5;
_21.fld4.fld3.fld5.0 = [806999126959999023_i64,(-208272606095308029_i64),(-3167590685960964608_i64),2251713284178870695_i64];
_21.fld4.fld3.fld2 = _6.fld1.2 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001976068179125774_f64;
_9 = _8.fld3.fld4;
_21.fld3 = _4 as f64;
_21.fld5.fld0 = core::ptr::addr_of!(_7);
_21.fld4.fld0.3 = _21.fld4.fld2 as u64;
_18 = _21.fld4.fld5 <= _21.fld3;
_8.fld3.fld1 = [_19.3,(*_7)];
_6.fld1.3 = [_8.fld2.fld4,_6.fld4,_8.fld2.fld4];
_2 = _8.fld3.fld5.1;
_14.2 = _8.fld3.fld5.2;
_6.fld5 = core::ptr::addr_of_mut!(_6.fld1.0);
_12.fld0 = [_19.3,_19.3];
_21.fld4.fld0.2 = _21.fld4.fld2 / 1_f32;
_1 = _14.1;
Goto(bb12)
}
bb12 = {
_8.fld3.fld5.0 = [(-812856842138002828_i64),8305881148188690762_i64,4463643844523879969_i64,1885002717051274575_i64];
_15 = core::ptr::addr_of!(_8.fld3.fld5.0);
_28 = _2;
_17 = core::ptr::addr_of!(_18);
_21.fld4.fld3.fld3 = core::ptr::addr_of!(_19.4);
_7 = core::ptr::addr_of_mut!((*_7));
(*_23) = core::ptr::addr_of!(_7);
Goto(bb13)
}
bb13 = {
_19.0 = !(-56_i8);
_19.4 = 506389874_u32 as u8;
_12.fld0 = _8.fld3.fld1;
_8.fld3.fld0 = core::ptr::addr_of_mut!(_6.fld1.3);
_21.fld4.fld0.0 = _8.fld2.fld4 as usize;
_21.fld4.fld3.fld2 = _21.fld4.fld0.3 as f64;
_16 = _6.fld1.3;
_16 = [_8.fld2.fld4,_8.fld2.fld4,_8.fld2.fld4];
_21.fld4.fld5 = _6.fld1.2 / f64::INFINITY;
_21.fld4.fld3.fld5 = _14;
_19.1 = [(*_17),(*_17),(*_17),(*_17),(*_17),_18];
_21.fld4.fld3.fld3 = core::ptr::addr_of!(_19.4);
_2 = _28;
(*_15) = _19.2;
_16 = [_6.fld4,_8.fld2.fld4,_6.fld4];
_7 = core::ptr::addr_of_mut!(_21.fld4.fld3.fld5.2);
_8.fld2.fld1.4 = core::ptr::addr_of_mut!(_16);
_21.fld4.fld1 = core::ptr::addr_of!(_12.fld0);
_8.fld2.fld1.4 = core::ptr::addr_of_mut!(_6.fld1.3);
_8.fld3.fld5.2 = !_19.3;
match _20 {
0 => bb5,
1 => bb10,
2 => bb3,
48925 => bb14,
_ => bb11
}
}
bb14 = {
_21.fld4.fld0.1 = core::ptr::addr_of_mut!((*_23));
_13.fld2 = [_8.fld2.fld4,_8.fld2.fld4,_6.fld4,_8.fld2.fld4,_8.fld2.fld4];
_21.fld4.fld0.3 = !_9;
(*_7) = -_19.3;
_6.fld5 = _8.fld2.fld5;
_8.fld3.fld5.1 = _28;
_13.fld2 = [_8.fld2.fld4,_8.fld2.fld4,_6.fld4,_6.fld4,_6.fld4];
(*_23) = core::ptr::addr_of!(_7);
(*_15) = [(-5548944237020774407_i64),(-550515735220187948_i64),8137068887274968375_i64,9073253833941708809_i64];
RET.0 = _5;
_8.fld3.fld1 = [(*_7),_21.fld4.fld3.fld5.2];
_4 = !_5;
Goto(bb15)
}
bb15 = {
Call(_36 = dump_var(2_usize, 5_usize, Move(_5), 28_usize, Move(_28), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_36 = dump_var(2_usize, 19_usize, Move(_19), 18_usize, Move(_18), 37_usize, _37, 37_usize, _37), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: char,mut _2: char,mut _3: char,mut _4: char,mut _5: char,mut _6: char,mut _7: char,mut _8: char,mut _9: char) -> char {
mir! {
type RET = char;
let _10: [i64; 4];
let _11: [u8; 5];
let _12: Adt61;
let _13: u128;
let _14: [i128; 3];
let _15: *const *const bool;
let _16: f64;
let _17: isize;
let _18: Adt54;
let _19: f32;
let _20: Adt58;
let _21: [i16; 5];
let _22: [i128; 3];
let _23: [i64; 7];
let _24: *mut *const *mut i128;
let _25: [i64; 7];
let _26: f64;
let _27: u64;
let _28: u128;
let _29: [i64; 7];
let _30: (*const *mut i128, *const i64, f64, [i16; 3], *mut [i16; 3]);
let _31: u16;
let _32: isize;
let _33: u8;
let _34: i32;
let _35: i32;
let _36: [i64; 6];
let _37: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _38: f32;
let _39: ();
let _40: ();
{
_8 = _1;
_4 = _1;
_3 = _8;
RET = _8;
_8 = _6;
RET = _5;
_6 = _3;
_1 = _8;
_10 = [4156010589253678163_i64,2923787516359489521_i64,127558700823936619_i64,3573607719556432047_i64];
_2 = _3;
_2 = _7;
RET = _2;
_6 = _2;
Call(RET = fn4(_3, _9, _1, _10, _8, _8, _5, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_5 = _7;
_1 = _6;
_6 = _7;
_8 = _4;
_4 = _2;
_1 = _7;
_5 = _6;
_6 = _8;
_4 = _9;
_2 = _7;
_13 = 216757832661062996827531306171311221065_u128;
_1 = _9;
Goto(bb2)
}
bb2 = {
_3 = _1;
_7 = _9;
_12.fld0 = [71269961613675466886495546564809622296_i128,94341234302729245896662239395138885693_i128];
RET = _4;
_3 = _4;
_3 = _9;
_2 = _1;
_7 = _9;
_6 = _4;
RET = _9;
_12.fld0 = [(-15998135375466312818451442903068386421_i128),(-162746058995481717805247668454963284473_i128)];
_12.fld1 = [1163521469046637256_i64,6738703550125905975_i64,7321786452672515157_i64,7861906326346457864_i64,(-2151573129522255366_i64),2199737591686649180_i64,7307222305837333520_i64];
_10 = [3563034526883821857_i64,(-2490034902443656017_i64),(-6997906434273731111_i64),(-3843706055902912091_i64)];
_14 = [(-111081922043723637887069850213999600263_i128),62381059973981347737088383515816112531_i128,(-134567521818534738172003854569817968063_i128)];
_11 = [242_u8,62_u8,101_u8,246_u8,221_u8];
_1 = _5;
_2 = _6;
_3 = _4;
_1 = _3;
_7 = _3;
_12.fld0 = [(-109254453640647628130077060001744203538_i128),10133355780041789981077117635493772142_i128];
_4 = _2;
_16 = 1_usize as f64;
_9 = _2;
_5 = _3;
_9 = _6;
_9 = _1;
_16 = 34727_u16 as f64;
_9 = _5;
Goto(bb3)
}
bb3 = {
RET = _6;
_10 = [8372555218456459349_i64,4760972592900694748_i64,5296345923484038998_i64,(-3480253316742656096_i64)];
_1 = _9;
_18.fld4.fld5.0 = [8073954362180778204_i64,(-89922308224570997_i64),(-6538828945680509968_i64),3441356580069612932_i64];
_11 = [223_u8,220_u8,230_u8,89_u8,107_u8];
_18.fld0.3 = !594660217061308527_u64;
_18.fld4.fld4 = _18.fld0.3 << _13;
_14 = [157001767396102919224245485118211961402_i128,(-42496332641321125760461949797822427968_i128),51628875340100297295049244716214621660_i128];
_18.fld3.1 = _9;
_18.fld4.fld5.0 = _10;
_18.fld3 = (_18.fld4.fld5.0, _6, (-140460187545327450922882831866486597308_i128));
_18.fld3.1 = _6;
_17 = (-9223372036854775808_isize) | (-19_isize);
_18.fld5 = !624823501_i32;
_18.fld0.0 = 138_u8 as usize;
_18.fld1.2 = [2382113950406968709_i64,7949833671718863807_i64,5774779399142500854_i64,4988947449857529562_i64];
_18.fld0.0 = 320845256904061286_usize;
_18.fld4.fld1 = [_18.fld3.2,_18.fld3.2];
_18.fld4.fld6 = _17 as i128;
_17 = 12619_i16 as isize;
_18.fld0.0 = 2_usize >> _18.fld3.2;
match _18.fld3.2 {
199822179375611012540491775565281614148 => bb5,
_ => bb4
}
}
bb4 = {
_3 = _1;
_7 = _9;
_12.fld0 = [71269961613675466886495546564809622296_i128,94341234302729245896662239395138885693_i128];
RET = _4;
_3 = _4;
_3 = _9;
_2 = _1;
_7 = _9;
_6 = _4;
RET = _9;
_12.fld0 = [(-15998135375466312818451442903068386421_i128),(-162746058995481717805247668454963284473_i128)];
_12.fld1 = [1163521469046637256_i64,6738703550125905975_i64,7321786452672515157_i64,7861906326346457864_i64,(-2151573129522255366_i64),2199737591686649180_i64,7307222305837333520_i64];
_10 = [3563034526883821857_i64,(-2490034902443656017_i64),(-6997906434273731111_i64),(-3843706055902912091_i64)];
_14 = [(-111081922043723637887069850213999600263_i128),62381059973981347737088383515816112531_i128,(-134567521818534738172003854569817968063_i128)];
_11 = [242_u8,62_u8,101_u8,246_u8,221_u8];
_1 = _5;
_2 = _6;
_3 = _4;
_1 = _3;
_7 = _3;
_12.fld0 = [(-109254453640647628130077060001744203538_i128),10133355780041789981077117635493772142_i128];
_4 = _2;
_16 = 1_usize as f64;
_9 = _2;
_5 = _3;
_9 = _6;
_9 = _1;
_16 = 34727_u16 as f64;
_9 = _5;
Goto(bb3)
}
bb5 = {
_18.fld5 = (-2092478540_i32);
_18.fld1.0 = 38_i8 | (-23_i8);
_14 = [_18.fld4.fld6,_18.fld3.2,_18.fld3.2];
_20.fld0.0 = -_17;
_18.fld0.2 = 19427_u16 as f32;
_18.fld1.3 = 20558_i16 as i128;
_18.fld2 = core::ptr::addr_of_mut!(_18.fld1);
_18.fld4.fld5 = (_10, _5, _18.fld3.2);
_18.fld0.0 = 662425873200819196_usize;
_11 = [51_u8,43_u8,119_u8,72_u8,25_u8];
_18.fld4.fld5.0 = [(-185958896085794787_i64),(-2033121443172657932_i64),(-856811451453936894_i64),6679345959672114432_i64];
_18.fld4.fld5.0 = [6494707564709832038_i64,(-6224057834546161918_i64),(-8487547728927616770_i64),7861860680441615859_i64];
_18.fld1.2 = _18.fld3.0;
_18.fld4.fld4 = _18.fld0.3;
_18.fld2 = core::ptr::addr_of_mut!(_18.fld1);
_20.fld0 = (_17,);
_18.fld1.3 = _18.fld4.fld5.2;
_18.fld4.fld6 = _18.fld1.3;
_10 = [(-477507197477920097_i64),8818204724681736137_i64,(-6476503526705493285_i64),(-3991530343805784039_i64)];
Goto(bb6)
}
bb6 = {
_18.fld0.3 = !_18.fld4.fld4;
_18.fld1.4 = _13 as u8;
_10 = _18.fld4.fld5.0;
_19 = _20.fld0.0 as f32;
_8 = _9;
_16 = 473994128_u32 as f64;
_22 = [_18.fld1.3,_18.fld3.2,_18.fld3.2];
_18.fld4.fld4 = false as u64;
_9 = _8;
_18.fld4.fld5.1 = _3;
_8 = _6;
_18.fld1.3 = 18940_u16 as i128;
_18.fld1.3 = !_18.fld4.fld5.2;
_4 = _5;
_10 = [7784046959366315763_i64,7417869445475081484_i64,(-4585418497987679759_i64),(-2819963543769077415_i64)];
_25 = _12.fld1;
_17 = _20.fld0.0 * _20.fld0.0;
_8 = _1;
_2 = _3;
_21 = [9453_i16,30166_i16,(-26688_i16),26006_i16,20776_i16];
_20.fld0.0 = -_17;
_12 = Adt61 { fld0: _18.fld4.fld1,fld1: _25 };
_11 = [_18.fld1.4,_18.fld1.4,_18.fld1.4,_18.fld1.4,_18.fld1.4];
_20.fld1 = _18.fld1.4;
_1 = _4;
_4 = _1;
match _18.fld4.fld5.2 {
0 => bb3,
1 => bb2,
2 => bb7,
3 => bb8,
199822179375611012540491775565281614148 => bb10,
_ => bb9
}
}
bb7 = {
_5 = _7;
_1 = _6;
_6 = _7;
_8 = _4;
_4 = _2;
_1 = _7;
_5 = _6;
_6 = _8;
_4 = _9;
_2 = _7;
_13 = 216757832661062996827531306171311221065_u128;
_1 = _9;
Goto(bb2)
}
bb8 = {
_3 = _1;
_7 = _9;
_12.fld0 = [71269961613675466886495546564809622296_i128,94341234302729245896662239395138885693_i128];
RET = _4;
_3 = _4;
_3 = _9;
_2 = _1;
_7 = _9;
_6 = _4;
RET = _9;
_12.fld0 = [(-15998135375466312818451442903068386421_i128),(-162746058995481717805247668454963284473_i128)];
_12.fld1 = [1163521469046637256_i64,6738703550125905975_i64,7321786452672515157_i64,7861906326346457864_i64,(-2151573129522255366_i64),2199737591686649180_i64,7307222305837333520_i64];
_10 = [3563034526883821857_i64,(-2490034902443656017_i64),(-6997906434273731111_i64),(-3843706055902912091_i64)];
_14 = [(-111081922043723637887069850213999600263_i128),62381059973981347737088383515816112531_i128,(-134567521818534738172003854569817968063_i128)];
_11 = [242_u8,62_u8,101_u8,246_u8,221_u8];
_1 = _5;
_2 = _6;
_3 = _4;
_1 = _3;
_7 = _3;
_12.fld0 = [(-109254453640647628130077060001744203538_i128),10133355780041789981077117635493772142_i128];
_4 = _2;
_16 = 1_usize as f64;
_9 = _2;
_5 = _3;
_9 = _6;
_9 = _1;
_16 = 34727_u16 as f64;
_9 = _5;
Goto(bb3)
}
bb9 = {
RET = _6;
_10 = [8372555218456459349_i64,4760972592900694748_i64,5296345923484038998_i64,(-3480253316742656096_i64)];
_1 = _9;
_18.fld4.fld5.0 = [8073954362180778204_i64,(-89922308224570997_i64),(-6538828945680509968_i64),3441356580069612932_i64];
_11 = [223_u8,220_u8,230_u8,89_u8,107_u8];
_18.fld0.3 = !594660217061308527_u64;
_18.fld4.fld4 = _18.fld0.3 << _13;
_14 = [157001767396102919224245485118211961402_i128,(-42496332641321125760461949797822427968_i128),51628875340100297295049244716214621660_i128];
_18.fld3.1 = _9;
_18.fld4.fld5.0 = _10;
_18.fld3 = (_18.fld4.fld5.0, _6, (-140460187545327450922882831866486597308_i128));
_18.fld3.1 = _6;
_17 = (-9223372036854775808_isize) | (-19_isize);
_18.fld5 = !624823501_i32;
_18.fld0.0 = 138_u8 as usize;
_18.fld1.2 = [2382113950406968709_i64,7949833671718863807_i64,5774779399142500854_i64,4988947449857529562_i64];
_18.fld0.0 = 320845256904061286_usize;
_18.fld4.fld1 = [_18.fld3.2,_18.fld3.2];
_18.fld4.fld6 = _17 as i128;
_17 = 12619_i16 as isize;
_18.fld0.0 = 2_usize >> _18.fld3.2;
match _18.fld3.2 {
199822179375611012540491775565281614148 => bb5,
_ => bb4
}
}
bb10 = {
_20.fld0 = (_17,);
_3 = _8;
_18.fld1.2 = [(-2230181941391140519_i64),(-1261691267707438952_i64),(-7620531556860498578_i64),3568773591193238579_i64];
_18.fld1.3 = -_18.fld4.fld6;
_18.fld4.fld5.0 = _18.fld3.0;
_20.fld0.0 = 5803519167968499005_i64 as isize;
_18.fld0.1 = core::ptr::addr_of_mut!(_30.0);
_23 = [627293523686243143_i64,6818086205220135534_i64,(-6480844642914550320_i64),4467718694248923786_i64,6569421156229859376_i64,(-6902065318347881684_i64),7845773337054211536_i64];
_27 = !_18.fld4.fld4;
_7 = _1;
_22 = [_18.fld4.fld5.2,_18.fld3.2,_18.fld1.3];
_17 = _20.fld0.0;
_14 = [_18.fld1.3,_18.fld1.3,_18.fld3.2];
_17 = (-6010141000105917792_i64) as isize;
_2 = _5;
_18.fld2 = core::ptr::addr_of_mut!(_18.fld1);
_18.fld0.0 = !3_usize;
_28 = _13;
match _13 {
216757832661062996827531306171311221065 => bb12,
_ => bb11
}
}
bb11 = {
_3 = _1;
_7 = _9;
_12.fld0 = [71269961613675466886495546564809622296_i128,94341234302729245896662239395138885693_i128];
RET = _4;
_3 = _4;
_3 = _9;
_2 = _1;
_7 = _9;
_6 = _4;
RET = _9;
_12.fld0 = [(-15998135375466312818451442903068386421_i128),(-162746058995481717805247668454963284473_i128)];
_12.fld1 = [1163521469046637256_i64,6738703550125905975_i64,7321786452672515157_i64,7861906326346457864_i64,(-2151573129522255366_i64),2199737591686649180_i64,7307222305837333520_i64];
_10 = [3563034526883821857_i64,(-2490034902443656017_i64),(-6997906434273731111_i64),(-3843706055902912091_i64)];
_14 = [(-111081922043723637887069850213999600263_i128),62381059973981347737088383515816112531_i128,(-134567521818534738172003854569817968063_i128)];
_11 = [242_u8,62_u8,101_u8,246_u8,221_u8];
_1 = _5;
_2 = _6;
_3 = _4;
_1 = _3;
_7 = _3;
_12.fld0 = [(-109254453640647628130077060001744203538_i128),10133355780041789981077117635493772142_i128];
_4 = _2;
_16 = 1_usize as f64;
_9 = _2;
_5 = _3;
_9 = _6;
_9 = _1;
_16 = 34727_u16 as f64;
_9 = _5;
Goto(bb3)
}
bb12 = {
_3 = _18.fld4.fld5.1;
_18.fld4.fld0 = core::ptr::addr_of_mut!(_30.3);
_33 = 2533880541_u32 as u8;
_20.fld1 = _33 / 195_u8;
_18.fld4.fld3 = core::ptr::addr_of!(_33);
RET = _4;
_29 = [3444376303256867701_i64,(-161113628201190248_i64),6141237481380579787_i64,583130976251209257_i64,(-611327483204523448_i64),(-5130990356233758115_i64),3264969180523340467_i64];
_18.fld0.0 = 557000735533396900_usize % 16321189332281333022_usize;
_6 = _5;
_3 = _9;
_26 = _18.fld4.fld4 as f64;
_1 = _9;
_18.fld4.fld5 = (_18.fld3.0, _9, _18.fld1.3);
_18.fld1.0 = -(-103_i8);
match _18.fld3.2 {
0 => bb10,
1 => bb11,
2 => bb9,
3 => bb8,
4 => bb5,
5 => bb6,
6 => bb13,
199822179375611012540491775565281614148 => bb15,
_ => bb14
}
}
bb13 = {
_5 = _7;
_1 = _6;
_6 = _7;
_8 = _4;
_4 = _2;
_1 = _7;
_5 = _6;
_6 = _8;
_4 = _9;
_2 = _7;
_13 = 216757832661062996827531306171311221065_u128;
_1 = _9;
Goto(bb2)
}
bb14 = {
_5 = _7;
_1 = _6;
_6 = _7;
_8 = _4;
_4 = _2;
_1 = _7;
_5 = _6;
_6 = _8;
_4 = _9;
_2 = _7;
_13 = 216757832661062996827531306171311221065_u128;
_1 = _9;
Goto(bb2)
}
bb15 = {
_18.fld1.2 = _18.fld4.fld5.0;
_16 = 3704841463_u32 as f64;
_18.fld0.2 = _19;
_18.fld4.fld6 = _18.fld4.fld5.2;
_12.fld0 = [_18.fld4.fld5.2,_18.fld1.3];
_24 = core::ptr::addr_of_mut!(_30.0);
_21 = [30852_i16,12750_i16,(-5582_i16),(-1355_i16),(-19905_i16)];
_32 = _17 >> _18.fld4.fld6;
_21 = [(-21647_i16),2561_i16,16587_i16,20035_i16,(-31097_i16)];
_30.3 = [20051_i16,(-17204_i16),(-8173_i16)];
_30.3 = [(-13522_i16),6484_i16,5360_i16];
_30.4 = _18.fld4.fld0;
_26 = 14814_i16 as f64;
_12.fld0 = [_18.fld1.3,_18.fld4.fld6];
_14 = [_18.fld4.fld6,_18.fld4.fld5.2,_18.fld3.2];
Goto(bb16)
}
bb16 = {
Call(_39 = dump_var(3_usize, 1_usize, Move(_1), 22_usize, Move(_22), 10_usize, Move(_10), 25_usize, Move(_25)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(3_usize, 33_usize, Move(_33), 8_usize, Move(_8), 29_usize, Move(_29), 4_usize, Move(_4)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_39 = dump_var(3_usize, 7_usize, Move(_7), 32_usize, Move(_32), 27_usize, Move(_27), 40_usize, _40), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn4(mut _1: char,mut _2: char,mut _3: char,mut _4: [i64; 4],mut _5: char,mut _6: char,mut _7: char,mut _8: [i64; 4]) -> char {
mir! {
type RET = char;
let _9: f64;
let _10: [i16; 5];
let _11: [u8; 5];
let _12: *mut [i16; 3];
let _13: Adt61;
let _14: bool;
let _15: isize;
let _16: char;
let _17: Adt58;
let _18: isize;
let _19: u64;
let _20: u64;
let _21: Adt52;
let _22: [bool; 6];
let _23: u128;
let _24: u8;
let _25: Adt56;
let _26: [i64; 4];
let _27: isize;
let _28: *const (i8, [bool; 6], [i64; 4], i128, u8);
let _29: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _30: isize;
let _31: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _32: Adt54;
let _33: bool;
let _34: ();
let _35: ();
{
_1 = _6;
RET = _7;
_4 = [(-2342573164278813181_i64),(-3801437269797819485_i64),(-5370986903107514385_i64),638219297662082287_i64];
_6 = _7;
_1 = _6;
_11 = [56_u8,255_u8,157_u8,125_u8,210_u8];
_8 = [(-125343946438356036_i64),(-4174714125902615469_i64),(-8996926836209987003_i64),(-2861542494175964622_i64)];
_9 = (-59166290188061109801679025079711874275_i128) as f64;
_4 = _8;
_11 = [174_u8,19_u8,177_u8,86_u8,16_u8];
_2 = _5;
_3 = _7;
_1 = _2;
_4 = [(-4109597352665238944_i64),(-6315359233062486658_i64),(-3859150812449883767_i64),159534149382455926_i64];
_2 = _7;
_3 = _5;
_7 = _5;
_13.fld0 = [109690688957130424982951138555338046777_i128,(-141911083060302940030951397109654642491_i128)];
RET = _1;
_13.fld0 = [46117333126614779331937799028230204341_i128,87656383748737851960248956112428654128_i128];
_13.fld1 = [(-4011891047881111138_i64),(-6835728039611193693_i64),(-6360316880351677995_i64),(-8155810732761768091_i64),(-7787689213689773928_i64),(-5011687375293377353_i64),1470504837593019763_i64];
Goto(bb1)
}
bb1 = {
_4 = [(-5848783803186309770_i64),4896913351305144765_i64,7062116909791940626_i64,7263128289017534731_i64];
_14 = false;
_1 = _6;
_15 = (-9223372036854775808_isize);
RET = _7;
_1 = _5;
_14 = false;
_18 = !_15;
_14 = false;
_12 = core::ptr::addr_of_mut!(_21.fld2.fld1.3);
_21.fld3.fld6 = (-99226528485375387090807441074801024671_i128) | 153286249799274139337586246219569758699_i128;
_21.fld3.fld4 = 213_u8 as u64;
_19 = _21.fld3.fld4 << _21.fld3.fld6;
_21.fld3.fld3 = core::ptr::addr_of!(_17.fld1);
(*_12) = [26317_i16,(-6605_i16),19702_i16];
_21.fld3.fld5 = (_8, _1, _21.fld3.fld6);
_9 = 10356_u16 as f64;
_9 = 55_i8 as f64;
_21.fld3.fld5.2 = (-751657241_i32) as i128;
RET = _2;
match _15 {
0 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
_21.fld2.fld2 = _11;
_12 = core::ptr::addr_of_mut!(_21.fld2.fld1.3);
_17.fld1 = 19_u8;
_21.fld2.fld5 = core::ptr::addr_of_mut!(_21.fld2.fld1.0);
_21.fld3.fld5.0 = [7793160829433080622_i64,(-3866725881922557685_i64),(-7565637834263304706_i64),(-2839704655970731329_i64)];
_17.fld0 = (_18,);
_21.fld3.fld0 = core::ptr::addr_of_mut!((*_12));
_5 = _7;
_21.fld3.fld5.1 = _1;
_21.fld2.fld3 = core::ptr::addr_of!(_14);
_2 = _5;
_17.fld0.0 = _15 >> _21.fld3.fld6;
_14 = !true;
_17.fld0 = (_15,);
Goto(bb5)
}
bb5 = {
_20 = _21.fld3.fld4;
_21.fld3.fld4 = _19;
_18 = _15 - _17.fld0.0;
_13.fld0 = [_21.fld3.fld5.2,_21.fld3.fld6];
_17.fld1 = !237_u8;
_6 = _3;
_21.fld2.fld4 = (-12780_i16);
_21.fld1 = core::ptr::addr_of_mut!(_21.fld2.fld1.0);
_21.fld2.fld4 = 27431_i16;
_25.fld2.fld4 = _21.fld2.fld4;
Call(_26 = fn5(_21.fld3.fld0, _21.fld3.fld4, _21.fld3.fld5.0, _15, _14, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
RET = _6;
_8 = [(-5967182364524286719_i64),(-7436559554650815079_i64),(-971930418028916604_i64),1854216191514331857_i64];
_10 = [_25.fld2.fld4,_25.fld2.fld4,_21.fld2.fld4,_21.fld2.fld4,_25.fld2.fld4];
_1 = _7;
_17.fld0 = (_18,);
_21.fld0 = [_14,_14,_14,_14,_14,_14];
_27 = !_15;
_23 = 196081775467247069430130938403290784678_u128;
_17.fld0.0 = _27;
_29.0.4 = 6_usize as u8;
_25.fld2.fld3 = _21.fld2.fld3;
_25.fld2.fld0 = core::ptr::addr_of_mut!(_29.0);
_16 = _21.fld3.fld5.1;
_25.fld7 = core::ptr::addr_of_mut!(_25.fld2.fld1.3);
_25.fld6 = _26;
_25.fld2.fld2 = [_29.0.4,_17.fld1,_17.fld1,_29.0.4,_29.0.4];
match _15 {
0 => bb7,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
340282366920938463454151235394913435648 => bb14,
_ => bb13
}
}
bb7 = {
_20 = _21.fld3.fld4;
_21.fld3.fld4 = _19;
_18 = _15 - _17.fld0.0;
_13.fld0 = [_21.fld3.fld5.2,_21.fld3.fld6];
_17.fld1 = !237_u8;
_6 = _3;
_21.fld2.fld4 = (-12780_i16);
_21.fld1 = core::ptr::addr_of_mut!(_21.fld2.fld1.0);
_21.fld2.fld4 = 27431_i16;
_25.fld2.fld4 = _21.fld2.fld4;
Call(_26 = fn5(_21.fld3.fld0, _21.fld3.fld4, _21.fld3.fld5.0, _15, _14, _3), ReturnTo(bb6), UnwindUnreachable())
}
bb8 = {
_21.fld2.fld2 = _11;
_12 = core::ptr::addr_of_mut!(_21.fld2.fld1.3);
_17.fld1 = 19_u8;
_21.fld2.fld5 = core::ptr::addr_of_mut!(_21.fld2.fld1.0);
_21.fld3.fld5.0 = [7793160829433080622_i64,(-3866725881922557685_i64),(-7565637834263304706_i64),(-2839704655970731329_i64)];
_17.fld0 = (_18,);
_21.fld3.fld0 = core::ptr::addr_of_mut!((*_12));
_5 = _7;
_21.fld3.fld5.1 = _1;
_21.fld2.fld3 = core::ptr::addr_of!(_14);
_2 = _5;
_17.fld0.0 = _15 >> _21.fld3.fld6;
_14 = !true;
_17.fld0 = (_15,);
Goto(bb5)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_4 = [(-5848783803186309770_i64),4896913351305144765_i64,7062116909791940626_i64,7263128289017534731_i64];
_14 = false;
_1 = _6;
_15 = (-9223372036854775808_isize);
RET = _7;
_1 = _5;
_14 = false;
_18 = !_15;
_14 = false;
_12 = core::ptr::addr_of_mut!(_21.fld2.fld1.3);
_21.fld3.fld6 = (-99226528485375387090807441074801024671_i128) | 153286249799274139337586246219569758699_i128;
_21.fld3.fld4 = 213_u8 as u64;
_19 = _21.fld3.fld4 << _21.fld3.fld6;
_21.fld3.fld3 = core::ptr::addr_of!(_17.fld1);
(*_12) = [26317_i16,(-6605_i16),19702_i16];
_21.fld3.fld5 = (_8, _1, _21.fld3.fld6);
_9 = 10356_u16 as f64;
_9 = 55_i8 as f64;
_21.fld3.fld5.2 = (-751657241_i32) as i128;
RET = _2;
match _15 {
0 => bb2,
340282366920938463454151235394913435648 => bb4,
_ => bb3
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_14 = true;
_21.fld2.fld1.3 = [_21.fld2.fld4,_21.fld2.fld4,_21.fld2.fld4];
_21.fld2.fld1.4 = core::ptr::addr_of_mut!(_25.fld2.fld1.3);
_21.fld3.fld5.1 = _2;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(4_usize, 18_usize, Move(_18), 27_usize, Move(_27), 19_usize, Move(_19), 20_usize, Move(_20)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(4_usize, 2_usize, Move(_2), 11_usize, Move(_11), 23_usize, Move(_23), 15_usize, Move(_15)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(4_usize, 5_usize, Move(_5), 35_usize, _35, 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5(mut _1: *mut [i16; 3],mut _2: u64,mut _3: [i64; 4],mut _4: isize,mut _5: bool,mut _6: char) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _7: isize;
let _8: char;
let _9: [u128; 2];
let _10: *mut [i16; 3];
let _11: [i16; 3];
let _12: *const *mut i128;
let _13: Adt58;
let _14: f64;
let _15: isize;
let _16: isize;
let _17: char;
let _18: bool;
let _19: (i8, [bool; 6], [i64; 4], i128, u8);
let _20: isize;
let _21: isize;
let _22: u8;
let _23: [u16; 6];
let _24: [i16; 5];
let _25: char;
let _26: f32;
let _27: u8;
let _28: u128;
let _29: *const u8;
let _30: f32;
let _31: ();
let _32: ();
{
(*_1) = [(-14298_i16),981_i16,(-1592_i16)];
RET = [6960826993909145124_i64,354459363246437767_i64,7923247318621518119_i64,(-5203621132663401897_i64)];
RET = [(-3809588907162507591_i64),(-3623968930669838494_i64),(-2577685820262205687_i64),(-5727717360999451765_i64)];
_7 = _4 & _4;
_7 = -_4;
_7 = _4;
_6 = '\u{bcd05}';
Call(_4 = fn6(_7, _6, _7, _6, _1, (*_1), _1, (*_1), _1, _7, _6), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_1) = [(-16609_i16),11104_i16,6022_i16];
(*_1) = [(-28251_i16),(-10448_i16),8078_i16];
_4 = _5 as isize;
_5 = !true;
_2 = 4871413509031852896_u64;
_5 = _4 < _4;
(*_1) = [28262_i16,(-14704_i16),(-17965_i16)];
_2 = 807075390867762778_u64;
_5 = true;
(*_1) = [(-10046_i16),(-12742_i16),(-16561_i16)];
_8 = _6;
_8 = _6;
_8 = _6;
RET = [435884249944746122_i64,(-3840518769518805688_i64),1371921210931417760_i64,(-6105192439489513329_i64)];
(*_1) = [30326_i16,31852_i16,(-30372_i16)];
_4 = !_7;
(*_1) = [(-7548_i16),27374_i16,32169_i16];
_7 = _4;
Goto(bb2)
}
bb2 = {
_5 = _2 == _2;
RET = [(-5493380916844666117_i64),4819954762516785863_i64,3560027390465751086_i64,(-1392697234403239838_i64)];
RET = [4019362305340752444_i64,(-555401762287416472_i64),(-8581863528528010782_i64),5276317265694408236_i64];
_8 = _6;
_3 = [7269383036495267159_i64,(-7651560821228578337_i64),(-7085402269851510577_i64),8969980522356746013_i64];
_8 = _6;
_5 = _6 == _8;
_11 = [6963_i16,(-19361_i16),11427_i16];
Goto(bb3)
}
bb3 = {
_8 = _6;
RET = [2434603641443979688_i64,(-5615867365223446755_i64),(-2369024520519513938_i64),(-6420241223571715433_i64)];
_5 = !true;
RET = [(-8825931008803366496_i64),2431514948328861577_i64,6153035094583953849_i64,1442411054425094171_i64];
_13.fld1 = !189_u8;
(*_1) = [13169_i16,(-21874_i16),5651_i16];
_4 = !_7;
_8 = _6;
_13.fld0.0 = _13.fld1 as isize;
_8 = _6;
_9 = [199158873124796752026713738217760833115_u128,124110201239018781654681316691035689933_u128];
_9 = [326124151870702194148427432105211992873_u128,306517114604504259524441450759013149027_u128];
_13.fld0.0 = !_4;
_1 = core::ptr::addr_of_mut!((*_1));
_13.fld0 = (_7,);
_11 = [(-4876_i16),(-18433_i16),(-4848_i16)];
(*_1) = [10679_i16,19930_i16,15933_i16];
_10 = core::ptr::addr_of_mut!(_11);
match _2 {
807075390867762778 => bb5,
_ => bb4
}
}
bb4 = {
_5 = _2 == _2;
RET = [(-5493380916844666117_i64),4819954762516785863_i64,3560027390465751086_i64,(-1392697234403239838_i64)];
RET = [4019362305340752444_i64,(-555401762287416472_i64),(-8581863528528010782_i64),5276317265694408236_i64];
_8 = _6;
_3 = [7269383036495267159_i64,(-7651560821228578337_i64),(-7085402269851510577_i64),8969980522356746013_i64];
_8 = _6;
_5 = _6 == _8;
_11 = [6963_i16,(-19361_i16),11427_i16];
Goto(bb3)
}
bb5 = {
_3 = [(-1497327445307286186_i64),(-1028713274555883822_i64),4302915151600931995_i64,(-4392819226307874747_i64)];
(*_10) = [(-6506_i16),(-27653_i16),22708_i16];
_8 = _6;
_5 = true | true;
_13.fld0.0 = _4;
_19.2 = [(-7554938324564728246_i64),(-6660564643104918139_i64),(-5016615382110186117_i64),1364691265984046590_i64];
_19.0 = (-14_i8);
_14 = 8500_u16 as f64;
_15 = _7 ^ _7;
_4 = _13.fld0.0;
_16 = _15 | _13.fld0.0;
_17 = _6;
_6 = _8;
_13.fld1 = 228_u8 / 51_u8;
_7 = -_4;
_1 = _10;
_19.4 = !_13.fld1;
_15 = _16 * _7;
Goto(bb6)
}
bb6 = {
(*_10) = [(-21119_i16),(-13512_i16),16456_i16];
_19.0 = (-46_i8);
_13.fld0 = (_15,);
_16 = _13.fld0.0;
_4 = _5 as isize;
_18 = !_5;
Goto(bb7)
}
bb7 = {
_10 = _1;
_19.1 = [_18,_18,_5,_18,_18,_18];
_20 = -_4;
_15 = _13.fld0.0 ^ _16;
_18 = !_5;
_13.fld1 = _19.4 % 170_u8;
_13.fld0.0 = 101152711777940002553841365969431962266_i128 as isize;
_21 = 31903_i16 as isize;
(*_1) = [22715_i16,124_i16,(-21800_i16)];
_3 = [(-9125100368729654681_i64),6125358973520061500_i64,(-2268910971864258361_i64),(-6536350363888405471_i64)];
Goto(bb8)
}
bb8 = {
_7 = _6 as isize;
_15 = 2593851742_u32 as isize;
_14 = 16893242861112080075_usize as f64;
_17 = _8;
_17 = _8;
_6 = _17;
Goto(bb9)
}
bb9 = {
_15 = _20 * _4;
_10 = core::ptr::addr_of_mut!(_11);
_24 = [13577_i16,(-12491_i16),17066_i16,(-14114_i16),(-9856_i16)];
_11 = [4215_i16,32124_i16,9134_i16];
_19.3 = 124267588773464833319073056525296664151_i128 >> _4;
_4 = 3762466341649512317_i64 as isize;
_19.2 = _3;
_20 = _19.3 as isize;
_16 = !_13.fld0.0;
_25 = _6;
_2 = 6568910070043981666_u64 ^ 3607770378680311722_u64;
RET = [4280237576758450552_i64,6006702205647819292_i64,2553971476289331210_i64,(-4896345434942984580_i64)];
_22 = _19.4;
_4 = _2 as isize;
_16 = _15 ^ _7;
_16 = !_15;
_16 = -_4;
_15 = _21 ^ _16;
_10 = _1;
_13.fld0 = (_16,);
_16 = 1030282297_i32 as isize;
_27 = _19.4;
(*_10) = [(-13169_i16),18763_i16,(-31956_i16)];
_15 = _14 as isize;
_25 = _6;
_13.fld0.0 = (-264132836_i32) as isize;
RET = [(-52994347822784444_i64),6773965578355416138_i64,6317174655881457159_i64,7621379055513153347_i64];
match _19.0 {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb7,
5 => bb10,
340282366920938463463374607431768211410 => bb12,
_ => bb11
}
}
bb10 = {
_7 = _6 as isize;
_15 = 2593851742_u32 as isize;
_14 = 16893242861112080075_usize as f64;
_17 = _8;
_17 = _8;
_6 = _17;
Goto(bb9)
}
bb11 = {
_8 = _6;
RET = [2434603641443979688_i64,(-5615867365223446755_i64),(-2369024520519513938_i64),(-6420241223571715433_i64)];
_5 = !true;
RET = [(-8825931008803366496_i64),2431514948328861577_i64,6153035094583953849_i64,1442411054425094171_i64];
_13.fld1 = !189_u8;
(*_1) = [13169_i16,(-21874_i16),5651_i16];
_4 = !_7;
_8 = _6;
_13.fld0.0 = _13.fld1 as isize;
_8 = _6;
_9 = [199158873124796752026713738217760833115_u128,124110201239018781654681316691035689933_u128];
_9 = [326124151870702194148427432105211992873_u128,306517114604504259524441450759013149027_u128];
_13.fld0.0 = !_4;
_1 = core::ptr::addr_of_mut!((*_1));
_13.fld0 = (_7,);
_11 = [(-4876_i16),(-18433_i16),(-4848_i16)];
(*_1) = [10679_i16,19930_i16,15933_i16];
_10 = core::ptr::addr_of_mut!(_11);
match _2 {
807075390867762778 => bb5,
_ => bb4
}
}
bb12 = {
_15 = (-29832_i16) as isize;
_24 = [10241_i16,(-17886_i16),(-27263_i16),32551_i16,(-22551_i16)];
_23 = [29140_u16,62939_u16,35098_u16,48348_u16,8271_u16,62545_u16];
_15 = 10644_u16 as isize;
_26 = 1554882399_i32 as f32;
_7 = _26 as isize;
_19.0 = _18 as i8;
_19.2 = _3;
_7 = _13.fld0.0;
_19.0 = (-36_i8);
_15 = _20 - _4;
_15 = _13.fld0.0 * _20;
_14 = _19.0 as f64;
_5 = !_18;
_19.4 = _13.fld1 - _13.fld1;
(*_10) = [17519_i16,(-1505_i16),31280_i16];
_13.fld1 = 2540519138_u32 as u8;
_21 = -_15;
_7 = _21 - _20;
_19.4 = !_13.fld1;
(*_10) = [(-11060_i16),(-29923_i16),9358_i16];
_21 = _16;
_16 = _7;
match _19.0 {
340282366920938463463374607431768211420 => bb13,
_ => bb9
}
}
bb13 = {
_2 = 43057_u16 as u64;
Goto(bb14)
}
bb14 = {
_6 = _25;
_10 = core::ptr::addr_of_mut!(_11);
_19.4 = !_22;
_16 = -_15;
(*_1) = [(-1890_i16),(-18811_i16),8504_i16];
(*_1) = [(-19722_i16),(-26961_i16),(-14254_i16)];
_13.fld0.0 = !_7;
_29 = core::ptr::addr_of!(_13.fld1);
_13.fld1 = !_22;
_7 = _13.fld0.0;
(*_10) = [(-25058_i16),(-25301_i16),14680_i16];
(*_29) = _27 % 169_u8;
_18 = _5;
_19.0 = 37_i8 << _15;
(*_1) = [(-21554_i16),(-25935_i16),(-18792_i16)];
_16 = !_13.fld0.0;
_11 = [(-7627_i16),27584_i16,9699_i16];
_30 = _26 - _26;
_18 = !_5;
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb15)
}
bb15 = {
Call(_31 = dump_var(5_usize, 7_usize, Move(_7), 27_usize, Move(_27), 23_usize, Move(_23), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_31 = dump_var(5_usize, 17_usize, Move(_17), 9_usize, Move(_9), 6_usize, Move(_6), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(5_usize, 8_usize, Move(_8), 25_usize, Move(_25), 32_usize, _32, 32_usize, _32), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: isize,mut _2: char,mut _3: isize,mut _4: char,mut _5: *mut [i16; 3],mut _6: [i16; 3],mut _7: *mut [i16; 3],mut _8: [i16; 3],mut _9: *mut [i16; 3],mut _10: isize,mut _11: char) -> isize {
mir! {
type RET = isize;
let _12: i16;
let _13: [i16; 3];
let _14: Adt54;
let _15: i16;
let _16: bool;
let _17: char;
let _18: [u16; 6];
let _19: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _20: [u16; 6];
let _21: *const ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _22: char;
let _23: *const i64;
let _24: ([i64; 4], char, i128);
let _25: [i16; 3];
let _26: (i8, [bool; 6], [i64; 4], i128, u8);
let _27: i128;
let _28: Adt64;
let _29: i32;
let _30: Adt54;
let _31: [u128; 2];
let _32: (isize,);
let _33: [bool; 6];
let _34: usize;
let _35: *const ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _36: isize;
let _37: i32;
let _38: Adt53;
let _39: [i128; 3];
let _40: bool;
let _41: i64;
let _42: [i128; 3];
let _43: f64;
let _44: [bool; 6];
let _45: [i128; 2];
let _46: isize;
let _47: (i8, [bool; 6], [i64; 4], i128, u8);
let _48: ([i64; 4], char, i128);
let _49: isize;
let _50: ();
let _51: ();
{
_1 = (-3070244545449643372_i64) as isize;
_9 = _5;
_4 = _2;
RET = _3 * _10;
(*_9) = [(-15975_i16),30809_i16,(-20598_i16)];
_8 = (*_5);
(*_5) = [(-8116_i16),12590_i16,6891_i16];
_10 = _3 * _1;
_3 = _1;
(*_7) = [(-29707_i16),(-24942_i16),(-27847_i16)];
_8 = (*_5);
(*_7) = [18137_i16,(-23724_i16),4586_i16];
_14.fld3.0 = [5000929592924810222_i64,2119026964568375553_i64,213787332783032389_i64,5444192205716108010_i64];
_13 = (*_9);
_14.fld1.1 = [false,true,false,false,true,true];
Goto(bb1)
}
bb1 = {
_14.fld3.1 = _4;
_14.fld1.1 = [true,true,false,true,false,true];
Call(_1 = fn7(_3, _9, _9, _3, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = _1;
_14.fld0.2 = 136657149592652883933702618075950469786_u128 as f32;
_14.fld3.0 = [(-1658899607558385248_i64),(-4295450524323257258_i64),(-235893100429488562_i64),2540844717202614672_i64];
_14.fld4.fld6 = -144062113519877746040309386485646878427_i128;
(*_5) = [20217_i16,(-3353_i16),13754_i16];
Call(_14.fld3.0 = fn12((*_9), _4, _14.fld4.fld6, _11, (*_7), _14.fld1.1, (*_9), (*_7), _9, _13, _13, (*_9), _7), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_16 = _14.fld3.1 == _11;
_11 = _4;
_14.fld4.fld5.2 = _14.fld4.fld6;
_19.0 = (115_i8, _14.fld1.1, _14.fld3.0, _14.fld4.fld6, 165_u8);
_14.fld4.fld1 = [_14.fld4.fld6,_19.0.3];
RET = _1;
_14.fld1.2 = _19.0.2;
_14.fld1.0 = _19.0.0;
_14.fld2 = core::ptr::addr_of_mut!(_14.fld1);
_14.fld4.fld0 = core::ptr::addr_of_mut!(_8);
_14.fld0.3 = 6721628343039204680_i64 as u64;
_13 = [4492_i16,30880_i16,(-4862_i16)];
_6 = [25659_i16,1405_i16,(-5220_i16)];
_1 = -_10;
_16 = false ^ false;
_14.fld1.4 = 7_usize as u8;
_19.0.0 = _19.0.3 as i8;
_14.fld0.2 = _10 as f32;
_14.fld3 = (_14.fld1.2, _11, _14.fld4.fld5.2);
_14.fld1 = _19.0;
_14.fld3.0 = [(-8344966786476021292_i64),5860452949513595585_i64,3624363017476785018_i64,(-6464058796398901927_i64)];
Goto(bb4)
}
bb4 = {
_8 = [32134_i16,28974_i16,(-16848_i16)];
_2 = _14.fld3.1;
_9 = _7;
_14.fld4.fld5.1 = _14.fld3.1;
_14.fld4.fld2 = _14.fld1.0 as f64;
_4 = _2;
_14.fld5 = !(-1607001249_i32);
_24.1 = _2;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _19.0.4 as f64;
_14.fld1.4 = _19.0.4;
_14.fld4.fld4 = (-5964613198864961769_i64) as u64;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _14.fld4.fld4 as f64;
_14.fld4.fld5 = _14.fld3;
Goto(bb5)
}
bb5 = {
_26.3 = _14.fld3.2;
_19.0 = _14.fld1;
_26.4 = _19.0.4;
_4 = _14.fld4.fld5.1;
_24.2 = -_26.3;
_14.fld1.4 = _26.4;
_28.fld4.fld3.fld1 = [_14.fld1.3,_14.fld4.fld5.2];
_28.fld4.fld3.fld5 = (_19.0.2, _14.fld3.1, _14.fld4.fld6);
_14.fld1.0 = _19.0.0;
_28.fld4.fld6 = core::ptr::addr_of!(_26);
_28.fld4.fld0.1 = core::ptr::addr_of_mut!(_28.fld5.fld0);
_14.fld5 = !(-1944106662_i32);
_14.fld4.fld5.0 = [(-6493589222956136893_i64),9073077574168331897_i64,2332245227911743740_i64,(-4959535743939684022_i64)];
_28.fld4.fld7 = -_26.3;
_24.0 = [(-6275298794026398510_i64),(-655553879885650269_i64),(-2523845500858673083_i64),6536195802582627020_i64];
_28.fld4.fld5 = _14.fld4.fld2 - _14.fld4.fld2;
Goto(bb6)
}
bb6 = {
_25 = (*_7);
_14.fld4.fld1 = [_19.0.3,_28.fld4.fld7];
_14.fld1.1 = [_16,_16,_16,_16,_16,_16];
_28.fld4.fld3.fld5.0 = [4716109117583872184_i64,4325538494692714306_i64,(-6316576211448356123_i64),(-5941837976439422253_i64)];
_30.fld4.fld5.1 = _11;
(*_9) = [32428_i16,(-21322_i16),(-26862_i16)];
_6 = [1783_i16,(-7492_i16),(-4259_i16)];
_30.fld0.3 = _14.fld1.3 as u64;
_14.fld4.fld3 = core::ptr::addr_of!(_26.4);
_30.fld4.fld0 = core::ptr::addr_of_mut!(_6);
_19.0.1 = [_16,_16,_16,_16,_16,_16];
_30.fld0.0 = !1917493487040802865_usize;
_19.0.2 = [(-1302666283343166043_i64),1181286196179224311_i64,2690002913297125949_i64,6174894168570790608_i64];
_14.fld4.fld5.1 = _4;
_27 = _14.fld3.2 + _14.fld3.2;
_24.2 = _16 as i128;
_14.fld1 = (_19.0.0, _19.0.1, _14.fld3.0, _27, _26.4);
_1 = _3;
_28.fld4.fld5 = _14.fld4.fld2;
_28.fld4.fld3.fld3 = core::ptr::addr_of!(_26.4);
_28.fld4.fld5 = -_14.fld4.fld2;
_14.fld1 = _19.0;
_30.fld1.3 = _19.0.3 | _14.fld4.fld6;
match _14.fld1.4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
165 => bb8,
_ => bb7
}
}
bb7 = {
_26.3 = _14.fld3.2;
_19.0 = _14.fld1;
_26.4 = _19.0.4;
_4 = _14.fld4.fld5.1;
_24.2 = -_26.3;
_14.fld1.4 = _26.4;
_28.fld4.fld3.fld1 = [_14.fld1.3,_14.fld4.fld5.2];
_28.fld4.fld3.fld5 = (_19.0.2, _14.fld3.1, _14.fld4.fld6);
_14.fld1.0 = _19.0.0;
_28.fld4.fld6 = core::ptr::addr_of!(_26);
_28.fld4.fld0.1 = core::ptr::addr_of_mut!(_28.fld5.fld0);
_14.fld5 = !(-1944106662_i32);
_14.fld4.fld5.0 = [(-6493589222956136893_i64),9073077574168331897_i64,2332245227911743740_i64,(-4959535743939684022_i64)];
_28.fld4.fld7 = -_26.3;
_24.0 = [(-6275298794026398510_i64),(-655553879885650269_i64),(-2523845500858673083_i64),6536195802582627020_i64];
_28.fld4.fld5 = _14.fld4.fld2 - _14.fld4.fld2;
Goto(bb6)
}
bb8 = {
_30.fld3.0 = [1453413299866821067_i64,(-3019783641792520753_i64),568296020081917352_i64,(-3766830146535354322_i64)];
_25 = [(-31141_i16),(-13307_i16),(-8321_i16)];
_28.fld4.fld3.fld5 = (_24.0, _2, _24.2);
_34 = _19.0.0 as usize;
(*_7) = [11250_i16,9306_i16,23556_i16];
RET = _10;
_28.fld4.fld2 = -_14.fld0.2;
_19.0.0 = _14.fld1.0;
match _19.0.4 {
0 => bb9,
1 => bb10,
165 => bb12,
_ => bb11
}
}
bb9 = {
_8 = [32134_i16,28974_i16,(-16848_i16)];
_2 = _14.fld3.1;
_9 = _7;
_14.fld4.fld5.1 = _14.fld3.1;
_14.fld4.fld2 = _14.fld1.0 as f64;
_4 = _2;
_14.fld5 = !(-1607001249_i32);
_24.1 = _2;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _19.0.4 as f64;
_14.fld1.4 = _19.0.4;
_14.fld4.fld4 = (-5964613198864961769_i64) as u64;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _14.fld4.fld4 as f64;
_14.fld4.fld5 = _14.fld3;
Goto(bb5)
}
bb10 = {
_25 = (*_7);
_14.fld4.fld1 = [_19.0.3,_28.fld4.fld7];
_14.fld1.1 = [_16,_16,_16,_16,_16,_16];
_28.fld4.fld3.fld5.0 = [4716109117583872184_i64,4325538494692714306_i64,(-6316576211448356123_i64),(-5941837976439422253_i64)];
_30.fld4.fld5.1 = _11;
(*_9) = [32428_i16,(-21322_i16),(-26862_i16)];
_6 = [1783_i16,(-7492_i16),(-4259_i16)];
_30.fld0.3 = _14.fld1.3 as u64;
_14.fld4.fld3 = core::ptr::addr_of!(_26.4);
_30.fld4.fld0 = core::ptr::addr_of_mut!(_6);
_19.0.1 = [_16,_16,_16,_16,_16,_16];
_30.fld0.0 = !1917493487040802865_usize;
_19.0.2 = [(-1302666283343166043_i64),1181286196179224311_i64,2690002913297125949_i64,6174894168570790608_i64];
_14.fld4.fld5.1 = _4;
_27 = _14.fld3.2 + _14.fld3.2;
_24.2 = _16 as i128;
_14.fld1 = (_19.0.0, _19.0.1, _14.fld3.0, _27, _26.4);
_1 = _3;
_28.fld4.fld5 = _14.fld4.fld2;
_28.fld4.fld3.fld3 = core::ptr::addr_of!(_26.4);
_28.fld4.fld5 = -_14.fld4.fld2;
_14.fld1 = _19.0;
_30.fld1.3 = _19.0.3 | _14.fld4.fld6;
match _14.fld1.4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
165 => bb8,
_ => bb7
}
}
bb11 = {
RET = _1;
_14.fld0.2 = 136657149592652883933702618075950469786_u128 as f32;
_14.fld3.0 = [(-1658899607558385248_i64),(-4295450524323257258_i64),(-235893100429488562_i64),2540844717202614672_i64];
_14.fld4.fld6 = -144062113519877746040309386485646878427_i128;
(*_5) = [20217_i16,(-3353_i16),13754_i16];
Call(_14.fld3.0 = fn12((*_9), _4, _14.fld4.fld6, _11, (*_7), _14.fld1.1, (*_9), (*_7), _9, _13, _13, (*_9), _7), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
_14.fld2 = core::ptr::addr_of_mut!(_19.0);
_14.fld1.4 = !_26.4;
_29 = _14.fld4.fld2 as i32;
_14.fld3.0 = _19.0.2;
_27 = _24.2;
_14.fld1.1 = _19.0.1;
_28.fld4.fld3.fld1 = [_14.fld4.fld5.2,_27];
Goto(bb13)
}
bb13 = {
_30.fld4.fld3 = _14.fld4.fld3;
(*_9) = _6;
_17 = _24.1;
_14.fld1.2 = [(-8935461967051162832_i64),(-764014506834985299_i64),(-7891518208516638308_i64),(-356605231832142904_i64)];
_28.fld4.fld5 = -_14.fld4.fld2;
_20 = [2384_u16,51288_u16,13515_u16,41664_u16,25445_u16,4215_u16];
_30.fld4 = Adt50 { fld0: _5,fld1: _28.fld4.fld3.fld1,fld2: _14.fld4.fld2,fld3: _28.fld4.fld3.fld3,fld4: _14.fld0.3,fld5: _24,fld6: _14.fld1.3 };
_12 = _14.fld1.0 as i16;
_30.fld4.fld3 = _14.fld4.fld3;
_14.fld3.1 = _28.fld4.fld3.fld5.1;
_11 = _24.1;
match _26.4 {
0 => bb14,
1 => bb15,
2 => bb16,
3 => bb17,
4 => bb18,
5 => bb19,
6 => bb20,
165 => bb22,
_ => bb21
}
}
bb14 = {
_14.fld2 = core::ptr::addr_of_mut!(_19.0);
_14.fld1.4 = !_26.4;
_29 = _14.fld4.fld2 as i32;
_14.fld3.0 = _19.0.2;
_27 = _24.2;
_14.fld1.1 = _19.0.1;
_28.fld4.fld3.fld1 = [_14.fld4.fld5.2,_27];
Goto(bb13)
}
bb15 = {
RET = _1;
_14.fld0.2 = 136657149592652883933702618075950469786_u128 as f32;
_14.fld3.0 = [(-1658899607558385248_i64),(-4295450524323257258_i64),(-235893100429488562_i64),2540844717202614672_i64];
_14.fld4.fld6 = -144062113519877746040309386485646878427_i128;
(*_5) = [20217_i16,(-3353_i16),13754_i16];
Call(_14.fld3.0 = fn12((*_9), _4, _14.fld4.fld6, _11, (*_7), _14.fld1.1, (*_9), (*_7), _9, _13, _13, (*_9), _7), ReturnTo(bb3), UnwindUnreachable())
}
bb16 = {
_25 = (*_7);
_14.fld4.fld1 = [_19.0.3,_28.fld4.fld7];
_14.fld1.1 = [_16,_16,_16,_16,_16,_16];
_28.fld4.fld3.fld5.0 = [4716109117583872184_i64,4325538494692714306_i64,(-6316576211448356123_i64),(-5941837976439422253_i64)];
_30.fld4.fld5.1 = _11;
(*_9) = [32428_i16,(-21322_i16),(-26862_i16)];
_6 = [1783_i16,(-7492_i16),(-4259_i16)];
_30.fld0.3 = _14.fld1.3 as u64;
_14.fld4.fld3 = core::ptr::addr_of!(_26.4);
_30.fld4.fld0 = core::ptr::addr_of_mut!(_6);
_19.0.1 = [_16,_16,_16,_16,_16,_16];
_30.fld0.0 = !1917493487040802865_usize;
_19.0.2 = [(-1302666283343166043_i64),1181286196179224311_i64,2690002913297125949_i64,6174894168570790608_i64];
_14.fld4.fld5.1 = _4;
_27 = _14.fld3.2 + _14.fld3.2;
_24.2 = _16 as i128;
_14.fld1 = (_19.0.0, _19.0.1, _14.fld3.0, _27, _26.4);
_1 = _3;
_28.fld4.fld5 = _14.fld4.fld2;
_28.fld4.fld3.fld3 = core::ptr::addr_of!(_26.4);
_28.fld4.fld5 = -_14.fld4.fld2;
_14.fld1 = _19.0;
_30.fld1.3 = _19.0.3 | _14.fld4.fld6;
match _14.fld1.4 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb5,
165 => bb8,
_ => bb7
}
}
bb17 = {
_8 = [32134_i16,28974_i16,(-16848_i16)];
_2 = _14.fld3.1;
_9 = _7;
_14.fld4.fld5.1 = _14.fld3.1;
_14.fld4.fld2 = _14.fld1.0 as f64;
_4 = _2;
_14.fld5 = !(-1607001249_i32);
_24.1 = _2;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _19.0.4 as f64;
_14.fld1.4 = _19.0.4;
_14.fld4.fld4 = (-5964613198864961769_i64) as u64;
_2 = _14.fld4.fld5.1;
_14.fld4.fld2 = _14.fld4.fld4 as f64;
_14.fld4.fld5 = _14.fld3;
Goto(bb5)
}
bb18 = {
_30.fld3.0 = [1453413299866821067_i64,(-3019783641792520753_i64),568296020081917352_i64,(-3766830146535354322_i64)];
_25 = [(-31141_i16),(-13307_i16),(-8321_i16)];
_28.fld4.fld3.fld5 = (_24.0, _2, _24.2);
_34 = _19.0.0 as usize;
(*_7) = [11250_i16,9306_i16,23556_i16];
RET = _10;
_28.fld4.fld2 = -_14.fld0.2;
_19.0.0 = _14.fld1.0;
match _19.0.4 {
0 => bb9,
1 => bb10,
165 => bb12,
_ => bb11
}
}
bb19 = {
_14.fld3.1 = _4;
_14.fld1.1 = [true,true,false,true,false,true];
Call(_1 = fn7(_3, _9, _9, _3, _5), ReturnTo(bb2), UnwindUnreachable())
}
bb20 = {
RET = _1;
_14.fld0.2 = 136657149592652883933702618075950469786_u128 as f32;
_14.fld3.0 = [(-1658899607558385248_i64),(-4295450524323257258_i64),(-235893100429488562_i64),2540844717202614672_i64];
_14.fld4.fld6 = -144062113519877746040309386485646878427_i128;
(*_5) = [20217_i16,(-3353_i16),13754_i16];
Call(_14.fld3.0 = fn12((*_9), _4, _14.fld4.fld6, _11, (*_7), _14.fld1.1, (*_9), (*_7), _9, _13, _13, (*_9), _7), ReturnTo(bb3), UnwindUnreachable())
}
bb21 = {
_16 = _14.fld3.1 == _11;
_11 = _4;
_14.fld4.fld5.2 = _14.fld4.fld6;
_19.0 = (115_i8, _14.fld1.1, _14.fld3.0, _14.fld4.fld6, 165_u8);
_14.fld4.fld1 = [_14.fld4.fld6,_19.0.3];
RET = _1;
_14.fld1.2 = _19.0.2;
_14.fld1.0 = _19.0.0;
_14.fld2 = core::ptr::addr_of_mut!(_14.fld1);
_14.fld4.fld0 = core::ptr::addr_of_mut!(_8);
_14.fld0.3 = 6721628343039204680_i64 as u64;
_13 = [4492_i16,30880_i16,(-4862_i16)];
_6 = [25659_i16,1405_i16,(-5220_i16)];
_1 = -_10;
_16 = false ^ false;
_14.fld1.4 = 7_usize as u8;
_19.0.0 = _19.0.3 as i8;
_14.fld0.2 = _10 as f32;
_14.fld3 = (_14.fld1.2, _11, _14.fld4.fld5.2);
_14.fld1 = _19.0;
_14.fld3.0 = [(-8344966786476021292_i64),5860452949513595585_i64,3624363017476785018_i64,(-6464058796398901927_i64)];
Goto(bb4)
}
bb22 = {
_30.fld0.3 = _14.fld1.4 as u64;
_30.fld1.2 = _24.0;
_28.fld3 = _30.fld4.fld2;
_30.fld1.4 = !_19.0.4;
_28.fld4.fld3.fld5.0 = [(-5676129760853195418_i64),(-4562389766153012103_i64),3675632923878158200_i64,(-5163824545122276607_i64)];
_14.fld0.3 = !_30.fld0.3;
_14.fld1 = (_19.0.0, _19.0.1, _30.fld3.0, _14.fld4.fld5.2, _26.4);
_30.fld5 = !_29;
_39 = [_28.fld4.fld3.fld5.2,_30.fld4.fld5.2,_19.0.3];
_14.fld3.0 = [(-4280735034591108863_i64),(-5077385677601441282_i64),(-1450041601897306983_i64),(-2268952005417586857_i64)];
_30.fld4.fld5.2 = _14.fld0.2 as i128;
_26.1 = _19.0.1;
_28.fld4.fld0.0 = _30.fld5 as usize;
_33 = _26.1;
_26.2 = [4896909897379459105_i64,3267967053718187898_i64,(-8823837152916359535_i64),(-1088201311616385466_i64)];
_28.fld4.fld3.fld0 = _5;
_28.fld1 = core::ptr::addr_of!(_41);
_32.0 = _1;
_22 = _30.fld4.fld5.1;
_14.fld0.1 = core::ptr::addr_of_mut!(_38.fld0);
_5 = _9;
_30.fld1 = (_14.fld1.0, _33, _14.fld3.0, _24.2, _19.0.4);
_24.0 = [4679017765623133979_i64,(-7875409564453935045_i64),803665971948554184_i64,1235121298508389916_i64];
_11 = _4;
_48.1 = _14.fld4.fld5.1;
_40 = !_16;
Goto(bb23)
}
bb23 = {
Call(_50 = dump_var(6_usize, 12_usize, Move(_12), 33_usize, Move(_33), 10_usize, Move(_10), 8_usize, Move(_8)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_50 = dump_var(6_usize, 24_usize, Move(_24), 39_usize, Move(_39), 17_usize, Move(_17), 27_usize, Move(_27)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Call(_50 = dump_var(6_usize, 40_usize, Move(_40), 34_usize, Move(_34), 20_usize, Move(_20), 29_usize, Move(_29)), ReturnTo(bb26), UnwindUnreachable())
}
bb26 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: isize,mut _2: *mut [i16; 3],mut _3: *mut [i16; 3],mut _4: isize,mut _5: *mut [i16; 3]) -> isize {
mir! {
type RET = isize;
let _6: [i16; 5];
let _7: bool;
let _8: f64;
let _9: [i64; 7];
let _10: isize;
let _11: isize;
let _12: [u8; 5];
let _13: isize;
let _14: Adt60;
let _15: i8;
let _16: ([i64; 4], char, i128);
let _17: [bool; 6];
let _18: u16;
let _19: [i16; 3];
let _20: [i128; 2];
let _21: Adt60;
let _22: [i16; 3];
let _23: u128;
let _24: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _25: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _26: [i64; 7];
let _27: [i64; 6];
let _28: [u16; 6];
let _29: f64;
let _30: [i16; 5];
let _31: bool;
let _32: i32;
let _33: ();
let _34: ();
{
(*_2) = [22612_i16,(-14893_i16),(-16576_i16)];
Goto(bb1)
}
bb1 = {
_6 = [9497_i16,10237_i16,8892_i16,8561_i16,9391_i16];
_8 = 59542_u16 as f64;
_5 = core::ptr::addr_of_mut!((*_3));
(*_3) = [(-26704_i16),24358_i16,(-16654_i16)];
Call(RET = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
(*_3) = [14837_i16,(-31483_i16),(-9880_i16)];
(*_3) = [(-9831_i16),(-3687_i16),12479_i16];
_3 = _2;
(*_5) = [(-12697_i16),(-11656_i16),(-22752_i16)];
_9 = [(-3890181190340015781_i64),(-905008319796623103_i64),3564419368977193908_i64,8849219938455616506_i64,(-2439103946297741847_i64),2315121401741943470_i64,(-3466059049796089617_i64)];
Goto(bb3)
}
bb3 = {
_2 = _5;
_8 = 33286_u16 as f64;
_12 = [189_u8,186_u8,51_u8,196_u8,209_u8];
_10 = -_4;
_5 = core::ptr::addr_of_mut!((*_3));
_2 = core::ptr::addr_of_mut!((*_5));
(*_3) = [(-23006_i16),(-15239_i16),(-28734_i16)];
_9 = [5577873653193329295_i64,2901554092542194788_i64,(-361780476422954388_i64),6694465106140349896_i64,591164122275544966_i64,(-6032159309266480092_i64),(-4870442771121583804_i64)];
(*_2) = [10_i16,(-29785_i16),11609_i16];
_12 = [58_u8,138_u8,0_u8,1_u8,196_u8];
_11 = 28971891587263787416818082899965398239_u128 as isize;
(*_5) = [(-1440_i16),(-21574_i16),30462_i16];
_7 = _1 > _10;
(*_2) = [(-30408_i16),22716_i16,7670_i16];
(*_3) = [30546_i16,26962_i16,(-9339_i16)];
(*_5) = [4262_i16,(-12704_i16),(-11744_i16)];
_5 = core::ptr::addr_of_mut!((*_2));
_4 = _7 as isize;
_13 = -_11;
(*_5) = [(-15359_i16),30908_i16,3084_i16];
Goto(bb4)
}
bb4 = {
_6 = [7746_i16,11963_i16,(-14048_i16),(-23585_i16),3490_i16];
_6 = [17060_i16,(-24709_i16),(-18030_i16),(-3540_i16),(-20559_i16)];
_6 = [(-19753_i16),(-1199_i16),(-4541_i16),17364_i16,(-13248_i16)];
_11 = _4;
(*_2) = [(-2409_i16),(-14023_i16),(-10976_i16)];
_10 = 13352820222518018812030148423032828424_u128 as isize;
_10 = _11 | _11;
_14.fld1.3 = 4205854849948175268_u64;
_14.fld0.fld2 = [(-12532_i16),3323_i16,12903_i16,(-17489_i16),16980_i16];
_10 = 56602_u16 as isize;
RET = -_13;
_14.fld0.fld2 = [(-21830_i16),(-22877_i16),23840_i16,(-16841_i16),(-30662_i16)];
RET = -_13;
_14.fld1.0 = !4_usize;
_14.fld1.2 = _8 as f32;
match _14.fld1.3 {
0 => bb2,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
4205854849948175268 => bb10,
_ => bb9
}
}
bb5 = {
_2 = _5;
_8 = 33286_u16 as f64;
_12 = [189_u8,186_u8,51_u8,196_u8,209_u8];
_10 = -_4;
_5 = core::ptr::addr_of_mut!((*_3));
_2 = core::ptr::addr_of_mut!((*_5));
(*_3) = [(-23006_i16),(-15239_i16),(-28734_i16)];
_9 = [5577873653193329295_i64,2901554092542194788_i64,(-361780476422954388_i64),6694465106140349896_i64,591164122275544966_i64,(-6032159309266480092_i64),(-4870442771121583804_i64)];
(*_2) = [10_i16,(-29785_i16),11609_i16];
_12 = [58_u8,138_u8,0_u8,1_u8,196_u8];
_11 = 28971891587263787416818082899965398239_u128 as isize;
(*_5) = [(-1440_i16),(-21574_i16),30462_i16];
_7 = _1 > _10;
(*_2) = [(-30408_i16),22716_i16,7670_i16];
(*_3) = [30546_i16,26962_i16,(-9339_i16)];
(*_5) = [4262_i16,(-12704_i16),(-11744_i16)];
_5 = core::ptr::addr_of_mut!((*_2));
_4 = _7 as isize;
_13 = -_11;
(*_5) = [(-15359_i16),30908_i16,3084_i16];
Goto(bb4)
}
bb6 = {
(*_3) = [14837_i16,(-31483_i16),(-9880_i16)];
(*_3) = [(-9831_i16),(-3687_i16),12479_i16];
_3 = _2;
(*_5) = [(-12697_i16),(-11656_i16),(-22752_i16)];
_9 = [(-3890181190340015781_i64),(-905008319796623103_i64),3564419368977193908_i64,8849219938455616506_i64,(-2439103946297741847_i64),2315121401741943470_i64,(-3466059049796089617_i64)];
Goto(bb3)
}
bb7 = {
_6 = [9497_i16,10237_i16,8892_i16,8561_i16,9391_i16];
_8 = 59542_u16 as f64;
_5 = core::ptr::addr_of_mut!((*_3));
(*_3) = [(-26704_i16),24358_i16,(-16654_i16)];
Call(RET = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
(*_3) = [29567_i16,7369_i16,31532_i16];
(*_5) = [15842_i16,30193_i16,(-31040_i16)];
_14.fld1.0 = !6_usize;
_8 = _14.fld1.0 as f64;
_14.fld1.3 = 9805448135821663288_u64 % 9637470544379284214_u64;
_3 = _2;
(*_5) = [23890_i16,(-7468_i16),(-156_i16)];
(*_5) = [26464_i16,(-25617_i16),997_i16];
_1 = _14.fld1.3 as isize;
(*_2) = [11206_i16,(-25357_i16),(-4399_i16)];
_2 = _3;
_14.fld1.3 = 264695319611714567_u64;
_17 = [_7,_7,_7,_7,_7,_7];
(*_2) = [9778_i16,(-25885_i16),28198_i16];
_8 = 1054101591_i32 as f64;
_8 = _14.fld1.2 as f64;
_9 = [2894142089095384950_i64,6363806901739820561_i64,9092446175244060227_i64,(-5321951330878254606_i64),(-3176360226902038991_i64),4049924503997603085_i64,(-5930460114086358458_i64)];
Call(_14.fld1.1 = fn8(_3, _4, _11, _10, (*_5), _6, _1, _4, _14.fld1.2, _9, (*_5), _14.fld0.fld2, _12, _4, _1, _11), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_6 = [11068_i16,26035_i16,20974_i16,2182_i16,(-18832_i16)];
_14.fld1.3 = 11966732067513018193_u64 % 2499277770331491197_u64;
_18 = !50818_u16;
_2 = core::ptr::addr_of_mut!((*_5));
_11 = 303863719228865758236022483989515659808_u128 as isize;
_13 = -_4;
_16.2 = (-86814611787348055910791749588971113062_i128) * 17789594572832043008599082882780351948_i128;
(*_3) = [(-7667_i16),(-13779_i16),(-25928_i16)];
_18 = 81_i8 as u16;
_5 = core::ptr::addr_of_mut!((*_2));
RET = _11 << _13;
_9 = [(-2048699691429509722_i64),8768615629917644375_i64,(-8198600293926488917_i64),7998564790644170829_i64,860459631614812823_i64,6723812982613542922_i64,5508293457501701940_i64];
_16.0 = [(-8929067989286969254_i64),5880089569058626874_i64,(-7241556284460351984_i64),(-5933012042087073750_i64)];
_14.fld0.fld2 = _6;
_16.1 = '\u{102aaa}';
_7 = false;
RET = _4 + _13;
_4 = _13 << _13;
_16.0 = [4242719375906982788_i64,6538822240854698001_i64,(-3342006446103064233_i64),5792301947125948692_i64];
_6 = _14.fld0.fld2;
_14.fld1.2 = 41_i8 as f32;
_16.0 = [(-3638043048169038424_i64),565553856275697123_i64,(-1150646140014969158_i64),(-2326483722826277783_i64)];
_7 = false ^ false;
Goto(bb12)
}
bb12 = {
_2 = core::ptr::addr_of_mut!((*_5));
_22 = (*_3);
(*_3) = [11203_i16,21260_i16,14530_i16];
_21.fld0.fld0 = core::ptr::addr_of!(_25.0.4);
_24.0.1 = [_7,_7,_7,_7,_7,_7];
_19 = [11126_i16,(-4374_i16),(-10491_i16)];
_25.0.1 = [_7,_7,_7,_7,_7,_7];
_22 = [(-20783_i16),29740_i16,1016_i16];
_24.0.3 = _14.fld1.0 as i128;
_24.0.2 = _16.0;
Goto(bb13)
}
bb13 = {
(*_5) = [6456_i16,23926_i16,9358_i16];
_25.0 = ((-119_i8), _17, _24.0.2, _16.2, 63_u8);
RET = _11 + _1;
_6 = [(-32499_i16),2547_i16,17141_i16,26341_i16,(-32340_i16)];
_23 = !68879219226783291064547158555306721759_u128;
_12 = [_25.0.4,_25.0.4,_25.0.4,_25.0.4,_25.0.4];
_20 = [_25.0.3,_16.2];
_9 = [(-789065302559996707_i64),(-7077112825558754888_i64),4829166856299976681_i64,588228021819948265_i64,7871013307735095243_i64,(-5956873356238758679_i64),(-4257338779954769960_i64)];
_24.0.2 = [9165498445711043202_i64,(-3820762469248975944_i64),(-7711035031467849190_i64),(-221282851771718906_i64)];
match _25.0.0 {
0 => bb14,
340282366920938463463374607431768211337 => bb16,
_ => bb15
}
}
bb14 = {
_2 = core::ptr::addr_of_mut!((*_5));
_22 = (*_3);
(*_3) = [11203_i16,21260_i16,14530_i16];
_21.fld0.fld0 = core::ptr::addr_of!(_25.0.4);
_24.0.1 = [_7,_7,_7,_7,_7,_7];
_19 = [11126_i16,(-4374_i16),(-10491_i16)];
_25.0.1 = [_7,_7,_7,_7,_7,_7];
_22 = [(-20783_i16),29740_i16,1016_i16];
_24.0.3 = _14.fld1.0 as i128;
_24.0.2 = _16.0;
Goto(bb13)
}
bb15 = {
_6 = [9497_i16,10237_i16,8892_i16,8561_i16,9391_i16];
_8 = 59542_u16 as f64;
_5 = core::ptr::addr_of_mut!((*_3));
(*_3) = [(-26704_i16),24358_i16,(-16654_i16)];
Call(RET = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb16 = {
_21.fld1.0 = _14.fld1.0 ^ _14.fld1.0;
_17 = [_7,_7,_7,_7,_7,_7];
_14.fld0.fld0 = core::ptr::addr_of!(_25.0.4);
_1 = _4 >> _25.0.4;
_6 = [6367_i16,31100_i16,3594_i16,9823_i16,14753_i16];
_24 = (_25.0,);
_25.0.1 = [_7,_7,_7,_7,_7,_7];
_22 = [(-28520_i16),(-27380_i16),23551_i16];
_29 = _8;
_11 = _10 & _1;
_12 = [_24.0.4,_24.0.4,_24.0.4,_24.0.4,_24.0.4];
_23 = 108865862378275368963216080404845300006_u128 << _1;
_14.fld0.fld2 = [(-14881_i16),(-17816_i16),21011_i16,(-30182_i16),(-29439_i16)];
_14.fld1.0 = _7 as usize;
_27 = [5072190648993061100_i64,1174186377787592199_i64,505744216446672058_i64,1433440637777862012_i64,(-8429416286970120601_i64),5871642993550142920_i64];
_20 = [_16.2,_16.2];
Goto(bb17)
}
bb17 = {
Call(_33 = dump_var(7_usize, 22_usize, Move(_22), 18_usize, Move(_18), 27_usize, Move(_27), 24_usize, Move(_24)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_33 = dump_var(7_usize, 17_usize, Move(_17), 1_usize, Move(_1), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_33 = dump_var(7_usize, 11_usize, Move(_11), 34_usize, _34, 34_usize, _34, 34_usize, _34), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: *mut [i16; 3],mut _2: isize,mut _3: isize,mut _4: isize,mut _5: [i16; 3],mut _6: [i16; 5],mut _7: isize,mut _8: isize,mut _9: f32,mut _10: [i64; 7],mut _11: [i16; 3],mut _12: [i16; 5],mut _13: [u8; 5],mut _14: isize,mut _15: isize,mut _16: isize) -> *mut *const *mut i128 {
mir! {
type RET = *mut *const *mut i128;
let _17: [u16; 6];
let _18: Adt50;
let _19: isize;
let _20: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _21: i128;
let _22: [i128; 3];
let _23: Adt51;
let _24: Adt63;
let _25: [i128; 3];
let _26: i32;
let _27: isize;
let _28: i32;
let _29: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _30: Adt59;
let _31: [i128; 2];
let _32: ();
let _33: ();
{
_2 = _7 >> _3;
_15 = 8805444653773052928_u64 as isize;
_17 = [10737_u16,61192_u16,16824_u16,16458_u16,48141_u16,13341_u16];
_2 = _3;
_2 = _8;
_3 = _2;
_7 = _9 as isize;
(*_1) = [4120_i16,8165_i16,(-27413_i16)];
_15 = 73887656825004287776962823571310589011_u128 as isize;
_18.fld5.1 = '\u{1d2f2}';
_9 = 4438135725595477750_u64 as f32;
_13 = [80_u8,243_u8,82_u8,147_u8,71_u8];
_18.fld5.0 = [7405977051472025759_i64,5246669620606927226_i64,1902564118180995646_i64,6803315166799794508_i64];
_18.fld5.0 = [(-3273582695130751128_i64),8646010472241007094_i64,(-2976069576810078424_i64),831558579282194219_i64];
_18.fld5.2 = 162129029346579225329846519796654877662_i128 * (-8107543122735338467958665941251679845_i128);
_18.fld6 = _18.fld5.2 ^ _18.fld5.2;
_18.fld1 = [_18.fld6,_18.fld5.2];
_19 = _7 << _2;
_18.fld4 = 10883861910008593424_u64;
Call(_20 = fn9(_18.fld1, _16, _6, _18.fld6, _12, _12, _11, _18.fld5.2, _2, _18.fld5, _6, _14, _18.fld6, _18.fld1, _3), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_14 = true as isize;
_1 = core::ptr::addr_of_mut!((*_1));
_10 = [8081742778987219247_i64,453721027307134197_i64,(-5495538608932542506_i64),(-4244970025144051192_i64),(-4533899504426288249_i64),(-957549056128923415_i64),(-2658820525507370265_i64)];
_8 = 31266_i16 as isize;
_20.0.3 = _20.0.0 as i128;
_14 = _3;
_18.fld5.1 = '\u{2d805}';
_9 = _20.0.4 as f32;
_18.fld5.2 = -_18.fld6;
_18.fld5 = (_20.0.2, '\u{19046}', _20.0.3);
_18.fld3 = core::ptr::addr_of!(_20.0.4);
_24.fld3 = _20;
_18.fld2 = (-1380802853_i32) as f64;
_18.fld5.0 = [(-7746486828083736627_i64),(-7551366382374392521_i64),(-440874748679995591_i64),8146175526200998283_i64];
_10 = [(-6435108084899285755_i64),(-8239329411424481948_i64),(-4412164089049062955_i64),(-244787032432887922_i64),5113483616822874656_i64,(-1573507995134204155_i64),(-8465816407741720519_i64)];
match _18.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
10883861910008593424 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_24.fld0 = _9;
_21 = _8 as i128;
RET = core::ptr::addr_of_mut!(_23.fld1.0);
_18.fld2 = _24.fld3.0.4 as f64;
Call(_24.fld3.0.2 = fn11(_16, _19, _15, _8, _15, _18.fld2, _18.fld3, _24.fld0, _14, _4, _12, _16, _6), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
_24.fld2 = core::ptr::addr_of!(_23.fld3);
Goto(bb11)
}
bb11 = {
RET = core::ptr::addr_of_mut!(_23.fld1.0);
_4 = (-17858_i16) as isize;
_25 = [_21,_18.fld5.2,_24.fld3.0.3];
_24.fld3.0.0 = -_20.0.0;
RET = core::ptr::addr_of_mut!((*RET));
_2 = _7;
_2 = -_8;
_1 = core::ptr::addr_of_mut!(_23.fld1.3);
(*_1) = _5;
_24.fld3.0.2 = _20.0.2;
_24.fld3.0 = _20.0;
_24.fld3.0.2 = [(-2275839167835197867_i64),(-7843793246303293135_i64),8295952342823094813_i64,(-6477408410132248371_i64)];
_18.fld5.1 = '\u{de467}';
_23.fld5 = core::ptr::addr_of_mut!((*RET));
_23.fld4 = !10407_i16;
_24.fld1 = [true,false,true,true,false,false];
_25 = [_18.fld5.2,_24.fld3.0.3,_18.fld6];
_5 = [_23.fld4,_23.fld4,_23.fld4];
_14 = _24.fld3.0.4 as isize;
_23.fld5 = core::ptr::addr_of_mut!((*RET));
_18.fld4 = 4614100988219715391_u64;
_25 = [_24.fld3.0.3,_21,_18.fld6];
match _18.fld4 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
4614100988219715391 => bb18,
_ => bb17
}
}
bb12 = {
_14 = true as isize;
_1 = core::ptr::addr_of_mut!((*_1));
_10 = [8081742778987219247_i64,453721027307134197_i64,(-5495538608932542506_i64),(-4244970025144051192_i64),(-4533899504426288249_i64),(-957549056128923415_i64),(-2658820525507370265_i64)];
_8 = 31266_i16 as isize;
_20.0.3 = _20.0.0 as i128;
_14 = _3;
_18.fld5.1 = '\u{2d805}';
_9 = _20.0.4 as f32;
_18.fld5.2 = -_18.fld6;
_18.fld5 = (_20.0.2, '\u{19046}', _20.0.3);
_18.fld3 = core::ptr::addr_of!(_20.0.4);
_24.fld3 = _20;
_18.fld2 = (-1380802853_i32) as f64;
_18.fld5.0 = [(-7746486828083736627_i64),(-7551366382374392521_i64),(-440874748679995591_i64),8146175526200998283_i64];
_10 = [(-6435108084899285755_i64),(-8239329411424481948_i64),(-4412164089049062955_i64),(-244787032432887922_i64),5113483616822874656_i64,(-1573507995134204155_i64),(-8465816407741720519_i64)];
match _18.fld4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
10883861910008593424 => bb9,
_ => bb8
}
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_24.fld3.0.4 = _18.fld4 as u8;
_23.fld2 = [_24.fld3.0.4,_24.fld3.0.4,_20.0.4,_24.fld3.0.4,_24.fld3.0.4];
_23.fld1.4 = core::ptr::addr_of_mut!((*_1));
_30.fld6.fld5 = (_20.0.2, _18.fld5.1, _21);
_30.fld3 = _9;
_29.3 = _18.fld4 as u16;
_24.fld3.0.0 = _24.fld0 as i8;
_30.fld6 = Adt50 { fld0: _1,fld1: _18.fld1,fld2: _18.fld2,fld3: _18.fld3,fld4: _18.fld4,fld5: _18.fld5,fld6: _20.0.3 };
_22 = [_18.fld6,_18.fld6,_21];
_4 = _3;
_30.fld0 = [46824862776410436040911585161924844868_u128,10981220398467661054138426319373101539_u128];
_29.1 = [true,true,false,true,true,false];
_27 = _3 + _4;
_29.5.0 = [6217695194779960168_i64,3416872223370232132_i64,1265234599070449792_i64,2272929056450650238_i64];
_3 = _19;
_14 = _15;
_30.fld1 = (_19,);
_23.fld1.2 = _18.fld5.2 as f64;
_18.fld2 = _30.fld6.fld2;
_20.0.4 = _24.fld3.0.4;
_18.fld1 = [_18.fld6,_21];
_25 = _22;
_29.5 = _30.fld6.fld5;
Goto(bb19)
}
bb19 = {
Call(_32 = dump_var(8_usize, 15_usize, Move(_15), 6_usize, Move(_6), 13_usize, Move(_13), 7_usize, Move(_7)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_32 = dump_var(8_usize, 17_usize, Move(_17), 21_usize, Move(_21), 12_usize, Move(_12), 19_usize, Move(_19)), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Call(_32 = dump_var(8_usize, 11_usize, Move(_11), 22_usize, Move(_22), 33_usize, _33, 33_usize, _33), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: [i128; 2],mut _2: isize,mut _3: [i16; 5],mut _4: i128,mut _5: [i16; 5],mut _6: [i16; 5],mut _7: [i16; 3],mut _8: i128,mut _9: isize,mut _10: ([i64; 4], char, i128),mut _11: [i16; 5],mut _12: isize,mut _13: i128,mut _14: [i128; 2],mut _15: isize) -> ((i8, [bool; 6], [i64; 4], i128, u8),) {
mir! {
type RET = ((i8, [bool; 6], [i64; 4], i128, u8),);
let _16: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _17: [u128; 2];
let _18: Adt49;
let _19: Adt55;
let _20: u16;
let _21: [u8; 5];
let _22: i128;
let _23: isize;
let _24: u128;
let _25: isize;
let _26: [bool; 6];
let _27: *const [i64; 4];
let _28: Adt61;
let _29: ();
let _30: ();
{
_8 = !_4;
_16.0 = [71_u8,10_u8,252_u8,134_u8,164_u8];
_12 = _2;
RET.0.1 = [false,true,false,false,false,false];
RET.0.1 = [true,true,true,false,false,true];
_16.5.1 = _10.1;
RET.0.0 = (-30_i8) - 14_i8;
_19.fld1.fld0 = core::ptr::addr_of_mut!(_19.fld0.fld1);
_19.fld1.fld5 = core::ptr::addr_of_mut!(_19.fld2.fld2.fld1.0);
_16.5.2 = _8 >> _13;
_18.fld0 = core::ptr::addr_of!(_19.fld0.fld1.4);
_19.fld0.fld3 = (_10.0, _16.5.1, _16.5.2);
_10 = (_19.fld0.fld3.0, _16.5.1, _19.fld0.fld3.2);
_19.fld0.fld4.fld5.1 = _10.1;
_19.fld0.fld3.1 = _19.fld0.fld4.fld5.1;
Goto(bb1)
}
bb1 = {
_19.fld0.fld3 = _10;
_16.0 = [37_u8,96_u8,188_u8,56_u8,216_u8];
_19.fld0.fld4.fld6 = _8 >> _19.fld0.fld3.2;
_22 = -_13;
_2 = !_9;
_19.fld2.fld2.fld2 = [206_u8,50_u8,34_u8,117_u8,221_u8];
_19.fld0.fld1.0 = _19.fld0.fld3.1 as i8;
_19.fld2.fld3.fld6 = 245_u8 as i128;
_19.fld2.fld0 = [false,true,true,true,false,false];
_19.fld2.fld3.fld5.0 = [(-547133596933479278_i64),(-7776588623546616773_i64),(-5041347836844907472_i64),5048214668891889656_i64];
_16.1 = [false,false,false,false,false,false];
_19.fld0.fld5 = -43996783_i32;
_16.5.1 = _19.fld0.fld4.fld5.1;
_19.fld2.fld3.fld2 = 20_u8 as f64;
_16.2.3 = 6336139186141584913_u64 ^ 4108267292885227191_u64;
_6 = [4204_i16,5914_i16,23624_i16,9745_i16,(-22744_i16)];
_19.fld0.fld1.0 = (-17_i8);
_19.fld0.fld4.fld2 = _19.fld2.fld3.fld2;
_8 = 69_u8 as i128;
Call(RET.0.2 = fn10(_12, _19.fld0.fld5, _6, _14, _10.1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_19.fld2.fld3.fld5.2 = _19.fld0.fld4.fld6;
_19.fld0.fld2 = _19.fld1.fld0;
_19.fld2.fld3.fld0 = core::ptr::addr_of_mut!(_7);
_19.fld0.fld5 = _16.2.3 as i32;
_9 = !_2;
_16.2.2 = _15 as f32;
Goto(bb3)
}
bb3 = {
_15 = -_12;
_10.1 = _16.5.1;
_19.fld2.fld3.fld1 = [_4,_13];
RET.0.4 = 198_u8;
_19.fld2.fld3.fld3 = core::ptr::addr_of!(_19.fld0.fld1.4);
_19.fld1.fld5 = core::ptr::addr_of_mut!(_19.fld1.fld1.0);
_19.fld2.fld0 = [true,true,false,false,true,true];
_19.fld0.fld3.1 = _10.1;
_19.fld2.fld3.fld2 = _19.fld0.fld4.fld2;
RET.0.0 = !_19.fld0.fld1.0;
_19.fld0.fld0.1 = core::ptr::addr_of_mut!(_19.fld1.fld1.0);
_19.fld0.fld4.fld5.2 = !_16.5.2;
RET.0.0 = false as i8;
_19.fld0.fld3.2 = _10.2 & _19.fld0.fld4.fld6;
_19.fld2.fld3.fld2 = _19.fld0.fld4.fld2;
_18.fld1 = core::ptr::addr_of_mut!(_19.fld1.fld1.0);
RET.0.1 = _16.1;
_19.fld2.fld3.fld0 = core::ptr::addr_of_mut!(_19.fld2.fld2.fld1.3);
_16.5 = _19.fld0.fld3;
_16.2.2 = _2 as f32;
_19.fld2.fld1 = core::ptr::addr_of_mut!(_19.fld1.fld1.0);
_19.fld0.fld0.2 = _16.2.2 + _16.2.2;
_16.2.1 = core::ptr::addr_of_mut!(_19.fld1.fld1.0);
_19.fld0.fld1.1 = [false,true,true,true,true,true];
_19.fld0.fld4.fld5.1 = _10.1;
RET.0.3 = _13 - _19.fld0.fld3.2;
_7 = [(-31782_i16),(-22860_i16),(-3153_i16)];
_19.fld0.fld4.fld6 = 6547367850901290685_usize as i128;
_19.fld2.fld2.fld1.4 = core::ptr::addr_of_mut!(_19.fld3);
Goto(bb4)
}
bb4 = {
Call(_29 = dump_var(9_usize, 14_usize, Move(_14), 3_usize, Move(_3), 13_usize, Move(_13), 1_usize, Move(_1)), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
Call(_29 = dump_var(9_usize, 9_usize, Move(_9), 15_usize, Move(_15), 22_usize, Move(_22), 11_usize, Move(_11)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn10(mut _1: isize,mut _2: i32,mut _3: [i16; 5],mut _4: [i128; 2],mut _5: char) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _6: char;
let _7: *mut i128;
let _8: Adt53;
let _9: isize;
let _10: Adt61;
let _11: (*const *mut i128, *const i64, f64, [i16; 3], *mut [i16; 3]);
let _12: Adt58;
let _13: [i128; 3];
let _14: [i64; 6];
let _15: Adt52;
let _16: i32;
let _17: [i64; 4];
let _18: bool;
let _19: [i16; 3];
let _20: u8;
let _21: [u16; 6];
let _22: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _23: ();
let _24: ();
{
RET = [3821906186832240492_i64,(-4399870503161787922_i64),8469566503860047231_i64,2026910114678677710_i64];
RET = [(-8307766023541822073_i64),1155299552356745720_i64,2636967539037270091_i64,(-8475768138704251881_i64)];
_2 = !1452198768_i32;
RET = [(-2157466673517995437_i64),1409395484121259417_i64,721740681189834564_i64,(-2250276487459956567_i64)];
_3 = [24528_i16,(-26743_i16),(-10865_i16),(-30590_i16),13326_i16];
_1 = 4100643341_u32 as isize;
_5 = '\u{95791}';
_6 = _5;
_1 = (-66_isize) - 9223372036854775807_isize;
_1 = 9223372036854775807_isize;
RET = [1664098121606752277_i64,(-77575843720888985_i64),1178693920625449400_i64,5675733264496138670_i64];
RET = [(-8067625913240383697_i64),3188605746327800130_i64,6698941585506587432_i64,(-1400033150157589990_i64)];
_1 = (-9223372036854775808_isize);
RET = [6887718135855557504_i64,4704379263682351784_i64,(-3410450656185849960_i64),8741879425667527228_i64];
RET = [8180109731290154178_i64,(-4573007071811388915_i64),6163623972825242608_i64,7712845222841875155_i64];
match _1 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463454151235394913435648 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_2 = (-1692892480_i32);
_4 = [136995350995119944467030250903060139475_i128,(-20409618984016237293482006585895674202_i128)];
_9 = _1;
_10.fld0 = [129638794486844445019967289823737881071_i128,(-92542034427295137797760911147840091835_i128)];
_2 = (-12_i8) as i32;
_10.fld0 = _4;
_9 = _1;
_3 = [(-30880_i16),8315_i16,(-11609_i16),(-1605_i16),(-24426_i16)];
_4 = [36269851303274464238267594673333495033_i128,168506130599283791075225897002331171394_i128];
Goto(bb10)
}
bb10 = {
RET = [(-3199672357348976332_i64),(-542928256538751189_i64),2396706647140775239_i64,568350909614055072_i64];
_11.0 = core::ptr::addr_of!(_7);
RET = [1793349416681296517_i64,3657324993391754734_i64,8105939817644224718_i64,(-8439642364651497525_i64)];
_9 = (-1334030408945250708_i64) as isize;
_6 = _5;
_8.fld0 = core::ptr::addr_of!(_7);
_4 = _10.fld0;
_11.0 = core::ptr::addr_of!(_7);
Goto(bb11)
}
bb11 = {
_3 = [29250_i16,(-25595_i16),(-1706_i16),10450_i16,14383_i16];
_10.fld1 = [5852872690604622723_i64,(-410590950172721409_i64),(-8052751883916553646_i64),3929890729033055010_i64,(-5183839194008319960_i64),777165505427735537_i64,1512289755452057970_i64];
_10.fld0 = [149546558261387626442569973967714574680_i128,(-155681253295485577115851087865548105226_i128)];
_1 = _9 - _9;
_12.fld1 = 55436587075001670705167538229894087611_u128 as u8;
_6 = _5;
_11.2 = 6896474189393264187_u64 as f64;
Goto(bb12)
}
bb12 = {
_6 = _5;
_8.fld0 = core::ptr::addr_of!(_7);
_11.4 = core::ptr::addr_of_mut!(_11.3);
_10.fld1 = [(-6362431194608939575_i64),(-5298332167666989875_i64),9088250427096429156_i64,(-8716932551061730341_i64),(-8513056536376492197_i64),4001695238388412104_i64,1479802782197739683_i64];
_2 = 1984314752_i32;
_11.2 = 1279883492_u32 as f64;
Goto(bb13)
}
bb13 = {
_12.fld0 = (_1,);
_12.fld1 = 227_u8;
RET = [1918637617935381043_i64,(-1237553533412408062_i64),(-50735073657882024_i64),(-7367333913847497305_i64)];
_9 = !_1;
_13 = [(-137261892633865407596495449918060482073_i128),(-49110827672399554703103472576552110920_i128),136876846807632609034032426058181899053_i128];
Goto(bb14)
}
bb14 = {
_13 = [48757310885590858890506728794643094634_i128,(-109919347761535059481447386760689655597_i128),(-58039689520094944931906966514959368372_i128)];
_12.fld1 = 697745810956327946_i64 as u8;
_15.fld1 = core::ptr::addr_of_mut!(_11.0);
_12.fld0.0 = !_1;
_15.fld2.fld1.3 = [23224_i16,(-26900_i16),10932_i16];
_4 = _10.fld0;
_15.fld2.fld4 = -(-25947_i16);
_15.fld3.fld2 = _11.2 + _11.2;
_15.fld3.fld0 = core::ptr::addr_of_mut!(_11.3);
_15.fld2.fld3 = core::ptr::addr_of!(_18);
_15.fld3.fld0 = core::ptr::addr_of_mut!(_15.fld2.fld1.3);
_16 = _2 >> _12.fld0.0;
_15.fld1 = core::ptr::addr_of_mut!(_8.fld0);
_22.1 = 14027982324123505027_u64 / 11181806817370854861_u64;
Goto(bb15)
}
bb15 = {
Call(_23 = dump_var(10_usize, 4_usize, Move(_4), 16_usize, Move(_16), 1_usize, Move(_1), 9_usize, Move(_9)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: isize,mut _2: isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: f64,mut _7: *const u8,mut _8: f32,mut _9: isize,mut _10: isize,mut _11: [i16; 5],mut _12: isize,mut _13: [i16; 5]) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _14: [i128; 2];
let _15: i128;
let _16: bool;
let _17: isize;
let _18: [i16; 5];
let _19: [i16; 3];
let _20: char;
let _21: char;
let _22: isize;
let _23: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _24: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _25: u32;
let _26: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _27: Adt64;
let _28: ();
let _29: ();
{
_6 = 244341474724253944982262032223121666393_u128 as f64;
_9 = _1;
_1 = 1997207329_i32 as isize;
_5 = _2 << _3;
_14 = [(-129813574307018867384102637510078595467_i128),(-6313684870153927644891979381705313995_i128)];
RET = [(-2252740692979969143_i64),(-3113076645655865035_i64),(-5894636992124394909_i64),(-4547810028306516739_i64)];
_12 = -_9;
(*_7) = 43_u8;
_11 = [16952_i16,(-6095_i16),(-1084_i16),(-6825_i16),31198_i16];
_11 = [7796_i16,(-22183_i16),7178_i16,(-27845_i16),3393_i16];
_8 = 120617243578823863366078193898613253025_i128 as f32;
_16 = !false;
RET = [(-675061364594958998_i64),(-3412861468957884185_i64),9104612827714527110_i64,4658054170973794354_i64];
_15 = !144755303988925985897012515321376014261_i128;
_10 = (-18226_i16) as isize;
_1 = _16 as isize;
_4 = -_2;
_13 = [(-8010_i16),(-24192_i16),25338_i16,(-3804_i16),(-25094_i16)];
_7 = core::ptr::addr_of!((*_7));
match (*_7) {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
43 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_11 = [28375_i16,23000_i16,21764_i16,25475_i16,(-27901_i16)];
_7 = core::ptr::addr_of!((*_7));
_17 = 2209426126069459999_u64 as isize;
_10 = _3 >> _5;
_11 = [(-31681_i16),(-27230_i16),(-19851_i16),(-4105_i16),(-30906_i16)];
_6 = 126_i8 as f64;
_9 = _5 & _10;
_12 = _3 >> _2;
RET = [8867353144824027259_i64,(-3352208410102871470_i64),(-6946697446788046447_i64),(-5477960178535678265_i64)];
_3 = (-7589081977220240358_i64) as isize;
_13 = _11;
_18 = _11;
(*_7) = _16 as u8;
_20 = '\u{7af6d}';
_4 = -_12;
_4 = _16 as isize;
_19 = [24243_i16,22310_i16,3702_i16];
_3 = (-6607838182914020120_i64) as isize;
_17 = _6 as isize;
_7 = core::ptr::addr_of!((*_7));
Goto(bb8)
}
bb8 = {
_12 = !_5;
_9 = _2;
_21 = _20;
_16 = _5 >= _10;
_16 = true;
_7 = core::ptr::addr_of!((*_7));
_2 = !_12;
_4 = _1 >> _10;
_16 = true | false;
(*_7) = 194_u8;
_15 = 111105581424638691600334494297015518035_i128;
_16 = _2 != _4;
RET = [(-8247758195919056522_i64),(-1168444845799604057_i64),7416703448145815826_i64,(-2803517432353867114_i64)];
_17 = _9;
_8 = 1375717022844961663_i64 as f32;
_19 = [30208_i16,(-25231_i16),(-7940_i16)];
_22 = _10;
_13 = [(-176_i16),24528_i16,23952_i16,29542_i16,5224_i16];
_4 = -_2;
(*_7) = 25205_i16 as u8;
_21 = _20;
(*_7) = !236_u8;
_21 = _20;
_4 = _22 & _17;
_14 = [_15,_15];
match _15 {
0 => bb3,
1 => bb2,
2 => bb9,
3 => bb10,
111105581424638691600334494297015518035 => bb12,
_ => bb11
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_10 = _4 & _12;
_21 = _20;
_21 = _20;
match _15 {
0 => bb1,
1 => bb6,
2 => bb8,
3 => bb4,
111105581424638691600334494297015518035 => bb13,
_ => bb5
}
}
bb13 = {
_1 = !_10;
_23.1 = 13522032298741250892_u64 * 12693375956272182147_u64;
_24.5.2 = _15 >> _1;
_24.5.0 = [(-5781147257720081648_i64),3334007124267275500_i64,(-6108673615831966719_i64),6070974656720908235_i64];
_24.2.0 = 5_usize;
(*_7) = 235_u8 % 218_u8;
_24.2.3 = !_23.1;
Goto(bb14)
}
bb14 = {
_15 = !_24.5.2;
RET = _24.5.0;
_27.fld4.fld4 = _24.5.2 as usize;
_24.2.1 = core::ptr::addr_of_mut!(_27.fld5.fld0);
Goto(bb15)
}
bb15 = {
Call(_28 = dump_var(11_usize, 17_usize, Move(_17), 2_usize, Move(_2), 14_usize, Move(_14), 15_usize, Move(_15)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_28 = dump_var(11_usize, 16_usize, Move(_16), 22_usize, Move(_22), 1_usize, Move(_1), 20_usize, Move(_20)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_28 = dump_var(11_usize, 19_usize, Move(_19), 29_usize, _29, 29_usize, _29, 29_usize, _29), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: [i16; 3],mut _2: char,mut _3: i128,mut _4: char,mut _5: [i16; 3],mut _6: [bool; 6],mut _7: [i16; 3],mut _8: [i16; 3],mut _9: *mut [i16; 3],mut _10: [i16; 3],mut _11: [i16; 3],mut _12: [i16; 3],mut _13: *mut [i16; 3]) -> [i64; 4] {
mir! {
type RET = [i64; 4];
let _14: *const u8;
let _15: *const i64;
let _16: f64;
let _17: isize;
let _18: [u8; 5];
let _19: [u128; 2];
let _20: [i128; 3];
let _21: [i128; 3];
let _22: bool;
let _23: *mut i128;
let _24: i128;
let _25: Adt55;
let _26: i128;
let _27: [u8; 5];
let _28: i64;
let _29: (isize,);
let _30: [i64; 6];
let _31: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _32: [bool; 6];
let _33: char;
let _34: Adt61;
let _35: *const [i128; 2];
let _36: [u16; 6];
let _37: [i64; 4];
let _38: (i8, [bool; 6], [i64; 4], i128, u8);
let _39: *const bool;
let _40: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _41: bool;
let _42: [i64; 6];
let _43: isize;
let _44: *mut (i8, [bool; 6], [i64; 4], i128, u8);
let _45: ();
let _46: ();
{
_9 = _13;
_2 = _4;
_2 = _4;
_13 = core::ptr::addr_of_mut!(_10);
_8 = [(-6046_i16),(-27344_i16),(-17591_i16)];
_4 = _2;
_12 = [1791_i16,29312_i16,(-13776_i16)];
_7 = [18267_i16,(-2759_i16),18340_i16];
(*_9) = [9696_i16,21432_i16,9241_i16];
RET = [985393702527714589_i64,(-6332690537382246929_i64),3960819901377123700_i64,1517807722432166312_i64];
_1 = [(-461_i16),(-23906_i16),2029_i16];
RET = [5790304429740261688_i64,2393935756209879464_i64,(-2964700319303923291_i64),(-841650098306474206_i64)];
(*_13) = [(-490_i16),28809_i16,(-151_i16)];
Goto(bb1)
}
bb1 = {
RET = [(-3307177060659319352_i64),(-8257196274201714727_i64),7471347865310330389_i64,(-1716047293592528649_i64)];
_16 = 1554_u16 as f64;
_3 = 77070659029265267381378210955807299926_i128 << 822147429_u32;
RET = [3026466118874264163_i64,(-7718864025784646400_i64),6158555248114413844_i64,(-5457784251528506685_i64)];
_18 = [91_u8,85_u8,15_u8,168_u8,204_u8];
_21 = [_3,_3,_3];
_3 = 15703732284664903567680710244068646891_i128;
Goto(bb2)
}
bb2 = {
_16 = 6784598079252803625_u64 as f64;
_7 = _8;
_22 = !false;
_3 = 5624090575414350332_usize as i128;
_4 = _2;
_17 = (-37_isize);
_21 = [_3,_3,_3];
_11 = (*_9);
RET = [5168248301516908208_i64,6559983823332563250_i64,(-6403965165901573262_i64),(-8138762986593242109_i64)];
_9 = core::ptr::addr_of_mut!(_10);
_5 = [(-4491_i16),11942_i16,20094_i16];
_20 = [_3,_3,_3];
_4 = _2;
(*_9) = [(-3659_i16),17331_i16,22468_i16];
_23 = core::ptr::addr_of_mut!(_24);
_10 = [(-10168_i16),(-19551_i16),26169_i16];
_3 = (-163764544107263924075131932266557493077_i128) | 6921087544282882664221133307146546519_i128;
_3 = !157783749824065632638334594763094345580_i128;
Goto(bb3)
}
bb3 = {
_25.fld2.fld3.fld2 = _16;
_25.fld0.fld1.4 = 1191681761_i32 as u8;
_25.fld1.fld1.4 = core::ptr::addr_of_mut!((*_9));
Goto(bb4)
}
bb4 = {
_25.fld2.fld3.fld5.0 = [1015276732082175264_i64,(-2528382438275281455_i64),(-5929386388921777779_i64),(-4570349736842775514_i64)];
_25.fld1.fld2 = [_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4];
_6 = [_22,_22,_22,_22,_22,_22];
_25.fld2.fld2.fld3 = core::ptr::addr_of!(_22);
_25.fld1.fld0 = core::ptr::addr_of_mut!(_25.fld0.fld1);
_25.fld0.fld4.fld4 = 14570862694176563880_u64;
_25.fld1.fld4 = 3510343758_u32 as i16;
_25.fld2.fld2.fld1.2 = _25.fld0.fld1.4 as f64;
(*_23) = !_3;
_25.fld0.fld3 = (_25.fld2.fld3.fld5.0, _2, (*_23));
_25.fld2.fld2.fld5 = core::ptr::addr_of_mut!(_25.fld1.fld1.0);
_19 = [322025674991928616738426765176951470575_u128,262470510853394472644446459552666590464_u128];
_20 = [_3,(*_23),(*_23)];
_25.fld0.fld4.fld2 = _25.fld2.fld3.fld2;
_14 = core::ptr::addr_of!(_25.fld0.fld1.4);
_25.fld0.fld4.fld1 = [_24,(*_23)];
_25.fld1.fld2 = _18;
_6 = [_22,_22,_22,_22,_22,_22];
_25.fld0.fld4.fld0 = _13;
_25.fld2.fld3.fld0 = core::ptr::addr_of_mut!(_25.fld3);
_18 = [_25.fld0.fld1.4,_25.fld0.fld1.4,(*_14),(*_14),(*_14)];
_25.fld0.fld1 = ((-36_i8), _6, _25.fld2.fld3.fld5.0, (*_23), 117_u8);
_25.fld0.fld5 = _25.fld2.fld3.fld2 as i32;
_25.fld2.fld2.fld2 = [_25.fld0.fld1.4,(*_14),(*_14),_25.fld0.fld1.4,(*_14)];
_8 = [_25.fld1.fld4,_25.fld1.fld4,_25.fld1.fld4];
Call(_25.fld0.fld0.0 = core::intrinsics::transmute(_25.fld0.fld4.fld4), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_25.fld0.fld4.fld3 = core::ptr::addr_of!((*_14));
_25.fld2.fld2.fld4 = _25.fld0.fld3.1 as i16;
_26 = _16 as i128;
_25.fld1.fld5 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_25.fld0.fld0.3 = _25.fld0.fld1.0 as u64;
_25.fld2.fld0 = _6;
(*_14) = 30_u8 * 74_u8;
(*_14) = 245_u8 % 1_u8;
_25.fld2.fld3.fld1 = [_25.fld0.fld3.2,(*_23)];
_25.fld2.fld2.fld3 = core::ptr::addr_of!(_22);
_25.fld0.fld4.fld5 = (_25.fld0.fld3.0, _4, (*_23));
_25.fld0.fld4.fld5.2 = !_24;
_27 = _25.fld1.fld2;
_25.fld0.fld4.fld6 = (*_23);
_29.0 = 2620648635_u32 as isize;
_28 = (-906643385014548237_i64) << _24;
_25.fld0.fld4.fld0 = _25.fld1.fld1.4;
_25.fld2.fld2.fld1.3 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
_7 = [_25.fld1.fld4,_25.fld1.fld4,_25.fld2.fld2.fld4];
_25.fld2.fld3.fld4 = _25.fld0.fld0.3;
_18 = [(*_14),(*_14),(*_14),_25.fld0.fld1.4,_25.fld0.fld1.4];
_25.fld0.fld2 = core::ptr::addr_of_mut!(_25.fld0.fld1);
(*_13) = [_25.fld1.fld4,_25.fld2.fld2.fld4,_25.fld2.fld2.fld4];
_25.fld0.fld1 = (18_i8, _25.fld2.fld0, _25.fld0.fld3.0, _25.fld0.fld3.2, 53_u8);
Goto(bb6)
}
bb6 = {
_25.fld2.fld3.fld3 = _25.fld0.fld4.fld3;
_25.fld0.fld0.1 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_11 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
Goto(bb7)
}
bb7 = {
_25.fld0.fld4.fld2 = _25.fld0.fld5 as f64;
_25.fld2.fld3.fld0 = core::ptr::addr_of_mut!(_11);
_31.0.0 = 29662_u16 as i8;
_25.fld1.fld1.2 = _25.fld2.fld2.fld1.2;
_25.fld0.fld4.fld0 = core::ptr::addr_of_mut!(_25.fld3);
_25.fld0.fld1.0 = _25.fld0.fld5 as i8;
_25.fld2.fld3.fld5.0 = _25.fld0.fld4.fld5.0;
_25.fld0.fld3.2 = (*_23) >> _25.fld0.fld1.4;
_31.0.0 = 1791028477_u32 as i8;
_25.fld0.fld4.fld5.0 = [_28,_28,_28,_28];
_25.fld1.fld3 = _25.fld2.fld2.fld3;
_25.fld0.fld0.1 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_25.fld2.fld2.fld4 = _25.fld0.fld1.3 as i16;
_25.fld1.fld1.1 = core::ptr::addr_of!(_28);
_25.fld2.fld3.fld5.1 = _2;
_31.0.4 = _25.fld0.fld1.4 << _26;
_31.0.0 = _25.fld0.fld1.0;
(*_14) = !_31.0.4;
_31.0.3 = _25.fld0.fld3.2 * (*_23);
RET = _25.fld2.fld3.fld5.0;
_25.fld2.fld2.fld4 = _25.fld1.fld4 | _25.fld1.fld4;
_25.fld0.fld3 = (_25.fld2.fld3.fld5.0, _2, _31.0.3);
_3 = !_25.fld0.fld3.2;
_25.fld0.fld5 = -2013930032_i32;
match _17 {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb8,
4 => bb9,
5 => bb10,
340282366920938463463374607431768211419 => bb12,
_ => bb11
}
}
bb8 = {
_25.fld2.fld3.fld3 = _25.fld0.fld4.fld3;
_25.fld0.fld0.1 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_11 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
Goto(bb7)
}
bb9 = {
_25.fld0.fld4.fld3 = core::ptr::addr_of!((*_14));
_25.fld2.fld2.fld4 = _25.fld0.fld3.1 as i16;
_26 = _16 as i128;
_25.fld1.fld5 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_25.fld0.fld0.3 = _25.fld0.fld1.0 as u64;
_25.fld2.fld0 = _6;
(*_14) = 30_u8 * 74_u8;
(*_14) = 245_u8 % 1_u8;
_25.fld2.fld3.fld1 = [_25.fld0.fld3.2,(*_23)];
_25.fld2.fld2.fld3 = core::ptr::addr_of!(_22);
_25.fld0.fld4.fld5 = (_25.fld0.fld3.0, _4, (*_23));
_25.fld0.fld4.fld5.2 = !_24;
_27 = _25.fld1.fld2;
_25.fld0.fld4.fld6 = (*_23);
_29.0 = 2620648635_u32 as isize;
_28 = (-906643385014548237_i64) << _24;
_25.fld0.fld4.fld0 = _25.fld1.fld1.4;
_25.fld2.fld2.fld1.3 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
_7 = [_25.fld1.fld4,_25.fld1.fld4,_25.fld2.fld2.fld4];
_25.fld2.fld3.fld4 = _25.fld0.fld0.3;
_18 = [(*_14),(*_14),(*_14),_25.fld0.fld1.4,_25.fld0.fld1.4];
_25.fld0.fld2 = core::ptr::addr_of_mut!(_25.fld0.fld1);
(*_13) = [_25.fld1.fld4,_25.fld2.fld2.fld4,_25.fld2.fld2.fld4];
_25.fld0.fld1 = (18_i8, _25.fld2.fld0, _25.fld0.fld3.0, _25.fld0.fld3.2, 53_u8);
Goto(bb6)
}
bb10 = {
_25.fld2.fld3.fld5.0 = [1015276732082175264_i64,(-2528382438275281455_i64),(-5929386388921777779_i64),(-4570349736842775514_i64)];
_25.fld1.fld2 = [_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4,_25.fld0.fld1.4];
_6 = [_22,_22,_22,_22,_22,_22];
_25.fld2.fld2.fld3 = core::ptr::addr_of!(_22);
_25.fld1.fld0 = core::ptr::addr_of_mut!(_25.fld0.fld1);
_25.fld0.fld4.fld4 = 14570862694176563880_u64;
_25.fld1.fld4 = 3510343758_u32 as i16;
_25.fld2.fld2.fld1.2 = _25.fld0.fld1.4 as f64;
(*_23) = !_3;
_25.fld0.fld3 = (_25.fld2.fld3.fld5.0, _2, (*_23));
_25.fld2.fld2.fld5 = core::ptr::addr_of_mut!(_25.fld1.fld1.0);
_19 = [322025674991928616738426765176951470575_u128,262470510853394472644446459552666590464_u128];
_20 = [_3,(*_23),(*_23)];
_25.fld0.fld4.fld2 = _25.fld2.fld3.fld2;
_14 = core::ptr::addr_of!(_25.fld0.fld1.4);
_25.fld0.fld4.fld1 = [_24,(*_23)];
_25.fld1.fld2 = _18;
_6 = [_22,_22,_22,_22,_22,_22];
_25.fld0.fld4.fld0 = _13;
_25.fld2.fld3.fld0 = core::ptr::addr_of_mut!(_25.fld3);
_18 = [_25.fld0.fld1.4,_25.fld0.fld1.4,(*_14),(*_14),(*_14)];
_25.fld0.fld1 = ((-36_i8), _6, _25.fld2.fld3.fld5.0, (*_23), 117_u8);
_25.fld0.fld5 = _25.fld2.fld3.fld2 as i32;
_25.fld2.fld2.fld2 = [_25.fld0.fld1.4,(*_14),(*_14),_25.fld0.fld1.4,(*_14)];
_8 = [_25.fld1.fld4,_25.fld1.fld4,_25.fld1.fld4];
Call(_25.fld0.fld0.0 = core::intrinsics::transmute(_25.fld0.fld4.fld4), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
RET = [(-3307177060659319352_i64),(-8257196274201714727_i64),7471347865310330389_i64,(-1716047293592528649_i64)];
_16 = 1554_u16 as f64;
_3 = 77070659029265267381378210955807299926_i128 << 822147429_u32;
RET = [3026466118874264163_i64,(-7718864025784646400_i64),6158555248114413844_i64,(-5457784251528506685_i64)];
_18 = [91_u8,85_u8,15_u8,168_u8,204_u8];
_21 = [_3,_3,_3];
_3 = 15703732284664903567680710244068646891_i128;
Goto(bb2)
}
bb12 = {
_25.fld0.fld4.fld5.0 = [_28,_28,_28,_28];
_31.0.2 = [_28,_28,_28,_28];
_25.fld2.fld3.fld5.2 = _3;
_32 = [_22,_22,_22,_22,_22,_22];
_21 = _20;
_25.fld0.fld4.fld0 = core::ptr::addr_of_mut!(_25.fld1.fld1.3);
Call(_25.fld0.fld3.1 = fn13(_6, _29.0, (*_23), _25.fld0.fld0.0, _25.fld2.fld2.fld4, _25.fld0.fld1, _25.fld2.fld3.fld2, _25.fld1.fld4, (*_14), _25.fld0.fld4.fld5.1, _8, _25.fld2.fld2.fld5, _11), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_37 = [_28,_28,_28,_28];
_25.fld0.fld4.fld5 = _25.fld0.fld3;
_25.fld0.fld4.fld5.0 = [_28,_28,_28,_28];
_36 = [11202_u16,8821_u16,31823_u16,11949_u16,56339_u16,13560_u16];
_33 = _2;
_25.fld2.fld3.fld4 = _22 as u64;
_25.fld2.fld2.fld5 = core::ptr::addr_of_mut!(_25.fld2.fld2.fld1.0);
_29.0 = _17 << _25.fld2.fld3.fld5.2;
_12 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld2.fld2.fld4];
_25.fld0.fld4.fld5.1 = _33;
_18 = [_25.fld0.fld1.4,_31.0.4,_25.fld0.fld1.4,(*_14),_31.0.4];
_25.fld1.fld1.0 = core::ptr::addr_of!(_23);
_25.fld2.fld3 = Move(_25.fld0.fld4);
_8 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
_20 = [_3,_3,_25.fld0.fld3.2];
_28 = (-2094639243079566322_i64) ^ (-4338190438568283950_i64);
RET = _31.0.2;
_25.fld2.fld2.fld1.2 = -_16;
_25.fld2.fld0 = [_22,_22,_22,_22,_22,_22];
_25.fld1.fld0 = _25.fld0.fld2;
_15 = core::ptr::addr_of!(_28);
_25.fld1.fld1.0 = core::ptr::addr_of!(_23);
_25.fld2.fld2.fld1.3 = [_25.fld1.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
Goto(bb14)
}
bb14 = {
_25.fld2.fld2.fld0 = core::ptr::addr_of_mut!(_31.0);
_31.0.1 = _32;
RET = _25.fld0.fld3.0;
_40 = (_25.fld2.fld2.fld0, _25.fld0.fld0.3, _25.fld1.fld0);
_25.fld1.fld3 = core::ptr::addr_of!(_41);
_25.fld2.fld3.fld1 = [_3,_31.0.3];
_25.fld2.fld2.fld1.3 = [_25.fld2.fld2.fld4,_25.fld2.fld2.fld4,_25.fld1.fld4];
_25.fld2.fld3.fld0 = _25.fld1.fld1.4;
_10 = _11;
Goto(bb15)
}
bb15 = {
Call(_45 = dump_var(12_usize, 37_usize, Move(_37), 31_usize, Move(_31), 12_usize, Move(_12), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_45 = dump_var(12_usize, 2_usize, Move(_2), 17_usize, Move(_17), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_45 = dump_var(12_usize, 36_usize, Move(_36), 20_usize, Move(_20), 6_usize, Move(_6), 8_usize, Move(_8)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_45 = dump_var(12_usize, 19_usize, Move(_19), 46_usize, _46, 46_usize, _46, 46_usize, _46), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: [bool; 6],mut _2: isize,mut _3: i128,mut _4: usize,mut _5: i16,mut _6: (i8, [bool; 6], [i64; 4], i128, u8),mut _7: f64,mut _8: i16,mut _9: u8,mut _10: char,mut _11: [i16; 3],mut _12: *mut *const *mut i128,mut _13: [i16; 3]) -> char {
mir! {
type RET = char;
let _14: [u16; 6];
let _15: (isize,);
let _16: usize;
let _17: *const (i8, [bool; 6], [i64; 4], i128, u8);
let _18: char;
let _19: Adt59;
let _20: [i16; 3];
let _21: u16;
let _22: isize;
let _23: isize;
let _24: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _25: isize;
let _26: [i64; 6];
let _27: (i8, [bool; 6], [i64; 4], i128, u8);
let _28: f32;
let _29: i32;
let _30: Adt58;
let _31: [u128; 2];
let _32: [u128; 2];
let _33: f32;
let _34: Adt54;
let _35: f64;
let _36: (*const *mut i128, *const i64, f64, [i16; 3], *mut [i16; 3]);
let _37: isize;
let _38: [i16; 5];
let _39: [i64; 4];
let _40: Adt62;
let _41: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _42: Adt49;
let _43: *const (i8, [bool; 6], [i64; 4], i128, u8);
let _44: (usize, *mut *const *mut i128, f32, u64);
let _45: Adt65;
let _46: char;
let _47: char;
let _48: isize;
let _49: ();
let _50: ();
{
_1 = [false,true,true,true,true,true];
_6.3 = (-1738565498272106125_i64) as i128;
_11 = [_8,_8,_8];
_6.4 = _10 as u8;
_16 = _4 / 4_usize;
_3 = _6.3;
_4 = _6.0 as usize;
_9 = _6.4;
_7 = _6.3 as f64;
_6.2 = [(-3479934388253783698_i64),6041596598860686143_i64,8275664567249661051_i64,1011699476357859339_i64];
_5 = -_8;
_8 = _5 & _5;
_16 = _4 * _4;
_15 = (_2,);
_5 = _8 & _8;
_7 = 203731298_i32 as f64;
RET = _10;
_1 = [false,false,false,true,true,false];
_6.3 = _3 & _3;
_8 = _5;
_19.fld3 = 6623920664460329360_u64 as f32;
_19.fld4 = [25264_u16,54664_u16,47032_u16,55453_u16,33511_u16,43043_u16];
_19.fld1 = _15;
_9 = !_6.4;
Goto(bb1)
}
bb1 = {
_13 = [_8,_5,_8];
_19.fld6.fld5 = (_6.2, _10, _3);
_9 = (-7740588383683666259_i64) as u8;
_15.0 = -_19.fld1.0;
_8 = -_5;
_4 = !_16;
_3 = _6.3;
_4 = _16 % 6877502292346709344_usize;
_18 = _19.fld6.fld5.1;
_6.2 = _19.fld6.fld5.0;
_3 = !_19.fld6.fld5.2;
_21 = !53620_u16;
Goto(bb2)
}
bb2 = {
_20 = [_8,_5,_5];
_19.fld6.fld6 = _19.fld6.fld5.2;
_19.fld6.fld5.1 = _10;
_19.fld6.fld5.0 = _6.2;
_19.fld3 = 8812301387334377533_i64 as f32;
_17 = core::ptr::addr_of!(_6);
_6.3 = _3 * _3;
_6.2 = [(-8640639011396879438_i64),(-8959370502492296813_i64),7269329203777667153_i64,(-8830038586816177904_i64)];
_12 = core::ptr::addr_of_mut!((*_12));
_20 = _13;
_1 = (*_17).1;
(*_17) = ((-61_i8), _1, _19.fld6.fld5.0, _19.fld6.fld6, _9);
_19.fld6.fld6 = (*_17).3;
(*_17).1 = [false,true,true,false,false,true];
(*_17).3 = !_19.fld6.fld6;
_19.fld6.fld2 = -_7;
_4 = (-8832800626930043770_i64) as usize;
_2 = _15.0;
_19.fld6.fld6 = -_3;
_11 = [_5,_8,_5];
_10 = _18;
_19.fld6.fld0 = core::ptr::addr_of_mut!(_11);
_19.fld6.fld2 = _7;
Call(_22 = fn14(_15.0, (*_17).4, _19.fld3, _19.fld4, (*_17).3, _19.fld6.fld0, (*_17).2, (*_17).2, _6.3, (*_17).0, (*_17), _3, _15, _19.fld6.fld6, (*_17).3, _6.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_24.2 = core::ptr::addr_of_mut!((*_17));
_19.fld6.fld3 = core::ptr::addr_of!((*_17).4);
(*_17).3 = true as i128;
(*_17).1 = _1;
_12 = core::ptr::addr_of_mut!((*_12));
_19.fld6.fld3 = core::ptr::addr_of!(_6.4);
_6.0 = !(-116_i8);
RET = _18;
_19.fld6.fld4 = 6192868115044945355_u64 | 11142959639812759949_u64;
_19.fld6.fld1 = [_6.3,(*_17).3];
_24.1 = _19.fld6.fld4 + _19.fld6.fld4;
_7 = _5 as f64;
_14 = _19.fld4;
(*_17).4 = !_9;
_19.fld6.fld5.2 = !_19.fld6.fld6;
_7 = _19.fld6.fld2 * _19.fld6.fld2;
_3 = (*_17).4 as i128;
_19.fld0 = [273785166382944930156425237959606857859_u128,141160864572535024775505356036126682733_u128];
_24.0 = _24.2;
_23 = _22;
(*_17).3 = -_19.fld6.fld6;
_19.fld6.fld5.2 = _6.3 >> _8;
_26 = [(-3741603510064938290_i64),8499523261325246483_i64,2599781318653258149_i64,6731939196952078982_i64,2445413517437989623_i64,5564711858921281403_i64];
(*_17).4 = !_9;
_9 = (*_17).4;
_27.2 = [4843388080682930106_i64,6287287917634320141_i64,8001179942653941841_i64,(-7631313981126266813_i64)];
Goto(bb4)
}
bb4 = {
(*_17).3 = !_19.fld6.fld5.2;
RET = _19.fld6.fld5.1;
_19.fld5 = [_5,_5,_5,_8,_5];
_25 = _22 | _23;
_6.0 = 252426651391111680081842616833111153962_u128 as i8;
Goto(bb5)
}
bb5 = {
_12 = core::ptr::addr_of_mut!((*_12));
_11 = _20;
_15.0 = !_25;
(*_17).1 = _1;
_20 = _13;
_30.fld1 = _6.4;
_18 = _10;
_30.fld0.0 = _15.0 >> (*_17).3;
(*_17).2 = _27.2;
_17 = core::ptr::addr_of!(_6);
_19.fld0 = [305915585829911095410718656370433592013_u128,242611961609671729752844701357828934049_u128];
_17 = core::ptr::addr_of!(_27);
_24.1 = !_19.fld6.fld4;
Goto(bb6)
}
bb6 = {
_27.1 = [false,true,false,false,true,false];
_19.fld3 = _6.3 as f32;
(*_17).4 = (-1195920448421885510_i64) as u8;
_24.2 = core::ptr::addr_of_mut!(_27);
_12 = core::ptr::addr_of_mut!((*_12));
(*_17).4 = !_9;
_1 = [true,false,true,true,true,false];
(*_17).2 = [(-6013796542183715229_i64),3701822619518955637_i64,4297211987194781270_i64,6336650148346925919_i64];
_19.fld6.fld5.0 = [9053020909925385409_i64,(-6654559331018083472_i64),(-3741545921609143977_i64),8974459924501487156_i64];
(*_17).2 = [1560320505490230417_i64,(-170686118839589597_i64),(-8402729341290207795_i64),4787015379728320569_i64];
_6.3 = !_19.fld6.fld5.2;
_19.fld6.fld5.2 = _6.3 | _6.3;
Goto(bb7)
}
bb7 = {
_27.3 = -_19.fld6.fld5.2;
_19.fld6.fld4 = _24.1 - _24.1;
_25 = -_19.fld1.0;
_15.0 = -_22;
_2 = _30.fld0.0 - _23;
_8 = _5;
_9 = !_30.fld1;
_33 = _19.fld6.fld4 as f32;
_19.fld0 = [333003351351708494767549973482332231883_u128,34861093782108107224138478273297126453_u128];
Goto(bb8)
}
bb8 = {
_35 = _7 - _19.fld6.fld2;
_19.fld6.fld1 = [(*_17).3,(*_17).3];
_34.fld3.0 = [1610604541453418535_i64,1238587744848075428_i64,(-3288001641055068779_i64),(-3198367293641564431_i64)];
(*_17).3 = _19.fld6.fld5.2;
(*_17).3 = _5 as i128;
_19.fld3 = _16 as f32;
_34.fld5 = (-1228700359_i32);
_27.4 = _9;
_34.fld1 = _6;
_36.2 = _35;
_31 = [110729526942850878461658688302466310597_u128,131978828258371906328398863049089145642_u128];
_1 = [true,false,false,false,false,true];
match _34.fld5 {
0 => bb3,
1 => bb4,
2 => bb9,
3 => bb10,
340282366920938463463374607430539511097 => bb12,
_ => bb11
}
}
bb9 = {
_24.2 = core::ptr::addr_of_mut!((*_17));
_19.fld6.fld3 = core::ptr::addr_of!((*_17).4);
(*_17).3 = true as i128;
(*_17).1 = _1;
_12 = core::ptr::addr_of_mut!((*_12));
_19.fld6.fld3 = core::ptr::addr_of!(_6.4);
_6.0 = !(-116_i8);
RET = _18;
_19.fld6.fld4 = 6192868115044945355_u64 | 11142959639812759949_u64;
_19.fld6.fld1 = [_6.3,(*_17).3];
_24.1 = _19.fld6.fld4 + _19.fld6.fld4;
_7 = _5 as f64;
_14 = _19.fld4;
(*_17).4 = !_9;
_19.fld6.fld5.2 = !_19.fld6.fld6;
_7 = _19.fld6.fld2 * _19.fld6.fld2;
_3 = (*_17).4 as i128;
_19.fld0 = [273785166382944930156425237959606857859_u128,141160864572535024775505356036126682733_u128];
_24.0 = _24.2;
_23 = _22;
(*_17).3 = -_19.fld6.fld6;
_19.fld6.fld5.2 = _6.3 >> _8;
_26 = [(-3741603510064938290_i64),8499523261325246483_i64,2599781318653258149_i64,6731939196952078982_i64,2445413517437989623_i64,5564711858921281403_i64];
(*_17).4 = !_9;
_9 = (*_17).4;
_27.2 = [4843388080682930106_i64,6287287917634320141_i64,8001179942653941841_i64,(-7631313981126266813_i64)];
Goto(bb4)
}
bb10 = {
_27.1 = [false,true,false,false,true,false];
_19.fld3 = _6.3 as f32;
(*_17).4 = (-1195920448421885510_i64) as u8;
_24.2 = core::ptr::addr_of_mut!(_27);
_12 = core::ptr::addr_of_mut!((*_12));
(*_17).4 = !_9;
_1 = [true,false,true,true,true,false];
(*_17).2 = [(-6013796542183715229_i64),3701822619518955637_i64,4297211987194781270_i64,6336650148346925919_i64];
_19.fld6.fld5.0 = [9053020909925385409_i64,(-6654559331018083472_i64),(-3741545921609143977_i64),8974459924501487156_i64];
(*_17).2 = [1560320505490230417_i64,(-170686118839589597_i64),(-8402729341290207795_i64),4787015379728320569_i64];
_6.3 = !_19.fld6.fld5.2;
_19.fld6.fld5.2 = _6.3 | _6.3;
Goto(bb7)
}
bb11 = {
_12 = core::ptr::addr_of_mut!((*_12));
_11 = _20;
_15.0 = !_25;
(*_17).1 = _1;
_20 = _13;
_30.fld1 = _6.4;
_18 = _10;
_30.fld0.0 = _15.0 >> (*_17).3;
(*_17).2 = _27.2;
_17 = core::ptr::addr_of!(_6);
_19.fld0 = [305915585829911095410718656370433592013_u128,242611961609671729752844701357828934049_u128];
_17 = core::ptr::addr_of!(_27);
_24.1 = !_19.fld6.fld4;
Goto(bb6)
}
bb12 = {
_6.0 = _34.fld1.0 | _34.fld1.0;
_6.3 = !_3;
(*_17) = (_6.0, _6.1, _6.2, _34.fld1.3, _6.4);
_8 = !_5;
_36.3 = [_8,_5,_8];
_19.fld0 = [8952314155130752318260478757575139881_u128,321488272305222921160116623254175041907_u128];
_15.0 = _25;
_34.fld4.fld5.2 = -_3;
_29 = -_34.fld5;
_34.fld1.2 = _6.2;
_1 = _27.1;
_34.fld1 = (_27.0, (*_17).1, (*_17).2, (*_17).3, _30.fld1);
_34.fld3.2 = _34.fld1.3;
_19.fld4 = [_21,_21,_21,_21,_21,_21];
_36.4 = core::ptr::addr_of_mut!(_11);
_28 = _33;
_34.fld5 = !_29;
_34.fld3.0 = (*_17).2;
_34.fld1.0 = -(*_17).0;
_34.fld1.0 = (*_17).0;
(*_17).1 = [false,false,false,false,false,false];
_10 = _19.fld6.fld5.1;
_34.fld4.fld5.1 = _18;
_6.4 = (*_17).4;
_34.fld4.fld1 = [(*_17).3,_34.fld3.2];
_19.fld1.0 = -_2;
_37 = _33 as isize;
Goto(bb13)
}
bb13 = {
_40.fld4 = !_4;
(*_17).2 = [228500109974316605_i64,2466520793568033868_i64,3225259515756075078_i64,8708815496096860232_i64];
_40.fld3.fld3 = _19.fld6.fld3;
_40.fld3.fld5 = _19.fld6.fld5;
_36.2 = -_7;
_40.fld1 = core::ptr::addr_of!(_34.fld4.fld1);
_37 = _15.0;
_40.fld0.2 = -_28;
(*_17).2 = [4144460300744198531_i64,5884692615135680455_i64,7916065140351392771_i64,(-6520029131188800248_i64)];
_6.4 = !_27.4;
(*_17).0 = _34.fld1.0;
_6.2 = [7299390212324323057_i64,(-5337535850169580078_i64),(-7244971477883189323_i64),(-7513885595559563822_i64)];
_34.fld2 = core::ptr::addr_of_mut!((*_17));
_34.fld1.4 = 46965961787990237767344685806372817872_u128 as u8;
_24 = (_34.fld2, _19.fld6.fld4, _34.fld2);
_41.5.0 = [3410857158421873548_i64,5162288205675892339_i64,524339222889738878_i64,8535609716397283690_i64];
_25 = _30.fld0.0 >> _30.fld0.0;
_19.fld6.fld6 = (*_17).3;
_27.2 = [(-280332483276498420_i64),4764928995105055427_i64,(-3231136810553125223_i64),1207010553336598017_i64];
Goto(bb14)
}
bb14 = {
_15 = _19.fld1;
_40.fld3.fld5.0 = [790024985061573706_i64,(-4856687260736407251_i64),2620017421871131891_i64,(-8761545102044132299_i64)];
_31 = [170278891517446749041907064447416654659_u128,24821950506468403952819974225311623884_u128];
(*_17).1 = [true,true,true,true,false,true];
_45.fld1.fld1.1 = core::ptr::addr_of_mut!(_36.0);
_34.fld4.fld0 = _36.4;
_44.3 = !_19.fld6.fld4;
_40.fld3.fld6 = _19.fld6.fld6 | _40.fld3.fld5.2;
_45.fld1.fld1.3 = _24.1 % 3697572146288403740_u64;
_40.fld2 = _40.fld0.2;
_44.2 = -_28;
_40.fld0.2 = -_33;
_19.fld6 = Adt50 { fld0: _36.4,fld1: _34.fld4.fld1,fld2: _35,fld3: _40.fld3.fld3,fld4: _44.3,fld5: _40.fld3.fld5,fld6: _27.3 };
_34.fld3.0 = [33159353454098452_i64,(-2681164101940984758_i64),4050943068910408159_i64,(-1297363727849802842_i64)];
_45.fld1.fld1.2 = -_28;
_40.fld3.fld0 = core::ptr::addr_of_mut!(_36.3);
_32 = [22254397905994493173664795353152496867_u128,337903876710280999962684338177375175355_u128];
_24.2 = _24.0;
(*_17).1 = [true,false,true,true,false,true];
(*_17).2 = [(-973644760690154297_i64),3554118076713559900_i64,(-1590593156671429816_i64),4653678921777975910_i64];
_18 = _10;
_26 = [(-8282337701446594564_i64),(-1380624934040695076_i64),6917943322825245093_i64,5791354732477108554_i64,(-9198045963338634474_i64),8654400732382894682_i64];
_21 = _24.1 as u16;
_31 = [13830530166564600960616811668453930654_u128,331852872293505702872473488364919265295_u128];
Goto(bb15)
}
bb15 = {
Call(_49 = dump_var(13_usize, 23_usize, Move(_23), 31_usize, Move(_31), 2_usize, Move(_2), 3_usize, Move(_3)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_49 = dump_var(13_usize, 1_usize, Move(_1), 21_usize, Move(_21), 9_usize, Move(_9), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_49 = dump_var(13_usize, 25_usize, Move(_25), 11_usize, Move(_11), 14_usize, Move(_14), 6_usize, Move(_6)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(13_usize, 22_usize, Move(_22), 50_usize, _50, 50_usize, _50, 50_usize, _50), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: isize,mut _2: u8,mut _3: f32,mut _4: [u16; 6],mut _5: i128,mut _6: *mut [i16; 3],mut _7: [i64; 4],mut _8: [i64; 4],mut _9: i128,mut _10: i8,mut _11: (i8, [bool; 6], [i64; 4], i128, u8),mut _12: i128,mut _13: (isize,),mut _14: i128,mut _15: i128,mut _16: [bool; 6]) -> isize {
mir! {
type RET = isize;
let _17: [i128; 3];
let _18: Adt60;
let _19: u8;
let _20: (i8, [bool; 6], [i64; 4], i128, u8);
let _21: f32;
let _22: usize;
let _23: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _24: i32;
let _25: f32;
let _26: [u8; 5];
let _27: u64;
let _28: bool;
let _29: usize;
let _30: u32;
let _31: isize;
let _32: [u16; 6];
let _33: isize;
let _34: [i64; 6];
let _35: u32;
let _36: char;
let _37: isize;
let _38: [i64; 7];
let _39: u128;
let _40: f32;
let _41: isize;
let _42: isize;
let _43: bool;
let _44: ();
let _45: ();
{
_9 = _15;
RET = _13.0;
match _10 {
0 => bb1,
1 => bb2,
340282366920938463463374607431768211395 => bb4,
_ => bb3
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
(*_6) = [(-28953_i16),(-27581_i16),10801_i16];
_11.2 = [651637849698867558_i64,2529768791246562954_i64,(-1050179219434660293_i64),8155133517919274547_i64];
_5 = _11.3;
_13 = (_1,);
_11.2 = [639227567021166668_i64,(-7884240021089679103_i64),4867239040817846439_i64,8894473077819768541_i64];
_17 = [_14,_15,_12];
_8 = [(-2065365169759713816_i64),(-5289754310138722682_i64),5680880186667716320_i64,(-1333670863455026671_i64)];
_2 = (-1157723433615724897_i64) as u8;
_18.fld1.0 = 2_usize;
_18.fld0.fld2 = [(-23515_i16),10125_i16,(-28618_i16),(-19881_i16),(-32751_i16)];
_15 = _14 << _11.0;
_18.fld0.fld2 = [32016_i16,(-20607_i16),12053_i16,(-10524_i16),(-32341_i16)];
_11.2 = _7;
_8 = [(-1953046572334573478_i64),5041394982092161511_i64,(-2032270806916375269_i64),(-2925730929761978940_i64)];
_18.fld1.0 = !5_usize;
_1 = _13.0;
_13 = (_1,);
_18.fld0.fld0 = core::ptr::addr_of!(_11.4);
_4 = [49563_u16,2911_u16,36449_u16,40568_u16,30913_u16,38759_u16];
_7 = [2864301999101407781_i64,1539475100307187734_i64,(-7835913788105453903_i64),6754604670005964030_i64];
_2 = _15 as u8;
_7 = [8505671306950309983_i64,959826862091463520_i64,(-8683836704921467308_i64),5890203941469748367_i64];
Goto(bb5)
}
bb5 = {
_8 = [3700981329951547688_i64,8816191497658495419_i64,3211599891816090112_i64,(-1216787733489648344_i64)];
_18.fld0.fld2 = [14656_i16,12439_i16,(-1670_i16),10725_i16,(-17901_i16)];
_20.0 = 1460286961_u32 as i8;
_11.3 = _9 >> _2;
_18.fld1.2 = -_3;
_20.2 = _8;
_18.fld1.3 = 3303161595_u32 as u64;
(*_6) = [(-3940_i16),6169_i16,(-14511_i16)];
_21 = _3;
_20.2 = [7647832599923590213_i64,7593912722310019712_i64,7767457486248751745_i64,1015398901854186849_i64];
_18.fld0.fld2 = [20484_i16,(-7104_i16),(-13858_i16),(-15288_i16),(-31485_i16)];
_11.3 = (-32124_i16) as i128;
_22 = _18.fld1.0 - _18.fld1.0;
_11 = (_10, _16, _20.2, _15, _2);
Goto(bb6)
}
bb6 = {
_11.2 = [(-4221061714107531201_i64),8100146495462356369_i64,541862895917194661_i64,5134363735218171884_i64];
_21 = -_18.fld1.2;
_13 = (_1,);
_20.1 = _11.1;
_1 = _13.0;
_20.4 = _11.4;
_9 = _11.3;
_19 = !_20.4;
_10 = _11.0 + _11.0;
_19 = _15 as u8;
_25 = -_3;
_11.1 = [true,true,true,false,true,false];
RET = _1;
_18.fld0.fld0 = core::ptr::addr_of!(_20.4);
_23.0 = core::ptr::addr_of_mut!(_20);
_19 = _18.fld1.3 as u8;
match _11.0 {
0 => bb1,
1 => bb2,
2 => bb7,
3 => bb8,
4 => bb9,
340282366920938463463374607431768211395 => bb11,
_ => bb10
}
}
bb7 = {
_8 = [3700981329951547688_i64,8816191497658495419_i64,3211599891816090112_i64,(-1216787733489648344_i64)];
_18.fld0.fld2 = [14656_i16,12439_i16,(-1670_i16),10725_i16,(-17901_i16)];
_20.0 = 1460286961_u32 as i8;
_11.3 = _9 >> _2;
_18.fld1.2 = -_3;
_20.2 = _8;
_18.fld1.3 = 3303161595_u32 as u64;
(*_6) = [(-3940_i16),6169_i16,(-14511_i16)];
_21 = _3;
_20.2 = [7647832599923590213_i64,7593912722310019712_i64,7767457486248751745_i64,1015398901854186849_i64];
_18.fld0.fld2 = [20484_i16,(-7104_i16),(-13858_i16),(-15288_i16),(-31485_i16)];
_11.3 = (-32124_i16) as i128;
_22 = _18.fld1.0 - _18.fld1.0;
_11 = (_10, _16, _20.2, _15, _2);
Goto(bb6)
}
bb8 = {
(*_6) = [(-28953_i16),(-27581_i16),10801_i16];
_11.2 = [651637849698867558_i64,2529768791246562954_i64,(-1050179219434660293_i64),8155133517919274547_i64];
_5 = _11.3;
_13 = (_1,);
_11.2 = [639227567021166668_i64,(-7884240021089679103_i64),4867239040817846439_i64,8894473077819768541_i64];
_17 = [_14,_15,_12];
_8 = [(-2065365169759713816_i64),(-5289754310138722682_i64),5680880186667716320_i64,(-1333670863455026671_i64)];
_2 = (-1157723433615724897_i64) as u8;
_18.fld1.0 = 2_usize;
_18.fld0.fld2 = [(-23515_i16),10125_i16,(-28618_i16),(-19881_i16),(-32751_i16)];
_15 = _14 << _11.0;
_18.fld0.fld2 = [32016_i16,(-20607_i16),12053_i16,(-10524_i16),(-32341_i16)];
_11.2 = _7;
_8 = [(-1953046572334573478_i64),5041394982092161511_i64,(-2032270806916375269_i64),(-2925730929761978940_i64)];
_18.fld1.0 = !5_usize;
_1 = _13.0;
_13 = (_1,);
_18.fld0.fld0 = core::ptr::addr_of!(_11.4);
_4 = [49563_u16,2911_u16,36449_u16,40568_u16,30913_u16,38759_u16];
_7 = [2864301999101407781_i64,1539475100307187734_i64,(-7835913788105453903_i64),6754604670005964030_i64];
_2 = _15 as u8;
_7 = [8505671306950309983_i64,959826862091463520_i64,(-8683836704921467308_i64),5890203941469748367_i64];
Goto(bb5)
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_16 = _20.1;
_19 = _11.4 ^ _11.4;
Call(_19 = fn15(_6, _11.0, _23.0, _9, _4, _6, (*_6), _4), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
_18.fld0.fld0 = core::ptr::addr_of!(_11.4);
RET = _1 & _13.0;
_15 = 2804981190_u32 as i128;
_9 = !_20.3;
_20.2 = _8;
_2 = !_20.4;
_20 = _11;
_18.fld0.fld0 = core::ptr::addr_of!(_20.4);
_11.1 = [true,false,false,true,true,true];
_11.1 = [true,false,true,false,false,false];
_2 = 335780158576136575381754059930303370861_u128 as u8;
_18.fld0.fld0 = core::ptr::addr_of!(_2);
_31 = _1 << _20.0;
_12 = (-1160206506_i32) as i128;
_28 = true;
_32 = [47120_u16,9309_u16,25144_u16,65076_u16,30224_u16,45528_u16];
_16 = [_28,_28,_28,_28,_28,_28];
Goto(bb13)
}
bb13 = {
_20.0 = _10;
_23.0 = core::ptr::addr_of_mut!(_11);
_19 = _20.4;
_34 = [5335393380362281370_i64,(-6824100943583712867_i64),(-896955924831433812_i64),3747023952089749585_i64,5283555725334901472_i64,2390235549448302213_i64];
_37 = _31;
_20.1 = _11.1;
_25 = _3;
_8 = [500895046002694622_i64,(-1242748128409052988_i64),6031475762389273956_i64,3445082950631878201_i64];
_23.2 = core::ptr::addr_of_mut!(_20);
_33 = _31 ^ _31;
_5 = _11.3;
_39 = !326268011327470258959821694350283919468_u128;
_7 = [5336433005324057475_i64,7353109489583352746_i64,(-2436485960829519313_i64),(-6317283343121366230_i64)];
_3 = _18.fld1.3 as f32;
_11.4 = _20.4 & _19;
_15 = _5;
_25 = 33107_u16 as f32;
Call(_13 = fn18(_11.0, _16, _18.fld0.fld0, _39, _22, _8, _17, _4, _18.fld1.3, _20.1, _9), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_37 = _33;
_42 = _37 - _31;
_20.1 = [_28,_28,_28,_28,_28,_28];
_23.1 = _11.4 as u64;
_11.2 = [981332026677975408_i64,8571018833069500013_i64,(-4738419513447526116_i64),5212269096212113903_i64];
_11.1 = [_28,_28,_28,_28,_28,_28];
_15 = _9;
_20.2 = [(-559502393059279013_i64),4541606006564139865_i64,1399574124512970357_i64,3339190052495158838_i64];
_24 = !(-445004749_i32);
_7 = [(-6615590619251758952_i64),832336173421775994_i64,7803104759642497297_i64,(-1592454081517788606_i64)];
Goto(bb15)
}
bb15 = {
Call(_44 = dump_var(14_usize, 12_usize, Move(_12), 24_usize, Move(_24), 42_usize, Move(_42), 37_usize, Move(_37)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_44 = dump_var(14_usize, 5_usize, Move(_5), 31_usize, Move(_31), 33_usize, Move(_33), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_44 = dump_var(14_usize, 9_usize, Move(_9), 8_usize, Move(_8), 16_usize, Move(_16), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_44 = dump_var(14_usize, 39_usize, Move(_39), 45_usize, _45, 45_usize, _45, 45_usize, _45), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: *mut [i16; 3],mut _2: i8,mut _3: *mut (i8, [bool; 6], [i64; 4], i128, u8),mut _4: i128,mut _5: [u16; 6],mut _6: *mut [i16; 3],mut _7: [i16; 3],mut _8: [u16; 6]) -> u8 {
mir! {
type RET = u8;
let _9: [i16; 5];
let _10: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _11: [i16; 3];
let _12: ((i8, [bool; 6], [i64; 4], i128, u8),);
let _13: [u128; 2];
let _14: i8;
let _15: Adt64;
let _16: i8;
let _17: f64;
let _18: Adt59;
let _19: *const *mut i128;
let _20: [i64; 4];
let _21: ();
let _22: ();
{
(*_3).0 = _2 | _2;
(*_3).1 = [true,false,false,true,true,false];
(*_3).2 = [964917058383291386_i64,(-5653275640544403452_i64),(-2411275446212095705_i64),(-9113658847653079318_i64)];
_8 = [38613_u16,51762_u16,7589_u16,16639_u16,53908_u16,57078_u16];
_10.5.1 = '\u{16c79}';
_9 = [19312_i16,5857_i16,(-16716_i16),(-6397_i16),9087_i16];
(*_3).3 = _4 + _4;
_10.5.2 = 100751253239528183_i64 as i128;
RET = !(*_3).4;
Call(_10.5.2 = fn16((*_3).4, (*_3), (*_3).0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
(*_3).0 = -_2;
_12.0 = (*_3);
(*_1) = _7;
_12.0 = (*_3);
_12 = ((*_3),);
_10.5 = (_12.0.2, '\u{26bb3}', (*_3).3);
_10.2.0 = 13967882999635552737_usize;
_18.fld6.fld0 = core::ptr::addr_of_mut!(_11);
_18.fld6.fld5 = (_10.5.0, _10.5.1, (*_3).3);
_15.fld2 = 15177824824157640768_u64 | 5540253345817930036_u64;
_15.fld0 = core::ptr::addr_of!(_15.fld4.fld3.fld1);
_2 = _18.fld6.fld5.1 as i8;
(*_1) = [15440_i16,(-12857_i16),(-14374_i16)];
RET = _18.fld6.fld5.1 as u8;
_18.fld4 = _8;
_18.fld6.fld2 = 206844363_u32 as f64;
_15.fld4.fld3.fld5 = (_12.0.2, _18.fld6.fld5.1, (*_3).3);
_15.fld4.fld3.fld2 = -_18.fld6.fld2;
_15.fld4.fld3.fld5.0 = _12.0.2;
_10.5.2 = -(*_3).3;
_18.fld0 = [6557746455587297848200184771122035392_u128,212702836799357621908005525964354649859_u128];
_15.fld4.fld0.2 = _15.fld2 as f32;
_20 = [1530696010364412460_i64,(-5907508938942767646_i64),3585598627351610246_i64,(-1225138698781768600_i64)];
_10.2.1 = core::ptr::addr_of_mut!(_15.fld5.fld0);
_10.1 = [true,false,true,true,true,false];
Goto(bb2)
}
bb2 = {
Call(_21 = dump_var(15_usize, 8_usize, Move(_8), 4_usize, Move(_4), 5_usize, Move(_5), 20_usize, Move(_20)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: u8,mut _2: (i8, [bool; 6], [i64; 4], i128, u8),mut _3: i8) -> i128 {
mir! {
type RET = i128;
let _4: (i8, [bool; 6], [i64; 4], i128, u8);
let _5: isize;
let _6: i64;
let _7: [u128; 2];
let _8: [i64; 6];
let _9: Adt61;
let _10: u32;
let _11: isize;
let _12: *mut i128;
let _13: [i64; 6];
let _14: [u8; 5];
let _15: Adt58;
let _16: isize;
let _17: (i8, [bool; 6], [i64; 4], i128, u8);
let _18: *mut i128;
let _19: char;
let _20: Adt60;
let _21: f32;
let _22: u32;
let _23: u128;
let _24: [i64; 6];
let _25: isize;
let _26: [i128; 2];
let _27: bool;
let _28: Adt60;
let _29: (i8, [bool; 6], [i64; 4], i128, u8);
let _30: isize;
let _31: [i16; 5];
let _32: isize;
let _33: f64;
let _34: [i128; 2];
let _35: Adt52;
let _36: isize;
let _37: (*mut (i8, [bool; 6], [i64; 4], i128, u8), u64, *mut (i8, [bool; 6], [i64; 4], i128, u8));
let _38: ();
let _39: ();
{
RET = _2.3 + _2.3;
_2.0 = 15752_u16 as i8;
_2.2 = [7817002471502076105_i64,7742848752882240962_i64,4936094798886857835_i64,(-5127565212529322168_i64)];
_2.4 = !_1;
_1 = !_2.4;
_2.3 = (-40167523585018245317651115822749218859_i128) ^ 65751700855163511774937338588346346455_i128;
RET = _2.3 & _2.3;
_2.3 = (-78380022728638866936780054930952987967_i128);
_2.0 = -_3;
_2.2 = [9056452725550844985_i64,(-3451350094120789528_i64),1313702965801420789_i64,4888522385720491742_i64];
_2.2 = [(-8623914893558323306_i64),(-2837662212247348768_i64),4435964774140248633_i64,7822214669235307791_i64];
RET = _2.3;
_2.4 = _3 as u8;
_3 = _2.0 | _2.0;
_4.3 = _2.3;
_4.2 = _2.2;
Call(_3 = core::intrinsics::bswap(_2.0), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = '\u{24d9f}' as i128;
_2.0 = -_3;
_4.1 = [false,true,true,true,false,false];
_5 = 2312371766_u32 as isize;
_4 = (_2.0, _2.1, _2.2, _2.3, _2.4);
_2.2 = [(-7884618640738353548_i64),3445500513194317771_i64,(-1314821698576937842_i64),(-2864229062206581659_i64)];
_4 = (_3, _2.1, _2.2, _2.3, _2.4);
_4.0 = _5 as i8;
_2.2 = _4.2;
_2.2 = [(-3830268452014283585_i64),(-3976677755026211729_i64),3363752333671078339_i64,6576357158555122_i64];
RET = 9696696996245636193726406057802714520_u128 as i128;
_4.2 = [(-888043171145158454_i64),(-1983444443564804062_i64),693960666892363880_i64,2021284810508557258_i64];
_4.0 = '\u{f7ad3}' as i8;
RET = -_4.3;
_2.0 = (-1642500813_i32) as i8;
_1 = !_4.4;
_4.0 = (-27099_i16) as i8;
Call(_2.3 = fn17(_3, _4.4, _4.1, _2.2, _2.4, _1, _4.4, _4.4, _1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2.2 = [5398679916318032814_i64,(-4962105306719159859_i64),5370158784813011023_i64,1747600966477865057_i64];
_4.0 = !_3;
_4 = _2;
_4.4 = _2.4 % 140_u8;
_4 = (_3, _2.1, _2.2, _2.3, _1);
_6 = 5225717708115035875_u64 as i64;
_2.1 = [false,false,false,false,false,false];
_2.0 = _3;
_5 = true as isize;
_2 = (_3, _4.1, _4.2, _4.3, _1);
_7 = [323410919632396071922677343838359088833_u128,335786379024269424719870231131738289179_u128];
_4.0 = -_2.0;
RET = _2.3 + _2.3;
RET = _2.3;
_4.3 = _2.3 ^ _2.3;
_1 = _3 as u8;
_1 = !_2.4;
_2.1 = [false,true,false,false,false,false];
_4.4 = !_2.4;
Goto(bb3)
}
bb3 = {
_2.1 = [true,true,false,false,true,false];
_2.4 = _6 as u8;
_4.2 = [_6,_6,_6,_6];
_8 = [_6,_6,_6,_6,_6,_6];
_2.2 = _4.2;
_2.4 = !_1;
_4.0 = _2.0;
_2.2 = [_6,_6,_6,_6];
_12 = core::ptr::addr_of_mut!(_2.3);
_13 = [_6,_6,_6,_6,_6,_6];
_6 = _5 as i64;
_9.fld1 = [_6,_6,_6,_6,_6,_6,_6];
Goto(bb4)
}
bb4 = {
_11 = (-28099_i16) as isize;
_5 = !_11;
_1 = _2.4;
_7 = [231131313792816986088968518812002196312_u128,79338413642928148946229953322102679969_u128];
_5 = _11 & _11;
_12 = core::ptr::addr_of_mut!(_2.3);
_14 = [_4.4,_4.4,_4.4,_1,_4.4];
_13 = _8;
_4 = _2;
_4.4 = _2.4;
_2.3 = _4.3 >> _4.0;
_13 = [_6,_6,_6,_6,_6,_6];
_15.fld1 = _1 ^ _2.4;
_4.3 = !(*_12);
_5 = _11 - _11;
_2.2 = _4.2;
_14 = [_1,_15.fld1,_15.fld1,_4.4,_15.fld1];
_17.1 = _2.1;
_4.0 = _3;
_15.fld1 = _1 - _4.4;
_17.3 = (*_12) & (*_12);
_15.fld0 = (_5,);
_2.3 = _17.3;
Goto(bb5)
}
bb5 = {
_19 = '\u{7ed25}';
_2 = _4;
_17.1 = [false,true,true,false,false,true];
_8 = _13;
_8 = [_6,_6,_6,_6,_6,_6];
_17 = (_2.0, _2.1, _4.2, _2.3, _15.fld1);
_8 = [_6,_6,_6,_6,_6,_6];
_16 = _15.fld0.0;
_6 = _17.0 as i64;
_17.4 = _15.fld0.0 as u8;
_11 = _5 ^ _16;
_16 = -_11;
_9.fld0 = [(*_12),_4.3];
_4 = (_3, _17.1, _2.2, (*_12), _17.4);
_17.1 = [false,true,false,false,true,true];
_20.fld1.0 = 3_usize;
_4.2 = [_6,_6,_6,_6];
_4.2 = [_6,_6,_6,_6];
_17.2 = _4.2;
Goto(bb6)
}
bb6 = {
_11 = !_16;
_7 = [261597050333341618913185455471693495479_u128,203812146908098153504616463116607439492_u128];
_21 = (-8226_i16) as f32;
_7 = [262061021571714716616282306738491399135_u128,96382626046474459406313595294451982991_u128];
_3 = _2.0 >> _4.3;
Goto(bb7)
}
bb7 = {
_4.0 = _2.0 << (*_12);
_20.fld0.fld0 = core::ptr::addr_of!(_15.fld1);
_20.fld0.fld3 = core::ptr::addr_of!(_6);
_24 = [_6,_6,_6,_6,_6,_6];
_9.fld1 = [_6,_6,_6,_6,_6,_6,_6];
_24 = [_6,_6,_6,_6,_6,_6];
_16 = !_11;
_2.3 = _6 as i128;
_29.2 = _4.2;
_20.fld0.fld2 = [15372_i16,5217_i16,(-28477_i16),25962_i16,(-8815_i16)];
_29 = (_2.0, _17.1, _17.2, _17.3, _15.fld1);
_14 = [_1,_2.4,_15.fld1,_29.4,_15.fld1];
_17.3 = _29.3;
_17.3 = (*_12);
_17.0 = 22935_i16 as i8;
_2.2 = _29.2;
_12 = core::ptr::addr_of_mut!(_4.3);
match _20.fld1.0 {
3 => bb8,
_ => bb1
}
}
bb8 = {
_28.fld0.fld2 = [28114_i16,28811_i16,(-6292_i16),(-1373_i16),30137_i16];
_28.fld1.0 = _15.fld1 as usize;
_20.fld1.3 = 1885275613085511281_u64 / 3048066655227329448_u64;
_17.2 = _29.2;
_20.fld0.fld3 = core::ptr::addr_of!(_6);
_2.4 = !_29.4;
_15.fld0 = (_5,);
_23 = 1358726448_u32 as u128;
_32 = _5;
_28.fld1.3 = _20.fld1.3 - _20.fld1.3;
_23 = 288422533886389248477758324457123164596_u128;
_4.4 = _28.fld1.0 as u8;
_28.fld1.2 = _21 - _21;
_25 = -_11;
Goto(bb9)
}
bb9 = {
_26 = [_4.3,(*_12)];
_12 = core::ptr::addr_of_mut!((*_12));
_9.fld1 = [_6,_6,_6,_6,_6,_6,_6];
_2.1 = [false,true,true,false,true,true];
RET = _29.3 * _17.3;
_2 = _29;
Goto(bb10)
}
bb10 = {
Call(_38 = dump_var(16_usize, 4_usize, Move(_4), 13_usize, Move(_13), 6_usize, Move(_6), 1_usize, Move(_1)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
Call(_38 = dump_var(16_usize, 14_usize, Move(_14), 3_usize, Move(_3), 8_usize, Move(_8), 11_usize, Move(_11)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_38 = dump_var(16_usize, 24_usize, Move(_24), 26_usize, Move(_26), 39_usize, _39, 39_usize, _39), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i8,mut _2: u8,mut _3: [bool; 6],mut _4: [i64; 4],mut _5: u8,mut _6: u8,mut _7: u8,mut _8: u8,mut _9: u8) -> i128 {
mir! {
type RET = i128;
let _10: [i16; 3];
let _11: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _12: u128;
let _13: ([i64; 4], char, i128);
let _14: Adt60;
let _15: bool;
let _16: isize;
let _17: *mut i128;
let _18: i32;
let _19: char;
let _20: [i128; 3];
let _21: (usize, *mut *const *mut i128, f32, u64);
let _22: i8;
let _23: f32;
let _24: [u16; 6];
let _25: [i128; 3];
let _26: ();
let _27: ();
{
_1 = _6 as i8;
_9 = _6 ^ _7;
_4 = [3013630657145904062_i64,6862712688461591419_i64,(-103448914297539449_i64),1854985832366074776_i64];
_5 = _8;
_11.1 = [true,true,true,false,false,false];
_13.0 = _4;
_11.0 = [_6,_9,_2,_7,_7];
_8 = !_2;
RET = -112051627565112360046305453461305386517_i128;
_2 = 10632308532393144582_u64 as u8;
_12 = 86980691050049974490866436573211404360_u128;
_11.3 = 23744_u16;
_9 = !_5;
Goto(bb1)
}
bb1 = {
_2 = 9223372036854775807_isize as u8;
_11.5 = (_4, '\u{12188}', (-160549331581468609065948285389595893413_i128));
_11.2.3 = 641309881799894962_u64;
_14.fld0.fld0 = core::ptr::addr_of!(_5);
_11.5 = (_13.0, '\u{6f7ee}', (-50188495349857743256641279138540481372_i128));
match _11.5.2 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
290093871571080720206733328293227730084 => bb9,
_ => bb8
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_11.1 = [false,true,false,true,false,false];
_14.fld1.3 = _11.2.3;
_9 = _6 | _5;
_11.2.2 = _12 as f32;
_10 = [(-13728_i16),9912_i16,(-11749_i16)];
_15 = false & false;
_11.5.1 = '\u{b7f58}';
RET = _11.5.2;
_6 = _9;
match _11.5.2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
290093871571080720206733328293227730084 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_11.3 = _11.5.2 as u16;
_11.2.3 = _11.2.2 as u64;
_18 = 2299208139_u32 as i32;
_13.0 = [(-5907137290501048377_i64),(-2598066383630509860_i64),2550416406355715036_i64,(-3397093577333770742_i64)];
_17 = core::ptr::addr_of_mut!(_13.2);
_6 = _7;
(*_17) = _11.5.2;
_15 = true;
_11.2.0 = 6_usize - 13400927029299722617_usize;
_11.5.0 = [(-15063171258935838_i64),(-7660212769093619007_i64),4113527121417828066_i64,5204072091858366305_i64];
_14.fld1.0 = _11.2.0 * _11.2.0;
_21.2 = _11.2.3 as f32;
_14.fld1.2 = -_21.2;
_11.3 = _12 as u16;
RET = -_11.5.2;
_4 = [6655584296537970416_i64,(-8603901581766008978_i64),6278385307305320964_i64,(-9054646144648869925_i64)];
_14.fld1.3 = _11.2.3 | _11.2.3;
match (*_17) {
0 => bb11,
1 => bb8,
2 => bb6,
3 => bb9,
4 => bb13,
290093871571080720206733328293227730084 => bb15,
_ => bb14
}
}
bb13 = {
_11.1 = [false,true,false,true,false,false];
_14.fld1.3 = _11.2.3;
_9 = _6 | _5;
_11.2.2 = _12 as f32;
_10 = [(-13728_i16),9912_i16,(-11749_i16)];
_15 = false & false;
_11.5.1 = '\u{b7f58}';
RET = _11.5.2;
_6 = _9;
match _11.5.2 {
0 => bb7,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb10,
290093871571080720206733328293227730084 => bb12,
_ => bb11
}
}
bb14 = {
Return()
}
bb15 = {
_16 = 2687121627_u32 as isize;
_16 = _15 as isize;
_7 = _1 as u8;
_11.5.1 = '\u{57f60}';
_21.2 = _11.2.2 * _11.2.2;
_13.2 = !_11.5.2;
_12 = 55121558219210221030126076334728792297_u128;
_20 = [_13.2,_13.2,(*_17)];
(*_17) = _11.5.2;
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(17_usize, 12_usize, Move(_12), 5_usize, Move(_5), 9_usize, Move(_9), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(17_usize, 16_usize, Move(_16), 18_usize, Move(_18), 3_usize, Move(_3), 27_usize, _27), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn18(mut _1: i8,mut _2: [bool; 6],mut _3: *const u8,mut _4: u128,mut _5: usize,mut _6: [i64; 4],mut _7: [i128; 3],mut _8: [u16; 6],mut _9: u64,mut _10: [bool; 6],mut _11: i128) -> (isize,) {
mir! {
type RET = (isize,);
let _12: (usize, *mut *const *mut i128, f32, u64);
let _13: [u8; 5];
let _14: isize;
let _15: *mut i128;
let _16: isize;
let _17: [i128; 2];
let _18: u16;
let _19: [u8; 5];
let _20: [i128; 3];
let _21: (isize,);
let _22: [u8; 5];
let _23: i128;
let _24: isize;
let _25: Adt55;
let _26: [i16; 3];
let _27: [i64; 4];
let _28: bool;
let _29: (isize,);
let _30: [i16; 3];
let _31: [u128; 2];
let _32: f64;
let _33: usize;
let _34: ();
let _35: ();
{
_8 = [19458_u16,4778_u16,52606_u16,58777_u16,8672_u16,59060_u16];
_2 = [true,false,true,false,false,true];
_1 = 46_i8 << _11;
_9 = _5 as u64;
RET.0 = (-9223372036854775808_isize);
_6 = [(-989760358958606961_i64),(-5739401517464967178_i64),7428342468551262666_i64,881635939901563926_i64];
RET.0 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_12.3 = _9 & _9;
_12.3 = _9 >> _11;
_12.2 = (-14197_i16) as f32;
Call(_11 = fn19(_6, _3, _8), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET.0 = (-9223372036854775808_isize);
_7 = [_11,_11,_11];
_11 = (-29024_i16) as i128;
_12.0 = _1 as usize;
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_11 = (-703707905_i32) as i128;
RET = ((-122_isize),);
RET.0 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_14 = !9223372036854775807_isize;
_12.2 = _11 as f32;
_8 = [15858_u16,46458_u16,28713_u16,54071_u16,55219_u16,64229_u16];
_12.3 = _9;
(*_3) = 154_u8 + 143_u8;
(*_3) = 148_u8 + 189_u8;
_9 = _12.3;
_11 = _1 as i128;
_6 = [(-2040990626533811551_i64),3592199285331314936_i64,3036207004590682913_i64,(-5981771561185110249_i64)];
_9 = _12.3;
RET.0 = 4976_i16 as isize;
_1 = -107_i8;
_14 = _1 as isize;
_4 = 18295225435113281353278775141263618071_u128 << _14;
(*_3) = 130_u8 << _12.0;
_9 = !_12.3;
RET = (_14,);
_3 = core::ptr::addr_of!((*_3));
Goto(bb2)
}
bb2 = {
_9 = _12.3 >> _11;
_12.2 = 55778_u16 as f32;
_5 = !_12.0;
_8 = [4175_u16,36301_u16,2533_u16,31375_u16,37788_u16,61950_u16];
_11 = !8754526861363244535817446410829472181_i128;
RET.0 = _14 & _14;
_12.0 = _1 as usize;
(*_3) = _9 as u8;
RET = (_14,);
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_3 = core::ptr::addr_of!((*_3));
_12.0 = _5;
RET.0 = 64297_u16 as isize;
_5 = !_12.0;
(*_3) = !80_u8;
_12.3 = !_9;
_4 = 142570081422473881113685841774471990765_u128;
_6 = [7357015019265537001_i64,7596063425832155287_i64,(-1884334123260794787_i64),3732796880453895823_i64];
_6 = [5269970269695840506_i64,5514827749774497183_i64,3433843476122177130_i64,(-6105584974316616006_i64)];
(*_3) = _1 as u8;
(*_3) = 66_u8 << _12.0;
RET = (_14,);
RET = (_14,);
Goto(bb3)
}
bb3 = {
_16 = false as isize;
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_12.2 = 16743_u16 as f32;
_12.3 = (-5627077958547415118_i64) as u64;
_15 = core::ptr::addr_of_mut!(_11);
_11 = -(-55754449700108967183426758744723148043_i128);
_12.3 = '\u{2712a}' as u64;
(*_3) = _1 as u8;
_14 = !_16;
_7 = [_11,(*_15),(*_15)];
_3 = core::ptr::addr_of!((*_3));
RET = (_14,);
_3 = core::ptr::addr_of!((*_3));
_16 = !_14;
_9 = !_12.3;
_12.3 = _9;
Goto(bb4)
}
bb4 = {
_18 = !43419_u16;
_3 = core::ptr::addr_of!((*_3));
RET.0 = _14 ^ _14;
_4 = !35450294836493616566278325842340965690_u128;
_20 = [_11,(*_15),(*_15)];
_10 = _2;
(*_3) = _1 as u8;
_19 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_12.2 = _12.3 as f32;
_9 = _12.3;
_17 = [(*_15),_11];
_2 = [true,false,false,true,false,false];
RET = (_14,);
_6 = [8404392175826484472_i64,(-5745585900782024910_i64),(-7705533015878586142_i64),(-5114117981823631359_i64)];
_7 = _20;
_6 = [4661787472077205174_i64,6628707824756226123_i64,5456354177727211093_i64,6436082542549802440_i64];
_11 = (-102856817672608324822220961618452489717_i128);
match (*_15) {
0 => bb5,
1 => bb6,
2 => bb7,
3 => bb8,
4 => bb9,
237425549248330138641153645813315721739 => bb11,
_ => bb10
}
}
bb5 = {
_16 = false as isize;
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_12.2 = 16743_u16 as f32;
_12.3 = (-5627077958547415118_i64) as u64;
_15 = core::ptr::addr_of_mut!(_11);
_11 = -(-55754449700108967183426758744723148043_i128);
_12.3 = '\u{2712a}' as u64;
(*_3) = _1 as u8;
_14 = !_16;
_7 = [_11,(*_15),(*_15)];
_3 = core::ptr::addr_of!((*_3));
RET = (_14,);
_3 = core::ptr::addr_of!((*_3));
_16 = !_14;
_9 = !_12.3;
_12.3 = _9;
Goto(bb4)
}
bb6 = {
_9 = _12.3 >> _11;
_12.2 = 55778_u16 as f32;
_5 = !_12.0;
_8 = [4175_u16,36301_u16,2533_u16,31375_u16,37788_u16,61950_u16];
_11 = !8754526861363244535817446410829472181_i128;
RET.0 = _14 & _14;
_12.0 = _1 as usize;
(*_3) = _9 as u8;
RET = (_14,);
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_3 = core::ptr::addr_of!((*_3));
_12.0 = _5;
RET.0 = 64297_u16 as isize;
_5 = !_12.0;
(*_3) = !80_u8;
_12.3 = !_9;
_4 = 142570081422473881113685841774471990765_u128;
_6 = [7357015019265537001_i64,7596063425832155287_i64,(-1884334123260794787_i64),3732796880453895823_i64];
_6 = [5269970269695840506_i64,5514827749774497183_i64,3433843476122177130_i64,(-6105584974316616006_i64)];
(*_3) = _1 as u8;
(*_3) = 66_u8 << _12.0;
RET = (_14,);
RET = (_14,);
Goto(bb3)
}
bb7 = {
RET.0 = (-9223372036854775808_isize);
_7 = [_11,_11,_11];
_11 = (-29024_i16) as i128;
_12.0 = _1 as usize;
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_11 = (-703707905_i32) as i128;
RET = ((-122_isize),);
RET.0 = (-9223372036854775808_isize) - (-9223372036854775808_isize);
_14 = !9223372036854775807_isize;
_12.2 = _11 as f32;
_8 = [15858_u16,46458_u16,28713_u16,54071_u16,55219_u16,64229_u16];
_12.3 = _9;
(*_3) = 154_u8 + 143_u8;
(*_3) = 148_u8 + 189_u8;
_9 = _12.3;
_11 = _1 as i128;
_6 = [(-2040990626533811551_i64),3592199285331314936_i64,3036207004590682913_i64,(-5981771561185110249_i64)];
_9 = _12.3;
RET.0 = 4976_i16 as isize;
_1 = -107_i8;
_14 = _1 as isize;
_4 = 18295225435113281353278775141263618071_u128 << _14;
(*_3) = 130_u8 << _12.0;
_9 = !_12.3;
RET = (_14,);
_3 = core::ptr::addr_of!((*_3));
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_13 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_8 = [_18,_18,_18,_18,_18,_18];
_4 = 2183_i16 as u128;
(*_15) = _1 as i128;
(*_15) = (-112950295432252867211190087464252434186_i128);
_12.3 = _9 << _12.0;
(*_3) = '\u{42989}' as u8;
_7 = [_11,(*_15),(*_15)];
_22 = [(*_3),(*_3),(*_3),(*_3),(*_3)];
_10 = [false,true,true,true,true,false];
_12.0 = !_5;
(*_15) = (-9221562854510471314652840018213618282_i128) & (-92620822169240240935722638479221325118_i128);
Goto(bb12)
}
bb12 = {
_21.0 = -_14;
Goto(bb13)
}
bb13 = {
_23 = _11 & (*_15);
_25.fld1.fld1.2 = _12.0 as f64;
_25.fld2.fld3.fld5.2 = _23 - _23;
_21 = (_16,);
_25.fld0.fld1 = (_1, _2, _6, (*_15), (*_3));
_25.fld1.fld2 = _22;
_3 = core::ptr::addr_of!(_25.fld0.fld1.4);
Goto(bb14)
}
bb14 = {
RET.0 = _4 as isize;
_25.fld2.fld3.fld3 = core::ptr::addr_of!((*_3));
_2 = [true,true,true,false,true,true];
_25.fld2.fld3.fld5 = (_6, '\u{8d556}', (*_15));
_25.fld2.fld2.fld1.2 = -_25.fld1.fld1.2;
_25.fld3 = [21802_i16,31380_i16,(-1894_i16)];
_25.fld2.fld2.fld1.4 = core::ptr::addr_of_mut!(_26);
_25.fld1.fld1.3 = [(-14633_i16),4387_i16,(-5524_i16)];
_9 = _12.3;
RET.0 = _16 | _16;
_25.fld0.fld4.fld5.0 = _25.fld2.fld3.fld5.0;
_25.fld0.fld4.fld5 = _25.fld2.fld3.fld5;
_25.fld2.fld2.fld1.0 = core::ptr::addr_of!(_15);
_29 = (_14,);
_25.fld0.fld4.fld6 = (-32739_i16) as i128;
_15 = core::ptr::addr_of_mut!(_25.fld2.fld3.fld6);
_25.fld1.fld5 = core::ptr::addr_of_mut!(_25.fld1.fld1.0);
_25.fld1.fld1.4 = core::ptr::addr_of_mut!(_25.fld3);
_25.fld0.fld0.0 = _5 >> _5;
_23 = _25.fld0.fld4.fld5.2 * _25.fld0.fld4.fld5.2;
_12.2 = _25.fld2.fld2.fld1.2 as f32;
_25.fld0.fld4.fld2 = -_25.fld2.fld2.fld1.2;
_25.fld0.fld0.0 = !_12.0;
_25.fld0.fld4.fld1 = [_25.fld0.fld4.fld5.2,_25.fld0.fld1.3];
_25.fld2.fld3 = Adt50 { fld0: _25.fld1.fld1.4,fld1: _25.fld0.fld4.fld1,fld2: _25.fld1.fld1.2,fld3: _3,fld4: _12.3,fld5: _25.fld0.fld4.fld5,fld6: _23 };
_25.fld0.fld4.fld4 = _25.fld2.fld3.fld4;
Goto(bb15)
}
bb15 = {
Call(_34 = dump_var(18_usize, 6_usize, Move(_6), 20_usize, Move(_20), 9_usize, Move(_9), 18_usize, Move(_18)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_34 = dump_var(18_usize, 10_usize, Move(_10), 1_usize, Move(_1), 5_usize, Move(_5), 16_usize, Move(_16)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_34 = dump_var(18_usize, 14_usize, Move(_14), 19_usize, Move(_19), 35_usize, _35, 35_usize, _35), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [i64; 4],mut _2: *const u8,mut _3: [u16; 6]) -> i128 {
mir! {
type RET = i128;
let _4: ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128));
let _5: Adt58;
let _6: [i64; 6];
let _7: i16;
let _8: [i128; 3];
let _9: isize;
let _10: [u16; 6];
let _11: [u16; 6];
let _12: f64;
let _13: (i8, [bool; 6], [i64; 4], i128, u8);
let _14: usize;
let _15: ();
let _16: ();
{
RET = !5545570844490478867074768942318289806_i128;
(*_2) = 5865071937301796099_u64 as u8;
_2 = core::ptr::addr_of!((*_2));
_4.1 = [false,false,true,false,true,false];
(*_2) = 178_u8;
_4.1 = [false,true,true,true,false,false];
_4.0 = [(*_2),(*_2),(*_2),(*_2),(*_2)];
_4.5.1 = '\u{9eb93}';
_4.2.0 = 2031053850228722975_usize;
_5.fld1 = !(*_2);
_5.fld0.0 = -(-126_isize);
_1 = [2966427655836052684_i64,5822318040631008150_i64,3894765595083513531_i64,(-6080216332987227635_i64)];
_4.2.3 = !10783265078452911517_u64;
_4.3 = 58224_u16;
_4.3 = !4546_u16;
_4.5.0 = [3436813171179517917_i64,1476139335295800028_i64,(-6864216872701032308_i64),(-7647653010419621967_i64)];
Goto(bb1)
}
bb1 = {
_7 = 3748836865_u32 as i16;
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
(*_2) = _5.fld1 * _5.fld1;
_4.0 = [(*_2),(*_2),(*_2),(*_2),_5.fld1];
Goto(bb2)
}
bb2 = {
_4.3 = !54339_u16;
(*_2) = _7 as u8;
_4.5.2 = -7159031816306085661179823783472784949_i128;
_4.2.2 = _4.2.3 as f32;
_1 = [1091950613434210570_i64,(-3688659201646216752_i64),(-4936736032400809862_i64),(-8460611249763203486_i64)];
_7 = (-26458_i16) & (-15231_i16);
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_4.2.3 = 12005416001912835630_u64;
_4.5.2 = !(-145415634854791025327097461189405717200_i128);
_4.5.1 = '\u{ffa99}';
_4.2.3 = (-1459129697_i32) as u64;
_8 = [_4.5.2,_4.5.2,_4.5.2];
_1 = [(-5642822799325424413_i64),4934403105604688276_i64,4961332119718204117_i64,(-9017579376977983473_i64)];
_4.2.2 = _4.5.2 as f32;
_2 = core::ptr::addr_of!((*_2));
_4.5.1 = '\u{31d58}';
_8 = [_4.5.2,_4.5.2,_4.5.2];
Goto(bb3)
}
bb3 = {
_5.fld1 = !(*_2);
_4.2.3 = 2632202125177422382_u64 % 15715105415191840044_u64;
match _4.2.0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
2031053850228722975 => bb7,
_ => bb6
}
}
bb4 = {
_4.3 = !54339_u16;
(*_2) = _7 as u8;
_4.5.2 = -7159031816306085661179823783472784949_i128;
_4.2.2 = _4.2.3 as f32;
_1 = [1091950613434210570_i64,(-3688659201646216752_i64),(-4936736032400809862_i64),(-8460611249763203486_i64)];
_7 = (-26458_i16) & (-15231_i16);
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_4.2.3 = 12005416001912835630_u64;
_4.5.2 = !(-145415634854791025327097461189405717200_i128);
_4.5.1 = '\u{ffa99}';
_4.2.3 = (-1459129697_i32) as u64;
_8 = [_4.5.2,_4.5.2,_4.5.2];
_1 = [(-5642822799325424413_i64),4934403105604688276_i64,4961332119718204117_i64,(-9017579376977983473_i64)];
_4.2.2 = _4.5.2 as f32;
_2 = core::ptr::addr_of!((*_2));
_4.5.1 = '\u{31d58}';
_8 = [_4.5.2,_4.5.2,_4.5.2];
Goto(bb3)
}
bb5 = {
_7 = 3748836865_u32 as i16;
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
(*_2) = _5.fld1 * _5.fld1;
_4.0 = [(*_2),(*_2),(*_2),(*_2),_5.fld1];
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
_5.fld1 = (*_2) & (*_2);
_4.5.2 = 120407446552717334469901363145957624383_i128;
_4.2.0 = 0_usize | 2_usize;
RET = _4.5.2;
_13 = ((-70_i8), _4.1, _4.5.0, _4.5.2, (*_2));
_4.5.2 = 8247244179716218267_i64 as i128;
_7 = 1071_i16 - 415_i16;
_4.5.1 = '\u{e618}';
_10 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
match _13.0 {
0 => bb8,
1 => bb9,
2 => bb10,
3 => bb11,
4 => bb12,
5 => bb13,
340282366920938463463374607431768211386 => bb15,
_ => bb14
}
}
bb8 = {
Return()
}
bb9 = {
_7 = 3748836865_u32 as i16;
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
(*_2) = _5.fld1 * _5.fld1;
_4.0 = [(*_2),(*_2),(*_2),(*_2),_5.fld1];
Goto(bb2)
}
bb10 = {
_4.3 = !54339_u16;
(*_2) = _7 as u8;
_4.5.2 = -7159031816306085661179823783472784949_i128;
_4.2.2 = _4.2.3 as f32;
_1 = [1091950613434210570_i64,(-3688659201646216752_i64),(-4936736032400809862_i64),(-8460611249763203486_i64)];
_7 = (-26458_i16) & (-15231_i16);
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_4.2.3 = 12005416001912835630_u64;
_4.5.2 = !(-145415634854791025327097461189405717200_i128);
_4.5.1 = '\u{ffa99}';
_4.2.3 = (-1459129697_i32) as u64;
_8 = [_4.5.2,_4.5.2,_4.5.2];
_1 = [(-5642822799325424413_i64),4934403105604688276_i64,4961332119718204117_i64,(-9017579376977983473_i64)];
_4.2.2 = _4.5.2 as f32;
_2 = core::ptr::addr_of!((*_2));
_4.5.1 = '\u{31d58}';
_8 = [_4.5.2,_4.5.2,_4.5.2];
Goto(bb3)
}
bb11 = {
_5.fld1 = !(*_2);
_4.2.3 = 2632202125177422382_u64 % 15715105415191840044_u64;
match _4.2.0 {
0 => bb1,
1 => bb2,
2 => bb4,
3 => bb5,
2031053850228722975 => bb7,
_ => bb6
}
}
bb12 = {
_4.3 = !54339_u16;
(*_2) = _7 as u8;
_4.5.2 = -7159031816306085661179823783472784949_i128;
_4.2.2 = _4.2.3 as f32;
_1 = [1091950613434210570_i64,(-3688659201646216752_i64),(-4936736032400809862_i64),(-8460611249763203486_i64)];
_7 = (-26458_i16) & (-15231_i16);
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_4.2.3 = 12005416001912835630_u64;
_4.5.2 = !(-145415634854791025327097461189405717200_i128);
_4.5.1 = '\u{ffa99}';
_4.2.3 = (-1459129697_i32) as u64;
_8 = [_4.5.2,_4.5.2,_4.5.2];
_1 = [(-5642822799325424413_i64),4934403105604688276_i64,4961332119718204117_i64,(-9017579376977983473_i64)];
_4.2.2 = _4.5.2 as f32;
_2 = core::ptr::addr_of!((*_2));
_4.5.1 = '\u{31d58}';
_8 = [_4.5.2,_4.5.2,_4.5.2];
Goto(bb3)
}
bb13 = {
_7 = 3748836865_u32 as i16;
_3 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
(*_2) = _5.fld1 * _5.fld1;
_4.0 = [(*_2),(*_2),(*_2),(*_2),_5.fld1];
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
RET = -_4.5.2;
_4.2.0 = 2079770123_u32 as usize;
_11 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_5.fld0.0 = -(-9223372036854775808_isize);
_1 = [623215628222376445_i64,6361806440687810172_i64,(-2239200861774870780_i64),(-7101678546122934789_i64)];
_4.5.2 = _13.3 * _13.3;
_12 = (-1785817649316193950_i64) as f64;
_11 = [_4.3,_4.3,_4.3,_4.3,_4.3,_4.3];
_5.fld0.0 = (-9223372036854775808_isize);
_6 = [4992559579437849086_i64,4610344106242902481_i64,1801652274836885621_i64,5575614127825636294_i64,2372847024500973193_i64,5314617821797022856_i64];
_9 = _5.fld0.0;
_8 = [_13.3,_4.5.2,_4.5.2];
_13.2 = [(-5097378398522674884_i64),(-4742623889043702192_i64),1389153376434391846_i64,(-5183808467039656685_i64)];
(*_2) = 107268713648310701178855256779876822273_u128 as u8;
_5.fld0.0 = _9;
_4.5.0 = [4194095854983177346_i64,4504010705568556545_i64,(-3864261893645813066_i64),(-4186093088098302354_i64)];
_13.3 = -_4.5.2;
Goto(bb16)
}
bb16 = {
Call(_15 = dump_var(19_usize, 9_usize, Move(_9), 11_usize, Move(_11), 13_usize, Move(_13), 1_usize, Move(_1)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{4babb}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box(64_i8), std::hint::black_box((-24070_i16)), std::hint::black_box((-1707199157_i32)), std::hint::black_box((-2780372343343774239_i64)), std::hint::black_box((-61178348723312967473514318898429201262_i128)), std::hint::black_box(10794229764797721928_u64), std::hint::black_box(188_u8), std::hint::black_box(3217843773_u32));
                
            }
#[derive(Debug)]
pub struct Adt49 {
fld0: *const u8,
fld1: *mut *const *mut i128,
fld2: [i16; 5],
fld3: *const i64,
}
#[derive(Debug)]
pub struct Adt50 {
fld0: *mut [i16; 3],
fld1: [i128; 2],
fld2: f64,
fld3: *const u8,
fld4: u64,
fld5: ([i64; 4], char, i128),
fld6: i128,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt51 {
fld0: *mut (i8, [bool; 6], [i64; 4], i128, u8),
fld1: (*const *mut i128, *const i64, f64, [i16; 3], *mut [i16; 3]),
fld2: [u8; 5],
fld3: *const bool,
fld4: i16,
fld5: *mut *const *mut i128,
}
#[derive(Debug)]
pub struct Adt52 {
fld0: [bool; 6],
fld1: *mut *const *mut i128,
fld2: Adt51,
fld3: Adt50,
}
#[derive(Debug,Copy,Clone)]
pub struct Adt53 {
fld0: *const *mut i128,
fld1: *const ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128)),
}
#[derive(Debug)]
pub struct Adt54 {
fld0: (usize, *mut *const *mut i128, f32, u64),
fld1: (i8, [bool; 6], [i64; 4], i128, u8),
fld2: *mut (i8, [bool; 6], [i64; 4], i128, u8),
fld3: ([i64; 4], char, i128),
fld4: Adt50,
fld5: i32,
}
#[derive(Debug)]
pub struct Adt55 {
fld0: Adt54,
fld1: Adt51,
fld2: Adt52,
fld3: [i16; 3],
}
#[derive(Debug,Copy,Clone)]
pub struct Adt56 {
fld0: *mut (i8, [bool; 6], [i64; 4], i128, u8),
fld1: char,
fld2: Adt51,
fld3: [i128; 3],
fld4: *const ([u8; 5], [bool; 6], (usize, *mut *const *mut i128, f32, u64), u16, *const i64, ([i64; 4], char, i128)),
fld5: [i64; 6],
fld6: [i64; 4],
fld7: *mut [i16; 3],
}
#[derive(Debug)]
pub struct Adt57 {
fld0: [i64; 4],
fld1: char,
fld2: ((i8, [bool; 6], [i64; 4], i128, u8),),
fld3: u64,
fld4: u8,
fld5: Adt54,
fld6: Adt56,
}
#[derive(Debug)]
pub struct Adt58 {
fld0: (isize,),
fld1: u8,
}
#[derive(Debug)]
pub struct Adt59 {
fld0: [u128; 2],
fld1: (isize,),
fld2: [i16; 3],
fld3: f32,
fld4: [u16; 6],
fld5: [i16; 5],
fld6: Adt50,
}
#[derive(Debug)]
pub struct Adt60 {
fld0: Adt49,
fld1: (usize, *mut *const *mut i128, f32, u64),
}
#[derive(Debug)]
pub struct Adt61 {
fld0: [i128; 2],
fld1: [i64; 7],
}
#[derive(Debug)]
pub struct Adt62 {
fld0: (usize, *mut *const *mut i128, f32, u64),
fld1: *const [i128; 2],
fld2: f32,
fld3: Adt50,
fld4: usize,
fld5: f64,
fld6: *const (i8, [bool; 6], [i64; 4], i128, u8),
fld7: i128,
}
#[derive(Debug)]
pub struct Adt63 {
fld0: f32,
fld1: [bool; 6],
fld2: *const *const bool,
fld3: ((i8, [bool; 6], [i64; 4], i128, u8),),
}
#[derive(Debug)]
pub struct Adt64 {
fld0: *const [i128; 2],
fld1: *const i64,
fld2: u64,
fld3: f64,
fld4: Adt62,
fld5: Adt53,
}
#[derive(Debug)]
pub struct Adt65 {
fld0: *mut *const *mut i128,
fld1: Adt60,
fld2: Adt50,
fld3: [bool; 6],
fld4: *const u8,
}

