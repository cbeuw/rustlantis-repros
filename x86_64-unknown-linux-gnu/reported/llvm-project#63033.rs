#![recursion_limit = "256"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::collections::hash_map::DefaultHasher;
    use std::hash::{Hash, Hasher};

    static mut H: DefaultHasher = DefaultHasher::new();

    fn dump_var<T: Hash, U: Hash, V: Hash, W: Hash>(
        val0: T,
        val1: U,
        val2: V,
        val3: W,
    ) {
        unsafe {
            val0.hash(&mut H);
            val1.hash(&mut H);
            val2.hash(&mut H);
            val3.hash(&mut H);
        }
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: i64,mut _2: [f32; 5],mut _3: u16) -> [i64; 5] {
mir! {
type RET = [i64; 5];
let _4: *mut ([i64; 7], [usize; 8]);
let _5: *const i32;
let _6: u64;
let _7: [u32; 1];
let _8: i64;
let _9: (usize, i8, u16);
let _10: *const i32;
let _11: (*mut u32,);
let _12: u64;
let _13: *const f64;
let _14: [bool; 5];
let _15: *const *const u64;
let _16: usize;
let _17: ([f32; 5], u64);
let _18: [u32; 1];
let _19: *mut (i8,);
let _20: (i64, *const i128, [i64; 7], u32);
let _21: *const i32;
let _22: u128;
let _23: i8;
let _24: [u32; 1];
let _25: u32;
let _26: [f32; 5];
let _27: (usize, i8, u16);
let _28: (i8,);
let _29: *const [i64; 7];
let _30: u32;
let _31: (i64, *const i128, [i64; 7], u32);
let _32: [u128; 4];
let _33: i32;
let _34: ([i64; 7], [usize; 8]);
let _35: *const i32;
let _36: ([f32; 5], u64);
let _37: i8;
let _38: u32;
let _39: (*mut u32,);
let _40: *const char;
let _41: [i64; 7];
let _42: [usize; 8];
let _43: *const *const u64;
let _44: u64;
let _45: u8;
let _46: *const char;
let _47: u64;
let _48: ();
let _49: ();
{
_2 = [f32::INFINITY; 5];
_1 = 6218490540869696184_i64 << 6737378401117899270_i64;
_3 = 65414_u16 << _1;
RET = [(-1361958902745418901_i64); 5];
RET = [(-7581441316308776341_i64); 5];
_2 = [f32::NEG_INFINITY; 5];
_3 = 64871_u16;
RET = [(-674812627206056916_i64); 5];
_2 = [(-0.0000000000000000000000000000000000000020454445398087203_f32); 5];
_2 = [(-0.000000000000000000000000000000000000006399309697032142_f32); 5];
match _3 {
64871 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_3 = 17_i8 as u16;
_3 = 22195_u16 % 22310_u16;
_2 = [(-0.0000000000000000000000000000000000000051111730901938756_f32); 5];
RET = [2210498780516988852_i64; 5];
_2 = [(-0.000000000000000000000000000000000000003004252185456761_f32); 5];
_2 = [f32::INFINITY; 5];
RET = [(-6754188693844723088_i64); 5];
RET = [(-4235148432532101585_i64); 5];
RET = [472455650377404829_i64; 5];
RET = [4636944758052534732_i64; 5];
RET = [(-3914982151687907523_i64); 5];
_1 = 254_u8 as i64;
RET = [5975735111878145757_i64; 5];
RET = [2388653809354627276_i64; 5];
Goto(bb3)
}
bb3 = {
_1 = (-6691288295697922382_i64) << _3;
_1 = -(-8517163131148942016_i64);
_3 = 26745_u16;
_1 = -(-7989804154407352935_i64);
_2 = [f32::NAN; 5];
RET = [4788386914583293508_i64; 5];
_6 = 5348540087236561880_u64;
_2 = [0.000000000000000000000000000000000000011237628956745011_f32; 5];
_3 = 6564_u16;
RET = [2254804883029714452_i64; 5];
_1 = (-8350235780867441838_i64) - 7597893127460064327_i64;
_1 = 4545356225229312069_i64;
RET = [7408675448853404626_i64; 5];
RET = [(-8768643479734023827_i64); 5];
_1 = -1221812654697283065_i64;
Goto(bb4)
}
bb4 = {
_1 = (-8595701207238636479_i64) ^ (-6464802431818271401_i64);
_2 = [f32::INFINITY; 5];
_6 = 129483806911625770532434170236861981931_u128 as u64;
_6 = !3881203521477776462_u64;
RET = [(-9050729216659738610_i64); 5];
RET = [(-6228850649518206782_i64); 5];
_3 = !51519_u16;
_1 = (-3893472484582354874_i64) ^ 9111777736614332917_i64;
RET = [4488050184903849677_i64; 5];
_2 = [f32::NAN; 5];
_3 = 19694_u16 / 46079_u16;
_7 = [2221690622_u32; 1];
_2 = [f32::INFINITY; 5];
RET = [6117108996594892202_i64; 5];
_9 = (6_usize, (-91_i8), 18101_u16);
_8 = _1 - _1;
RET = [7346384900448966598_i64; 5];
_3 = 2238345302942061707_usize as u16;
Goto(bb5)
}
bb5 = {
_1 = _8;
_7 = [1159082242_u32; 1];
_7 = [2133307218_u32; 1];
RET = [(-8963445845215189587_i64); 5];
_6 = 10109561336530908730_u64 << _3;
_2 = [0_f32; 5];
RET = [(-4945523173578840131_i64); 5];
_9.2 = _3 * _3;
_9.1 = f64::NEG_INFINITY as i8;
_2 = [f32::INFINITY; 5];
RET = [(-4720619220276290893_i64); 5];
RET = [(-7438636453875533199_i64); 5];
Call(_5, bb6, fn1(_2, _8, _2, _8, _8, RET, _6, _1))
}
bb6 = {
RET = [(-5680878916434388301_i64); 5];
_9.1 = !(-48_i8);
_9.0 = 5399954755110045720_usize;
_9.1 = 66_i8;
_9.2 = _3;
_9.0 = (-25184_i16) as usize;
_9 = (5_usize, 53_i8, 33574_u16);
_7 = [3356261434_u32; 1];
_9.1 = 44_i8;
_9.2 = _3 + _3;
_9.0 = (-195452008_i32) as usize;
_10 = _5;
_7 = [1398816099_u32; 1];
_12 = !_6;
_12 = _6 ^ _6;
_14 = [false; 5];
_9.0 = 54_u8 as usize;
_9.0 = 13229837911016290596_usize;
_8 = !_1;
_16 = 1636687108_u32 as usize;
_17.1 = _6 * _12;
_1 = _8;
Goto(bb7)
}
bb7 = {
_8 = _1;
_16 = _9.0;
_18 = [1446132749_u32; 1];
RET = [(-1151028599728698670_i64); 5];
_5 = _10;
_11.0 = core::ptr::addr_of_mut!(_20.3);
_3 = 4017555483_u32 as u16;
_9 = (7_usize, (-36_i8), 25159_u16);
_20.2 = [8548196420366542446_i64; 7];
_20.3 = 2258845493_u32 >> _8;
_21 = _5;
_17.0 = _2;
_11.0 = core::ptr::addr_of_mut!(_20.3);
_3 = !_9.2;
_16 = _9.0 - _9.0;
_20.0 = -_8;
_23 = _9.1;
RET = [1151098905968674093_i64; 5];
RET = [(-224203233628557165_i64); 5];
_21 = _10;
_14 = [true; 5];
_8 = '\u{57351}' as i64;
_9.1 = _23 << _20.3;
Goto(bb8)
}
bb8 = {
_22 = (-9223372036854775808_isize) as u128;
_5 = _10;
_9 = (4_usize, 111_i8, 44848_u16);
_20.3 = !216492895_u32;
_1 = -_20.0;
_20.3 = 15789_i16 as u32;
_12 = _9.2 as u64;
_9.1 = _23 - _23;
_24 = [2414034234_u32; 1];
_24 = [3971445833_u32; 1];
_9.0 = !_16;
_22 = 207796554984720062334677165799491028241_u128;
_25 = (-19450_i16) as u32;
_16 = _9.0;
_22 = 211595963686834267158730451325494269447_u128;
_20.3 = !_25;
RET = [(-9202670810356683411_i64); 5];
_20.0 = _1 >> _12;
_22 = 198321077923493512569471649575681075745_u128 >> _12;
_27.2 = (-925162456_i32) as u16;
_22 = !146250292245498465262455113125078199142_u128;
_27.2 = !_3;
match _9.2 {
0 => bb9,
44848 => bb11,
_ => bb10
}
}
bb9 = {
_1 = _8;
_7 = [1159082242_u32; 1];
_7 = [2133307218_u32; 1];
RET = [(-8963445845215189587_i64); 5];
_6 = 10109561336530908730_u64 << _3;
_2 = [0_f32; 5];
RET = [(-4945523173578840131_i64); 5];
_9.2 = _3 * _3;
_9.1 = f64::NEG_INFINITY as i8;
_2 = [f32::INFINITY; 5];
RET = [(-4720619220276290893_i64); 5];
RET = [(-7438636453875533199_i64); 5];
Call(_5, bb6, fn1(_2, _8, _2, _8, _8, RET, _6, _1))
}
bb10 = {
RET = [(-5680878916434388301_i64); 5];
_9.1 = !(-48_i8);
_9.0 = 5399954755110045720_usize;
_9.1 = 66_i8;
_9.2 = _3;
_9.0 = (-25184_i16) as usize;
_9 = (5_usize, 53_i8, 33574_u16);
_7 = [3356261434_u32; 1];
_9.1 = 44_i8;
_9.2 = _3 + _3;
_9.0 = (-195452008_i32) as usize;
_10 = _5;
_7 = [1398816099_u32; 1];
_12 = !_6;
_12 = _6 ^ _6;
_14 = [false; 5];
_9.0 = 54_u8 as usize;
_9.0 = 13229837911016290596_usize;
_8 = !_1;
_16 = 1636687108_u32 as usize;
_17.1 = _6 * _12;
_1 = _8;
Goto(bb7)
}
bb11 = {
_6 = !_12;
_8 = _17.1 as i64;
_19 = core::ptr::addr_of_mut!(_28);
_5 = _10;
_26 = _2;
_31.3 = _25;
_28 = ((-65_i8),);
_11.0 = core::ptr::addr_of_mut!(_25);
_3 = !_27.2;
_16 = _9.0;
_27.0 = _9.0 - _16;
_25 = _20.3;
_26 = _2;
_1 = f32::INFINITY as i64;
_5 = core::ptr::addr_of!(_33);
_26 = _2;
_14 = [true; 5];
_33 = (-1918751809_i32) >> _9.0;
_16 = _9.0 >> _3;
_11.0 = core::ptr::addr_of_mut!(_31.3);
Goto(bb12)
}
bb12 = {
_27 = _9;
_22 = 174455342467614147982751793603571303739_u128 / 22223112689185788755633494781942765605_u128;
_1 = _20.0 | _20.0;
(*_5) = 905390371_i32;
_9.1 = _16 as i8;
_27 = _9;
_27.1 = _9.1;
_14 = [false; 5];
_27.1 = _9.1 - _9.1;
_20.3 = _31.3;
_12 = _17.1 | _17.1;
_2 = [0.0000000000000000000000000000000000000020217962269247747_f32; 5];
_20.2 = [1741805118452441179_i64; 7];
_20.3 = _27.1 as u32;
_36.0 = _2;
_31.3 = _20.3 % 1425659682_u32;
_36.1 = _12 / 4657365208220749628_u64;
_12 = !_17.1;
_23 = _27.1;
_8 = !_1;
(*_5) = !392843541_i32;
_30 = _31.3;
(*_19).0 = -_27.1;
_34.0 = [(-4910752317370442668_i64); 7];
Goto(bb13)
}
bb13 = {
_9.1 = -_27.1;
_4 = core::ptr::addr_of_mut!(_34);
_18 = [1054495864_u32; 1];
(*_4).1 = [6318848953056133548_usize; 8];
_35 = core::ptr::addr_of!((*_5));
(*_4).0 = [(-506170237403704398_i64); 7];
_17.0 = _2;
_20.2 = [(-6729874272677062532_i64); 7];
_37 = (*_19).0 * (*_19).0;
_20.3 = 9223372036854775807_isize as u32;
_39 = _11;
_34.1 = [16791382135687972800_usize; 8];
_31.2 = [1488477535142888446_i64; 7];
_28 = ((-69_i8),);
_29 = core::ptr::addr_of!((*_4).0);
_37 = !_27.1;
_24 = [3790344060_u32; 1];
_20.0 = _1;
match (*_19).0 {
0 => bb14,
1 => bb15,
340282366920938463463374607431768211387 => bb17,
_ => bb16
}
}
bb14 = {
_27 = _9;
_22 = 174455342467614147982751793603571303739_u128 / 22223112689185788755633494781942765605_u128;
_1 = _20.0 | _20.0;
(*_5) = 905390371_i32;
_9.1 = _16 as i8;
_27 = _9;
_27.1 = _9.1;
_14 = [false; 5];
_27.1 = _9.1 - _9.1;
_20.3 = _31.3;
_12 = _17.1 | _17.1;
_2 = [0.0000000000000000000000000000000000000020217962269247747_f32; 5];
_20.2 = [1741805118452441179_i64; 7];
_20.3 = _27.1 as u32;
_36.0 = _2;
_31.3 = _20.3 % 1425659682_u32;
_36.1 = _12 / 4657365208220749628_u64;
_12 = !_17.1;
_23 = _27.1;
_8 = !_1;
(*_5) = !392843541_i32;
_30 = _31.3;
(*_19).0 = -_27.1;
_34.0 = [(-4910752317370442668_i64); 7];
Goto(bb13)
}
bb15 = {
_8 = _1;
_16 = _9.0;
_18 = [1446132749_u32; 1];
RET = [(-1151028599728698670_i64); 5];
_5 = _10;
_11.0 = core::ptr::addr_of_mut!(_20.3);
_3 = 4017555483_u32 as u16;
_9 = (7_usize, (-36_i8), 25159_u16);
_20.2 = [8548196420366542446_i64; 7];
_20.3 = 2258845493_u32 >> _8;
_21 = _5;
_17.0 = _2;
_11.0 = core::ptr::addr_of_mut!(_20.3);
_3 = !_9.2;
_16 = _9.0 - _9.0;
_20.0 = -_8;
_23 = _9.1;
RET = [1151098905968674093_i64; 5];
RET = [(-224203233628557165_i64); 5];
_21 = _10;
_14 = [true; 5];
_8 = '\u{57351}' as i64;
_9.1 = _23 << _20.3;
Goto(bb8)
}
bb16 = {
RET = [(-5680878916434388301_i64); 5];
_9.1 = !(-48_i8);
_9.0 = 5399954755110045720_usize;
_9.1 = 66_i8;
_9.2 = _3;
_9.0 = (-25184_i16) as usize;
_9 = (5_usize, 53_i8, 33574_u16);
_7 = [3356261434_u32; 1];
_9.1 = 44_i8;
_9.2 = _3 + _3;
_9.0 = (-195452008_i32) as usize;
_10 = _5;
_7 = [1398816099_u32; 1];
_12 = !_6;
_12 = _6 ^ _6;
_14 = [false; 5];
_9.0 = 54_u8 as usize;
_9.0 = 13229837911016290596_usize;
_8 = !_1;
_16 = 1636687108_u32 as usize;
_17.1 = _6 * _12;
_1 = _8;
Goto(bb7)
}
bb17 = {
_39 = _11;
_9.2 = _27.2 / 5104_u16;
_27 = _9;
_36.1 = _17.1 & _6;
_20.0 = _8 << _30;
_29 = core::ptr::addr_of!(_34.0);
(*_5) = (-1153121660_i32);
_12 = _36.1;
_17.0 = _2;
_26 = _2;
_27.1 = -_9.1;
_17.0 = _2;
_5 = core::ptr::addr_of!((*_5));
_44 = !_12;
_37 = (*_19).0 - _28.0;
_20.0 = _1 & _8;
_32 = [297293869741663809022330070788532123271_u128; 4];
_36 = _17;
_11 = _39;
(*_29) = [3236341198207512177_i64; 7];
(*_19) = ((-19_i8),);
_41 = [(-549067013080039144_i64); 7];
Goto(bb18)
}
bb18 = {
Call(_48, bb19, dump_var(Move(_14), Move(_1), Move(_8), Move(_30)))
}
bb19 = {
Call(_48, bb20, dump_var(Move(_41), Move(_24), Move(_37), Move(_23)))
}
bb20 = {
Call(_48, bb21, dump_var(Move(_16), Move(_32), Move(_28), _49))
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: [f32; 5],mut _2: i64,mut _3: [f32; 5],mut _4: i64,mut _5: i64,mut _6: [i64; 5],mut _7: u64,mut _8: i64) -> *const i32 {
mir! {
type RET = *const i32;
let _9: (*mut u32,);
let _10: [usize; 8];
let _11: *const i32;
let _12: *const *const char;
let _13: bool;
let _14: f64;
let _15: i128;
let _16: u128;
let _17: u64;
let _18: u8;
let _19: ([i64; 7], [usize; 8]);
let _20: (i64, *const i128, [i64; 7], u32);
let _21: *mut ([i64; 7], [usize; 8]);
let _22: [i64; 7];
let _23: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _24: i32;
let _25: (u16,);
let _26: *const i32;
let _27: u128;
let _28: [u32; 1];
let _29: *const i128;
let _30: *const u64;
let _31: (i64, *const i128, [i64; 7], u32);
let _32: ();
let _33: ();
{
_5 = _8;
_5 = -_4;
_1 = [0_f32; 5];
_4 = 54_isize as i64;
_3 = [-0_f32; 5];
_1 = [(-0.0000000000000000000000000000000000000027634880898087928_f32); 5];
_7 = '\u{9312e}' as u64;
_4 = _2 * _8;
_7 = 11763974143598717802_u64 + 1589651954636784257_u64;
_10 = [10323542098528425926_usize; 8];
_8 = _2;
_2 = f64::NEG_INFINITY as i64;
_13 = true;
_6 = [4437846190727570594_i64; 5];
Call(_9, bb1, fn2(_6, _2, _13, _7, _3, _6, _7, _8, _10, _6))
}
bb1 = {
_4 = !_5;
_5 = _8;
_7 = 5767624526037572588_u64 * 11754765558571020851_u64;
_13 = true;
_13 = true;
_14 = -0_f64;
_8 = _4;
_8 = -_5;
_14 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019891460123272546_f64);
_4 = 226343724371390954016601282600604496022_u128 as i64;
_6 = [(-5921833438388950380_i64); 5];
_8 = !_5;
_13 = _8 >= _5;
_5 = _8;
_5 = !_8;
_4 = _5;
Goto(bb2)
}
bb2 = {
_13 = false;
_2 = _5 >> _5;
_2 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016276609023610395_f64) as i64;
_1 = [(-0.000000000000000000000000000000000000006287949909370713_f32); 5];
Goto(bb3)
}
bb3 = {
_4 = _2 << _8;
_16 = 224202865457865080848589485853389352545_u128 >> _4;
_2 = 27778_u16 as i64;
_10 = [4528313834382667455_usize; 8];
_17 = 234262567_i32 as u64;
_3 = [0.000000000000000000000000000000000000008285485455982632_f32; 5];
_4 = -_5;
Goto(bb4)
}
bb4 = {
_17 = (-18_i8) as u64;
_14 = -f64::NAN;
_14 = f64::INFINITY;
_18 = 216_u8;
_8 = 0_usize as i64;
_14 = _16 as f64;
_1 = [f32::NEG_INFINITY; 5];
_7 = !_17;
_19.1 = [1260550364151901748_usize; 8];
_20.2 = [2733743422648166498_i64; 7];
_13 = _14 >= _14;
_5 = !_4;
_20.0 = -_5;
_9.0 = core::ptr::addr_of_mut!(_20.3);
_5 = _4 * _8;
_5 = _4;
_1 = [(-0.00000000000000000000000000000000000001073183728253929_f32); 5];
_13 = false;
_13 = true;
_9.0 = core::ptr::addr_of_mut!(_20.3);
_14 = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011373951924354127_f64 + -0_f64;
_20.1 = core::ptr::addr_of!(_15);
_15 = 2661931044_u32 as i128;
_19.0 = [2284197737727171028_i64; 7];
_3 = [(-0.0000000000000000000000000000000000000014138793219375253_f32); 5];
_20.3 = 1088073351_u32 << _5;
_10 = [16714096778266075043_usize; 8];
_20.1 = core::ptr::addr_of!(_15);
Goto(bb5)
}
bb5 = {
_20.2 = [7171591611708038729_i64; 7];
_10 = [14756740815860941322_usize; 8];
_1 = [0.000000000000000000000000000000000000003925206555687996_f32; 5];
_3 = [f32::NAN; 5];
_9.0 = core::ptr::addr_of_mut!(_20.3);
_17 = !_7;
_16 = 255316889160398727692456599641774914341_u128 >> _20.0;
_16 = 83095892658553000086033730631920337460_u128;
_6 = [(-3299161283367028473_i64); 5];
_19.1 = [14819308467505679832_usize; 8];
_13 = true & false;
_2 = 3_usize as i64;
_14 = f64::NEG_INFINITY * 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000902508608565281_f64;
_7 = _17 * _17;
_1 = [f32::NAN; 5];
_2 = -_4;
match _16 {
0 => bb1,
1 => bb3,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
83095892658553000086033730631920337460 => bb12,
_ => bb11
}
}
bb6 = {
_17 = (-18_i8) as u64;
_14 = -f64::NAN;
_14 = f64::INFINITY;
_18 = 216_u8;
_8 = 0_usize as i64;
_14 = _16 as f64;
_1 = [f32::NEG_INFINITY; 5];
_7 = !_17;
_19.1 = [1260550364151901748_usize; 8];
_20.2 = [2733743422648166498_i64; 7];
_13 = _14 >= _14;
_5 = !_4;
_20.0 = -_5;
_9.0 = core::ptr::addr_of_mut!(_20.3);
_5 = _4 * _8;
_5 = _4;
_1 = [(-0.00000000000000000000000000000000000001073183728253929_f32); 5];
_13 = false;
_13 = true;
_9.0 = core::ptr::addr_of_mut!(_20.3);
_14 = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011373951924354127_f64 + -0_f64;
_20.1 = core::ptr::addr_of!(_15);
_15 = 2661931044_u32 as i128;
_19.0 = [2284197737727171028_i64; 7];
_3 = [(-0.0000000000000000000000000000000000000014138793219375253_f32); 5];
_20.3 = 1088073351_u32 << _5;
_10 = [16714096778266075043_usize; 8];
_20.1 = core::ptr::addr_of!(_15);
Goto(bb5)
}
bb7 = {
_4 = _2 << _8;
_16 = 224202865457865080848589485853389352545_u128 >> _4;
_2 = 27778_u16 as i64;
_10 = [4528313834382667455_usize; 8];
_17 = 234262567_i32 as u64;
_3 = [0.000000000000000000000000000000000000008285485455982632_f32; 5];
_4 = -_5;
Goto(bb4)
}
bb8 = {
_13 = false;
_2 = _5 >> _5;
_2 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016276609023610395_f64) as i64;
_1 = [(-0.000000000000000000000000000000000000006287949909370713_f32); 5];
Goto(bb3)
}
bb9 = {
_4 = !_5;
_5 = _8;
_7 = 5767624526037572588_u64 * 11754765558571020851_u64;
_13 = true;
_13 = true;
_14 = -0_f64;
_8 = _4;
_8 = -_5;
_14 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019891460123272546_f64);
_4 = 226343724371390954016601282600604496022_u128 as i64;
_6 = [(-5921833438388950380_i64); 5];
_8 = !_5;
_13 = _8 >= _5;
_5 = _8;
_5 = !_8;
_4 = _5;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_8 = _5;
_2 = -_20.0;
_15 = (-111697729134162736377288584327914576147_i128) << _2;
_3 = [f32::NAN; 5];
_17 = !_7;
_2 = _14 as i64;
_2 = _4;
_6 = [(-5430600645174871335_i64); 5];
_22 = [(-98437909728229607_i64); 7];
_23.4 = [0.000000000000000000000000000000000000006147206294210857_f32; 5];
_23.3 = [278482042633981355553032221202460798982_u128; 4];
_21 = core::ptr::addr_of_mut!(_19);
_10 = [5_usize; 8];
_4 = _8;
_21 = core::ptr::addr_of_mut!((*_21));
RET = core::ptr::addr_of!(_24);
_23.1 = [201533271966535811272116605009459164657_u128; 4];
(*RET) = (-900531142_i32) & 822560124_i32;
(*RET) = (-669995626_i32);
_13 = false | true;
(*_21).1 = [18213245583266216499_usize; 8];
_23.2 = (-8378_i16) << _8;
Goto(bb13)
}
bb13 = {
_22 = [8848104806771074135_i64; 7];
_17 = _7 % 15010126612572720219_u64;
_2 = _13 as i64;
_23.2 = -7671_i16;
_24 = (-1531015885_i32) >> _8;
_23.0 = ((-73_i8),);
_20.3 = !1985329619_u32;
_25 = (30087_u16,);
_11 = core::ptr::addr_of!((*RET));
(*_11) = !(-1513223563_i32);
_15 = -(-160884750853669850766032563676314007446_i128);
_26 = _11;
(*_21).1 = [7_usize; 8];
_20.1 = core::ptr::addr_of!(_15);
Goto(bb14)
}
bb14 = {
_25.0 = 18601_u16;
(*_26) = (-166594653_i32);
(*_21).1 = [4_usize; 8];
_23.0.0 = 108_i8;
(*_21).1 = [17862054434757914943_usize; 8];
Goto(bb15)
}
bb15 = {
Call(_32, bb16, dump_var(Move(_4), Move(_25), Move(_19), Move(_7)))
}
bb16 = {
Call(_32, bb17, dump_var(Move(_8), Move(_16), Move(_24), Move(_17)))
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn2(mut _1: [i64; 5],mut _2: i64,mut _3: bool,mut _4: u64,mut _5: [f32; 5],mut _6: [i64; 5],mut _7: u64,mut _8: i64,mut _9: [usize; 8],mut _10: [i64; 5]) -> (*mut u32,) {
mir! {
type RET = (*mut u32,);
let _11: [usize; 8];
let _12: *const f64;
let _13: *const char;
let _14: *const i32;
let _15: *const i32;
let _16: *const f64;
let _17: i16;
let _18: char;
let _19: [u128; 4];
let _20: *const i32;
let _21: (i64, *const i128, [i64; 7], u32);
let _22: *const *const u64;
let _23: *mut (i8,);
let _24: *mut (i8,);
let _25: [i64; 5];
let _26: u64;
let _27: *const u128;
let _28: *const i128;
let _29: *const f64;
let _30: bool;
let _31: [u32; 6];
let _32: ();
let _33: ();
{
_2 = _8 << _7;
_7 = _4 ^ _4;
_5 = [f32::INFINITY; 5];
_8 = '\u{fc689}' as i64;
_9 = [11701077030950232841_usize; 8];
_10 = [(-7157966150714712584_i64); 5];
_1 = [(-182965317571510735_i64); 5];
_3 = !false;
_10 = [6567922253435776794_i64; 5];
_6 = [(-239532498361384270_i64); 5];
_8 = _2;
_3 = true & true;
_2 = _8 ^ _8;
_7 = _4 - _4;
_8 = !_2;
_6 = [(-5273858937730981704_i64); 5];
_1 = [3326638626252329168_i64; 5];
_4 = _7;
_10 = [5209269923993841513_i64; 5];
_8 = _2;
_4 = 13321_u16 as u64;
_3 = false;
_11 = [18368022871096228135_usize; 8];
_6 = [(-4679221531724729493_i64); 5];
_6 = [462037801289880295_i64; 5];
_5 = [(-0.000000000000000000000000000000000000006579439608128776_f32); 5];
Goto(bb1)
}
bb1 = {
_3 = !true;
_2 = _8 - _8;
_11 = [9037557212522490447_usize; 8];
_10 = [(-4087047423554835181_i64); 5];
Goto(bb2)
}
bb2 = {
_8 = _2;
_10 = [2306782106560969800_i64; 5];
_10 = [289641520412108485_i64; 5];
_2 = _8 * _8;
_2 = !_8;
_5 = [0_f32; 5];
_17 = !4886_i16;
_17 = (-30108_i16);
_2 = _8 >> _8;
_4 = !_7;
_7 = !_4;
_17 = (-18189_i16);
_6 = [3529586107388047299_i64; 5];
_3 = _2 != _8;
_17 = (-194_i16) & (-23211_i16);
_13 = core::ptr::addr_of!(_18);
(*_13) = '\u{2663}';
Call(_16, bb3, fn3(_3, _13, _3, _9, _9))
}
bb3 = {
_1 = [2996341317270244349_i64; 5];
_4 = 223067583962252222002369721622732135542_u128 as u64;
_18 = '\u{aa41c}';
_6 = [1165903682409375710_i64; 5];
_10 = [1288580598234287840_i64; 5];
_1 = [(-6468099884271951264_i64); 5];
_9 = [5950154394642736991_usize; 8];
_13 = core::ptr::addr_of!((*_13));
_10 = [5074436861202744798_i64; 5];
_3 = !false;
_3 = false;
_10 = [6242984545740228096_i64; 5];
_7 = _4 ^ _4;
_13 = core::ptr::addr_of!((*_13));
_10 = [(-8017033267763782703_i64); 5];
_17 = !10318_i16;
_21.3 = !3690735897_u32;
_2 = _8;
Goto(bb4)
}
bb4 = {
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _2 + _2;
_21.2 = [4808718249167674245_i64; 7];
(*_13) = '\u{db17e}';
RET.0 = core::ptr::addr_of_mut!(_21.3);
_2 = _17 as i64;
_10 = [(-4889029422054990410_i64); 5];
_4 = _7 / 10837608341785025894_u64;
_17 = !(-24362_i16);
_11 = [4_usize; 8];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_5 = [(-0.000000000000000000000000000000000000008474526224013908_f32); 5];
(*_13) = '\u{d2d82}';
(*_13) = '\u{dc95b}';
(*_13) = '\u{cf000}';
_11 = [7_usize; 8];
_10 = [(-2846937586117811901_i64); 5];
_21.0 = 13_u8 as i64;
(*_13) = '\u{7aae9}';
_2 = !_8;
_18 = '\u{f71ad}';
_4 = !_7;
Goto(bb5)
}
bb5 = {
_17 = !(-7672_i16);
_2 = _3 as i64;
_13 = core::ptr::addr_of!(_18);
_6 = [3537005650971630554_i64; 5];
_6 = [2389903055478829534_i64; 5];
_25 = [(-2870908417704664325_i64); 5];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_3 = !false;
(*_13) = '\u{63f55}';
_4 = !_7;
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _21.0 >> _4;
_5 = [f32::INFINITY; 5];
_1 = [1718679412907471515_i64; 5];
_26 = _7 ^ _4;
_7 = _26;
_25 = [6985774788977393447_i64; 5];
_11 = [114762600459387223_usize; 8];
_11 = [638664927621114068_usize; 8];
_10 = [6242168492396279169_i64; 5];
_8 = !_2;
(*_13) = '\u{107603}';
Goto(bb6)
}
bb6 = {
_2 = _21.0;
(*_13) = '\u{f979e}';
_19 = [139698407312561391784161105683266873097_u128; 4];
_9 = [743674619745291440_usize; 8];
_10 = [7858825501060663375_i64; 5];
_21.3 = 4081236623_u32;
_11 = [4488549640482671015_usize; 8];
_25 = [(-3508564864576206962_i64); 5];
_13 = core::ptr::addr_of!((*_13));
_7 = _4 - _4;
_9 = [15426432238230801194_usize; 8];
_5 = [0.0000000000000000000000000000000000000028062515150445933_f32; 5];
_17 = (-3517_i16);
match _21.3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
6 => bb8,
4081236623 => bb10,
_ => bb9
}
}
bb7 = {
_17 = !(-7672_i16);
_2 = _3 as i64;
_13 = core::ptr::addr_of!(_18);
_6 = [3537005650971630554_i64; 5];
_6 = [2389903055478829534_i64; 5];
_25 = [(-2870908417704664325_i64); 5];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_3 = !false;
(*_13) = '\u{63f55}';
_4 = !_7;
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _21.0 >> _4;
_5 = [f32::INFINITY; 5];
_1 = [1718679412907471515_i64; 5];
_26 = _7 ^ _4;
_7 = _26;
_25 = [6985774788977393447_i64; 5];
_11 = [114762600459387223_usize; 8];
_11 = [638664927621114068_usize; 8];
_10 = [6242168492396279169_i64; 5];
_8 = !_2;
(*_13) = '\u{107603}';
Goto(bb6)
}
bb8 = {
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _2 + _2;
_21.2 = [4808718249167674245_i64; 7];
(*_13) = '\u{db17e}';
RET.0 = core::ptr::addr_of_mut!(_21.3);
_2 = _17 as i64;
_10 = [(-4889029422054990410_i64); 5];
_4 = _7 / 10837608341785025894_u64;
_17 = !(-24362_i16);
_11 = [4_usize; 8];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_5 = [(-0.000000000000000000000000000000000000008474526224013908_f32); 5];
(*_13) = '\u{d2d82}';
(*_13) = '\u{dc95b}';
(*_13) = '\u{cf000}';
_11 = [7_usize; 8];
_10 = [(-2846937586117811901_i64); 5];
_21.0 = 13_u8 as i64;
(*_13) = '\u{7aae9}';
_2 = !_8;
_18 = '\u{f71ad}';
_4 = !_7;
Goto(bb5)
}
bb9 = {
_8 = _2;
_10 = [2306782106560969800_i64; 5];
_10 = [289641520412108485_i64; 5];
_2 = _8 * _8;
_2 = !_8;
_5 = [0_f32; 5];
_17 = !4886_i16;
_17 = (-30108_i16);
_2 = _8 >> _8;
_4 = !_7;
_7 = !_4;
_17 = (-18189_i16);
_6 = [3529586107388047299_i64; 5];
_3 = _2 != _8;
_17 = (-194_i16) & (-23211_i16);
_13 = core::ptr::addr_of!(_18);
(*_13) = '\u{2663}';
Call(_16, bb3, fn3(_3, _13, _3, _9, _9))
}
bb10 = {
(*_13) = '\u{5a9e}';
_3 = false;
_2 = _8 + _8;
RET.0 = core::ptr::addr_of_mut!(_21.3);
_11 = [1_usize; 8];
match _21.3 {
0 => bb2,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
5 => bb15,
6 => bb16,
4081236623 => bb18,
_ => bb17
}
}
bb11 = {
_8 = _2;
_10 = [2306782106560969800_i64; 5];
_10 = [289641520412108485_i64; 5];
_2 = _8 * _8;
_2 = !_8;
_5 = [0_f32; 5];
_17 = !4886_i16;
_17 = (-30108_i16);
_2 = _8 >> _8;
_4 = !_7;
_7 = !_4;
_17 = (-18189_i16);
_6 = [3529586107388047299_i64; 5];
_3 = _2 != _8;
_17 = (-194_i16) & (-23211_i16);
_13 = core::ptr::addr_of!(_18);
(*_13) = '\u{2663}';
Call(_16, bb3, fn3(_3, _13, _3, _9, _9))
}
bb12 = {
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _2 + _2;
_21.2 = [4808718249167674245_i64; 7];
(*_13) = '\u{db17e}';
RET.0 = core::ptr::addr_of_mut!(_21.3);
_2 = _17 as i64;
_10 = [(-4889029422054990410_i64); 5];
_4 = _7 / 10837608341785025894_u64;
_17 = !(-24362_i16);
_11 = [4_usize; 8];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_5 = [(-0.000000000000000000000000000000000000008474526224013908_f32); 5];
(*_13) = '\u{d2d82}';
(*_13) = '\u{dc95b}';
(*_13) = '\u{cf000}';
_11 = [7_usize; 8];
_10 = [(-2846937586117811901_i64); 5];
_21.0 = 13_u8 as i64;
(*_13) = '\u{7aae9}';
_2 = !_8;
_18 = '\u{f71ad}';
_4 = !_7;
Goto(bb5)
}
bb13 = {
_17 = !(-7672_i16);
_2 = _3 as i64;
_13 = core::ptr::addr_of!(_18);
_6 = [3537005650971630554_i64; 5];
_6 = [2389903055478829534_i64; 5];
_25 = [(-2870908417704664325_i64); 5];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_3 = !false;
(*_13) = '\u{63f55}';
_4 = !_7;
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _21.0 >> _4;
_5 = [f32::INFINITY; 5];
_1 = [1718679412907471515_i64; 5];
_26 = _7 ^ _4;
_7 = _26;
_25 = [6985774788977393447_i64; 5];
_11 = [114762600459387223_usize; 8];
_11 = [638664927621114068_usize; 8];
_10 = [6242168492396279169_i64; 5];
_8 = !_2;
(*_13) = '\u{107603}';
Goto(bb6)
}
bb14 = {
_2 = _21.0;
(*_13) = '\u{f979e}';
_19 = [139698407312561391784161105683266873097_u128; 4];
_9 = [743674619745291440_usize; 8];
_10 = [7858825501060663375_i64; 5];
_21.3 = 4081236623_u32;
_11 = [4488549640482671015_usize; 8];
_25 = [(-3508564864576206962_i64); 5];
_13 = core::ptr::addr_of!((*_13));
_7 = _4 - _4;
_9 = [15426432238230801194_usize; 8];
_5 = [0.0000000000000000000000000000000000000028062515150445933_f32; 5];
_17 = (-3517_i16);
match _21.3 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb7,
6 => bb8,
4081236623 => bb10,
_ => bb9
}
}
bb15 = {
_17 = !(-7672_i16);
_2 = _3 as i64;
_13 = core::ptr::addr_of!(_18);
_6 = [3537005650971630554_i64; 5];
_6 = [2389903055478829534_i64; 5];
_25 = [(-2870908417704664325_i64); 5];
RET.0 = core::ptr::addr_of_mut!(_21.3);
_3 = !false;
(*_13) = '\u{63f55}';
_4 = !_7;
RET.0 = core::ptr::addr_of_mut!(_21.3);
_8 = _21.0 >> _4;
_5 = [f32::INFINITY; 5];
_1 = [1718679412907471515_i64; 5];
_26 = _7 ^ _4;
_7 = _26;
_25 = [6985774788977393447_i64; 5];
_11 = [114762600459387223_usize; 8];
_11 = [638664927621114068_usize; 8];
_10 = [6242168492396279169_i64; 5];
_8 = !_2;
(*_13) = '\u{107603}';
Goto(bb6)
}
bb16 = {
_3 = !true;
_2 = _8 - _8;
_11 = [9037557212522490447_usize; 8];
_10 = [(-4087047423554835181_i64); 5];
Goto(bb2)
}
bb17 = {
_1 = [2996341317270244349_i64; 5];
_4 = 223067583962252222002369721622732135542_u128 as u64;
_18 = '\u{aa41c}';
_6 = [1165903682409375710_i64; 5];
_10 = [1288580598234287840_i64; 5];
_1 = [(-6468099884271951264_i64); 5];
_9 = [5950154394642736991_usize; 8];
_13 = core::ptr::addr_of!((*_13));
_10 = [5074436861202744798_i64; 5];
_3 = !false;
_3 = false;
_10 = [6242984545740228096_i64; 5];
_7 = _4 ^ _4;
_13 = core::ptr::addr_of!((*_13));
_10 = [(-8017033267763782703_i64); 5];
_17 = !10318_i16;
_21.3 = !3690735897_u32;
_2 = _8;
Goto(bb4)
}
bb18 = {
_17 = 1837_i16 >> _7;
(*_13) = '\u{85030}';
_21.2 = [763955826984824319_i64; 7];
_30 = _3 | _3;
_19 = [209508073866263701448665377444109935761_u128; 4];
_30 = _17 >= _17;
_31 = [3974552374_u32; 6];
_7 = _4 * _4;
(*_13) = '\u{cd498}';
_13 = core::ptr::addr_of!((*_13));
_8 = _2;
_8 = (-169556085998381249672531351844879649597_i128) as i64;
_26 = _7;
_2 = _8;
_30 = _26 > _26;
Goto(bb19)
}
bb19 = {
Call(_32, bb20, dump_var(Move(_6), Move(_1), Move(_2), Move(_4)))
}
bb20 = {
Call(_32, bb21, dump_var(Move(_10), Move(_9), Move(_19), Move(_31)))
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: bool,mut _2: *const char,mut _3: bool,mut _4: [usize; 8],mut _5: [usize; 8]) -> *const f64 {
mir! {
type RET = *const f64;
let _6: (i64, *const i128, [i64; 7], u32);
let _7: char;
let _8: [i64; 5];
let _9: *const u64;
let _10: *const i32;
let _11: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _12: usize;
let _13: (i64, *const i128, [i64; 7], u32);
let _14: *const *const u64;
let _15: [i64; 7];
let _16: i64;
let _17: i32;
let _18: *const i32;
let _19: ([i64; 7], [usize; 8]);
let _20: [usize; 8];
let _21: (*mut u32,);
let _22: (i64, *const i128, [i64; 7], u32);
let _23: (i64, *const i128, [i64; 7], u32);
let _24: [usize; 8];
let _25: *const i32;
let _26: [i64; 7];
let _27: *const i32;
let _28: [f32; 5];
let _29: (i64, *const i128, [i64; 7], u32);
let _30: (i64, *const i128, [i64; 7], u32);
let _31: f32;
let _32: (*mut u32,);
let _33: u32;
let _34: *const u64;
let _35: (usize, i8, u16);
let _36: *const char;
let _37: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _38: *const i128;
let _39: isize;
let _40: isize;
let _41: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _42: u16;
let _43: *const i32;
let _44: *const i128;
let _45: (i64, *const i128, [i64; 7], u32);
let _46: (i64, *const i128, [i64; 7], u32);
let _47: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _48: i8;
let _49: *const u128;
let _50: *const u128;
let _51: ([f32; 5], u64);
let _52: u64;
let _53: *const char;
let _54: *mut ([i64; 7], [usize; 8]);
let _55: u16;
let _56: u64;
let _57: (i64, *const i128, [i64; 7], u32);
let _58: [u32; 1];
let _59: u64;
let _60: ([f32; 5], u64);
let _61: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _62: *const i32;
let _63: [u32; 1];
let _64: [bool; 5];
let _65: [bool; 5];
let _66: i8;
let _67: u64;
let _68: i64;
let _69: (i8,);
let _70: [usize; 8];
let _71: bool;
let _72: *const i128;
let _73: u32;
let _74: [u32; 6];
let _75: u32;
let _76: u32;
let _77: (i8,);
let _78: i64;
let _79: isize;
let _80: u64;
let _81: (u16,);
let _82: [u32; 6];
let _83: u64;
let _84: u128;
let _85: f64;
let _86: (i8,);
let _87: *mut u32;
let _88: [i64; 7];
let _89: ();
let _90: ();
{
(*_2) = '\u{d4207}';
_2 = core::ptr::addr_of!((*_2));
_4 = [5_usize; 8];
(*_2) = '\u{3b116}';
(*_2) = '\u{91a3e}';
_1 = !_3;
_1 = _3 < _3;
_1 = !_3;
_3 = _1;
_5 = [2_usize; 8];
_3 = !_1;
_6.0 = (-102486527040690967_i64) >> 7772440452539624090_i64;
_6.0 = !(-5635323476882179371_i64);
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
_2 = core::ptr::addr_of!((*_2));
_6.2 = [8337743502249329480_i64; 7];
_6.0 = !6830606281445565137_i64;
_5 = [5227206964439217253_usize; 8];
_6.0 = 6246542637880455840_i64;
_6.3 = !3186148947_u32;
Call(_7, bb1, fn4(_6.0, (*_2)))
}
bb1 = {
_6.0 = -(-237944416357332088_i64);
_6.0 = 9093610479094842994_i64;
_6.0 = 6976247015907818265_i64 >> _6.3;
_6.0 = (-4410607129600132084_i64) | (-7859450009242651243_i64);
(*_2) = '\u{377bd}';
_7 = '\u{7e9d7}';
_7 = '\u{b1c79}';
_7 = '\u{3fa7c}';
_1 = !_3;
_6.0 = 2097495995082244605_i64 & (-7588905946041986865_i64);
_5 = [6208157425484367460_usize; 8];
Goto(bb2)
}
bb2 = {
_7 = '\u{529ce}';
_6.3 = 3914737901_u32 >> _6.0;
_8 = [(-7067251250474565939_i64); 5];
_6.3 = 2183658357_u32 << _6.0;
_3 = _1;
(*_2) = '\u{832d9}';
_6.0 = 1158745795840742604_i64 ^ (-328679523712603384_i64);
_2 = core::ptr::addr_of!(_7);
_5 = [5_usize; 8];
_2 = core::ptr::addr_of!(_7);
_4 = [4_usize; 8];
Goto(bb3)
}
bb3 = {
_1 = _3 <= _3;
_1 = _3;
_8 = [(-8378625460733010101_i64); 5];
_8 = [7997311746513990978_i64; 5];
_7 = '\u{1b6a1}';
_4 = [2_usize; 8];
_11.3 = [101503489120061939840900494264101619422_u128; 4];
Goto(bb4)
}
bb4 = {
_8 = [(-1714506844063261806_i64); 5];
_1 = _3;
Goto(bb5)
}
bb5 = {
_5 = [11060567362723709313_usize; 8];
_11.4 = [0_f32; 5];
_6.0 = -5502027213398736351_i64;
_13.2 = [(-6717488725163948153_i64); 7];
_6.2 = [(-1533757087026492055_i64); 7];
_11.4 = [(-0.000000000000000000000000000000000000003023126274472752_f32); 5];
(*_2) = '\u{c76f5}';
_12 = 3_usize;
_12 = 3_usize & 7_usize;
_11.0.0 = !92_i8;
_14 = core::ptr::addr_of!(_9);
_15 = [2856858178611062891_i64; 7];
_8 = [(-7862710561220094507_i64); 5];
_6.2 = [4644418397089212384_i64; 7];
_5 = [2_usize; 8];
_6.2 = [1269075170441276190_i64; 7];
_6.2 = [(-4832273160352095739_i64); 7];
(*_2) = '\u{d4b57}';
_11.0.0 = (-69_i8);
_14 = core::ptr::addr_of!((*_14));
_13.0 = '\u{2aca4}' as i64;
_13.3 = _6.3;
match _11.0.0 {
340282366920938463463374607431768211387 => bb6,
_ => bb2
}
}
bb6 = {
_6.2 = [8939799429148877582_i64; 7];
_11.1 = [38388540160556197698169595560901923559_u128; 4];
_6.0 = '\u{7d662}' as i64;
_4 = [17707589335792633256_usize; 8];
_11.0.0 = (-3_i8);
_6.2 = [6257310612294015542_i64; 7];
_10 = core::ptr::addr_of!(_17);
_11.0 = (37_i8,);
_11.4 = [f32::INFINITY; 5];
_16 = _13.0;
Call(_11.0.0, bb7, core::intrinsics::bswap((-80_i8)))
}
bb7 = {
_17 = 60995_u16 as i32;
_11.0 = (26_i8,);
_13.2 = [8533768902000754499_i64; 7];
_12 = _1 as usize;
_11.1 = [116306016033777388243462960146984593761_u128; 4];
_18 = core::ptr::addr_of!(_17);
_2 = core::ptr::addr_of!((*_2));
_8 = [1245649360276008144_i64; 5];
_17 = 489914520_i32;
_13.3 = _6.3 / 4233923924_u32;
(*_18) = (-974350660_i32) << _12;
_7 = '\u{24815}';
_17 = (-36375116252432138294736115606824155006_i128) as i32;
_11.2 = 25466_i16 + (-9331_i16);
(*_2) = '\u{45481}';
_19.0 = [2509932617386711018_i64; 7];
_19.1 = [3877379497812778175_usize; 8];
_4 = [15356509294482581322_usize; 8];
Goto(bb8)
}
bb8 = {
_11.1 = [290516079837770864940120925997952767166_u128; 4];
_22.0 = (-113_isize) as i64;
(*_10) = _12 as i32;
_4 = [11186642063618786658_usize; 8];
_16 = _6.0;
_23.0 = (-88_isize) as i64;
_11.2 = (-32124_i16) >> (*_10);
_5 = [2306243024824891287_usize; 8];
_14 = core::ptr::addr_of!(_9);
_15 = [(-8150325986767846093_i64); 7];
_29.2 = [(-3665619400783801972_i64); 7];
(*_2) = '\u{12f1f}';
_29.3 = (-92727192260249413871219541411479674374_i128) as u32;
_29.3 = !_6.3;
_11.0 = (60_i8,);
_6.0 = _11.2 as i64;
(*_2) = '\u{bed61}';
_18 = _10;
_19.1 = [0_usize; 8];
_3 = !_1;
_25 = core::ptr::addr_of!((*_10));
_10 = _18;
match _11.0.0 {
0 => bb1,
1 => bb5,
60 => bb9,
_ => bb3
}
}
bb9 = {
_22.2 = [(-5298367933811382338_i64); 7];
_11.2 = (-19839_i16) + 4770_i16;
_33 = !_29.3;
_13.2 = [(-6947041722071932061_i64); 7];
_5 = [1_usize; 8];
_14 = core::ptr::addr_of!((*_14));
_37.1 = [271180604814888594184525907259725104009_u128; 4];
_28 = [0.000000000000000000000000000000000000011186688954969875_f32; 5];
_23.2 = [(-7437591817264801021_i64); 7];
_15 = [(-4047780737798199164_i64); 7];
_21.0 = core::ptr::addr_of_mut!(_23.3);
_30.3 = _13.3 >> _12;
_26 = [(-8965843268058964067_i64); 7];
_37.0.0 = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541800536546755_f64 as i8;
_40 = (-0.000000000000000000000000000000000000002213374746474942_f32) as isize;
_30.0 = _22.0 ^ _6.0;
_36 = core::ptr::addr_of!((*_2));
match _11.0.0 {
60 => bb10,
_ => bb6
}
}
bb10 = {
_30.2 = [5365324883485088003_i64; 7];
_35.0 = !_12;
match _11.0.0 {
0 => bb4,
1 => bb7,
60 => bb12,
_ => bb11
}
}
bb11 = {
_5 = [11060567362723709313_usize; 8];
_11.4 = [0_f32; 5];
_6.0 = -5502027213398736351_i64;
_13.2 = [(-6717488725163948153_i64); 7];
_6.2 = [(-1533757087026492055_i64); 7];
_11.4 = [(-0.000000000000000000000000000000000000003023126274472752_f32); 5];
(*_2) = '\u{c76f5}';
_12 = 3_usize;
_12 = 3_usize & 7_usize;
_11.0.0 = !92_i8;
_14 = core::ptr::addr_of!(_9);
_15 = [2856858178611062891_i64; 7];
_8 = [(-7862710561220094507_i64); 5];
_6.2 = [4644418397089212384_i64; 7];
_5 = [2_usize; 8];
_6.2 = [1269075170441276190_i64; 7];
_6.2 = [(-4832273160352095739_i64); 7];
(*_2) = '\u{d4b57}';
_11.0.0 = (-69_i8);
_14 = core::ptr::addr_of!((*_14));
_13.0 = '\u{2aca4}' as i64;
_13.3 = _6.3;
match _11.0.0 {
340282366920938463463374607431768211387 => bb6,
_ => bb2
}
}
bb12 = {
_40 = -9223372036854775807_isize;
(*_18) = !787896356_i32;
_5 = [6_usize; 8];
_11.0 = _37.0;
_22.3 = _1 as u32;
_21.0 = core::ptr::addr_of_mut!(_33);
_31 = -0.000000000000000000000000000000000000006726179379417478_f32;
Goto(bb13)
}
bb13 = {
_20 = [16710123897875816259_usize; 8];
_23.3 = _30.3 & _22.3;
(*_10) = 1104446520_i32 >> _6.0;
_5 = [16004506208659547680_usize; 8];
_8 = [1245016550828763682_i64; 5];
_35.0 = 28962_u16 as usize;
Goto(bb14)
}
bb14 = {
_35.2 = 24628_u16;
_41.1 = [68514630923679477617836813874159942495_u128; 4];
_45.0 = !_30.0;
_29.3 = _23.3;
Goto(bb15)
}
bb15 = {
_37.2 = !_11.2;
_42 = _29.3 as u16;
_46.3 = !_29.3;
_13.3 = _30.3 ^ _30.3;
_30.3 = !_23.3;
_23.2 = [4207140066810973063_i64; 7];
_21.0 = core::ptr::addr_of_mut!(_6.3);
_37.1 = [301162575033075030377943018939706067647_u128; 4];
_11.2 = _37.2 >> _17;
_47.2 = _3 as i16;
_23.2 = [(-5818206516526015399_i64); 7];
_37.4 = [-0_f32; 5];
_51.1 = 16376900057554039541_u64 % 13518922650114109741_u64;
_37.1 = [282912351912656110645181126055350528092_u128; 4];
_22.0 = '\u{e1070}' as i64;
_30.0 = _45.0 << (*_18);
Goto(bb16)
}
bb16 = {
_37.3 = [43579964273721884705626418802443778617_u128; 4];
_48 = _11.0.0 + _37.0.0;
_47.2 = _11.2;
_46.2 = [(-6488683473861834601_i64); 7];
_41.0.0 = f64::INFINITY as i8;
_27 = core::ptr::addr_of!(_17);
_46.0 = _6.0 + _30.0;
_45.0 = _6.0 | _46.0;
_41.4 = [0.000000000000000000000000000000000000007100243392782809_f32; 5];
_37.3 = [312424188280471743289506435567405332189_u128; 4];
(*_36) = '\u{8f243}';
_32.0 = core::ptr::addr_of_mut!(_22.3);
_51.0 = [f32::INFINITY; 5];
(*_36) = '\u{77618}';
(*_2) = '\u{b1a0d}';
Goto(bb17)
}
bb17 = {
_45.3 = _29.3;
_54 = core::ptr::addr_of_mut!(_19);
(*_14) = core::ptr::addr_of!(_51.1);
(*_36) = '\u{c73b7}';
_26 = [(-3041916673053488227_i64); 7];
_41 = _11;
(*_27) = _40 as i32;
_26 = [(-1842626108646491924_i64); 7];
(*_14) = core::ptr::addr_of!(_52);
(*_9) = 234480923289327117608130053441353103364_u128 as u64;
Goto(bb18)
}
bb18 = {
_41.1 = [103377101046814892706071440114672082941_u128; 4];
(*_9) = _51.1 >> _46.0;
(*_54).1 = [4_usize; 8];
_43 = _18;
_11.3 = [322208465064519437366903473970968884889_u128; 4];
_45.2 = [(-607792372828603394_i64); 7];
(*_25) = !169829744_i32;
(*_2) = '\u{2d3fa}';
_2 = core::ptr::addr_of!((*_36));
_19.0 = [(-3053092978728347451_i64); 7];
_47.3 = [42041858356934489108760297719596357389_u128; 4];
(*_54).0 = [(-6830473867290721888_i64); 7];
_25 = core::ptr::addr_of!((*_43));
_17 = 57321422177692129814975354410647257400_i128 as i32;
_41 = _11;
Goto(bb19)
}
bb19 = {
_37.0 = _41.0;
_41.0 = _37.0;
_11.0 = _41.0;
_35 = (6143463933610439395_usize, 3_i8, 41136_u16);
_22.2 = [(-5172679980723362230_i64); 7];
_35.0 = _12;
_9 = core::ptr::addr_of!((*_9));
_13.0 = -_30.0;
_47.4 = [f32::NAN; 5];
_45.0 = _6.0 + _6.0;
_11.1 = [299756674428825274465903515341057056138_u128; 4];
_21.0 = core::ptr::addr_of_mut!(_13.3);
_47.1 = [253175763119478039154915951731330079018_u128; 4];
_47.0 = _37.0;
_46.0 = _45.0 + _6.0;
_61.2 = _47.2;
_41.0 = _37.0;
(*_54).0 = [1943667901764287532_i64; 7];
_14 = core::ptr::addr_of!(_9);
_56 = _52 % 16710138479125716516_u64;
Goto(bb20)
}
bb20 = {
_47.3 = [259492096806347017075777432509680743828_u128; 4];
(*_36) = '\u{c872e}';
_61.3 = [241033262482144955102010165433016660131_u128; 4];
_11.3 = [220999607977303319177623760892700305047_u128; 4];
_61.1 = [30155650409769341348952778637764640023_u128; 4];
_58 = [4033254492_u32; 1];
_47.3 = [201477503131705176617208458046239573254_u128; 4];
_22.2 = [1851564643209162223_i64; 7];
_11.4 = [0.00000000000000000000000000000000000000816887220037845_f32; 5];
_15 = [5668545671711460272_i64; 7];
_35.0 = !_12;
_34 = (*_14);
_57.0 = _13.0;
_36 = core::ptr::addr_of!((*_2));
Goto(bb21)
}
bb21 = {
_58 = [3916537190_u32; 1];
_41.0 = _11.0;
_61.1 = [242299734597907039358267974950328846482_u128; 4];
_23.2 = [(-4725895175167054010_i64); 7];
_47.1 = [305952419988538975621613122813201034278_u128; 4];
Goto(bb22)
}
bb22 = {
(*_25) = (-1730853606_i32) | (-1936638817_i32);
_35.1 = -_48;
Goto(bb23)
}
bb23 = {
_9 = core::ptr::addr_of!(_59);
_35 = (6646376049910393589_usize, 18_i8, 60447_u16);
_59 = (*_34);
_57.3 = !_46.3;
_41.3 = [108015094335016137673133374833268120570_u128; 4];
_51.1 = (*_9);
_3 = _1;
(*_36) = '\u{2e971}';
_7 = '\u{d931c}';
_13.0 = _46.0 >> (*_9);
(*_34) = _47.2 as u64;
_61 = _41;
_41 = _61;
(*_36) = '\u{8ba4b}';
_65 = [false; 5];
_48 = _47.2 as i8;
_53 = core::ptr::addr_of!((*_2));
_47.1 = [12987399614983456397988898935199927192_u128; 4];
_60.1 = _31 as u64;
(*_10) = 2942099_i32;
match _35.0 {
0 => bb24,
6646376049910393589 => bb26,
_ => bb25
}
}
bb24 = {
_37.2 = !_11.2;
_42 = _29.3 as u16;
_46.3 = !_29.3;
_13.3 = _30.3 ^ _30.3;
_30.3 = !_23.3;
_23.2 = [4207140066810973063_i64; 7];
_21.0 = core::ptr::addr_of_mut!(_6.3);
_37.1 = [301162575033075030377943018939706067647_u128; 4];
_11.2 = _37.2 >> _17;
_47.2 = _3 as i16;
_23.2 = [(-5818206516526015399_i64); 7];
_37.4 = [-0_f32; 5];
_51.1 = 16376900057554039541_u64 % 13518922650114109741_u64;
_37.1 = [282912351912656110645181126055350528092_u128; 4];
_22.0 = '\u{e1070}' as i64;
_30.0 = _45.0 << (*_18);
Goto(bb16)
}
bb25 = {
_58 = [3916537190_u32; 1];
_41.0 = _11.0;
_61.1 = [242299734597907039358267974950328846482_u128; 4];
_23.2 = [(-4725895175167054010_i64); 7];
_47.1 = [305952419988538975621613122813201034278_u128; 4];
Goto(bb22)
}
bb26 = {
_45.0 = _61.2 as i64;
(*_14) = core::ptr::addr_of!((*_34));
_34 = (*_14);
(*_34) = _56;
_68 = !_13.0;
_47.0.0 = !_48;
_42 = !59468_u16;
(*_25) = 172907309_i32;
_67 = _59 >> (*_27);
_37.3 = [223016113813953555417538905552961461678_u128; 4];
(*_9) = _1 as u64;
_30.3 = (*_9) as u32;
_71 = !_1;
_55 = '\u{f4a6b}' as u16;
_74 = [3916018494_u32; 6];
_11.0 = _47.0;
(*_9) = _67;
_13.3 = _46.3;
_17 = 1560254779_i32;
_24 = [9107836894570899363_usize; 8];
_73 = _45.3;
_48 = _3 as i8;
_63 = [3526649737_u32; 1];
Goto(bb27)
}
bb27 = {
_35 = (10596294260831477999_usize, (-76_i8), 31515_u16);
_29.0 = _45.0;
(*_25) = (-33917738_i32) | 1910647906_i32;
Goto(bb28)
}
bb28 = {
_69 = _11.0;
_68 = '\u{2703f}' as i64;
_60.1 = _56;
_47.0 = _69;
_35 = (4_usize, (-120_i8), 29565_u16);
_57.3 = _29.3 >> _57.0;
_18 = core::ptr::addr_of!((*_25));
_61.0 = _11.0;
_49 = core::ptr::addr_of!(_84);
_50 = core::ptr::addr_of!((*_49));
_34 = core::ptr::addr_of!(_83);
_81 = (5145_u16,);
_37.1 = [200982591103260290715943217724837728565_u128; 4];
_11.0.0 = _45.3 as i8;
_25 = core::ptr::addr_of!((*_10));
(*_53) = '\u{9535d}';
(*_43) = '\u{e7f02}' as i32;
_47.4 = [0.000000000000000000000000000000000000008717865906239305_f32; 5];
_41.4 = [0_f32; 5];
_70 = [6_usize; 8];
(*_25) = 1336940030_i32 + (-36188523_i32);
_20 = [7_usize; 8];
(*_49) = !268166532567389759474792057337283770071_u128;
_50 = core::ptr::addr_of!(_84);
match _35.0 {
0 => bb26,
1 => bb6,
4 => bb29,
_ => bb4
}
}
bb29 = {
_23.3 = _46.3;
(*_25) = _55 as i32;
_76 = _57.3;
_49 = _50;
(*_36) = '\u{f90e2}';
Call(_66, bb30, core::intrinsics::bswap(_48))
}
bb30 = {
_57.2 = [2115575238421651449_i64; 7];
(*_27) = 1431135408_i32;
(*_53) = '\u{69659}';
_65 = [false; 5];
RET = core::ptr::addr_of!(_85);
_86.0 = _61.0.0 >> _73;
Goto(bb31)
}
bb31 = {
Call(_89, bb32, dump_var(Move(_1), Move(_73), Move(_56), Move(_35)))
}
bb32 = {
Call(_89, bb33, dump_var(Move(_15), Move(_68), Move(_70), Move(_33)))
}
bb33 = {
Call(_89, bb34, dump_var(Move(_69), Move(_55), Move(_71), Move(_65)))
}
bb34 = {
Call(_89, bb35, dump_var(Move(_84), Move(_59), Move(_74), Move(_7)))
}
bb35 = {
Call(_89, bb36, dump_var(Move(_8), Move(_52), _90, _90))
}
bb36 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: i64,mut _2: char) -> char {
mir! {
type RET = char;
let _3: *const u128;
let _4: i64;
let _5: i64;
let _6: *const i32;
let _7: u32;
let _8: (i64, *const i128, [i64; 7], u32);
let _9: char;
let _10: u64;
let _11: *const i32;
let _12: *mut (i8,);
let _13: i16;
let _14: ([i64; 7], [usize; 8]);
let _15: isize;
let _16: u32;
let _17: u32;
let _18: ([i64; 7], [usize; 8]);
let _19: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _20: u32;
let _21: ([f32; 5], u64);
let _22: *const i32;
let _23: ([i64; 7], [usize; 8]);
let _24: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _25: *const char;
let _26: [f32; 5];
let _27: (u16,);
let _28: isize;
let _29: *const i32;
let _30: i128;
let _31: *const i32;
let _32: ();
let _33: ();
{
RET = '\u{f95f5}';
_1 = -2595820521408408546_i64;
_1 = 0.0000000000000000000000000000000000000056317961073460106_f32 as i64;
RET = '\u{1a207}';
_2 = '\u{16df4}';
_4 = _1;
_5 = (-1520538504_i32) as i64;
RET = '\u{6258a}';
_5 = 6714105503011629156_usize as i64;
_2 = '\u{10e71c}';
Call(_3, bb1, fn5(RET, _2, _4, _2, RET))
}
bb1 = {
RET = '\u{e07b2}';
RET = '\u{104025}';
RET = '\u{c3887}';
_5 = !_1;
_1 = _5 & _5;
RET = '\u{92bd}';
RET = '\u{59bdf}';
_1 = 6_usize as i64;
RET = '\u{accf4}';
RET = '\u{8957a}';
_2 = '\u{9f3f9}';
_4 = (-1309970639_i32) as i64;
RET = '\u{33dc1}';
_2 = '\u{d1b07}';
RET = '\u{3fca7}';
Call(_1, bb2, core::intrinsics::bswap(_5))
}
bb2 = {
_1 = 21_u8 as i64;
_5 = _1;
RET = '\u{43b0}';
_7 = (-70_i8) as u32;
_2 = '\u{bdafa}';
_8.3 = _7;
_5 = !_4;
_4 = _1;
_8.2 = [(-2447367428678188496_i64); 7];
_2 = '\u{95467}';
_7 = !_8.3;
_8.2 = [(-9007676860425177769_i64); 7];
_7 = 48246_u16 as u32;
_7 = !_8.3;
_8.0 = _5;
_1 = -_4;
_5 = !_4;
_8.0 = 3_usize as i64;
_9 = '\u{ff25d}';
_5 = _8.0;
_7 = 14707355920435130324_usize as u32;
_8.0 = (-40623166942977501526689096285678775724_i128) as i64;
_9 = '\u{cd0ae}';
RET = '\u{108fca}';
_8.0 = 16378115432069851500_u64 as i64;
_8.0 = -_4;
Goto(bb3)
}
bb3 = {
_5 = -_1;
_8.2 = [(-5066125288834979763_i64); 7];
_4 = 9008172604777161165_u64 as i64;
_2 = '\u{249e3}';
_10 = !5968015555318867808_u64;
_8.3 = '\u{d047d}' as u32;
_8.3 = _7;
_8.0 = -_1;
_7 = _8.3;
_10 = 1474852254097375426_u64;
_7 = !_8.3;
_7 = _8.3 << _5;
RET = '\u{a3b5}';
_8.3 = _7;
_1 = !_5;
_8.0 = _4 >> _8.3;
_8.0 = !_5;
_10 = 55_u8 as u64;
_8.0 = !_4;
_8.2 = [(-602637284626418540_i64); 7];
Goto(bb4)
}
bb4 = {
_15 = !(-46_isize);
_1 = -_8.0;
RET = '\u{89a39}';
RET = '\u{c8dbc}';
_1 = _5;
_14.0 = [1501692509905719292_i64; 7];
_9 = '\u{15f7c}';
_7 = true as u32;
_13 = -(-26676_i16);
_16 = _8.0 as u32;
_1 = _5;
_9 = '\u{e5582}';
_14.0 = [8296257270359010122_i64; 7];
_14.1 = [15609643339654409423_usize; 8];
_2 = '\u{350a0}';
_15 = -(-9223372036854775808_isize);
_17 = _8.3 << _5;
_15 = (-96_isize);
_17 = _8.3 + _8.3;
_1 = !_8.0;
RET = '\u{10f8d0}';
_18.1 = [7_usize; 8];
match _15 {
0 => bb1,
1 => bb3,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211360 => bb9,
_ => bb8
}
}
bb5 = {
_5 = -_1;
_8.2 = [(-5066125288834979763_i64); 7];
_4 = 9008172604777161165_u64 as i64;
_2 = '\u{249e3}';
_10 = !5968015555318867808_u64;
_8.3 = '\u{d047d}' as u32;
_8.3 = _7;
_8.0 = -_1;
_7 = _8.3;
_10 = 1474852254097375426_u64;
_7 = !_8.3;
_7 = _8.3 << _5;
RET = '\u{a3b5}';
_8.3 = _7;
_1 = !_5;
_8.0 = _4 >> _8.3;
_8.0 = !_5;
_10 = 55_u8 as u64;
_8.0 = !_4;
_8.2 = [(-602637284626418540_i64); 7];
Goto(bb4)
}
bb6 = {
_1 = 21_u8 as i64;
_5 = _1;
RET = '\u{43b0}';
_7 = (-70_i8) as u32;
_2 = '\u{bdafa}';
_8.3 = _7;
_5 = !_4;
_4 = _1;
_8.2 = [(-2447367428678188496_i64); 7];
_2 = '\u{95467}';
_7 = !_8.3;
_8.2 = [(-9007676860425177769_i64); 7];
_7 = 48246_u16 as u32;
_7 = !_8.3;
_8.0 = _5;
_1 = -_4;
_5 = !_4;
_8.0 = 3_usize as i64;
_9 = '\u{ff25d}';
_5 = _8.0;
_7 = 14707355920435130324_usize as u32;
_8.0 = (-40623166942977501526689096285678775724_i128) as i64;
_9 = '\u{cd0ae}';
RET = '\u{108fca}';
_8.0 = 16378115432069851500_u64 as i64;
_8.0 = -_4;
Goto(bb3)
}
bb7 = {
RET = '\u{e07b2}';
RET = '\u{104025}';
RET = '\u{c3887}';
_5 = !_1;
_1 = _5 & _5;
RET = '\u{92bd}';
RET = '\u{59bdf}';
_1 = 6_usize as i64;
RET = '\u{accf4}';
RET = '\u{8957a}';
_2 = '\u{9f3f9}';
_4 = (-1309970639_i32) as i64;
RET = '\u{33dc1}';
_2 = '\u{d1b07}';
RET = '\u{3fca7}';
Call(_1, bb2, core::intrinsics::bswap(_5))
}
bb8 = {
Return()
}
bb9 = {
_19.0.0 = 16_i8 & 76_i8;
_8.2 = [3620518446735262869_i64; 7];
_2 = '\u{3b60a}';
_8.2 = [(-7441921137438041080_i64); 7];
_19.3 = [255493885253937006685669368650041234843_u128; 4];
_8.2 = [9162011051602456326_i64; 7];
_12 = core::ptr::addr_of_mut!(_19.0);
_5 = -_8.0;
_19.2 = _13;
_4 = _1 + _8.0;
_20 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021206036121528434_f64) as u32;
_16 = _10 as u32;
Goto(bb10)
}
bb10 = {
_21.1 = !_10;
_10 = (-1619322519_i32) as u64;
_5 = _1 ^ _8.0;
_19.0 = ((-81_i8),);
_10 = _21.1 >> _19.0.0;
_21.0 = [f32::NEG_INFINITY; 5];
RET = '\u{ece74}';
_9 = '\u{9e246}';
_7 = !_17;
_19.1 = [6534854174380474648489665570584876732_u128; 4];
_26 = [-0_f32; 5];
_23.1 = [8396750759488804382_usize; 8];
(*_12) = (62_i8,);
_8.2 = [(-2694913004832985050_i64); 7];
RET = '\u{ce520}';
_9 = '\u{8e60f}';
_8.0 = _5;
_24.3 = [221430488985605772940108650954261139309_u128; 4];
_25 = core::ptr::addr_of!(_9);
_24.1 = [58763282126251591007939643351369043565_u128; 4];
_25 = core::ptr::addr_of!((*_25));
match _15 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
340282366920938463463374607431768211360 => bb18,
_ => bb17
}
}
bb11 = {
_19.0.0 = 16_i8 & 76_i8;
_8.2 = [3620518446735262869_i64; 7];
_2 = '\u{3b60a}';
_8.2 = [(-7441921137438041080_i64); 7];
_19.3 = [255493885253937006685669368650041234843_u128; 4];
_8.2 = [9162011051602456326_i64; 7];
_12 = core::ptr::addr_of_mut!(_19.0);
_5 = -_8.0;
_19.2 = _13;
_4 = _1 + _8.0;
_20 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021206036121528434_f64) as u32;
_16 = _10 as u32;
Goto(bb10)
}
bb12 = {
Return()
}
bb13 = {
RET = '\u{e07b2}';
RET = '\u{104025}';
RET = '\u{c3887}';
_5 = !_1;
_1 = _5 & _5;
RET = '\u{92bd}';
RET = '\u{59bdf}';
_1 = 6_usize as i64;
RET = '\u{accf4}';
RET = '\u{8957a}';
_2 = '\u{9f3f9}';
_4 = (-1309970639_i32) as i64;
RET = '\u{33dc1}';
_2 = '\u{d1b07}';
RET = '\u{3fca7}';
Call(_1, bb2, core::intrinsics::bswap(_5))
}
bb14 = {
_1 = 21_u8 as i64;
_5 = _1;
RET = '\u{43b0}';
_7 = (-70_i8) as u32;
_2 = '\u{bdafa}';
_8.3 = _7;
_5 = !_4;
_4 = _1;
_8.2 = [(-2447367428678188496_i64); 7];
_2 = '\u{95467}';
_7 = !_8.3;
_8.2 = [(-9007676860425177769_i64); 7];
_7 = 48246_u16 as u32;
_7 = !_8.3;
_8.0 = _5;
_1 = -_4;
_5 = !_4;
_8.0 = 3_usize as i64;
_9 = '\u{ff25d}';
_5 = _8.0;
_7 = 14707355920435130324_usize as u32;
_8.0 = (-40623166942977501526689096285678775724_i128) as i64;
_9 = '\u{cd0ae}';
RET = '\u{108fca}';
_8.0 = 16378115432069851500_u64 as i64;
_8.0 = -_4;
Goto(bb3)
}
bb15 = {
_5 = -_1;
_8.2 = [(-5066125288834979763_i64); 7];
_4 = 9008172604777161165_u64 as i64;
_2 = '\u{249e3}';
_10 = !5968015555318867808_u64;
_8.3 = '\u{d047d}' as u32;
_8.3 = _7;
_8.0 = -_1;
_7 = _8.3;
_10 = 1474852254097375426_u64;
_7 = !_8.3;
_7 = _8.3 << _5;
RET = '\u{a3b5}';
_8.3 = _7;
_1 = !_5;
_8.0 = _4 >> _8.3;
_8.0 = !_5;
_10 = 55_u8 as u64;
_8.0 = !_4;
_8.2 = [(-602637284626418540_i64); 7];
Goto(bb4)
}
bb16 = {
_15 = !(-46_isize);
_1 = -_8.0;
RET = '\u{89a39}';
RET = '\u{c8dbc}';
_1 = _5;
_14.0 = [1501692509905719292_i64; 7];
_9 = '\u{15f7c}';
_7 = true as u32;
_13 = -(-26676_i16);
_16 = _8.0 as u32;
_1 = _5;
_9 = '\u{e5582}';
_14.0 = [8296257270359010122_i64; 7];
_14.1 = [15609643339654409423_usize; 8];
_2 = '\u{350a0}';
_15 = -(-9223372036854775808_isize);
_17 = _8.3 << _5;
_15 = (-96_isize);
_17 = _8.3 + _8.3;
_1 = !_8.0;
RET = '\u{10f8d0}';
_18.1 = [7_usize; 8];
match _15 {
0 => bb1,
1 => bb3,
2 => bb5,
3 => bb6,
4 => bb7,
340282366920938463463374607431768211360 => bb9,
_ => bb8
}
}
bb17 = {
_5 = -_1;
_8.2 = [(-5066125288834979763_i64); 7];
_4 = 9008172604777161165_u64 as i64;
_2 = '\u{249e3}';
_10 = !5968015555318867808_u64;
_8.3 = '\u{d047d}' as u32;
_8.3 = _7;
_8.0 = -_1;
_7 = _8.3;
_10 = 1474852254097375426_u64;
_7 = !_8.3;
_7 = _8.3 << _5;
RET = '\u{a3b5}';
_8.3 = _7;
_1 = !_5;
_8.0 = _4 >> _8.3;
_8.0 = !_5;
_10 = 55_u8 as u64;
_8.0 = !_4;
_8.2 = [(-602637284626418540_i64); 7];
Goto(bb4)
}
bb18 = {
_9 = '\u{69afa}';
_24.0.0 = (*_12).0 >> (*_12).0;
_19.2 = _13;
_13 = _19.2;
_25 = core::ptr::addr_of!(_9);
_18.1 = [5_usize; 8];
_24.0.0 = _19.0.0 | _19.0.0;
_27 = (41187_u16,);
(*_25) = '\u{1bf45}';
(*_12) = _24.0;
_30 = !(-72296074957417537256189166659736398236_i128);
_8.0 = !_5;
_28 = f32::NAN as isize;
Goto(bb19)
}
bb19 = {
Call(_32, bb20, dump_var(Move(_1), Move(_15), Move(_14), Move(_28)))
}
bb20 = {
Call(_32, bb21, dump_var(Move(_10), Move(_17), Move(_13), Move(_4)))
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: char,mut _2: char,mut _3: i64,mut _4: char,mut _5: char) -> *const u128 {
mir! {
type RET = *const u128;
let _6: isize;
let _7: u32;
let _8: *const i32;
let _9: ([f32; 5], u64);
let _10: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _11: [i64; 7];
let _12: *const [i64; 7];
let _13: u32;
let _14: u32;
let _15: u32;
let _16: *const f64;
let _17: *mut ([i64; 7], [usize; 8]);
let _18: ([f32; 5], u64);
let _19: *const i32;
let _20: *const u128;
let _21: [usize; 8];
let _22: (usize, i8, u16);
let _23: i64;
let _24: (i64, *const i128, [i64; 7], u32);
let _25: (u16,);
let _26: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _27: (u16,);
let _28: *const i128;
let _29: *const *const i128;
let _30: [f32; 5];
let _31: *const *const u64;
let _32: ();
let _33: ();
{
_2 = '\u{dda02}';
_3 = 6386115206370909257_i64 << 136_u8;
_2 = '\u{dc168}';
_5 = '\u{e99a8}';
_2 = '\u{e69d4}';
_6 = (-9223372036854775808_isize) * (-96_isize);
_1 = '\u{90915}';
_1 = '\u{4f30a}';
_7 = 2532009404_u32 & 818368623_u32;
_6 = (-0.000000000000000000000000000000000000006460724404828106_f32) as isize;
_7 = 1208433083_u32;
_3 = -(-8999105188220387092_i64);
_2 = '\u{84204}';
Goto(bb1)
}
bb1 = {
_4 = '\u{bc678}';
_4 = '\u{56de0}';
_7 = 274435973_u32 + 2082976078_u32;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = '\u{e583a}';
_4 = '\u{6b02}';
_6 = -(-9223372036854775808_isize);
_4 = '\u{7cbb}';
_1 = '\u{220a9}';
_7 = !1812346369_u32;
_6 = true as isize;
_3 = -8844275815283830612_i64;
_6 = !(-128_isize);
_3 = -(-1360220434803927409_i64);
_4 = '\u{de378}';
_7 = 3208590360_u32 % 916322311_u32;
_9.0 = [f32::NAN; 5];
_3 = true as i64;
_2 = '\u{bbfd9}';
_7 = 588641397_u32;
_9.1 = (-1197281505_i32) as u64;
_9.1 = 273049940104539112587211731634854088003_u128 as u64;
_5 = '\u{83b4f}';
_3 = 352297793193946081_i64 - 3273646349072340063_i64;
_10.3 = [234003455008683220825648724228070031728_u128; 4];
_5 = '\u{63f1a}';
_10.3 = [333629153912795389115105431736699431840_u128; 4];
_10.3 = [288280020190944815569099429260955930757_u128; 4];
_2 = '\u{102db7}';
Goto(bb2)
}
bb2 = {
_3 = 2171024479631572599_i64;
_10.0.0 = (-68_i8);
_10.0 = (30_i8,);
_1 = '\u{ad088}';
_10.0.0 = !3_i8;
_11 = [4206844527757705421_i64; 7];
_2 = '\u{309c7}';
_10.1 = [67757781167775809458960367393387660992_u128; 4];
_9.0 = [f32::INFINITY; 5];
_2 = '\u{b2f52}';
match _7 {
588641397 => bb4,
_ => bb3
}
}
bb3 = {
_4 = '\u{bc678}';
_4 = '\u{56de0}';
_7 = 274435973_u32 + 2082976078_u32;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = '\u{e583a}';
_4 = '\u{6b02}';
_6 = -(-9223372036854775808_isize);
_4 = '\u{7cbb}';
_1 = '\u{220a9}';
_7 = !1812346369_u32;
_6 = true as isize;
_3 = -8844275815283830612_i64;
_6 = !(-128_isize);
_3 = -(-1360220434803927409_i64);
_4 = '\u{de378}';
_7 = 3208590360_u32 % 916322311_u32;
_9.0 = [f32::NAN; 5];
_3 = true as i64;
_2 = '\u{bbfd9}';
_7 = 588641397_u32;
_9.1 = (-1197281505_i32) as u64;
_9.1 = 273049940104539112587211731634854088003_u128 as u64;
_5 = '\u{83b4f}';
_3 = 352297793193946081_i64 - 3273646349072340063_i64;
_10.3 = [234003455008683220825648724228070031728_u128; 4];
_5 = '\u{63f1a}';
_10.3 = [333629153912795389115105431736699431840_u128; 4];
_10.3 = [288280020190944815569099429260955930757_u128; 4];
_2 = '\u{102db7}';
Goto(bb2)
}
bb4 = {
_9.0 = [0_f32; 5];
_11 = [(-6461437476624949798_i64); 7];
_15 = _7;
_11 = [5301791625238223908_i64; 7];
_14 = !_7;
_10.2 = (-5107_i16) | (-4911_i16);
_4 = '\u{b240e}';
_3 = 9189087511974540901_i64 & 8576456259454774694_i64;
_2 = '\u{c4740}';
_6 = true as isize;
_6 = 15_isize >> _7;
_5 = '\u{4b2}';
_10.0.0 = 0_i8 | (-119_i8);
_2 = '\u{10960b}';
match _15 {
588641397 => bb6,
_ => bb5
}
}
bb5 = {
_4 = '\u{bc678}';
_4 = '\u{56de0}';
_7 = 274435973_u32 + 2082976078_u32;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = '\u{e583a}';
_4 = '\u{6b02}';
_6 = -(-9223372036854775808_isize);
_4 = '\u{7cbb}';
_1 = '\u{220a9}';
_7 = !1812346369_u32;
_6 = true as isize;
_3 = -8844275815283830612_i64;
_6 = !(-128_isize);
_3 = -(-1360220434803927409_i64);
_4 = '\u{de378}';
_7 = 3208590360_u32 % 916322311_u32;
_9.0 = [f32::NAN; 5];
_3 = true as i64;
_2 = '\u{bbfd9}';
_7 = 588641397_u32;
_9.1 = (-1197281505_i32) as u64;
_9.1 = 273049940104539112587211731634854088003_u128 as u64;
_5 = '\u{83b4f}';
_3 = 352297793193946081_i64 - 3273646349072340063_i64;
_10.3 = [234003455008683220825648724228070031728_u128; 4];
_5 = '\u{63f1a}';
_10.3 = [333629153912795389115105431736699431840_u128; 4];
_10.3 = [288280020190944815569099429260955930757_u128; 4];
_2 = '\u{102db7}';
Goto(bb2)
}
bb6 = {
_14 = _15 * _15;
_14 = 5_usize as u32;
_9.1 = 14353539119681373301_u64;
_5 = '\u{798df}';
_11 = [(-6057585738767750632_i64); 7];
_10.0.0 = (-105_i8) >> _9.1;
_15 = 66586106195205179426018376451140205326_i128 as u32;
_7 = _14 * _14;
_7 = !_14;
_10.0.0 = (-1_i8);
_6 = -9223372036854775807_isize;
_10.3 = [319539879957055890188037024580409623382_u128; 4];
_12 = core::ptr::addr_of!(_11);
_10.3 = [145128323028010465080148212481260772202_u128; 4];
_3 = _15 as i64;
(*_12) = [1274267051114890749_i64; 7];
_10.4 = [-0_f32; 5];
(*_12) = [(-920276169386376078_i64); 7];
_10.4 = [f32::INFINITY; 5];
_11 = [5231713260061469110_i64; 7];
(*_12) = [(-5531481673337486696_i64); 7];
(*_12) = [(-1558795556761475093_i64); 7];
_1 = '\u{91494}';
match _10.0.0 {
340282366920938463463374607431768211455 => bb8,
_ => bb7
}
}
bb7 = {
_4 = '\u{bc678}';
_4 = '\u{56de0}';
_7 = 274435973_u32 + 2082976078_u32;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = '\u{e583a}';
_4 = '\u{6b02}';
_6 = -(-9223372036854775808_isize);
_4 = '\u{7cbb}';
_1 = '\u{220a9}';
_7 = !1812346369_u32;
_6 = true as isize;
_3 = -8844275815283830612_i64;
_6 = !(-128_isize);
_3 = -(-1360220434803927409_i64);
_4 = '\u{de378}';
_7 = 3208590360_u32 % 916322311_u32;
_9.0 = [f32::NAN; 5];
_3 = true as i64;
_2 = '\u{bbfd9}';
_7 = 588641397_u32;
_9.1 = (-1197281505_i32) as u64;
_9.1 = 273049940104539112587211731634854088003_u128 as u64;
_5 = '\u{83b4f}';
_3 = 352297793193946081_i64 - 3273646349072340063_i64;
_10.3 = [234003455008683220825648724228070031728_u128; 4];
_5 = '\u{63f1a}';
_10.3 = [333629153912795389115105431736699431840_u128; 4];
_10.3 = [288280020190944815569099429260955930757_u128; 4];
_2 = '\u{102db7}';
Goto(bb2)
}
bb8 = {
_10.2 = 23287_i16 >> _14;
_12 = core::ptr::addr_of!(_11);
_7 = -0_f32 as u32;
match _10.0.0 {
0 => bb2,
340282366920938463463374607431768211455 => bb10,
_ => bb9
}
}
bb9 = {
_4 = '\u{bc678}';
_4 = '\u{56de0}';
_7 = 274435973_u32 + 2082976078_u32;
_6 = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_2 = '\u{e583a}';
_4 = '\u{6b02}';
_6 = -(-9223372036854775808_isize);
_4 = '\u{7cbb}';
_1 = '\u{220a9}';
_7 = !1812346369_u32;
_6 = true as isize;
_3 = -8844275815283830612_i64;
_6 = !(-128_isize);
_3 = -(-1360220434803927409_i64);
_4 = '\u{de378}';
_7 = 3208590360_u32 % 916322311_u32;
_9.0 = [f32::NAN; 5];
_3 = true as i64;
_2 = '\u{bbfd9}';
_7 = 588641397_u32;
_9.1 = (-1197281505_i32) as u64;
_9.1 = 273049940104539112587211731634854088003_u128 as u64;
_5 = '\u{83b4f}';
_3 = 352297793193946081_i64 - 3273646349072340063_i64;
_10.3 = [234003455008683220825648724228070031728_u128; 4];
_5 = '\u{63f1a}';
_10.3 = [333629153912795389115105431736699431840_u128; 4];
_10.3 = [288280020190944815569099429260955930757_u128; 4];
_2 = '\u{102db7}';
Goto(bb2)
}
bb10 = {
_10.0.0 = !(-62_i8);
_18.1 = _10.0.0 as u64;
_15 = _14;
_14 = _7 * _15;
_9.1 = _14 as u64;
_11 = [569002358161426571_i64; 7];
_22 = (7_usize, 118_i8, 64250_u16);
Goto(bb11)
}
bb11 = {
_22.0 = 12703389168678946265_usize;
_18 = _9;
_24.0 = 12575_u16 as i64;
_24.2 = [4752216478240960474_i64; 7];
_21 = [6_usize; 8];
_24.2 = [(-8681260151176337001_i64); 7];
_2 = '\u{ff6a7}';
Call(RET, bb12, fn6(_9.0, (*_12), _12, _15, _18, (*_12), (*_12), _11, _5, _10.0, _6, _22.2, _24.2, (*_12), (*_12)))
}
bb12 = {
_22.0 = 3768365190169697939_usize * 3_usize;
_22.1 = _10.0.0 * _10.0.0;
Goto(bb13)
}
bb13 = {
_13 = 43830_u16 as u32;
_7 = _14;
_9.0 = [f32::NAN; 5];
_21 = [8712596289277411853_usize; 8];
_14 = !_15;
_25.0 = 6030_u16 + 55251_u16;
_10.1 = [257112117402095312393965710126634165214_u128; 4];
_11 = [(-2562571217260250420_i64); 7];
_10.0 = ((-59_i8),);
_13 = !_15;
_24.3 = _24.0 as u32;
_14 = !_24.3;
_10.0 = (62_i8,);
_21 = [857670251592223862_usize; 8];
_12 = core::ptr::addr_of!((*_12));
_24.2 = [5188333215934442073_i64; 7];
_14 = !_24.3;
match _10.0.0 {
0 => bb1,
1 => bb4,
62 => bb15,
_ => bb14
}
}
bb14 = {
_22.0 = 3768365190169697939_usize * 3_usize;
_22.1 = _10.0.0 * _10.0.0;
Goto(bb13)
}
bb15 = {
_10.0.0 = _22.1;
_18.0 = [(-0.0000000000000000000000000000000000000025308529265523726_f32); 5];
_10.0.0 = _22.1 - _22.1;
_7 = !_13;
_26.1 = [86308347427784440716848463846723084257_u128; 4];
_15 = !_7;
_9.1 = _18.1;
_23 = _24.0 - _3;
_26.2 = _10.2 + _10.2;
_7 = false as u32;
_23 = _3 & _24.0;
_11 = [8061784162522326906_i64; 7];
_15 = _14;
_4 = '\u{f4c8a}';
_9.1 = !_18.1;
_29 = core::ptr::addr_of!(_24.1);
_27.0 = _25.0;
_23 = -_3;
_9 = _18;
_10.1 = [27750502913684710755239544767530199754_u128; 4];
Goto(bb16)
}
bb16 = {
Call(_32, bb17, dump_var(Move(_13), Move(_22), Move(_25), Move(_7)))
}
bb17 = {
Call(_32, bb18, dump_var(Move(_21), Move(_6), Move(_11), Move(_1)))
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: [f32; 5],mut _2: [i64; 7],mut _3: *const [i64; 7],mut _4: u32,mut _5: ([f32; 5], u64),mut _6: [i64; 7],mut _7: [i64; 7],mut _8: [i64; 7],mut _9: char,mut _10: (i8,),mut _11: isize,mut _12: u16,mut _13: [i64; 7],mut _14: [i64; 7],mut _15: [i64; 7]) -> *const u128 {
mir! {
type RET = *const u128;
let _16: f32;
let _17: *const i32;
let _18: *mut ([i64; 7], [usize; 8]);
let _19: u64;
let _20: *const i32;
let _21: f64;
let _22: ([f32; 5], u64);
let _23: [usize; 8];
let _24: (i64, *const i128, [i64; 7], u32);
let _25: *const [i64; 7];
let _26: f32;
let _27: bool;
let _28: f32;
let _29: isize;
let _30: u64;
let _31: *mut ([i64; 7], [usize; 8]);
let _32: *const *const i128;
let _33: [u32; 1];
let _34: (u16,);
let _35: (*mut u32,);
let _36: *mut u32;
let _37: *const i32;
let _38: i8;
let _39: f32;
let _40: isize;
let _41: (usize, i8, u16);
let _42: [i64; 7];
let _43: i8;
let _44: i16;
let _45: ([f32; 5], u64);
let _46: u64;
let _47: *const *const u64;
let _48: (*mut u32,);
let _49: i64;
let _50: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _51: *const *const i128;
let _52: *mut ([i64; 7], [usize; 8]);
let _53: isize;
let _54: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _55: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _56: u8;
let _57: *mut u32;
let _58: u64;
let _59: (i64, *const i128, [i64; 7], u32);
let _60: usize;
let _61: isize;
let _62: isize;
let _63: *const u128;
let _64: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _65: [u128; 4];
let _66: [i64; 7];
let _67: i64;
let _68: [usize; 8];
let _69: *const u128;
let _70: i128;
let _71: (i64, *const i128, [i64; 7], u32);
let _72: [isize; 1];
let _73: *const i32;
let _74: bool;
let _75: ([i64; 7], [usize; 8]);
let _76: *const f64;
let _77: (i8,);
let _78: [isize; 1];
let _79: *mut ([i64; 7], [usize; 8]);
let _80: f64;
let _81: [bool; 5];
let _82: *const i32;
let _83: isize;
let _84: *const f64;
let _85: [u32; 6];
let _86: char;
let _87: (u16,);
let _88: isize;
let _89: *const *const i128;
let _90: bool;
let _91: u64;
let _92: (usize, i8, u16);
let _93: *mut ([i64; 7], [usize; 8]);
let _94: *const u128;
let _95: u16;
let _96: bool;
let _97: i64;
let _98: *const [i64; 7];
let _99: *const [i64; 7];
let _100: *const f64;
let _101: *mut (i8,);
let _102: *mut ([i64; 7], [usize; 8]);
let _103: [bool; 5];
let _104: i64;
let _105: *const *const i128;
let _106: u32;
let _107: *const i32;
let _108: u64;
let _109: u64;
let _110: u8;
let _111: *const char;
let _112: *const *const u64;
let _113: i16;
let _114: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _115: *mut ([i64; 7], [usize; 8]);
let _116: *const *const char;
let _117: *const i32;
let _118: [bool; 5];
let _119: i8;
let _120: (*mut u32,);
let _121: (i8,);
let _122: i16;
let _123: *mut ([i64; 7], [usize; 8]);
let _124: i32;
let _125: ([i64; 7], [usize; 8]);
let _126: isize;
let _127: u32;
let _128: *const i32;
let _129: [usize; 8];
let _130: [bool; 5];
let _131: ([i64; 7], [usize; 8]);
let _132: *const i32;
let _133: *mut ([i64; 7], [usize; 8]);
let _134: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _135: *const i32;
let _136: (usize, i8, u16);
let _137: i64;
let _138: f64;
let _139: f64;
let _140: (i8,);
let _141: *mut (i8,);
let _142: [bool; 5];
let _143: u64;
let _144: *const i32;
let _145: *const *const i128;
let _146: [u128; 4];
let _147: f64;
let _148: ([i64; 7], [usize; 8]);
let _149: usize;
let _150: *const i32;
let _151: *const i128;
let _152: (i64, *const i128, [i64; 7], u32);
let _153: u16;
let _154: (i64, *const i128, [i64; 7], u32);
let _155: u8;
let _156: ([i64; 7], [usize; 8]);
let _157: *const *const u64;
let _158: *const u64;
let _159: (u16,);
let _160: *const i32;
let _161: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _162: *mut (i8,);
let _163: (i64, *const i128, [i64; 7], u32);
let _164: f64;
let _165: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _166: isize;
let _167: ([i64; 7], [usize; 8]);
let _168: *const i32;
let _169: *const *const i128;
let _170: (i8,);
let _171: (*mut u32,);
let _172: [u128; 4];
let _173: (i64, *const i128, [i64; 7], u32);
let _174: *const i32;
let _175: [u32; 6];
let _176: *const i32;
let _177: *const u128;
let _178: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _179: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _180: u128;
let _181: u16;
let _182: bool;
let _183: isize;
let _184: isize;
let _185: u32;
let _186: u64;
let _187: *const *const u64;
let _188: *const u128;
let _189: *const i32;
let _190: (i8,);
let _191: [u32; 1];
let _192: (u16,);
let _193: *const u128;
let _194: ([i64; 7], [usize; 8]);
let _195: [usize; 8];
let _196: *mut (i8,);
let _197: *mut u32;
let _198: i8;
let _199: *const f64;
let _200: *const i32;
let _201: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _202: [bool; 5];
let _203: u32;
let _204: *const char;
let _205: (i64, *const i128, [i64; 7], u32);
let _206: [bool; 5];
let _207: [usize; 8];
let _208: char;
let _209: *const i32;
let _210: *const i32;
let _211: *const u64;
let _212: u64;
let _213: u64;
let _214: (i8,);
let _215: bool;
let _216: (u16,);
let _217: *const i32;
let _218: ([f32; 5], u64);
let _219: i8;
let _220: (usize, i8, u16);
let _221: [i64; 5];
let _222: ([f32; 5], u64);
let _223: (i64, *const i128, [i64; 7], u32);
let _224: [u32; 1];
let _225: isize;
let _226: u16;
let _227: ([f32; 5], u64);
let _228: u64;
let _229: f32;
let _230: [isize; 1];
let _231: i32;
let _232: *const f64;
let _233: (i8,);
let _234: [i64; 7];
let _235: *const [i64; 7];
let _236: isize;
let _237: (u16,);
let _238: u8;
let _239: ([f32; 5], u64);
let _240: i128;
let _241: [isize; 1];
let _242: *mut ([i64; 7], [usize; 8]);
let _243: *const u64;
let _244: u128;
let _245: (i64, *const i128, [i64; 7], u32);
let _246: *const f64;
let _247: [u128; 4];
let _248: *mut ([i64; 7], [usize; 8]);
let _249: i16;
let _250: (u16,);
let _251: *const i32;
let _252: isize;
let _253: u32;
let _254: ();
let _255: ();
{
(*_3) = [(-5039122095277411056_i64); 7];
_15 = [(-2653969964227146444_i64); 7];
Goto(bb1)
}
bb1 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb2 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb3 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb4 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb5 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
_7 = [(-7302440497610176472_i64); 7];
_10 = (17_i8,);
_10.0 = (-55_i8) << _4;
_11 = 68_isize;
_10 = ((-101_i8),);
_10.0 = 302431667699996788676510841007161445728_u128 as i8;
_15 = [(-4426268476908570239_i64); 7];
_7 = [4205654148785351981_i64; 7];
_7 = [5233026693078635547_i64; 7];
_22.0 = [f32::NEG_INFINITY; 5];
_23 = [4_usize; 8];
_7 = [(-1234088188018366137_i64); 7];
_1 = [f32::NAN; 5];
_10 = (58_i8,);
_22 = _5;
_22 = _5;
_24.3 = _4;
_7 = [2040108816888607512_i64; 7];
_23 = [10472749075352065679_usize; 8];
_12 = _21 as u16;
_22.1 = !_19;
_15 = [6365940154017870617_i64; 7];
_23 = [1_usize; 8];
_9 = '\u{c363f}';
(*_3) = [(-5418841796658560747_i64); 7];
_7 = [6035616496895599494_i64; 7];
_23 = [15317017576579615764_usize; 8];
_10 = ((-61_i8),);
match _4 {
0 => bb1,
1 => bb6,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
2958721351 => bb18,
_ => bb17
}
}
bb13 = {
Return()
}
bb14 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb15 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_24.2 = [(-6005734490102540193_i64); 7];
_24.0 = !(-2771491109766204626_i64);
_8 = [(-3777784575527974935_i64); 7];
_10.0 = (-31_i8);
_7 = [8052468122751667889_i64; 7];
_5.0 = [-0_f32; 5];
_5.1 = _21 as u64;
_12 = 47519_u16;
_7 = [(-1735341731457072971_i64); 7];
_8 = [(-398346175937556652_i64); 7];
_8 = [(-4427147656921574239_i64); 7];
Goto(bb19)
}
bb19 = {
_22 = _5;
_12 = 41836_u16;
_1 = [0_f32; 5];
_28 = _5.1 as f32;
_24.2 = [(-3019439387622980566_i64); 7];
_11 = (-1077061955_i32) as isize;
_19 = '\u{11e21}' as u64;
_3 = core::ptr::addr_of!((*_3));
_28 = _24.0 as f32;
(*_3) = [269445384567005318_i64; 7];
_4 = '\u{aa0d2}' as u32;
_22.1 = !_5.1;
_23 = [6_usize; 8];
_10 = (97_i8,);
_29 = _11;
_27 = _5.1 < _22.1;
Goto(bb20)
}
bb20 = {
_12 = 41823_u16 << _4;
_5 = _22;
_14 = [7559874573758242786_i64; 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000404143375738345_f64) / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019422459592758816_f64;
_19 = _28 as u64;
_14 = [(-2853596811033132270_i64); 7];
_5.0 = [-0_f32; 5];
_10 = ((-119_i8),);
_2 = [1527976425893712507_i64; 7];
_4 = _12 as u32;
Call(_19, bb21, fn8(_15, _3, _24.0))
}
bb21 = {
_24.3 = !_4;
_2 = [(-4932730034115312594_i64); 7];
_15 = [(-3678493070362408651_i64); 7];
_16 = 322297823080640820098790684796600989417_u128 as f32;
_5 = _22;
_27 = !true;
(*_3) = [8142468951884798664_i64; 7];
(*_3) = [1335626974415338851_i64; 7];
_26 = _10.0 as f32;
_23 = [7244269457345842018_usize; 8];
_22 = _5;
_25 = core::ptr::addr_of!(_2);
_21 = -0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014997770565715846_f64;
_29 = _11;
_15 = [2320619848061819201_i64; 7];
_16 = -_26;
_34.0 = !_12;
_32 = core::ptr::addr_of!(_24.1);
_12 = _34.0 / 44973_u16;
Call(_7, bb22, fn13(_29, _10, _5, _22.1, _15, _24.2, _25))
}
bb22 = {
_22 = _5;
_25 = core::ptr::addr_of!(_2);
_6 = _7;
_15 = _7;
_6 = (*_3);
_29 = _11 - _11;
_24.2 = (*_3);
_12 = !_34.0;
_4 = _21 as u32;
_36 = core::ptr::addr_of_mut!(_4);
_5 = _22;
(*_3) = _6;
_14 = (*_3);
_1 = [f32::NAN; 5];
(*_25) = _15;
(*_25) = _14;
_23 = [3_usize; 8];
_1 = [0.000000000000000000000000000000000000006486596578374935_f32; 5];
_40 = -_11;
_41.0 = 3064763741932147151_usize;
_16 = _24.0 as f32;
Call(_22.1, bb23, fn14(_15, _41.0, _10.0, _9, _40, _24.2, _24.3, _13, _22.0))
}
bb23 = {
_10.0 = -108_i8;
_22.1 = _5.1 % 8618484107333597375_u64;
_19 = _5.1;
_14 = _2;
_23 = [7033106000838490347_usize; 8];
_41.2 = !_34.0;
_4 = _24.3;
_32 = core::ptr::addr_of!(_24.1);
(*_3) = _7;
_33 = [3470922682_u32; 1];
_32 = core::ptr::addr_of!((*_32));
_41.1 = _10.0;
_15 = _24.2;
_13 = _7;
_44 = (-26867_i16);
_32 = core::ptr::addr_of!((*_32));
_1 = [0.000000000000000000000000000000000000006421907036067844_f32; 5];
_34.0 = !_41.2;
Call(_41, bb24, fn18(_29, _15, _22.1, _36, (*_3), _44, _7, _8, _33))
}
bb24 = {
_41.0 = !3_usize;
_29 = _11 * _11;
_1 = [(-0.000000000000000000000000000000000000009605596891179863_f32); 5];
_28 = 3_u8 as f32;
_14 = _15;
(*_3) = _2;
_5.0 = [0_f32; 5];
_33 = [4180785565_u32; 1];
_35.0 = core::ptr::addr_of_mut!(_4);
(*_25) = (*_3);
_36 = core::ptr::addr_of_mut!(_4);
(*_36) = _24.3;
Goto(bb25)
}
bb25 = {
_41.0 = !14378503734498362188_usize;
_7 = (*_3);
_22.0 = [f32::NEG_INFINITY; 5];
_38 = -_41.1;
(*_3) = _14;
_44 = -(-5164_i16);
_21 = _41.0 as f64;
_32 = core::ptr::addr_of!((*_32));
_5 = _22;
_3 = _25;
_35.0 = _36;
(*_36) = _27 as u32;
_19 = !_5.1;
_30 = _5.1 * _5.1;
_7 = _24.2;
_45 = _5;
_30 = _45.1 * _19;
_48.0 = core::ptr::addr_of_mut!(_4);
_4 = _24.3 * _24.3;
_5.1 = !_30;
match _41.2 {
0 => bb8,
1 => bb13,
2 => bb7,
3 => bb4,
4 => bb26,
5 => bb27,
61362 => bb29,
_ => bb28
}
}
bb26 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb27 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb28 = {
Return()
}
bb29 = {
_23 = [1797765761367181197_usize; 8];
_49 = _24.0 & _24.0;
_24.0 = _29 as i64;
_27 = true | true;
_5.1 = _22.1 | _45.1;
_23 = [4_usize; 8];
(*_3) = _7;
_50.2 = -_44;
(*_36) = !_24.3;
_5 = _45;
_40 = _27 as isize;
_54.3 = [174441544503877149678397274126412479133_u128; 4];
_55.3 = [333817512425073823152805532232673542721_u128; 4];
_25 = _3;
_42 = _7;
_40 = _29;
_24.2 = _7;
_48.0 = _36;
match _41.2 {
61362 => bb31,
_ => bb30
}
}
bb30 = {
Return()
}
bb31 = {
_54.0 = _10;
_10 = _54.0;
_26 = _16 + _28;
_55.2 = _50.2 << _30;
_54.1 = [84276041979640457420095793573221329669_u128; 4];
_10.0 = -_38;
_43 = _40 as i8;
match _41.2 {
0 => bb4,
1 => bb16,
2 => bb18,
3 => bb32,
61362 => bb34,
_ => bb33
}
}
bb32 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb33 = {
Return()
}
bb34 = {
_45 = _5;
(*_36) = _24.3 * _24.3;
_51 = core::ptr::addr_of!((*_32));
_34.0 = _41.2;
_51 = core::ptr::addr_of!((*_32));
_50.1 = [74485150314011781045266032741970970659_u128; 4];
_28 = _4 as f32;
_50.4 = [0.0000000000000000000000000000000000000003230763674424082_f32; 5];
_51 = core::ptr::addr_of!((*_32));
_24.2 = (*_3);
_55.3 = [32938110666155554478493723783907469134_u128; 4];
_50.0.0 = _43;
_24.2 = _14;
_22 = _45;
_32 = core::ptr::addr_of!(_24.1);
_15 = (*_3);
match _34.0 {
0 => bb35,
61362 => bb37,
_ => bb36
}
}
bb35 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb36 = {
_41.0 = !14378503734498362188_usize;
_7 = (*_3);
_22.0 = [f32::NEG_INFINITY; 5];
_38 = -_41.1;
(*_3) = _14;
_44 = -(-5164_i16);
_21 = _41.0 as f64;
_32 = core::ptr::addr_of!((*_32));
_5 = _22;
_3 = _25;
_35.0 = _36;
(*_36) = _27 as u32;
_19 = !_5.1;
_30 = _5.1 * _5.1;
_7 = _24.2;
_45 = _5;
_30 = _45.1 * _19;
_48.0 = core::ptr::addr_of_mut!(_4);
_4 = _24.3 * _24.3;
_5.1 = !_30;
match _41.2 {
0 => bb8,
1 => bb13,
2 => bb7,
3 => bb4,
4 => bb26,
5 => bb27,
61362 => bb29,
_ => bb28
}
}
bb37 = {
_30 = !_45.1;
_41.2 = !_34.0;
_53 = _11 * _29;
_5.1 = '\u{7f0a}' as u64;
match _34.0 {
0 => bb16,
1 => bb2,
2 => bb10,
3 => bb13,
4 => bb38,
61362 => bb40,
_ => bb39
}
}
bb38 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb39 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb40 = {
_2 = _15;
_25 = core::ptr::addr_of!((*_25));
_14 = _2;
_13 = (*_25);
_59.3 = (-123660941072883733371945071570701120080_i128) as u32;
_22.0 = [f32::NAN; 5];
_55.4 = [(-0.000000000000000000000000000000000000005672090444687671_f32); 5];
_45.1 = !_19;
_60 = '\u{5c169}' as usize;
_7 = _42;
_41 = (4_usize, 82_i8, 35614_u16);
_54.0.0 = _26 as i8;
_54.3 = [257778790274303663732256134462540994708_u128; 4];
_35 = _48;
_12 = !_41.2;
_41.2 = _34.0;
_50.0.0 = _10.0;
_24.0 = _21 as i64;
_59.0 = -_49;
_7 = (*_25);
_11 = _29 | _29;
_32 = core::ptr::addr_of!(_59.1);
_50.4 = [(-0.000000000000000000000000000000000000009864576465565589_f32); 5];
_57 = core::ptr::addr_of_mut!((*_36));
_43 = -_38;
match _34.0 {
0 => bb1,
1 => bb11,
2 => bb25,
3 => bb26,
4 => bb41,
61362 => bb43,
_ => bb42
}
}
bb41 = {
_23 = [1797765761367181197_usize; 8];
_49 = _24.0 & _24.0;
_24.0 = _29 as i64;
_27 = true | true;
_5.1 = _22.1 | _45.1;
_23 = [4_usize; 8];
(*_3) = _7;
_50.2 = -_44;
(*_36) = !_24.3;
_5 = _45;
_40 = _27 as isize;
_54.3 = [174441544503877149678397274126412479133_u128; 4];
_55.3 = [333817512425073823152805532232673542721_u128; 4];
_25 = _3;
_42 = _7;
_40 = _29;
_24.2 = _7;
_48.0 = _36;
match _41.2 {
61362 => bb31,
_ => bb30
}
}
bb42 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb43 = {
_27 = false;
_30 = !_22.1;
_46 = !_30;
_41.0 = _60;
(*_57) = _59.3;
match _41.2 {
0 => bb27,
1 => bb33,
2 => bb37,
3 => bb14,
4 => bb5,
61362 => bb44,
_ => bb38
}
}
bb44 = {
_16 = _28;
_58 = _45.1;
_54.4 = [f32::NEG_INFINITY; 5];
_55.1 = [279505261005506287298655705880991343970_u128; 4];
_62 = _27 as isize;
_39 = _16 - _28;
_30 = !_5.1;
_5.0 = [f32::NAN; 5];
_55.3 = [303325342501057626735024765483327075631_u128; 4];
_50.4 = [-0_f32; 5];
Goto(bb45)
}
bb45 = {
_38 = -_43;
_54.0.0 = -_50.0.0;
_30 = _58 | _46;
_34.0 = !_12;
_3 = core::ptr::addr_of!(_15);
_45.1 = !_30;
_41.1 = _21 as i8;
(*_25) = (*_3);
_41 = (656674190357610071_usize, (-15_i8), 45981_u16);
_55.2 = !_50.2;
_5.1 = (-1764617906_i32) as u64;
_55.0.0 = _54.0.0 + _38;
_41.0 = _60 / 6617099060014451341_usize;
_64.1 = [108599214102581961355340835315498246672_u128; 4];
_1 = [f32::NAN; 5];
_64.3 = [34935639734417645655300230606585305972_u128; 4];
match _41.2 {
0 => bb46,
1 => bb47,
2 => bb48,
3 => bb49,
4 => bb50,
5 => bb51,
6 => bb52,
45981 => bb54,
_ => bb53
}
}
bb46 = {
Return()
}
bb47 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb48 = {
Return()
}
bb49 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb50 = {
Return()
}
bb51 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb52 = {
Return()
}
bb53 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb54 = {
_67 = _59.0 - _24.0;
_54 = _55;
_54.4 = [f32::INFINITY; 5];
_68 = [13327613258214635351_usize; 8];
_10 = _50.0;
_4 = _41.1 as u32;
_64.0.0 = _55.0.0;
Goto(bb55)
}
bb55 = {
_43 = _64.0.0 * _54.0.0;
_34 = (18448_u16,);
_65 = [236666914343545518084430692772943787506_u128; 4];
_41.1 = _43 & _50.0.0;
_56 = 188_u8;
_55.0.0 = -_64.0.0;
_49 = _67;
_71.2 = (*_25);
_60 = _41.0 << _45.1;
_70 = !104391062740826689535158927987845594458_i128;
_34.0 = _41.2;
_55.1 = [68110714011330518038469332376680822859_u128; 4];
_3 = _25;
(*_32) = core::ptr::addr_of!(_70);
_48.0 = core::ptr::addr_of_mut!((*_36));
_50.3 = [327507366991214633492066999772919406065_u128; 4];
_41 = (3302326423688893237_usize, 52_i8, 19518_u16);
_33 = [1386462522_u32; 1];
match _41.1 {
0 => bb21,
1 => bb10,
2 => bb54,
52 => bb56,
_ => bb51
}
}
bb56 = {
(*_51) = core::ptr::addr_of!(_70);
_10 = _64.0;
_15 = _2;
_64.0.0 = _60 as i8;
Goto(bb57)
}
bb57 = {
_64.4 = [(-0.000000000000000000000000000000000000008445097554964622_f32); 5];
match _41.2 {
0 => bb10,
1 => bb45,
2 => bb58,
3 => bb59,
4 => bb60,
5 => bb61,
19518 => bb63,
_ => bb62
}
}
bb58 = {
_23 = [1797765761367181197_usize; 8];
_49 = _24.0 & _24.0;
_24.0 = _29 as i64;
_27 = true | true;
_5.1 = _22.1 | _45.1;
_23 = [4_usize; 8];
(*_3) = _7;
_50.2 = -_44;
(*_36) = !_24.3;
_5 = _45;
_40 = _27 as isize;
_54.3 = [174441544503877149678397274126412479133_u128; 4];
_55.3 = [333817512425073823152805532232673542721_u128; 4];
_25 = _3;
_42 = _7;
_40 = _29;
_24.2 = _7;
_48.0 = _36;
match _41.2 {
61362 => bb31,
_ => bb30
}
}
bb59 = {
Return()
}
bb60 = {
_67 = _59.0 - _24.0;
_54 = _55;
_54.4 = [f32::INFINITY; 5];
_68 = [13327613258214635351_usize; 8];
_10 = _50.0;
_4 = _41.1 as u32;
_64.0.0 = _55.0.0;
Goto(bb55)
}
bb61 = {
Return()
}
bb62 = {
Return()
}
bb63 = {
_22.0 = [-0_f32; 5];
_75.1 = [3_usize; 8];
_54 = _55;
_52 = core::ptr::addr_of_mut!(_75);
_36 = _35.0;
_66 = _42;
(*_3) = _71.2;
_6 = _15;
_55.0.0 = -_43;
(*_57) = _24.3;
_76 = core::ptr::addr_of!(_21);
_77.0 = -_10.0;
_64.4 = [f32::NAN; 5];
_64 = _55;
_5.0 = [0.000000000000000000000000000000000000004881255044659781_f32; 5];
Goto(bb64)
}
bb64 = {
(*_32) = (*_51);
_87.0 = _12 - _41.2;
_55 = _64;
_78 = [9223372036854775807_isize; 1];
_50.0 = _10;
_4 = _24.3 << _45.1;
_12 = _87.0;
_54.3 = [146358693321059209604952706787769800909_u128; 4];
_41 = (6_usize, (-69_i8), 26984_u16);
_89 = _51;
_24.3 = !_4;
_10.0 = -_77.0;
_61 = _60 as isize;
_64.1 = [144015547629332695126181756630554970953_u128; 4];
_51 = _89;
_71.3 = (*_36);
(*_36) = _24.3 - _59.3;
_3 = core::ptr::addr_of!((*_52).0);
_81 = [true; 5];
_80 = 22958741107643524186685852355633687370_u128 as f64;
_25 = core::ptr::addr_of!(_42);
_86 = '\u{b9b5a}';
(*_89) = core::ptr::addr_of!(_70);
_55.1 = [192294977924586708548888144339060722756_u128; 4];
_13 = (*_25);
match _41.1 {
0 => bb7,
1 => bb4,
2 => bb41,
3 => bb65,
340282366920938463463374607431768211387 => bb67,
_ => bb66
}
}
bb65 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb66 = {
Return()
}
bb67 = {
_59.2 = _7;
_34.0 = _87.0 & _12;
_52 = core::ptr::addr_of_mut!((*_52));
_92.1 = _45.1 as i8;
_41 = (7_usize, 102_i8, 30926_u16);
_85 = [3522910022_u32; 6];
_74 = _39 != _16;
_55.0 = _50.0;
_39 = _28 - _16;
_55.0.0 = _43;
(*_52).0 = _6;
_13 = (*_3);
(*_25) = _24.2;
_55.3 = [289310484358952914740761864078986003435_u128; 4];
_75.0 = _66;
_18 = _52;
_39 = -_28;
match _41.2 {
0 => bb18,
30926 => bb69,
_ => bb68
}
}
bb68 = {
_12 = 41823_u16 << _4;
_5 = _22;
_14 = [7559874573758242786_i64; 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000404143375738345_f64) / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019422459592758816_f64;
_19 = _28 as u64;
_14 = [(-2853596811033132270_i64); 7];
_5.0 = [-0_f32; 5];
_10 = ((-119_i8),);
_2 = [1527976425893712507_i64; 7];
_4 = _12 as u32;
Call(_19, bb21, fn8(_15, _3, _24.0))
}
bb69 = {
_9 = '\u{10ae00}';
_46 = _45.1;
_87.0 = _12 ^ _12;
(*_52).1 = [430706344803129283_usize; 8];
_66 = _24.2;
_19 = _30 - _46;
_92 = _41;
_24.1 = _59.1;
_43 = _38 ^ _38;
_80 = _21;
_55.2 = _44 + _44;
(*_57) = !_24.3;
Goto(bb70)
}
bb70 = {
_88 = _11 | _53;
_28 = -_39;
(*_57) = _74 as u32;
_64.0.0 = _24.3 as i8;
_65 = [279849046959484314433767428572328522155_u128; 4];
_64.4 = [(-0.0000000000000000000000000000000000000009863263448904517_f32); 5];
_33 = [1176847928_u32; 1];
_45 = _22;
_45.0 = [0.000000000000000000000000000000000000011153204928164834_f32; 5];
_2 = (*_3);
_77.0 = _54.0.0;
(*_51) = (*_32);
_93 = core::ptr::addr_of_mut!((*_52));
(*_93).1 = [7523541719975189276_usize; 8];
_100 = core::ptr::addr_of!((*_76));
_41.1 = _12 as i8;
_55.3 = [234238344415308460198668990700960131839_u128; 4];
_6 = _42;
_71 = _24;
_91 = _5.1 | _46;
(*_57) = _71.3 | _24.3;
_83 = _61 * _40;
Goto(bb71)
}
bb71 = {
_16 = -_28;
_21 = _80 / 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002676268534634144_f64;
_100 = core::ptr::addr_of!((*_76));
_48.0 = core::ptr::addr_of_mut!(_4);
(*_89) = core::ptr::addr_of!(_70);
_21 = _80;
(*_76) = _80 - _80;
(*_76) = -_80;
_102 = core::ptr::addr_of_mut!(_75);
_77 = _64.0;
match _41.0 {
7 => bb72,
_ => bb14
}
}
bb72 = {
_59 = _24;
_78 = [(-9223372036854775808_isize); 1];
(*_52).1 = [1925589536639980969_usize; 8];
(*_52).1 = [3_usize; 8];
(*_93).0 = _59.2;
_29 = _61;
_34.0 = _87.0 % 44097_u16;
_54.3 = [88878705636437393675806863250249388934_u128; 4];
_28 = _16 + _16;
_53 = !_40;
_59.2 = _15;
(*_52).0 = _66;
_41.2 = _58 as u16;
_56 = 70_u8 + 97_u8;
Goto(bb73)
}
bb73 = {
_99 = core::ptr::addr_of!((*_3));
_40 = -_29;
match _92.2 {
0 => bb37,
1 => bb57,
2 => bb26,
3 => bb53,
4 => bb41,
30926 => bb75,
_ => bb74
}
}
bb74 = {
Return()
}
bb75 = {
_28 = _16;
_50.4 = [(-0.0000000000000000000000000000000000000028303594538248374_f32); 5];
_77.0 = _41.1;
(*_18).1 = [12417691635924471114_usize; 8];
_110 = _56 * _56;
match _92.1 {
0 => bb12,
1 => bb70,
2 => bb34,
3 => bb60,
4 => bb61,
5 => bb48,
6 => bb7,
102 => bb77,
_ => bb76
}
}
bb76 = {
_22 = _5;
_12 = 41836_u16;
_1 = [0_f32; 5];
_28 = _5.1 as f32;
_24.2 = [(-3019439387622980566_i64); 7];
_11 = (-1077061955_i32) as isize;
_19 = '\u{11e21}' as u64;
_3 = core::ptr::addr_of!((*_3));
_28 = _24.0 as f32;
(*_3) = [269445384567005318_i64; 7];
_4 = '\u{aa0d2}' as u32;
_22.1 = !_5.1;
_23 = [6_usize; 8];
_10 = (97_i8,);
_29 = _11;
_27 = _5.1 < _22.1;
Goto(bb20)
}
bb77 = {
_46 = _45.1 - _58;
_41 = _92;
(*_32) = core::ptr::addr_of!(_70);
_52 = core::ptr::addr_of_mut!((*_102));
_54.0 = _77;
_24.2 = _66;
_24.2 = (*_25);
_35.0 = core::ptr::addr_of_mut!(_59.3);
_15 = (*_99);
_71 = _24;
(*_89) = core::ptr::addr_of!(_70);
_38 = _64.0.0;
match _41.1 {
0 => bb27,
1 => bb78,
2 => bb79,
3 => bb80,
4 => bb81,
102 => bb83,
_ => bb82
}
}
bb78 = {
Return()
}
bb79 = {
_43 = _64.0.0 * _54.0.0;
_34 = (18448_u16,);
_65 = [236666914343545518084430692772943787506_u128; 4];
_41.1 = _43 & _50.0.0;
_56 = 188_u8;
_55.0.0 = -_64.0.0;
_49 = _67;
_71.2 = (*_25);
_60 = _41.0 << _45.1;
_70 = !104391062740826689535158927987845594458_i128;
_34.0 = _41.2;
_55.1 = [68110714011330518038469332376680822859_u128; 4];
_3 = _25;
(*_32) = core::ptr::addr_of!(_70);
_48.0 = core::ptr::addr_of_mut!((*_36));
_50.3 = [327507366991214633492066999772919406065_u128; 4];
_41 = (3302326423688893237_usize, 52_i8, 19518_u16);
_33 = [1386462522_u32; 1];
match _41.1 {
0 => bb21,
1 => bb10,
2 => bb54,
52 => bb56,
_ => bb51
}
}
bb80 = {
_22.0 = [-0_f32; 5];
_75.1 = [3_usize; 8];
_54 = _55;
_52 = core::ptr::addr_of_mut!(_75);
_36 = _35.0;
_66 = _42;
(*_3) = _71.2;
_6 = _15;
_55.0.0 = -_43;
(*_57) = _24.3;
_76 = core::ptr::addr_of!(_21);
_77.0 = -_10.0;
_64.4 = [f32::NAN; 5];
_64 = _55;
_5.0 = [0.000000000000000000000000000000000000004881255044659781_f32; 5];
Goto(bb64)
}
bb81 = {
(*_32) = (*_51);
_87.0 = _12 - _41.2;
_55 = _64;
_78 = [9223372036854775807_isize; 1];
_50.0 = _10;
_4 = _24.3 << _45.1;
_12 = _87.0;
_54.3 = [146358693321059209604952706787769800909_u128; 4];
_41 = (6_usize, (-69_i8), 26984_u16);
_89 = _51;
_24.3 = !_4;
_10.0 = -_77.0;
_61 = _60 as isize;
_64.1 = [144015547629332695126181756630554970953_u128; 4];
_51 = _89;
_71.3 = (*_36);
(*_36) = _24.3 - _59.3;
_3 = core::ptr::addr_of!((*_52).0);
_81 = [true; 5];
_80 = 22958741107643524186685852355633687370_u128 as f64;
_25 = core::ptr::addr_of!(_42);
_86 = '\u{b9b5a}';
(*_89) = core::ptr::addr_of!(_70);
_55.1 = [192294977924586708548888144339060722756_u128; 4];
_13 = (*_25);
match _41.1 {
0 => bb7,
1 => bb4,
2 => bb41,
3 => bb65,
340282366920938463463374607431768211387 => bb67,
_ => bb66
}
}
bb82 = {
Return()
}
bb83 = {
_27 = _74 | _74;
_113 = _12 as i16;
_22 = _45;
_102 = core::ptr::addr_of_mut!((*_102));
_26 = -_16;
(*_18).0 = _6;
_103 = [false; 5];
_58 = !_19;
Call(_98, bb84, core::intrinsics::arith_offset(_99, 87_isize))
}
bb84 = {
_24.3 = !_4;
_90 = _74 | _74;
_109 = 379838423_i32 as u64;
_71.0 = !_49;
_96 = !_90;
_30 = (*_36) as u64;
_95 = _87.0;
_24.1 = core::ptr::addr_of!(_70);
_88 = !_29;
_79 = core::ptr::addr_of_mut!(_75);
_116 = core::ptr::addr_of!(_111);
_7 = _6;
_12 = _16 as u16;
_49 = !_67;
_59.3 = !(*_57);
_3 = _25;
_43 = _54.0.0 & _77.0;
_50.0 = _64.0;
_27 = _83 < _88;
_45.0 = [(-0.0000000000000000000000000000000000000010326883045826383_f32); 5];
_33 = [4053316348_u32; 1];
_114.1 = [241934682594740666457980549226020150880_u128; 4];
_118 = [false; 5];
match _92.1 {
0 => bb82,
1 => bb40,
2 => bb31,
3 => bb53,
4 => bb18,
5 => bb79,
6 => bb57,
102 => bb85,
_ => bb8
}
}
bb85 = {
_59.2 = _15;
_2 = (*_102).0;
_122 = _113 | _50.2;
_54.4 = [(-0.000000000000000000000000000000000000009734656479744178_f32); 5];
Goto(bb86)
}
bb86 = {
_97 = '\u{2523a}' as i64;
_29 = _83 ^ _61;
_100 = _76;
(*_51) = core::ptr::addr_of!(_70);
Goto(bb87)
}
bb87 = {
_106 = !_71.3;
_59.0 = _71.0 ^ _24.0;
(*_36) = _122 as u32;
_59.2 = _71.2;
_122 = _44;
_64 = _50;
_13 = (*_52).0;
_120.0 = _35.0;
_118 = [true; 5];
_121.0 = _92.1 ^ _77.0;
_64.0.0 = _113 as i8;
_50 = _64;
_101 = core::ptr::addr_of_mut!(_64.0);
_59.2 = _24.2;
_106 = !_59.3;
Goto(bb88)
}
bb88 = {
_93 = core::ptr::addr_of_mut!((*_102));
_125.1 = [2490460954732458435_usize; 8];
_92.2 = !_34.0;
_31 = _52;
_90 = _27;
(*_31).0 = (*_3);
_31 = core::ptr::addr_of_mut!((*_102));
_72 = [(-119_isize); 1];
_5 = _22;
(*_79).0 = _14;
_3 = core::ptr::addr_of!((*_18).0);
_71.2 = _42;
_50.1 = [863015861928326395775360622148482894_u128; 4];
_114.2 = !_113;
_5.0 = [f32::NAN; 5];
_57 = core::ptr::addr_of_mut!((*_57));
_55.0 = _77;
_30 = _83 as u64;
_48.0 = core::ptr::addr_of_mut!((*_57));
_107 = core::ptr::addr_of!(_124);
Goto(bb89)
}
bb89 = {
_114.4 = [-0_f32; 5];
_72 = [9223372036854775807_isize; 1];
_55.3 = [214662726941461722625022467104399411402_u128; 4];
_72 = [(-9223372036854775808_isize); 1];
_123 = core::ptr::addr_of_mut!((*_93));
_9 = '\u{9829a}';
_55.0.0 = -_77.0;
_72 = [(-9223372036854775808_isize); 1];
_108 = (*_76) as u64;
_128 = core::ptr::addr_of!(_124);
(*_128) = (-63888772_i32);
_11 = _106 as isize;
_59.1 = core::ptr::addr_of!(_70);
_71.1 = core::ptr::addr_of!(_70);
_111 = core::ptr::addr_of!(_9);
_103 = [true; 5];
Call(_131.0, bb90, fn19(_81, (*_52).1, _35.0, _61, (*_93).0, (*_116), _54, _101, _52, _103, _75.0, _55.0, _36))
}
bb90 = {
_71.2 = _7;
_114.1 = [17454065134695333571495625591182950453_u128; 4];
_82 = core::ptr::addr_of!((*_128));
(*_18).1 = [7_usize; 8];
_92.2 = _34.0 / 61299_u16;
_54.0 = _121;
(*_3) = _14;
_77 = _121;
_99 = core::ptr::addr_of!((*_25));
_68 = [16828702154030421412_usize; 8];
(*_52).1 = [13676723416683659965_usize; 8];
(*_18).0 = (*_25);
_35.0 = _120.0;
_92 = _41;
_126 = _11 >> (*_57);
(*_31).0 = (*_25);
_121 = (*_101);
_31 = core::ptr::addr_of_mut!((*_31));
(*_89) = core::ptr::addr_of!(_70);
_55.0 = _77;
_107 = core::ptr::addr_of!((*_107));
_50.0.0 = _121.0;
_83 = '\u{a4710}' as isize;
_50.4 = [f32::NEG_INFINITY; 5];
(*_79).0 = _2;
Goto(bb91)
}
bb91 = {
_55.4 = [0.000000000000000000000000000000000000010885674630549797_f32; 5];
(*_76) = -_80;
(*_3) = _13;
_71.2 = (*_79).0;
(*_82) = (*_100) as i32;
_131 = (*_102);
_123 = _18;
_35 = _48;
_31 = core::ptr::addr_of_mut!(_131);
(*_89) = core::ptr::addr_of!(_70);
(*_31).0 = (*_79).0;
_104 = !_59.0;
_61 = (*_101).0 as isize;
_100 = core::ptr::addr_of!((*_100));
(*_101) = _77;
Goto(bb92)
}
bb92 = {
(*_123) = (*_31);
_116 = core::ptr::addr_of!((*_116));
_125 = (*_102);
_64 = _55;
_17 = core::ptr::addr_of!((*_107));
_57 = _35.0;
_32 = core::ptr::addr_of!((*_51));
(*_102).1 = [13640772354258794046_usize; 8];
(*_79).0 = _66;
_138 = -_21;
_2 = (*_3);
(*_32) = _59.1;
_116 = core::ptr::addr_of!(_111);
_87.0 = _95 | _95;
_114.0.0 = _10.0;
_114.3 = [177021403865162666874718025448935995550_u128; 4];
(*_18).0 = _7;
_71.2 = (*_25);
(*_25) = (*_3);
Goto(bb93)
}
bb93 = {
_85 = [1034229144_u32; 6];
(*_18).1 = [4_usize; 8];
(*_52).1 = [16218195725134977545_usize; 8];
_64.1 = [156999878410102224472420660695922903967_u128; 4];
_140 = _64.0;
_82 = core::ptr::addr_of!((*_17));
_120.0 = core::ptr::addr_of_mut!(_71.3);
_107 = _128;
_53 = _39 as isize;
_70 = (-100911579650649648060714374817379466949_i128) * 60213548129851396911035681022385319861_i128;
_35 = _48;
_146 = [136410429697333523137290735015438952650_u128; 4];
_8 = (*_3);
(*_93) = (*_31);
_54.2 = -_114.2;
_21 = _80;
_134.4 = [f32::NAN; 5];
_56 = _110;
_66 = (*_31).0;
_134.0 = _55.0;
_22.1 = !_30;
(*_18).1 = [2997159647381885136_usize; 8];
_132 = _82;
_134.0 = _140;
(*_123).1 = [14823906889606133841_usize; 8];
_134.2 = '\u{d362e}' as i16;
Goto(bb94)
}
bb94 = {
_67 = _24.0 | _71.0;
(*_123).1 = [4051520862136240663_usize; 8];
_129 = [11197904820091059549_usize; 8];
_133 = core::ptr::addr_of_mut!((*_31));
_147 = _138;
_134.3 = [266782501119591831090070093861003886339_u128; 4];
_64.1 = [95862623035577688812659290048763105421_u128; 4];
_23 = [4513126735675955028_usize; 8];
_22.1 = _91;
_73 = core::ptr::addr_of!((*_107));
_53 = !_126;
(*_52) = (*_133);
_97 = _110 as i64;
(*_101) = _134.0;
_45.0 = [-0_f32; 5];
(*_102).0 = _2;
_71.0 = !_49;
(*_52).1 = [0_usize; 8];
match _41.2 {
0 => bb95,
1 => bb96,
2 => bb97,
3 => bb98,
4 => bb99,
30926 => bb101,
_ => bb100
}
}
bb95 = {
_99 = core::ptr::addr_of!((*_3));
_40 = -_29;
match _92.2 {
0 => bb37,
1 => bb57,
2 => bb26,
3 => bb53,
4 => bb41,
30926 => bb75,
_ => bb74
}
}
bb96 = {
_59.2 = _15;
_2 = (*_102).0;
_122 = _113 | _50.2;
_54.4 = [(-0.000000000000000000000000000000000000009734656479744178_f32); 5];
Goto(bb86)
}
bb97 = {
Return()
}
bb98 = {
_106 = !_71.3;
_59.0 = _71.0 ^ _24.0;
(*_36) = _122 as u32;
_59.2 = _71.2;
_122 = _44;
_64 = _50;
_13 = (*_52).0;
_120.0 = _35.0;
_118 = [true; 5];
_121.0 = _92.1 ^ _77.0;
_64.0.0 = _113 as i8;
_50 = _64;
_101 = core::ptr::addr_of_mut!(_64.0);
_59.2 = _24.2;
_106 = !_59.3;
Goto(bb88)
}
bb99 = {
Return()
}
bb100 = {
Return()
}
bb101 = {
_118 = [false; 5];
_148.1 = [7_usize; 8];
_146 = [304139860592037291732789395724238994025_u128; 4];
(*_93) = (*_31);
(*_133).1 = [8720552338621258427_usize; 8];
_110 = _29 as u8;
_77.0 = _70 as i8;
_41.2 = _58 as u16;
match _92.0 {
7 => bb102,
_ => bb27
}
}
bb102 = {
_54.0 = _140;
_136.2 = _41.2;
_114.1 = [290932021231308701549257389372086346829_u128; 4];
_55.1 = [275363912508419361841282548798304903902_u128; 4];
_134.0 = _50.0;
(*_133).0 = (*_79).0;
(*_18).0 = _42;
_131.1 = [5560183756189405407_usize; 8];
_81 = [false; 5];
_71.3 = !(*_57);
_81 = [true; 5];
(*_101).0 = -_92.1;
_50.1 = [249085203248872761804632779375988573560_u128; 4];
_83 = _61;
_55.1 = [49029719269337573089972499773878681328_u128; 4];
(*_102).1 = [12536390088164129398_usize; 8];
(*_133).1 = [3_usize; 8];
_10.0 = !_92.1;
_132 = _17;
Goto(bb103)
}
bb103 = {
_88 = _90 as isize;
_64 = _55;
_134.0.0 = -_10.0;
_102 = core::ptr::addr_of_mut!((*_133));
_158 = core::ptr::addr_of!(_109);
_127 = !_4;
_148.1 = [6_usize; 8];
_125.1 = [0_usize; 8];
_111 = core::ptr::addr_of!(_86);
match _41.0 {
0 => bb77,
1 => bb19,
2 => bb50,
3 => bb18,
4 => bb30,
5 => bb93,
7 => bb104,
_ => bb94
}
}
bb104 = {
(*_99) = _75.0;
(*_17) = 307563431113565318815775027465382821278_u128 as i32;
_144 = _82;
(*_93).1 = [0_usize; 8];
(*_123).0 = (*_133).0;
match _41.0 {
0 => bb9,
1 => bb64,
7 => bb106,
_ => bb105
}
}
bb105 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb106 = {
_152 = _24;
(*_79) = _125;
(*_123) = (*_133);
_155 = _90 as u8;
_120.0 = core::ptr::addr_of_mut!(_4);
(*_3) = _66;
_154.2 = (*_133).0;
_54.2 = _122;
(*_73) = _71.0 as i32;
match _92.1 {
0 => bb21,
1 => bb77,
102 => bb108,
_ => bb107
}
}
bb107 = {
_88 = _11 | _53;
_28 = -_39;
(*_57) = _74 as u32;
_64.0.0 = _24.3 as i8;
_65 = [279849046959484314433767428572328522155_u128; 4];
_64.4 = [(-0.0000000000000000000000000000000000000009863263448904517_f32); 5];
_33 = [1176847928_u32; 1];
_45 = _22;
_45.0 = [0.000000000000000000000000000000000000011153204928164834_f32; 5];
_2 = (*_3);
_77.0 = _54.0.0;
(*_51) = (*_32);
_93 = core::ptr::addr_of_mut!((*_52));
(*_93).1 = [7523541719975189276_usize; 8];
_100 = core::ptr::addr_of!((*_76));
_41.1 = _12 as i8;
_55.3 = [234238344415308460198668990700960131839_u128; 4];
_6 = _42;
_71 = _24;
_91 = _5.1 | _46;
(*_57) = _71.3 | _24.3;
_83 = _61 * _40;
Goto(bb71)
}
bb108 = {
_92.2 = _87.0 ^ _87.0;
_149 = _114.2 as usize;
Goto(bb109)
}
bb109 = {
_27 = !_96;
Goto(bb110)
}
bb110 = {
_152.0 = _104 + _59.0;
_10 = _54.0;
_134.3 = [74459133379015038350763463237232768010_u128; 4];
_167.1 = [773849041326740594_usize; 8];
_41 = _92;
_161.2 = _114.2 & _113;
_134 = _55;
_114.3 = [313892289228332422914260466808929814046_u128; 4];
_64.0.0 = _43 | _55.0.0;
(*_111) = '\u{4ad55}';
_114.4 = [f32::NEG_INFINITY; 5];
_132 = core::ptr::addr_of!((*_107));
_77 = _140;
_139 = _21;
_19 = _113 as u64;
_83 = _91 as isize;
_137 = _5.1 as i64;
_28 = _26 + _39;
Goto(bb111)
}
bb111 = {
_161.1 = [121005300315411628600781302373554916680_u128; 4];
Call(_55.0.0, bb112, core::intrinsics::bswap((*_101).0))
}
bb112 = {
_60 = _149 ^ _92.0;
_164 = -(*_76);
_144 = core::ptr::addr_of!((*_128));
(*_52) = (*_133);
_166 = _114.2 as isize;
_22 = _5;
_75.0 = (*_102).0;
_154.3 = _106;
_167 = (*_123);
(*_123) = _167;
_83 = _70 as isize;
_54 = _64;
_174 = _82;
(*_17) = (-692573545_i32) ^ 77359744_i32;
Goto(bb113)
}
bb113 = {
_86 = '\u{4dd95}';
_58 = _87.0 as u64;
_99 = _25;
(*_18).1 = [4_usize; 8];
_139 = (*_100);
_7 = _75.0;
_115 = core::ptr::addr_of_mut!((*_102));
_93 = core::ptr::addr_of_mut!((*_52));
match _92.0 {
0 => bb13,
1 => bb55,
2 => bb90,
7 => bb115,
_ => bb114
}
}
bb114 = {
_41.0 = !14378503734498362188_usize;
_7 = (*_3);
_22.0 = [f32::NEG_INFINITY; 5];
_38 = -_41.1;
(*_3) = _14;
_44 = -(-5164_i16);
_21 = _41.0 as f64;
_32 = core::ptr::addr_of!((*_32));
_5 = _22;
_3 = _25;
_35.0 = _36;
(*_36) = _27 as u32;
_19 = !_5.1;
_30 = _5.1 * _5.1;
_7 = _24.2;
_45 = _5;
_30 = _45.1 * _19;
_48.0 = core::ptr::addr_of_mut!(_4);
_4 = _24.3 * _24.3;
_5.1 = !_30;
match _41.2 {
0 => bb8,
1 => bb13,
2 => bb7,
3 => bb4,
4 => bb26,
5 => bb27,
61362 => bb29,
_ => bb28
}
}
bb115 = {
_59.2 = _2;
_136.1 = _77.0;
_173.0 = !_104;
_152.2 = (*_52).0;
(*_111) = '\u{bd6ea}';
_102 = core::ptr::addr_of_mut!((*_52));
(*_52) = (*_31);
_163.3 = !_24.3;
match _92.1 {
0 => bb32,
1 => bb22,
2 => bb95,
3 => bb74,
4 => bb17,
5 => bb26,
102 => bb117,
_ => bb116
}
}
bb116 = {
Return()
}
bb117 = {
_48.0 = core::ptr::addr_of_mut!((*_57));
_5.1 = _22.1;
_151 = (*_51);
_47 = core::ptr::addr_of!(_158);
_167.0 = _71.2;
(*_79).0 = _66;
(*_47) = core::ptr::addr_of!(_45.1);
_4 = _71.3;
match _92.1 {
0 => bb31,
1 => bb39,
2 => bb118,
102 => bb120,
_ => bb119
}
}
bb118 = {
_22 = _5;
_25 = core::ptr::addr_of!(_2);
_6 = _7;
_15 = _7;
_6 = (*_3);
_29 = _11 - _11;
_24.2 = (*_3);
_12 = !_34.0;
_4 = _21 as u32;
_36 = core::ptr::addr_of_mut!(_4);
_5 = _22;
(*_3) = _6;
_14 = (*_3);
_1 = [f32::NAN; 5];
(*_25) = _15;
(*_25) = _14;
_23 = [3_usize; 8];
_1 = [0.000000000000000000000000000000000000006486596578374935_f32; 5];
_40 = -_11;
_41.0 = 3064763741932147151_usize;
_16 = _24.0 as f32;
Call(_22.1, bb23, fn14(_15, _41.0, _10.0, _9, _40, _24.2, _24.3, _13, _22.0))
}
bb119 = {
_5.1 = !9419451151072727342_u64;
_8 = [(-5681030968223690548_i64); 7];
_4 = !2622122042_u32;
_14 = [(-761454505067130582_i64); 7];
_4 = 4074737528_u32 % 1094547644_u32;
_10.0 = 16_i8;
_10.0 = (-117_i8) | 22_i8;
_3 = core::ptr::addr_of!((*_3));
_1 = [(-0.000000000000000000000000000000000000009021175557543947_f32); 5];
_19 = _5.1 / 7931956073645990859_u64;
(*_3) = [(-969953921539253857_i64); 7];
(*_3) = [(-7546091699988019564_i64); 7];
_11 = _16 as isize;
_13 = [(-5805328994400605460_i64); 7];
_3 = core::ptr::addr_of!(_15);
_13 = [(-3772085149186069608_i64); 7];
Goto(bb3)
}
bb120 = {
(*_52) = _167;
(*_99) = _8;
(*_101) = _140;
(*_25) = _152.2;
_168 = core::ptr::addr_of!((*_132));
(*_133).0 = _6;
(*_51) = _151;
_165 = _54;
_131.0 = (*_52).0;
_120 = _48;
_46 = _19 * _19;
_41 = _92;
(*_76) = _164 - _80;
_136.0 = _41.0 >> _140.0;
(*_73) = -1268575909_i32;
(*_101) = _54.0;
(*_79) = (*_133);
_105 = core::ptr::addr_of!((*_32));
_71.0 = _137;
(*_47) = core::ptr::addr_of!(_46);
_178.0 = (*_101);
Goto(bb121)
}
bb121 = {
_178.2 = _114.2 ^ _161.2;
_54 = _134;
_163.1 = core::ptr::addr_of!((*_151));
_165.3 = [283411872084619512008627132171635159418_u128; 4];
_37 = _168;
_170 = _178.0;
(*_115) = (*_79);
(*_116) = core::ptr::addr_of!((*_111));
Goto(bb122)
}
bb122 = {
(*_76) = _92.0 as f64;
_50.1 = [51539417577005670097304843964614554540_u128; 4];
_68 = [11575206733270232279_usize; 8];
_125.0 = _75.0;
_185 = !_71.3;
_165 = _55;
_134.1 = [34913129125566296543318728923118317506_u128; 4];
_143 = (*_37) as u64;
_109 = _64.0.0 as u64;
(*_31) = (*_79);
_171.0 = _120.0;
_176 = core::ptr::addr_of!((*_17));
_6 = (*_25);
(*_52).0 = _24.2;
_102 = _79;
_132 = core::ptr::addr_of!((*_17));
_136 = _41;
_47 = core::ptr::addr_of!(_158);
_16 = _39 * _39;
(*_93) = _131;
(*_111) = '\u{299d5}';
_22.0 = [0.0000000000000000000000000000000000000036726785594320206_f32; 5];
_115 = core::ptr::addr_of_mut!(_148);
(*_115).0 = (*_79).0;
_83 = !_126;
_74 = _24.3 == (*_36);
Goto(bb123)
}
bb123 = {
_114.3 = [198129510808619256117860619357005181301_u128; 4];
(*_116) = core::ptr::addr_of!((*_111));
_68 = [1_usize; 8];
_146 = [25305260070549197956636799721338618405_u128; 4];
_122 = -_134.2;
(*_57) = (*_100) as u32;
_149 = _41.0;
_49 = _173.0;
_190.0 = _38 & _178.0.0;
Goto(bb124)
}
bb124 = {
(*_107) = -424223134_i32;
_167 = (*_123);
_95 = _92.2 >> _154.3;
_173 = _152;
_41 = _136;
_161.4 = [(-0.000000000000000000000000000000000000001341685826353975_f32); 5];
_75.1 = [3_usize; 8];
_165.3 = [105155950858638213993608363959805354452_u128; 4];
_39 = _121.0 as f32;
_134.4 = [0.00000000000000000000000000000000000000334295583337332_f32; 5];
(*_115).1[_149] = _136.0;
_13 = (*_25);
_125.1 = (*_115).1;
(*_79) = _148;
_55.0.0 = _134.0.0 | (*_101).0;
(*_123).0 = _167.0;
_134.3 = [191114246224236572196132762893946397992_u128; 4];
_56 = _110 + _155;
_59 = _24;
_50.0 = _170;
(*_25) = (*_93).0;
(*_100) = _152.0 as f64;
_163 = _152;
Goto(bb125)
}
bb125 = {
(*_151) = _178.2 as i128;
_191 = [3038647791_u32; 1];
_59.2 = (*_18).0;
_183 = !_126;
_183 = _29;
_159 = _87;
_148.1 = (*_123).1;
_125.1[_149] = _41.2 as usize;
(*_133).1[_149] = !(*_123).1[_149];
_124 = !(-1240679366_i32);
_125.1[_149] = (*_79).1[_149] - _149;
_149 = (*_115).1[_149];
match (*_93).1[_149] {
0 => bb126,
1 => bb127,
2 => bb128,
3 => bb129,
4 => bb130,
5 => bb131,
7 => bb133,
_ => bb132
}
}
bb126 = {
_93 = core::ptr::addr_of_mut!((*_102));
_125.1 = [2490460954732458435_usize; 8];
_92.2 = !_34.0;
_31 = _52;
_90 = _27;
(*_31).0 = (*_3);
_31 = core::ptr::addr_of_mut!((*_102));
_72 = [(-119_isize); 1];
_5 = _22;
(*_79).0 = _14;
_3 = core::ptr::addr_of!((*_18).0);
_71.2 = _42;
_50.1 = [863015861928326395775360622148482894_u128; 4];
_114.2 = !_113;
_5.0 = [f32::NAN; 5];
_57 = core::ptr::addr_of_mut!((*_57));
_55.0 = _77;
_30 = _83 as u64;
_48.0 = core::ptr::addr_of_mut!((*_57));
_107 = core::ptr::addr_of!(_124);
Goto(bb89)
}
bb127 = {
Return()
}
bb128 = {
(*_76) = _92.0 as f64;
_50.1 = [51539417577005670097304843964614554540_u128; 4];
_68 = [11575206733270232279_usize; 8];
_125.0 = _75.0;
_185 = !_71.3;
_165 = _55;
_134.1 = [34913129125566296543318728923118317506_u128; 4];
_143 = (*_37) as u64;
_109 = _64.0.0 as u64;
(*_31) = (*_79);
_171.0 = _120.0;
_176 = core::ptr::addr_of!((*_17));
_6 = (*_25);
(*_52).0 = _24.2;
_102 = _79;
_132 = core::ptr::addr_of!((*_17));
_136 = _41;
_47 = core::ptr::addr_of!(_158);
_16 = _39 * _39;
(*_93) = _131;
(*_111) = '\u{299d5}';
_22.0 = [0.0000000000000000000000000000000000000036726785594320206_f32; 5];
_115 = core::ptr::addr_of_mut!(_148);
(*_115).0 = (*_79).0;
_83 = !_126;
_74 = _24.3 == (*_36);
Goto(bb123)
}
bb129 = {
_178.2 = _114.2 ^ _161.2;
_54 = _134;
_163.1 = core::ptr::addr_of!((*_151));
_165.3 = [283411872084619512008627132171635159418_u128; 4];
_37 = _168;
_170 = _178.0;
(*_115) = (*_79);
(*_116) = core::ptr::addr_of!((*_111));
Goto(bb122)
}
bb130 = {
Return()
}
bb131 = {
Return()
}
bb132 = {
Return()
}
bb133 = {
_45.1 = _95 as u64;
_136.1 = _178.2 as i8;
match _92.1 {
0 => bb134,
1 => bb135,
2 => bb136,
102 => bb138,
_ => bb137
}
}
bb134 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb135 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb136 = {
_97 = '\u{2523a}' as i64;
_29 = _83 ^ _61;
_100 = _76;
(*_51) = core::ptr::addr_of!(_70);
Goto(bb87)
}
bb137 = {
_59.2 = _15;
_2 = (*_102).0;
_122 = _113 | _50.2;
_54.4 = [(-0.000000000000000000000000000000000000009734656479744178_f32); 5];
Goto(bb86)
}
bb138 = {
_156.0 = (*_133).0;
_73 = _17;
(*_89) = core::ptr::addr_of!((*_151));
_161.0.0 = -_190.0;
_92.0 = _60;
match _75.1[_149] {
0 => bb1,
1 => bb62,
2 => bb93,
3 => bb76,
4 => bb88,
5 => bb48,
7 => bb139,
_ => bb109
}
}
bb139 = {
_102 = core::ptr::addr_of_mut!((*_31));
_152.0 = -_163.0;
_159 = _34;
(*_73) = (-2056963724_i32);
_179.1 = [231949684252373528807911342381500600616_u128; 4];
(*_116) = core::ptr::addr_of!((*_111));
_88 = _29 & _83;
_128 = core::ptr::addr_of!((*_128));
_58 = _45.1;
_6 = _59.2;
_179.2 = _114.2;
(*_17) = _96 as i32;
_57 = _120.0;
_161.0 = _54.0;
Goto(bb140)
}
bb140 = {
_154.1 = core::ptr::addr_of!((*_151));
_54.2 = _21 as i16;
_157 = core::ptr::addr_of!(_158);
(*_18).1[_149] = _170.0 as usize;
_99 = core::ptr::addr_of!(_24.2);
(*_133).1[_149] = _148.1[_149] + (*_52).1[_149];
(*_133).1 = _75.1;
_19 = _88 as u64;
(*_116) = core::ptr::addr_of!(_9);
(*_123).0 = _71.2;
_75 = (*_102);
_3 = core::ptr::addr_of!(_14);
_173.0 = _67;
_173.0 = _110 as i64;
_169 = core::ptr::addr_of!((*_32));
(*_18) = (*_102);
_189 = core::ptr::addr_of!((*_128));
(*_115) = _131;
_7 = (*_52).0;
(*_123).1[_149] = _92.0;
match _41.0 {
0 => bb124,
1 => bb109,
2 => bb129,
3 => bb141,
4 => bb142,
7 => bb144,
_ => bb143
}
}
bb141 = {
_59.2 = _2;
_136.1 = _77.0;
_173.0 = !_104;
_152.2 = (*_52).0;
(*_111) = '\u{bd6ea}';
_102 = core::ptr::addr_of_mut!((*_52));
(*_52) = (*_31);
_163.3 = !_24.3;
match _92.1 {
0 => bb32,
1 => bb22,
2 => bb95,
3 => bb74,
4 => bb17,
5 => bb26,
102 => bb117,
_ => bb116
}
}
bb142 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb143 = {
_27 = !_96;
Goto(bb110)
}
bb144 = {
_35 = _120;
(*_47) = core::ptr::addr_of!(_58);
_23 = (*_102).1;
_198 = -(*_101).0;
(*_132) = (-247537930_i32);
(*_123).0 = (*_102).0;
_30 = (*_158);
_115 = core::ptr::addr_of_mut!((*_102));
_166 = _29;
_107 = core::ptr::addr_of!((*_174));
_179.2 = _50.2 | _55.2;
_187 = core::ptr::addr_of!((*_157));
_103 = [true; 5];
_14 = (*_123).0;
_21 = _80;
_125.1[_149] = (*_102).1[_149];
match (*_82) {
340282366920938463463374607431520673526 => bb146,
_ => bb145
}
}
bb145 = {
Return()
}
bb146 = {
_181 = _136.2;
_49 = (*_158) as i64;
(*_57) = _152.3 + _24.3;
_120 = _171;
_191 = [3599983961_u32; 1];
_41.0 = _136.1 as usize;
_125 = (*_31);
_190 = _64.0;
(*_3) = _42;
_179.3 = [90073898870157848984412570014054035059_u128; 4];
(*_123) = (*_31);
_20 = _107;
(*_187) = core::ptr::addr_of!(_46);
_114.0.0 = !_190.0;
_152 = _163;
_195[_149] = _64.0.0 as usize;
_167.1 = (*_133).1;
_156.1[_149] = !(*_115).1[_149];
_132 = core::ptr::addr_of!((*_174));
_29 = _126;
(*_158) = _109;
(*_100) = _164;
_163.0 = (*_133).1[_149] as i64;
_88 = _45.1 as isize;
_64.0 = _55.0;
_110 = !_56;
(*_101) = _134.0;
(*_133).0 = _125.0;
(*_93).1[_149] = (*_31).1[_149];
Goto(bb147)
}
bb147 = {
(*_36) = (*_20) as u32;
_178.1 = [186592697527271875004259025425176280684_u128; 4];
_202 = [true; 5];
_167.1 = (*_52).1;
(*_133).1 = _75.1;
_1 = [f32::NEG_INFINITY; 5];
_156 = (*_123);
_201.2 = _113 & _161.2;
_134.2 = _178.2 >> _71.3;
match (*_176) {
0 => bb92,
1 => bb108,
2 => bb43,
3 => bb56,
4 => bb135,
340282366920938463463374607431520673526 => bb149,
_ => bb148
}
}
bb148 = {
_10 = (119_i8,);
_16 = f32::NEG_INFINITY - f32::INFINITY;
Call(_10, bb2, fn7(_5.0, (*_3)))
}
bb149 = {
_175 = [2764816311_u32; 6];
_172 = [10132190120087362061550757950337027818_u128; 4];
_179.4 = [f32::NEG_INFINITY; 5];
_76 = _100;
_64.1 = [325153404703469050787992273423607544391_u128; 4];
_205.2 = (*_123).0;
_185 = _173.3 >> _64.0.0;
_45.1 = _30;
_178 = _165;
(*_102) = (*_52);
_195[_149] = _41.0;
(*_133).1 = (*_93).1;
_141 = core::ptr::addr_of_mut!(_64.0);
(*_18).0 = _148.0;
_92 = _41;
(*_76) = _190.0 as f64;
_208 = '\u{68e25}';
_145 = core::ptr::addr_of!((*_89));
(*_158) = _55.0.0 as u64;
(*_99) = (*_3);
_188 = core::ptr::addr_of!(_180);
_195 = _125.1;
(*_25) = (*_115).0;
_49 = !_173.0;
_71.0 = -_163.0;
_211 = core::ptr::addr_of!(_58);
Goto(bb150)
}
bb150 = {
(*_151) = _155 as i128;
(*_47) = core::ptr::addr_of!(_109);
(*_31).0 = _42;
_136 = _41;
_201.1 = [290737603259875783375538504196434651142_u128; 4];
_159 = _87;
_177 = core::ptr::addr_of!((*_188));
(*_18).1 = _23;
_72 = [(-22_isize); 1];
(*_133) = _148;
_179.0.0 = _114.0.0 << _58;
_170.0 = _155 as i8;
_161.2 = _201.2;
_203 = _59.3 >> (*_211);
_205 = _71;
_85 = [1596444420_u32; 6];
match (*_20) {
0 => bb43,
1 => bb9,
2 => bb85,
3 => bb149,
340282366920938463463374607431520673526 => bb152,
_ => bb151
}
}
bb151 = {
_59.2 = _7;
_34.0 = _87.0 & _12;
_52 = core::ptr::addr_of_mut!((*_52));
_92.1 = _45.1 as i8;
_41 = (7_usize, 102_i8, 30926_u16);
_85 = [3522910022_u32; 6];
_74 = _39 != _16;
_55.0 = _50.0;
_39 = _28 - _16;
_55.0.0 = _43;
(*_52).0 = _6;
_13 = (*_3);
(*_25) = _24.2;
_55.3 = [289310484358952914740761864078986003435_u128; 4];
_75.0 = _66;
_18 = _52;
_39 = -_28;
match _41.2 {
0 => bb18,
30926 => bb69,
_ => bb68
}
}
bb152 = {
_46 = (*_211) / 4944435236978824256_u64;
(*_123).0 = (*_25);
_24.1 = core::ptr::addr_of!((*_151));
_114.1 = [141353334868919413898369472033973573137_u128; 4];
_179.3 = [221036721354052396922371368798833745845_u128; 4];
_150 = core::ptr::addr_of!((*_132));
(*_99) = (*_25);
_160 = core::ptr::addr_of!((*_144));
_121.0 = (*_151) as i8;
_138 = (*_76) - _21;
(*_100) = _138;
(*_168) = (*_101).0 as i32;
_55.1 = [248525856730127976942878333193822411507_u128; 4];
_217 = core::ptr::addr_of!((*_144));
(*_93).1[_149] = (*_31).1[_149] / 7_usize;
(*_52).1[_149] = _159.0 as usize;
Goto(bb153)
}
bb153 = {
(*_79).0 = _148.0;
_204 = core::ptr::addr_of!(_9);
Call(_107, bb154, core::intrinsics::arith_offset(_168, 9223372036854775807_isize))
}
bb154 = {
_55.3 = [92348213499475921413506322764559495527_u128; 4];
_152.1 = (*_51);
_223.1 = core::ptr::addr_of!(_70);
_181 = _96 as u16;
_158 = core::ptr::addr_of!(_22.1);
_37 = core::ptr::addr_of!((*_150));
match _92.1 {
0 => bb118,
1 => bb76,
2 => bb155,
3 => bb156,
102 => bb158,
_ => bb157
}
}
bb155 = {
_22 = _5;
_12 = 41836_u16;
_1 = [0_f32; 5];
_28 = _5.1 as f32;
_24.2 = [(-3019439387622980566_i64); 7];
_11 = (-1077061955_i32) as isize;
_19 = '\u{11e21}' as u64;
_3 = core::ptr::addr_of!((*_3));
_28 = _24.0 as f32;
(*_3) = [269445384567005318_i64; 7];
_4 = '\u{aa0d2}' as u32;
_22.1 = !_5.1;
_23 = [6_usize; 8];
_10 = (97_i8,);
_29 = _11;
_27 = _5.1 < _22.1;
Goto(bb20)
}
bb156 = {
_102 = core::ptr::addr_of_mut!((*_31));
_152.0 = -_163.0;
_159 = _34;
(*_73) = (-2056963724_i32);
_179.1 = [231949684252373528807911342381500600616_u128; 4];
(*_116) = core::ptr::addr_of!((*_111));
_88 = _29 & _83;
_128 = core::ptr::addr_of!((*_128));
_58 = _45.1;
_6 = _59.2;
_179.2 = _114.2;
(*_17) = _96 as i32;
_57 = _120.0;
_161.0 = _54.0;
Goto(bb140)
}
bb157 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb158 = {
_199 = core::ptr::addr_of!(_139);
_201.1 = [188711588973343076626253476297659473561_u128; 4];
_8 = (*_102).0;
_7 = _71.2;
_194.1 = (*_93).1;
_206 = [false; 5];
_50.0 = (*_101);
_41 = _136;
_50.0.0 = !_121.0;
_174 = _217;
_114.0.0 = _38 * _55.0.0;
_172 = [214218308437609871649910618945730581328_u128; 4];
_55 = _179;
_54.1 = [296096577846588752921376548058717155734_u128; 4];
_222.1 = _30;
_90 = _96 | _27;
_49 = _205.0;
_231 = _55.0.0 as i32;
(*_99) = (*_133).0;
_223 = _71;
_75.0 = _42;
Goto(bb159)
}
bb159 = {
_222 = _5;
(*_158) = _46 << (*_93).1[_149];
_95 = _92.2 * _41.2;
_223 = _163;
(*_123).0 = (*_31).0;
_64.0 = _178.0;
_47 = core::ptr::addr_of!((*_157));
_76 = core::ptr::addr_of!((*_76));
_165.2 = _201.2 * _134.2;
_125 = (*_52);
(*_115).1[_149] = (*_93).1[_149];
_59.0 = _163.0 & _223.0;
match _92.1 {
0 => bb123,
102 => bb161,
_ => bb160
}
}
bb160 = {
_88 = _11 | _53;
_28 = -_39;
(*_57) = _74 as u32;
_64.0.0 = _24.3 as i8;
_65 = [279849046959484314433767428572328522155_u128; 4];
_64.4 = [(-0.0000000000000000000000000000000000000009863263448904517_f32); 5];
_33 = [1176847928_u32; 1];
_45 = _22;
_45.0 = [0.000000000000000000000000000000000000011153204928164834_f32; 5];
_2 = (*_3);
_77.0 = _54.0.0;
(*_51) = (*_32);
_93 = core::ptr::addr_of_mut!((*_52));
(*_93).1 = [7523541719975189276_usize; 8];
_100 = core::ptr::addr_of!((*_76));
_41.1 = _12 as i8;
_55.3 = [234238344415308460198668990700960131839_u128; 4];
_6 = _42;
_71 = _24;
_91 = _5.1 | _46;
(*_57) = _71.3 | _24.3;
_83 = _61 * _40;
Goto(bb71)
}
bb161 = {
_136.0 = !_23[_149];
_205.0 = _59.0;
_89 = _169;
(*_176) = _231;
_59.2 = (*_79).0;
_154.1 = _151;
_163.3 = _203 << _203;
_171.0 = core::ptr::addr_of_mut!(_203);
(*_102).1 = (*_79).1;
(*_144) = -_231;
_119 = !_114.0.0;
_218.1 = 77421425332335388730761224593404162098_u128 as u64;
(*_52).0 = _7;
_127 = _203;
(*_128) = _231 + _231;
_227.0 = [f32::NAN; 5];
_218.1 = !(*_211);
_227.1 = !(*_158);
(*_168) = _231 * _231;
match _136.1 {
0 => bb18,
1 => bb33,
2 => bb84,
3 => bb39,
102 => bb163,
_ => bb162
}
}
bb162 = {
_9 = '\u{24b68}';
_6 = [(-5684534381579536390_i64); 7];
_7 = [3593226338648666737_i64; 7];
_2 = [(-2157702248894868386_i64); 7];
_4 = 2958721351_u32;
_8 = [(-7865703382251137396_i64); 7];
_3 = core::ptr::addr_of!((*_3));
_10 = ((-90_i8),);
_10 = ((-49_i8),);
_6 = [(-6882274539154621050_i64); 7];
_12 = 57645_u16 % 20609_u16;
_10.0 = false as i8;
_13 = [(-3883891981900504334_i64); 7];
_21 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000918131647607294_f64) - f64::INFINITY;
match _4 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
2958721351 => bb12,
_ => bb11
}
}
bb163 = {
_154 = _24;
(*_158) = (*_52).1[_149] as u64;
(*_32) = _205.1;
_57 = _171.0;
(*_79).1[_149] = !_136.0;
(*_18).1 = (*_31).1;
_222.1 = _41.2 as u64;
_201.0 = _55.0;
_182 = _45.1 < _218.1;
_179.2 = _134.2 ^ _165.2;
_45.1 = _182 as u64;
(*_25) = (*_133).0;
_131.0 = _71.2;
_237 = _87;
_220.1 = !_201.0.0;
Goto(bb164)
}
bb164 = {
_167.0 = _59.2;
_194.1 = (*_52).1;
_219 = _179.0.0;
_232 = core::ptr::addr_of!((*_100));
_211 = core::ptr::addr_of!(_46);
(*_123).1[_149] = _148.1[_149];
(*_17) = _231 * _231;
(*_133).1[_149] = _39 as usize;
(*_100) = _138;
Goto(bb165)
}
bb165 = {
(*_20) = _231 - _231;
_161.3 = [123365899745549269347433223963472951838_u128; 4];
_178 = _165;
_220.2 = _41.2 | _95;
_214.0 = _11 as i8;
_63 = core::ptr::addr_of!(_244);
(*_133) = (*_123);
(*_18).1 = (*_31).1;
_154.3 = _173.3;
_62 = _88;
_43 = !_190.0;
(*_102).1[_149] = _95 as usize;
(*_176) = (*_31).1[_149] as i32;
_117 = core::ptr::addr_of!((*_73));
_64 = _165;
_156 = (*_102);
Goto(bb166)
}
bb166 = {
_5.0 = [f32::NAN; 5];
(*_115) = _75;
_245 = _71;
Goto(bb167)
}
bb167 = {
_208 = '\u{debdd}';
_240 = (*_151) << _125.1[_149];
RET = core::ptr::addr_of!((*_177));
(*_89) = core::ptr::addr_of!(_70);
_199 = core::ptr::addr_of!((*_76));
(*_57) = _127 >> (*_174);
_73 = core::ptr::addr_of!((*_176));
_250 = _87;
_54.2 = -_178.2;
_8 = (*_133).0;
_29 = -_88;
_163.3 = _127 & (*_36);
_220 = _136;
_223 = _205;
Goto(bb168)
}
bb168 = {
Call(_254, bb169, dump_var(Move(_170), Move(_146), Move(_85), Move(_95)))
}
bb169 = {
Call(_254, bb170, dump_var(Move(_87), Move(_62), Move(_231), Move(_240)))
}
bb170 = {
Call(_254, bb171, dump_var(Move(_8), Move(_131), Move(_124), Move(_109)))
}
bb171 = {
Call(_254, bb172, dump_var(Move(_237), Move(_10), Move(_103), Move(_33)))
}
bb172 = {
Call(_254, bb173, dump_var(Move(_42), Move(_183), Move(_30), Move(_58)))
}
bb173 = {
Call(_254, bb174, dump_var(Move(_220), Move(_70), Move(_91), Move(_148)))
}
bb174 = {
Call(_254, bb175, dump_var(Move(_66), Move(_118), Move(_96), Move(_15)))
}
bb175 = {
Call(_254, bb176, dump_var(Move(_72), Move(_6), Move(_41), Move(_34)))
}
bb176 = {
Call(_254, bb177, dump_var(Move(_56), Move(_203), Move(_65), Move(_110)))
}
bb177 = {
Call(_254, bb178, dump_var(Move(_97), Move(_172), Move(_195), Move(_77)))
}
bb178 = {
Call(_254, bb179, dump_var(Move(_190), Move(_2), Move(_219), Move(_92)))
}
bb179 = {
Call(_254, bb180, dump_var(Move(_23), Move(_4), Move(_13), Move(_122)))
}
bb180 = {
Call(_254, bb181, dump_var(Move(_181), Move(_121), Move(_74), Move(_125)))
}
bb181 = {
Call(_254, bb182, dump_var(Move(_81), _255, _255, _255))
}
bb182 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: [f32; 5],mut _2: [i64; 7]) -> (i8,) {
mir! {
type RET = (i8,);
let _3: i16;
let _4: i64;
let _5: [isize; 1];
let _6: isize;
let _7: *const i32;
let _8: isize;
let _9: [usize; 8];
let _10: [usize; 8];
let _11: [u32; 1];
let _12: (*mut u32,);
let _13: (usize, i8, u16);
let _14: (usize, i8, u16);
let _15: [usize; 8];
let _16: *const i32;
let _17: *mut (i8,);
let _18: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _19: [u128; 4];
let _20: [i64; 5];
let _21: isize;
let _22: u32;
let _23: u64;
let _24: *const i128;
let _25: *mut (i8,);
let _26: (*mut u32,);
let _27: ();
let _28: ();
{
RET = ((-6_i8),);
RET.0 = (-63_i8) | 95_i8;
RET.0 = true as i8;
RET = (45_i8,);
RET.0 = -99_i8;
_1 = [f32::NAN; 5];
RET.0 = 105_i8;
_3 = 10749_i16 >> RET.0;
_3 = 26544_i16;
RET = (51_i8,);
RET.0 = 121_i8 + (-109_i8);
_2 = [5058511140151774283_i64; 7];
RET.0 = _3 as i8;
_3 = !(-11769_i16);
_4 = 9223372036854775807_isize as i64;
RET.0 = (-6_i8);
_2 = [(-2683799801496424800_i64); 7];
_5 = [121_isize; 1];
_1 = [f32::NEG_INFINITY; 5];
match RET.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
340282366920938463463374607431768211450 => bb9,
_ => bb8
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_6 = -(-9223372036854775808_isize);
RET.0 = 91_i8;
_1 = [0_f32; 5];
_2 = [1436701709537523787_i64; 7];
RET.0 = (-7_i8) << _3;
_1 = [-0_f32; 5];
RET = ((-58_i8),);
RET = ((-21_i8),);
RET = ((-33_i8),);
RET.0 = (-70_i8) + 42_i8;
_2 = [2037785854809532974_i64; 7];
_4 = true as i64;
_2 = [(-4150572760321179201_i64); 7];
Goto(bb10)
}
bb10 = {
RET.0 = (-113_i8);
RET.0 = 93_i8 ^ (-9_i8);
RET = (39_i8,);
_5 = [9223372036854775807_isize; 1];
RET = ((-103_i8),);
RET = ((-120_i8),);
RET.0 = true as i8;
_3 = 177401485329856302170096988121350820018_u128 as i16;
_10 = [4_usize; 8];
RET.0 = (-54_i8);
RET.0 = 3388936224_u32 as i8;
RET.0 = -(-62_i8);
_8 = !_6;
RET.0 = 3335574630434973994_u64 as i8;
_11 = [2174193161_u32; 1];
_14 = (7525746959408789735_usize, (-53_i8), 39446_u16);
_14.2 = 49190_u16 + 61343_u16;
Goto(bb11)
}
bb11 = {
_10 = [9263562355763964271_usize; 8];
_4 = 293682096686333255770566897998240786652_u128 as i64;
_13 = _14;
RET = (3_i8,);
RET.0 = (-0.000000000000000000000000000000000000011504367520727704_f32) as i8;
_15 = [3_usize; 8];
_15 = [8787889202184027923_usize; 8];
_15 = [3_usize; 8];
_11 = [2985144845_u32; 1];
_6 = _8;
RET = (49_i8,);
_14.1 = f64::NAN as i8;
_14.2 = !_13.2;
_10 = [14560973538141331680_usize; 8];
_13.0 = _3 as usize;
_11 = [1863895958_u32; 1];
_18.3 = [68230854339368062415460299617041587483_u128; 4];
match RET.0 {
0 => bb5,
1 => bb2,
2 => bb3,
49 => bb12,
_ => bb7
}
}
bb12 = {
_6 = -_8;
RET = (19_i8,);
_14.0 = _13.0;
_9 = [1_usize; 8];
RET.0 = _14.1;
_21 = '\u{348cf}' as isize;
_10 = [5_usize; 8];
_8 = -_6;
_4 = _14.2 as i64;
_19 = [332599585457971707965682214222204691261_u128; 4];
_20 = [1972200359957271961_i64; 5];
_14.1 = RET.0;
_14.0 = _13.0;
RET = (5_i8,);
_15 = [11508579089096469515_usize; 8];
_14.1 = RET.0 + RET.0;
_18.2 = -_3;
_10 = [5_usize; 8];
_13 = _14;
match RET.0 {
0 => bb1,
1 => bb7,
2 => bb5,
3 => bb4,
4 => bb13,
5 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
_6 = -(-9223372036854775808_isize);
RET.0 = 91_i8;
_1 = [0_f32; 5];
_2 = [1436701709537523787_i64; 7];
RET.0 = (-7_i8) << _3;
_1 = [-0_f32; 5];
RET = ((-58_i8),);
RET = ((-21_i8),);
RET = ((-33_i8),);
RET.0 = (-70_i8) + 42_i8;
_2 = [2037785854809532974_i64; 7];
_4 = true as i64;
_2 = [(-4150572760321179201_i64); 7];
Goto(bb10)
}
bb15 = {
_1 = [(-0.000000000000000000000000000000000000011575934635897701_f32); 5];
_13.1 = _8 as i8;
_10 = [0_usize; 8];
_12.0 = core::ptr::addr_of_mut!(_22);
_3 = 3391544240_u32 as i16;
_13.0 = _14.0;
_13.0 = _14.0 - _14.0;
RET = ((-63_i8),);
_20 = [1817240993372415161_i64; 5];
_3 = _18.2;
_6 = _21 + _8;
_23 = 15486437524074551925_u64;
_18.3 = [144529256156833941892902157279408589713_u128; 4];
_18.0 = RET;
_25 = core::ptr::addr_of_mut!(_18.0);
_13.1 = _14.1;
Goto(bb16)
}
bb16 = {
Call(_27, bb17, dump_var(Move(_4), Move(_9), Move(_5), Move(_14)))
}
bb17 = {
Call(_27, bb18, dump_var(Move(_3), Move(_8), Move(_15), Move(_23)))
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: [i64; 7],mut _2: *const [i64; 7],mut _3: i64) -> u64 {
mir! {
type RET = u64;
let _4: (i64, *const i128, [i64; 7], u32);
let _5: i16;
let _6: *const i32;
let _7: i128;
let _8: *const *const u64;
let _9: *mut ([i64; 7], [usize; 8]);
let _10: [u128; 4];
let _11: *const u64;
let _12: u64;
let _13: (i64, *const i128, [i64; 7], u32);
let _14: [usize; 8];
let _15: i8;
let _16: *const *const u64;
let _17: *const char;
let _18: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _19: u64;
let _20: (usize, i8, u16);
let _21: [f32; 5];
let _22: *const u128;
let _23: *const i32;
let _24: *const i32;
let _25: *const i128;
let _26: usize;
let _27: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _28: u32;
let _29: (i64, *const i128, [i64; 7], u32);
let _30: ([f32; 5], u64);
let _31: (*mut u32,);
let _32: u128;
let _33: u8;
let _34: [i64; 5];
let _35: *const u64;
let _36: *const i128;
let _37: i16;
let _38: [isize; 1];
let _39: isize;
let _40: ();
let _41: ();
{
RET = 3890_u16 as u64;
RET = !11180395363237896312_u64;
_4.0 = _3 | _3;
_4.2 = [2256945922463014131_i64; 7];
_5 = !3814_i16;
_5 = 51305137672406700195159447533169182880_u128 as i16;
_4.2 = [(-4516204139351669609_i64); 7];
Call(_4.2, bb1, fn9(RET, _3, _1, _4.0, _1, (*_2), _2, _3))
}
bb1 = {
_4.0 = 2323507487_u32 as i64;
_5 = 21108_i16 << RET;
_4.3 = 3244028083_u32 | 1989882531_u32;
_1 = [(-1429610535423896553_i64); 7];
_8 = core::ptr::addr_of!(_11);
_8 = core::ptr::addr_of!((*_8));
_7 = -(-44997438994594453465248904172913892087_i128);
_12 = false as u64;
(*_8) = core::ptr::addr_of!(_12);
(*_2) = [4003637851950686767_i64; 7];
_10 = [16907033013430661612529424992536706875_u128; 4];
RET = (*_11);
Goto(bb2)
}
bb2 = {
_1 = [8338945245322944128_i64; 7];
(*_2) = [(-6302505987813722736_i64); 7];
_1 = [4783413009688822905_i64; 7];
(*_11) = RET ^ RET;
(*_2) = [8403161742115637577_i64; 7];
_4.0 = _3;
_10 = [192247310297894011825512103008409952485_u128; 4];
_2 = core::ptr::addr_of!(_4.2);
_4.3 = 3907569045_u32;
(*_11) = !RET;
Goto(bb3)
}
bb3 = {
_11 = core::ptr::addr_of!((*_11));
_13.2 = [(-8770395033186880432_i64); 7];
(*_8) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!(_7);
_4.2 = [(-5909873000940760813_i64); 7];
_10 = [85939909379055338121973608955209899030_u128; 4];
_11 = core::ptr::addr_of!(_12);
_15 = (-76_i8) >> _4.3;
(*_11) = !RET;
(*_2) = [2592648295931943233_i64; 7];
_2 = core::ptr::addr_of!(_13.2);
_13.3 = 21_u8 as u32;
_16 = core::ptr::addr_of!((*_8));
_1 = [4687800952979928834_i64; 7];
RET = !(*_11);
_4.3 = f64::NAN as u32;
RET = 148_u8 as u64;
(*_8) = core::ptr::addr_of!(_12);
Goto(bb4)
}
bb4 = {
_2 = core::ptr::addr_of!(_13.2);
_4.0 = !_3;
_18.3 = [171845701392489646272484411362440027770_u128; 4];
_2 = core::ptr::addr_of!((*_2));
_19 = _12 ^ RET;
(*_2) = [806471551892860780_i64; 7];
(*_11) = RET & RET;
_18.4 = [f32::NEG_INFINITY; 5];
_13.1 = core::ptr::addr_of!(_7);
_20.2 = _7 as u16;
(*_16) = core::ptr::addr_of!(_12);
_2 = core::ptr::addr_of!(_13.2);
(*_11) = _5 as u64;
_20.0 = 13757522344986885809_usize;
RET = (*_11);
_13.2 = [(-526893751610002371_i64); 7];
_4.1 = _13.1;
Goto(bb5)
}
bb5 = {
_13.0 = !_3;
_11 = core::ptr::addr_of!((*_11));
_18.1 = [54819424763039502925444584010079590234_u128; 4];
_4 = _13;
_21 = [-0_f32; 5];
Goto(bb6)
}
bb6 = {
_12 = true as u64;
RET = !(*_11);
_12 = true as u64;
_21 = [-0_f32; 5];
_18.0.0 = -_15;
RET = (*_11);
_15 = !_18.0.0;
_21 = [f32::NAN; 5];
_13.2 = [7899248788751503892_i64; 7];
_13.1 = _4.1;
_20.1 = -_15;
_20.2 = 34658_u16;
_18.3 = [251788078871717132322255688267074915575_u128; 4];
_27.3 = [119002577261244805663617424411780169244_u128; 4];
Call(_27.1, bb7, fn12(_3, _16, _27.3, _13, _13.1, (*_16), _2, _13.3, _20, (*_2), _27.3, _4.1, _2))
}
bb7 = {
_25 = core::ptr::addr_of!(_7);
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6871013505714196896 => bb9,
_ => bb8
}
}
bb8 = {
_11 = core::ptr::addr_of!((*_11));
_13.2 = [(-8770395033186880432_i64); 7];
(*_8) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!(_7);
_4.2 = [(-5909873000940760813_i64); 7];
_10 = [85939909379055338121973608955209899030_u128; 4];
_11 = core::ptr::addr_of!(_12);
_15 = (-76_i8) >> _4.3;
(*_11) = !RET;
(*_2) = [2592648295931943233_i64; 7];
_2 = core::ptr::addr_of!(_13.2);
_13.3 = 21_u8 as u32;
_16 = core::ptr::addr_of!((*_8));
_1 = [4687800952979928834_i64; 7];
RET = !(*_11);
_4.3 = f64::NAN as u32;
RET = 148_u8 as u64;
(*_8) = core::ptr::addr_of!(_12);
Goto(bb4)
}
bb9 = {
RET = _12;
_27.3 = [229441515415776420442623413139984387743_u128; 4];
_2 = core::ptr::addr_of!((*_2));
_12 = true as u64;
_18.0.0 = !_15;
_13.0 = -_3;
_11 = core::ptr::addr_of!(_19);
_29 = _4;
_10 = [131949507028330226008956659727647004954_u128; 4];
_29.1 = core::ptr::addr_of!((*_25));
_10 = [69902219658927327961334511531333595184_u128; 4];
_20.1 = _15;
_29 = _13;
(*_25) = _20.2 as i128;
_28 = !_4.3;
_29.1 = core::ptr::addr_of!(_7);
_27.0.0 = _20.1;
_27.0 = _18.0;
_5 = !(-9364_i16);
_32 = 328692866014601057935383085610641497509_u128;
_14 = [11626718219701607531_usize; 8];
_27.4 = [f32::NAN; 5];
_28 = _13.3;
_22 = core::ptr::addr_of!(_32);
(*_8) = core::ptr::addr_of!((*_11));
_34 = [2737913828890614563_i64; 5];
match _20.2 {
0 => bb4,
34658 => bb11,
_ => bb10
}
}
bb10 = {
_12 = true as u64;
RET = !(*_11);
_12 = true as u64;
_21 = [-0_f32; 5];
_18.0.0 = -_15;
RET = (*_11);
_15 = !_18.0.0;
_21 = [f32::NAN; 5];
_13.2 = [7899248788751503892_i64; 7];
_13.1 = _4.1;
_20.1 = -_15;
_20.2 = 34658_u16;
_18.3 = [251788078871717132322255688267074915575_u128; 4];
_27.3 = [119002577261244805663617424411780169244_u128; 4];
Call(_27.1, bb7, fn12(_3, _16, _27.3, _13, _13.1, (*_16), _2, _13.3, _20, (*_2), _27.3, _4.1, _2))
}
bb11 = {
_8 = _16;
(*_11) = !_12;
(*_16) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!((*_25));
_29.0 = _3;
_27.3 = [22046986452100458600264863732875738839_u128; 4];
_16 = core::ptr::addr_of!((*_8));
_25 = _13.1;
_4.1 = _13.1;
_35 = _11;
match _20.2 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb6,
34658 => bb12,
_ => bb9
}
}
bb12 = {
_36 = core::ptr::addr_of!((*_25));
_28 = !_4.3;
_31.0 = core::ptr::addr_of_mut!(_13.3);
match _20.2 {
0 => bb4,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
34658 => bb18,
_ => bb17
}
}
bb13 = {
_8 = _16;
(*_11) = !_12;
(*_16) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!((*_25));
_29.0 = _3;
_27.3 = [22046986452100458600264863732875738839_u128; 4];
_16 = core::ptr::addr_of!((*_8));
_25 = _13.1;
_4.1 = _13.1;
_35 = _11;
match _20.2 {
0 => bb1,
1 => bb8,
2 => bb3,
3 => bb4,
4 => bb10,
5 => bb6,
34658 => bb12,
_ => bb9
}
}
bb14 = {
_12 = true as u64;
RET = !(*_11);
_12 = true as u64;
_21 = [-0_f32; 5];
_18.0.0 = -_15;
RET = (*_11);
_15 = !_18.0.0;
_21 = [f32::NAN; 5];
_13.2 = [7899248788751503892_i64; 7];
_13.1 = _4.1;
_20.1 = -_15;
_20.2 = 34658_u16;
_18.3 = [251788078871717132322255688267074915575_u128; 4];
_27.3 = [119002577261244805663617424411780169244_u128; 4];
Call(_27.1, bb7, fn12(_3, _16, _27.3, _13, _13.1, (*_16), _2, _13.3, _20, (*_2), _27.3, _4.1, _2))
}
bb15 = {
_11 = core::ptr::addr_of!((*_11));
_13.2 = [(-8770395033186880432_i64); 7];
(*_8) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!(_7);
_4.2 = [(-5909873000940760813_i64); 7];
_10 = [85939909379055338121973608955209899030_u128; 4];
_11 = core::ptr::addr_of!(_12);
_15 = (-76_i8) >> _4.3;
(*_11) = !RET;
(*_2) = [2592648295931943233_i64; 7];
_2 = core::ptr::addr_of!(_13.2);
_13.3 = 21_u8 as u32;
_16 = core::ptr::addr_of!((*_8));
_1 = [4687800952979928834_i64; 7];
RET = !(*_11);
_4.3 = f64::NAN as u32;
RET = 148_u8 as u64;
(*_8) = core::ptr::addr_of!(_12);
Goto(bb4)
}
bb16 = {
_11 = core::ptr::addr_of!((*_11));
_13.2 = [(-8770395033186880432_i64); 7];
(*_8) = core::ptr::addr_of!((*_11));
_13.1 = core::ptr::addr_of!(_7);
_4.2 = [(-5909873000940760813_i64); 7];
_10 = [85939909379055338121973608955209899030_u128; 4];
_11 = core::ptr::addr_of!(_12);
_15 = (-76_i8) >> _4.3;
(*_11) = !RET;
(*_2) = [2592648295931943233_i64; 7];
_2 = core::ptr::addr_of!(_13.2);
_13.3 = 21_u8 as u32;
_16 = core::ptr::addr_of!((*_8));
_1 = [4687800952979928834_i64; 7];
RET = !(*_11);
_4.3 = f64::NAN as u32;
RET = 148_u8 as u64;
(*_8) = core::ptr::addr_of!(_12);
Goto(bb4)
}
bb17 = {
_25 = core::ptr::addr_of!(_7);
match _12 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6871013505714196896 => bb9,
_ => bb8
}
}
bb18 = {
_18.0 = _27.0;
_1 = [8497638147972756876_i64; 7];
_27.0.0 = _20.1 >> (*_35);
_8 = _16;
_29.2 = [7096184252747903724_i64; 7];
_38 = [102_isize; 1];
_5 = 23164_i16;
_18.1 = [12227679547561414693477133607255454023_u128; 4];
_29.1 = core::ptr::addr_of!(_7);
_27.0 = _18.0;
_7 = 158259549374650797114247024628470808111_i128 - 36016760278732539658149637588922601599_i128;
_20 = (1_usize, (-94_i8), 30418_u16);
_27.0.0 = -_20.1;
Goto(bb19)
}
bb19 = {
Call(_40, bb20, dump_var(Move(_38), Move(_10), Move(_14), Move(_7)))
}
bb20 = {
Call(_40, bb21, dump_var(Move(_32), Move(_28), Move(_1), _41))
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: u64,mut _2: i64,mut _3: [i64; 7],mut _4: i64,mut _5: [i64; 7],mut _6: [i64; 7],mut _7: *const [i64; 7],mut _8: i64) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _9: bool;
let _10: u64;
let _11: (i64, *const i128, [i64; 7], u32);
let _12: *const u64;
let _13: u16;
let _14: [f32; 5];
let _15: [u32; 6];
let _16: u8;
let _17: i128;
let _18: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _19: [i64; 7];
let _20: [bool; 5];
let _21: u32;
let _22: ([f32; 5], u64);
let _23: bool;
let _24: u64;
let _25: u128;
let _26: [isize; 1];
let _27: ();
let _28: ();
{
RET = [(-8864986755194398969_i64); 7];
_4 = _8 >> _1;
(*_7) = [2314714553718984816_i64; 7];
Goto(bb1)
}
bb1 = {
(*_7) = [5487102971499615246_i64; 7];
_2 = _4 >> _1;
_5 = [(-8281431882707612341_i64); 7];
_3 = [3809171207011696088_i64; 7];
_1 = 1074783647129827021_u64 * 13740843279490594742_u64;
_9 = _8 > _8;
_7 = core::ptr::addr_of!(_6);
_4 = _8;
RET = [7790833774349442977_i64; 7];
_2 = 0_usize as i64;
_10 = !_1;
Goto(bb2)
}
bb2 = {
RET = [(-255827370562425454_i64); 7];
_5 = [2628962940367962142_i64; 7];
(*_7) = [2136604836018657688_i64; 7];
_11.0 = -_4;
_6 = [8745215834885086359_i64; 7];
_10 = !_1;
_11.3 = !3632893403_u32;
_3 = [(-769273885044780069_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_11.2 = [(-970964354309589387_i64); 7];
(*_7) = [(-7019667292648945198_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_12 = core::ptr::addr_of!(_10);
_13 = 16154_u16 % 41123_u16;
_9 = !true;
_13 = !1636_u16;
_11.0 = _4 >> _13;
_10 = _1;
_10 = !_1;
(*_7) = [2120661779632116406_i64; 7];
Goto(bb3)
}
bb3 = {
_3 = [(-7895701264971986486_i64); 7];
(*_12) = _1;
(*_7) = [5863558362696496002_i64; 7];
(*_7) = [4574961058154251768_i64; 7];
_8 = _11.0 << _1;
_1 = !_10;
_9 = false;
_5 = [7314824896955802155_i64; 7];
Call((*_12), bb4, fn10(_1, _3, _3))
}
bb4 = {
RET = [2665784165146061628_i64; 7];
_13 = !35128_u16;
_16 = 38472873856596911062365136862635203193_i128 as u8;
_1 = 27_i8 as u64;
_11.0 = _2 ^ _8;
_1 = !(*_12);
_15 = [3590302541_u32; 6];
(*_7) = [(-8651603258318032322_i64); 7];
_5 = [(-745991511850650906_i64); 7];
_2 = _13 as i64;
_17 = _13 as i128;
(*_7) = [(-1822053590563879473_i64); 7];
_10 = !_1;
_2 = -_11.0;
_18.0 = (89_i8,);
(*_12) = 9223372036854775807_isize as u64;
_18.2 = 29439_i16;
_12 = core::ptr::addr_of!(_1);
_8 = _2 | _4;
_13 = 57129_u16;
(*_7) = [(-9067468028394995754_i64); 7];
match _13 {
0 => bb2,
1 => bb5,
57129 => bb7,
_ => bb6
}
}
bb5 = {
_3 = [(-7895701264971986486_i64); 7];
(*_12) = _1;
(*_7) = [5863558362696496002_i64; 7];
(*_7) = [4574961058154251768_i64; 7];
_8 = _11.0 << _1;
_1 = !_10;
_9 = false;
_5 = [7314824896955802155_i64; 7];
Call((*_12), bb4, fn10(_1, _3, _3))
}
bb6 = {
(*_7) = [5487102971499615246_i64; 7];
_2 = _4 >> _1;
_5 = [(-8281431882707612341_i64); 7];
_3 = [3809171207011696088_i64; 7];
_1 = 1074783647129827021_u64 * 13740843279490594742_u64;
_9 = _8 > _8;
_7 = core::ptr::addr_of!(_6);
_4 = _8;
RET = [7790833774349442977_i64; 7];
_2 = 0_usize as i64;
_10 = !_1;
Goto(bb2)
}
bb7 = {
_3 = [877101495913134901_i64; 7];
RET = [(-3032000889669976370_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_11.1 = core::ptr::addr_of!(_17);
_18.3 = [284938467865489443586487321950299094808_u128; 4];
(*_12) = _10;
_9 = !true;
_15 = [167202620_u32; 6];
(*_12) = _10 * _10;
_13 = 54008_u16;
_18.1 = [114722065135592647135374384439939225874_u128; 4];
_18.1 = [276189234560276973629985892046587647738_u128; 4];
_6 = [(-7673243738069826815_i64); 7];
(*_12) = _10;
_11.1 = core::ptr::addr_of!(_17);
_11.3 = !3082983745_u32;
Goto(bb8)
}
bb8 = {
_14 = [f32::NAN; 5];
_9 = true;
_22.1 = (*_12);
match _13 {
0 => bb5,
1 => bb2,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
54008 => bb15,
_ => bb14
}
}
bb9 = {
_3 = [877101495913134901_i64; 7];
RET = [(-3032000889669976370_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_11.1 = core::ptr::addr_of!(_17);
_18.3 = [284938467865489443586487321950299094808_u128; 4];
(*_12) = _10;
_9 = !true;
_15 = [167202620_u32; 6];
(*_12) = _10 * _10;
_13 = 54008_u16;
_18.1 = [114722065135592647135374384439939225874_u128; 4];
_18.1 = [276189234560276973629985892046587647738_u128; 4];
_6 = [(-7673243738069826815_i64); 7];
(*_12) = _10;
_11.1 = core::ptr::addr_of!(_17);
_11.3 = !3082983745_u32;
Goto(bb8)
}
bb10 = {
(*_7) = [5487102971499615246_i64; 7];
_2 = _4 >> _1;
_5 = [(-8281431882707612341_i64); 7];
_3 = [3809171207011696088_i64; 7];
_1 = 1074783647129827021_u64 * 13740843279490594742_u64;
_9 = _8 > _8;
_7 = core::ptr::addr_of!(_6);
_4 = _8;
RET = [7790833774349442977_i64; 7];
_2 = 0_usize as i64;
_10 = !_1;
Goto(bb2)
}
bb11 = {
(*_7) = [5487102971499615246_i64; 7];
_2 = _4 >> _1;
_5 = [(-8281431882707612341_i64); 7];
_3 = [3809171207011696088_i64; 7];
_1 = 1074783647129827021_u64 * 13740843279490594742_u64;
_9 = _8 > _8;
_7 = core::ptr::addr_of!(_6);
_4 = _8;
RET = [7790833774349442977_i64; 7];
_2 = 0_usize as i64;
_10 = !_1;
Goto(bb2)
}
bb12 = {
RET = [2665784165146061628_i64; 7];
_13 = !35128_u16;
_16 = 38472873856596911062365136862635203193_i128 as u8;
_1 = 27_i8 as u64;
_11.0 = _2 ^ _8;
_1 = !(*_12);
_15 = [3590302541_u32; 6];
(*_7) = [(-8651603258318032322_i64); 7];
_5 = [(-745991511850650906_i64); 7];
_2 = _13 as i64;
_17 = _13 as i128;
(*_7) = [(-1822053590563879473_i64); 7];
_10 = !_1;
_2 = -_11.0;
_18.0 = (89_i8,);
(*_12) = 9223372036854775807_isize as u64;
_18.2 = 29439_i16;
_12 = core::ptr::addr_of!(_1);
_8 = _2 | _4;
_13 = 57129_u16;
(*_7) = [(-9067468028394995754_i64); 7];
match _13 {
0 => bb2,
1 => bb5,
57129 => bb7,
_ => bb6
}
}
bb13 = {
_3 = [(-7895701264971986486_i64); 7];
(*_12) = _1;
(*_7) = [5863558362696496002_i64; 7];
(*_7) = [4574961058154251768_i64; 7];
_8 = _11.0 << _1;
_1 = !_10;
_9 = false;
_5 = [7314824896955802155_i64; 7];
Call((*_12), bb4, fn10(_1, _3, _3))
}
bb14 = {
RET = [(-255827370562425454_i64); 7];
_5 = [2628962940367962142_i64; 7];
(*_7) = [2136604836018657688_i64; 7];
_11.0 = -_4;
_6 = [8745215834885086359_i64; 7];
_10 = !_1;
_11.3 = !3632893403_u32;
_3 = [(-769273885044780069_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_11.2 = [(-970964354309589387_i64); 7];
(*_7) = [(-7019667292648945198_i64); 7];
_7 = core::ptr::addr_of!((*_7));
_12 = core::ptr::addr_of!(_10);
_13 = 16154_u16 % 41123_u16;
_9 = !true;
_13 = !1636_u16;
_11.0 = _4 >> _13;
_10 = _1;
_10 = !_1;
(*_7) = [2120661779632116406_i64; 7];
Goto(bb3)
}
bb15 = {
_18.3 = [190031029901429372220742012145709454148_u128; 4];
(*_7) = [5552254341752004383_i64; 7];
(*_7) = [(-1483263204264395519_i64); 7];
_20 = [true; 5];
_21 = _8 as u32;
_3 = [2448265628850185843_i64; 7];
_11.2 = [(-4176321871415916235_i64); 7];
_21 = (-1627711949_i32) as u32;
_24 = _22.1;
_18.0 = ((-100_i8),);
_6 = [3567709785760279365_i64; 7];
_14 = [0.0000000000000000000000000000000000000045136888522735245_f32; 5];
(*_7) = [7643947471054698075_i64; 7];
_9 = !false;
_19 = [(-6607689732594476199_i64); 7];
_26 = [9223372036854775807_isize; 1];
Goto(bb16)
}
bb16 = {
Call(_27, bb17, dump_var(Move(_24), Move(_5), Move(_20), Move(_16)))
}
bb17 = {
Call(_27, bb18, dump_var(Move(_6), Move(_10), Move(_26), Move(_8)))
}
bb18 = {
Call(_27, bb19, dump_var(Move(_13), _28, _28, _28))
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: u64,mut _2: [i64; 7],mut _3: [i64; 7]) -> u64 {
mir! {
type RET = u64;
let _4: *const i32;
let _5: *const u128;
let _6: *const f64;
let _7: [u32; 1];
let _8: *const char;
let _9: *const [i64; 7];
let _10: (i8,);
let _11: [u32; 1];
let _12: *const *const u64;
let _13: *const u64;
let _14: *const u128;
let _15: *const i32;
let _16: [u32; 1];
let _17: [u128; 4];
let _18: [u32; 1];
let _19: u8;
let _20: (i8,);
let _21: i64;
let _22: [bool; 5];
let _23: ([f32; 5], u64);
let _24: ();
let _25: ();
{
RET = _1 * _1;
RET = _1;
_2 = [(-2955688869306276807_i64); 7];
RET = _1;
_3 = [(-4500647654355085966_i64); 7];
RET = !_1;
Goto(bb1)
}
bb1 = {
_3 = [285720001570123624_i64; 7];
RET = !_1;
_2 = [(-3990741115174351052_i64); 7];
_1 = (-20202883444203468177760774410661138901_i128) as u64;
RET = _1;
_1 = (-4353988608220315224_i64) as u64;
RET = !_1;
_2 = [(-3252477072171565171_i64); 7];
RET = _1 & _1;
Goto(bb2)
}
bb2 = {
RET = _1;
_1 = RET + RET;
RET = !_1;
RET = _1 | _1;
_2 = [(-1992776978575078296_i64); 7];
RET = !_1;
_7 = [2800017592_u32; 1];
_3 = [1312585397283874996_i64; 7];
_1 = RET;
_3 = [2980355135259037335_i64; 7];
Goto(bb3)
}
bb3 = {
_2 = [(-6622966347204409363_i64); 7];
_3 = [7698700012310434664_i64; 7];
RET = _1 % 8837450131547564833_u64;
_7 = [3701408571_u32; 1];
_7 = [3422843775_u32; 1];
_3 = [2861218428005613216_i64; 7];
_7 = [760409104_u32; 1];
_3 = [6895291659677053927_i64; 7];
RET = !_1;
_3 = [(-8786378814772453724_i64); 7];
_2 = [(-8429676424978904380_i64); 7];
RET = 9223372036854775807_isize as u64;
_1 = RET;
RET = 53298334287657949092926479817481686341_i128 as u64;
RET = _1;
_2 = [(-2237717963455213052_i64); 7];
_9 = core::ptr::addr_of!(_2);
_2 = [3230174384996873424_i64; 7];
RET = _1;
_3 = [2587211859158605608_i64; 7];
_9 = core::ptr::addr_of!(_2);
_2 = [5374922735591810594_i64; 7];
_10 = ((-53_i8),);
_1 = !RET;
Goto(bb4)
}
bb4 = {
(*_9) = [3523667083272774803_i64; 7];
_9 = core::ptr::addr_of!(_3);
_10.0 = !38_i8;
_11 = [4286778388_u32; 1];
_10 = ((-27_i8),);
(*_9) = [9137834281942383243_i64; 7];
_10 = (67_i8,);
_9 = core::ptr::addr_of!(_3);
(*_9) = [6095072716349696072_i64; 7];
_1 = RET << RET;
Call(_12, bb5, fn11((*_9), _10, _2, _11, _7, _3, _3, _7, _1, _3, _10.0, (*_9), _3))
}
bb5 = {
(*_9) = [6561191155731159418_i64; 7];
(*_9) = [1562038555547729020_i64; 7];
RET = (-0.00000000000000000000000000000000000000006490534227059688_f32) as u64;
_11 = [1537638301_u32; 1];
_10 = (115_i8,);
_9 = core::ptr::addr_of!((*_9));
_11 = [359652403_u32; 1];
(*_9) = [5337488799458686539_i64; 7];
match _10.0 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
115 => bb11,
_ => bb10
}
}
bb6 = {
(*_9) = [3523667083272774803_i64; 7];
_9 = core::ptr::addr_of!(_3);
_10.0 = !38_i8;
_11 = [4286778388_u32; 1];
_10 = ((-27_i8),);
(*_9) = [9137834281942383243_i64; 7];
_10 = (67_i8,);
_9 = core::ptr::addr_of!(_3);
(*_9) = [6095072716349696072_i64; 7];
_1 = RET << RET;
Call(_12, bb5, fn11((*_9), _10, _2, _11, _7, _3, _3, _7, _1, _3, _10.0, (*_9), _3))
}
bb7 = {
_2 = [(-6622966347204409363_i64); 7];
_3 = [7698700012310434664_i64; 7];
RET = _1 % 8837450131547564833_u64;
_7 = [3701408571_u32; 1];
_7 = [3422843775_u32; 1];
_3 = [2861218428005613216_i64; 7];
_7 = [760409104_u32; 1];
_3 = [6895291659677053927_i64; 7];
RET = !_1;
_3 = [(-8786378814772453724_i64); 7];
_2 = [(-8429676424978904380_i64); 7];
RET = 9223372036854775807_isize as u64;
_1 = RET;
RET = 53298334287657949092926479817481686341_i128 as u64;
RET = _1;
_2 = [(-2237717963455213052_i64); 7];
_9 = core::ptr::addr_of!(_2);
_2 = [3230174384996873424_i64; 7];
RET = _1;
_3 = [2587211859158605608_i64; 7];
_9 = core::ptr::addr_of!(_2);
_2 = [5374922735591810594_i64; 7];
_10 = ((-53_i8),);
_1 = !RET;
Goto(bb4)
}
bb8 = {
RET = _1;
_1 = RET + RET;
RET = !_1;
RET = _1 | _1;
_2 = [(-1992776978575078296_i64); 7];
RET = !_1;
_7 = [2800017592_u32; 1];
_3 = [1312585397283874996_i64; 7];
_1 = RET;
_3 = [2980355135259037335_i64; 7];
Goto(bb3)
}
bb9 = {
_3 = [285720001570123624_i64; 7];
RET = !_1;
_2 = [(-3990741115174351052_i64); 7];
_1 = (-20202883444203468177760774410661138901_i128) as u64;
RET = _1;
_1 = (-4353988608220315224_i64) as u64;
RET = !_1;
_2 = [(-3252477072171565171_i64); 7];
RET = _1 & _1;
Goto(bb2)
}
bb10 = {
Return()
}
bb11 = {
RET = false as u64;
_11 = [3239566386_u32; 1];
_1 = !RET;
_9 = core::ptr::addr_of!((*_9));
_7 = [2742781632_u32; 1];
RET = _1 ^ _1;
(*_9) = [5992569913062453280_i64; 7];
RET = _1;
_2 = [(-6061165914907659237_i64); 7];
_2 = [2978005253477395702_i64; 7];
_3 = [6082805598810110877_i64; 7];
Goto(bb12)
}
bb12 = {
_2 = [6707810110880549933_i64; 7];
(*_9) = [(-2938720813497391925_i64); 7];
_13 = core::ptr::addr_of!(_1);
_12 = core::ptr::addr_of!(_13);
RET = (*_13) | _1;
_16 = [1432732824_u32; 1];
_11 = [1246650365_u32; 1];
(*_13) = !RET;
(*_13) = !RET;
_11 = [2255626779_u32; 1];
_16 = [564564194_u32; 1];
(*_9) = [9202879491858562023_i64; 7];
_10 = (113_i8,);
_17 = [26680607058781422122120791846549806369_u128; 4];
_11 = [2074306203_u32; 1];
match _10.0 {
0 => bb1,
1 => bb10,
2 => bb13,
3 => bb14,
4 => bb15,
113 => bb17,
_ => bb16
}
}
bb13 = {
(*_9) = [6561191155731159418_i64; 7];
(*_9) = [1562038555547729020_i64; 7];
RET = (-0.00000000000000000000000000000000000000006490534227059688_f32) as u64;
_11 = [1537638301_u32; 1];
_10 = (115_i8,);
_9 = core::ptr::addr_of!((*_9));
_11 = [359652403_u32; 1];
(*_9) = [5337488799458686539_i64; 7];
match _10.0 {
0 => bb6,
1 => bb7,
2 => bb8,
3 => bb9,
115 => bb11,
_ => bb10
}
}
bb14 = {
Return()
}
bb15 = {
_2 = [(-6622966347204409363_i64); 7];
_3 = [7698700012310434664_i64; 7];
RET = _1 % 8837450131547564833_u64;
_7 = [3701408571_u32; 1];
_7 = [3422843775_u32; 1];
_3 = [2861218428005613216_i64; 7];
_7 = [760409104_u32; 1];
_3 = [6895291659677053927_i64; 7];
RET = !_1;
_3 = [(-8786378814772453724_i64); 7];
_2 = [(-8429676424978904380_i64); 7];
RET = 9223372036854775807_isize as u64;
_1 = RET;
RET = 53298334287657949092926479817481686341_i128 as u64;
RET = _1;
_2 = [(-2237717963455213052_i64); 7];
_9 = core::ptr::addr_of!(_2);
_2 = [3230174384996873424_i64; 7];
RET = _1;
_3 = [2587211859158605608_i64; 7];
_9 = core::ptr::addr_of!(_2);
_2 = [5374922735591810594_i64; 7];
_10 = ((-53_i8),);
_1 = !RET;
Goto(bb4)
}
bb16 = {
RET = _1;
_1 = RET + RET;
RET = !_1;
RET = _1 | _1;
_2 = [(-1992776978575078296_i64); 7];
RET = !_1;
_7 = [2800017592_u32; 1];
_3 = [1312585397283874996_i64; 7];
_1 = RET;
_3 = [2980355135259037335_i64; 7];
Goto(bb3)
}
bb17 = {
_11 = [2607983167_u32; 1];
RET = _1;
(*_13) = (-9344559881090778069921522799928516634_i128) as u64;
_10.0 = (-95_i8);
RET = !(*_13);
_20.0 = _10.0;
_7 = [444684415_u32; 1];
_20.0 = _10.0;
_18 = [4095036546_u32; 1];
_11 = [1626540191_u32; 1];
_2 = [(-8582589115487941864_i64); 7];
_3 = [(-1035543749685597471_i64); 7];
_19 = !113_u8;
_9 = core::ptr::addr_of!(_2);
(*_9) = [596903566731804381_i64; 7];
(*_9) = [524432438921625354_i64; 7];
_1 = 9223372036854775807_isize as u64;
_2 = [(-8279454591428151909_i64); 7];
_2 = [781116345624991863_i64; 7];
(*_13) = false as u64;
_11 = [1842194918_u32; 1];
(*_13) = false as u64;
_9 = core::ptr::addr_of!(_3);
RET = !_1;
_20.0 = _10.0 * _10.0;
RET = (*_13);
(*_9) = [5966501598461946035_i64; 7];
_9 = core::ptr::addr_of!((*_9));
Goto(bb18)
}
bb18 = {
Call(_24, bb19, dump_var(Move(_10), Move(_16), Move(_2), Move(_20)))
}
bb19 = {
Call(_24, bb20, dump_var(Move(_7), _25, _25, _25))
}
bb20 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: [i64; 7],mut _2: (i8,),mut _3: [i64; 7],mut _4: [u32; 1],mut _5: [u32; 1],mut _6: [i64; 7],mut _7: [i64; 7],mut _8: [u32; 1],mut _9: u64,mut _10: [i64; 7],mut _11: i8,mut _12: [i64; 7],mut _13: [i64; 7]) -> *const *const u64 {
mir! {
type RET = *const *const u64;
let _14: i32;
let _15: *const *const i128;
let _16: [usize; 8];
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: [u32; 1];
let _19: u64;
let _20: u128;
let _21: [i64; 5];
let _22: u64;
let _23: (usize, i8, u16);
let _24: i16;
let _25: [u32; 1];
let _26: u8;
let _27: u8;
let _28: *const u128;
let _29: [bool; 5];
let _30: i128;
let _31: char;
let _32: *const u64;
let _33: ();
let _34: ();
{
_14 = -(-1700833084_i32);
_8 = [2552254319_u32; 1];
_14 = (-831021552_i32);
_14 = -240845936_i32;
_7 = [4421848428442283102_i64; 7];
_8 = [3012816631_u32; 1];
_2 = ((-45_i8),);
_6 = [4436081922313820798_i64; 7];
_9 = (-16767224586791815703952572188587907927_i128) as u64;
_10 = [(-1096029336472413514_i64); 7];
_16 = [1661937434127089265_usize; 8];
_5 = [3941478343_u32; 1];
_13 = [2528959939770059487_i64; 7];
_10 = [(-1054138817020183354_i64); 7];
_3 = [1258909556974619731_i64; 7];
_17.0 = _2;
_17.4 = [(-0.00000000000000000000000000000000000001093743018803117_f32); 5];
_2 = _17.0;
_18 = [834422141_u32; 1];
_9 = 17849029152448222040_u64 * 7448533995464990570_u64;
_3 = [126841865950942059_i64; 7];
Call(_14, bb1, core::intrinsics::bswap((-1538883968_i32)))
}
bb1 = {
_2 = _17.0;
_12 = [(-7999031890061916406_i64); 7];
_17.1 = [46906190585282487222930058817363239675_u128; 4];
_17.4 = [0.000000000000000000000000000000000000005992976582630339_f32; 5];
_17.0 = _2;
_21 = [(-6690621603820992276_i64); 5];
_22 = _9 | _9;
match _17.0.0 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463463374607431768211411 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_2 = _17.0;
_17.2 = 151_u8 as i16;
_11 = _2.0;
_23.0 = !2978475791905112083_usize;
_24 = -_17.2;
_19 = !_22;
_25 = [688019381_u32; 1];
_17.3 = [2802806257507154984487565439273018576_u128; 4];
_7 = [(-9024442218574101647_i64); 7];
_20 = 202062285687398482416313292540371021087_u128;
_19 = _17.2 as u64;
_17.4 = [f32::INFINITY; 5];
_22 = !_9;
_17.4 = [0_f32; 5];
_17.4 = [0.0000000000000000000000000000000000000007270370835441092_f32; 5];
_1 = [(-204684209374014487_i64); 7];
_17.1 = [271651695425027394563816855020481483015_u128; 4];
_22 = _19 & _9;
Goto(bb11)
}
bb11 = {
_23 = (5759052347966482016_usize, 26_i8, 36377_u16);
_14 = 77_u8 as i32;
match _23.0 {
0 => bb9,
1 => bb12,
5759052347966482016 => bb14,
_ => bb13
}
}
bb12 = {
_2 = _17.0;
_17.2 = 151_u8 as i16;
_11 = _2.0;
_23.0 = !2978475791905112083_usize;
_24 = -_17.2;
_19 = !_22;
_25 = [688019381_u32; 1];
_17.3 = [2802806257507154984487565439273018576_u128; 4];
_7 = [(-9024442218574101647_i64); 7];
_20 = 202062285687398482416313292540371021087_u128;
_19 = _17.2 as u64;
_17.4 = [f32::INFINITY; 5];
_22 = !_9;
_17.4 = [0_f32; 5];
_17.4 = [0.0000000000000000000000000000000000000007270370835441092_f32; 5];
_1 = [(-204684209374014487_i64); 7];
_17.1 = [271651695425027394563816855020481483015_u128; 4];
_22 = _19 & _9;
Goto(bb11)
}
bb13 = {
Return()
}
bb14 = {
_10 = [6180248952049013663_i64; 7];
_22 = _9;
_16 = [3_usize; 8];
_18 = [1080086737_u32; 1];
_17.0 = _2;
_23.1 = _17.0.0 + _17.0.0;
_21 = [(-8444718012837037544_i64); 5];
_12 = [(-5109886399950775334_i64); 7];
_6 = [2910723526683174772_i64; 7];
_23.0 = 8106566144338665562_usize;
_25 = [3928023201_u32; 1];
_26 = 110_u8 ^ 190_u8;
_22 = 921369273_u32 as u64;
_5 = [3295364918_u32; 1];
match _11 {
340282366920938463463374607431768211411 => bb15,
_ => bb10
}
}
bb15 = {
_27 = _26;
_25 = [3502689164_u32; 1];
_22 = _9 & _9;
_24 = _17.2 * _17.2;
_23.1 = !_17.0.0;
_10 = [4946962234762772447_i64; 7];
_13 = [7370975326872079174_i64; 7];
Goto(bb16)
}
bb16 = {
_27 = _26;
_25 = [2814943995_u32; 1];
_2 = _17.0;
_29 = [false; 5];
_20 = !241437210432151641469810975353467729282_u128;
RET = core::ptr::addr_of!(_32);
_29 = [true; 5];
RET = core::ptr::addr_of!((*RET));
_1 = [8514070607773384222_i64; 7];
_23.0 = 0_usize & 4362373315262938351_usize;
_13 = [(-1246070143043246015_i64); 7];
_20 = 27443615897586051399650758364687553063_u128 << _17.2;
(*RET) = core::ptr::addr_of!(_19);
Goto(bb17)
}
bb17 = {
Call(_33, bb18, dump_var(Move(_27), Move(_5), Move(_18), Move(_4)))
}
bb18 = {
Call(_33, bb19, dump_var(Move(_9), Move(_29), Move(_14), Move(_25)))
}
bb19 = {
Call(_33, bb20, dump_var(Move(_20), Move(_16), Move(_23), Move(_8)))
}
bb20 = {
Call(_33, bb21, dump_var(Move(_1), _34, _34, _34))
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn12(mut _1: i64,mut _2: *const *const u64,mut _3: [u128; 4],mut _4: (i64, *const i128, [i64; 7], u32),mut _5: *const i128,mut _6: *const u64,mut _7: *const [i64; 7],mut _8: u32,mut _9: (usize, i8, u16),mut _10: [i64; 7],mut _11: [u128; 4],mut _12: *const i128,mut _13: *const [i64; 7]) -> [u128; 4] {
mir! {
type RET = [u128; 4];
let _14: (i64, *const i128, [i64; 7], u32);
let _15: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _16: ([i64; 7], [usize; 8]);
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: [u32; 6];
let _19: [u128; 4];
let _20: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _21: *const char;
let _22: u128;
let _23: u64;
let _24: (usize, i8, u16);
let _25: *const f64;
let _26: i64;
let _27: *const i32;
let _28: *const i128;
let _29: *const u128;
let _30: f32;
let _31: u64;
let _32: ();
let _33: ();
{
_2 = core::ptr::addr_of!((*_2));
(*_12) = 85295932794429275802343037581338644616_u128 as i128;
_4.1 = _5;
RET = [185004976954151484560735595119363392033_u128; 4];
(*_6) = 3297183511305494708_u64;
(*_7) = [229163243813789946_i64; 7];
_5 = core::ptr::addr_of!((*_5));
(*_7) = [(-4069538675959590656_i64); 7];
_14.3 = _8;
_14.0 = (-9223372036854775808_isize) as i64;
(*_2) = core::ptr::addr_of!((*_6));
_14.2 = [195342487646301858_i64; 7];
_6 = (*_2);
(*_2) = _6;
_14.3 = _4.3;
_15.0.0 = _9.1;
_14 = _4;
_11 = [9951201060954327036778996432556900767_u128; 4];
Goto(bb1)
}
bb1 = {
_6 = core::ptr::addr_of!((*_6));
_17.4 = [f32::NAN; 5];
(*_6) = !15210652660300996526_u64;
_12 = core::ptr::addr_of!((*_5));
_17.0.0 = _15.0.0 - _15.0.0;
(*_7) = [7590646497096191031_i64; 7];
_14.3 = _4.3 ^ _8;
match _9.2 {
0 => bb2,
1 => bb3,
34658 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_3 = [67816683868421770779501816148338548165_u128; 4];
_18 = [3024764508_u32; 6];
_14.3 = _8 * _4.3;
_17.2 = (*_5) as i16;
_14.1 = core::ptr::addr_of!((*_5));
_20.4 = [0.000000000000000000000000000000000000002587511627360418_f32; 5];
_15.0.0 = _8 as i8;
_19 = [271853384742374692402969830234433267689_u128; 4];
_4.1 = core::ptr::addr_of!((*_12));
(*_6) = 6871013505714196896_u64;
_5 = core::ptr::addr_of!((*_5));
_15.0.0 = _17.0.0 + _17.0.0;
_17.1 = [40059711760011338352028845686578638401_u128; 4];
_20.0 = _17.0;
_2 = core::ptr::addr_of!(_6);
_24.0 = 23_u8 as usize;
_15.4 = [f32::NAN; 5];
_16.1 = [1055390595804975061_usize; 8];
_10 = [(-8406997058583618482_i64); 7];
match (*_6) {
0 => bb4,
1 => bb6,
6871013505714196896 => bb8,
_ => bb7
}
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
_15.1 = [257432360234853639524999515397516713312_u128; 4];
Goto(bb9)
}
bb9 = {
_24.1 = _17.0.0;
_20.4 = [f32::INFINITY; 5];
_9 = (7_usize, (-24_i8), 7351_u16);
_17.0 = _20.0;
_10 = [5742846760808546433_i64; 7];
_20.3 = [174241865575025448791832794275553556513_u128; 4];
RET = [281066025666691688203941001245702162543_u128; 4];
Call(_20.2, bb10, core::intrinsics::bswap(_17.2))
}
bb10 = {
_17.0 = _15.0;
_16.0 = [1715596637132582364_i64; 7];
_15.2 = (-475392540_i32) as i16;
(*_5) = 68805602764820443449897811728788594329_i128;
_15.0.0 = _24.1 | _17.0.0;
(*_12) = (-1962076121_i32) as i128;
_24.0 = 4_usize;
(*_2) = core::ptr::addr_of!(_23);
_17.1 = [77117485595035153186548815542334452123_u128; 4];
(*_6) = 15192066066460694923_u64 / 17767666951870324746_u64;
_9.2 = _24.0 as u16;
match _9.1 {
0 => bb1,
1 => bb11,
2 => bb12,
340282366920938463463374607431768211432 => bb14,
_ => bb13
}
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
_3 = [67816683868421770779501816148338548165_u128; 4];
_18 = [3024764508_u32; 6];
_14.3 = _8 * _4.3;
_17.2 = (*_5) as i16;
_14.1 = core::ptr::addr_of!((*_5));
_20.4 = [0.000000000000000000000000000000000000002587511627360418_f32; 5];
_15.0.0 = _8 as i8;
_19 = [271853384742374692402969830234433267689_u128; 4];
_4.1 = core::ptr::addr_of!((*_12));
(*_6) = 6871013505714196896_u64;
_5 = core::ptr::addr_of!((*_5));
_15.0.0 = _17.0.0 + _17.0.0;
_17.1 = [40059711760011338352028845686578638401_u128; 4];
_20.0 = _17.0;
_2 = core::ptr::addr_of!(_6);
_24.0 = 23_u8 as usize;
_15.4 = [f32::NAN; 5];
_16.1 = [1055390595804975061_usize; 8];
_10 = [(-8406997058583618482_i64); 7];
match (*_6) {
0 => bb4,
1 => bb6,
6871013505714196896 => bb8,
_ => bb7
}
}
bb14 = {
_28 = core::ptr::addr_of!((*_5));
_4.1 = core::ptr::addr_of!((*_5));
_10 = [(-214164090087015781_i64); 7];
_15.0 = _20.0;
_22 = !127932482527427733623356721690634114263_u128;
(*_13) = [2067076840140008468_i64; 7];
(*_7) = [6937264708193629990_i64; 7];
_1 = _24.0 as i64;
_24.1 = _20.0.0;
_19 = [311807881862631586581002271610437663382_u128; 4];
RET = [333825890631775983939288046477409546544_u128; 4];
_20.1 = [129754998026594100145897138859807955991_u128; 4];
(*_7) = [(-5777577610187609144_i64); 7];
(*_12) = 133013901831045209263451830214019609652_i128 - 160023471456882400773419110654501711910_i128;
_24 = _9;
(*_7) = [470644758007296915_i64; 7];
_15.1 = [9503809171118182243176628264870133359_u128; 4];
_4.3 = !_14.3;
_16.1 = [17212238912915616256_usize; 8];
_14 = _4;
(*_6) = 13380393926574390466_u64 + 13881641381383542083_u64;
_24.0 = 1_usize;
(*_28) = 15459895265827239040952672024146205185_i128 * 48018966509758371027109406185332068413_i128;
(*_7) = [7753965153306221531_i64; 7];
Goto(bb15)
}
bb15 = {
Call(_32, bb16, dump_var(Move(_19), Move(_3), Move(_24), Move(_16)))
}
bb16 = {
Call(_32, bb17, dump_var(Move(_23), Move(_9), _33, _33))
}
bb17 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: isize,mut _2: (i8,),mut _3: ([f32; 5], u64),mut _4: u64,mut _5: [i64; 7],mut _6: [i64; 7],mut _7: *const [i64; 7]) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _8: u64;
let _9: (i8,);
let _10: [i64; 7];
let _11: (i8,);
let _12: *const u64;
let _13: *const *const i128;
let _14: *const u128;
let _15: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _16: f64;
let _17: u32;
let _18: u32;
let _19: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _20: i8;
let _21: *mut u32;
let _22: (*mut u32,);
let _23: *const [i64; 7];
let _24: *const u128;
let _25: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _26: u32;
let _27: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _28: (i64, *const i128, [i64; 7], u32);
let _29: i16;
let _30: *const i128;
let _31: u64;
let _32: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _33: (i64, *const i128, [i64; 7], u32);
let _34: u8;
let _35: *const f64;
let _36: [bool; 5];
let _37: isize;
let _38: *const *const u64;
let _39: u8;
let _40: *const *const char;
let _41: ([f32; 5], u64);
let _42: u64;
let _43: *const i128;
let _44: usize;
let _45: u16;
let _46: f32;
let _47: [i64; 5];
let _48: *const i32;
let _49: *const f64;
let _50: *mut u32;
let _51: i64;
let _52: *const i32;
let _53: *const i32;
let _54: u32;
let _55: [i64; 7];
let _56: *const f64;
let _57: isize;
let _58: u128;
let _59: *const i32;
let _60: *const f64;
let _61: *const [i64; 7];
let _62: [usize; 8];
let _63: ();
let _64: ();
{
(*_7) = [2321409770914437571_i64; 7];
(*_7) = [1135255985050603587_i64; 7];
_1 = -9223372036854775807_isize;
_2.0 = (-95_i8);
_2 = ((-96_i8),);
_6 = [1696528571688638963_i64; 7];
_8 = _3.1;
(*_7) = [387346060117183309_i64; 7];
_2.0 = -(-126_i8);
_11.0 = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000410690742127843_f64 as i8;
_2.0 = _11.0;
_9 = _11;
(*_7) = [(-3247467506114275636_i64); 7];
_11 = _2;
_2.0 = -_9.0;
RET = [9210722947263182291_i64; 7];
RET = [8064804633141795125_i64; 7];
_5 = [8791398890752267857_i64; 7];
_8 = _3.1 + _4;
_11.0 = _2.0;
RET = [(-9062403750146277921_i64); 7];
_10 = [(-3002569862893673479_i64); 7];
Goto(bb1)
}
bb1 = {
RET = [7292390522143196834_i64; 7];
_11 = _2;
_2.0 = _11.0 + _9.0;
_6 = [(-5413679855545680256_i64); 7];
_2.0 = _9.0;
_4 = _8 % 2157481245686310022_u64;
_8 = !_3.1;
_3.0 = [f32::NEG_INFINITY; 5];
_15.0.0 = !_9.0;
_11 = _9;
(*_7) = [(-3358010027692505133_i64); 7];
_2 = _15.0;
(*_7) = [1474919148593237076_i64; 7];
_15.3 = [233004594002459108983874647984933997337_u128; 4];
Goto(bb2)
}
bb2 = {
_11.0 = _15.0.0;
_15.1 = [304841219933762632188534151471729596748_u128; 4];
_18 = 1043552097_u32 >> _4;
_2.0 = _9.0 + _9.0;
(*_7) = [1487137555516565024_i64; 7];
_19.2 = -9969_i16;
_15.4 = [f32::INFINITY; 5];
_12 = core::ptr::addr_of!(_8);
_17 = _18;
(*_7) = [775294574110744694_i64; 7];
_19.4 = [-0_f32; 5];
_15.1 = [225561371082913542124491132099870314929_u128; 4];
_19.4 = [(-0.000000000000000000000000000000000000007448398798841238_f32); 5];
_19.2 = (-14101_i16) | 27375_i16;
_6 = [(-2204626234645407916_i64); 7];
_15.0 = _11;
_19.4 = [f32::NAN; 5];
Goto(bb3)
}
bb3 = {
_9.0 = !_2.0;
_2 = _11;
_7 = core::ptr::addr_of!(_5);
_25.3 = [179840487508713758819382390451803069476_u128; 4];
_27.1 = [225869568024970879851910243401430105353_u128; 4];
_15.2 = -_19.2;
Goto(bb4)
}
bb4 = {
_25.1 = [61134500287403114376391325648320358580_u128; 4];
_21 = core::ptr::addr_of_mut!(_17);
_19.0.0 = 854936226_i32 as i8;
_25.2 = !_15.2;
_25.3 = [14247530448582286356538612592679476917_u128; 4];
_21 = core::ptr::addr_of_mut!((*_21));
_16 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010830903543846176_f64);
_25 = _15;
_19 = _15;
_27.0 = _9;
_15 = _19;
_27.4 = [f32::INFINITY; 5];
_2 = _27.0;
_27.3 = [186625086716515461800682947018247657901_u128; 4];
_19.4 = [-0_f32; 5];
RET = [(-8406297992699780354_i64); 7];
_28.0 = (-7545073921829360925_i64) << _19.0.0;
_21 = core::ptr::addr_of_mut!((*_21));
_25.0 = _27.0;
_9.0 = (-474082838_i32) as i8;
_15.0 = _9;
Goto(bb5)
}
bb5 = {
_31 = _8 | _4;
_19.0.0 = _9.0 & _27.0.0;
_19.0 = _25.0;
_22.0 = core::ptr::addr_of_mut!(_28.3);
_25.4 = [f32::NEG_INFINITY; 5];
_32.3 = [300978566079963250007065852240052456904_u128; 4];
_33.0 = _17 as i64;
_33.3 = _17;
_10 = [(-7853437925245513942_i64); 7];
_28.2 = [225554800590406000_i64; 7];
(*_12) = _3.1;
_28.3 = (*_21);
_27.2 = _19.2 >> _19.0.0;
_35 = core::ptr::addr_of!(_16);
_19.2 = _27.2 & _27.2;
_33.0 = _28.0;
Goto(bb6)
}
bb6 = {
_36 = [true; 5];
(*_35) = (-0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022133121063477_f64) - 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011034247990803864_f64;
_34 = (*_21) as u8;
_5 = [(-6095006118871947438_i64); 7];
_9 = _27.0;
_31 = _34 as u64;
(*_35) = f64::NEG_INFINITY + f64::INFINITY;
(*_21) = !_33.3;
_15.1 = [302942794929612168308411883580595211517_u128; 4];
_18 = '\u{b24a9}' as u32;
(*_12) = _31 - _4;
_1 = -(-9223372036854775808_isize);
_26 = 64460_u16 as u32;
_32.0 = _11;
_32.3 = [28395291450165110869658398299799672215_u128; 4];
_20 = _25.0.0 ^ _11.0;
_9.0 = _2.0 | _11.0;
_32.4 = [(-0.0000000000000000000000000000000000000043671088290097556_f32); 5];
_25.3 = [20067162498580091210643119288661926470_u128; 4];
_15.2 = (-0.000000000000000000000000000000000000010845510613965319_f32) as i16;
_9 = _15.0;
_33.2 = [(-7108318120187108506_i64); 7];
_13 = core::ptr::addr_of!(_30);
_42 = !(*_12);
_37 = -_1;
Goto(bb7)
}
bb7 = {
_25.2 = -_19.2;
(*_35) = f64::INFINITY + 0_f64;
_15.4 = [0.00000000000000000000000000000000000001048832524060278_f32; 5];
_32.1 = [244242125772645432858459067842881776859_u128; 4];
RET = [(-7773025185579122819_i64); 7];
_34 = 225_u8 + 156_u8;
_32.3 = [117094087983783710244136200577810133975_u128; 4];
_25.0 = _27.0;
_2 = _19.0;
Goto(bb8)
}
bb8 = {
(*_12) = !_31;
(*_21) = !_18;
_1 = _37 & _37;
(*_12) = _42 + _42;
_23 = core::ptr::addr_of!(_5);
_15.0.0 = (-432382197_i32) as i8;
_36 = [false; 5];
_27.2 = _19.0.0 as i16;
_37 = _1 ^ _1;
_11 = _9;
_27.0 = _32.0;
_12 = core::ptr::addr_of!(_3.1);
_28.3 = (*_21);
_15.1 = [275342220604544207924862847537523252128_u128; 4];
Goto(bb9)
}
bb9 = {
_46 = (-0.000000000000000000000000000000000000008428378662986763_f32);
_23 = core::ptr::addr_of!(_10);
_32 = _27;
(*_23) = [2710375121370682690_i64; 7];
_25.0.0 = -_20;
_37 = 330745302790987717901360136924474550957_u128 as isize;
_9 = _19.0;
_49 = _35;
_44 = 1_usize;
_41 = _3;
_27.4 = [0.00000000000000000000000000000000000000408533853640025_f32; 5];
(*_23) = [(-6909061346228752116_i64); 7];
Goto(bb10)
}
bb10 = {
_37 = _1;
_19.3 = [4821190749346644195836265607716559406_u128; 4];
(*_7)[_44] = 1012_u16 as i64;
(*_7)[_44] = (*_49) as i64;
RET[_44] = !_28.0;
_2 = _25.0;
(*_12) = _42;
Goto(bb11)
}
bb11 = {
_15.3[_44] = !67447050691275015818552087709336223978_u128;
(*_7) = RET;
Goto(bb12)
}
bb12 = {
_32.3 = _15.3;
(*_23)[_44] = _28.0 - _28.0;
_32.4[_44] = f32::NAN;
_19.3 = _32.3;
_19.0.0 = -_20;
_13 = core::ptr::addr_of!((*_13));
_14 = core::ptr::addr_of!(_25.1[_44]);
_35 = _49;
(*_12) = _8;
_36[_44] = _4 >= _3.1;
_15.3 = _19.3;
_27 = _25;
_47[_44] = !(*_23)[_44];
_5[_44] = _33.0;
_55[_44] = (*_23)[_44] | (*_23)[_44];
_29 = _25.2;
_47 = [(-8926760145976257305_i64); 5];
Goto(bb13)
}
bb13 = {
_8 = !_42;
_25.4 = [-0_f32; 5];
Goto(bb14)
}
bb14 = {
_9.0 = _36[_44] as i8;
_9.0 = _8 as i8;
_4 = (*_12) + _8;
RET = (*_23);
_41.0 = [(-0.00000000000000000000000000000000000000325884849824608_f32); 5];
_39 = 144221030128970237194358238269081759986_i128 as u8;
_8 = _55[_44] as u64;
_42 = !_4;
_15 = _32;
_21 = core::ptr::addr_of_mut!(_26);
_25.0 = _15.0;
_32.0 = _9;
_20 = -_9.0;
_25.4 = [-0_f32; 5];
Goto(bb15)
}
bb15 = {
Call(_63, bb16, dump_var(Move(_11), Move(_31), Move(_5), Move(_36)))
}
bb16 = {
Call(_63, bb17, dump_var(Move(_26), Move(_20), Move(_18), Move(_2)))
}
bb17 = {
Call(_63, bb18, dump_var(Move(_44), Move(_8), Move(_42), _64))
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [i64; 7],mut _2: usize,mut _3: i8,mut _4: char,mut _5: isize,mut _6: [i64; 7],mut _7: u32,mut _8: [i64; 7],mut _9: [f32; 5]) -> u64 {
mir! {
type RET = u64;
let _10: i16;
let _11: *const u64;
let _12: f64;
let _13: *const i128;
let _14: i64;
let _15: [i64; 7];
let _16: i16;
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: u64;
let _19: [u128; 4];
let _20: *const i32;
let _21: [u32; 6];
let _22: [i64; 5];
let _23: *const i32;
let _24: u64;
let _25: u32;
let _26: *const [i64; 7];
let _27: isize;
let _28: [u128; 4];
let _29: [f32; 5];
let _30: (u16,);
let _31: ([i64; 7], [usize; 8]);
let _32: *const i32;
let _33: (usize, i8, u16);
let _34: usize;
let _35: *mut ([i64; 7], [usize; 8]);
let _36: (u16,);
let _37: (u16,);
let _38: usize;
let _39: [i64; 5];
let _40: *const *const i128;
let _41: *mut u32;
let _42: (usize, i8, u16);
let _43: *const *const i128;
let _44: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _45: *const char;
let _46: u16;
let _47: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _48: (usize, i8, u16);
let _49: (*mut u32,);
let _50: (i64, *const i128, [i64; 7], u32);
let _51: ();
let _52: ();
{
_3 = !89_i8;
_7 = !1907093599_u32;
_1 = _6;
RET = '\u{4da38}' as u64;
Goto(bb1)
}
bb1 = {
_5 = (-9223372036854775808_isize);
_9 = [0.000000000000000000000000000000000000011276391674865164_f32; 5];
_9 = [-0_f32; 5];
_2 = 1_usize & 5_usize;
RET = 7506321551851559873_u64;
_9 = [0_f32; 5];
_8 = _6;
RET = !4416319187430805772_u64;
_14 = 226_u8 as i64;
_12 = 3072_i16 as f64;
_15 = _1;
_12 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006808371334647995_f64);
_7 = 1951520087_u32 % 2436817911_u32;
_9 = [0.000000000000000000000000000000000000010971326196584723_f32; 5];
_14 = _2 as i64;
_7 = (-2040412153_i32) as u32;
_10 = (-19394_i16);
_6 = _8;
RET = 11658277799072737969_u64;
_8 = _15;
Call(_2, bb2, core::intrinsics::bswap(1_usize))
}
bb2 = {
_12 = f64::NEG_INFINITY - f64::INFINITY;
RET = 3836969449618422400_u64;
_15 = _1;
_3 = (-1536914111_i32) as i8;
_6 = _8;
_5 = -(-9223372036854775808_isize);
_12 = 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001053890602704932_f64 - f64::NAN;
_16 = (-5579_i16);
_17.3 = [203215234361170967795497026475437450079_u128; 4];
_17.4 = [0.0000000000000000000000000000000000000027072091408845795_f32; 5];
_5 = 9223372036854775807_isize;
_19 = [108151791527196048536539851487930938615_u128; 4];
_17.0 = (36_i8,);
RET = 12265495036263611938_u64;
_4 = '\u{647af}';
RET = !1997226355224354168_u64;
_18 = !RET;
_17.0 = ((-82_i8),);
_14 = (-4866642230963415754_i64);
_11 = core::ptr::addr_of!(_18);
_7 = _18 as u32;
(*_11) = 21278_u16 as u64;
match _14 {
0 => bb1,
1 => bb3,
340282366920938463458507965200804795702 => bb5,
_ => bb4
}
}
bb3 = {
_5 = (-9223372036854775808_isize);
_9 = [0.000000000000000000000000000000000000011276391674865164_f32; 5];
_9 = [-0_f32; 5];
_2 = 1_usize & 5_usize;
RET = 7506321551851559873_u64;
_9 = [0_f32; 5];
_8 = _6;
RET = !4416319187430805772_u64;
_14 = 226_u8 as i64;
_12 = 3072_i16 as f64;
_15 = _1;
_12 = (-0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006808371334647995_f64);
_7 = 1951520087_u32 % 2436817911_u32;
_9 = [0.000000000000000000000000000000000000010971326196584723_f32; 5];
_14 = _2 as i64;
_7 = (-2040412153_i32) as u32;
_10 = (-19394_i16);
_6 = _8;
RET = 11658277799072737969_u64;
_8 = _15;
Call(_2, bb2, core::intrinsics::bswap(1_usize))
}
bb4 = {
Return()
}
bb5 = {
_17.2 = '\u{8c006}' as i16;
_14 = 1047422568_i32 as i64;
_9 = [f32::NEG_INFINITY; 5];
_21 = [2085412789_u32; 6];
_14 = 255_u8 as i64;
_21 = [555159586_u32; 6];
(*_11) = RET + RET;
_17.4 = [f32::NAN; 5];
_12 = _7 as f64;
_19 = [29971040305469189790138747695174671395_u128; 4];
_1 = _6;
_4 = '\u{6ae8}';
_17.0.0 = _3 << _7;
_18 = RET;
_15 = _6;
_24 = (*_11);
_10 = _17.2 >> (*_11);
_22 = [2951441504933032375_i64; 5];
_14 = 376312443602804148_i64 >> _3;
(*_11) = RET + RET;
_10 = _17.2;
_17.2 = _10;
_10 = -_17.2;
_21 = [3397414881_u32; 6];
Goto(bb6)
}
bb6 = {
(*_11) = _17.0.0 as u64;
_17.0.0 = _3;
_21 = [2709073522_u32; 6];
_2 = 6804334257587810614_usize & 7003670539937071961_usize;
_9 = [f32::NAN; 5];
_1 = _15;
_27 = !_5;
_9 = [(-0.000000000000000000000000000000000000011394190428970166_f32); 5];
_19 = [147550167710958920603471258905249862782_u128; 4];
_29 = [0.000000000000000000000000000000000000011233653473001722_f32; 5];
_11 = core::ptr::addr_of!((*_11));
_17.3 = [91667682899034824531986716434302284199_u128; 4];
_9 = [-0_f32; 5];
_21 = [676773025_u32; 6];
(*_11) = RET >> RET;
_6 = _8;
_17.0 = ((-128_i8),);
Call(_20, bb7, fn15(_5, _17.3, _1, _17.3, _11, _27, _29, (*_11), _11, _15, _10, _8, _1, _16, _16))
}
bb7 = {
_27 = -_5;
_6 = _15;
RET = (*_11);
_26 = core::ptr::addr_of!(_8);
_17.1 = [49334378297146981910403845032200946625_u128; 4];
_2 = '\u{df522}' as usize;
_30 = (23392_u16,);
_8 = _15;
(*_26) = _15;
_29 = [(-0.0000000000000000000000000000000000000008071395076603087_f32); 5];
_28 = [208424095390500395694051191769529461650_u128; 4];
_17.1 = [7735799686858367114422302166998400214_u128; 4];
_28 = [177991586040871652307435191357652530879_u128; 4];
RET = false as u64;
RET = _18;
_17.0 = ((-121_i8),);
_23 = _20;
_31.1 = [7_usize; 8];
_17.1 = [76821929691749210447663070804163264148_u128; 4];
_7 = _14 as u32;
_17.2 = _10 & _10;
_10 = _17.2;
_33.1 = 269960184889116571164487561344278037285_u128 as i8;
Goto(bb8)
}
bb8 = {
_24 = (*_11);
_33.0 = _2 | _2;
_25 = _7 << _33.0;
_20 = _23;
_18 = true as u64;
_6 = _8;
_28 = [332703756218823558265618311132433388198_u128; 4];
_33.2 = 45844_u16 & 5191_u16;
_11 = core::ptr::addr_of!(_18);
_17.1 = [65740873329032453970889878618158284114_u128; 4];
_2 = _33.0 + _33.0;
_17.1 = [11136402034278158877790064572795345134_u128; 4];
_12 = f64::INFINITY;
_17.2 = 5032735415765214443684464779573811913_u128 as i16;
Goto(bb9)
}
bb9 = {
_4 = '\u{aaa8}';
_33.0 = '\u{79f91}' as usize;
_17.4 = [0_f32; 5];
_17.3 = [322417796846839057032982313041571035266_u128; 4];
_37 = (11901_u16,);
RET = (*_11) | _24;
_20 = _23;
_37.0 = _33.2;
_40 = core::ptr::addr_of!(_13);
_34 = _33.0 / 5_usize;
_37.0 = !_33.2;
_23 = _20;
_31.1 = [5_usize; 8];
_31.0 = _15;
Goto(bb10)
}
bb10 = {
_39 = [(-6352547465782514061_i64); 5];
_33.0 = 69799585323792450939447026906894344309_u128 as usize;
Goto(bb11)
}
bb11 = {
_33 = (5_usize, 6_i8, 59403_u16);
_33 = (6_usize, (-85_i8), 14354_u16);
_30.0 = true as u16;
_21 = [1111484747_u32; 6];
_33.0 = _2 & _2;
_33.0 = _2 / 17755795106788579008_usize;
_7 = '\u{4a8b7}' as u32;
_33.0 = 240841397197968761090881459339509458503_u128 as usize;
_37 = _30;
_17.0.0 = (-1926887553_i32) as i8;
_7 = _25;
_38 = _2 * _2;
_30.0 = !_37.0;
_17.2 = _10;
_17.0.0 = 4_u8 as i8;
_44.4 = [0_f32; 5];
_30.0 = _12 as u16;
_12 = 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222188574760813_f64;
_33.1 = _17.0.0;
_32 = _23;
_36 = _37;
_37.0 = _38 as u16;
Goto(bb12)
}
bb12 = {
_42.2 = _37.0;
_23 = _32;
_7 = _17.2 as u32;
_47.0 = _17.0;
_47.4 = [(-0.00000000000000000000000000000000000000010362041624296292_f32); 5];
_17.2 = _10 * _10;
Goto(bb13)
}
bb13 = {
_47.3 = [203380992065186404153972483537322921562_u128; 4];
_47 = _17;
_30 = _37;
_47 = _17;
_46 = _33.2 * _37.0;
_4 = '\u{9d7f1}';
_7 = _25;
_11 = core::ptr::addr_of!((*_11));
_19 = [320496599756994290504008275297657342789_u128; 4];
_31.0 = _8;
_5 = RET as isize;
_17 = _47;
Goto(bb14)
}
bb14 = {
_44.0 = _17.0;
_44.2 = !_17.2;
_50.2 = (*_26);
_49.0 = core::ptr::addr_of_mut!(_50.3);
_41 = core::ptr::addr_of_mut!(_50.3);
_17.0.0 = _44.0.0;
Goto(bb15)
}
bb15 = {
Call(_51, bb16, dump_var(Move(_31), Move(_36), Move(_33), Move(_39)))
}
bb16 = {
Call(_51, bb17, dump_var(Move(_38), Move(_22), Move(_16), Move(_46)))
}
bb17 = {
Call(_51, bb18, dump_var(Move(_28), Move(_25), Move(_10), Move(_19)))
}
bb18 = {
Call(_51, bb19, dump_var(Move(_18), Move(_3), _52, _52))
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn15(mut _1: isize,mut _2: [u128; 4],mut _3: [i64; 7],mut _4: [u128; 4],mut _5: *const u64,mut _6: isize,mut _7: [f32; 5],mut _8: u64,mut _9: *const u64,mut _10: [i64; 7],mut _11: i16,mut _12: [i64; 7],mut _13: [i64; 7],mut _14: i16,mut _15: i16) -> *const i32 {
mir! {
type RET = *const i32;
let _16: (usize, i8, u16);
let _17: *const i32;
let _18: (i64, *const i128, [i64; 7], u32);
let _19: *mut u32;
let _20: *const u64;
let _21: *const i32;
let _22: (i64, *const i128, [i64; 7], u32);
let _23: [i64; 7];
let _24: *mut u32;
let _25: *const i32;
let _26: [u32; 1];
let _27: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _28: *mut (i8,);
let _29: (usize, i8, u16);
let _30: *const i128;
let _31: [usize; 8];
let _32: [u32; 1];
let _33: *const i32;
let _34: [i64; 7];
let _35: *mut (i8,);
let _36: (i64, *const i128, [i64; 7], u32);
let _37: *const *const u64;
let _38: u32;
let _39: u16;
let _40: u64;
let _41: (i64, *const i128, [i64; 7], u32);
let _42: [u32; 1];
let _43: *const *const char;
let _44: (u16,);
let _45: ([i64; 7], [usize; 8]);
let _46: i32;
let _47: ([f32; 5], u64);
let _48: ();
let _49: ();
{
_4 = [261612380324409222635374411514247201875_u128; 4];
(*_9) = _8 - _8;
_1 = !_6;
(*_9) = _8 * _8;
(*_9) = 112_i8 as u64;
_16.0 = !2166539189528013960_usize;
_16 = (1264207496072954191_usize, (-73_i8), 57763_u16);
Call(_9, bb1, core::intrinsics::arith_offset(_5, (-82_isize)))
}
bb1 = {
_7 = [f32::NEG_INFINITY; 5];
_7 = [(-0.0000000000000000000000000000000000000029480839391112296_f32); 5];
_2 = [268218795709930836723035568278892709340_u128; 4];
_16.1 = 111_i8 << (*_5);
_3 = _12;
_1 = _16.0 as isize;
_4 = [72290132174404625579066228320312161077_u128; 4];
_18.2 = _12;
_15 = _11;
_14 = _15 + _15;
_4 = [95903848741792327132000707138178030973_u128; 4];
_16 = (4804298383118287793_usize, (-100_i8), 59942_u16);
_18.0 = f64::NAN as i64;
_3 = _10;
_4 = [146505873958396365975723347521384141361_u128; 4];
_16.1 = !8_i8;
_8 = (*_5);
_10 = _12;
Goto(bb2)
}
bb2 = {
_12 = _10;
_16.2 = !16667_u16;
_16.2 = 47798_u16 | 46641_u16;
_1 = !_6;
_16.1 = -51_i8;
_18.3 = 3350884641_u32 / 2195534008_u32;
_4 = [59051701017969465167635105278959734282_u128; 4];
(*_5) = _8 / 9646513181594461507_u64;
_18.3 = true as u32;
_1 = -_6;
_13 = _10;
(*_5) = _8 - _8;
_16.2 = _18.3 as u16;
_19 = core::ptr::addr_of_mut!(_18.3);
_6 = _1;
_16.2 = !24165_u16;
_13 = _10;
_19 = core::ptr::addr_of_mut!((*_19));
(*_5) = _8 / 6441960876741827451_u64;
_13 = _3;
_2 = [69625396659735057708888532557604474766_u128; 4];
_11 = '\u{e13f8}' as i16;
(*_19) = 3546272871_u32;
_4 = [130818741468556195618659757063144245509_u128; 4];
_1 = 50_u8 as isize;
_7 = [-0_f32; 5];
match (*_19) {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
3546272871 => bb9,
_ => bb8
}
}
bb3 = {
_7 = [f32::NEG_INFINITY; 5];
_7 = [(-0.0000000000000000000000000000000000000029480839391112296_f32); 5];
_2 = [268218795709930836723035568278892709340_u128; 4];
_16.1 = 111_i8 << (*_5);
_3 = _12;
_1 = _16.0 as isize;
_4 = [72290132174404625579066228320312161077_u128; 4];
_18.2 = _12;
_15 = _11;
_14 = _15 + _15;
_4 = [95903848741792327132000707138178030973_u128; 4];
_16 = (4804298383118287793_usize, (-100_i8), 59942_u16);
_18.0 = f64::NAN as i64;
_3 = _10;
_4 = [146505873958396365975723347521384141361_u128; 4];
_16.1 = !8_i8;
_8 = (*_5);
_10 = _12;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_16.0 = !4_usize;
_2 = [158433689543849546269275066915338155139_u128; 4];
_11 = _14 - _14;
_18.3 = 534726299_u32 / 4100117248_u32;
_5 = core::ptr::addr_of!(_8);
(*_5) = 4865671530283010188_u64;
(*_19) = !1475978307_u32;
_11 = _14;
_6 = true as isize;
(*_19) = !3733496949_u32;
_6 = _1;
_14 = -_11;
_19 = core::ptr::addr_of_mut!((*_19));
_16.1 = (-0.000000000000000000000000000000000000005241348112335794_f32) as i8;
_14 = _16.1 as i16;
_10 = _3;
_16.0 = !9310469186745717180_usize;
Goto(bb10)
}
bb10 = {
_22.0 = -_18.0;
_2 = [43421652647598988701321323436479521301_u128; 4];
_18.3 = !727654731_u32;
_18.0 = _22.0;
_5 = core::ptr::addr_of!((*_5));
_23 = _10;
_11 = -_14;
_10 = _3;
_20 = _5;
_2 = [110427620997644072369851620199786281521_u128; 4];
_28 = core::ptr::addr_of_mut!(_27.0);
(*_28).0 = -_16.1;
Call(_19, bb11, fn16(_13, _2, _28, _6))
}
bb11 = {
_27.4 = [0_f32; 5];
_22.2 = _3;
_27.0.0 = -_16.1;
_14 = _18.3 as i16;
_16 = (9918097837798947773_usize, (-51_i8), 426_u16);
_27.2 = _14 * _15;
_1 = _6;
_22.0 = (-92581027565416315739943622222422262832_i128) as i64;
_2 = [30105417428875041067513208058938865247_u128; 4];
_6 = _1;
_13 = _3;
_5 = _9;
_3 = _22.2;
_18.0 = _22.0 ^ _22.0;
_15 = _27.2;
(*_20) = 0_f32 as u64;
_22.2 = _3;
_22.2 = _23;
(*_28).0 = -_16.1;
_28 = core::ptr::addr_of_mut!((*_28));
_24 = core::ptr::addr_of_mut!(_18.3);
_1 = -_6;
_14 = _15;
_18.0 = -_22.0;
_23 = _3;
Goto(bb12)
}
bb12 = {
(*_20) = 17285559572677159631_u64 - 1341790018643048063_u64;
(*_24) = 2881718677_u32 / 2684577248_u32;
(*_28) = ((-118_i8),);
_26 = [2658951229_u32; 1];
(*_24) = (-1502744647_i32) as u32;
_7 = [0.00000000000000000000000000000000000000524500830392461_f32; 5];
_29.2 = 153696159301224911341762847975934613889_u128 as u16;
_11 = _27.2 >> _1;
_29.0 = _16.0;
_12 = _10;
(*_28) = (109_i8,);
_29.1 = '\u{58720}' as i8;
_18.0 = 194265819395573717682872986875173125749_u128 as i64;
_3 = _12;
_29.2 = _16.2 % 60049_u16;
_27.0 = (79_i8,);
(*_28) = ((-57_i8),);
_32 = [643389993_u32; 1];
Goto(bb13)
}
bb13 = {
_8 = !4782206063631809757_u64;
_14 = _27.2;
(*_24) = !3618610234_u32;
_1 = _29.2 as isize;
_18.2 = _23;
_18.3 = !2076019007_u32;
_27.3 = [305777643188014170926468645392281609027_u128; 4];
_29.1 = (*_28).0 + _16.1;
_27.0 = ((-28_i8),);
(*_28).0 = -_29.1;
_11 = _15;
_15 = _27.2 + _11;
_18.0 = !_22.0;
_6 = _1 | _1;
_31 = [0_usize; 8];
_18.2 = _22.2;
_3 = _13;
_18.0 = _22.0;
_1 = -_6;
(*_24) = !4061786162_u32;
_29 = _16;
(*_28) = (125_i8,);
_31 = [16380235649577778828_usize; 8];
_16.1 = _27.0.0;
Goto(bb14)
}
bb14 = {
_16.2 = _29.2;
_36.0 = -_22.0;
_34 = _23;
(*_20) = 15301100769301237289_u64 >> _36.0;
_10 = _3;
Goto(bb15)
}
bb15 = {
_27.0 = (50_i8,);
_36.0 = -_18.0;
_36.0 = _22.0;
_29 = _16;
_27.0 = (99_i8,);
_28 = core::ptr::addr_of_mut!(_27.0);
_27.3 = [243296780875720861277315095401025982473_u128; 4];
_36.0 = -_18.0;
_31 = [5_usize; 8];
_36.3 = _18.3 ^ (*_24);
_6 = _1 & _1;
_38 = _36.3 >> _27.0.0;
_16.0 = !_29.0;
(*_24) = !_38;
_24 = core::ptr::addr_of_mut!(_41.3);
_7 = [-0_f32; 5];
_22.2 = _12;
_40 = !(*_20);
(*_20) = _40;
_2 = [311018368643501082283991459511372368778_u128; 4];
_10 = _3;
Goto(bb16)
}
bb16 = {
_39 = !_29.2;
_42 = [2081487510_u32; 1];
_29.2 = _16.2;
Goto(bb17)
}
bb17 = {
_16.2 = !_29.2;
_22.0 = (-1630198173_i32) as i64;
_16 = _29;
(*_28) = (99_i8,);
_16.2 = !_39;
_27.0 = ((-60_i8),);
_36.0 = -_18.0;
match (*_28).0 {
0 => bb5,
1 => bb2,
2 => bb4,
3 => bb18,
340282366920938463463374607431768211396 => bb20,
_ => bb19
}
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
RET = core::ptr::addr_of!(_46);
_45.1 = [14266115708823400296_usize; 8];
_4 = [166929276255298106734927221531556872811_u128; 4];
_33 = core::ptr::addr_of!(_46);
_18.0 = _22.0;
_41.3 = _39 as u32;
(*_20) = !_40;
_27.3 = [116693953777728776015426433298853671892_u128; 4];
_15 = '\u{77b85}' as i16;
_41.0 = _18.0;
(*RET) = (-791793028_i32) | 689146357_i32;
_11 = _15 << _14;
_13 = _22.2;
RET = _33;
_16.0 = _29.0 ^ _29.0;
Goto(bb21)
}
bb21 = {
Call(_48, bb22, dump_var(Move(_13), Move(_4), Move(_6), Move(_46)))
}
bb22 = {
Call(_48, bb23, dump_var(Move(_15), Move(_38), Move(_34), Move(_32)))
}
bb23 = {
Call(_48, bb24, dump_var(Move(_40), Move(_10), Move(_12), Move(_2)))
}
bb24 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: [i64; 7],mut _2: [u128; 4],mut _3: *mut (i8,),mut _4: isize) -> *mut u32 {
mir! {
type RET = *mut u32;
let _5: i16;
let _6: i32;
let _7: isize;
let _8: [i64; 7];
let _9: (u16,);
let _10: *const char;
let _11: [u32; 1];
let _12: f32;
let _13: *const f64;
let _14: [usize; 8];
let _15: u64;
let _16: [i64; 5];
let _17: ([f32; 5], u64);
let _18: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _19: *const i32;
let _20: i16;
let _21: u16;
let _22: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _23: (i64, *const i128, [i64; 7], u32);
let _24: *const [i64; 7];
let _25: isize;
let _26: *const i128;
let _27: isize;
let _28: *const i128;
let _29: (usize, i8, u16);
let _30: *const i32;
let _31: *mut (i8,);
let _32: (usize, i8, u16);
let _33: (i64, *const i128, [i64; 7], u32);
let _34: (i64, *const i128, [i64; 7], u32);
let _35: (u16,);
let _36: i64;
let _37: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _38: [bool; 5];
let _39: i128;
let _40: [i64; 5];
let _41: [u128; 4];
let _42: (usize, i8, u16);
let _43: *mut (i8,);
let _44: [usize; 8];
let _45: i16;
let _46: (u16,);
let _47: *const i32;
let _48: (i64, *const i128, [i64; 7], u32);
let _49: u64;
let _50: (u16,);
let _51: *const char;
let _52: *const f64;
let _53: *const *const u64;
let _54: ();
let _55: ();
{
(*_3) = (79_i8,);
(*_3).0 = (-465721339_i32) as i8;
_1 = [7634203369242958878_i64; 7];
(*_3) = (20_i8,);
(*_3).0 = 125_i8;
_5 = 163_u8 as i16;
(*_3) = ((-92_i8),);
_4 = (-9223372036854775808_isize);
Goto(bb1)
}
bb1 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb2 = {
(*_3) = ((-26_i8),);
_7 = 307743783920662054053026740864938509748_u128 as isize;
_6 = (-923186163_i32) & 155612243_i32;
_3 = core::ptr::addr_of_mut!((*_3));
_12 = -0_f32 - f32::INFINITY;
_12 = f32::INFINITY;
(*_3) = ((-22_i8),);
(*_3).0 = (-36_i8) * 21_i8;
Goto(bb3)
}
bb3 = {
_11 = [1859420741_u32; 1];
_5 = !22182_i16;
_3 = core::ptr::addr_of_mut!((*_3));
_7 = _4;
(*_3) = ((-76_i8),);
_9 = (45293_u16,);
_9 = (4232_u16,);
_14 = [2_usize; 8];
(*_3).0 = 107_i8 >> _9.0;
_5 = 20881_i16 - (-182_i16);
_7 = 1536178949_u32 as isize;
_16 = [(-4999665265018132818_i64); 5];
(*_3).0 = (-36_i8);
_9 = (44760_u16,);
_7 = _4 & _4;
_5 = -(-30352_i16);
_15 = 14916157215098722808_u64 * 9650321333535723259_u64;
_4 = _15 as isize;
_7 = false as isize;
_17.1 = 76_u8 as u64;
_5 = 6132646240851419613_i64 as i16;
_17.0 = [0.000000000000000000000000000000000000005990022645467543_f32; 5];
_2 = [86830942150820040105100991446064865931_u128; 4];
match (*_3).0 {
0 => bb4,
340282366920938463463374607431768211420 => bb6,
_ => bb5
}
}
bb4 = {
(*_3) = ((-26_i8),);
_7 = 307743783920662054053026740864938509748_u128 as isize;
_6 = (-923186163_i32) & 155612243_i32;
_3 = core::ptr::addr_of_mut!((*_3));
_12 = -0_f32 - f32::INFINITY;
_12 = f32::INFINITY;
(*_3) = ((-22_i8),);
(*_3).0 = (-36_i8) * 21_i8;
Goto(bb3)
}
bb5 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb6 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb7 = {
(*_3).0 = 198107658994574880557760426817944525789_u128 as i8;
(*_3) = ((-54_i8),);
(*_3) = ((-77_i8),);
_14 = [9777788709970866169_usize; 8];
(*_3).0 = (-77751780451369555833593357555825575951_i128) as i8;
_18.1 = [30956763985805252070149179166426417838_u128; 4];
Goto(bb8)
}
bb8 = {
_16 = [6997973331395007978_i64; 5];
(*_3).0 = _15 as i8;
_3 = core::ptr::addr_of_mut!(_18.0);
_9.0 = 27006_u16;
Goto(bb9)
}
bb9 = {
_23.2 = _8;
_15 = _17.1 % 5834516733930811861_u64;
_14 = [7_usize; 8];
_2 = [120873774559756790238992841232243527941_u128; 4];
_7 = 3168490443_u32 as isize;
_18.0.0 = (-18_i8) << _6;
_17.0 = [f32::NEG_INFINITY; 5];
_5 = 55_u8 as i16;
_23.3 = _9.0 as u32;
_4 = !_7;
_18.2 = -_5;
_2 = [157194922673770541506836746066440861302_u128; 4];
_9.0 = 51845_u16 << _7;
_22.4 = [0.000000000000000000000000000000000000007977971909285016_f32; 5];
Goto(bb10)
}
bb10 = {
_19 = core::ptr::addr_of!(_6);
_18.1 = [174835151043576608944083776805231129597_u128; 4];
_18.4 = [f32::NEG_INFINITY; 5];
_22 = _18;
_22.1 = [334342243999905459482930327811778926339_u128; 4];
_4 = !_7;
_17.1 = _15;
_7 = !_4;
Goto(bb11)
}
bb11 = {
_22.0.0 = !_18.0.0;
_29 = (17359003312060372277_usize, 103_i8, 43614_u16);
_3 = core::ptr::addr_of_mut!(_18.0);
_29.0 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001539737931437378_f64) as usize;
_24 = core::ptr::addr_of!(_23.2);
_22 = _18;
_25 = !_7;
_7 = false as isize;
_6 = (-612284555_i32);
_20 = _5 * _18.2;
_18.0.0 = 10759311985054932146292917543486373469_u128 as i8;
_29 = (5968822802930739262_usize, 53_i8, 7855_u16);
_27 = !_4;
match _6 {
0 => bb1,
1 => bb12,
2 => bb13,
3 => bb14,
4 => bb15,
5 => bb16,
340282366920938463463374607431155926901 => bb18,
_ => bb17
}
}
bb12 = {
_19 = core::ptr::addr_of!(_6);
_18.1 = [174835151043576608944083776805231129597_u128; 4];
_18.4 = [f32::NEG_INFINITY; 5];
_22 = _18;
_22.1 = [334342243999905459482930327811778926339_u128; 4];
_4 = !_7;
_17.1 = _15;
_7 = !_4;
Goto(bb11)
}
bb13 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb14 = {
_11 = [1859420741_u32; 1];
_5 = !22182_i16;
_3 = core::ptr::addr_of_mut!((*_3));
_7 = _4;
(*_3) = ((-76_i8),);
_9 = (45293_u16,);
_9 = (4232_u16,);
_14 = [2_usize; 8];
(*_3).0 = 107_i8 >> _9.0;
_5 = 20881_i16 - (-182_i16);
_7 = 1536178949_u32 as isize;
_16 = [(-4999665265018132818_i64); 5];
(*_3).0 = (-36_i8);
_9 = (44760_u16,);
_7 = _4 & _4;
_5 = -(-30352_i16);
_15 = 14916157215098722808_u64 * 9650321333535723259_u64;
_4 = _15 as isize;
_7 = false as isize;
_17.1 = 76_u8 as u64;
_5 = 6132646240851419613_i64 as i16;
_17.0 = [0.000000000000000000000000000000000000005990022645467543_f32; 5];
_2 = [86830942150820040105100991446064865931_u128; 4];
match (*_3).0 {
0 => bb4,
340282366920938463463374607431768211420 => bb6,
_ => bb5
}
}
bb15 = {
(*_3).0 = 198107658994574880557760426817944525789_u128 as i8;
(*_3) = ((-54_i8),);
(*_3) = ((-77_i8),);
_14 = [9777788709970866169_usize; 8];
(*_3).0 = (-77751780451369555833593357555825575951_i128) as i8;
_18.1 = [30956763985805252070149179166426417838_u128; 4];
Goto(bb8)
}
bb16 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb17 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb18 = {
_30 = core::ptr::addr_of!(_6);
_34.2 = (*_24);
_21 = _9.0 / 5663_u16;
_37.0 = _18.0;
_29.1 = _18.0.0 ^ (*_3).0;
_18.4 = [0_f32; 5];
_15 = _17.1 / 13241363158205948282_u64;
_4 = (*_30) as isize;
_16 = [(-5847947308558650891_i64); 5];
(*_19) = 1131364968_i32 * (-682624727_i32);
_23.0 = _5 as i64;
match _29.0 {
0 => bb7,
1 => bb19,
2 => bb20,
3 => bb21,
4 => bb22,
5 => bb23,
5968822802930739262 => bb25,
_ => bb24
}
}
bb19 = {
(*_3) = ((-26_i8),);
_7 = 307743783920662054053026740864938509748_u128 as isize;
_6 = (-923186163_i32) & 155612243_i32;
_3 = core::ptr::addr_of_mut!((*_3));
_12 = -0_f32 - f32::INFINITY;
_12 = f32::INFINITY;
(*_3) = ((-22_i8),);
(*_3).0 = (-36_i8) * 21_i8;
Goto(bb3)
}
bb20 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb21 = {
(*_3).0 = 198107658994574880557760426817944525789_u128 as i8;
(*_3) = ((-54_i8),);
(*_3) = ((-77_i8),);
_14 = [9777788709970866169_usize; 8];
(*_3).0 = (-77751780451369555833593357555825575951_i128) as i8;
_18.1 = [30956763985805252070149179166426417838_u128; 4];
Goto(bb8)
}
bb22 = {
(*_3).0 = 198107658994574880557760426817944525789_u128 as i8;
(*_3) = ((-54_i8),);
(*_3) = ((-77_i8),);
_14 = [9777788709970866169_usize; 8];
(*_3).0 = (-77751780451369555833593357555825575951_i128) as i8;
_18.1 = [30956763985805252070149179166426417838_u128; 4];
Goto(bb8)
}
bb23 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb24 = {
_19 = core::ptr::addr_of!(_6);
_18.1 = [174835151043576608944083776805231129597_u128; 4];
_18.4 = [f32::NEG_INFINITY; 5];
_22 = _18;
_22.1 = [334342243999905459482930327811778926339_u128; 4];
_4 = !_7;
_17.1 = _15;
_7 = !_4;
Goto(bb11)
}
bb25 = {
_34.3 = true as u32;
_22.0 = _18.0;
_33.0 = _23.0;
_34.0 = _23.0 * _33.0;
_18 = _22;
_28 = core::ptr::addr_of!(_39);
(*_28) = (-15093994818927031420727589062221166063_i128) & (-9347983399575822261934890314396842137_i128);
_18.2 = _23.3 as i16;
_32.1 = (*_3).0;
_38 = [true; 5];
_12 = -f32::INFINITY;
(*_24) = _34.2;
match _29.0 {
5968822802930739262 => bb27,
_ => bb26
}
}
bb26 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb27 = {
_17.0 = [0_f32; 5];
_33.1 = core::ptr::addr_of!((*_28));
_18.2 = (*_3).0 as i16;
_44 = [3948947775915955333_usize; 8];
(*_28) = 9934452063042496257588523946740388782_i128 >> _37.0.0;
(*_3) = _22.0;
_42.1 = '\u{ca8fd}' as i8;
_17.1 = _15 & _15;
(*_28) = -(-92286400080435913726071214645082051723_i128);
_22.3 = [157051799847200320225588310452058319166_u128; 4];
_32.0 = _29.0;
_33.3 = _23.3 & _34.3;
_24 = core::ptr::addr_of!(_23.2);
_46.0 = _21;
_6 = -1397114470_i32;
_37.3 = [337780011846776238184643971288764085568_u128; 4];
match _32.0 {
0 => bb28,
1 => bb29,
2 => bb30,
5968822802930739262 => bb32,
_ => bb31
}
}
bb28 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb29 = {
_15 = !_17.1;
_16 = [8450895410599850060_i64; 5];
_9.0 = 188_u8 as u16;
_14 = [7_usize; 8];
_18.1 = [4119052310429890139111678404725431291_u128; 4];
_7 = _4 + _4;
_7 = 2_usize as isize;
_3 = core::ptr::addr_of_mut!(_18.0);
_18.3 = [19849680019174070807948264142809075605_u128; 4];
_3 = core::ptr::addr_of_mut!((*_3));
(*_3) = ((-31_i8),);
_5 = 29814_i16 ^ 5500_i16;
_2 = [50088249771429284620220118368229263238_u128; 4];
_18.0 = ((-28_i8),);
(*_3).0 = (-120_i8);
_17.0 = [(-0.000000000000000000000000000000000000010714965649028819_f32); 5];
Call((*_3), bb7, fn17(_17.0, _4, _12, _8, _7, _17.0, _1, _14, _18.1, _8, _12, _5, _2))
}
bb30 = {
_11 = [1859420741_u32; 1];
_5 = !22182_i16;
_3 = core::ptr::addr_of_mut!((*_3));
_7 = _4;
(*_3) = ((-76_i8),);
_9 = (45293_u16,);
_9 = (4232_u16,);
_14 = [2_usize; 8];
(*_3).0 = 107_i8 >> _9.0;
_5 = 20881_i16 - (-182_i16);
_7 = 1536178949_u32 as isize;
_16 = [(-4999665265018132818_i64); 5];
(*_3).0 = (-36_i8);
_9 = (44760_u16,);
_7 = _4 & _4;
_5 = -(-30352_i16);
_15 = 14916157215098722808_u64 * 9650321333535723259_u64;
_4 = _15 as isize;
_7 = false as isize;
_17.1 = 76_u8 as u64;
_5 = 6132646240851419613_i64 as i16;
_17.0 = [0.000000000000000000000000000000000000005990022645467543_f32; 5];
_2 = [86830942150820040105100991446064865931_u128; 4];
match (*_3).0 {
0 => bb4,
340282366920938463463374607431768211420 => bb6,
_ => bb5
}
}
bb31 = {
_6 = 660000140_i32 << (*_3).0;
_5 = !8881_i16;
(*_3) = (29_i8,);
_1 = [(-1189942363054934828_i64); 7];
_7 = _4;
_5 = (-32189_i16);
_1 = [7149670698073669443_i64; 7];
_5 = !30272_i16;
_2 = [91517482362666656359425078899162319349_u128; 4];
(*_3) = ((-82_i8),);
_9.0 = !18437_u16;
_8 = _1;
_4 = _7 >> _9.0;
(*_3) = ((-78_i8),);
_2 = [275115532189886914340860232113927438491_u128; 4];
(*_3).0 = (-119_i8) << _6;
(*_3).0 = (-9_i8);
_11 = [2895778484_u32; 1];
_9.0 = !32486_u16;
_5 = 9462_i16 * 10924_i16;
(*_3).0 = true as i8;
_8 = _1;
_9 = (23698_u16,);
Call(_4, bb2, core::intrinsics::bswap(_7))
}
bb32 = {
_14 = [3_usize; 8];
_42.2 = !_46.0;
_4 = !_25;
_31 = _3;
_36 = _23.0 * _34.0;
_49 = 231743456439801326150847052704402071881_u128 as u64;
_9.0 = _21;
match _32.0 {
0 => bb12,
1 => bb15,
2 => bb24,
3 => bb18,
4 => bb33,
5968822802930739262 => bb35,
_ => bb34
}
}
bb33 = {
_23.2 = _8;
_15 = _17.1 % 5834516733930811861_u64;
_14 = [7_usize; 8];
_2 = [120873774559756790238992841232243527941_u128; 4];
_7 = 3168490443_u32 as isize;
_18.0.0 = (-18_i8) << _6;
_17.0 = [f32::NEG_INFINITY; 5];
_5 = 55_u8 as i16;
_23.3 = _9.0 as u32;
_4 = !_7;
_18.2 = -_5;
_2 = [157194922673770541506836746066440861302_u128; 4];
_9.0 = 51845_u16 << _7;
_22.4 = [0.000000000000000000000000000000000000007977971909285016_f32; 5];
Goto(bb10)
}
bb34 = {
(*_3) = ((-26_i8),);
_7 = 307743783920662054053026740864938509748_u128 as isize;
_6 = (-923186163_i32) & 155612243_i32;
_3 = core::ptr::addr_of_mut!((*_3));
_12 = -0_f32 - f32::INFINITY;
_12 = f32::INFINITY;
(*_3) = ((-22_i8),);
(*_3).0 = (-36_i8) * 21_i8;
Goto(bb3)
}
bb35 = {
_34.1 = core::ptr::addr_of!(_39);
(*_19) = 1576592103_i32 * 41216762_i32;
_1 = (*_24);
_12 = _9.0 as f32;
_29.2 = _23.0 as u16;
_33.1 = core::ptr::addr_of!((*_28));
_43 = core::ptr::addr_of_mut!(_37.0);
(*_30) = (-263250917_i32) * (-433101246_i32);
_23.0 = !_33.0;
_33.2 = _8;
_48.0 = _33.0 & _33.0;
(*_3) = _37.0;
_37.4 = [f32::NAN; 5];
RET = core::ptr::addr_of_mut!(_48.3);
_33.3 = (*_28) as u32;
Goto(bb36)
}
bb36 = {
Call(_54, bb37, dump_var(Move(_11), Move(_8), Move(_1), Move(_25)))
}
bb37 = {
Call(_54, bb38, dump_var(Move(_9), Move(_21), Move(_27), Move(_7)))
}
bb38 = {
Call(_54, bb39, dump_var(Move(_6), Move(_2), Move(_29), _55))
}
bb39 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn17(mut _1: [f32; 5],mut _2: isize,mut _3: f32,mut _4: [i64; 7],mut _5: isize,mut _6: [f32; 5],mut _7: [i64; 7],mut _8: [usize; 8],mut _9: [u128; 4],mut _10: [i64; 7],mut _11: f32,mut _12: i16,mut _13: [u128; 4]) -> (i8,) {
mir! {
type RET = (i8,);
let _14: ([f32; 5], u64);
let _15: *const i32;
let _16: u64;
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: u32;
let _19: (*mut u32,);
let _20: *const [i64; 7];
let _21: *const *const i128;
let _22: u32;
let _23: ();
let _24: ();
{
RET = (76_i8,);
_1 = [0_f32; 5];
_9 = [51247887137365585219694525871239692153_u128; 4];
_12 = !(-26145_i16);
_9 = [276817639693791878923894215256329995126_u128; 4];
_9 = [58420448048388075790598203338751420056_u128; 4];
_9 = [109005480693390584030022845445482522169_u128; 4];
_14.0 = [-0_f32; 5];
RET.0 = -92_i8;
_4 = _7;
RET.0 = !36_i8;
_12 = (-3577_i16) & (-30745_i16);
_4 = _10;
_13 = [48039771067006510198774194347904298908_u128; 4];
_1 = [f32::NEG_INFINITY; 5];
RET = ((-117_i8),);
_14.1 = 1692427049_u32 as u64;
_7 = _4;
_2 = !_5;
_10 = _7;
match RET.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
340282366920938463463374607431768211339 => bb7,
_ => bb6
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_12 = 235_u8 as i16;
_4 = _10;
_2 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000896562365455998_f64) as isize;
_12 = 4066_i16 & (-26635_i16);
_7 = _10;
_10 = _4;
_17.2 = 6243_u16 as i16;
_17.0 = RET;
Call(_17.2, bb8, core::intrinsics::bswap(_12))
}
bb8 = {
_17.2 = _12 & _12;
_19.0 = core::ptr::addr_of_mut!(_18);
_17.4 = [0_f32; 5];
_7 = _10;
_8 = [4_usize; 8];
_4 = _7;
_14.0 = [0_f32; 5];
_4 = _10;
match _17.0.0 {
0 => bb3,
1 => bb5,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
6 => bb13,
340282366920938463463374607431768211339 => bb15,
_ => bb14
}
}
bb9 = {
_12 = 235_u8 as i16;
_4 = _10;
_2 = (-0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000896562365455998_f64) as isize;
_12 = 4066_i16 & (-26635_i16);
_7 = _10;
_10 = _4;
_17.2 = 6243_u16 as i16;
_17.0 = RET;
Call(_17.2, bb8, core::intrinsics::bswap(_12))
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
Return()
}
bb15 = {
_17.3 = [123253752864066854265232033965207618992_u128; 4];
_17.0 = RET;
_12 = -_17.2;
RET = _17.0;
_17.1 = [319661395878059965732920198106249275431_u128; 4];
_22 = 2756694852_u32 | 3841975671_u32;
Goto(bb16)
}
bb16 = {
Call(_23, bb17, dump_var(Move(_4), Move(_9), Move(_8), Move(_5)))
}
bb17 = {
Call(_23, bb18, dump_var(Move(_13), _24, _24, _24))
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18(mut _1: isize,mut _2: [i64; 7],mut _3: u64,mut _4: *mut u32,mut _5: [i64; 7],mut _6: i16,mut _7: [i64; 7],mut _8: [i64; 7],mut _9: [u32; 1]) -> (usize, i8, u16) {
mir! {
type RET = (usize, i8, u16);
let _10: u8;
let _11: [i64; 5];
let _12: (i64, *const i128, [i64; 7], u32);
let _13: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _14: u32;
let _15: i128;
let _16: u32;
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: [i64; 5];
let _19: u64;
let _20: *const char;
let _21: *const i128;
let _22: (i8,);
let _23: usize;
let _24: *mut ([i64; 7], [usize; 8]);
let _25: ();
let _26: ();
{
RET.0 = 8557806304763688944_usize;
RET.1 = (-40_i8);
Call(RET.0, bb1, core::intrinsics::bswap(2_usize))
}
bb1 = {
RET.2 = _1 as u16;
RET = (2_usize, (-23_i8), 53221_u16);
_3 = !9608593037759751292_u64;
_10 = !237_u8;
_2 = _7;
RET.2 = _1 as u16;
_1 = 126_isize ^ 56_isize;
RET.0 = !4632219083673967212_usize;
_7 = _5;
RET.1 = _10 as i8;
_2 = _7;
_4 = core::ptr::addr_of_mut!((*_4));
RET.2 = 3572_u16;
_2 = _5;
_7 = _2;
Call(RET.1, bb2, core::intrinsics::bswap((-92_i8)))
}
bb2 = {
_10 = f32::NAN as u8;
_10 = !35_u8;
_2 = _7;
RET.0 = 653046477924542782_usize;
RET.0 = !0_usize;
_8 = _5;
_6 = (-20138_i16);
_7 = _8;
_3 = _10 as u64;
RET.0 = !1_usize;
RET.2 = 51682_u16 & 31118_u16;
_6 = 738339959_i32 as i16;
_3 = !11986335383504435013_u64;
RET = (14031785802589152420_usize, 43_i8, 1804_u16);
_6 = (*_4) as i16;
match RET.0 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
14031785802589152420 => bb11,
_ => bb10
}
}
bb3 = {
RET.2 = _1 as u16;
RET = (2_usize, (-23_i8), 53221_u16);
_3 = !9608593037759751292_u64;
_10 = !237_u8;
_2 = _7;
RET.2 = _1 as u16;
_1 = 126_isize ^ 56_isize;
RET.0 = !4632219083673967212_usize;
_7 = _5;
RET.1 = _10 as i8;
_2 = _7;
_4 = core::ptr::addr_of_mut!((*_4));
RET.2 = 3572_u16;
_2 = _5;
_7 = _2;
Call(RET.1, bb2, core::intrinsics::bswap((-92_i8)))
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_2 = _5;
(*_4) = 4052730600_u32;
RET.0 = 3053694056013939378_usize + 4_usize;
RET.0 = 1_usize;
RET = (7_usize, (-20_i8), 14385_u16);
_12.2 = _7;
_5 = _2;
_6 = !(-22240_i16);
_3 = 9056412003030925649_u64;
_12.3 = (*_4);
_13.0 = (115_i8,);
_11 = [(-5840403682831416767_i64); 5];
RET = (2_usize, (-125_i8), 44520_u16);
_13.1 = [45496483443688686566165462565617842822_u128; 4];
_7 = _8;
RET = (1_usize, (-18_i8), 30731_u16);
_13.4 = [f32::INFINITY; 5];
_4 = core::ptr::addr_of_mut!(_12.3);
_4 = core::ptr::addr_of_mut!((*_4));
_13.1 = [106534235100400223168808392997409028538_u128; 4];
_5 = _12.2;
_13.2 = -_6;
Goto(bb12)
}
bb12 = {
_15 = -(-148714584646896109340092311080326066302_i128);
_7 = _12.2;
_13.1 = [205606759959583062971296256028821268748_u128; 4];
RET.2 = 18764_u16 + 50950_u16;
_3 = 6754841511858111416_u64;
_3 = RET.1 as u64;
RET.2 = 59981_u16;
RET.1 = !28_i8;
_13.3 = [3463178713269631738288683621390852806_u128; 4];
_14 = RET.2 as u32;
_17.2 = -_6;
RET.0 = 14938986498783201394_usize >> (*_4);
_13.4 = [0_f32; 5];
(*_4) = _14;
_17.3 = [269863320235280911712824228600443217294_u128; 4];
_13.4 = [(-0.000000000000000000000000000000000000009973207925116978_f32); 5];
_6 = !_17.2;
_13.4 = [(-0.000000000000000000000000000000000000005389594279473645_f32); 5];
RET = (11370905753339014828_usize, 86_i8, 48061_u16);
_15 = _10 as i128;
RET.1 = !(-34_i8);
Goto(bb13)
}
bb13 = {
_18 = [(-5593005133130214403_i64); 5];
_19 = RET.2 as u64;
RET.2 = 64455_u16;
_12.1 = core::ptr::addr_of!(_15);
_17 = _13;
_13 = _17;
_2 = _8;
_7 = _12.2;
RET = (6_usize, (-87_i8), 23411_u16);
_17.2 = _6 * _6;
RET.1 = !(-77_i8);
RET.2 = 33923_u16 << RET.0;
RET.2 = 38653_u16;
_17.3 = [279500377649029660279283227504715549424_u128; 4];
_13.0.0 = RET.1;
RET.0 = 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001367458520337106_f64 as usize;
(*_4) = _10 as u32;
_17.0.0 = !RET.1;
_13.4 = [0_f32; 5];
(*_4) = true as u32;
_17.0.0 = -_13.0.0;
_18 = [(-5789960512852453348_i64); 5];
_12.1 = core::ptr::addr_of!(_15);
_9 = [3480250789_u32; 1];
_17.1 = [217933976058539152353617921823024369174_u128; 4];
(*_4) = _14 | _14;
match RET.2 {
0 => bb1,
1 => bb11,
2 => bb3,
3 => bb5,
4 => bb14,
38653 => bb16,
_ => bb15
}
}
bb14 = {
_15 = -(-148714584646896109340092311080326066302_i128);
_7 = _12.2;
_13.1 = [205606759959583062971296256028821268748_u128; 4];
RET.2 = 18764_u16 + 50950_u16;
_3 = 6754841511858111416_u64;
_3 = RET.1 as u64;
RET.2 = 59981_u16;
RET.1 = !28_i8;
_13.3 = [3463178713269631738288683621390852806_u128; 4];
_14 = RET.2 as u32;
_17.2 = -_6;
RET.0 = 14938986498783201394_usize >> (*_4);
_13.4 = [0_f32; 5];
(*_4) = _14;
_17.3 = [269863320235280911712824228600443217294_u128; 4];
_13.4 = [(-0.000000000000000000000000000000000000009973207925116978_f32); 5];
_6 = !_17.2;
_13.4 = [(-0.000000000000000000000000000000000000005389594279473645_f32); 5];
RET = (11370905753339014828_usize, 86_i8, 48061_u16);
_15 = _10 as i128;
RET.1 = !(-34_i8);
Goto(bb13)
}
bb15 = {
Return()
}
bb16 = {
_22.0 = _13.0.0;
_12.0 = -(-206534458947605412_i64);
RET.0 = 296959612864263620097396375709180385348_u128 as usize;
RET.1 = _22.0;
RET = (3_usize, 93_i8, 61362_u16);
_13.2 = -_17.2;
RET.1 = !_17.0.0;
_3 = !_19;
_18 = [7962703871917557683_i64; 5];
_14 = _1 as u32;
_22 = _13.0;
_13.0 = _17.0;
_13.1 = [138947090855437877525380703385068925309_u128; 4];
_8 = _5;
_1 = -9223372036854775807_isize;
Goto(bb17)
}
bb17 = {
Call(_25, bb18, dump_var(Move(_15), Move(_8), Move(_19), Move(_9)))
}
bb18 = {
Call(_25, bb19, dump_var(Move(_5), Move(_10), Move(_7), _26))
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: [bool; 5],mut _2: [usize; 8],mut _3: *mut u32,mut _4: isize,mut _5: [i64; 7],mut _6: *const char,mut _7: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]),mut _8: *mut (i8,),mut _9: *mut ([i64; 7], [usize; 8]),mut _10: [bool; 5],mut _11: [i64; 7],mut _12: (i8,),mut _13: *mut u32) -> [i64; 7] {
mir! {
type RET = [i64; 7];
let _14: *const u64;
let _15: (i8,);
let _16: (i64, *const i128, [i64; 7], u32);
let _17: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _18: ((i8,), [u128; 4], i16, [u128; 4], [f32; 5]);
let _19: u128;
let _20: (*mut u32,);
let _21: i32;
let _22: *const i32;
let _23: i8;
let _24: u64;
let _25: ([i64; 7], [usize; 8]);
let _26: u64;
let _27: [u128; 4];
let _28: *const u128;
let _29: u64;
let _30: u64;
let _31: (i64, *const i128, [i64; 7], u32);
let _32: [u128; 4];
let _33: (usize, i8, u16);
let _34: *mut (i8,);
let _35: u64;
let _36: (usize, i8, u16);
let _37: [i64; 7];
let _38: u64;
let _39: *mut u32;
let _40: u64;
let _41: u32;
let _42: *const [i64; 7];
let _43: u64;
let _44: *mut (i8,);
let _45: [u32; 1];
let _46: u64;
let _47: *mut ([i64; 7], [usize; 8]);
let _48: *mut ([i64; 7], [usize; 8]);
let _49: ();
let _50: ();
{
(*_6) = '\u{26240}';
(*_9).1 = [41097712692492133_usize; 8];
(*_9).0 = _5;
_7.1 = [232095594511137312899911175321458940418_u128; 4];
_5 = _11;
_15 = (*_8);
RET = (*_9).0;
_7.1 = [151065921061651418827323176018577964795_u128; 4];
_6 = core::ptr::addr_of!((*_6));
RET = _11;
(*_3) = !(*_13);
_17.3 = [40885087730749850776753591173164582393_u128; 4];
_8 = core::ptr::addr_of_mut!(_15);
_17.3 = [335348439156727485572755530330686641529_u128; 4];
_17.4 = [(-0.000000000000000000000000000000000000006052111377824847_f32); 5];
_17.2 = '\u{73fe6}' as i16;
_17 = _7;
_18 = _7;
_17.1 = [6501718544166997330722345182112574805_u128; 4];
_18.4 = [f32::NAN; 5];
(*_3) = (*_13) + (*_13);
(*_13) = 3632954812292555017_u64 as u32;
Call((*_3), bb1, core::intrinsics::bswap((*_13)))
}
bb1 = {
_17.0.0 = _12.0 & _18.0.0;
_2 = [6_usize; 8];
_18.0 = (*_8);
_9 = core::ptr::addr_of_mut!((*_9));
_12 = _15;
_15.0 = 13434_u16 as i8;
(*_6) = '\u{84a71}';
(*_8) = _17.0;
_21 = f64::INFINITY as i32;
_7.4 = [0_f32; 5];
(*_13) = (*_3);
(*_13) = (*_3);
_4 = (-9223372036854775808_isize);
_23 = _17.0.0;
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_23 = !_17.0.0;
(*_8).0 = 57_u8 as i8;
_16.2 = _5;
(*_6) = '\u{6fb6d}';
_22 = core::ptr::addr_of!(_21);
_19 = 145607892451055514335816733996206091122_i128 as u128;
_18.0.0 = _23;
_25.1 = [3282074192431765601_usize; 8];
_18.0 = _17.0;
_25.0 = (*_9).0;
_18.1 = [109811987503552225146942404006107454720_u128; 4];
_19 = !280973485979532371450424353919196354735_u128;
_2 = [12566122296274899098_usize; 8];
_24 = (*_13) as u64;
_16.2 = RET;
_7.0 = _17.0;
_7.0.0 = _12.0 - _12.0;
(*_6) = '\u{4fc17}';
_22 = core::ptr::addr_of!(_21);
_19 = f32::NAN as u128;
_16.0 = 6957945566528045422_i64;
_14 = core::ptr::addr_of!(_26);
_17.1 = [312398420402426360907350120147189437357_u128; 4];
_3 = _13;
_12 = _7.0;
Goto(bb11)
}
bb11 = {
_18.2 = _7.2;
_9 = core::ptr::addr_of_mut!((*_9));
_7.3 = [228381348843374300534686063765598237307_u128; 4];
RET = (*_9).0;
(*_22) = 123602658561984600290872770939724325265_i128 as i32;
RET = _25.0;
_27 = [51435897270430871011176174697554064367_u128; 4];
_7.0.0 = _18.0.0 & _12.0;
_18.0.0 = _7.0.0;
_25.0 = _11;
match _4 {
0 => bb1,
1 => bb9,
340282366920938463454151235394913435648 => bb13,
_ => bb12
}
}
bb12 = {
_17.0.0 = _12.0 & _18.0.0;
_2 = [6_usize; 8];
_18.0 = (*_8);
_9 = core::ptr::addr_of_mut!((*_9));
_12 = _15;
_15.0 = 13434_u16 as i8;
(*_6) = '\u{84a71}';
(*_8) = _17.0;
_21 = f64::INFINITY as i32;
_7.4 = [0_f32; 5];
(*_13) = (*_3);
(*_13) = (*_3);
_4 = (-9223372036854775808_isize);
_23 = _17.0.0;
match _4 {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
340282366920938463454151235394913435648 => bb10,
_ => bb9
}
}
bb13 = {
_12 = _7.0;
(*_9) = _25;
_7.1 = [266591926839339811124757344100204139367_u128; 4];
_20.0 = core::ptr::addr_of_mut!((*_3));
_31.3 = (*_13) + (*_3);
(*_14) = _24;
_1 = [false; 5];
_24 = (*_13) as u64;
_10 = [true; 5];
(*_22) = (-1642167100_i32);
_23 = _12.0;
_14 = core::ptr::addr_of!(_29);
_29 = _26 | _26;
_25.1 = [4_usize; 8];
match (*_22) {
0 => bb10,
1 => bb7,
2 => bb14,
3 => bb15,
340282366920938463463374607430126044356 => bb17,
_ => bb16
}
}
bb14 = {
Return()
}
bb15 = {
Return()
}
bb16 = {
_23 = !_17.0.0;
(*_8).0 = 57_u8 as i8;
_16.2 = _5;
(*_6) = '\u{6fb6d}';
_22 = core::ptr::addr_of!(_21);
_19 = 145607892451055514335816733996206091122_i128 as u128;
_18.0.0 = _23;
_25.1 = [3282074192431765601_usize; 8];
_18.0 = _17.0;
_25.0 = (*_9).0;
_18.1 = [109811987503552225146942404006107454720_u128; 4];
_19 = !280973485979532371450424353919196354735_u128;
_2 = [12566122296274899098_usize; 8];
_24 = (*_13) as u64;
_16.2 = RET;
_7.0 = _17.0;
_7.0.0 = _12.0 - _12.0;
(*_6) = '\u{4fc17}';
_22 = core::ptr::addr_of!(_21);
_19 = f32::NAN as u128;
_16.0 = 6957945566528045422_i64;
_14 = core::ptr::addr_of!(_26);
_17.1 = [312398420402426360907350120147189437357_u128; 4];
_3 = _13;
_12 = _7.0;
Goto(bb11)
}
bb17 = {
(*_9).0 = _16.2;
_23 = '\u{d44e9}' as i8;
_25.1 = [6040140196653198571_usize; 8];
_22 = core::ptr::addr_of!((*_22));
(*_8).0 = 232_u8 as i8;
_17.2 = _4 as i16;
_18.0 = _12;
_31.3 = (*_13);
_17.1 = [393133474366891818780384310314659708_u128; 4];
_16.2 = _25.0;
(*_13) = !_31.3;
_37 = (*_9).0;
_39 = core::ptr::addr_of_mut!((*_13));
_40 = (*_14);
_7 = _17;
_43 = _40;
_33 = (5_usize, (-24_i8), 4991_u16);
_22 = core::ptr::addr_of!(_21);
_5 = RET;
_25 = (*_9);
_46 = _26 * _40;
_29 = _4 as u64;
Goto(bb18)
}
bb18 = {
Call(_49, bb19, dump_var(Move(_37), Move(_40), Move(_12), Move(_29)))
}
bb19 = {
Call(_49, bb20, dump_var(Move(_24), Move(_2), Move(_19), Move(_27)))
}
bb20 = {
Call(_49, bb21, dump_var(Move(_25), Move(_1), _50, _50))
}
bb21 = {
Return()
}

}
}
pub fn main() {
                println!("{:?}", fn0(std::hint::black_box(3166658568017798892_i64), std::hint::black_box([(-0.000000000000000000000000000000000000009714055991020139_f32); 5]), std::hint::black_box(38929_u16)));
                
                unsafe {
                    println!("hash: {}", H.finish());
                }
            
            }
