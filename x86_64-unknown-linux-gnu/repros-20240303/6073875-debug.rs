#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: u128,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: u32,mut _8: i128,mut _9: u64,mut _10: u8) -> isize {
mir! {
type RET = isize;
let _11: &'static f64;
let _12: i16;
let _13: (((u16, i8), [u16; 8]), (u16, i8));
let _14: bool;
let _15: i128;
let _16: [u16; 8];
let _17: (((u16, i8), [u16; 8]), (u16, i8));
let _18: &'static mut f32;
let _19: &'static mut u64;
let _20: char;
let _21: isize;
let _22: isize;
let _23: (i16, *mut i32, char);
let _24: ((u16, i8), [u16; 8]);
let _25: isize;
let _26: &'static bool;
let _27: char;
let _28: u8;
let _29: (((u16, i8), [u16; 8]), (u16, i8));
let _30: bool;
let _31: usize;
let _32: isize;
let _33: ();
let _34: ();
{
_4 = true as i8;
_7 = !3081013361_u32;
_1 = true;
_6 = (-873338903_i32);
_10 = 25_u8;
_9 = 3163091763415833325_u64;
Goto(bb1)
}
bb1 = {
RET = -119_isize;
_12 = !(-2912_i16);
_2 = !170582737825996780494678458021543383543_u128;
_7 = 103776060_u32;
_13.1 = (42683_u16, _4);
_4 = (-48507321919675720652703874060081649375_i128) as i8;
_9 = 16098222562759494275_u64;
_4 = _12 as i8;
_13.1.1 = _4;
_1 = !false;
_13.0.1 = [_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0];
_13.0.0 = (_13.1.0, _13.1.1);
_12 = 5233_i16 | (-1980_i16);
Call(_9 = fn1(_13.0, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_9 = !15531591163669946808_u64;
_2 = !154581123613828433726193962234878929007_u128;
_6 = '\u{50a5}' as i32;
_13.0.1 = [_13.0.0.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.0.0.0,_13.0.0.0];
_10 = !130_u8;
_3 = RET;
_13.0.0 = (_13.1.0, _13.1.1);
_14 = _1;
_7 = _1 as u32;
_13.1 = (_13.0.0.0, _13.0.0.1);
_2 = 190146651490642712716770358738871799013_u128;
RET = _3 * _3;
RET = _10 as isize;
_13.0.1 = [_13.0.0.0,_13.1.0,_13.0.0.0,_13.1.0,_13.0.0.0,_13.1.0,_13.0.0.0,_13.0.0.0];
_7 = !3914068844_u32;
_1 = _14 ^ _14;
_5 = _12;
_5 = _12;
_8 = (-141887968435237975207286548072314379430_i128) + (-160967294839543677546184582054634060007_i128);
_13.1 = _13.0.0;
match _2 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
190146651490642712716770358738871799013 => bb9,
_ => bb8
}
}
bb3 = {
RET = -119_isize;
_12 = !(-2912_i16);
_2 = !170582737825996780494678458021543383543_u128;
_7 = 103776060_u32;
_13.1 = (42683_u16, _4);
_4 = (-48507321919675720652703874060081649375_i128) as i8;
_9 = 16098222562759494275_u64;
_4 = _12 as i8;
_13.1.1 = _4;
_1 = !false;
_13.0.1 = [_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0];
_13.0.0 = (_13.1.0, _13.1.1);
_12 = 5233_i16 | (-1980_i16);
Call(_9 = fn1(_13.0, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
_3 = RET;
_15 = _8;
_12 = !_5;
_13.0.0.1 = _4 << _13.0.0.0;
_17.0 = (_13.0.0, _13.0.1);
_13.0.0.1 = _4 - _17.0.0.1;
_10 = 192_u8 ^ 224_u8;
_17.1.1 = !_13.0.0.1;
_13.0.0.1 = _14 as i8;
_4 = _17.1.1 >> _17.1.1;
_12 = _5 | _5;
_13.0.0.0 = '\u{c2153}' as u16;
_4 = _13.1.1;
_16 = [_13.1.0,_13.1.0,_13.1.0,_13.1.0,_17.0.0.0,_13.1.0,_17.0.0.0,_17.0.0.0];
match _17.0.0.0 {
0 => bb10,
42683 => bb12,
_ => bb11
}
}
bb10 = {
Return()
}
bb11 = {
RET = -119_isize;
_12 = !(-2912_i16);
_2 = !170582737825996780494678458021543383543_u128;
_7 = 103776060_u32;
_13.1 = (42683_u16, _4);
_4 = (-48507321919675720652703874060081649375_i128) as i8;
_9 = 16098222562759494275_u64;
_4 = _12 as i8;
_13.1.1 = _4;
_1 = !false;
_13.0.1 = [_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0,_13.1.0];
_13.0.0 = (_13.1.0, _13.1.1);
_12 = 5233_i16 | (-1980_i16);
Call(_9 = fn1(_13.0, _2), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_13.0.1 = [_13.1.0,_13.1.0,_17.0.0.0,_13.1.0,_17.0.0.0,_17.0.0.0,_13.1.0,_17.0.0.0];
_13.0.0.0 = !_17.0.0.0;
_15 = -_8;
_17.0 = (_13.1, _16);
_17.0.1 = [_17.0.0.0,_13.0.0.0,_13.0.0.0,_13.0.0.0,_13.0.0.0,_13.1.0,_17.0.0.0,_17.0.0.0];
_17.1.0 = _5 as u16;
_12 = _8 as i16;
_23.0 = -_5;
_7 = 3174990881_u32;
_20 = '\u{306d2}';
RET = _3 | _3;
_24.1 = [_17.0.0.0,_17.0.0.0,_17.0.0.0,_13.1.0,_17.1.0,_13.0.0.0,_13.0.0.0,_13.0.0.0];
RET = !_3;
_4 = -_17.0.0.1;
_17.0.1 = [_13.1.0,_13.1.0,_13.1.0,_17.0.0.0,_17.1.0,_13.0.0.0,_13.0.0.0,_13.1.0];
_23.2 = _20;
_13.0.0.0 = _17.0.0.0;
_17.0.0 = (_13.1.0, _17.1.1);
_17.0 = (_17.1, _13.0.1);
_23.2 = _20;
_17 = (_13.0, _13.0.0);
_4 = _17.1.1;
Goto(bb13)
}
bb13 = {
_22 = _2 as isize;
_14 = !_1;
_24.1 = [_13.0.0.0,_13.0.0.0,_13.1.0,_17.1.0,_13.0.0.0,_17.0.0.0,_17.1.0,_17.1.0];
_24.0.0 = _13.0.0.0 ^ _17.1.0;
_21 = _23.2 as isize;
Call(_13.1.0 = fn2(_16, _14), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_12 = _23.0;
_5 = _12;
_28 = !_10;
_26 = &_1;
_15 = _10 as i128;
_13 = (_17.0, _17.0.0);
_13.0 = (_17.0.0, _16);
_29.0.0 = _17.1;
_29.1.1 = _4;
_24.0 = _17.0.0;
_29 = (_17.0, _17.1);
_24.1 = [_13.0.0.0,_17.0.0.0,_17.0.0.0,_24.0.0,_29.0.0.0,_17.1.0,_29.0.0.0,_13.1.0];
_4 = !_29.1.1;
_27 = _23.2;
_13.1.1 = _7 as i8;
_13 = _29;
_29.0.0 = (_17.0.0.0, _13.1.1);
_17.0.1 = [_24.0.0,_13.1.0,_24.0.0,_17.0.0.0,_13.1.0,_29.1.0,_29.0.0.0,_29.1.0];
_10 = _28 << _17.1.1;
_8 = !_15;
_17.0.0.0 = _17.1.0;
_22 = RET;
_20 = _27;
_24.0 = (_13.0.0.0, _29.1.1);
Goto(bb15)
}
bb15 = {
Call(_33 = dump_var(0_usize, 7_usize, Move(_7), 9_usize, Move(_9), 27_usize, Move(_27), 4_usize, Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_33 = dump_var(0_usize, 16_usize, Move(_16), 22_usize, Move(_22), 24_usize, Move(_24), 17_usize, Move(_17)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_33 = dump_var(0_usize, 6_usize, Move(_6), 5_usize, Move(_5), 8_usize, Move(_8), 34_usize, _34), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: ((u16, i8), [u16; 8]),mut _2: u128) -> u64 {
mir! {
type RET = u64;
let _3: i128;
let _4: char;
let _5: isize;
let _6: f64;
let _7: usize;
let _8: *const i16;
let _9: char;
let _10: Adt79;
let _11: f64;
let _12: u8;
let _13: [u16; 7];
let _14: (*mut i32, &'static mut i32, (Adt41, u32, &'static mut i32), &'static Adt34);
let _15: isize;
let _16: char;
let _17: u16;
let _18: &'static u32;
let _19: i32;
let _20: &'static mut &'static i32;
let _21: i64;
let _22: isize;
let _23: &'static i32;
let _24: ();
let _25: ();
{
RET = 8303764450562738865_usize as u64;
_1.0 = (26359_u16, (-53_i8));
_2 = 289520831965830950191180070173350650725_u128 | 169114129293744948223878488677981511206_u128;
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
_1.0.0 = !43457_u16;
_3 = !121825334973402851222174636036616763499_i128;
RET = !2469129257212757050_u64;
_1.0 = (37044_u16, (-16_i8));
_1.0.1 = (-116_i8);
_1.0 = (26876_u16, (-55_i8));
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
_2 = !78618907853175972600634950439080052903_u128;
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
_4 = '\u{106a3b}';
_3 = 45614799647953876363641982557520273427_i128 >> _1.0.0;
_2 = 197943919131572603722984473271153632022_u128;
match _1.0.0 {
0 => bb1,
1 => bb2,
2 => bb3,
26876 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_1.0.0 = 4628_u16;
_1.0 = (17359_u16, 88_i8);
_2 = !244571106205634638765692821045469769599_u128;
_3 = (-46701018833905893172212934433164905496_i128) - (-134355064768973007521283287092647074121_i128);
RET = 4220560508333274371_u64;
_1.0 = (1366_u16, (-6_i8));
_4 = '\u{61d9c}';
RET = !11254761980642359146_u64;
_1.0 = (38185_u16, 79_i8);
_1.0.0 = 1168_u16 >> _1.0.1;
Goto(bb6)
}
bb6 = {
_5 = !9223372036854775807_isize;
_6 = 90966869_u32 as f64;
_5 = -74_isize;
_7 = !3_usize;
RET = _1.0.0 as u64;
_1.0.1 = (-87_i8) + 79_i8;
_6 = RET as f64;
_4 = '\u{75c45}';
_2 = _4 as u128;
_3 = _6 as i128;
_2 = 25234898200633152396362388690258041496_u128;
_5 = 932909169_u32 as isize;
match _2 {
0 => bb4,
1 => bb5,
25234898200633152396362388690258041496 => bb7,
_ => bb3
}
}
bb7 = {
_3 = 3012_i16 as i128;
_10.fld1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0];
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
Call(_1.1 = core::intrinsics::transmute(_3), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_4 = '\u{a2d3f}';
_4 = '\u{d0f0c}';
_1.0.0 = 59941_u16;
_11 = _5 as f64;
RET = !2181956262995041275_u64;
RET = 1159095728_i32 as u64;
_10.fld2 = _5;
_1.0.0 = !32956_u16;
_10.fld2 = true as isize;
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
match _2 {
0 => bb1,
1 => bb9,
25234898200633152396362388690258041496 => bb11,
_ => bb10
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
RET = !11166906710515653521_u64;
_3 = 63710051677484387837726569366528283622_i128;
RET = 13201660089961266082_u64 + 16752476818690683102_u64;
_2 = _10.fld2 as u128;
_4 = '\u{292bf}';
_7 = !10896606663665445621_usize;
_4 = '\u{534f6}';
_4 = '\u{b48b}';
_3 = (-104995191332837672267651361329678536444_i128);
RET = 18230796602859494552_u64 << _1.0.0;
Goto(bb12)
}
bb12 = {
_10.fld0 = [_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0,_1.0.0];
_6 = -_11;
_10.fld2 = _1.0.1 as isize;
_1.0.0 = 11661_u16;
_1.0 = (33710_u16, 110_i8);
_10.fld2 = -_5;
_2 = 28081410302723360303376516395918484328_u128;
_4 = '\u{a51db}';
_12 = 245_u8 | 62_u8;
RET = _7 as u64;
RET = (-9175_i16) as u64;
_1.0.1 = 26_i8 | 8_i8;
Goto(bb13)
}
bb13 = {
_10.fld2 = _5 | _5;
_4 = '\u{8345f}';
_9 = _4;
_3 = (-80974898103480613100406960418482865711_i128) ^ (-103115120417668468684320729737920904474_i128);
_12 = 219_u8 >> _5;
_10.fld2 = _6 as isize;
_9 = _4;
_10.fld2 = _3 as isize;
_14.2.0.fld2 = !_1.0.0;
_9 = _4;
_10.fld0 = [_14.2.0.fld2,_1.0.0,_1.0.0,_14.2.0.fld2,_14.2.0.fld2,_1.0.0,_14.2.0.fld2];
_14.2.0.fld0 = -_3;
_13 = [_14.2.0.fld2,_1.0.0,_14.2.0.fld2,_14.2.0.fld2,_1.0.0,_1.0.0,_1.0.0];
RET = _12 as u64;
RET = true as u64;
_1.0.0 = !_14.2.0.fld2;
_12 = _11 as u8;
_1.0.0 = _14.2.0.fld2 + _14.2.0.fld2;
match _2 {
28081410302723360303376516395918484328 => bb15,
_ => bb14
}
}
bb14 = {
RET = !11166906710515653521_u64;
_3 = 63710051677484387837726569366528283622_i128;
RET = 13201660089961266082_u64 + 16752476818690683102_u64;
_2 = _10.fld2 as u128;
_4 = '\u{292bf}';
_7 = !10896606663665445621_usize;
_4 = '\u{534f6}';
_4 = '\u{b48b}';
_3 = (-104995191332837672267651361329678536444_i128);
RET = 18230796602859494552_u64 << _1.0.0;
Goto(bb12)
}
bb15 = {
_14.2.0.fld2 = _1.0.0;
_1.0 = (_14.2.0.fld2, 8_i8);
_13 = [_14.2.0.fld2,_14.2.0.fld2,_14.2.0.fld2,_1.0.0,_14.2.0.fld2,_14.2.0.fld2,_14.2.0.fld2];
_16 = _4;
_10.fld0 = [_1.0.0,_1.0.0,_14.2.0.fld2,_14.2.0.fld2,_14.2.0.fld2,_14.2.0.fld2,_14.2.0.fld2];
RET = 10078978433557410706_u64;
_14.2.0.fld1 = [_1.0.0,_1.0.0,_1.0.0];
_1.1 = [_1.0.0,_14.2.0.fld2,_14.2.0.fld2,_1.0.0,_1.0.0,_1.0.0,_14.2.0.fld2,_1.0.0];
_21 = (-2388642996788188662_i64);
_6 = -_11;
_1.1 = [_1.0.0,_1.0.0,_1.0.0,_14.2.0.fld2,_1.0.0,_14.2.0.fld2,_1.0.0,_14.2.0.fld2];
_16 = _9;
_14.2.0.fld0 = _3;
_17 = !_14.2.0.fld2;
_22 = _4 as isize;
Goto(bb16)
}
bb16 = {
Call(_24 = dump_var(1_usize, 3_usize, Move(_3), 7_usize, Move(_7), 13_usize, Move(_13), 21_usize, Move(_21)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_24 = dump_var(1_usize, 12_usize, Move(_12), 17_usize, Move(_17), 25_usize, _25, 25_usize, _25), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: [u16; 8],mut _2: bool) -> u16 {
mir! {
type RET = u16;
let _3: i8;
let _4: f64;
let _5: isize;
let _6: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _7: [u16; 3];
let _8: i8;
let _9: *mut usize;
let _10: f64;
let _11: (((u16, i8), [u16; 8]), (u16, i8));
let _12: char;
let _13: &'static &'static u16;
let _14: Adt41;
let _15: *const &'static ((Adt41, u32, &'static mut i32), u16);
let _16: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _17: ();
let _18: ();
{
RET = 56370_u16 - 23973_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 46018_u16 ^ 6163_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 3919_u16;
RET = !20115_u16;
RET = 59527_u16;
RET = 20370_u16 >> 7495_i16;
_2 = false;
Goto(bb1)
}
bb1 = {
RET = 35780_u16;
RET = 4705_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = _2 as u16;
RET = 36722_u16 & 28481_u16;
_4 = 11203_i16 as f64;
RET = !36898_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 12762_u16;
_5 = (-112_isize);
RET = 13281_u16 - 51593_u16;
_4 = 7993413073278431773_u64 as f64;
_2 = true;
_2 = true;
_3 = !110_i8;
_2 = RET < RET;
_6.0 = !63285812274520398403338199374663723457_u128;
_6.2 = [_5,_5,_5,_5,_5,_5];
_6.3 = &mut _6.2;
_6.1 = _1;
Call(_6.0 = fn3(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = RET >= RET;
_6.0 = 256038398974360944228325715742049392854_u128;
_3 = 113_i8 - (-108_i8);
_6.2 = [_5,_5,_5,_5,_5,_5];
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_5 = '\u{97936}' as isize;
RET = !58398_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
_5 = (-9223372036854775808_isize) | (-39_isize);
_6.2 = [_5,_5,_5,_5,_5,_5];
RET = 13515_u16 + 9312_u16;
_5 = (-9223372036854775808_isize) ^ 108_isize;
_6.2 = [_5,_5,_5,_5,_5,_5];
Goto(bb3)
}
bb3 = {
RET = 7378763686340123724_i64 as u16;
_11.0.0 = (RET, _3);
_11.0.0 = (RET, _3);
_11.0.0.0 = !RET;
_11.1.0 = _11.0.0.0 & _11.0.0.0;
_11.0.1 = [_11.1.0,RET,_11.0.0.0,RET,RET,_11.0.0.0,_11.1.0,_11.1.0];
_10 = _4;
_11.1 = (_11.0.0.0, _3);
_1 = [_11.0.0.0,_11.1.0,_11.0.0.0,_11.0.0.0,RET,RET,RET,RET];
_11.1.0 = _4 as u16;
_11.0 = (_11.1, _6.1);
_1 = [_11.1.0,_11.1.0,_11.1.0,_11.1.0,RET,_11.0.0.0,RET,RET];
match _6.0 {
0 => bb1,
1 => bb2,
256038398974360944228325715742049392854 => bb5,
_ => bb4
}
}
bb4 = {
RET = 35780_u16;
RET = 4705_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = _2 as u16;
RET = 36722_u16 & 28481_u16;
_4 = 11203_i16 as f64;
RET = !36898_u16;
_1 = [RET,RET,RET,RET,RET,RET,RET,RET];
RET = 12762_u16;
_5 = (-112_isize);
RET = 13281_u16 - 51593_u16;
_4 = 7993413073278431773_u64 as f64;
_2 = true;
_2 = true;
_3 = !110_i8;
_2 = RET < RET;
_6.0 = !63285812274520398403338199374663723457_u128;
_6.2 = [_5,_5,_5,_5,_5,_5];
_6.3 = &mut _6.2;
_6.1 = _1;
Call(_6.0 = fn3(_2), ReturnTo(bb2), UnwindUnreachable())
}
bb5 = {
_11.1 = _11.0.0;
_6.0 = !158335427090699349746735526270360195725_u128;
_11.0.0.1 = _3;
_6.1 = [_11.0.0.0,RET,RET,RET,_11.0.0.0,RET,_11.0.0.0,_11.1.0];
_11.1.1 = _11.0.0.1;
_11.0.0 = (_11.1.0, _11.1.1);
_11.1.1 = _3;
_6.1 = _11.0.1;
_11.0.0.1 = _3;
RET = _11.0.0.0 >> _11.1.1;
_11.0.0.1 = _11.1.1 + _3;
_11.1.0 = !_11.0.0.0;
_6.2 = [_5,_5,_5,_5,_5,_5];
_1 = [RET,RET,RET,RET,RET,RET,RET,_11.0.0.0];
_10 = -_4;
_7 = [RET,RET,RET];
_11.0.0.0 = _6.0 as u16;
_3 = -_11.1.1;
RET = _11.0.0.0 >> _11.0.0.1;
_7 = [_11.0.0.0,_11.1.0,RET];
_11.1.1 = _3 * _3;
Call(RET = fn17(_11.0.0.1, _11, Move(_6.3)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
_11.0 = (_11.1, _1);
_11.0.0.0 = !RET;
_3 = _11.1.1;
_6.3 = &mut _6.2;
_16.2 = _6.2;
_1 = _11.0.1;
_16.0 = 192827714_i32 as u128;
Goto(bb7)
}
bb7 = {
Call(_17 = dump_var(2_usize, 2_usize, Move(_2), 11_usize, Move(_11), 3_usize, Move(_3), 18_usize, _18), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn3(mut _1: bool) -> u128 {
mir! {
type RET = u128;
let _2: *mut f32;
let _3: f64;
let _4: f32;
let _5: [i8; 6];
let _6: i16;
let _7: u8;
let _8: usize;
let _9: f32;
let _10: usize;
let _11: char;
let _12: ([i16; 5],);
let _13: [i8; 7];
let _14: ((u16, i8), [u16; 8]);
let _15: *mut u64;
let _16: &'static mut &'static mut f32;
let _17: usize;
let _18: u8;
let _19: isize;
let _20: &'static f64;
let _21: (&'static u32,);
let _22: &'static u16;
let _23: i32;
let _24: [u32; 1];
let _25: [u16; 7];
let _26: *mut [isize; 6];
let _27: (&'static mut u64, i8, &'static u32, u64);
let _28: [u32; 1];
let _29: Adt70;
let _30: ();
let _31: ();
{
RET = 233265374348698966961455231267037168210_u128;
RET = 145540775408065379834818234037979741017_u128 << 983220431_u32;
RET = 333524486670130820889538010552485038864_u128 | 112904725332509418211841776741555336011_u128;
_1 = RET >= RET;
_1 = false ^ true;
_1 = false;
RET = !95821486980013161192759856998790069860_u128;
_1 = true;
RET = '\u{c872f}' as u128;
_1 = false;
Goto(bb1)
}
bb1 = {
_3 = (-13_i8) as f64;
RET = !131314337737184653428334384868997679144_u128;
_1 = RET < RET;
RET = (-704331500_i32) as u128;
_5 = [47_i8,75_i8,(-124_i8),(-72_i8),123_i8,(-124_i8)];
RET = 2620250476243587371453970485204621847_u128;
_2 = core::ptr::addr_of_mut!(_4);
_2 = core::ptr::addr_of_mut!(_4);
RET = !315975547452184976247619101929763216213_u128;
_3 = (-2129750660677804341_i64) as f64;
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb2)
}
bb2 = {
(*_2) = _3 as f32;
(*_2) = (-112822552766498158417962423877020215055_i128) as f32;
(*_2) = (-342595423_i32) as f32;
_2 = core::ptr::addr_of_mut!(_4);
RET = 332079422795674959831776727067213085258_u128;
_3 = (*_2) as f64;
_2 = core::ptr::addr_of_mut!((*_2));
_1 = _3 >= _3;
RET = !17251828006088625423844109891925548236_u128;
_2 = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!(_4);
_3 = RET as f64;
RET = 33073408064206769152442794799559039362_u128 & 170709401532830913963167989672987912827_u128;
RET = !211607725599209742265324580908390144824_u128;
_7 = 121_u8 - 42_u8;
Call(_4 = fn4(_5, _5, Move(_2), _5, _5, _5, RET, RET, _5, _1, _5, _5), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = !197241735298895081051740145106036751577_u128;
RET = 53914245984851937088990468239349370767_u128;
_1 = _7 <= _7;
_3 = (-151126003827026959750571916670477670855_i128) as f64;
_2 = core::ptr::addr_of_mut!(_4);
_1 = true;
RET = !117917544901459997660668680137317200761_u128;
RET = 172119012869433950875889219623282274323_u128 * 256985211940892734266889152063099015985_u128;
_6 = 18698_i16;
_6 = (-25500_i16);
_4 = RET as f32;
_5 = [(-77_i8),100_i8,(-55_i8),86_i8,31_i8,(-59_i8)];
_3 = 2013457061_u32 as f64;
_6 = -(-16613_i16);
_8 = RET as usize;
RET = (-478599843580718988_i64) as u128;
Call(_7 = core::intrinsics::transmute(_1), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_6 = -(-12482_i16);
_1 = !true;
_5 = [(-74_i8),119_i8,(-108_i8),15_i8,(-122_i8),45_i8];
(*_2) = (-84230641_i32) as f32;
_1 = false;
Call(RET = fn16(_5, _5, (*_2), _5, _5, _8, _6, _5, _5, (*_2), _6, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb5 = {
_7 = '\u{39061}' as u8;
_4 = 1214159324081914655_i64 as f32;
_5 = [(-64_i8),10_i8,97_i8,(-60_i8),(-120_i8),(-29_i8)];
_6 = 19347_i16;
_4 = 153759004066561135248178385251198211072_i128 as f32;
RET = 58123_u16 as u128;
Goto(bb6)
}
bb6 = {
_7 = !8_u8;
(*_2) = (-495932562_i32) as f32;
_5 = [(-88_i8),(-72_i8),(-101_i8),60_i8,67_i8,116_i8];
_2 = core::ptr::addr_of_mut!(_4);
_1 = false;
_9 = _4 * (*_2);
_11 = '\u{a1be8}';
_8 = !15684017702737055591_usize;
_10 = !_8;
RET = 131293529058867068565219478041277401244_u128;
_3 = 1143634166554093174_u64 as f64;
RET = 268319369204110627575561173066891995374_u128 << _6;
(*_2) = _8 as f32;
_13 = [68_i8,45_i8,(-30_i8),(-106_i8),(-16_i8),91_i8,50_i8];
RET = 80572355548364232964994356593026148567_u128;
Goto(bb7)
}
bb7 = {
_8 = _10 >> _6;
_14.0.1 = 2_i8;
_12.0 = [_6,_6,_6,_6,_6];
_14.0.0 = !39621_u16;
(*_2) = 6479184786896010879864331302258728177_i128 as f32;
_10 = _14.0.0 as usize;
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_9 = (-33107603590702305331221909370012379663_i128) as f32;
_14.0.0 = 27755_u16;
RET = !276552949450806429262771329582478905821_u128;
Goto(bb8)
}
bb8 = {
_10 = _8;
_6 = (-25956_i16);
_14.0.0 = !35268_u16;
(*_2) = _9 + _9;
_1 = false;
_14.0 = (53275_u16, (-41_i8));
_19 = _3 as isize;
RET = _14.0.0 as u128;
_5 = [_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1];
_18 = _7 ^ _7;
RET = 314011911580146010729436481993623370067_u128;
_4 = _9;
_17 = _8;
_2 = core::ptr::addr_of_mut!(_9);
(*_2) = _4;
_1 = true;
_13 = [_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1];
_11 = '\u{48bee}';
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_22 = &_14.0.0;
Goto(bb9)
}
bb9 = {
_17 = _8 << _18;
_17 = _8 & _8;
_11 = '\u{d6e}';
_22 = &_14.0.0;
_17 = _9 as usize;
_24 = [1105104996_u32];
_10 = !_8;
_25 = [_14.0.0,_14.0.0,(*_22),_14.0.0,(*_22),(*_22),(*_22)];
_5 = [_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1];
RET = 284499351830472775256525689814425671497_u128 + 149367831013515718497660056620626957909_u128;
_23 = (-1877857959_i32);
(*_2) = _4 - _4;
_13 = [_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1,_14.0.1];
(*_2) = _4;
match (*_22) {
0 => bb8,
1 => bb6,
2 => bb4,
3 => bb10,
53275 => bb12,
_ => bb11
}
}
bb10 = {
_6 = -(-12482_i16);
_1 = !true;
_5 = [(-74_i8),119_i8,(-108_i8),15_i8,(-122_i8),45_i8];
(*_2) = (-84230641_i32) as f32;
_1 = false;
Call(RET = fn16(_5, _5, (*_2), _5, _5, _8, _6, _5, _5, (*_2), _6, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb11 = {
_8 = _10 >> _6;
_14.0.1 = 2_i8;
_12.0 = [_6,_6,_6,_6,_6];
_14.0.0 = !39621_u16;
(*_2) = 6479184786896010879864331302258728177_i128 as f32;
_10 = _14.0.0 as usize;
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_9 = (-33107603590702305331221909370012379663_i128) as f32;
_14.0.0 = 27755_u16;
RET = !276552949450806429262771329582478905821_u128;
Goto(bb8)
}
bb12 = {
_14.0.0 = 3362755573_u32 as u16;
RET = !23488305674460608454609195608497640605_u128;
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_6 = (-30184_i16) ^ 23292_i16;
RET = 52041928624531217687751352554319680374_u128 >> _23;
_27.3 = 12611335231976478964_u64 * 11689361420238115858_u64;
_11 = '\u{bdf70}';
_7 = _10 as u8;
_18 = _7 ^ _7;
RET = _27.3 as u128;
_23 = (-8673370572061424731_i64) as i32;
_23 = !1792094345_i32;
_28 = [1672567142_u32];
_12.0 = [_6,_6,_6,_6,_6];
_11 = '\u{a1dfa}';
_2 = core::ptr::addr_of_mut!((*_2));
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_20 = &_3;
_10 = _23 as usize;
_27.3 = !4765037839441279994_u64;
_15 = core::ptr::addr_of_mut!(_27.3);
(*_15) = _14.0.0 as u64;
_14.0.0 = 48925_u16;
_27.0 = &mut (*_15);
_10 = !_8;
_14.1 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_25 = [_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0,_14.0.0];
_11 = '\u{3171}';
_8 = _18 as usize;
_10 = _14.0.0 as usize;
_27.1 = RET as i8;
match _14.0.0 {
0 => bb11,
1 => bb5,
2 => bb13,
3 => bb14,
48925 => bb16,
_ => bb15
}
}
bb13 = {
_7 = '\u{39061}' as u8;
_4 = 1214159324081914655_i64 as f32;
_5 = [(-64_i8),10_i8,97_i8,(-60_i8),(-120_i8),(-29_i8)];
_6 = 19347_i16;
_4 = 153759004066561135248178385251198211072_i128 as f32;
RET = 58123_u16 as u128;
Goto(bb6)
}
bb14 = {
_6 = -(-12482_i16);
_1 = !true;
_5 = [(-74_i8),119_i8,(-108_i8),15_i8,(-122_i8),45_i8];
(*_2) = (-84230641_i32) as f32;
_1 = false;
Call(RET = fn16(_5, _5, (*_2), _5, _5, _8, _6, _5, _5, (*_2), _6, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb15 = {
_6 = -(-12482_i16);
_1 = !true;
_5 = [(-74_i8),119_i8,(-108_i8),15_i8,(-122_i8),45_i8];
(*_2) = (-84230641_i32) as f32;
_1 = false;
Call(RET = fn16(_5, _5, (*_2), _5, _5, _8, _6, _5, _5, (*_2), _6, _4), ReturnTo(bb5), UnwindUnreachable())
}
bb16 = {
_14.0.1 = _23 as i8;
_12.0 = [_6,_6,_6,_6,_6];
_11 = '\u{3c6fc}';
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(3_usize, 10_usize, Move(_10), 13_usize, Move(_13), 12_usize, Move(_12), 19_usize, Move(_19)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(3_usize, 14_usize, Move(_14), 24_usize, Move(_24), 17_usize, Move(_17), 11_usize, Move(_11)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: [i8; 6],mut _2: [i8; 6],mut _3: *mut f32,mut _4: [i8; 6],mut _5: [i8; 6],mut _6: [i8; 6],mut _7: u128,mut _8: u128,mut _9: [i8; 6],mut _10: bool,mut _11: [i8; 6],mut _12: [i8; 6]) -> f32 {
mir! {
type RET = f32;
let _13: f32;
let _14: u32;
let _15: [u16; 4];
let _16: [isize; 7];
let _17: *const &'static ((Adt41, u32, &'static mut i32), u16);
let _18: *const &'static ((Adt41, u32, &'static mut i32), u16);
let _19: f32;
let _20: *const isize;
let _21: [i8; 6];
let _22: bool;
let _23: isize;
let _24: Adt41;
let _25: usize;
let _26: isize;
let _27: isize;
let _28: [isize; 6];
let _29: isize;
let _30: i64;
let _31: [u16; 8];
let _32: ((u16, i8), [u16; 8]);
let _33: u8;
let _34: ([i16; 5],);
let _35: bool;
let _36: char;
let _37: (u16, i8);
let _38: isize;
let _39: Adt79;
let _40: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _41: *const isize;
let _42: &'static mut u64;
let _43: isize;
let _44: u8;
let _45: *mut usize;
let _46: &'static f64;
let _47: [isize; 6];
let _48: *mut i32;
let _49: ();
let _50: ();
{
_4 = [(-70_i8),105_i8,(-111_i8),36_i8,81_i8,(-65_i8)];
RET = (-741846702_i32) as f32;
RET = _8 as f32;
RET = 17649691067078063401_u64 as f32;
_16 = [(-18_isize),9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,38_isize,(-9223372036854775808_isize),(-109_isize)];
RET = 3201192156_u32 as f32;
_9 = [82_i8,104_i8,33_i8,10_i8,120_i8,(-116_i8)];
_11 = [69_i8,(-121_i8),(-100_i8),68_i8,82_i8,(-12_i8)];
RET = (-418293825_i32) as f32;
_7 = _8 - _8;
_5 = _12;
_24.fld2 = 7_usize as u16;
_4 = [(-33_i8),5_i8,(-93_i8),77_i8,62_i8,11_i8];
Goto(bb1)
}
bb1 = {
_9 = [(-81_i8),42_i8,(-123_i8),(-35_i8),103_i8,15_i8];
_23 = -(-9223372036854775808_isize);
_24.fld1 = [_24.fld2,_24.fld2,_24.fld2];
_14 = 10230_i16 as u32;
_21 = [67_i8,56_i8,(-119_i8),(-28_i8),(-101_i8),(-26_i8)];
_13 = RET - RET;
_8 = _23 as u128;
_24.fld0 = (-2575752772987947923_i64) as i128;
Call(_20 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_22 = _13 == _13;
_7 = !_8;
_9 = [(-49_i8),111_i8,(-19_i8),(-73_i8),(-88_i8),(-85_i8)];
_8 = _7;
_10 = !_22;
_23 = 9223372036854775807_isize;
match _23 {
9223372036854775807 => bb3,
_ => bb1
}
}
bb3 = {
_14 = 1469821249_u32;
_20 = core::ptr::addr_of!(_23);
_15 = [_24.fld2,_24.fld2,_24.fld2,_24.fld2];
Goto(bb4)
}
bb4 = {
_5 = [52_i8,43_i8,43_i8,28_i8,94_i8,34_i8];
_27 = (*_20) >> _14;
_26 = _23 | _23;
_4 = _11;
_16 = [_26,_23,_27,_26,(*_20),_23,_26];
_1 = [(-42_i8),95_i8,63_i8,22_i8,61_i8,(-125_i8)];
_14 = 11525483081875707179_u64 as u32;
_19 = RET * _13;
_5 = _12;
_1 = [77_i8,60_i8,(-96_i8),(-59_i8),(-108_i8),(-82_i8)];
_1 = [20_i8,77_i8,2_i8,105_i8,49_i8,(-67_i8)];
_16 = [_27,_26,(*_20),_27,(*_20),(*_20),_27];
Goto(bb5)
}
bb5 = {
_25 = 4375860324579452885_usize - 15239190887407415696_usize;
_2 = [(-85_i8),(-108_i8),53_i8,102_i8,117_i8,(-36_i8)];
_2 = [33_i8,52_i8,(-82_i8),(-104_i8),23_i8,89_i8];
_14 = 1662283822_u32;
(*_20) = _27 >> _27;
RET = (-7046357540054953809_i64) as f32;
_7 = _8 | _8;
_19 = _13;
_22 = _10;
_24.fld0 = (-2721795473436587026479914640805902505_i128);
RET = _19 * _13;
_27 = _24.fld2 as isize;
_3 = core::ptr::addr_of_mut!(_19);
_29 = _23 >> (*_20);
Goto(bb6)
}
bb6 = {
(*_20) = _26 - _26;
RET = _13;
(*_20) = _29 - _29;
_28 = [(*_20),(*_20),_23,_23,(*_20),(*_20)];
_10 = !_22;
match _24.fld0 {
0 => bb7,
1 => bb8,
2 => bb9,
337560571447501876436894692790962308951 => bb11,
_ => bb10
}
}
bb7 = {
_25 = 4375860324579452885_usize - 15239190887407415696_usize;
_2 = [(-85_i8),(-108_i8),53_i8,102_i8,117_i8,(-36_i8)];
_2 = [33_i8,52_i8,(-82_i8),(-104_i8),23_i8,89_i8];
_14 = 1662283822_u32;
(*_20) = _27 >> _27;
RET = (-7046357540054953809_i64) as f32;
_7 = _8 | _8;
_19 = _13;
_22 = _10;
_24.fld0 = (-2721795473436587026479914640805902505_i128);
RET = _19 * _13;
_27 = _24.fld2 as isize;
_3 = core::ptr::addr_of_mut!(_19);
_29 = _23 >> (*_20);
Goto(bb6)
}
bb8 = {
_5 = [52_i8,43_i8,43_i8,28_i8,94_i8,34_i8];
_27 = (*_20) >> _14;
_26 = _23 | _23;
_4 = _11;
_16 = [_26,_23,_27,_26,(*_20),_23,_26];
_1 = [(-42_i8),95_i8,63_i8,22_i8,61_i8,(-125_i8)];
_14 = 11525483081875707179_u64 as u32;
_19 = RET * _13;
_5 = _12;
_1 = [77_i8,60_i8,(-96_i8),(-59_i8),(-108_i8),(-82_i8)];
_1 = [20_i8,77_i8,2_i8,105_i8,49_i8,(-67_i8)];
_16 = [_27,_26,(*_20),_27,(*_20),(*_20),_27];
Goto(bb5)
}
bb9 = {
_14 = 1469821249_u32;
_20 = core::ptr::addr_of!(_23);
_15 = [_24.fld2,_24.fld2,_24.fld2,_24.fld2];
Goto(bb4)
}
bb10 = {
_9 = [(-81_i8),42_i8,(-123_i8),(-35_i8),103_i8,15_i8];
_23 = -(-9223372036854775808_isize);
_24.fld1 = [_24.fld2,_24.fld2,_24.fld2];
_14 = 10230_i16 as u32;
_21 = [67_i8,56_i8,(-119_i8),(-28_i8),(-101_i8),(-26_i8)];
_13 = RET - RET;
_8 = _23 as u128;
_24.fld0 = (-2575752772987947923_i64) as i128;
Call(_20 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb11 = {
_29 = _23 >> (*_20);
(*_3) = _13;
(*_3) = _8 as f32;
(*_3) = -RET;
(*_20) = _24.fld2 as isize;
_13 = -_19;
_6 = [(-96_i8),66_i8,(-49_i8),(-116_i8),46_i8,(-52_i8)];
_6 = [108_i8,(-77_i8),(-2_i8),(-59_i8),(-116_i8),(-128_i8)];
_15 = [_24.fld2,_24.fld2,_24.fld2,_24.fld2];
_33 = 44_u8;
_37.1 = (-5_i8) & (-71_i8);
_9 = [_37.1,_37.1,_37.1,_37.1,_37.1,_37.1];
(*_3) = -RET;
_14 = 2980726306_u32 >> _29;
_24.fld1 = [_24.fld2,_24.fld2,_24.fld2];
_29 = 17796869212488937119_u64 as isize;
_32.0.1 = _37.1;
_37.0 = _24.fld2 >> _23;
(*_20) = _29 >> _14;
_14 = !2873031715_u32;
_34.0 = [(-3637_i16),23993_i16,16970_i16,(-9666_i16),1140_i16];
match _33 {
0 => bb5,
44 => bb12,
_ => bb7
}
}
bb12 = {
(*_3) = _13;
_11 = _21;
_32.0.0 = _24.fld2 & _37.0;
_13 = _19 + RET;
_39.fld0 = [_24.fld2,_32.0.0,_37.0,_24.fld2,_37.0,_32.0.0,_37.0];
_23 = -_27;
(*_3) = -_13;
_7 = _8 ^ _8;
_19 = RET + RET;
_30 = (-1446446516811905658_i64) << _32.0.0;
_37.0 = !_32.0.0;
_11 = _21;
_12 = _2;
_23 = _26 ^ _26;
_28 = [(*_20),(*_20),_23,_23,(*_20),_23];
_40.2 = [_29,_26,_23,_26,_27,_27];
_5 = [_32.0.1,_37.1,_37.1,_32.0.1,_32.0.1,_37.1];
_1 = [_32.0.1,_37.1,_37.1,_32.0.1,_32.0.1,_32.0.1];
match _24.fld0 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb5,
4 => bb13,
5 => bb14,
337560571447501876436894692790962308951 => bb16,
_ => bb15
}
}
bb13 = {
_9 = [(-81_i8),42_i8,(-123_i8),(-35_i8),103_i8,15_i8];
_23 = -(-9223372036854775808_isize);
_24.fld1 = [_24.fld2,_24.fld2,_24.fld2];
_14 = 10230_i16 as u32;
_21 = [67_i8,56_i8,(-119_i8),(-28_i8),(-101_i8),(-26_i8)];
_13 = RET - RET;
_8 = _23 as u128;
_24.fld0 = (-2575752772987947923_i64) as i128;
Call(_20 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb14 = {
_9 = [(-81_i8),42_i8,(-123_i8),(-35_i8),103_i8,15_i8];
_23 = -(-9223372036854775808_isize);
_24.fld1 = [_24.fld2,_24.fld2,_24.fld2];
_14 = 10230_i16 as u32;
_21 = [67_i8,56_i8,(-119_i8),(-28_i8),(-101_i8),(-26_i8)];
_13 = RET - RET;
_8 = _23 as u128;
_24.fld0 = (-2575752772987947923_i64) as i128;
Call(_20 = fn5(), ReturnTo(bb2), UnwindUnreachable())
}
bb15 = {
_14 = 1469821249_u32;
_20 = core::ptr::addr_of!(_23);
_15 = [_24.fld2,_24.fld2,_24.fld2,_24.fld2];
Goto(bb4)
}
bb16 = {
_27 = 28819_i16 as isize;
_1 = _21;
_32.1 = [_24.fld2,_32.0.0,_37.0,_37.0,_37.0,_32.0.0,_32.0.0,_32.0.0];
_22 = _24.fld2 <= _24.fld2;
_40.3 = &mut _28;
_35 = !_10;
_24.fld2 = 2124303195_i32 as u16;
_38 = (*_20) * _27;
_27 = (*_20);
_36 = '\u{d5ae7}';
_45 = core::ptr::addr_of_mut!(_25);
_39.fld1 = [_24.fld2,_32.0.0,_32.0.0,_32.0.0];
_31 = [_32.0.0,_32.0.0,_37.0,_37.0,_37.0,_37.0,_32.0.0,_37.0];
(*_45) = 3733961739306342223_u64 as usize;
_37.0 = _32.0.0;
(*_3) = RET * _13;
_31 = _32.1;
Goto(bb17)
}
bb17 = {
Call(_49 = dump_var(4_usize, 21_usize, Move(_21), 30_usize, Move(_30), 32_usize, Move(_32), 5_usize, Move(_5)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_49 = dump_var(4_usize, 6_usize, Move(_6), 27_usize, Move(_27), 4_usize, Move(_4), 36_usize, Move(_36)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_49 = dump_var(4_usize, 23_usize, Move(_23), 16_usize, Move(_16), 31_usize, Move(_31), 14_usize, Move(_14)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_49 = dump_var(4_usize, 38_usize, Move(_38), 28_usize, Move(_28), 9_usize, Move(_9), 50_usize, _50), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn5() -> *const isize {
mir! {
type RET = *const isize;
let _1: isize;
let _2: f32;
let _3: u32;
let _4: i8;
let _5: *mut i32;
let _6: f32;
let _7: [i16; 5];
let _8: &'static mut &'static i32;
let _9: *const i16;
let _10: f64;
let _11: u16;
let _12: [i16; 5];
let _13: bool;
let _14: f32;
let _15: &'static mut i32;
let _16: *mut [i8; 7];
let _17: bool;
let _18: bool;
let _19: isize;
let _20: *const &'static mut f32;
let _21: &'static mut u64;
let _22: Adt34;
let _23: char;
let _24: &'static f32;
let _25: bool;
let _26: Adt79;
let _27: f64;
let _28: u64;
let _29: (Adt41, u32, &'static mut i32);
let _30: char;
let _31: i128;
let _32: char;
let _33: [u16; 7];
let _34: [i8; 7];
let _35: bool;
let _36: char;
let _37: bool;
let _38: bool;
let _39: ();
let _40: ();
{
RET = core::ptr::addr_of!(_1);
(*RET) = (-126_isize);
Goto(bb1)
}
bb1 = {
RET = core::ptr::addr_of!(_1);
RET = core::ptr::addr_of!((*RET));
(*RET) = 65556846728507611635424720945191666152_i128 as isize;
(*RET) = 4864_u16 as isize;
_1 = 14_i8 as isize;
(*RET) = 9223372036854775807_isize * 9223372036854775807_isize;
RET = core::ptr::addr_of!(_1);
_1 = -9223372036854775807_isize;
(*RET) = (-9223372036854775808_isize) << 213923939_u32;
_2 = 3150021451_u32 as f32;
(*RET) = !9223372036854775807_isize;
Call(_2 = fn6((*RET), Move(RET), (*RET), (*RET), _1, _1, (*RET)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
RET = core::ptr::addr_of!(_1);
_2 = 131351114087004081584427813813305352286_u128 as f32;
(*RET) = (-25_isize);
(*RET) = 107970956353365319234217100292689204047_u128 as isize;
_4 = 25_i8 | (-103_i8);
(*RET) = false as isize;
_2 = (-370997543_i32) as f32;
(*RET) = (-9223372036854775808_isize);
(*RET) = 3772375044_u32 as isize;
(*RET) = _2 as isize;
_4 = (-1728359244_i32) as i8;
Goto(bb3)
}
bb3 = {
_2 = 6655248283352917545_u64 as f32;
(*RET) = 11828668876646317161_usize as isize;
_6 = 209_u8 as f32;
RET = core::ptr::addr_of!((*RET));
(*RET) = -(-9223372036854775808_isize);
_4 = !(-107_i8);
RET = core::ptr::addr_of!((*RET));
RET = core::ptr::addr_of!((*RET));
_6 = -_2;
RET = core::ptr::addr_of!(_1);
Call((*RET) = core::intrinsics::bswap(66_isize), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_4 = 186_u8 as i8;
(*RET) = (-9223372036854775808_isize) >> _4;
_3 = 2194723040_u32;
_1 = 1_isize - 56_isize;
(*RET) = 27835968665681519877100148524874382904_u128 as isize;
_2 = _6;
_6 = _3 as f32;
_2 = _6;
_1 = 9223372036854775807_isize;
(*RET) = -(-9223372036854775808_isize);
_10 = 334907535112300860581004295284998838434_u128 as f64;
_1 = (-9223372036854775808_isize);
_12 = [(-21269_i16),793_i16,(-4974_i16),1556_i16,20552_i16];
_13 = !true;
_1 = -9223372036854775807_isize;
(*RET) = !9223372036854775807_isize;
_14 = _6 + _6;
RET = core::ptr::addr_of!((*RET));
Goto(bb5)
}
bb5 = {
_1 = (-9223372036854775808_isize) << _3;
_6 = _2;
_14 = _6;
_3 = 444768864_u32 >> (*RET);
_3 = 2194836587_u32 | 2610262508_u32;
_7 = [23867_i16,(-16279_i16),(-9289_i16),(-21065_i16),11290_i16];
_3 = _2 as u32;
_7 = [(-28018_i16),(-21346_i16),28153_i16,6777_i16,2518_i16];
_2 = _6;
(*RET) = (-23637625042519892816694278439965782424_i128) as isize;
_1 = 72_isize;
_6 = -_2;
_7 = _12;
_6 = -_2;
(*RET) = _3 as isize;
_6 = _14 * _14;
_4 = !37_i8;
_14 = -_2;
(*RET) = -(-9223372036854775808_isize);
(*RET) = (-9223372036854775808_isize) << _3;
_7 = _12;
(*RET) = (-3_isize) ^ 9223372036854775807_isize;
_14 = -_6;
_11 = 2464824399628337671_usize as u16;
RET = core::ptr::addr_of!((*RET));
_12 = _7;
RET = core::ptr::addr_of!((*RET));
_6 = -_14;
_11 = !39554_u16;
_6 = _2;
_1 = 9223372036854775807_isize >> _3;
Goto(bb6)
}
bb6 = {
_2 = _14 + _6;
_2 = _14;
_7 = _12;
_2 = -_14;
_1 = 9223372036854775807_isize;
_14 = _2 + _2;
(*RET) = 9223372036854775807_isize << _11;
_4 = 3_usize as i8;
_1 = 83_isize * (-9223372036854775808_isize);
_6 = -_2;
_18 = _14 == _14;
_3 = 1871013196_u32 + 3268244819_u32;
_3 = 1620329690_u32 | 3185297474_u32;
(*RET) = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_18 = !_13;
(*RET) = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_6 = _14 * _14;
(*RET) = -(-9223372036854775808_isize);
_4 = (-54_i8);
_10 = 2136995186792627810_u64 as f64;
_4 = -16_i8;
Goto(bb7)
}
bb7 = {
_11 = 4079_u16 & 49832_u16;
_1 = 9223372036854775807_isize & 9223372036854775807_isize;
_13 = _18;
_19 = (*RET) + (*RET);
(*RET) = _19 & _19;
(*RET) = (-1659820933_i32) as isize;
_11 = 57108_u16;
_1 = _19 - _19;
_3 = 1403786803_u32 << _19;
(*RET) = !_19;
(*RET) = _13 as isize;
RET = core::ptr::addr_of!(_19);
_17 = _18 & _18;
_1 = !(*RET);
_1 = 3_usize as isize;
RET = core::ptr::addr_of!((*RET));
_17 = !_18;
_4 = 106_i8 << (*RET);
_18 = _13;
_23 = '\u{11e87}';
_25 = !_18;
_17 = !_25;
_14 = _6;
_3 = !357155773_u32;
(*RET) = _1;
_13 = _4 > _4;
match _11 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
57108 => bb12,
_ => bb11
}
}
bb8 = {
_2 = _14 + _6;
_2 = _14;
_7 = _12;
_2 = -_14;
_1 = 9223372036854775807_isize;
_14 = _2 + _2;
(*RET) = 9223372036854775807_isize << _11;
_4 = 3_usize as i8;
_1 = 83_isize * (-9223372036854775808_isize);
_6 = -_2;
_18 = _14 == _14;
_3 = 1871013196_u32 + 3268244819_u32;
_3 = 1620329690_u32 | 3185297474_u32;
(*RET) = (-9223372036854775808_isize) ^ (-9223372036854775808_isize);
_18 = !_13;
(*RET) = (-9223372036854775808_isize) & (-9223372036854775808_isize);
_6 = _14 * _14;
(*RET) = -(-9223372036854775808_isize);
_4 = (-54_i8);
_10 = 2136995186792627810_u64 as f64;
_4 = -16_i8;
Goto(bb7)
}
bb9 = {
_1 = (-9223372036854775808_isize) << _3;
_6 = _2;
_14 = _6;
_3 = 444768864_u32 >> (*RET);
_3 = 2194836587_u32 | 2610262508_u32;
_7 = [23867_i16,(-16279_i16),(-9289_i16),(-21065_i16),11290_i16];
_3 = _2 as u32;
_7 = [(-28018_i16),(-21346_i16),28153_i16,6777_i16,2518_i16];
_2 = _6;
(*RET) = (-23637625042519892816694278439965782424_i128) as isize;
_1 = 72_isize;
_6 = -_2;
_7 = _12;
_6 = -_2;
(*RET) = _3 as isize;
_6 = _14 * _14;
_4 = !37_i8;
_14 = -_2;
(*RET) = -(-9223372036854775808_isize);
(*RET) = (-9223372036854775808_isize) << _3;
_7 = _12;
(*RET) = (-3_isize) ^ 9223372036854775807_isize;
_14 = -_6;
_11 = 2464824399628337671_usize as u16;
RET = core::ptr::addr_of!((*RET));
_12 = _7;
RET = core::ptr::addr_of!((*RET));
_6 = -_14;
_11 = !39554_u16;
_6 = _2;
_1 = 9223372036854775807_isize >> _3;
Goto(bb6)
}
bb10 = {
_4 = 186_u8 as i8;
(*RET) = (-9223372036854775808_isize) >> _4;
_3 = 2194723040_u32;
_1 = 1_isize - 56_isize;
(*RET) = 27835968665681519877100148524874382904_u128 as isize;
_2 = _6;
_6 = _3 as f32;
_2 = _6;
_1 = 9223372036854775807_isize;
(*RET) = -(-9223372036854775808_isize);
_10 = 334907535112300860581004295284998838434_u128 as f64;
_1 = (-9223372036854775808_isize);
_12 = [(-21269_i16),793_i16,(-4974_i16),1556_i16,20552_i16];
_13 = !true;
_1 = -9223372036854775807_isize;
(*RET) = !9223372036854775807_isize;
_14 = _6 + _6;
RET = core::ptr::addr_of!((*RET));
Goto(bb5)
}
bb11 = {
RET = core::ptr::addr_of!(_1);
_2 = 131351114087004081584427813813305352286_u128 as f32;
(*RET) = (-25_isize);
(*RET) = 107970956353365319234217100292689204047_u128 as isize;
_4 = 25_i8 | (-103_i8);
(*RET) = false as isize;
_2 = (-370997543_i32) as f32;
(*RET) = (-9223372036854775808_isize);
(*RET) = 3772375044_u32 as isize;
(*RET) = _2 as isize;
_4 = (-1728359244_i32) as i8;
Goto(bb3)
}
bb12 = {
(*RET) = _1;
_10 = (*RET) as f64;
_2 = _14;
_12 = _7;
_13 = !_18;
_19 = _1 * _1;
_17 = _13;
_23 = '\u{51f3}';
_24 = &_14;
_29.1 = _3 + _3;
_29.1 = !_3;
_11 = 3893413372931647351_usize as u16;
RET = core::ptr::addr_of!((*RET));
_28 = !17827374553563546350_u64;
_29.0.fld2 = _11 ^ _11;
RET = core::ptr::addr_of!((*RET));
_17 = _4 > _4;
_11 = !_29.0.fld2;
RET = core::ptr::addr_of!(_26.fld2);
_29.0.fld0 = (*_24) as i128;
_17 = !_13;
_26.fld2 = _19 << _4;
Call(_4 = fn7(), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_19 = (*RET) * _26.fld2;
_17 = !_18;
_23 = '\u{16860}';
_21 = &mut _28;
_11 = _29.0.fld2 | _29.0.fld2;
_31 = _29.0.fld0 & _29.0.fld0;
_23 = '\u{45a15}';
_26.fld0 = [_11,_11,_11,_11,_29.0.fld2,_11,_11];
_31 = _29.0.fld0 & _29.0.fld0;
_12 = _7;
_29.0.fld0 = !_31;
Call(_32 = fn13(_31, (*RET)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
(*_21) = !7284326467444612655_u64;
_28 = 5804072476986379007_i64 as u64;
RET = core::ptr::addr_of!(_26.fld2);
_2 = _14;
_34 = [_4,_4,_4,_4,_4,_4,_4];
_24 = &_14;
_1 = _29.1 as isize;
_32 = _23;
_2 = -_6;
_19 = _28 as isize;
_34 = [_4,_4,_4,_4,_4,_4,_4];
_24 = &_14;
_33 = _26.fld0;
_29.0.fld0 = _31 + _31;
_29.0.fld2 = _11 & _11;
_26.fld2 = _1 ^ _1;
_29.0.fld1 = [_29.0.fld2,_11,_29.0.fld2];
_29.0.fld0 = _31;
_26.fld1 = [_29.0.fld2,_29.0.fld2,_29.0.fld2,_11];
_14 = _2;
_14 = -_6;
_24 = &_6;
_10 = 448079442_i32 as f64;
_38 = _13;
(*RET) = -_1;
_26.fld2 = _19 << _29.0.fld0;
Goto(bb15)
}
bb15 = {
Call(_39 = dump_var(5_usize, 17_usize, Move(_17), 18_usize, Move(_18), 13_usize, Move(_13), 33_usize, Move(_33)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
Call(_39 = dump_var(5_usize, 7_usize, Move(_7), 4_usize, Move(_4), 1_usize, Move(_1), 12_usize, Move(_12)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_39 = dump_var(5_usize, 25_usize, Move(_25), 40_usize, _40, 40_usize, _40, 40_usize, _40), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn6(mut _1: isize,mut _2: *const isize,mut _3: isize,mut _4: isize,mut _5: isize,mut _6: isize,mut _7: isize) -> f32 {
mir! {
type RET = f32;
let _8: f32;
let _9: *mut [i8; 7];
let _10: isize;
let _11: [u64; 3];
let _12: *const &'static ((Adt41, u32, &'static mut i32), u16);
let _13: &'static f32;
let _14: Adt79;
let _15: &'static u16;
let _16: isize;
let _17: Adt41;
let _18: i32;
let _19: u128;
let _20: &'static mut f32;
let _21: (Adt41, u32, &'static mut i32);
let _22: &'static bool;
let _23: u32;
let _24: bool;
let _25: i64;
let _26: bool;
let _27: i8;
let _28: &'static mut u64;
let _29: u16;
let _30: char;
let _31: [i16; 5];
let _32: ();
let _33: ();
{
_2 = core::ptr::addr_of!(_3);
RET = 61_i8 as f32;
(*_2) = _7 | _6;
_5 = !(*_2);
_5 = (-1993731145_i32) as isize;
_2 = core::ptr::addr_of!((*_2));
_5 = (*_2) << _3;
Goto(bb1)
}
bb1 = {
_8 = -RET;
_7 = -(*_2);
(*_2) = _6 >> _1;
RET = _8;
RET = _8 + _8;
RET = _8;
RET = _8;
_1 = _7 >> _7;
(*_2) = -_1;
(*_2) = -_7;
Call(_7 = core::intrinsics::transmute(_5), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = 1724770514_i32 as f32;
_1 = 211_u8 as isize;
_8 = -RET;
_5 = _7;
_3 = _5 + _4;
_6 = _3;
_7 = _6;
_10 = _5;
RET = _8;
Goto(bb3)
}
bb3 = {
_5 = _1 + _6;
_5 = -(*_2);
_11 = [6324795063404451027_u64,14875634551778304384_u64,14975576326986866135_u64];
Goto(bb4)
}
bb4 = {
_5 = _7 * _7;
_7 = _5;
Goto(bb5)
}
bb5 = {
_8 = RET + RET;
_8 = 1515240289_u32 as f32;
_14.fld1 = [43326_u16,27362_u16,863_u16,2334_u16];
_14.fld0 = [15305_u16,10362_u16,14724_u16,24423_u16,59751_u16,18366_u16,51688_u16];
_7 = -(*_2);
_5 = _6 + _3;
_14.fld2 = (-29177684452508624528700641280504814234_i128) as isize;
_1 = _5 | _4;
RET = 85_i8 as f32;
_10 = -_5;
RET = _8 + _8;
_7 = _5;
_2 = core::ptr::addr_of!(_14.fld2);
Goto(bb6)
}
bb6 = {
RET = _8 - _8;
_14.fld1 = [24417_u16,16504_u16,9589_u16,64423_u16];
_10 = !_7;
(*_2) = -_7;
_10 = 7_usize as isize;
_10 = (-248484548_i32) as isize;
_11 = [4159293163202178149_u64,5916087813860640025_u64,8090074023501075156_u64];
_10 = -_14.fld2;
_5 = !(*_2);
(*_2) = _1 ^ _1;
_17.fld1 = [29534_u16,15634_u16,10529_u16];
_4 = 114_i8 as isize;
RET = -_8;
_13 = &RET;
_1 = 10450812399158604946_u64 as isize;
RET = _8 - _8;
_14.fld2 = !_10;
_4 = _14.fld2;
_3 = _5;
_14.fld2 = -_5;
_11 = [12063754084924699736_u64,12597137377703303737_u64,7262466033239416050_u64];
_6 = _7 ^ _3;
_4 = _5;
_19 = 243610545621662141265273608521695364851_u128;
_11 = [16730276705522741092_u64,8471660233060193757_u64,12127563338336311060_u64];
_21.0.fld0 = -69716758956872255039514187382874851730_i128;
match _19 {
0 => bb5,
1 => bb7,
2 => bb8,
3 => bb9,
243610545621662141265273608521695364851 => bb11,
_ => bb10
}
}
bb7 = {
_8 = RET + RET;
_8 = 1515240289_u32 as f32;
_14.fld1 = [43326_u16,27362_u16,863_u16,2334_u16];
_14.fld0 = [15305_u16,10362_u16,14724_u16,24423_u16,59751_u16,18366_u16,51688_u16];
_7 = -(*_2);
_5 = _6 + _3;
_14.fld2 = (-29177684452508624528700641280504814234_i128) as isize;
_1 = _5 | _4;
RET = 85_i8 as f32;
_10 = -_5;
RET = _8 + _8;
_7 = _5;
_2 = core::ptr::addr_of!(_14.fld2);
Goto(bb6)
}
bb8 = {
_5 = _7 * _7;
_7 = _5;
Goto(bb5)
}
bb9 = {
_5 = _1 + _6;
_5 = -(*_2);
_11 = [6324795063404451027_u64,14875634551778304384_u64,14975576326986866135_u64];
Goto(bb4)
}
bb10 = {
_8 = 1724770514_i32 as f32;
_1 = 211_u8 as isize;
_8 = -RET;
_5 = _7;
_3 = _5 + _4;
_6 = _3;
_7 = _6;
_10 = _5;
RET = _8;
Goto(bb3)
}
bb11 = {
_21.0.fld0 = -64608929171477643802185953040662960119_i128;
_21.0.fld2 = !29676_u16;
_13 = &_8;
Goto(bb12)
}
bb12 = {
_6 = _10 ^ (*_2);
_4 = (-4435574196679282051_i64) as isize;
_14.fld0 = [_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2];
_18 = 140515407_i32 | 1865554925_i32;
_17.fld1 = [_21.0.fld2,_21.0.fld2,_21.0.fld2];
_21.0 = Adt41 { fld0: (-146996542845919829518407198823214665250_i128),fld1: _17.fld1,fld2: 1414_u16 };
(*_2) = !_7;
_15 = &_21.0.fld2;
_19 = _18 as u128;
_10 = 235_u8 as isize;
_19 = 7574199808332237548503288856257310292_u128 & 329266205892370141656698593903914462287_u128;
_21.2 = &mut _18;
RET = (*_13) + (*_13);
_14.fld1 = [_21.0.fld2,(*_15),(*_15),(*_15)];
(*_2) = !_3;
_17.fld2 = RET as u16;
_17.fld1 = _21.0.fld1;
Call(_21.1 = core::intrinsics::transmute(_18), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
_15 = &(*_15);
_25 = _18 as i64;
_17.fld0 = _21.0.fld0;
_24 = false;
_21.1 = 1497784724_u32;
(*_2) = 17438169527050628266_u64 as isize;
_3 = _21.1 as isize;
_4 = _6;
_10 = _4 >> _7;
_17.fld2 = (*_15) << _6;
_13 = &RET;
_17.fld2 = _25 as u16;
_20 = &mut _8;
_3 = 15967586052059844911_u64 as isize;
_14.fld1 = [_21.0.fld2,_17.fld2,_17.fld2,(*_15)];
_1 = _25 as isize;
_7 = _10 << _10;
(*_2) = -_5;
_17 = Adt41 { fld0: _21.0.fld0,fld1: _21.0.fld1,fld2: (*_15) };
_22 = &_24;
_5 = !_6;
_7 = -_14.fld2;
_4 = (*_2) & _6;
RET = _8;
match _21.0.fld2 {
0 => bb1,
1 => bb12,
1414 => bb15,
_ => bb14
}
}
bb14 = {
_6 = _10 ^ (*_2);
_4 = (-4435574196679282051_i64) as isize;
_14.fld0 = [_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2,_21.0.fld2];
_18 = 140515407_i32 | 1865554925_i32;
_17.fld1 = [_21.0.fld2,_21.0.fld2,_21.0.fld2];
_21.0 = Adt41 { fld0: (-146996542845919829518407198823214665250_i128),fld1: _17.fld1,fld2: 1414_u16 };
(*_2) = !_7;
_15 = &_21.0.fld2;
_19 = _18 as u128;
_10 = 235_u8 as isize;
_19 = 7574199808332237548503288856257310292_u128 & 329266205892370141656698593903914462287_u128;
_21.2 = &mut _18;
RET = (*_13) + (*_13);
_14.fld1 = [_21.0.fld2,(*_15),(*_15),(*_15)];
(*_2) = !_3;
_17.fld2 = RET as u16;
_17.fld1 = _21.0.fld1;
Call(_21.1 = core::intrinsics::transmute(_18), ReturnTo(bb13), UnwindUnreachable())
}
bb15 = {
_21.0.fld2 = (-21855_i16) as u16;
_24 = !true;
RET = (*_20);
_11 = [15146136934281856208_u64,11494327499528525665_u64,6766914313593809388_u64];
_27 = 5247_i16 as i8;
_29 = _17.fld2;
_21.0.fld0 = -_17.fld0;
_23 = _21.1 & _21.1;
RET = 7732_i16 as f32;
_6 = _10;
_17.fld2 = _29;
_14.fld1 = [_29,_17.fld2,_21.0.fld2,_17.fld2];
_3 = (*_2) & _6;
_26 = _24;
_21.1 = _23;
_26 = _24;
_17.fld0 = _21.0.fld0;
_29 = !_21.0.fld2;
_10 = _7;
_2 = core::ptr::addr_of!((*_2));
_4 = _25 as isize;
_27 = 84_i8;
_4 = _14.fld2 | (*_2);
_21.2 = &mut _18;
Goto(bb16)
}
bb16 = {
Call(_32 = dump_var(6_usize, 11_usize, Move(_11), 19_usize, Move(_19), 5_usize, Move(_5), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_32 = dump_var(6_usize, 18_usize, Move(_18), 4_usize, Move(_4), 26_usize, Move(_26), 25_usize, Move(_25)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7() -> i8 {
mir! {
type RET = i8;
let _1: i128;
let _2: isize;
let _3: ([i16; 5],);
let _4: (((u16, i8), [u16; 8]), (u16, i8));
let _5: &'static u16;
let _6: bool;
let _7: f64;
let _8: char;
let _9: isize;
let _10: ([i16; 5],);
let _11: *mut u16;
let _12: ([i16; 5],);
let _13: usize;
let _14: &'static i32;
let _15: [u16; 8];
let _16: isize;
let _17: Adt41;
let _18: ();
let _19: ();
{
RET = (-37_i8);
_1 = 1_usize as i128;
_1 = 3979824633015801298_i64 as i128;
_1 = 140119954736031193216840822241885343040_i128 | 22399881017639979220941482262996968827_i128;
RET = 126_isize as i8;
_1 = (-30212935371700968442114323516544765572_i128);
match _1 {
310069431549237495021260283915223445884 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_1 = !169834466386533976028180046967944625534_i128;
_1 = !(-72111745263308149892012317557032068311_i128);
_1 = 41318776355749449435196092306632724588_i128;
_1 = 90330297096148299466445979187018610727_i128;
_1 = 59067843039070082612244582880639045063_i128;
_2 = (-46_isize) >> _1;
RET = 78_i8;
_2 = -(-9223372036854775808_isize);
_1 = -76767779904307641956542756266363119387_i128;
_4.0.0.0 = !35618_u16;
RET = (-94_i8);
RET = (-66_i8);
_2 = (-27703_i16) as isize;
_4.0.0.1 = -RET;
_4.0.0.0 = !37630_u16;
_4.1 = (_4.0.0.0, RET);
_1 = !(-13470699503923422349463121022422395824_i128);
Call(_4.0 = fn8(_1, _4.1), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_4.1.0 = _4.0.0.0;
_4.1.1 = 114513333839694048703718855208074055689_u128 as i8;
_4.0.0.0 = _4.1.0;
_3.0 = [(-32552_i16),1070_i16,19860_i16,(-10273_i16),(-2270_i16)];
_1 = 4_usize as i128;
_4.0.0 = (_4.1.0, RET);
_2 = (-9223372036854775808_isize);
_4.0.1 = [_4.1.0,_4.0.0.0,_4.1.0,_4.0.0.0,_4.1.0,_4.1.0,_4.1.0,_4.1.0];
_4.0.0.1 = _4.1.1 | RET;
_4.0.0.0 = 15742767381319453817_u64 as u16;
_5 = &_4.1.0;
_4.1.1 = '\u{1260d}' as i8;
RET = '\u{4af1}' as i8;
_6 = (*_5) >= _4.1.0;
_4.0.0 = _4.1;
RET = 5236020086015371860_u64 as i8;
_3.0 = [(-31454_i16),2637_i16,9973_i16,5791_i16,25311_i16];
_4.0.1 = [(*_5),_4.1.0,_4.1.0,(*_5),_4.1.0,_4.0.0.0,_4.0.0.0,(*_5)];
_4.0.1 = [_4.0.0.0,(*_5),(*_5),(*_5),(*_5),_4.1.0,_4.0.0.0,(*_5)];
_1 = 28563070412197996705277830695357202035_i128 >> _4.0.0.0;
_4.0.0.1 = RET;
_4.0.0 = ((*_5), RET);
_2 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_3.0 = [31119_i16,26407_i16,(-22840_i16),(-32465_i16),19496_i16];
_1 = 56827595934135621446276528786070362759_i128 >> _4.1.0;
_3.0 = [19941_i16,(-26493_i16),(-9673_i16),(-21686_i16),18371_i16];
_2 = 115_isize + 116_isize;
_3.0 = [(-30227_i16),(-1689_i16),(-19417_i16),(-25110_i16),20065_i16];
_4.1 = _4.0.0;
_4.0.0.0 = _4.1.0 - _4.1.0;
Call(_2 = fn9(_6, _1, _6, _6, _1, _4.0.0, _4.0.0), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
RET = !_4.1.1;
RET = -_4.0.0.1;
_4.1.0 = _4.0.0.0;
_4.1.1 = !RET;
_4.0.1 = [_4.0.0.0,_4.0.0.0,_4.0.0.0,_4.0.0.0,_4.0.0.0,_4.0.0.0,_4.0.0.0,_4.0.0.0];
_8 = '\u{c8bc1}';
_4.1.1 = RET ^ RET;
_10 = (_3.0,);
RET = 18055741180134764859_u64 as i8;
_10.0 = [(-20203_i16),(-11123_i16),(-16004_i16),28565_i16,2100_i16];
RET = _2 as i8;
_4.1.0 = !_4.0.0.0;
_4.0.0.0 = !_4.1.0;
_5 = &_4.0.0.0;
RET = _4.1.1 & _4.1.1;
_2 = 7719338286461192771_i64 as isize;
_10.0 = _3.0;
_10 = (_3.0,);
_4.0.0.0 = _4.1.0 & _4.1.0;
_9 = _2 ^ _2;
_2 = _9;
RET = !_4.1.1;
_4.1 = (_4.0.0.0, _4.0.0.1);
_4.0.0.1 = RET << _4.0.0.0;
Goto(bb5)
}
bb5 = {
_7 = _1 as f64;
_10.0 = [12269_i16,26666_i16,(-17341_i16),(-21552_i16),(-10207_i16)];
_4.0.0.1 = !_4.1.1;
_10 = (_3.0,);
_4.0.0 = (_4.1.0, _4.1.1);
_5 = &_4.1.0;
_12.0 = [2323_i16,(-27135_i16),(-31371_i16),(-9573_i16),(-13689_i16)];
_3 = _10;
_4.1.0 = !_4.0.0.0;
_4.1 = (_4.0.0.0, RET);
_7 = _1 as f64;
_7 = 2011938609_i32 as f64;
_1 = 158_u8 as i128;
_4.1 = (_4.0.0.0, RET);
_4.1.1 = _4.0.0.0 as i8;
_10 = _12;
_4.1 = (_4.0.0.0, RET);
_12 = (_3.0,);
_9 = !_2;
_4.0.0 = (_4.1.0, RET);
Goto(bb6)
}
bb6 = {
_1 = -160349480650718273398939841112890897465_i128;
_4.0.0.0 = _4.1.0;
_3 = _12;
_8 = '\u{d4a99}';
_13 = 6_usize;
_2 = -_9;
_4.1.1 = RET * RET;
_4.1 = (_4.0.0.0, RET);
_3.0 = [(-23926_i16),12209_i16,6720_i16,(-1259_i16),(-28102_i16)];
Call(_4.1.1 = fn11(Move(_5), RET, _4.0, _6, _4.0.0.0, _4.1.0, _4.0, _4.0.1), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
_4.0.0.1 = !RET;
_12 = _3;
_5 = &_4.0.0.0;
_7 = (-7947_i16) as f64;
_4.1 = _4.0.0;
_4.0.0.0 = _4.1.0;
_4.0.0.1 = _4.1.1 << _4.1.0;
_3 = _10;
_8 = '\u{118ca}';
_9 = _2 * _2;
_4.0.1 = [_4.1.0,_4.1.0,_4.0.0.0,_4.0.0.0,_4.1.0,_4.0.0.0,_4.0.0.0,_4.1.0];
_12 = (_10.0,);
_4.1.1 = !_4.0.0.1;
RET = !_4.1.1;
Goto(bb8)
}
bb8 = {
Call(_18 = dump_var(7_usize, 3_usize, Move(_3), 13_usize, Move(_13), 9_usize, Move(_9), 4_usize, Move(_4)), ReturnTo(bb9), UnwindUnreachable())
}
bb9 = {
Call(_18 = dump_var(7_usize, 1_usize, Move(_1), 19_usize, _19, 19_usize, _19, 19_usize, _19), ReturnTo(bb10), UnwindUnreachable())
}
bb10 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn8(mut _1: i128,mut _2: (u16, i8)) -> ((u16, i8), [u16; 8]) {
mir! {
type RET = ((u16, i8), [u16; 8]);
let _3: i128;
let _4: [isize; 6];
let _5: isize;
let _6: u64;
let _7: [u16; 8];
let _8: (*mut i32, &'static mut i32, (Adt41, u32, &'static mut i32), &'static Adt34);
let _9: u8;
let _10: *mut f32;
let _11: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _12: [u16; 4];
let _13: [u16; 7];
let _14: [u64; 3];
let _15: *mut usize;
let _16: char;
let _17: &'static i128;
let _18: bool;
let _19: ();
let _20: ();
{
RET.0 = (_2.0, _2.1);
_2 = (RET.0.0, RET.0.1);
RET.0 = (_2.0, _2.1);
RET.1 = [RET.0.0,_2.0,RET.0.0,_2.0,RET.0.0,RET.0.0,_2.0,RET.0.0];
RET.1 = [RET.0.0,RET.0.0,_2.0,_2.0,_2.0,_2.0,_2.0,_2.0];
RET.0.0 = _2.0 << _2.1;
_2 = (RET.0.0, RET.0.1);
Call(_5 = core::intrinsics::bswap(22_isize), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_1 = 107819790388998279442842037517995079904_i128;
_5 = false as isize;
_4 = [_5,_5,_5,_5,_5,_5];
RET.1 = [_2.0,RET.0.0,RET.0.0,_2.0,_2.0,_2.0,_2.0,_2.0];
RET.0.0 = _2.0 & _2.0;
_5 = -(-9223372036854775808_isize);
_3 = !_1;
_2.1 = !RET.0.1;
RET.0.1 = _2.1 & _2.1;
Call(_3 = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = (-27624_i16) as u64;
_8.2.0.fld0 = _1;
_8.2.0.fld1 = [_2.0,RET.0.0,RET.0.0];
_8.2.0.fld1 = [RET.0.0,RET.0.0,RET.0.0];
_6 = !4306246882765775261_u64;
RET.0.0 = !_2.0;
match _8.2.0.fld0 {
0 => bb3,
1 => bb4,
2 => bb5,
107819790388998279442842037517995079904 => bb7,
_ => bb6
}
}
bb3 = {
_1 = 107819790388998279442842037517995079904_i128;
_5 = false as isize;
_4 = [_5,_5,_5,_5,_5,_5];
RET.1 = [_2.0,RET.0.0,RET.0.0,_2.0,_2.0,_2.0,_2.0,_2.0];
RET.0.0 = _2.0 & _2.0;
_5 = -(-9223372036854775808_isize);
_3 = !_1;
_2.1 = !RET.0.1;
RET.0.1 = _2.1 & _2.1;
Call(_3 = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = 9071362827137187139_u64;
_4 = [_5,_5,_5,_5,_5,_5];
RET.0.1 = _2.1;
_8.2.1 = !1796185745_u32;
_3 = 7_usize as i128;
_4 = [_5,_5,_5,_5,_5,_5];
_8.2.0.fld2 = !RET.0.0;
_8.2.0.fld1 = [RET.0.0,_8.2.0.fld2,_8.2.0.fld2];
_2 = RET.0;
_8.2.0.fld2 = !RET.0.0;
_8.2.0.fld2 = _6 as u16;
RET.0 = _2;
_6 = 18031099325845994544_u64 * 13860081342939258640_u64;
_6 = _5 as u64;
RET.0.1 = _2.1;
_8.2.1 = false as u32;
_8.2.0.fld2 = RET.0.0 | _2.0;
_2.0 = !_8.2.0.fld2;
_8.2.0.fld0 = _3;
_11.3 = &mut _4;
RET.0.0 = '\u{385e}' as u16;
_6 = 1678907489847400425_u64 & 13207602499419253716_u64;
_11.2 = [_5,_5,_5,_5,_5,_5];
RET.0.0 = _2.0 - _2.0;
_11.0 = 41_u8 as u128;
match _1 {
0 => bb1,
1 => bb8,
2 => bb9,
3 => bb10,
4 => bb11,
107819790388998279442842037517995079904 => bb13,
_ => bb12
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
_1 = 107819790388998279442842037517995079904_i128;
_5 = false as isize;
_4 = [_5,_5,_5,_5,_5,_5];
RET.1 = [_2.0,RET.0.0,RET.0.0,_2.0,_2.0,_2.0,_2.0,_2.0];
RET.0.0 = _2.0 & _2.0;
_5 = -(-9223372036854775808_isize);
_3 = !_1;
_2.1 = !RET.0.1;
RET.0.1 = _2.1 & _2.1;
Call(_3 = core::intrinsics::transmute(_1), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_6 = (-27624_i16) as u64;
_8.2.0.fld0 = _1;
_8.2.0.fld1 = [_2.0,RET.0.0,RET.0.0];
_8.2.0.fld1 = [RET.0.0,RET.0.0,RET.0.0];
_6 = !4306246882765775261_u64;
RET.0.0 = !_2.0;
match _8.2.0.fld0 {
0 => bb3,
1 => bb4,
2 => bb5,
107819790388998279442842037517995079904 => bb7,
_ => bb6
}
}
bb13 = {
_12 = [_2.0,RET.0.0,RET.0.0,_2.0];
RET.0 = _2;
RET.0.0 = _8.2.0.fld2 & _8.2.0.fld2;
RET.1 = [RET.0.0,_8.2.0.fld2,_2.0,RET.0.0,RET.0.0,RET.0.0,RET.0.0,_8.2.0.fld2];
_2.1 = -RET.0.1;
RET.0.1 = _2.1;
_11.0 = !209885442405825063904364729176247381813_u128;
_4 = [_5,_5,_5,_5,_5,_5];
RET.1 = [RET.0.0,RET.0.0,_8.2.0.fld2,_2.0,RET.0.0,_8.2.0.fld2,RET.0.0,_2.0];
RET.0.1 = _8.2.0.fld0 as i8;
_5 = -(-125_isize);
RET.0.0 = _2.0;
_12 = [_8.2.0.fld2,_8.2.0.fld2,_8.2.0.fld2,_8.2.0.fld2];
_11.1 = [RET.0.0,_2.0,_2.0,RET.0.0,_8.2.0.fld2,_8.2.0.fld2,RET.0.0,_2.0];
RET.0.0 = !_8.2.0.fld2;
_3 = 17172782904831854880_usize as i128;
_12 = [_2.0,_8.2.0.fld2,_2.0,_2.0];
RET = (_2, _11.1);
RET.0.1 = !_2.1;
_14 = [_6,_6,_6];
_7 = RET.1;
RET.1 = _11.1;
RET.0.0 = !_2.0;
_8.2.0.fld2 = RET.0.0 + RET.0.0;
_8.2.0.fld1 = [RET.0.0,_8.2.0.fld2,_8.2.0.fld2];
RET.0.0 = 493460659_i32 as u16;
match _1 {
0 => bb1,
1 => bb4,
107819790388998279442842037517995079904 => bb15,
_ => bb14
}
}
bb14 = {
Return()
}
bb15 = {
_8.2.0.fld1 = [_8.2.0.fld2,RET.0.0,_8.2.0.fld2];
_11.1 = [_8.2.0.fld2,_8.2.0.fld2,_2.0,_8.2.0.fld2,_2.0,_8.2.0.fld2,_2.0,_2.0];
_12 = [_8.2.0.fld2,_2.0,_8.2.0.fld2,_8.2.0.fld2];
_8.2.0.fld1 = [_8.2.0.fld2,_8.2.0.fld2,_8.2.0.fld2];
_17 = &_1;
_16 = '\u{2634a}';
_1 = _8.2.0.fld0;
RET.0 = (_8.2.0.fld2, _2.1);
RET.0 = (_8.2.0.fld2, _2.1);
Goto(bb16)
}
bb16 = {
Call(_19 = dump_var(8_usize, 12_usize, Move(_12), 6_usize, Move(_6), 16_usize, Move(_16), 2_usize, Move(_2)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_19 = dump_var(8_usize, 1_usize, Move(_1), 20_usize, _20, 20_usize, _20, 20_usize, _20), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn9(mut _1: bool,mut _2: i128,mut _3: bool,mut _4: bool,mut _5: i128,mut _6: (u16, i8),mut _7: (u16, i8)) -> isize {
mir! {
type RET = isize;
let _8: i32;
let _9: [i8; 6];
let _10: u128;
let _11: (u16, i8);
let _12: f32;
let _13: u32;
let _14: i128;
let _15: ();
let _16: ();
{
_6.1 = _7.1 ^ _7.1;
_6 = (_7.0, _7.1);
_4 = _3 > _3;
RET = '\u{8a0be}' as isize;
_4 = !_1;
Call(_8 = fn10(_1, _3, _6, _4), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_6.0 = _7.0 | _7.0;
_7.0 = !_6.0;
_6.0 = _7.0 >> _8;
RET = 144_u8 as isize;
RET = !9223372036854775807_isize;
_7.0 = !_6.0;
RET = (-111_isize);
_7 = (_6.0, _6.1);
_9 = [_7.1,_7.1,_7.1,_7.1,_6.1,_7.1];
_8 = _6.0 as i32;
_9 = [_6.1,_7.1,_6.1,_6.1,_6.1,_7.1];
_5 = _2 & _2;
_5 = _4 as i128;
RET = _6.0 as isize;
_7.1 = _6.1;
_9 = [_6.1,_6.1,_6.1,_7.1,_7.1,_6.1];
_8 = 1514115883_i32;
_1 = _3;
_4 = _1 & _3;
_6.1 = _7.1 >> _6.0;
_13 = 2103194599_u32;
_10 = _6.0 as u128;
_6.0 = 16_u8 as u16;
_4 = _7.0 != _7.0;
_11.1 = _10 as i8;
_14 = _4 as i128;
Goto(bb2)
}
bb2 = {
Call(_15 = dump_var(9_usize, 7_usize, Move(_7), 2_usize, Move(_2), 1_usize, Move(_1), 10_usize, Move(_10)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Call(_15 = dump_var(9_usize, 3_usize, Move(_3), 9_usize, Move(_9), 16_usize, _16, 16_usize, _16), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: bool,mut _2: bool,mut _3: (u16, i8),mut _4: bool) -> i32 {
mir! {
type RET = i32;
let _5: Adt77;
let _6: *const isize;
let _7: &'static Adt34;
let _8: (((u16, i8), [u16; 8]), (u16, i8));
let _9: Adt70;
let _10: u8;
let _11: Adt79;
let _12: (i64, i32, *const i16, i32);
let _13: i128;
let _14: isize;
let _15: char;
let _16: ();
let _17: ();
{
RET = 1208677940_i32;
_4 = _3.0 == _3.0;
RET = -(-857364259_i32);
_4 = !_2;
_3.1 = !(-126_i8);
_4 = _3.0 == _3.0;
_4 = !_2;
RET = _4 as i32;
_3.0 = '\u{69651}' as u16;
_4 = _2 >= _1;
_1 = _4 ^ _4;
RET = (-2090243373_i32) * (-874336409_i32);
_1 = !_4;
Goto(bb1)
}
bb1 = {
_2 = _4;
RET = (-804411090_i32) - 230135067_i32;
_3.0 = 31914_u16 - 19212_u16;
_3 = (61206_u16, (-102_i8));
_3.1 = -(-19_i8);
RET = 9600818_i32 << _3.0;
_3 = (18870_u16, (-66_i8));
_1 = _4;
_3.0 = 14745_u16 | 63816_u16;
_2 = _1 >= _1;
_1 = !_4;
_2 = _1 ^ _1;
_2 = !_1;
_3 = (16367_u16, (-67_i8));
_3.0 = !24923_u16;
_8.1 = (_3.0, _3.1);
_8.0.0.0 = _3.1 as u16;
RET = !(-2007550516_i32);
_4 = _2 & _2;
_8.1.0 = _3.0;
_8.0.0.1 = _3.1 << _8.1.1;
_8.0.1 = [_8.0.0.0,_8.0.0.0,_8.1.0,_8.0.0.0,_8.1.0,_8.1.0,_8.0.0.0,_8.1.0];
_1 = _2 >= _4;
_8.1.0 = !_8.0.0.0;
Goto(bb2)
}
bb2 = {
_8.1.1 = _8.0.0.1 & _3.1;
_3.0 = _8.1.0;
_8.0.1 = [_8.0.0.0,_8.0.0.0,_3.0,_3.0,_8.0.0.0,_8.1.0,_8.1.0,_8.1.0];
_8.0.0.0 = _8.1.0 - _8.1.0;
_3.0 = _8.0.0.0 - _8.1.0;
_2 = _1 ^ _4;
_3 = (_8.1.0, _8.1.1);
_8.0.0.0 = _8.1.0 - _8.1.0;
_4 = _2;
RET = _2 as i32;
RET = -(-1956350312_i32);
_10 = !60_u8;
_3.1 = _8.0.0.1 | _8.1.1;
_3.0 = _8.0.0.0 | _8.0.0.0;
_3.1 = -_8.1.1;
_8.1 = (_8.0.0.0, _3.1);
_10 = 126_u8;
match _10 {
0 => bb1,
1 => bb3,
2 => bb4,
126 => bb6,
_ => bb5
}
}
bb3 = {
_2 = _4;
RET = (-804411090_i32) - 230135067_i32;
_3.0 = 31914_u16 - 19212_u16;
_3 = (61206_u16, (-102_i8));
_3.1 = -(-19_i8);
RET = 9600818_i32 << _3.0;
_3 = (18870_u16, (-66_i8));
_1 = _4;
_3.0 = 14745_u16 | 63816_u16;
_2 = _1 >= _1;
_1 = !_4;
_2 = _1 ^ _1;
_2 = !_1;
_3 = (16367_u16, (-67_i8));
_3.0 = !24923_u16;
_8.1 = (_3.0, _3.1);
_8.0.0.0 = _3.1 as u16;
RET = !(-2007550516_i32);
_4 = _2 & _2;
_8.1.0 = _3.0;
_8.0.0.1 = _3.1 << _8.1.1;
_8.0.1 = [_8.0.0.0,_8.0.0.0,_8.1.0,_8.0.0.0,_8.1.0,_8.1.0,_8.0.0.0,_8.1.0];
_1 = _2 >= _4;
_8.1.0 = !_8.0.0.0;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_3.0 = _8.1.0 | _8.1.0;
_8.1 = (_3.0, _3.1);
RET = 1870736133_i32;
_3 = (_8.1.0, _8.0.0.1);
_13 = _4 as i128;
RET = 74008334_i32 >> _13;
_11.fld0 = [_8.0.0.0,_3.0,_3.0,_8.0.0.0,_8.1.0,_8.1.0,_3.0];
_8.0.0 = (_8.1.0, _8.1.1);
_11.fld1 = [_8.1.0,_3.0,_3.0,_3.0];
_8.0.0.1 = _8.1.1 + _3.1;
_12.0 = (-2667748971990502137_i64);
_13 = !122158926215724860844109087416858493945_i128;
_8.1.0 = _3.0 * _8.0.0.0;
_11.fld2 = -(-9223372036854775808_isize);
_2 = !_4;
_12.3 = _8.1.1 as i32;
_11.fld0 = [_3.0,_8.0.0.0,_3.0,_3.0,_8.0.0.0,_8.0.0.0,_3.0];
_8.0.0.0 = _3.0;
_11.fld1 = [_8.1.0,_8.1.0,_8.1.0,_8.0.0.0];
_14 = _11.fld2;
_11.fld1 = [_3.0,_3.0,_8.0.0.0,_8.1.0];
Goto(bb7)
}
bb7 = {
Call(_16 = dump_var(10_usize, 4_usize, Move(_4), 14_usize, Move(_14), 2_usize, Move(_2), 10_usize, Move(_10)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11(mut _1: &'static u16,mut _2: i8,mut _3: ((u16, i8), [u16; 8]),mut _4: bool,mut _5: u16,mut _6: u16,mut _7: ((u16, i8), [u16; 8]),mut _8: [u16; 8]) -> i8 {
mir! {
type RET = i8;
let _9: &'static mut [isize; 6];
let _10: u128;
let _11: (&'static u32,);
let _12: [u16; 7];
let _13: &'static i128;
let _14: f32;
let _15: i16;
let _16: char;
let _17: bool;
let _18: [usize; 2];
let _19: f32;
let _20: (Adt41, u32, &'static mut i32);
let _21: *mut i32;
let _22: char;
let _23: &'static i128;
let _24: u64;
let _25: f64;
let _26: ();
let _27: ();
{
_8 = [_5,_7.0.0,_5,_7.0.0,_7.0.0,_5,_5,_6];
_6 = _5 * _3.0.0;
RET = -_3.0.1;
_2 = _3.0.1;
Goto(bb1)
}
bb1 = {
_7 = _3;
_3.0.1 = !RET;
_2 = !_3.0.1;
_3.0.0 = !_6;
RET = _3.0.1 * _3.0.1;
_8 = [_6,_7.0.0,_6,_3.0.0,_7.0.0,_3.0.0,_6,_6];
_6 = _7.0.0;
_2 = _3.0.1 - RET;
_3 = (_7.0, _7.1);
_7.1 = [_5,_3.0.0,_5,_3.0.0,_5,_3.0.0,_3.0.0,_7.0.0];
_5 = _6;
_3 = (_7.0, _7.1);
_3.0.1 = !_2;
Goto(bb2)
}
bb2 = {
_2 = _3.0.1;
_7.1 = [_6,_3.0.0,_6,_6,_5,_5,_5,_5];
_6 = _7.0.0 - _7.0.0;
_3.0.1 = _7.0.1;
_5 = _7.0.0 & _6;
_7.1 = [_5,_3.0.0,_6,_5,_6,_6,_7.0.0,_5];
_5 = _7.0.0;
_1 = &_3.0.0;
_4 = false;
_3.0.0 = !_6;
RET = (-9223372036854775808_isize) as i8;
_7 = (_3.0, _3.1);
Call(_3 = fn12(_7.0, _6, _7.0, _2, _7.0, _7.0.0, _7.0, _7, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
RET = _7.0.1 >> _7.0.0;
_7 = (_3.0, _8);
_3 = (_7.0, _8);
_4 = false;
_4 = !false;
_5 = _6 & _7.0.0;
_10 = 172566269584423638909052392241684824021_u128;
_3.0 = (_7.0.0, RET);
_3.1 = [_5,_3.0.0,_3.0.0,_5,_5,_3.0.0,_6,_6];
_2 = 14953828108911208528_usize as i8;
_3 = (_7.0, _8);
RET = _2;
_4 = true;
_7.0.0 = _3.0.0 << _3.0.0;
_2 = _7.0.1 | _7.0.1;
match _10 {
0 => bb1,
1 => bb4,
172566269584423638909052392241684824021 => bb6,
_ => bb5
}
}
bb4 = {
_2 = _3.0.1;
_7.1 = [_6,_3.0.0,_6,_6,_5,_5,_5,_5];
_6 = _7.0.0 - _7.0.0;
_3.0.1 = _7.0.1;
_5 = _7.0.0 & _6;
_7.1 = [_5,_3.0.0,_6,_5,_6,_6,_7.0.0,_5];
_5 = _7.0.0;
_1 = &_3.0.0;
_4 = false;
_3.0.0 = !_6;
RET = (-9223372036854775808_isize) as i8;
_7 = (_3.0, _3.1);
Call(_3 = fn12(_7.0, _6, _7.0, _2, _7.0, _7.0.0, _7.0, _7, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_7 = _3;
_3.0.1 = !RET;
_2 = !_3.0.1;
_3.0.0 = !_6;
RET = _3.0.1 * _3.0.1;
_8 = [_6,_7.0.0,_6,_3.0.0,_7.0.0,_3.0.0,_6,_6];
_6 = _7.0.0;
_2 = _3.0.1 - RET;
_3 = (_7.0, _7.1);
_7.1 = [_5,_3.0.0,_5,_3.0.0,_5,_3.0.0,_3.0.0,_7.0.0];
_5 = _6;
_3 = (_7.0, _7.1);
_3.0.1 = !_2;
Goto(bb2)
}
bb6 = {
_7.0.0 = !_6;
_12 = [_5,_3.0.0,_3.0.0,_3.0.0,_5,_5,_5];
_4 = _6 < _3.0.0;
_14 = 2935144117_u32 as f32;
_3 = (_7.0, _7.1);
_7.0 = _3.0;
_7 = (_3.0, _8);
_15 = _10 as i16;
_7 = _3;
_7.0.0 = '\u{cfae1}' as u16;
_14 = (-456687330_i32) as f32;
_6 = 14541041074503195486_u64 as u16;
_7.0 = (_5, _2);
_8 = [_5,_7.0.0,_7.0.0,_7.0.0,_3.0.0,_5,_5,_7.0.0];
_7 = (_3.0, _3.1);
_12 = [_5,_5,_5,_3.0.0,_3.0.0,_3.0.0,_3.0.0];
_15 = !(-26772_i16);
_17 = _4 & _4;
_19 = (-9223372036854775808_isize) as f32;
Goto(bb7)
}
bb7 = {
_14 = _19;
_20.0.fld2 = _3.0.0;
RET = -_7.0.1;
_20.0.fld1 = [_3.0.0,_20.0.fld2,_20.0.fld2];
_20.0.fld0 = -(-6758985142406017665972143001709092846_i128);
_12 = [_20.0.fld2,_7.0.0,_5,_7.0.0,_5,_5,_20.0.fld2];
_13 = &_20.0.fld0;
RET = _7.0.1;
_3.0 = (_20.0.fld2, RET);
_18 = [6_usize,2_usize];
_7 = (_3.0, _3.1);
_7.0 = (_5, _2);
_12 = [_20.0.fld2,_7.0.0,_5,_7.0.0,_7.0.0,_5,_20.0.fld2];
match _10 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
172566269584423638909052392241684824021 => bb12,
_ => bb11
}
}
bb8 = {
_7.0.0 = !_6;
_12 = [_5,_3.0.0,_3.0.0,_3.0.0,_5,_5,_5];
_4 = _6 < _3.0.0;
_14 = 2935144117_u32 as f32;
_3 = (_7.0, _7.1);
_7.0 = _3.0;
_7 = (_3.0, _8);
_15 = _10 as i16;
_7 = _3;
_7.0.0 = '\u{cfae1}' as u16;
_14 = (-456687330_i32) as f32;
_6 = 14541041074503195486_u64 as u16;
_7.0 = (_5, _2);
_8 = [_5,_7.0.0,_7.0.0,_7.0.0,_3.0.0,_5,_5,_7.0.0];
_7 = (_3.0, _3.1);
_12 = [_5,_5,_5,_3.0.0,_3.0.0,_3.0.0,_3.0.0];
_15 = !(-26772_i16);
_17 = _4 & _4;
_19 = (-9223372036854775808_isize) as f32;
Goto(bb7)
}
bb9 = {
_2 = _3.0.1;
_7.1 = [_6,_3.0.0,_6,_6,_5,_5,_5,_5];
_6 = _7.0.0 - _7.0.0;
_3.0.1 = _7.0.1;
_5 = _7.0.0 & _6;
_7.1 = [_5,_3.0.0,_6,_5,_6,_6,_7.0.0,_5];
_5 = _7.0.0;
_1 = &_3.0.0;
_4 = false;
_3.0.0 = !_6;
RET = (-9223372036854775808_isize) as i8;
_7 = (_3.0, _3.1);
Call(_3 = fn12(_7.0, _6, _7.0, _2, _7.0, _7.0.0, _7.0, _7, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb10 = {
_2 = _3.0.1;
_7.1 = [_6,_3.0.0,_6,_6,_5,_5,_5,_5];
_6 = _7.0.0 - _7.0.0;
_3.0.1 = _7.0.1;
_5 = _7.0.0 & _6;
_7.1 = [_5,_3.0.0,_6,_5,_6,_6,_7.0.0,_5];
_5 = _7.0.0;
_1 = &_3.0.0;
_4 = false;
_3.0.0 = !_6;
RET = (-9223372036854775808_isize) as i8;
_7 = (_3.0, _3.1);
Call(_3 = fn12(_7.0, _6, _7.0, _2, _7.0, _7.0.0, _7.0, _7, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb11 = {
RET = _7.0.1 >> _7.0.0;
_7 = (_3.0, _8);
_3 = (_7.0, _8);
_4 = false;
_4 = !false;
_5 = _6 & _7.0.0;
_10 = 172566269584423638909052392241684824021_u128;
_3.0 = (_7.0.0, RET);
_3.1 = [_5,_3.0.0,_3.0.0,_5,_5,_3.0.0,_6,_6];
_2 = 14953828108911208528_usize as i8;
_3 = (_7.0, _8);
RET = _2;
_4 = true;
_7.0.0 = _3.0.0 << _3.0.0;
_2 = _7.0.1 | _7.0.1;
match _10 {
0 => bb1,
1 => bb4,
172566269584423638909052392241684824021 => bb6,
_ => bb5
}
}
bb12 = {
_3.1 = _7.1;
_7 = (_3.0, _8);
_3.0.0 = _5 >> _5;
match _10 {
0 => bb13,
172566269584423638909052392241684824021 => bb15,
_ => bb14
}
}
bb13 = {
_14 = _19;
_20.0.fld2 = _3.0.0;
RET = -_7.0.1;
_20.0.fld1 = [_3.0.0,_20.0.fld2,_20.0.fld2];
_20.0.fld0 = -(-6758985142406017665972143001709092846_i128);
_12 = [_20.0.fld2,_7.0.0,_5,_7.0.0,_5,_5,_20.0.fld2];
_13 = &_20.0.fld0;
RET = _7.0.1;
_3.0 = (_20.0.fld2, RET);
_18 = [6_usize,2_usize];
_7 = (_3.0, _3.1);
_7.0 = (_5, _2);
_12 = [_20.0.fld2,_7.0.0,_5,_7.0.0,_7.0.0,_5,_20.0.fld2];
match _10 {
0 => bb3,
1 => bb8,
2 => bb9,
3 => bb10,
172566269584423638909052392241684824021 => bb12,
_ => bb11
}
}
bb14 = {
_2 = _3.0.1;
_7.1 = [_6,_3.0.0,_6,_6,_5,_5,_5,_5];
_6 = _7.0.0 - _7.0.0;
_3.0.1 = _7.0.1;
_5 = _7.0.0 & _6;
_7.1 = [_5,_3.0.0,_6,_5,_6,_6,_7.0.0,_5];
_5 = _7.0.0;
_1 = &_3.0.0;
_4 = false;
_3.0.0 = !_6;
RET = (-9223372036854775808_isize) as i8;
_7 = (_3.0, _3.1);
Call(_3 = fn12(_7.0, _6, _7.0, _2, _7.0, _7.0.0, _7.0, _7, _7.0), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_3.0.0 = !_7.0.0;
_17 = _20.0.fld2 > _20.0.fld2;
_7.0.0 = (-3304977860812654734_i64) as u16;
_19 = _14;
_17 = _4 ^ _4;
_20.0.fld1 = [_3.0.0,_20.0.fld2,_3.0.0];
_7.0.1 = _3.0.1;
Goto(bb16)
}
bb16 = {
Call(_26 = dump_var(11_usize, 17_usize, Move(_17), 4_usize, Move(_4), 5_usize, Move(_5), 18_usize, Move(_18)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_26 = dump_var(11_usize, 3_usize, Move(_3), 6_usize, Move(_6), 27_usize, _27, 27_usize, _27), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: (u16, i8),mut _2: u16,mut _3: (u16, i8),mut _4: i8,mut _5: (u16, i8),mut _6: u16,mut _7: (u16, i8),mut _8: ((u16, i8), [u16; 8]),mut _9: (u16, i8)) -> ((u16, i8), [u16; 8]) {
mir! {
type RET = ((u16, i8), [u16; 8]);
let _10: Adt30;
let _11: [isize; 7];
let _12: *const [u16; 3];
let _13: ();
let _14: ();
{
_8.0 = _5;
_8.0.0 = _7.0 << _3.0;
_10.fld1 = (-710323063_i32);
_4 = !_9.1;
_6 = !_7.0;
RET = (_8.0, _8.1);
_5 = (_8.0.0, _8.0.1);
_7.0 = RET.0.0 - _2;
_8.0.0 = !_5.0;
_10.fld2 = (-129290947882004645569325668281433286736_i128) as u8;
_11 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),92_isize,(-9223372036854775808_isize)];
_11 = [9223372036854775807_isize,(-9223372036854775808_isize),92_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,56_isize];
_5 = (_3.0, RET.0.1);
_1.1 = _4 * _8.0.1;
_4 = -_1.1;
_10 = Adt30 { fld0: _5.1,fld1: 337250039_i32,fld2: 49_u8 };
Goto(bb1)
}
bb1 = {
Call(_13 = dump_var(12_usize, 7_usize, Move(_7), 3_usize, Move(_3), 4_usize, Move(_4), 2_usize, Move(_2)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
Call(_13 = dump_var(12_usize, 1_usize, Move(_1), 14_usize, _14, 14_usize, _14, 14_usize, _14), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn13(mut _1: i128,mut _2: isize) -> char {
mir! {
type RET = char;
let _3: Adt70;
let _4: bool;
let _5: &'static mut [isize; 6];
let _6: isize;
let _7: f64;
let _8: [u64; 3];
let _9: isize;
let _10: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _11: Adt30;
let _12: i8;
let _13: bool;
let _14: [isize; 7];
let _15: Adt41;
let _16: Adt41;
let _17: i64;
let _18: *const &'static mut f32;
let _19: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _20: i128;
let _21: f64;
let _22: Adt79;
let _23: i16;
let _24: Adt72;
let _25: &'static u32;
let _26: bool;
let _27: i32;
let _28: f32;
let _29: char;
let _30: ();
let _31: ();
{
RET = '\u{10ecf3}';
RET = '\u{379b7}';
_1 = !(-14574799379165855993674862693151762698_i128);
_4 = !false;
RET = '\u{ce436}';
RET = '\u{218be}';
_4 = false;
_1 = (-44642101154321828542065045139194862308_i128);
_2 = 8742832833947213829_u64 as isize;
_4 = false;
_4 = _1 < _1;
_6 = _2 - _2;
_4 = false;
RET = '\u{78b5c}';
_2 = -_6;
_6 = _2 * _2;
_7 = 111_u8 as f64;
Call(_1 = core::intrinsics::bswap(68697207402723848462274149890502090816_i128), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
RET = '\u{a3505}';
_8 = [15702494669731439177_u64,2245587325400831313_u64,15649258232057089483_u64];
_4 = true;
_10.0 = _1 as u128;
_8 = [12272745745531596424_u64,10185364904239165325_u64,18062123995045060799_u64];
_11.fld1 = !938294184_i32;
_12 = _7 as i8;
_1 = (-24687551720413816578708439591911720280_i128);
_11.fld2 = !190_u8;
_10.1 = [57793_u16,52781_u16,8108_u16,42585_u16,16271_u16,18578_u16,12041_u16,58490_u16];
_10.2 = [_2,_6,_2,_6,_6,_6];
RET = '\u{7d72a}';
_10.1 = [8317_u16,13137_u16,22527_u16,10115_u16,36049_u16,16243_u16,35263_u16,36325_u16];
_11 = Adt30 { fld0: _12,fld1: 426705356_i32,fld2: 3_u8 };
_12 = _11.fld0 << _6;
_11.fld2 = !97_u8;
RET = '\u{e0457}';
_9 = _6 & _6;
_13 = !_4;
_16.fld0 = -_1;
_14 = [_9,_6,_9,_6,_2,_2,_9];
_10.3 = &mut _10.2;
Call(_7 = fn14(_10.2, Move(_10), _6, _2, _6, _14, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_16.fld2 = 4_usize as u16;
_10.0 = !64323796814610934045667702288596182539_u128;
_4 = !_13;
_10.2 = [_9,_6,_6,_6,_2,_2];
_11.fld1 = 162112432_i32;
_17 = (-29489_i16) as i64;
_15.fld2 = _16.fld2 << _6;
_16.fld0 = !_1;
_5 = &mut _10.2;
_19.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2];
_7 = _17 as f64;
_19.3 = Move(_5);
_11.fld2 = 216_u8;
_10.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_13 = _1 > _16.fld0;
_4 = _9 >= _2;
_10.1 = [_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2,_15.fld2,_15.fld2];
_19.3 = &mut _10.2;
_16.fld0 = _1 << _15.fld2;
_15.fld1 = [_16.fld2,_15.fld2,_15.fld2];
RET = '\u{7fbff}';
_5 = Move(_19.3);
Goto(bb3)
}
bb3 = {
_20 = _1;
_20 = RET as i128;
_15.fld0 = !_16.fld0;
_19.3 = &mut _10.2;
_22.fld2 = _9;
_19.2 = [_6,_22.fld2,_22.fld2,_22.fld2,_9,_6];
_22.fld1 = [_15.fld2,_16.fld2,_15.fld2,_15.fld2];
_22.fld0 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2];
_16.fld2 = 17920361392839906686_u64 as u16;
Call(_10.1 = fn15(_10.2, _10.2), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_10.0 = 325546471925658514937559683041545894465_u128 >> _15.fld2;
_6 = _2 >> _17;
_10.3 = &mut _10.2;
_19 = Move(_10);
_10.2 = _19.2;
_10.0 = _4 as u128;
_2 = _22.fld2;
_15.fld2 = _4 as u16;
Goto(bb5)
}
bb5 = {
_4 = _13 ^ _13;
_16.fld0 = _15.fld0 - _1;
_22.fld2 = 2764515967_u32 as isize;
_22.fld1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_10.3 = &mut _19.2;
_11.fld1 = !(-422691049_i32);
match _11.fld2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
216 => bb10,
_ => bb9
}
}
bb6 = {
_10.0 = 325546471925658514937559683041545894465_u128 >> _15.fld2;
_6 = _2 >> _17;
_10.3 = &mut _10.2;
_19 = Move(_10);
_10.2 = _19.2;
_10.0 = _4 as u128;
_2 = _22.fld2;
_15.fld2 = _4 as u16;
Goto(bb5)
}
bb7 = {
_20 = _1;
_20 = RET as i128;
_15.fld0 = !_16.fld0;
_19.3 = &mut _10.2;
_22.fld2 = _9;
_19.2 = [_6,_22.fld2,_22.fld2,_22.fld2,_9,_6];
_22.fld1 = [_15.fld2,_16.fld2,_15.fld2,_15.fld2];
_22.fld0 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2];
_16.fld2 = 17920361392839906686_u64 as u16;
Call(_10.1 = fn15(_10.2, _10.2), ReturnTo(bb4), UnwindUnreachable())
}
bb8 = {
_16.fld2 = 4_usize as u16;
_10.0 = !64323796814610934045667702288596182539_u128;
_4 = !_13;
_10.2 = [_9,_6,_6,_6,_2,_2];
_11.fld1 = 162112432_i32;
_17 = (-29489_i16) as i64;
_15.fld2 = _16.fld2 << _6;
_16.fld0 = !_1;
_5 = &mut _10.2;
_19.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2];
_7 = _17 as f64;
_19.3 = Move(_5);
_11.fld2 = 216_u8;
_10.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_13 = _1 > _16.fld0;
_4 = _9 >= _2;
_10.1 = [_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2,_15.fld2,_15.fld2];
_19.3 = &mut _10.2;
_16.fld0 = _1 << _15.fld2;
_15.fld1 = [_16.fld2,_15.fld2,_15.fld2];
RET = '\u{7fbff}';
_5 = Move(_19.3);
Goto(bb3)
}
bb9 = {
RET = '\u{a3505}';
_8 = [15702494669731439177_u64,2245587325400831313_u64,15649258232057089483_u64];
_4 = true;
_10.0 = _1 as u128;
_8 = [12272745745531596424_u64,10185364904239165325_u64,18062123995045060799_u64];
_11.fld1 = !938294184_i32;
_12 = _7 as i8;
_1 = (-24687551720413816578708439591911720280_i128);
_11.fld2 = !190_u8;
_10.1 = [57793_u16,52781_u16,8108_u16,42585_u16,16271_u16,18578_u16,12041_u16,58490_u16];
_10.2 = [_2,_6,_2,_6,_6,_6];
RET = '\u{7d72a}';
_10.1 = [8317_u16,13137_u16,22527_u16,10115_u16,36049_u16,16243_u16,35263_u16,36325_u16];
_11 = Adt30 { fld0: _12,fld1: 426705356_i32,fld2: 3_u8 };
_12 = _11.fld0 << _6;
_11.fld2 = !97_u8;
RET = '\u{e0457}';
_9 = _6 & _6;
_13 = !_4;
_16.fld0 = -_1;
_14 = [_9,_6,_9,_6,_2,_2,_9];
_10.3 = &mut _10.2;
Call(_7 = fn14(_10.2, Move(_10), _6, _2, _6, _14, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_21 = _7 + _7;
_14 = [_9,_9,_2,_6,_9,_2,_2];
_22.fld0 = [_15.fld2,_16.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_20 = _16.fld0 + _16.fld0;
_22.fld1 = [_15.fld2,_16.fld2,_15.fld2,_15.fld2];
_16.fld2 = _15.fld2 & _15.fld2;
_23 = 32145_i16;
_15.fld2 = _11.fld1 as u16;
_2 = _6;
_15.fld1 = [_16.fld2,_16.fld2,_16.fld2];
_1 = -_15.fld0;
_26 = _4 | _13;
_1 = -_20;
_19.2 = _10.2;
_8 = [14735263883422389376_u64,11377891560345422514_u64,7329040709192448154_u64];
_2 = _9;
_16.fld0 = _7 as i128;
_11 = Adt30 { fld0: _12,fld1: (-226805987_i32),fld2: 154_u8 };
_23 = (-15279_i16);
_2 = -_22.fld2;
match _11.fld1 {
0 => bb4,
1 => bb11,
2 => bb12,
3 => bb13,
4 => bb14,
340282366920938463463374607431541405469 => bb16,
_ => bb15
}
}
bb11 = {
RET = '\u{a3505}';
_8 = [15702494669731439177_u64,2245587325400831313_u64,15649258232057089483_u64];
_4 = true;
_10.0 = _1 as u128;
_8 = [12272745745531596424_u64,10185364904239165325_u64,18062123995045060799_u64];
_11.fld1 = !938294184_i32;
_12 = _7 as i8;
_1 = (-24687551720413816578708439591911720280_i128);
_11.fld2 = !190_u8;
_10.1 = [57793_u16,52781_u16,8108_u16,42585_u16,16271_u16,18578_u16,12041_u16,58490_u16];
_10.2 = [_2,_6,_2,_6,_6,_6];
RET = '\u{7d72a}';
_10.1 = [8317_u16,13137_u16,22527_u16,10115_u16,36049_u16,16243_u16,35263_u16,36325_u16];
_11 = Adt30 { fld0: _12,fld1: 426705356_i32,fld2: 3_u8 };
_12 = _11.fld0 << _6;
_11.fld2 = !97_u8;
RET = '\u{e0457}';
_9 = _6 & _6;
_13 = !_4;
_16.fld0 = -_1;
_14 = [_9,_6,_9,_6,_2,_2,_9];
_10.3 = &mut _10.2;
Call(_7 = fn14(_10.2, Move(_10), _6, _2, _6, _14, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb12 = {
_16.fld2 = 4_usize as u16;
_10.0 = !64323796814610934045667702288596182539_u128;
_4 = !_13;
_10.2 = [_9,_6,_6,_6,_2,_2];
_11.fld1 = 162112432_i32;
_17 = (-29489_i16) as i64;
_15.fld2 = _16.fld2 << _6;
_16.fld0 = !_1;
_5 = &mut _10.2;
_19.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2];
_7 = _17 as f64;
_19.3 = Move(_5);
_11.fld2 = 216_u8;
_10.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_13 = _1 > _16.fld0;
_4 = _9 >= _2;
_10.1 = [_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2,_15.fld2,_15.fld2];
_19.3 = &mut _10.2;
_16.fld0 = _1 << _15.fld2;
_15.fld1 = [_16.fld2,_15.fld2,_15.fld2];
RET = '\u{7fbff}';
_5 = Move(_19.3);
Goto(bb3)
}
bb13 = {
_20 = _1;
_20 = RET as i128;
_15.fld0 = !_16.fld0;
_19.3 = &mut _10.2;
_22.fld2 = _9;
_19.2 = [_6,_22.fld2,_22.fld2,_22.fld2,_9,_6];
_22.fld1 = [_15.fld2,_16.fld2,_15.fld2,_15.fld2];
_22.fld0 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2];
_16.fld2 = 17920361392839906686_u64 as u16;
Call(_10.1 = fn15(_10.2, _10.2), ReturnTo(bb4), UnwindUnreachable())
}
bb14 = {
_16.fld2 = 4_usize as u16;
_10.0 = !64323796814610934045667702288596182539_u128;
_4 = !_13;
_10.2 = [_9,_6,_6,_6,_2,_2];
_11.fld1 = 162112432_i32;
_17 = (-29489_i16) as i64;
_15.fld2 = _16.fld2 << _6;
_16.fld0 = !_1;
_5 = &mut _10.2;
_19.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2];
_7 = _17 as f64;
_19.3 = Move(_5);
_11.fld2 = 216_u8;
_10.1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_13 = _1 > _16.fld0;
_4 = _9 >= _2;
_10.1 = [_15.fld2,_15.fld2,_16.fld2,_15.fld2,_16.fld2,_15.fld2,_15.fld2,_15.fld2];
_19.3 = &mut _10.2;
_16.fld0 = _1 << _15.fld2;
_15.fld1 = [_16.fld2,_15.fld2,_15.fld2];
RET = '\u{7fbff}';
_5 = Move(_19.3);
Goto(bb3)
}
bb15 = {
_4 = _13 ^ _13;
_16.fld0 = _15.fld0 - _1;
_22.fld2 = 2764515967_u32 as isize;
_22.fld1 = [_15.fld2,_15.fld2,_15.fld2,_15.fld2];
_10.3 = &mut _19.2;
_11.fld1 = !(-422691049_i32);
match _11.fld2 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb6,
5 => bb7,
6 => bb8,
216 => bb10,
_ => bb9
}
}
bb16 = {
_11.fld0 = RET as i8;
_1 = _23 as i128;
_2 = _9;
_22.fld2 = _10.0 as isize;
_22.fld2 = _2 << _16.fld2;
_15.fld1 = [_16.fld2,_16.fld2,_16.fld2];
Goto(bb17)
}
bb17 = {
Call(_30 = dump_var(13_usize, 23_usize, Move(_23), 13_usize, Move(_13), 6_usize, Move(_6), 2_usize, Move(_2)), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Call(_30 = dump_var(13_usize, 20_usize, Move(_20), 4_usize, Move(_4), 31_usize, _31, 31_usize, _31), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn14(mut _1: [isize; 6],mut _2: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]),mut _3: isize,mut _4: isize,mut _5: isize,mut _6: [isize; 7],mut _7: [u64; 3]) -> f64 {
mir! {
type RET = f64;
let _8: *mut f32;
let _9: f32;
let _10: ();
let _11: ();
{
RET = 13665_i16 as f64;
_3 = 216_u8 as isize;
_6 = [_5,_5,_3,_5,_5,_5,_4];
_4 = (-32_i8) as isize;
RET = 15337085153517418863_u64 as f64;
_7 = [3921399891983404188_u64,18395788335679594567_u64,2009273298417544496_u64];
_4 = _5 | _5;
Goto(bb1)
}
bb1 = {
RET = (-7669745358695758720_i64) as f64;
_2.3 = &mut _1;
_6 = [_5,_4,_5,_4,_4,_3,_4];
_5 = -_4;
_5 = _3 >> _4;
_4 = _5 * _5;
_3 = !_4;
RET = _5 as f64;
_2.2 = _1;
_6 = [_4,_4,_5,_5,_5,_4,_5];
_3 = _5;
_2.3 = &mut _1;
RET = (-7910340957596207436_i64) as f64;
_1 = [_4,_4,_4,_3,_3,_3];
_3 = 11763_i16 as isize;
_5 = _4;
RET = _4 as f64;
_2.1 = [20301_u16,58779_u16,27347_u16,12606_u16,13881_u16,31579_u16,7068_u16,59267_u16];
_2.0 = RET as u128;
_9 = 11138_i16 as f32;
_3 = _4;
_6 = [_3,_5,_5,_5,_4,_5,_5];
_3 = _9 as isize;
RET = _9 as f64;
_2.0 = 86274537985917756224958347881696252190_u128;
_3 = !_5;
_7 = [13059897600871123120_u64,10208009506270357842_u64,5078365491935198603_u64];
_7 = [4277565521575382120_u64,13016116164670444804_u64,4938255950303002241_u64];
_3 = !_4;
RET = _4 as f64;
Goto(bb2)
}
bb2 = {
Call(_10 = dump_var(14_usize, 1_usize, Move(_1), 7_usize, Move(_7), 3_usize, Move(_3), 11_usize, _11), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: [isize; 6],mut _2: [isize; 6]) -> [u16; 8] {
mir! {
type RET = [u16; 8];
let _3: f32;
let _4: f32;
let _5: &'static mut u64;
let _6: [u16; 4];
let _7: bool;
let _8: *const isize;
let _9: i64;
let _10: i32;
let _11: f64;
let _12: f64;
let _13: isize;
let _14: [u16; 7];
let _15: (*mut i32, &'static mut i32, (Adt41, u32, &'static mut i32), &'static Adt34);
let _16: &'static i128;
let _17: [i8; 7];
let _18: u16;
let _19: [i8; 6];
let _20: isize;
let _21: *const ((u16, i8), [u16; 8]);
let _22: (u16, i8);
let _23: isize;
let _24: (((u16, i8), [u16; 8]), (u16, i8));
let _25: f64;
let _26: f64;
let _27: &'static mut f32;
let _28: (&'static mut u64, i8, &'static u32, u64);
let _29: (u16, i8);
let _30: char;
let _31: ();
let _32: ();
{
_2 = [(-45_isize),111_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
RET = [60530_u16,54469_u16,63225_u16,52087_u16,17492_u16,55647_u16,12126_u16,62620_u16];
_1 = [(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),22_isize];
RET = [33507_u16,50164_u16,48002_u16,14841_u16,46975_u16,52519_u16,10317_u16,40908_u16];
_1 = [(-9223372036854775808_isize),(-94_isize),(-72_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_1 = [(-75_isize),(-9223372036854775808_isize),(-87_isize),(-9223372036854775808_isize),9223372036854775807_isize,31_isize];
RET = [13110_u16,1863_u16,10825_u16,21844_u16,49763_u16,12501_u16,54524_u16,46787_u16];
_1 = [(-125_isize),9223372036854775807_isize,9223372036854775807_isize,37_isize,9223372036854775807_isize,9223372036854775807_isize];
_1 = _2;
Goto(bb1)
}
bb1 = {
_3 = 17865_u16 as f32;
_3 = 34664469387995736058597207313526674044_u128 as f32;
_1 = [9223372036854775807_isize,(-102_isize),118_isize,92_isize,75_isize,(-66_isize)];
RET = [16462_u16,64369_u16,44387_u16,50592_u16,51333_u16,17049_u16,22198_u16,9168_u16];
RET = [21862_u16,43529_u16,65354_u16,26727_u16,23882_u16,61607_u16,13861_u16,9896_u16];
RET = [2837_u16,39826_u16,52383_u16,21581_u16,24355_u16,41774_u16,14815_u16,50451_u16];
Goto(bb2)
}
bb2 = {
_2 = [(-9223372036854775808_isize),(-121_isize),9223372036854775807_isize,18_isize,(-9223372036854775808_isize),3_isize];
_4 = _3 + _3;
RET = [22832_u16,65378_u16,56895_u16,18684_u16,47124_u16,6124_u16,5690_u16,49282_u16];
_3 = -_4;
_3 = -_4;
_1 = _2;
RET = [19048_u16,32556_u16,20877_u16,51049_u16,221_u16,17102_u16,12651_u16,36961_u16];
RET = [53389_u16,32972_u16,15313_u16,43433_u16,35951_u16,19648_u16,58078_u16,37779_u16];
_1 = [21_isize,(-41_isize),9223372036854775807_isize,(-79_isize),9223372036854775807_isize,55_isize];
_6 = [23039_u16,59440_u16,17061_u16,31692_u16];
RET = [13714_u16,6482_u16,17250_u16,8475_u16,17755_u16,4316_u16,15701_u16,13364_u16];
_1 = _2;
_2 = _1;
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,29_isize,(-9223372036854775808_isize),(-31_isize)];
_2 = _1;
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),47_isize,59_isize,(-14_isize),(-9223372036854775808_isize)];
_3 = -_4;
_4 = _3;
RET = [36404_u16,3627_u16,52553_u16,64584_u16,61581_u16,39912_u16,46730_u16,51412_u16];
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = [29239_u16,57571_u16,35781_u16,38165_u16];
RET = [52281_u16,8639_u16,60133_u16,49868_u16,50145_u16,8036_u16,10146_u16,7448_u16];
_1 = [(-102_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-40_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = -_3;
_6 = [65064_u16,51429_u16,27245_u16,24539_u16];
_7 = !true;
_6 = [39963_u16,57449_u16,24366_u16,16715_u16];
Goto(bb3)
}
bb3 = {
_7 = !false;
_2 = _1;
_3 = -_4;
_7 = false;
_3 = _4;
_2 = [20_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6 = [61317_u16,23711_u16,56002_u16,5822_u16];
_2 = _1;
_7 = !true;
_4 = (-9223372036854775808_isize) as f32;
RET = [18906_u16,14380_u16,63246_u16,28866_u16,10645_u16,9379_u16,62646_u16,13400_u16];
RET = [41285_u16,58784_u16,42991_u16,1851_u16,48725_u16,21360_u16,10709_u16,49952_u16];
_4 = _3;
RET = [46484_u16,18891_u16,52248_u16,51636_u16,53223_u16,4185_u16,3626_u16,59373_u16];
RET = [11503_u16,34543_u16,2601_u16,44665_u16,23483_u16,12864_u16,8484_u16,32269_u16];
_6 = [12665_u16,56237_u16,2275_u16,38391_u16];
_6 = [51189_u16,37352_u16,47841_u16,4327_u16];
_6 = [9958_u16,1409_u16,59787_u16,30699_u16];
_9 = (-3711901626335124552_i64);
_6 = [1556_u16,10489_u16,59166_u16,31346_u16];
_10 = (-197506520_i32);
_7 = _9 == _9;
_10 = 257722760_i32 + 210197109_i32;
_2 = [16_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),66_isize,(-9223372036854775808_isize)];
_12 = 4241754323_u32 as f64;
Call(_10 = core::intrinsics::bswap((-284164875_i32)), ReturnTo(bb4), UnwindUnreachable())
}
bb4 = {
_11 = _12;
RET = [3626_u16,18924_u16,27445_u16,22254_u16,58568_u16,34170_u16,34813_u16,3444_u16];
_3 = _4;
_2 = [(-9223372036854775808_isize),(-91_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-46_isize),63_isize];
_9 = _7 as i64;
_8 = core::ptr::addr_of!(_13);
_2 = [(-76_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
(*_8) = _7 as isize;
_1 = [(*_8),(*_8),(*_8),(*_8),_13,(*_8)];
_1 = [(*_8),(*_8),_13,_13,(*_8),_13];
_11 = 284439908369699459357781089121925449292_u128 as f64;
_4 = _3 + _3;
RET = [48617_u16,51490_u16,48263_u16,16949_u16,45839_u16,39889_u16,404_u16,59305_u16];
_15.2.0.fld1 = [32917_u16,50502_u16,51713_u16];
_15.2.0.fld0 = (-133081949046183444708267569514801069652_i128);
_3 = -_4;
_15.2.1 = 140144214296604782751120375969836685709_u128 as u32;
_15.0 = core::ptr::addr_of_mut!(_10);
_15.1 = &mut _10;
_15.2.0.fld2 = 43671_u16 + 41266_u16;
_2 = [(*_8),_13,_13,(*_8),_13,(*_8)];
_7 = !true;
RET = [_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2];
match _15.2.0.fld0 {
0 => bb1,
1 => bb2,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
207200417874755018755107037916967141804 => bb10,
_ => bb9
}
}
bb5 = {
_7 = !false;
_2 = _1;
_3 = -_4;
_7 = false;
_3 = _4;
_2 = [20_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6 = [61317_u16,23711_u16,56002_u16,5822_u16];
_2 = _1;
_7 = !true;
_4 = (-9223372036854775808_isize) as f32;
RET = [18906_u16,14380_u16,63246_u16,28866_u16,10645_u16,9379_u16,62646_u16,13400_u16];
RET = [41285_u16,58784_u16,42991_u16,1851_u16,48725_u16,21360_u16,10709_u16,49952_u16];
_4 = _3;
RET = [46484_u16,18891_u16,52248_u16,51636_u16,53223_u16,4185_u16,3626_u16,59373_u16];
RET = [11503_u16,34543_u16,2601_u16,44665_u16,23483_u16,12864_u16,8484_u16,32269_u16];
_6 = [12665_u16,56237_u16,2275_u16,38391_u16];
_6 = [51189_u16,37352_u16,47841_u16,4327_u16];
_6 = [9958_u16,1409_u16,59787_u16,30699_u16];
_9 = (-3711901626335124552_i64);
_6 = [1556_u16,10489_u16,59166_u16,31346_u16];
_10 = (-197506520_i32);
_7 = _9 == _9;
_10 = 257722760_i32 + 210197109_i32;
_2 = [16_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),66_isize,(-9223372036854775808_isize)];
_12 = 4241754323_u32 as f64;
Call(_10 = core::intrinsics::bswap((-284164875_i32)), ReturnTo(bb4), UnwindUnreachable())
}
bb6 = {
_2 = [(-9223372036854775808_isize),(-121_isize),9223372036854775807_isize,18_isize,(-9223372036854775808_isize),3_isize];
_4 = _3 + _3;
RET = [22832_u16,65378_u16,56895_u16,18684_u16,47124_u16,6124_u16,5690_u16,49282_u16];
_3 = -_4;
_3 = -_4;
_1 = _2;
RET = [19048_u16,32556_u16,20877_u16,51049_u16,221_u16,17102_u16,12651_u16,36961_u16];
RET = [53389_u16,32972_u16,15313_u16,43433_u16,35951_u16,19648_u16,58078_u16,37779_u16];
_1 = [21_isize,(-41_isize),9223372036854775807_isize,(-79_isize),9223372036854775807_isize,55_isize];
_6 = [23039_u16,59440_u16,17061_u16,31692_u16];
RET = [13714_u16,6482_u16,17250_u16,8475_u16,17755_u16,4316_u16,15701_u16,13364_u16];
_1 = _2;
_2 = _1;
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,29_isize,(-9223372036854775808_isize),(-31_isize)];
_2 = _1;
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),47_isize,59_isize,(-14_isize),(-9223372036854775808_isize)];
_3 = -_4;
_4 = _3;
RET = [36404_u16,3627_u16,52553_u16,64584_u16,61581_u16,39912_u16,46730_u16,51412_u16];
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = [29239_u16,57571_u16,35781_u16,38165_u16];
RET = [52281_u16,8639_u16,60133_u16,49868_u16,50145_u16,8036_u16,10146_u16,7448_u16];
_1 = [(-102_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-40_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = -_3;
_6 = [65064_u16,51429_u16,27245_u16,24539_u16];
_7 = !true;
_6 = [39963_u16,57449_u16,24366_u16,16715_u16];
Goto(bb3)
}
bb7 = {
_3 = 17865_u16 as f32;
_3 = 34664469387995736058597207313526674044_u128 as f32;
_1 = [9223372036854775807_isize,(-102_isize),118_isize,92_isize,75_isize,(-66_isize)];
RET = [16462_u16,64369_u16,44387_u16,50592_u16,51333_u16,17049_u16,22198_u16,9168_u16];
RET = [21862_u16,43529_u16,65354_u16,26727_u16,23882_u16,61607_u16,13861_u16,9896_u16];
RET = [2837_u16,39826_u16,52383_u16,21581_u16,24355_u16,41774_u16,14815_u16,50451_u16];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = [_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2,_15.2.0.fld2];
_2 = [(*_8),(*_8),_13,(*_8),_13,_13];
_1 = [(*_8),(*_8),(*_8),(*_8),_13,(*_8)];
_13 = (-83_isize);
_17 = [(-51_i8),(-80_i8),(-111_i8),53_i8,42_i8,(-21_i8),17_i8];
_18 = _15.2.0.fld0 as u16;
_17 = [(-58_i8),(-24_i8),(-78_i8),(-121_i8),105_i8,127_i8,(-49_i8)];
_15.0 = core::ptr::addr_of_mut!(_10);
_8 = core::ptr::addr_of!((*_8));
(*_8) = (-9223372036854775808_isize) ^ 9223372036854775807_isize;
Goto(bb11)
}
bb11 = {
_4 = _3;
_1 = [_13,(*_8),(*_8),_13,(*_8),(*_8)];
(*_8) = 9223372036854775807_isize ^ (-9223372036854775808_isize);
_15.1 = &mut _10;
RET = [_15.2.0.fld2,_15.2.0.fld2,_18,_15.2.0.fld2,_15.2.0.fld2,_18,_15.2.0.fld2,_15.2.0.fld2];
_19 = [69_i8,(-125_i8),45_i8,(-20_i8),(-73_i8),(-14_i8)];
_3 = _4;
_15.2.2 = Move(_15.1);
_18 = _15.2.0.fld2 | _15.2.0.fld2;
_2 = _1;
_11 = 144_u8 as f64;
_14 = [_18,_18,_18,_18,_18,_18,_15.2.0.fld2];
_9 = (-5692885073476152139_i64) << _13;
_10 = 1223775045_i32 ^ (-619669782_i32);
_15.2.0.fld1 = [_18,_18,_18];
_12 = -_11;
RET = [_18,_15.2.0.fld2,_18,_18,_18,_18,_15.2.0.fld2,_15.2.0.fld2];
_10 = (-623804453_i32) & (-1640281440_i32);
_7 = true;
match _15.2.0.fld0 {
0 => bb2,
1 => bb12,
2 => bb13,
207200417874755018755107037916967141804 => bb15,
_ => bb14
}
}
bb12 = {
_2 = [(-9223372036854775808_isize),(-121_isize),9223372036854775807_isize,18_isize,(-9223372036854775808_isize),3_isize];
_4 = _3 + _3;
RET = [22832_u16,65378_u16,56895_u16,18684_u16,47124_u16,6124_u16,5690_u16,49282_u16];
_3 = -_4;
_3 = -_4;
_1 = _2;
RET = [19048_u16,32556_u16,20877_u16,51049_u16,221_u16,17102_u16,12651_u16,36961_u16];
RET = [53389_u16,32972_u16,15313_u16,43433_u16,35951_u16,19648_u16,58078_u16,37779_u16];
_1 = [21_isize,(-41_isize),9223372036854775807_isize,(-79_isize),9223372036854775807_isize,55_isize];
_6 = [23039_u16,59440_u16,17061_u16,31692_u16];
RET = [13714_u16,6482_u16,17250_u16,8475_u16,17755_u16,4316_u16,15701_u16,13364_u16];
_1 = _2;
_2 = _1;
_1 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,29_isize,(-9223372036854775808_isize),(-31_isize)];
_2 = _1;
_2 = [9223372036854775807_isize,(-9223372036854775808_isize),47_isize,59_isize,(-14_isize),(-9223372036854775808_isize)];
_3 = -_4;
_4 = _3;
RET = [36404_u16,3627_u16,52553_u16,64584_u16,61581_u16,39912_u16,46730_u16,51412_u16];
_1 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize];
_6 = [29239_u16,57571_u16,35781_u16,38165_u16];
RET = [52281_u16,8639_u16,60133_u16,49868_u16,50145_u16,8036_u16,10146_u16,7448_u16];
_1 = [(-102_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-40_isize),(-9223372036854775808_isize),9223372036854775807_isize];
_4 = -_3;
_6 = [65064_u16,51429_u16,27245_u16,24539_u16];
_7 = !true;
_6 = [39963_u16,57449_u16,24366_u16,16715_u16];
Goto(bb3)
}
bb13 = {
Return()
}
bb14 = {
_7 = !false;
_2 = _1;
_3 = -_4;
_7 = false;
_3 = _4;
_2 = [20_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,9223372036854775807_isize];
_6 = [61317_u16,23711_u16,56002_u16,5822_u16];
_2 = _1;
_7 = !true;
_4 = (-9223372036854775808_isize) as f32;
RET = [18906_u16,14380_u16,63246_u16,28866_u16,10645_u16,9379_u16,62646_u16,13400_u16];
RET = [41285_u16,58784_u16,42991_u16,1851_u16,48725_u16,21360_u16,10709_u16,49952_u16];
_4 = _3;
RET = [46484_u16,18891_u16,52248_u16,51636_u16,53223_u16,4185_u16,3626_u16,59373_u16];
RET = [11503_u16,34543_u16,2601_u16,44665_u16,23483_u16,12864_u16,8484_u16,32269_u16];
_6 = [12665_u16,56237_u16,2275_u16,38391_u16];
_6 = [51189_u16,37352_u16,47841_u16,4327_u16];
_6 = [9958_u16,1409_u16,59787_u16,30699_u16];
_9 = (-3711901626335124552_i64);
_6 = [1556_u16,10489_u16,59166_u16,31346_u16];
_10 = (-197506520_i32);
_7 = _9 == _9;
_10 = 257722760_i32 + 210197109_i32;
_2 = [16_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),66_isize,(-9223372036854775808_isize)];
_12 = 4241754323_u32 as f64;
Call(_10 = core::intrinsics::bswap((-284164875_i32)), ReturnTo(bb4), UnwindUnreachable())
}
bb15 = {
_15.2.0.fld1 = [_18,_15.2.0.fld2,_15.2.0.fld2];
_7 = true;
_16 = &_15.2.0.fld0;
_10 = 337538797559164916944673899055058885428_u128 as i32;
_20 = 1_usize as isize;
_20 = !_13;
_24.0.0.0 = !_15.2.0.fld2;
_15.2.0.fld2 = (-105_i8) as u16;
_1 = _2;
_17 = [(-59_i8),68_i8,125_i8,67_i8,(-61_i8),(-77_i8),(-44_i8)];
RET = [_18,_18,_18,_24.0.0.0,_18,_18,_18,_18];
_9 = _15.2.0.fld2 as i64;
_24.0.0.0 = !_18;
_25 = _3 as f64;
_15.2.0.fld1 = [_18,_24.0.0.0,_18];
_15.2.0.fld0 = 147320069199993850545738142803074085369_i128 & 10821282755677351139298838116162048250_i128;
_24.1 = (_18, 97_i8);
(*_8) = _10 as isize;
_22 = (_18, _24.1.1);
_24.0.1 = [_24.0.0.0,_24.1.0,_24.1.0,_22.0,_24.0.0.0,_24.0.0.0,_24.0.0.0,_18];
_21 = core::ptr::addr_of!(_24.0);
Goto(bb16)
}
bb16 = {
Call(_31 = dump_var(15_usize, 1_usize, Move(_1), 9_usize, Move(_9), 18_usize, Move(_18), 10_usize, Move(_10)), ReturnTo(bb17), UnwindUnreachable())
}
bb17 = {
Call(_31 = dump_var(15_usize, 7_usize, Move(_7), 19_usize, Move(_19), 32_usize, _32, 32_usize, _32), ReturnTo(bb18), UnwindUnreachable())
}
bb18 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn16(mut _1: [i8; 6],mut _2: [i8; 6],mut _3: f32,mut _4: [i8; 6],mut _5: [i8; 6],mut _6: usize,mut _7: i16,mut _8: [i8; 6],mut _9: [i8; 6],mut _10: f32,mut _11: i16,mut _12: f32) -> u128 {
mir! {
type RET = u128;
let _13: char;
let _14: char;
let _15: char;
let _16: isize;
let _17: [u32; 1];
let _18: [i16; 5];
let _19: char;
let _20: i128;
let _21: *mut u64;
let _22: [i64; 6];
let _23: (&'static mut u64, i8, &'static u32, u64);
let _24: i32;
let _25: &'static mut *mut f32;
let _26: [i64; 6];
let _27: f64;
let _28: *const (&'static mut u64, i8, &'static u32, u64);
let _29: ([i16; 5],);
let _30: *const i16;
let _31: ();
let _32: ();
{
RET = '\u{13e76}' as u128;
_3 = 110_i8 as f32;
_7 = _11;
Goto(bb1)
}
bb1 = {
_1 = [(-127_i8),88_i8,12_i8,(-73_i8),34_i8,77_i8];
RET = 216733845513304943580774180701684306603_u128;
_5 = [88_i8,(-11_i8),(-81_i8),(-63_i8),85_i8,(-40_i8)];
_5 = _4;
_4 = [0_i8,(-125_i8),(-110_i8),49_i8,54_i8,(-30_i8)];
_1 = _4;
_8 = _4;
_4 = [(-88_i8),(-38_i8),64_i8,7_i8,22_i8,(-79_i8)];
_7 = !_11;
_8 = [2_i8,(-30_i8),61_i8,78_i8,(-76_i8),(-97_i8)];
RET = !304430427980518409732055167538033591903_u128;
_15 = '\u{f5bbd}';
RET = !181204166334686695498299685078455791524_u128;
_4 = [51_i8,89_i8,9_i8,81_i8,120_i8,59_i8];
_1 = [91_i8,4_i8,(-37_i8),(-58_i8),110_i8,37_i8];
_14 = _15;
_15 = _14;
_5 = [16_i8,(-21_i8),(-66_i8),(-8_i8),(-20_i8),(-89_i8)];
_9 = [(-32_i8),(-64_i8),(-32_i8),100_i8,(-74_i8),122_i8];
_16 = 4174622105_u32 as isize;
_1 = [(-69_i8),(-122_i8),63_i8,96_i8,(-62_i8),(-5_i8)];
_1 = _9;
_4 = [47_i8,(-78_i8),(-69_i8),(-113_i8),(-101_i8),122_i8];
Goto(bb2)
}
bb2 = {
RET = !70597748492181652340345575627734388985_u128;
_8 = [73_i8,(-111_i8),8_i8,73_i8,(-27_i8),54_i8];
_6 = !3_usize;
RET = 225507003632972520067001820498166060966_u128;
_2 = [(-123_i8),(-120_i8),3_i8,(-14_i8),(-72_i8),59_i8];
RET = _10 as u128;
_4 = _8;
_2 = [68_i8,82_i8,32_i8,57_i8,92_i8,(-54_i8)];
_18 = [_11,_7,_11,_11,_7];
_7 = 155_u8 as i16;
_4 = _1;
_10 = _12;
_20 = (-138999857936169275733502237341615798738_i128);
_1 = [(-88_i8),123_i8,27_i8,96_i8,93_i8,(-58_i8)];
RET = _14 as u128;
_15 = _14;
_9 = [50_i8,71_i8,38_i8,90_i8,(-98_i8),(-63_i8)];
_16 = (-4787042940874684637_i64) as isize;
_6 = 14851495662736579971_usize & 0_usize;
_16 = -9223372036854775807_isize;
_20 = (-8186871789129865751_i64) as i128;
_9 = _5;
_22 = [(-3386282843111193339_i64),2825618649320053652_i64,4194083885607273066_i64,(-7546076214929816526_i64),4591518644501501711_i64,(-832703260318118740_i64)];
_1 = [85_i8,65_i8,56_i8,9_i8,61_i8,(-53_i8)];
_10 = _3;
Goto(bb3)
}
bb3 = {
_4 = [26_i8,8_i8,93_i8,86_i8,(-126_i8),(-100_i8)];
_13 = _15;
_18 = [_7,_11,_7,_11,_11];
_24 = 3639048079_u32 as i32;
_24 = (-2133456656_i32) & 2048169022_i32;
_15 = _13;
_23.1 = _6 as i8;
_8 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_11 = _7 * _7;
_10 = -_3;
_16 = 9223372036854775807_isize;
_6 = _20 as usize;
_22 = [7074875207523706950_i64,7574763807782282488_i64,(-7235318432058668640_i64),7724362108484153435_i64,(-1304296415010841506_i64),(-1294035946895705778_i64)];
_20 = (-159574018507580406744911518741590011602_i128);
RET = 55515213813330696343573361316460006907_u128 * 53028522890868036337232201295008033852_u128;
_9 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_16 = (-126_isize) * (-9223372036854775808_isize);
Goto(bb4)
}
bb4 = {
_9 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_19 = _13;
_1 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_29 = (_18,);
_27 = 52685_u16 as f64;
match _20 {
0 => bb1,
1 => bb3,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
6 => bb9,
180708348413358056718463088690178199854 => bb11,
_ => bb10
}
}
bb5 = {
_4 = [26_i8,8_i8,93_i8,86_i8,(-126_i8),(-100_i8)];
_13 = _15;
_18 = [_7,_11,_7,_11,_11];
_24 = 3639048079_u32 as i32;
_24 = (-2133456656_i32) & 2048169022_i32;
_15 = _13;
_23.1 = _6 as i8;
_8 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_11 = _7 * _7;
_10 = -_3;
_16 = 9223372036854775807_isize;
_6 = _20 as usize;
_22 = [7074875207523706950_i64,7574763807782282488_i64,(-7235318432058668640_i64),7724362108484153435_i64,(-1304296415010841506_i64),(-1294035946895705778_i64)];
_20 = (-159574018507580406744911518741590011602_i128);
RET = 55515213813330696343573361316460006907_u128 * 53028522890868036337232201295008033852_u128;
_9 = [_23.1,_23.1,_23.1,_23.1,_23.1,_23.1];
_16 = (-126_isize) * (-9223372036854775808_isize);
Goto(bb4)
}
bb6 = {
RET = !70597748492181652340345575627734388985_u128;
_8 = [73_i8,(-111_i8),8_i8,73_i8,(-27_i8),54_i8];
_6 = !3_usize;
RET = 225507003632972520067001820498166060966_u128;
_2 = [(-123_i8),(-120_i8),3_i8,(-14_i8),(-72_i8),59_i8];
RET = _10 as u128;
_4 = _8;
_2 = [68_i8,82_i8,32_i8,57_i8,92_i8,(-54_i8)];
_18 = [_11,_7,_11,_11,_7];
_7 = 155_u8 as i16;
_4 = _1;
_10 = _12;
_20 = (-138999857936169275733502237341615798738_i128);
_1 = [(-88_i8),123_i8,27_i8,96_i8,93_i8,(-58_i8)];
RET = _14 as u128;
_15 = _14;
_9 = [50_i8,71_i8,38_i8,90_i8,(-98_i8),(-63_i8)];
_16 = (-4787042940874684637_i64) as isize;
_6 = 14851495662736579971_usize & 0_usize;
_16 = -9223372036854775807_isize;
_20 = (-8186871789129865751_i64) as i128;
_9 = _5;
_22 = [(-3386282843111193339_i64),2825618649320053652_i64,4194083885607273066_i64,(-7546076214929816526_i64),4591518644501501711_i64,(-832703260318118740_i64)];
_1 = [85_i8,65_i8,56_i8,9_i8,61_i8,(-53_i8)];
_10 = _3;
Goto(bb3)
}
bb7 = {
_1 = [(-127_i8),88_i8,12_i8,(-73_i8),34_i8,77_i8];
RET = 216733845513304943580774180701684306603_u128;
_5 = [88_i8,(-11_i8),(-81_i8),(-63_i8),85_i8,(-40_i8)];
_5 = _4;
_4 = [0_i8,(-125_i8),(-110_i8),49_i8,54_i8,(-30_i8)];
_1 = _4;
_8 = _4;
_4 = [(-88_i8),(-38_i8),64_i8,7_i8,22_i8,(-79_i8)];
_7 = !_11;
_8 = [2_i8,(-30_i8),61_i8,78_i8,(-76_i8),(-97_i8)];
RET = !304430427980518409732055167538033591903_u128;
_15 = '\u{f5bbd}';
RET = !181204166334686695498299685078455791524_u128;
_4 = [51_i8,89_i8,9_i8,81_i8,120_i8,59_i8];
_1 = [91_i8,4_i8,(-37_i8),(-58_i8),110_i8,37_i8];
_14 = _15;
_15 = _14;
_5 = [16_i8,(-21_i8),(-66_i8),(-8_i8),(-20_i8),(-89_i8)];
_9 = [(-32_i8),(-64_i8),(-32_i8),100_i8,(-74_i8),122_i8];
_16 = 4174622105_u32 as isize;
_1 = [(-69_i8),(-122_i8),63_i8,96_i8,(-62_i8),(-5_i8)];
_1 = _9;
_4 = [47_i8,(-78_i8),(-69_i8),(-113_i8),(-101_i8),122_i8];
Goto(bb2)
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
RET = 229178198200973967979099542545290816704_u128;
RET = 91_u8 as u128;
_17 = [3691871163_u32];
match _20 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
180708348413358056718463088690178199854 => bb17,
_ => bb16
}
}
bb12 = {
Return()
}
bb13 = {
_1 = [(-127_i8),88_i8,12_i8,(-73_i8),34_i8,77_i8];
RET = 216733845513304943580774180701684306603_u128;
_5 = [88_i8,(-11_i8),(-81_i8),(-63_i8),85_i8,(-40_i8)];
_5 = _4;
_4 = [0_i8,(-125_i8),(-110_i8),49_i8,54_i8,(-30_i8)];
_1 = _4;
_8 = _4;
_4 = [(-88_i8),(-38_i8),64_i8,7_i8,22_i8,(-79_i8)];
_7 = !_11;
_8 = [2_i8,(-30_i8),61_i8,78_i8,(-76_i8),(-97_i8)];
RET = !304430427980518409732055167538033591903_u128;
_15 = '\u{f5bbd}';
RET = !181204166334686695498299685078455791524_u128;
_4 = [51_i8,89_i8,9_i8,81_i8,120_i8,59_i8];
_1 = [91_i8,4_i8,(-37_i8),(-58_i8),110_i8,37_i8];
_14 = _15;
_15 = _14;
_5 = [16_i8,(-21_i8),(-66_i8),(-8_i8),(-20_i8),(-89_i8)];
_9 = [(-32_i8),(-64_i8),(-32_i8),100_i8,(-74_i8),122_i8];
_16 = 4174622105_u32 as isize;
_1 = [(-69_i8),(-122_i8),63_i8,96_i8,(-62_i8),(-5_i8)];
_1 = _9;
_4 = [47_i8,(-78_i8),(-69_i8),(-113_i8),(-101_i8),122_i8];
Goto(bb2)
}
bb14 = {
Return()
}
bb15 = {
_1 = [(-127_i8),88_i8,12_i8,(-73_i8),34_i8,77_i8];
RET = 216733845513304943580774180701684306603_u128;
_5 = [88_i8,(-11_i8),(-81_i8),(-63_i8),85_i8,(-40_i8)];
_5 = _4;
_4 = [0_i8,(-125_i8),(-110_i8),49_i8,54_i8,(-30_i8)];
_1 = _4;
_8 = _4;
_4 = [(-88_i8),(-38_i8),64_i8,7_i8,22_i8,(-79_i8)];
_7 = !_11;
_8 = [2_i8,(-30_i8),61_i8,78_i8,(-76_i8),(-97_i8)];
RET = !304430427980518409732055167538033591903_u128;
_15 = '\u{f5bbd}';
RET = !181204166334686695498299685078455791524_u128;
_4 = [51_i8,89_i8,9_i8,81_i8,120_i8,59_i8];
_1 = [91_i8,4_i8,(-37_i8),(-58_i8),110_i8,37_i8];
_14 = _15;
_15 = _14;
_5 = [16_i8,(-21_i8),(-66_i8),(-8_i8),(-20_i8),(-89_i8)];
_9 = [(-32_i8),(-64_i8),(-32_i8),100_i8,(-74_i8),122_i8];
_16 = 4174622105_u32 as isize;
_1 = [(-69_i8),(-122_i8),63_i8,96_i8,(-62_i8),(-5_i8)];
_1 = _9;
_4 = [47_i8,(-78_i8),(-69_i8),(-113_i8),(-101_i8),122_i8];
Goto(bb2)
}
bb16 = {
RET = !70597748492181652340345575627734388985_u128;
_8 = [73_i8,(-111_i8),8_i8,73_i8,(-27_i8),54_i8];
_6 = !3_usize;
RET = 225507003632972520067001820498166060966_u128;
_2 = [(-123_i8),(-120_i8),3_i8,(-14_i8),(-72_i8),59_i8];
RET = _10 as u128;
_4 = _8;
_2 = [68_i8,82_i8,32_i8,57_i8,92_i8,(-54_i8)];
_18 = [_11,_7,_11,_11,_7];
_7 = 155_u8 as i16;
_4 = _1;
_10 = _12;
_20 = (-138999857936169275733502237341615798738_i128);
_1 = [(-88_i8),123_i8,27_i8,96_i8,93_i8,(-58_i8)];
RET = _14 as u128;
_15 = _14;
_9 = [50_i8,71_i8,38_i8,90_i8,(-98_i8),(-63_i8)];
_16 = (-4787042940874684637_i64) as isize;
_6 = 14851495662736579971_usize & 0_usize;
_16 = -9223372036854775807_isize;
_20 = (-8186871789129865751_i64) as i128;
_9 = _5;
_22 = [(-3386282843111193339_i64),2825618649320053652_i64,4194083885607273066_i64,(-7546076214929816526_i64),4591518644501501711_i64,(-832703260318118740_i64)];
_1 = [85_i8,65_i8,56_i8,9_i8,61_i8,(-53_i8)];
_10 = _3;
Goto(bb3)
}
bb17 = {
_15 = _14;
_30 = core::ptr::addr_of!(_7);
_11 = (*_30) >> RET;
Goto(bb18)
}
bb18 = {
Call(_31 = dump_var(16_usize, 8_usize, Move(_8), 9_usize, Move(_9), 19_usize, Move(_19), 4_usize, Move(_4)), ReturnTo(bb19), UnwindUnreachable())
}
bb19 = {
Call(_31 = dump_var(16_usize, 24_usize, Move(_24), 14_usize, Move(_14), 17_usize, Move(_17), 2_usize, Move(_2)), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
Call(_31 = dump_var(16_usize, 1_usize, Move(_1), 16_usize, Move(_16), 32_usize, _32, 32_usize, _32), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: i8,mut _2: (((u16, i8), [u16; 8]), (u16, i8)),mut _3: &'static mut [isize; 6]) -> u16 {
mir! {
type RET = u16;
let _4: f64;
let _5: (&'static u32,);
let _6: f64;
let _7: &'static bool;
let _8: (&'static mut u64, i8, &'static u32, u64);
let _9: (u128, [u16; 8], [isize; 6], &'static mut [isize; 6]);
let _10: isize;
let _11: char;
let _12: u16;
let _13: Adt79;
let _14: f32;
let _15: [usize; 2];
let _16: ();
let _17: ();
{
RET = '\u{9585d}' as u16;
_2.0.0.1 = _2.1.1;
_2.0.1 = [_2.1.0,RET,_2.0.0.0,_2.0.0.0,RET,_2.0.0.0,_2.1.0,_2.0.0.0];
_1 = _2.0.0.1 | _2.0.0.1;
_2.1 = (RET, _1);
Goto(bb1)
}
bb1 = {
_1 = _2.1.1;
_4 = _2.0.0.1 as f64;
RET = !_2.0.0.0;
RET = 68_u8 as u16;
_2.1.0 = !_2.0.0.0;
RET = !_2.1.0;
_4 = 174_u8 as f64;
RET = _2.1.0 << _1;
_2.1.1 = !_2.0.0.1;
_2.0.0.0 = !RET;
RET = 147_u8 as u16;
_2.1.0 = !_2.0.0.0;
_2.1 = (_2.0.0.0, _2.0.0.1);
_2.0.1 = [_2.1.0,_2.1.0,_2.1.0,_2.1.0,_2.1.0,_2.0.0.0,_2.0.0.0,_2.0.0.0];
_2.0.0 = (_2.1.0, _1);
_2.0.0.0 = _2.1.0 - _2.1.0;
_4 = 3512534489556810716_u64 as f64;
_2.0.0 = _2.1;
_2.1 = (_2.0.0.0, _2.0.0.1);
_2.1.0 = 114340368566349230607965521846968275792_u128 as u16;
RET = _2.0.0.0;
_4 = (-1583720859_i32) as f64;
_2.0.1 = [RET,_2.0.0.0,_2.0.0.0,_2.1.0,RET,RET,_2.0.0.0,_2.0.0.0];
_2.1.1 = !_2.0.0.1;
_2.0.1 = [_2.0.0.0,RET,RET,RET,_2.0.0.0,_2.0.0.0,_2.0.0.0,RET];
_2.1.1 = !_1;
_2.1.0 = RET ^ _2.0.0.0;
_6 = (-26_isize) as f64;
Goto(bb2)
}
bb2 = {
_2.1 = (_2.0.0.0, _1);
_2.0.0 = (RET, _2.1.1);
_2.0.0.0 = _2.1.0 + RET;
RET = 152_u8 as u16;
_2.1.1 = _2.0.0.1;
_2.1.0 = _2.0.0.0 & _2.0.0.0;
RET = _2.0.0.0;
_8.3 = 11286391815644724734_u64 << _2.1.0;
RET = _1 as u16;
Call(_4 = core::intrinsics::fmaf64(_6, _6, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_8.0 = &mut _8.3;
_8.1 = _2.1.1 * _1;
_4 = -_6;
_2.0.0.1 = !_8.1;
_2.0.0.0 = !_2.1.0;
_8.1 = -_2.0.0.1;
_9.2 = [(-2_isize),9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize)];
_2.0.0.1 = -_2.1.1;
_8.0 = &mut _8.3;
_3 = &mut _9.2;
_2.1.0 = 137393462613324500777320672229316941049_u128 as u16;
_1 = _2.0.0.1 * _2.0.0.1;
(*_3) = [108_isize,(-9223372036854775808_isize),(-84_isize),9223372036854775807_isize,(-57_isize),(-43_isize)];
_9.3 = Move(_3);
_9.0 = 198744345361091758029966517328400397072_u128 ^ 262752424529463596612561940781554684066_u128;
_3 = &mut _9.2;
_8.1 = (-1108723693_i32) as i8;
_2.0.1 = [RET,_2.0.0.0,RET,_2.0.0.0,_2.0.0.0,_2.0.0.0,_2.0.0.0,_2.0.0.0];
_9.0 = 145858777136181606037231937339409658603_u128;
_2.0.0 = (RET, _2.1.1);
_12 = _2.0.0.0 ^ _2.0.0.0;
_13.fld2 = 20403_i16 as isize;
_3 = &mut _9.2;
_8.1 = _1;
_10 = _13.fld2 + _13.fld2;
_4 = -_6;
match _9.0 {
145858777136181606037231937339409658603 => bb5,
_ => bb4
}
}
bb4 = {
_2.1 = (_2.0.0.0, _1);
_2.0.0 = (RET, _2.1.1);
_2.0.0.0 = _2.1.0 + RET;
RET = 152_u8 as u16;
_2.1.1 = _2.0.0.1;
_2.1.0 = _2.0.0.0 & _2.0.0.0;
RET = _2.0.0.0;
_8.3 = 11286391815644724734_u64 << _2.1.0;
RET = _1 as u16;
Call(_4 = core::intrinsics::fmaf64(_6, _6, _6), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
_6 = _4 + _4;
_2.1 = (_2.0.0.0, _8.1);
_2.0.0 = _2.1;
_2.0.0.1 = _1 - _2.1.1;
_14 = 1_usize as f32;
_11 = '\u{d49b}';
(*_3) = [_13.fld2,_13.fld2,_10,_10,_10,_10];
_9.0 = !271997647225487930390700374020850202649_u128;
RET = _2.1.0 << _8.1;
_15 = [1_usize,12172228907142720493_usize];
Goto(bb6)
}
bb6 = {
Call(_16 = dump_var(17_usize, 1_usize, Move(_1), 2_usize, Move(_2), 11_usize, Move(_11), 17_usize, _17), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box(33138291111927913698022899061161109090_u128), std::hint::black_box((-82_isize)), std::hint::black_box(51_i8), std::hint::black_box((-31989_i16)), std::hint::black_box(110354688_i32), std::hint::black_box(3168816690_u32), std::hint::black_box(58820921774860887514789080558639500047_i128), std::hint::black_box(12225894260036871994_u64), std::hint::black_box(234_u8));
                
            }
#[derive(Debug)]
pub struct Adt30 {
fld0: i8,
fld1: i32,
fld2: u8,
}
#[derive(Debug)]
pub enum Adt34 {
Variant0{
fld0: u8,
fld1: u16,
fld2: isize,
fld3: u128,
fld4: i16,
fld5: f32,

},
Variant1{
fld0: i32,
fld1: *mut i32,

}}
#[derive(Debug)]
pub struct Adt41 {
fld0: i128,
fld1: [u16; 3],
fld2: u16,
}
#[derive(Debug)]
pub enum Adt54 {
Variant0{
fld0: (u16, i8),

},
Variant1{
fld0: [isize; 6],
fld1: Adt41,

},
Variant2{
fld0: bool,
fld1: i128,
fld2: u128,
fld3: [u32; 6],

},
Variant3{
fld0: f32,
fld1: (u16, i8),
fld2: u16,
fld3: Adt30,
fld4: *const ((u16, i8), [u16; 8]),
fld5: u128,
fld6: *mut [isize; 6],
fld7: [u32; 6],

}}
#[derive(Debug)]
pub enum Adt70 {
Variant0{
fld0: f32,
fld1: [u64; 3],

},
Variant1{
fld0: Adt54,

}}
#[derive(Debug)]
pub enum Adt72 {
Variant0{
fld0: [u16; 7],
fld1: *mut f32,
fld2: Adt41,
fld3: *mut [i8; 7],
fld4: [u16; 4],
fld5: [u16; 3],
fld6: (i16, *mut i32, char),
fld7: Adt30,

},
Variant1{
fld0: i64,
fld1: [isize; 6],

},
Variant2{
fld0: [u16; 8],
fld1: i8,

}}
#[derive(Debug)]
pub enum Adt77 {
Variant0{
fld0: bool,
fld1: u64,
fld2: *mut i32,
fld3: *mut [isize; 6],
fld4: u128,
fld5: i32,
fld6: usize,
fld7: u16,

},
Variant1{
fld0: bool,
fld1: Adt70,

},
Variant2{
fld0: [u32; 6],
fld1: [u16; 3],

},
Variant3{
fld0: (i64, i32, *const i16, i32),
fld1: [i8; 7],

}}
#[derive(Debug)]
pub struct Adt79 {
fld0: [u16; 7],
fld1: [u16; 4],
fld2: isize,
}

