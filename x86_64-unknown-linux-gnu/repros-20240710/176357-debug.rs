#![recursion_limit = "1024"]
    #![feature(custom_mir, core_intrinsics, const_hash)]
    #![allow(unused_parens, unused_assignments, overflowing_literals)]
    extern crate core;
    use core::intrinsics::mir::*;

    use std::fmt::Debug;

    #[inline(never)]
    fn dump_var(
        f: usize,
        var0: usize, val0: impl Debug,
        var1: usize, val1: impl Debug,
        var2: usize, val2: impl Debug,
        var3: usize, val3: impl Debug,
    ) {
        println!("fn{f}:_{var0} = {val0:?}\n_{var1} = {val1:?}\n_{var2} = {val2:?}\n_{var3} = {val3:?}");
    }
    #[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn0(mut _1: bool,mut _2: char,mut _3: isize,mut _4: i8,mut _5: i16,mut _6: i32,mut _7: u128,mut _8: i128,mut _9: usize,mut _10: u8,mut _11: u64,mut _12: u32) -> *mut [bool; 4] {
mir! {
type RET = *mut [bool; 4];
let _13: &'static mut i8;
let _14: *const *mut [i16; 2];
let _15: i32;
let _16: i64;
let _17: *mut i32;
let _18: *mut [bool; 4];
let _19: bool;
let _20: bool;
let _21: Adt23;
let _22: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _23: &'static mut (Adt31, i32);
let _24: *mut [bool; 4];
let _25: *const &'static mut i8;
let _26: char;
let _27: bool;
let _28: *const [usize; 2];
let _29: f64;
let _30: [u16; 2];
let _31: u64;
let _32: isize;
let _33: *const [u128; 2];
let _34: &'static mut [char; 2];
let _35: f64;
let _36: &'static mut i8;
let _37: isize;
let _38: isize;
let _39: bool;
let _40: f64;
let _41: isize;
let _42: *mut i32;
let _43: &'static &'static f64;
let _44: *mut i32;
let _45: isize;
let _46: [bool; 4];
let _47: u64;
let _48: f64;
let _49: &'static [u64; 1];
let _50: isize;
let _51: &'static mut &'static mut i8;
let _52: *mut *mut i32;
let _53: bool;
let _54: usize;
let _55: isize;
let _56: u128;
let _57: &'static mut &'static mut i8;
let _58: *mut &'static *mut [bool; 4];
let _59: f64;
let _60: char;
let _61: [usize; 8];
let _62: [u8; 2];
let _63: char;
let _64: ();
let _65: ();
{
_1 = true | false;
_4 = 3400035776451555882_u64 as i8;
_9 = 5445577659512794091_usize + 0_usize;
_2 = '\u{b6b5e}';
_6 = 1693486675_i32 + 921065540_i32;
_4 = 124_i8 + (-16_i8);
_5 = (-2273_i16) + (-5410_i16);
_10 = 224_u8;
_7 = 19934854509843786079801397640933747587_u128 | 282789384842724411312334970907872359340_u128;
_4 = (-100_i8);
_8 = 59109733971472644211713111669654926839_i128;
_4 = (-5426250672990556807_i64) as i8;
_12 = 1614839602_u32;
_8 = -(-70946820998315679891279034116642379173_i128);
_9 = 8643362296035617849_usize + 6_usize;
_4 = _1 as i8;
_4 = (-53_i8) - (-118_i8);
_6 = (-812629095_i32);
_4 = 98_i8;
_12 = 1668212685_u32 << _5;
Goto(bb1)
}
bb1 = {
_6 = (-895032646_i32) & 1433391325_i32;
match _4 {
98 => bb3,
_ => bb2
}
}
bb2 = {
Return()
}
bb3 = {
_3 = !(-9223372036854775808_isize);
_8 = _6 as i128;
_6 = (-1762963812_i32);
_12 = _9 as u32;
_6 = (-929686804_i32) << _10;
_15 = _6;
_4 = 110_i8;
_12 = 6801963604973084775_i64 as u32;
_3 = (-82_isize);
_13 = &mut _4;
(*_13) = 2102257641225632133_u64 as i8;
(*_13) = 50_i8 & 50_i8;
_5 = -(-3323_i16);
(*_13) = !(-36_i8);
_2 = '\u{1a79f}';
(*_13) = 54_i8 ^ (-24_i8);
(*_13) = 82_i8 - (-41_i8);
(*_13) = 102_i8 >> _9;
_7 = 30449843503940496505899031664625238755_u128 * 179686040764157280802831295458454218864_u128;
(*_13) = _2 as i8;
_7 = 28466757312640380191570629216942160921_u128 | 264609099641942762549441314701777006161_u128;
(*_13) = 2367911468059297274_i64 as i8;
Goto(bb4)
}
bb4 = {
(*_13) = -2_i8;
_9 = 9915013070176319478_usize >> (*_13);
(*_13) = (-112_i8) << _9;
_2 = '\u{d8e9a}';
(*_13) = (-18_i8) >> _6;
_16 = _1 as i64;
(*_13) = !(-91_i8);
(*_13) = 114_i8;
(*_13) = 27_i8 | 14_i8;
_10 = 49_u8 >> _8;
(*_13) = _16 as i8;
(*_13) = (-68_i8);
_16 = (-2036065321921414292_i64) | (-3650551222986465376_i64);
(*_13) = 111_i8 | 54_i8;
(*_13) = 26_i8 >> _5;
(*_13) = -(-56_i8);
(*_13) = (-20_i8);
(*_13) = 86_i8;
_15 = -_6;
(*_13) = _16 as i8;
Goto(bb5)
}
bb5 = {
(*_13) = 354_u16 as i8;
(*_13) = _2 as i8;
_19 = (*_13) == (*_13);
_22.1 = [_9,_9,_9,_9,_9,_9,_9,_9];
_17 = core::ptr::addr_of_mut!(_6);
Goto(bb6)
}
bb6 = {
(*_17) = _15;
_5 = -(-26504_i16);
(*_13) = 90_i8 - 89_i8;
(*_17) = _15;
(*_17) = _8 as i32;
_5 = 40775_u16 as i16;
(*_13) = 17_i8 << _7;
_21 = Adt23::Variant0 { fld0: _19,fld1: _2,fld2: _3,fld3: (*_13),fld4: _9,fld5: 43489_u16 };
place!(Field::<usize>(Variant(_21, 0), 4)) = _9 * _9;
(*_13) = Field::<i8>(Variant(_21, 0), 3);
_11 = !5370155576516265942_u64;
(*_13) = -Field::<i8>(Variant(_21, 0), 3);
Goto(bb7)
}
bb7 = {
(*_17) = !_15;
_25 = core::ptr::addr_of!(_13);
(*_17) = -_15;
_19 = !Field::<bool>(Variant(_21, 0), 0);
_22.1 = [Field::<usize>(Variant(_21, 0), 4),_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4),_9,_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_21, 0), 3));
_29 = _7 as f64;
_6 = -_15;
_2 = '\u{f2e2d}';
_16 = (-3540836044634955838_i64) * 4507035172770874394_i64;
(*_17) = _19 as i32;
(*_17) = _15 ^ _15;
(*_17) = _15 - _15;
_22.2 = Adt23::Variant0 { fld0: _1,fld1: _2,fld2: _3,fld3: (*_13),fld4: _9,fld5: 60011_u16 };
place!(Field::<bool>(Variant(_22.2, 0), 0)) = _10 >= _10;
_22.1 = [_9,_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4)];
_30 = [19131_u16,11655_u16];
_6 = _15;
_22.3 = [_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_22.2, 0), 3));
(*_17) = _15;
_10 = 243_u8 ^ 131_u8;
Call(RET = fn1(Move((*_25)), Move(_25), _11, Move(_17), (*_13), (*_17)), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_12 = 1744299467_u32;
_11 = 3616086842320115196_u64 - 7463162518108858546_u64;
_20 = _19;
_27 = _20;
_11 = 15896513020810905249_u64 | 9808122031667883349_u64;
_9 = 2051643634304677233_usize >> _7;
_17 = core::ptr::addr_of_mut!(_6);
_31 = _29 as u64;
(*_17) = _15 + _15;
_3 = (-9223372036854775808_isize);
_7 = 224943119491566722978462575515752640198_u128 & 266684137365905719043341166131505773557_u128;
_2 = '\u{c7b5b}';
(*_17) = _15 * _15;
_10 = _7 as u8;
_17 = core::ptr::addr_of_mut!((*_17));
_27 = (*_17) >= (*_17);
_6 = _15 + _15;
_19 = _27;
Goto(bb9)
}
bb9 = {
_35 = -_29;
_20 = !_19;
(*_17) = _15;
match _12 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb6,
1744299467 => bb10,
_ => bb5
}
}
bb10 = {
(*_17) = _15 + _15;
(*_17) = _15;
_26 = _2;
(*_17) = -_15;
_26 = _2;
(*_17) = _15 | _15;
(*_17) = _15 << _16;
_32 = _29 as isize;
(*_17) = _15 - _15;
_32 = _3 | _3;
_37 = _32;
_37 = _3;
(*_17) = _15 << _9;
_17 = core::ptr::addr_of_mut!((*_17));
_30 = [39724_u16,24078_u16];
_20 = (*_17) == _15;
(*_17) = _15;
(*_17) = _8 as i32;
(*_17) = !_15;
_11 = _31;
_30 = [38052_u16,7267_u16];
(*_17) = _15;
(*_17) = !_15;
_9 = (-73_i8) as usize;
_16 = 8127105012932702737_i64 ^ 1486978670418477150_i64;
match _3 {
0 => bb4,
1 => bb2,
2 => bb8,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb11 = {
(*_17) = !_15;
_25 = core::ptr::addr_of!(_13);
(*_17) = -_15;
_19 = !Field::<bool>(Variant(_21, 0), 0);
_22.1 = [Field::<usize>(Variant(_21, 0), 4),_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4),_9,_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_21, 0), 3));
_29 = _7 as f64;
_6 = -_15;
_2 = '\u{f2e2d}';
_16 = (-3540836044634955838_i64) * 4507035172770874394_i64;
(*_17) = _19 as i32;
(*_17) = _15 ^ _15;
(*_17) = _15 - _15;
_22.2 = Adt23::Variant0 { fld0: _1,fld1: _2,fld2: _3,fld3: (*_13),fld4: _9,fld5: 60011_u16 };
place!(Field::<bool>(Variant(_22.2, 0), 0)) = _10 >= _10;
_22.1 = [_9,_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4)];
_30 = [19131_u16,11655_u16];
_6 = _15;
_22.3 = [_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_22.2, 0), 3));
(*_17) = _15;
_10 = 243_u8 ^ 131_u8;
Call(RET = fn1(Move((*_25)), Move(_25), _11, Move(_17), (*_13), (*_17)), ReturnTo(bb8), UnwindUnreachable())
}
bb12 = {
(*_17) = _15;
_6 = _15 + _15;
(*_17) = _15;
(*_17) = _1 as i32;
_9 = 3_usize;
(*_17) = _5 as i32;
_19 = _27 & _27;
(*_17) = _5 as i32;
_5 = 32619_i16 >> _31;
_31 = !_11;
_38 = _10 as isize;
_29 = _9 as f64;
(*_17) = -_15;
(*_17) = _15;
(*_17) = _15 - _15;
_31 = _11 | _11;
match _3 {
340282366920938463454151235394913435648 => bb13,
_ => bb7
}
}
bb13 = {
_39 = _19;
_38 = _3 - _37;
_19 = _1 >= _39;
(*_17) = _7 as i32;
(*_17) = _15;
_16 = _9 as i64;
_38 = _37;
_6 = _15;
_39 = _19 > _19;
(*_17) = _12 as i32;
(*_17) = _15 | _15;
(*_17) = _5 as i32;
(*_17) = _15 >> _37;
_2 = _26;
(*_17) = _15 - _15;
(*_17) = _9 as i32;
_31 = !_11;
(*_17) = !_15;
_42 = core::ptr::addr_of_mut!((*_17));
(*_17) = -_15;
_19 = _39;
_7 = _31 as u128;
_16 = 18128_u16 as i64;
_40 = _5 as f64;
(*_17) = _31 as i32;
Goto(bb14)
}
bb14 = {
(*_17) = _15 & _15;
_41 = _32;
_19 = !_39;
_35 = _40;
(*_17) = _10 as i32;
(*_17) = -_15;
_37 = _32;
_1 = !_19;
RET = core::ptr::addr_of_mut!(_46);
(*_17) = _15 - _15;
_15 = (*_17) + (*_17);
_45 = -_38;
_1 = _20;
(*_17) = _12 as i32;
(*RET)[_9] = _19;
(*_17) = !_15;
(*RET) = [_19,_39,_1,_39];
(*RET) = [_27,_19,_19,_39];
(*RET) = [_19,_39,_39,_27];
(*RET)[_9] = _39;
match _3 {
0 => bb15,
1 => bb16,
340282366920938463454151235394913435648 => bb18,
_ => bb17
}
}
bb15 = {
(*_17) = _15 + _15;
(*_17) = _15;
_26 = _2;
(*_17) = -_15;
_26 = _2;
(*_17) = _15 | _15;
(*_17) = _15 << _16;
_32 = _29 as isize;
(*_17) = _15 - _15;
_32 = _3 | _3;
_37 = _32;
_37 = _3;
(*_17) = _15 << _9;
_17 = core::ptr::addr_of_mut!((*_17));
_30 = [39724_u16,24078_u16];
_20 = (*_17) == _15;
(*_17) = _15;
(*_17) = _8 as i32;
(*_17) = !_15;
_11 = _31;
_30 = [38052_u16,7267_u16];
(*_17) = _15;
(*_17) = !_15;
_9 = (-73_i8) as usize;
_16 = 8127105012932702737_i64 ^ 1486978670418477150_i64;
match _3 {
0 => bb4,
1 => bb2,
2 => bb8,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb16 = {
(*_13) = -2_i8;
_9 = 9915013070176319478_usize >> (*_13);
(*_13) = (-112_i8) << _9;
_2 = '\u{d8e9a}';
(*_13) = (-18_i8) >> _6;
_16 = _1 as i64;
(*_13) = !(-91_i8);
(*_13) = 114_i8;
(*_13) = 27_i8 | 14_i8;
_10 = 49_u8 >> _8;
(*_13) = _16 as i8;
(*_13) = (-68_i8);
_16 = (-2036065321921414292_i64) | (-3650551222986465376_i64);
(*_13) = 111_i8 | 54_i8;
(*_13) = 26_i8 >> _5;
(*_13) = -(-56_i8);
(*_13) = (-20_i8);
(*_13) = 86_i8;
_15 = -_6;
(*_13) = _16 as i8;
Goto(bb5)
}
bb17 = {
(*_17) = !_15;
_25 = core::ptr::addr_of!(_13);
(*_17) = -_15;
_19 = !Field::<bool>(Variant(_21, 0), 0);
_22.1 = [Field::<usize>(Variant(_21, 0), 4),_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4),_9,_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_21, 0), 3));
_29 = _7 as f64;
_6 = -_15;
_2 = '\u{f2e2d}';
_16 = (-3540836044634955838_i64) * 4507035172770874394_i64;
(*_17) = _19 as i32;
(*_17) = _15 ^ _15;
(*_17) = _15 - _15;
_22.2 = Adt23::Variant0 { fld0: _1,fld1: _2,fld2: _3,fld3: (*_13),fld4: _9,fld5: 60011_u16 };
place!(Field::<bool>(Variant(_22.2, 0), 0)) = _10 >= _10;
_22.1 = [_9,_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4)];
_30 = [19131_u16,11655_u16];
_6 = _15;
_22.3 = [_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_22.2, 0), 3));
(*_17) = _15;
_10 = 243_u8 ^ 131_u8;
Call(RET = fn1(Move((*_25)), Move(_25), _11, Move(_17), (*_13), (*_17)), ReturnTo(bb8), UnwindUnreachable())
}
bb18 = {
(*RET) = [_19,_19,_39,_39];
(*_17) = _9 as i32;
(*RET) = [_19,_19,_27,_39];
_2 = _26;
(*RET) = [_39,_39,_39,_19];
_45 = _3 >> (*_17);
(*RET) = [_39,_1,_39,_39];
(*RET)[_9] = _1;
(*_17) = _38 as i32;
(*RET)[_9] = _39 < _19;
(*RET) = [_20,_39,_19,_39];
(*RET)[_9] = (*_17) > _15;
(*_17) = _15 + _15;
(*RET)[_9] = _19;
(*RET)[_9] = _39 | _39;
(*RET) = [_19,_19,_39,_39];
_39 = (*RET)[_9] >= (*RET)[_9];
(*_17) = _15 * _15;
(*_17) = _11 as i32;
_27 = (*RET)[_9] < (*RET)[_9];
_20 = _27 | (*RET)[_9];
match _9 {
3 => bb20,
_ => bb19
}
}
bb19 = {
_6 = (-895032646_i32) & 1433391325_i32;
match _4 {
98 => bb3,
_ => bb2
}
}
bb20 = {
(*_17) = _8 as i32;
_37 = _41;
_48 = 61600_u16 as f64;
(*_17) = 21_i8 as i32;
(*_17) = _15 >> _32;
(*_17) = _15 >> _15;
(*_17) = _9 as i32;
(*_17) = -_15;
(*RET)[_9] = _27;
_6 = _15 + _15;
(*RET)[_9] = _27;
(*_17) = _15 * _15;
(*_17) = _16 as i32;
(*RET) = [_20,_19,_20,_27];
(*RET) = [_19,_20,_39,_27];
(*_17) = !_15;
(*RET) = [_20,_39,_20,_27];
(*RET)[_9] = !_27;
(*RET) = [_39,_27,_39,_20];
Goto(bb21)
}
bb21 = {
(*RET)[_9] = (*_17) > (*_17);
(*_17) = _16 as i32;
(*_17) = _15 >> _15;
(*_17) = _9 as i32;
(*RET)[_9] = _19 == _39;
_44 = Move(_17);
_18 = core::ptr::addr_of_mut!((*RET));
_26 = _2;
_24 = core::ptr::addr_of_mut!((*_18));
(*_24)[_9] = _27;
(*_18) = [_39,_20,_27,_20];
(*RET) = [_20,_27,_19,_27];
(*RET)[_9] = !_20;
(*RET)[_9] = _20 > _39;
_29 = _10 as f64;
(*RET) = [_20,_39,_39,_39];
_42 = Move(_44);
(*RET)[_9] = _39 <= _27;
_39 = !(*RET)[_9];
Goto(bb22)
}
bb22 = {
(*RET) = [_1,_20,_27,_20];
(*RET) = [_20,_20,_39,_27];
_32 = 63906_u16 as isize;
(*RET)[_9] = _20 > _27;
(*RET)[_9] = _27 ^ _20;
match _9 {
0 => bb13,
1 => bb2,
2 => bb9,
4 => bb23,
5 => bb24,
6 => bb25,
3 => bb27,
_ => bb26
}
}
bb23 = {
(*_17) = !_15;
_25 = core::ptr::addr_of!(_13);
(*_17) = -_15;
_19 = !Field::<bool>(Variant(_21, 0), 0);
_22.1 = [Field::<usize>(Variant(_21, 0), 4),_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4),_9,_9,Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_21, 0), 3));
_29 = _7 as f64;
_6 = -_15;
_2 = '\u{f2e2d}';
_16 = (-3540836044634955838_i64) * 4507035172770874394_i64;
(*_17) = _19 as i32;
(*_17) = _15 ^ _15;
(*_17) = _15 - _15;
_22.2 = Adt23::Variant0 { fld0: _1,fld1: _2,fld2: _3,fld3: (*_13),fld4: _9,fld5: 60011_u16 };
place!(Field::<bool>(Variant(_22.2, 0), 0)) = _10 >= _10;
_22.1 = [_9,_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4)];
_30 = [19131_u16,11655_u16];
_6 = _15;
_22.3 = [_9,Field::<usize>(Variant(_22.2, 0), 4),_9,Field::<usize>(Variant(_22.2, 0), 4),Field::<usize>(Variant(_22.2, 0), 4)];
(*_25) = &mut place!(Field::<i8>(Variant(_22.2, 0), 3));
(*_17) = _15;
_10 = 243_u8 ^ 131_u8;
Call(RET = fn1(Move((*_25)), Move(_25), _11, Move(_17), (*_13), (*_17)), ReturnTo(bb8), UnwindUnreachable())
}
bb24 = {
_35 = -_29;
_20 = !_19;
(*_17) = _15;
match _12 {
0 => bb1,
1 => bb7,
2 => bb3,
3 => bb6,
1744299467 => bb10,
_ => bb5
}
}
bb25 = {
_12 = 1744299467_u32;
_11 = 3616086842320115196_u64 - 7463162518108858546_u64;
_20 = _19;
_27 = _20;
_11 = 15896513020810905249_u64 | 9808122031667883349_u64;
_9 = 2051643634304677233_usize >> _7;
_17 = core::ptr::addr_of_mut!(_6);
_31 = _29 as u64;
(*_17) = _15 + _15;
_3 = (-9223372036854775808_isize);
_7 = 224943119491566722978462575515752640198_u128 & 266684137365905719043341166131505773557_u128;
_2 = '\u{c7b5b}';
(*_17) = _15 * _15;
_10 = _7 as u8;
_17 = core::ptr::addr_of_mut!((*_17));
_27 = (*_17) >= (*_17);
_6 = _15 + _15;
_19 = _27;
Goto(bb9)
}
bb26 = {
(*_17) = _15 + _15;
(*_17) = _15;
_26 = _2;
(*_17) = -_15;
_26 = _2;
(*_17) = _15 | _15;
(*_17) = _15 << _16;
_32 = _29 as isize;
(*_17) = _15 - _15;
_32 = _3 | _3;
_37 = _32;
_37 = _3;
(*_17) = _15 << _9;
_17 = core::ptr::addr_of_mut!((*_17));
_30 = [39724_u16,24078_u16];
_20 = (*_17) == _15;
(*_17) = _15;
(*_17) = _8 as i32;
(*_17) = !_15;
_11 = _31;
_30 = [38052_u16,7267_u16];
(*_17) = _15;
(*_17) = !_15;
_9 = (-73_i8) as usize;
_16 = 8127105012932702737_i64 ^ 1486978670418477150_i64;
match _3 {
0 => bb4,
1 => bb2,
2 => bb8,
340282366920938463454151235394913435648 => bb12,
_ => bb11
}
}
bb27 = {
_9 = 2_usize - 10292190963491590863_usize;
_53 = !_20;
_37 = _45;
_1 = _39 & _27;
_39 = !_53;
_52 = core::ptr::addr_of_mut!(_44);
_37 = !_41;
(*_52) = core::ptr::addr_of_mut!(_6);
(*RET) = [_39,_20,_20,_53];
_45 = _2 as isize;
_38 = _37 & _37;
_1 = _39 & _20;
(*_52) = Move(_42);
_18 = core::ptr::addr_of_mut!((*RET));
(*RET) = [_27,_27,_39,_27];
_3 = _38 & _41;
(*_52) = core::ptr::addr_of_mut!(_15);
(*RET) = [_1,_1,_27,_27];
(*RET) = [_53,_1,_27,_27];
_48 = _10 as f64;
_5 = -(-19188_i16);
_3 = -_37;
(*RET) = [_1,_39,_20,_20];
_45 = _37 + _3;
Goto(bb28)
}
bb28 = {
_18 = core::ptr::addr_of_mut!((*RET));
_46 = [_20,_39,_39,_39];
(*_44) = _6 ^ _6;
(*RET) = [_19,_20,_53,_39];
(*_44) = _6;
(*RET) = [_20,_20,_20,_53];
(*_44) = _6 << _45;
_9 = 3823996930850188321_usize;
_19 = _1 != _20;
(*RET) = [_27,_27,_20,_53];
_2 = _26;
(*_52) = core::ptr::addr_of_mut!((*_44));
_3 = _38 * _37;
_44 = core::ptr::addr_of_mut!((*_44));
(*RET) = [_53,_19,_39,_19];
_59 = _12 as f64;
_40 = _29;
_54 = _7 as usize;
(*_44) = _6;
(*_44) = _6 ^ _6;
_5 = (-25736_i16);
_35 = _48 + _48;
(*_52) = core::ptr::addr_of_mut!((*_44));
(*_44) = _6 | _6;
(*_44) = _6;
_39 = _53;
match _12 {
0 => bb19,
1 => bb17,
1744299467 => bb29,
_ => bb15
}
}
bb29 = {
(*_52) = core::ptr::addr_of_mut!((*_44));
(*_52) = core::ptr::addr_of_mut!((*_44));
_42 = core::ptr::addr_of_mut!((*_44));
(*_44) = _6 - _6;
(*_44) = -_6;
_60 = _26;
_38 = _3 & _37;
_32 = _3;
(*RET) = [_1,_27,_1,_39];
(*RET) = [_19,_53,_20,_19];
RET = core::ptr::addr_of_mut!((*RET));
(*RET) = [_39,_1,_20,_39];
(*_52) = core::ptr::addr_of_mut!((*_44));
(*RET) = [_19,_39,_53,_20];
(*_52) = core::ptr::addr_of_mut!((*_44));
_32 = !_38;
(*_52) = Move(_42);
(*_52) = core::ptr::addr_of_mut!(_15);
(*RET) = [_53,_1,_19,_20];
(*_44) = -_6;
_56 = _10 as u128;
Goto(bb30)
}
bb30 = {
Call(_64 = dump_var(0_usize, 30_usize, Move(_30), 60_usize, Move(_60), 10_usize, Move(_10), 38_usize, Move(_38)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
Call(_64 = dump_var(0_usize, 20_usize, Move(_20), 19_usize, Move(_19), 46_usize, Move(_46), 4_usize, Move(_4)), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
Call(_64 = dump_var(0_usize, 27_usize, Move(_27), 11_usize, Move(_11), 9_usize, Move(_9), 6_usize, Move(_6)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
Call(_64 = dump_var(0_usize, 26_usize, Move(_26), 8_usize, Move(_8), 54_usize, Move(_54), 65_usize, _65), ReturnTo(bb34), UnwindUnreachable())
}
bb34 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn1(mut _1: &'static mut i8,mut _2: *const &'static mut i8,mut _3: u64,mut _4: *mut i32,mut _5: i8,mut _6: i32) -> *mut [bool; 4] {
mir! {
type RET = *mut [bool; 4];
let _7: Adt23;
let _8: [u8; 5];
let _9: &'static mut i8;
let _10: [u16; 2];
let _11: i16;
let _12: char;
let _13: *mut (&'static mut *mut [u64; 1], u128);
let _14: &'static mut i8;
let _15: char;
let _16: usize;
let _17: i32;
let _18: char;
let _19: usize;
let _20: ((*const *mut [i16; 2], i8, usize), Adt31);
let _21: *mut i16;
let _22: isize;
let _23: &'static *mut [i16; 2];
let _24: f32;
let _25: [i8; 5];
let _26: u128;
let _27: i32;
let _28: *mut i32;
let _29: isize;
let _30: [char; 2];
let _31: [u8; 6];
let _32: *const *mut [i16; 2];
let _33: isize;
let _34: &'static mut (Adt31, i32);
let _35: Adt41;
let _36: Adt48;
let _37: u32;
let _38: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _39: char;
let _40: u16;
let _41: bool;
let _42: i8;
let _43: &'static mut *mut *mut i32;
let _44: isize;
let _45: f64;
let _46: char;
let _47: isize;
let _48: *mut [bool; 4];
let _49: &'static [u64; 1];
let _50: isize;
let _51: char;
let _52: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _53: &'static *mut [i16; 2];
let _54: [u128; 2];
let _55: isize;
let _56: (i128,);
let _57: usize;
let _58: u64;
let _59: isize;
let _60: char;
let _61: char;
let _62: f64;
let _63: [u128; 2];
let _64: u128;
let _65: isize;
let _66: i32;
let _67: i128;
let _68: char;
let _69: &'static *mut [i16; 2];
let _70: (usize, &'static mut &'static mut (*mut i32, *mut [i16; 2], u8), &'static f64);
let _71: *mut [bool; 4];
let _72: ((*const *mut [i16; 2], i8, usize), Adt31);
let _73: &'static f64;
let _74: u64;
let _75: *mut &'static *mut [bool; 4];
let _76: u32;
let _77: isize;
let _78: char;
let _79: char;
let _80: u8;
let _81: isize;
let _82: *const [u128; 2];
let _83: i16;
let _84: f32;
let _85: char;
let _86: isize;
let _87: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _88: i8;
let _89: &'static mut (*mut i32, *mut [i16; 2], u8);
let _90: &'static f64;
let _91: *mut i32;
let _92: i128;
let _93: char;
let _94: [usize; 5];
let _95: u32;
let _96: f64;
let _97: &'static mut &'static mut i8;
let _98: i128;
let _99: bool;
let _100: i32;
let _101: i8;
let _102: &'static f64;
let _103: f32;
let _104: isize;
let _105: &'static [i128; 4];
let _106: f64;
let _107: f32;
let _108: i64;
let _109: usize;
let _110: [u64; 1];
let _111: &'static mut *mut *mut i32;
let _112: char;
let _113: *mut i32;
let _114: bool;
let _115: Adt31;
let _116: bool;
let _117: f64;
let _118: i16;
let _119: char;
let _120: (Adt23,);
let _121: *const &'static mut i8;
let _122: u8;
let _123: char;
let _124: i128;
let _125: u32;
let _126: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _127: f64;
let _128: [u8; 6];
let _129: char;
let _130: [u8; 2];
let _131: f64;
let _132: &'static mut *mut [u64; 1];
let _133: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _134: &'static mut (Adt31, i32);
let _135: u8;
let _136: isize;
let _137: char;
let _138: &'static mut &'static mut i8;
let _139: i64;
let _140: i128;
let _141: *const *mut [i16; 2];
let _142: [usize; 2];
let _143: i32;
let _144: f64;
let _145: &'static mut (i32, f32, Adt18, Adt18);
let _146: bool;
let _147: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _148: [i8; 5];
let _149: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _150: isize;
let _151: *mut [i16; 2];
let _152: &'static &'static f64;
let _153: [bool; 4];
let _154: u128;
let _155: &'static mut *mut [u64; 1];
let _156: Adt18;
let _157: [u8; 6];
let _158: *mut [i16; 2];
let _159: &'static u32;
let _160: (i128,);
let _161: u8;
let _162: &'static mut *mut [u64; 1];
let _163: u64;
let _164: ();
let _165: ();
{
_5 = 25969_u16 as i8;
_6 = (-1148463008_i32);
_3 = 9223372036854775807_isize as u64;
_3 = 13984379931119830254_u64 ^ 3688592545025686384_u64;
_7 = Adt23::Variant0 { fld0: true,fld1: '\u{caf3f}',fld2: 1_isize,fld3: _5,fld4: 5_usize,fld5: 39128_u16 };
_4 = core::ptr::addr_of_mut!(_6);
(*_4) = (-1834786419_i32) - 1516935968_i32;
(*_4) = 87_u8 as i32;
(*_4) = !2109466531_i32;
place!(Field::<char>(Variant(_7, 0), 1)) = '\u{13fed}';
_3 = 19200_u16 as u64;
_4 = core::ptr::addr_of_mut!((*_4));
_1 = &mut _5;
place!(Field::<isize>(Variant(_7, 0), 2)) = 9223372036854775807_isize ^ 9223372036854775807_isize;
(*_1) = Field::<i8>(Variant(_7, 0), 3) + Field::<i8>(Variant(_7, 0), 3);
(*_4) = 1270653584_i32;
_9 = Move(_1);
_10 = [30445_u16,32257_u16];
(*_4) = !1694981859_i32;
place!(Field::<u16>(Variant(_7, 0), 5)) = !31252_u16;
place!(Field::<char>(Variant(_7, 0), 1)) = '\u{94c49}';
(*_4) = -1167640089_i32;
place!(Field::<isize>(Variant(_7, 0), 2)) = !(-9223372036854775808_isize);
place!(Field::<usize>(Variant(_7, 0), 4)) = 17015453708627244808_usize & 3_usize;
_6 = 17902457551246180285383517884577479781_u128 as i32;
Goto(bb1)
}
bb1 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb2 = {
_7 = Adt23::Variant1 { fld0: 52538_u16,fld1: 2336555033_u32,fld2: _3 };
(*_4) = _17 ^ _17;
place!(Field::<u64>(Variant(_7, 1), 2)) = _3;
(*_4) = 472512486_u32 as i32;
_20.1.fld2 = Adt23::Variant1 { fld0: 9001_u16,fld1: 2963564429_u32,fld2: Field::<u64>(Variant(_7, 1), 2) };
_20.1.fld6 = _19 as f64;
_16 = _19 >> _11;
_7 = Adt23::Variant1 { fld0: 54149_u16,fld1: 2333360393_u32,fld2: _3 };
_20.1.fld5 = 9223372036854775807_isize as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 2109_u16 >> _6;
(*_4) = _17 ^ _17;
_20.1.fld3 = (154141045514961745639517548113431145149_i128,);
_20.1.fld0 = (*_4) >= (*_4);
_20.1.fld3.0 = (-167432196148980532891022023758348828376_i128) + 168563706134717933352294950385556045415_i128;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
340282366920938463463374607431768190168 => bb6,
_ => bb5
}
}
bb3 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_12 = '\u{8ff08}';
place!(Field::<u16>(Variant(_7, 1), 0)) = Field::<u16>(Variant(_20.1.fld2, 1), 0);
place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = _3 as u32;
_6 = (-68_i8) as i32;
_17 = (*_4) & (*_4);
Goto(bb7)
}
bb7 = {
place!(Field::<u64>(Variant(_20.1.fld2, 1), 2)) = _20.1.fld0 as u64;
(*_4) = _20.1.fld6 as i32;
_3 = Field::<u64>(Variant(_20.1.fld2, 1), 2) ^ Field::<u64>(Variant(_20.1.fld2, 1), 2);
(*_4) = _17;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
340282366920938463463374607431768190168 => bb8,
_ => bb5
}
}
bb8 = {
_12 = '\u{c859d}';
_20.0.1 = !(-25_i8);
_11 = (-16637_i16);
(*_4) = _20.0.1 as i32;
(*_4) = !_17;
_15 = _12;
_20.1.fld5 = _20.1.fld6 as f32;
(*_4) = (-9223372036854775808_isize) as i32;
_7 = Adt23::Variant0 { fld0: _20.1.fld0,fld1: _12,fld2: 29_isize,fld3: _20.0.1,fld4: _19,fld5: Field::<u16>(Variant(_20.1.fld2, 1), 0) };
_15 = _12;
(*_4) = !_17;
_18 = _12;
_14 = &mut place!(Field::<i8>(Variant(_7, 0), 3));
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 33457_u16 & 12934_u16;
(*_4) = -_17;
(*_4) = -_17;
(*_14) = _20.0.1 ^ _20.0.1;
_20.0.1 = (*_14);
match _11 {
0 => bb4,
340282366920938463463374607431768194819 => bb9,
_ => bb2
}
}
bb9 = {
(*_14) = _20.0.1 | _20.0.1;
_28 = Move(_4);
_20.1.fld5 = _17 as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = !50177_u16;
_10 = [Field::<u16>(Variant(_20.1.fld2, 1), 0),Field::<u16>(Variant(_20.1.fld2, 1), 0)];
_25 = [(*_14),_20.0.1,(*_14),(*_14),(*_14)];
_18 = _15;
_20.1.fld3 = (150375476923003627432806644344748635448_i128,);
_27 = _6;
_29 = (-9223372036854775808_isize);
_26 = 49745829895452391908995274785128164650_u128 << (*_14);
_33 = _29 ^ _29;
(*_14) = -_20.0.1;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 29853_u16;
Goto(bb10)
}
bb10 = {
(*_14) = _26 as i8;
_11 = (-26815_i16) << (*_14);
(*_14) = _20.1.fld3.0 as i8;
(*_14) = 130_u8 as i8;
_30 = [_15,_15];
_11 = (-10524_i16) + 11200_i16;
_12 = _18;
_22 = _29;
_29 = _33 >> _16;
_2 = core::ptr::addr_of!(_14);
(*_14) = _29 as i8;
_2 = core::ptr::addr_of!((*_2));
_4 = core::ptr::addr_of_mut!(_6);
(*_4) = -_27;
_2 = core::ptr::addr_of!((*_2));
(*_4) = _17;
(*_14) = _20.0.1 - _20.0.1;
(*_14) = _20.0.1 * _20.0.1;
(*_4) = _20.1.fld0 as i32;
(*_4) = _27 << (*_14);
(*_14) = !_20.0.1;
_3 = Field::<u64>(Variant(_20.1.fld2, 1), 2) << (*_4);
(*_14) = _18 as i8;
(*_14) = _20.1.fld6 as i8;
_16 = Field::<u16>(Variant(_20.1.fld2, 1), 0) as usize;
Call(place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = fn2(Move((*_2)), Move(_2), Move(_4)), ReturnTo(bb11), UnwindUnreachable())
}
bb11 = {
_9 = &mut _20.0.1;
(*_9) = 17_i8 * 83_i8;
(*_9) = (-96_i8);
(*_9) = (-82_i8) << _26;
_11 = 32337_i16;
_29 = _33 & _33;
(*_9) = (-20_i8) - (-100_i8);
_30 = [_12,_18];
_44 = _22;
match _22 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
340282366920938463454151235394913435648 => bb18,
_ => bb17
}
}
bb12 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb13 = {
Return()
}
bb14 = {
_7 = Adt23::Variant1 { fld0: 52538_u16,fld1: 2336555033_u32,fld2: _3 };
(*_4) = _17 ^ _17;
place!(Field::<u64>(Variant(_7, 1), 2)) = _3;
(*_4) = 472512486_u32 as i32;
_20.1.fld2 = Adt23::Variant1 { fld0: 9001_u16,fld1: 2963564429_u32,fld2: Field::<u64>(Variant(_7, 1), 2) };
_20.1.fld6 = _19 as f64;
_16 = _19 >> _11;
_7 = Adt23::Variant1 { fld0: 54149_u16,fld1: 2333360393_u32,fld2: _3 };
_20.1.fld5 = 9223372036854775807_isize as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 2109_u16 >> _6;
(*_4) = _17 ^ _17;
_20.1.fld3 = (154141045514961745639517548113431145149_i128,);
_20.1.fld0 = (*_4) >= (*_4);
_20.1.fld3.0 = (-167432196148980532891022023758348828376_i128) + 168563706134717933352294950385556045415_i128;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
340282366920938463463374607431768190168 => bb6,
_ => bb5
}
}
bb15 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb16 = {
_12 = '\u{8ff08}';
place!(Field::<u16>(Variant(_7, 1), 0)) = Field::<u16>(Variant(_20.1.fld2, 1), 0);
place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = _3 as u32;
_6 = (-68_i8) as i32;
_17 = (*_4) & (*_4);
Goto(bb7)
}
bb17 = {
Return()
}
bb18 = {
_36 = Adt48::Variant0 { fld0: _16 };
_15 = _12;
(*_9) = (-122_i8) >> _6;
_12 = _15;
_6 = _16 as i32;
_17 = _27;
place!(Field::<usize>(Variant(_36, 0), 0)) = _16;
_28 = core::ptr::addr_of_mut!(_6);
(*_9) = 7_i8;
_14 = &mut (*_9);
_2 = core::ptr::addr_of!(_9);
Goto(bb19)
}
bb19 = {
(*_14) = -(-84_i8);
(*_2) = Move(_14);
(*_28) = _17 & _17;
_33 = _3 as isize;
(*_28) = _17 * _17;
match _11 {
32337 => bb20,
_ => bb13
}
}
bb20 = {
_37 = false as u32;
_52.3 = [_16,_19,_16,Field::<usize>(Variant(_36, 0), 0),_16];
_12 = _18;
(*_28) = _17 & _27;
_22 = -_29;
(*_28) = _17;
_42 = 204_u8 as i8;
_52.3 = [Field::<usize>(Variant(_36, 0), 0),_16,_19,_19,Field::<usize>(Variant(_36, 0), 0)];
_47 = 3932083491770956706_i64 as isize;
_36 = Adt48::Variant0 { fld0: _16 };
(*_2) = &mut _42;
_3 = 7675511303862699678_u64 + 9837591224162665099_u64;
(*_9) = 57_i8 + 60_i8;
_29 = _22;
(*_9) = (-27_i8);
_52.2 = Adt23::Variant1 { fld0: 21206_u16,fld1: _37,fld2: _3 };
Goto(bb21)
}
bb21 = {
_51 = _15;
_12 = _18;
place!(Field::<u16>(Variant(_52.2, 1), 0)) = 43599_u16;
(*_28) = _17 - _27;
place!(Field::<u64>(Variant(_52.2, 1), 2)) = _33 as u64;
_14 = &mut (*_9);
(*_14) = !48_i8;
_52.2 = Adt23::Variant1 { fld0: 35760_u16,fld1: _37,fld2: _3 };
(*_2) = Move(_14);
_24 = (*_28) as f32;
_26 = 229993931075519185913948075872635878362_u128 | 148946083796794113057259848540120343468_u128;
_47 = !_33;
_27 = (*_28) ^ (*_28);
_8 = [39_u8,210_u8,70_u8,164_u8,141_u8];
(*_28) = _27 | _27;
_52.3 = [Field::<usize>(Variant(_36, 0), 0),_19,Field::<usize>(Variant(_36, 0), 0),_19,Field::<usize>(Variant(_36, 0), 0)];
_54 = [_26,_26];
_55 = _47 << (*_28);
_52.2 = Adt23::Variant0 { fld0: true,fld1: _18,fld2: _55,fld3: 5_i8,fld4: _19,fld5: 31279_u16 };
_24 = 42187_u16 as f32;
(*_28) = !_17;
place!(Field::<i8>(Variant(_52.2, 0), 3)) = 127_i8 - 95_i8;
_41 = !true;
(*_2) = &mut place!(Field::<i8>(Variant(_52.2, 0), 3));
_1 = &mut (*_9);
_16 = Field::<usize>(Variant(_36, 0), 0) | _19;
_28 = core::ptr::addr_of_mut!((*_28));
Goto(bb22)
}
bb22 = {
_57 = (*_1) as usize;
_55 = _33 & _47;
(*_2) = Move(_1);
_46 = _15;
_10 = [28563_u16,34900_u16];
(*_28) = (-72_i8) as i32;
_39 = _12;
_27 = (*_28);
_56 = (8365287836060081933124493796891944515_i128,);
(*_28) = _17 >> _55;
(*_28) = _27 + _27;
_54 = [_26,_26];
_59 = _55 + _55;
(*_28) = _17 | _27;
_10 = [5650_u16,32943_u16];
_18 = _51;
_28 = core::ptr::addr_of_mut!((*_28));
(*_28) = _17 & _27;
(*_28) = _24 as i32;
_47 = _55 << _59;
_19 = !Field::<usize>(Variant(_36, 0), 0);
Call(_22 = core::intrinsics::transmute(_33), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
_4 = core::ptr::addr_of_mut!((*_28));
_29 = _47 - _33;
_56.0 = (-43271517438216029785523978158099060209_i128);
(*_4) = -_17;
(*_28) = -_27;
_50 = _59 >> _59;
_55 = _29;
_17 = _26 as i32;
_61 = _18;
(*_28) = _27;
_44 = _29;
(*_28) = _3 as i32;
_12 = _15;
_15 = _39;
_57 = _19 - Field::<usize>(Variant(_36, 0), 0);
_25 = [24_i8,(-84_i8),(-19_i8),89_i8,58_i8];
(*_28) = -_17;
_28 = core::ptr::addr_of_mut!((*_28));
_29 = _59;
(*_28) = !_17;
(*_28) = _27 ^ _17;
_40 = 42935_u16 >> (*_28);
_45 = (-42_i8) as f64;
match _11 {
0 => bb21,
1 => bb24,
2 => bb25,
32337 => bb27,
_ => bb26
}
}
bb24 = {
_12 = '\u{c859d}';
_20.0.1 = !(-25_i8);
_11 = (-16637_i16);
(*_4) = _20.0.1 as i32;
(*_4) = !_17;
_15 = _12;
_20.1.fld5 = _20.1.fld6 as f32;
(*_4) = (-9223372036854775808_isize) as i32;
_7 = Adt23::Variant0 { fld0: _20.1.fld0,fld1: _12,fld2: 29_isize,fld3: _20.0.1,fld4: _19,fld5: Field::<u16>(Variant(_20.1.fld2, 1), 0) };
_15 = _12;
(*_4) = !_17;
_18 = _12;
_14 = &mut place!(Field::<i8>(Variant(_7, 0), 3));
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 33457_u16 & 12934_u16;
(*_4) = -_17;
(*_4) = -_17;
(*_14) = _20.0.1 ^ _20.0.1;
_20.0.1 = (*_14);
match _11 {
0 => bb4,
340282366920938463463374607431768194819 => bb9,
_ => bb2
}
}
bb25 = {
_51 = _15;
_12 = _18;
place!(Field::<u16>(Variant(_52.2, 1), 0)) = 43599_u16;
(*_28) = _17 - _27;
place!(Field::<u64>(Variant(_52.2, 1), 2)) = _33 as u64;
_14 = &mut (*_9);
(*_14) = !48_i8;
_52.2 = Adt23::Variant1 { fld0: 35760_u16,fld1: _37,fld2: _3 };
(*_2) = Move(_14);
_24 = (*_28) as f32;
_26 = 229993931075519185913948075872635878362_u128 | 148946083796794113057259848540120343468_u128;
_47 = !_33;
_27 = (*_28) ^ (*_28);
_8 = [39_u8,210_u8,70_u8,164_u8,141_u8];
(*_28) = _27 | _27;
_52.3 = [Field::<usize>(Variant(_36, 0), 0),_19,Field::<usize>(Variant(_36, 0), 0),_19,Field::<usize>(Variant(_36, 0), 0)];
_54 = [_26,_26];
_55 = _47 << (*_28);
_52.2 = Adt23::Variant0 { fld0: true,fld1: _18,fld2: _55,fld3: 5_i8,fld4: _19,fld5: 31279_u16 };
_24 = 42187_u16 as f32;
(*_28) = !_17;
place!(Field::<i8>(Variant(_52.2, 0), 3)) = 127_i8 - 95_i8;
_41 = !true;
(*_2) = &mut place!(Field::<i8>(Variant(_52.2, 0), 3));
_1 = &mut (*_9);
_16 = Field::<usize>(Variant(_36, 0), 0) | _19;
_28 = core::ptr::addr_of_mut!((*_28));
Goto(bb22)
}
bb26 = {
_7 = Adt23::Variant1 { fld0: 52538_u16,fld1: 2336555033_u32,fld2: _3 };
(*_4) = _17 ^ _17;
place!(Field::<u64>(Variant(_7, 1), 2)) = _3;
(*_4) = 472512486_u32 as i32;
_20.1.fld2 = Adt23::Variant1 { fld0: 9001_u16,fld1: 2963564429_u32,fld2: Field::<u64>(Variant(_7, 1), 2) };
_20.1.fld6 = _19 as f64;
_16 = _19 >> _11;
_7 = Adt23::Variant1 { fld0: 54149_u16,fld1: 2333360393_u32,fld2: _3 };
_20.1.fld5 = 9223372036854775807_isize as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 2109_u16 >> _6;
(*_4) = _17 ^ _17;
_20.1.fld3 = (154141045514961745639517548113431145149_i128,);
_20.1.fld0 = (*_4) >= (*_4);
_20.1.fld3.0 = (-167432196148980532891022023758348828376_i128) + 168563706134717933352294950385556045415_i128;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
340282366920938463463374607431768190168 => bb6,
_ => bb5
}
}
bb27 = {
_22 = _29 << (*_28);
(*_28) = _17 + _17;
_29 = _57 as isize;
_50 = !_44;
_30 = [_39,_39];
(*_28) = _17;
_22 = !_44;
_15 = _39;
_68 = _18;
(*_28) = _16 as i32;
_68 = _15;
_61 = _12;
Goto(bb28)
}
bb28 = {
_31 = [100_u8,227_u8,66_u8,196_u8,255_u8,191_u8];
_17 = _6;
match _56.0 {
297010849482722433677850629273669151247 => bb30,
_ => bb29
}
}
bb29 = {
Return()
}
bb30 = {
_66 = (*_28);
(*_28) = !_17;
_39 = _51;
_25 = [(-104_i8),(-42_i8),17_i8,(-55_i8),94_i8];
_33 = -_59;
_22 = _40 as isize;
_67 = _56.0;
_17 = (*_28) << _50;
(*_28) = _17;
_28 = core::ptr::addr_of_mut!((*_28));
_72.1.fld5 = _24;
match _67 {
0 => bb11,
1 => bb19,
2 => bb5,
3 => bb26,
297010849482722433677850629273669151247 => bb32,
_ => bb31
}
}
bb31 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb32 = {
_65 = _11 as isize;
_58 = _3 * _3;
_72.1.fld6 = _45 + _45;
(*_28) = _17;
_70.2 = &_45;
_72.1.fld0 = !_41;
_59 = _26 as isize;
(*_28) = _17 ^ _17;
_6 = _17;
(*_28) = _17;
_70.0 = (-3410278966002228481_i64) as usize;
_62 = (*_28) as f64;
_47 = _44 - _55;
_12 = _39;
_60 = _39;
_56 = (_67,);
_58 = _3;
_12 = _60;
_73 = &_72.1.fld6;
_76 = _3 as u32;
_10 = [_40,_40];
_26 = 52086828142217341159721112525079863147_u128 ^ 278748829307221947504939473738704290186_u128;
(*_28) = -_17;
_26 = 315238448842949034182588164992557237594_u128;
(*_28) = -_17;
Call(_65 = core::intrinsics::transmute(_44), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_12 = _51;
_56.0 = _67 ^ _67;
_18 = _61;
_58 = _3 >> (*_28);
(*_28) = _17 + _17;
match _67 {
0 => bb13,
1 => bb34,
2 => bb35,
297010849482722433677850629273669151247 => bb37,
_ => bb36
}
}
bb34 = {
_12 = '\u{8ff08}';
place!(Field::<u16>(Variant(_7, 1), 0)) = Field::<u16>(Variant(_20.1.fld2, 1), 0);
place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = _3 as u32;
_6 = (-68_i8) as i32;
_17 = (*_4) & (*_4);
Goto(bb7)
}
bb35 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb36 = {
_4 = core::ptr::addr_of_mut!((*_28));
_29 = _47 - _33;
_56.0 = (-43271517438216029785523978158099060209_i128);
(*_4) = -_17;
(*_28) = -_27;
_50 = _59 >> _59;
_55 = _29;
_17 = _26 as i32;
_61 = _18;
(*_28) = _27;
_44 = _29;
(*_28) = _3 as i32;
_12 = _15;
_15 = _39;
_57 = _19 - Field::<usize>(Variant(_36, 0), 0);
_25 = [24_i8,(-84_i8),(-19_i8),89_i8,58_i8];
(*_28) = -_17;
_28 = core::ptr::addr_of_mut!((*_28));
_29 = _59;
(*_28) = !_17;
(*_28) = _27 ^ _17;
_40 = 42935_u16 >> (*_28);
_45 = (-42_i8) as f64;
match _11 {
0 => bb21,
1 => bb24,
2 => bb25,
32337 => bb27,
_ => bb26
}
}
bb37 = {
_26 = 167384979247458431090286490597124243940_u128;
_57 = !_19;
_56 = (_67,);
_74 = !_3;
_44 = _26 as isize;
_25 = [38_i8,0_i8,55_i8,9_i8,(-115_i8)];
_31 = [19_u8,71_u8,228_u8,61_u8,229_u8,199_u8];
_63 = [_26,_26];
_64 = !_26;
_18 = _60;
_51 = _15;
_55 = !_47;
(*_28) = _50 as i32;
match _11 {
0 => bb38,
1 => bb39,
2 => bb40,
3 => bb41,
4 => bb42,
32337 => bb44,
_ => bb43
}
}
bb38 = {
(*_14) = _26 as i8;
_11 = (-26815_i16) << (*_14);
(*_14) = _20.1.fld3.0 as i8;
(*_14) = 130_u8 as i8;
_30 = [_15,_15];
_11 = (-10524_i16) + 11200_i16;
_12 = _18;
_22 = _29;
_29 = _33 >> _16;
_2 = core::ptr::addr_of!(_14);
(*_14) = _29 as i8;
_2 = core::ptr::addr_of!((*_2));
_4 = core::ptr::addr_of_mut!(_6);
(*_4) = -_27;
_2 = core::ptr::addr_of!((*_2));
(*_4) = _17;
(*_14) = _20.0.1 - _20.0.1;
(*_14) = _20.0.1 * _20.0.1;
(*_4) = _20.1.fld0 as i32;
(*_4) = _27 << (*_14);
(*_14) = !_20.0.1;
_3 = Field::<u64>(Variant(_20.1.fld2, 1), 2) << (*_4);
(*_14) = _18 as i8;
(*_14) = _20.1.fld6 as i8;
_16 = Field::<u16>(Variant(_20.1.fld2, 1), 0) as usize;
Call(place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = fn2(Move((*_2)), Move(_2), Move(_4)), ReturnTo(bb11), UnwindUnreachable())
}
bb39 = {
_12 = '\u{c859d}';
_20.0.1 = !(-25_i8);
_11 = (-16637_i16);
(*_4) = _20.0.1 as i32;
(*_4) = !_17;
_15 = _12;
_20.1.fld5 = _20.1.fld6 as f32;
(*_4) = (-9223372036854775808_isize) as i32;
_7 = Adt23::Variant0 { fld0: _20.1.fld0,fld1: _12,fld2: 29_isize,fld3: _20.0.1,fld4: _19,fld5: Field::<u16>(Variant(_20.1.fld2, 1), 0) };
_15 = _12;
(*_4) = !_17;
_18 = _12;
_14 = &mut place!(Field::<i8>(Variant(_7, 0), 3));
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 33457_u16 & 12934_u16;
(*_4) = -_17;
(*_4) = -_17;
(*_14) = _20.0.1 ^ _20.0.1;
_20.0.1 = (*_14);
match _11 {
0 => bb4,
340282366920938463463374607431768194819 => bb9,
_ => bb2
}
}
bb40 = {
Return()
}
bb41 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb42 = {
_4 = core::ptr::addr_of_mut!((*_28));
_29 = _47 - _33;
_56.0 = (-43271517438216029785523978158099060209_i128);
(*_4) = -_17;
(*_28) = -_27;
_50 = _59 >> _59;
_55 = _29;
_17 = _26 as i32;
_61 = _18;
(*_28) = _27;
_44 = _29;
(*_28) = _3 as i32;
_12 = _15;
_15 = _39;
_57 = _19 - Field::<usize>(Variant(_36, 0), 0);
_25 = [24_i8,(-84_i8),(-19_i8),89_i8,58_i8];
(*_28) = -_17;
_28 = core::ptr::addr_of_mut!((*_28));
_29 = _59;
(*_28) = !_17;
(*_28) = _27 ^ _17;
_40 = 42935_u16 >> (*_28);
_45 = (-42_i8) as f64;
match _11 {
0 => bb21,
1 => bb24,
2 => bb25,
32337 => bb27,
_ => bb26
}
}
bb43 = {
_36 = Adt48::Variant0 { fld0: _16 };
_15 = _12;
(*_9) = (-122_i8) >> _6;
_12 = _15;
_6 = _16 as i32;
_17 = _27;
place!(Field::<usize>(Variant(_36, 0), 0)) = _16;
_28 = core::ptr::addr_of_mut!(_6);
(*_9) = 7_i8;
_14 = &mut (*_9);
_2 = core::ptr::addr_of!(_9);
Goto(bb19)
}
bb44 = {
_41 = (*_28) != (*_28);
_73 = &_62;
(*_28) = !_17;
_45 = (*_73);
_45 = -(*_73);
_50 = _65 & _55;
_19 = !Field::<usize>(Variant(_36, 0), 0);
_72.1.fld0 = (*_73) < (*_73);
_15 = _46;
(*_28) = _17 << _65;
_18 = _12;
(*_28) = _17 * _17;
_50 = _55 ^ _65;
_15 = _18;
_62 = _45;
_70.0 = !_19;
_8 = [242_u8,30_u8,168_u8,31_u8,200_u8];
_81 = _55 << (*_28);
_77 = _47;
(*_28) = !_17;
_12 = _18;
Goto(bb45)
}
bb45 = {
(*_28) = _68 as i32;
_63 = _54;
(*_28) = _17 << _17;
_76 = _40 as u32;
_73 = &_45;
_77 = _50;
_70.0 = Field::<usize>(Variant(_36, 0), 0) | _57;
_39 = _68;
_76 = _37 + _37;
_44 = _81 * _65;
_82 = core::ptr::addr_of!(_63);
(*_28) = _17 | _17;
(*_28) = _17;
_31 = [83_u8,131_u8,176_u8,45_u8,151_u8,219_u8];
_25 = [(-126_i8),(-53_i8),(-13_i8),(-40_i8),(-70_i8)];
_72.1.fld3 = (_56.0,);
_72.1.fld1 = _26;
_78 = _68;
(*_28) = !_17;
_72.0.2 = _19 << (*_28);
_3 = !_58;
_77 = _55 << _44;
Goto(bb46)
}
bb46 = {
_56 = (_67,);
(*_82) = [_72.1.fld1,_72.1.fld1];
(*_28) = _17 | _17;
(*_28) = _17 + _17;
place!(Field::<usize>(Variant(_36, 0), 0)) = _72.0.2 >> _65;
_86 = _22 ^ _65;
(*_82) = [_64,_64];
_4 = Move(_28);
_72.1.fld1 = _40 as u128;
Goto(bb47)
}
bb47 = {
_37 = _76 + _76;
_72.1.fld6 = (*_73) * (*_73);
_88 = -61_i8;
_81 = _44;
(*_2) = &mut _88;
(*_9) = 47_i8;
_50 = -_77;
_58 = !_3;
(*_9) = 64_i8;
_57 = _40 as usize;
_28 = Move(_4);
(*_82) = _54;
_17 = _6 * _6;
(*_9) = _72.1.fld3.0 as i8;
(*_82) = [_72.1.fld1,_72.1.fld1];
_4 = core::ptr::addr_of_mut!(_17);
_73 = &_72.1.fld6;
(*_9) = (-12_i8) + 98_i8;
(*_9) = (-36_i8);
_76 = !_37;
(*_9) = 65_i8;
Goto(bb48)
}
bb48 = {
_91 = core::ptr::addr_of_mut!((*_4));
(*_82) = [_72.1.fld1,_26];
place!(Field::<usize>(Variant(_36, 0), 0)) = _72.0.2;
_21 = core::ptr::addr_of_mut!(_83);
_16 = Field::<usize>(Variant(_36, 0), 0) + _72.0.2;
_63 = [_72.1.fld1,_64];
(*_4) = _6 | _6;
(*_9) = 104_i8;
match (*_9) {
0 => bb39,
104 => bb50,
_ => bb49
}
}
bb49 = {
_4 = core::ptr::addr_of_mut!((*_28));
_29 = _47 - _33;
_56.0 = (-43271517438216029785523978158099060209_i128);
(*_4) = -_17;
(*_28) = -_27;
_50 = _59 >> _59;
_55 = _29;
_17 = _26 as i32;
_61 = _18;
(*_28) = _27;
_44 = _29;
(*_28) = _3 as i32;
_12 = _15;
_15 = _39;
_57 = _19 - Field::<usize>(Variant(_36, 0), 0);
_25 = [24_i8,(-84_i8),(-19_i8),89_i8,58_i8];
(*_28) = -_17;
_28 = core::ptr::addr_of_mut!((*_28));
_29 = _59;
(*_28) = !_17;
(*_28) = _27 ^ _17;
_40 = 42935_u16 >> (*_28);
_45 = (-42_i8) as f64;
match _11 {
0 => bb21,
1 => bb24,
2 => bb25,
32337 => bb27,
_ => bb26
}
}
bb50 = {
_44 = !_33;
_61 = _78;
_14 = &mut (*_9);
(*_21) = -_11;
_33 = -_50;
_50 = _47 | _86;
_72.1.fld2 = Adt23::Variant1 { fld0: _40,fld1: _76,fld2: _58 };
_25 = [(*_14),(*_14),(*_14),(*_14),(*_14)];
(*_4) = 110_u8 as i32;
_22 = 201_u8 as isize;
(*_82) = [_72.1.fld1,_64];
(*_4) = -_27;
(*_4) = _6;
match (*_14) {
0 => bb10,
1 => bb47,
104 => bb51,
_ => bb43
}
}
bb51 = {
_80 = 233_u8 << (*_4);
_41 = !_72.1.fld0;
(*_82) = [_72.1.fld1,_72.1.fld1];
_72.0.2 = !_16;
(*_2) = Move(_14);
_6 = -(*_4);
_73 = &_45;
_72.0.1 = (-56_i8) & (-49_i8);
_39 = _60;
_72.0.1 = (-75_i8);
_62 = (*_73) + (*_73);
(*_21) = !_11;
_62 = -(*_73);
_26 = _72.1.fld1 - _72.1.fld1;
_11 = (*_21) << _47;
_25 = [_72.0.1,_72.0.1,_72.0.1,_72.0.1,_72.0.1];
_33 = _72.1.fld0 as isize;
_51 = _18;
place!(Field::<u32>(Variant(_72.1.fld2, 1), 1)) = _76;
(*_2) = &mut _72.0.1;
(*_21) = _80 as i16;
(*_4) = _6;
(*_21) = _11;
Goto(bb52)
}
bb52 = {
_77 = _50;
_100 = _6;
_44 = -_50;
_80 = (*_73) as u8;
(*_9) = !12_i8;
_46 = _18;
(*_21) = _11;
(*_21) = _11 & _11;
(*_4) = _6 & _6;
_93 = _15;
(*_9) = !99_i8;
match _56.0 {
0 => bb13,
1 => bb53,
2 => bb54,
3 => bb55,
297010849482722433677850629273669151247 => bb57,
_ => bb56
}
}
bb53 = {
(*_14) = _26 as i8;
_11 = (-26815_i16) << (*_14);
(*_14) = _20.1.fld3.0 as i8;
(*_14) = 130_u8 as i8;
_30 = [_15,_15];
_11 = (-10524_i16) + 11200_i16;
_12 = _18;
_22 = _29;
_29 = _33 >> _16;
_2 = core::ptr::addr_of!(_14);
(*_14) = _29 as i8;
_2 = core::ptr::addr_of!((*_2));
_4 = core::ptr::addr_of_mut!(_6);
(*_4) = -_27;
_2 = core::ptr::addr_of!((*_2));
(*_4) = _17;
(*_14) = _20.0.1 - _20.0.1;
(*_14) = _20.0.1 * _20.0.1;
(*_4) = _20.1.fld0 as i32;
(*_4) = _27 << (*_14);
(*_14) = !_20.0.1;
_3 = Field::<u64>(Variant(_20.1.fld2, 1), 2) << (*_4);
(*_14) = _18 as i8;
(*_14) = _20.1.fld6 as i8;
_16 = Field::<u16>(Variant(_20.1.fld2, 1), 0) as usize;
Call(place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = fn2(Move((*_2)), Move(_2), Move(_4)), ReturnTo(bb11), UnwindUnreachable())
}
bb54 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb55 = {
_36 = Adt48::Variant0 { fld0: _16 };
_15 = _12;
(*_9) = (-122_i8) >> _6;
_12 = _15;
_6 = _16 as i32;
_17 = _27;
place!(Field::<usize>(Variant(_36, 0), 0)) = _16;
_28 = core::ptr::addr_of_mut!(_6);
(*_9) = 7_i8;
_14 = &mut (*_9);
_2 = core::ptr::addr_of!(_9);
Goto(bb19)
}
bb56 = {
(*_14) = _20.0.1 | _20.0.1;
_28 = Move(_4);
_20.1.fld5 = _17 as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = !50177_u16;
_10 = [Field::<u16>(Variant(_20.1.fld2, 1), 0),Field::<u16>(Variant(_20.1.fld2, 1), 0)];
_25 = [(*_14),_20.0.1,(*_14),(*_14),(*_14)];
_18 = _15;
_20.1.fld3 = (150375476923003627432806644344748635448_i128,);
_27 = _6;
_29 = (-9223372036854775808_isize);
_26 = 49745829895452391908995274785128164650_u128 << (*_14);
_33 = _29 ^ _29;
(*_14) = -_20.0.1;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 29853_u16;
Goto(bb10)
}
bb57 = {
(*_82) = [_26,_26];
_8 = [_80,_80,_80,_80,_80];
_56.0 = _80 as i128;
_19 = _16 - _16;
_45 = _62 * _62;
match _67 {
0 => bb15,
1 => bb31,
297010849482722433677850629273669151247 => bb58,
_ => bb29
}
}
bb58 = {
(*_4) = _24 as i32;
(*_82) = _54;
_8 = [_80,_80,_80,_80,_80];
_90 = &_45;
(*_9) = 68_i8 * (-92_i8);
_44 = _80 as isize;
_15 = _46;
_31 = [_80,_80,_80,_80,_80,_80];
_60 = _18;
(*_4) = _100;
(*_9) = (-126_i8);
_1 = &mut (*_9);
(*_4) = _6 ^ _100;
(*_82) = [_26,_26];
_78 = _51;
(*_4) = _6 >> (*_21);
_36 = Adt48::Variant2 { fld0: _24,fld1: (*_1) };
_101 = (*_1) ^ (*_1);
_104 = _83 as isize;
_90 = &_62;
_94 = [_16,_16,_19,_16,_16];
Goto(bb59)
}
bb59 = {
(*_21) = _41 as i16;
_76 = !_37;
_103 = _64 as f32;
_96 = (*_90) + _45;
_99 = _19 >= _19;
_61 = _68;
_64 = _26 ^ _26;
(*_1) = (*_90) as i8;
_64 = _26;
_108 = (-8128735944389339022_i64);
(*_82) = [_64,_64];
(*_4) = _40 as i32;
(*_2) = &mut place!(Field::<i8>(Variant(_36, 2), 1));
Goto(bb60)
}
bb60 = {
(*_2) = &mut (*_1);
(*_82) = [_64,_26];
_6 = _100;
_84 = _103 - _103;
(*_82) = [_26,_64];
Call(_83 = core::intrinsics::transmute(_11), ReturnTo(bb61), UnwindUnreachable())
}
bb61 = {
(*_21) = _11 >> _3;
_107 = _108 as f32;
(*_21) = _16 as i16;
_70.2 = &(*_90);
(*_9) = _101 * _101;
(*_21) = _11 << _55;
_94 = [_16,_16,_16,_16,_19];
(*_21) = (*_4) as i16;
_82 = core::ptr::addr_of!((*_82));
_26 = _40 as u128;
Goto(bb62)
}
bb62 = {
_27 = _6;
(*_9) = !_101;
_94 = [_19,_16,_16,_16,_19];
_28 = core::ptr::addr_of_mut!((*_4));
_6 = (*_9) as i32;
(*_9) = _101;
(*_9) = _76 as i8;
(*_9) = _101 & _101;
_41 = _27 == _100;
_98 = _56.0;
_74 = _76 as u64;
_15 = _61;
_118 = _11 | _11;
_115.fld1 = !_64;
(*_9) = _101 >> _81;
_62 = -_96;
(*_2) = &mut _101;
_18 = _78;
(*_82) = [_64,_64];
match _108 {
0 => bb63,
340282366920938463455245871487378872434 => bb65,
_ => bb64
}
}
bb63 = {
_4 = core::ptr::addr_of_mut!((*_28));
_29 = _47 - _33;
_56.0 = (-43271517438216029785523978158099060209_i128);
(*_4) = -_17;
(*_28) = -_27;
_50 = _59 >> _59;
_55 = _29;
_17 = _26 as i32;
_61 = _18;
(*_28) = _27;
_44 = _29;
(*_28) = _3 as i32;
_12 = _15;
_15 = _39;
_57 = _19 - Field::<usize>(Variant(_36, 0), 0);
_25 = [24_i8,(-84_i8),(-19_i8),89_i8,58_i8];
(*_28) = -_17;
_28 = core::ptr::addr_of_mut!((*_28));
_29 = _59;
(*_28) = !_17;
(*_28) = _27 ^ _17;
_40 = 42935_u16 >> (*_28);
_45 = (-42_i8) as f64;
match _11 {
0 => bb21,
1 => bb24,
2 => bb25,
32337 => bb27,
_ => bb26
}
}
bb64 = {
Return()
}
bb65 = {
(*_4) = !_27;
(*_21) = !_11;
_90 = &_45;
(*_82) = [_64,_115.fld1];
_15 = _39;
_118 = (*_21);
(*_2) = Move(_1);
(*_21) = _118 * _11;
_12 = _51;
_95 = !_76;
_108 = (-6512777401322774971_i64);
_82 = core::ptr::addr_of!((*_82));
_22 = _104 + _50;
_31 = [_80,_80,_80,_80,_80,_80];
(*_21) = !_118;
_117 = (*_90) * (*_90);
match _108 {
0 => bb35,
1 => bb36,
2 => bb52,
3 => bb60,
340282366920938463456861830030445436485 => bb67,
_ => bb66
}
}
bb66 = {
_36 = Adt48::Variant0 { fld0: _16 };
_15 = _12;
(*_9) = (-122_i8) >> _6;
_12 = _15;
_6 = _16 as i32;
_17 = _27;
place!(Field::<usize>(Variant(_36, 0), 0)) = _16;
_28 = core::ptr::addr_of_mut!(_6);
(*_9) = 7_i8;
_14 = &mut (*_9);
_2 = core::ptr::addr_of!(_9);
Goto(bb19)
}
bb67 = {
_22 = _86 * _33;
_39 = _18;
_21 = core::ptr::addr_of_mut!((*_21));
_92 = _98 ^ _56.0;
_32 = core::ptr::addr_of!(_126.0.1);
_116 = _99;
_110 = [_58];
_93 = _39;
match _108 {
0 => bb36,
1 => bb2,
2 => bb68,
340282366920938463456861830030445436485 => bb70,
_ => bb69
}
}
bb68 = {
(*_14) = _26 as i8;
_11 = (-26815_i16) << (*_14);
(*_14) = _20.1.fld3.0 as i8;
(*_14) = 130_u8 as i8;
_30 = [_15,_15];
_11 = (-10524_i16) + 11200_i16;
_12 = _18;
_22 = _29;
_29 = _33 >> _16;
_2 = core::ptr::addr_of!(_14);
(*_14) = _29 as i8;
_2 = core::ptr::addr_of!((*_2));
_4 = core::ptr::addr_of_mut!(_6);
(*_4) = -_27;
_2 = core::ptr::addr_of!((*_2));
(*_4) = _17;
(*_14) = _20.0.1 - _20.0.1;
(*_14) = _20.0.1 * _20.0.1;
(*_4) = _20.1.fld0 as i32;
(*_4) = _27 << (*_14);
(*_14) = !_20.0.1;
_3 = Field::<u64>(Variant(_20.1.fld2, 1), 2) << (*_4);
(*_14) = _18 as i8;
(*_14) = _20.1.fld6 as i8;
_16 = Field::<u16>(Variant(_20.1.fld2, 1), 0) as usize;
Call(place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = fn2(Move((*_2)), Move(_2), Move(_4)), ReturnTo(bb11), UnwindUnreachable())
}
bb69 = {
(*_4) = !_27;
(*_21) = !_11;
_90 = &_45;
(*_82) = [_64,_115.fld1];
_15 = _39;
_118 = (*_21);
(*_2) = Move(_1);
(*_21) = _118 * _11;
_12 = _51;
_95 = !_76;
_108 = (-6512777401322774971_i64);
_82 = core::ptr::addr_of!((*_82));
_22 = _104 + _50;
_31 = [_80,_80,_80,_80,_80,_80];
(*_21) = !_118;
_117 = (*_90) * (*_90);
match _108 {
0 => bb35,
1 => bb36,
2 => bb52,
3 => bb60,
340282366920938463456861830030445436485 => bb67,
_ => bb66
}
}
bb70 = {
(*_21) = _77 as i16;
(*_4) = _27 & _27;
Goto(bb71)
}
bb71 = {
(*_4) = _27;
_90 = &_96;
_56 = (_92,);
_119 = _93;
_115.fld6 = _22 as f64;
_12 = _93;
_66 = (-53_i8) as i32;
_56.0 = _92 | _98;
(*_4) = -_100;
(*_21) = _11 & _11;
_126.0.0 = Move(_28);
_126.1 = Adt48::Variant2 { fld0: _24,fld1: (-51_i8) };
_80 = !228_u8;
_92 = _56.0;
_56.0 = _92;
(*_21) = _118;
(*_4) = _27;
(*_82) = [_64,_115.fld1];
(*_21) = _11 & _118;
(*_4) = -_27;
_124 = _56.0 - _92;
_83 = 24_i8 as i16;
(*_21) = _118 >> (*_4);
_29 = _50 | _55;
_115.fld2 = Adt23::Variant0 { fld0: _116,fld1: _60,fld2: _50,fld3: 87_i8,fld4: _57,fld5: _40 };
_94 = [_16,_19,_16,_19,_70.0];
_58 = _3 * _3;
match _67 {
0 => bb8,
297010849482722433677850629273669151247 => bb73,
_ => bb72
}
}
bb72 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb73 = {
_103 = Field::<f32>(Variant(_126.1, 2), 0) + Field::<f32>(Variant(_126.1, 2), 0);
_115.fld2 = Adt23::Variant0 { fld0: _41,fld1: _46,fld2: _55,fld3: (-16_i8),fld4: _16,fld5: _40 };
_129 = _15;
_129 = Field::<char>(Variant(_115.fld2, 0), 1);
(*_4) = _27 ^ _100;
_103 = (-20_i8) as f32;
_3 = _58 - _58;
_73 = &(*_90);
_85 = _51;
_115.fld0 = _116;
_115.fld3 = (_98,);
(*_82) = [_64,_115.fld1];
_39 = _46;
(*_4) = !_27;
_62 = _96;
_104 = _55 + Field::<isize>(Variant(_115.fld2, 0), 2);
(*_4) = _100 + _100;
_122 = _95 as u8;
_106 = -(*_90);
_26 = _98 as u128;
_82 = core::ptr::addr_of!(_63);
_57 = _16;
Goto(bb74)
}
bb74 = {
(*_4) = _100;
(*_21) = _118 >> _57;
_130 = [_122,_122];
(*_4) = _100 + _100;
_93 = _61;
match _67 {
0 => bb14,
1 => bb24,
2 => bb75,
3 => bb76,
4 => bb77,
297010849482722433677850629273669151247 => bb79,
_ => bb78
}
}
bb75 = {
_7 = Adt23::Variant1 { fld0: 52538_u16,fld1: 2336555033_u32,fld2: _3 };
(*_4) = _17 ^ _17;
place!(Field::<u64>(Variant(_7, 1), 2)) = _3;
(*_4) = 472512486_u32 as i32;
_20.1.fld2 = Adt23::Variant1 { fld0: 9001_u16,fld1: 2963564429_u32,fld2: Field::<u64>(Variant(_7, 1), 2) };
_20.1.fld6 = _19 as f64;
_16 = _19 >> _11;
_7 = Adt23::Variant1 { fld0: 54149_u16,fld1: 2333360393_u32,fld2: _3 };
_20.1.fld5 = 9223372036854775807_isize as f32;
place!(Field::<u16>(Variant(_20.1.fld2, 1), 0)) = 2109_u16 >> _6;
(*_4) = _17 ^ _17;
_20.1.fld3 = (154141045514961745639517548113431145149_i128,);
_20.1.fld0 = (*_4) >= (*_4);
_20.1.fld3.0 = (-167432196148980532891022023758348828376_i128) + 168563706134717933352294950385556045415_i128;
match _11 {
0 => bb1,
1 => bb3,
2 => bb4,
340282366920938463463374607431768190168 => bb6,
_ => bb5
}
}
bb76 = {
_9 = &mut _20.0.1;
(*_9) = 17_i8 * 83_i8;
(*_9) = (-96_i8);
(*_9) = (-82_i8) << _26;
_11 = 32337_i16;
_29 = _33 & _33;
(*_9) = (-20_i8) - (-100_i8);
_30 = [_12,_18];
_44 = _22;
match _22 {
0 => bb12,
1 => bb13,
2 => bb14,
3 => bb15,
4 => bb16,
340282366920938463454151235394913435648 => bb18,
_ => bb17
}
}
bb77 = {
_3 = 13363271048369681152_u64 << (*_4);
_10 = [Field::<u16>(Variant(_7, 0), 5),Field::<u16>(Variant(_7, 0), 5)];
_7 = Adt23::Variant1 { fld0: 28189_u16,fld1: 228985744_u32,fld2: _3 };
_7 = Adt23::Variant1 { fld0: 37903_u16,fld1: 3953128921_u32,fld2: _3 };
(*_4) = !(-314339883_i32);
_12 = '\u{78791}';
place!(Field::<u16>(Variant(_7, 1), 0)) = 51266_u16;
place!(Field::<u32>(Variant(_7, 1), 1)) = 3265449152_u32;
_10 = [Field::<u16>(Variant(_7, 1), 0),Field::<u16>(Variant(_7, 1), 0)];
(*_4) = !954809121_i32;
_8 = [30_u8,197_u8,54_u8,193_u8,211_u8];
_11 = -(-6253_i16);
(*_4) = !(-443759391_i32);
_17 = (-21_i8) as i32;
(*_4) = _17 | _17;
(*_4) = _12 as i32;
(*_4) = Field::<u16>(Variant(_7, 1), 0) as i32;
_11 = (-21288_i16);
_19 = 9223372036854775807_isize as usize;
(*_4) = _17 >> Field::<u64>(Variant(_7, 1), 2);
(*_4) = _17 & _17;
Goto(bb2)
}
bb78 = {
_12 = '\u{8ff08}';
place!(Field::<u16>(Variant(_7, 1), 0)) = Field::<u16>(Variant(_20.1.fld2, 1), 0);
place!(Field::<u32>(Variant(_20.1.fld2, 1), 1)) = _3 as u32;
_6 = (-68_i8) as i32;
_17 = (*_4) & (*_4);
Goto(bb7)
}
bb79 = {
(*_82) = _54;
(*_82) = [_26,_115.fld1];
(*_82) = [_115.fld1,_26];
_65 = _22 >> _83;
place!(Field::<i8>(Variant(_126.1, 2), 1)) = !109_i8;
_129 = _46;
_67 = _98;
(*_82) = [_26,_26];
(*_21) = _11;
(*_21) = _118 ^ _11;
_59 = _22 ^ _33;
_47 = _59 ^ _77;
_51 = _129;
_136 = !_104;
match _108 {
0 => bb8,
1 => bb9,
2 => bb33,
340282366920938463456861830030445436485 => bb80,
_ => bb34
}
}
bb80 = {
_65 = !_47;
_126.1 = Adt48::Variant0 { fld0: Field::<usize>(Variant(_115.fld2, 0), 4) };
_126.1 = Adt48::Variant2 { fld0: _24,fld1: 83_i8 };
_56 = _115.fld3;
_115.fld6 = Field::<usize>(Variant(_115.fld2, 0), 4) as f64;
_57 = _19;
_123 = _46;
_136 = _77 + _47;
(*_21) = _11;
_131 = (*_90) * (*_73);
_63 = [_26,_64];
_86 = _104 >> (*_21);
Goto(bb81)
}
bb81 = {
_107 = _58 as f32;
_122 = _80;
_128 = [_80,_80,_80,_80,_80,_80];
place!(Field::<f32>(Variant(_126.1, 2), 0)) = _107 - _107;
_146 = _131 <= (*_90);
(*_82) = [_26,_26];
_79 = _61;
_113 = core::ptr::addr_of_mut!(_143);
_58 = (-90_i8) as u64;
_112 = _123;
place!(Field::<i8>(Variant(_115.fld2, 0), 3)) = _108 as i8;
_96 = _115.fld6 * _131;
(*_2) = &mut place!(Field::<i8>(Variant(_115.fld2, 0), 3));
_14 = &mut (*_9);
_59 = !_81;
_81 = -_47;
_91 = Move(_4);
(*_21) = _11 & _11;
(*_113) = _108 as i32;
(*_21) = _118;
_57 = _16 & _16;
_148 = [(*_14),(*_14),(*_14),(*_14),(*_14)];
_150 = _65;
_142 = [_19,_19];
(*_21) = _11 | _118;
_79 = _78;
Goto(bb82)
}
bb82 = {
(*_14) = 77_i8 | 24_i8;
(*_82) = [_26,_26];
_131 = _117 + _106;
_56.0 = _59 as i128;
(*_21) = _11;
(*_21) = _118 >> _64;
(*_21) = (*_14) as i16;
_63 = [_26,_26];
_108 = 2974056564666128305_i64 | (-3732950228355246169_i64);
(*_14) = _104 as i8;
_9 = Move(_14);
(*_21) = !_11;
(*_82) = _54;
_79 = _123;
place!(Field::<i8>(Variant(_126.1, 2), 1)) = _27 as i8;
_59 = _77 & _81;
(*_21) = _47 as i16;
_86 = _81;
(*_113) = _17;
(*_113) = !_17;
_6 = !_17;
_156 = Adt18::Variant0 { fld0: _3,fld1: Field::<i8>(Variant(_126.1, 2), 1),fld2: _122 };
_81 = _45 as isize;
_140 = _16 as i128;
(*_113) = _6 * _100;
_114 = !_116;
Goto(bb83)
}
bb83 = {
_141 = core::ptr::addr_of!((*_32));
(*_82) = [_26,_26];
(*_21) = _11 + _11;
_59 = _44 | _65;
_39 = _51;
_121 = Move(_2);
_122 = Field::<u8>(Variant(_156, 0), 2);
_2 = Move(_121);
_50 = _104 - _77;
_117 = -_106;
(*_82) = _54;
_70.2 = &_117;
(*_82) = _54;
Goto(bb84)
}
bb84 = {
_56.0 = -_67;
(*_21) = _118;
RET = core::ptr::addr_of_mut!(_153);
_143 = _62 as i32;
Goto(bb85)
}
bb85 = {
Call(_164 = dump_var(1_usize, 60_usize, Move(_60), 19_usize, Move(_19), 63_usize, Move(_63), 129_usize, Move(_129)), ReturnTo(bb86), UnwindUnreachable())
}
bb86 = {
Call(_164 = dump_var(1_usize, 128_usize, Move(_128), 80_usize, Move(_80), 59_usize, Move(_59), 94_usize, Move(_94)), ReturnTo(bb87), UnwindUnreachable())
}
bb87 = {
Call(_164 = dump_var(1_usize, 143_usize, Move(_143), 93_usize, Move(_93), 33_usize, Move(_33), 116_usize, Move(_116)), ReturnTo(bb88), UnwindUnreachable())
}
bb88 = {
Call(_164 = dump_var(1_usize, 66_usize, Move(_66), 95_usize, Move(_95), 18_usize, Move(_18), 148_usize, Move(_148)), ReturnTo(bb89), UnwindUnreachable())
}
bb89 = {
Call(_164 = dump_var(1_usize, 130_usize, Move(_130), 114_usize, Move(_114), 81_usize, Move(_81), 46_usize, Move(_46)), ReturnTo(bb90), UnwindUnreachable())
}
bb90 = {
Call(_164 = dump_var(1_usize, 42_usize, Move(_42), 31_usize, Move(_31), 119_usize, Move(_119), 54_usize, Move(_54)), ReturnTo(bb91), UnwindUnreachable())
}
bb91 = {
Call(_164 = dump_var(1_usize, 12_usize, Move(_12), 57_usize, Move(_57), 17_usize, Move(_17), 29_usize, Move(_29)), ReturnTo(bb92), UnwindUnreachable())
}
bb92 = {
Call(_164 = dump_var(1_usize, 41_usize, Move(_41), 150_usize, Move(_150), 58_usize, Move(_58), 11_usize, Move(_11)), ReturnTo(bb93), UnwindUnreachable())
}
bb93 = {
Call(_164 = dump_var(1_usize, 37_usize, Move(_37), 123_usize, Move(_123), 22_usize, Move(_22), 99_usize, Move(_99)), ReturnTo(bb94), UnwindUnreachable())
}
bb94 = {
Call(_164 = dump_var(1_usize, 86_usize, Move(_86), 44_usize, Move(_44), 100_usize, Move(_100), 30_usize, Move(_30)), ReturnTo(bb95), UnwindUnreachable())
}
bb95 = {
Call(_164 = dump_var(1_usize, 15_usize, Move(_15), 142_usize, Move(_142), 165_usize, _165, 165_usize, _165), ReturnTo(bb96), UnwindUnreachable())
}
bb96 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn2(mut _1: &'static mut i8,mut _2: *const &'static mut i8,mut _3: *mut i32) -> u32 {
mir! {
type RET = u32;
let _4: f32;
let _5: Adt23;
let _6: u32;
let _7: *mut [bool; 4];
let _8: bool;
let _9: u8;
let _10: char;
let _11: u8;
let _12: isize;
let _13: Adt57;
let _14: u8;
let _15: u64;
let _16: &'static mut i8;
let _17: [isize; 8];
let _18: &'static mut *mut *mut i32;
let _19: *const [i128; 4];
let _20: [i16; 2];
let _21: *const [usize; 2];
let _22: i64;
let _23: [i8; 5];
let _24: Adt51;
let _25: i64;
let _26: (&'static mut *mut [u64; 1], u128);
let _27: &'static mut &'static mut i8;
let _28: f32;
let _29: ([bool; 4], (i32, f32, Adt18, Adt18));
let _30: &'static mut *mut [u64; 1];
let _31: f32;
let _32: &'static *mut [i16; 2];
let _33: (Adt23,);
let _34: i128;
let _35: &'static f64;
let _36: &'static f64;
let _37: (Adt31, i32);
let _38: i128;
let _39: ((i32, f32, Adt18, Adt18),);
let _40: usize;
let _41: i128;
let _42: (Adt23,);
let _43: &'static [i128; 4];
let _44: *mut &'static mut (i32, f32, Adt18, Adt18);
let _45: i128;
let _46: u32;
let _47: isize;
let _48: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _49: bool;
let _50: *const [usize; 2];
let _51: *const &'static mut i8;
let _52: *const *mut [i16; 2];
let _53: &'static mut [char; 2];
let _54: char;
let _55: &'static mut (i32, f32, Adt18, Adt18);
let _56: [usize; 5];
let _57: i128;
let _58: ((*const *mut [i16; 2], i8, usize), Adt31);
let _59: u8;
let _60: *mut &'static *mut [bool; 4];
let _61: &'static [i128; 4];
let _62: u16;
let _63: *mut [i16; 2];
let _64: f32;
let _65: u16;
let _66: char;
let _67: char;
let _68: ();
let _69: ();
{
RET = 2918715925848142567_i64 as u32;
RET = 2494986586_u32 << 62_i8;
RET = 1599951497_u32 >> (-128487881246562755932345178849921395981_i128);
RET = 2671026136_u32 >> 52_i8;
RET = !1846753106_u32;
RET = 2997871023_u32 + 563204784_u32;
_4 = (-9223372036854775808_isize) as f32;
_4 = 9223372036854775807_isize as f32;
RET = 1724327153_u32;
RET = 1117444566_u32;
_4 = 45027658898570600792052589842283987431_u128 as f32;
_4 = (-88005984771193775651994249903377736061_i128) as f32;
match RET {
0 => bb1,
1 => bb2,
2 => bb3,
1117444566 => bb5,
_ => bb4
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb6 = {
place!(Field::<i8>(Variant(_5, 0), 3)) = (-64_i8);
_4 = Field::<usize>(Variant(_5, 0), 4) as f32;
place!(Field::<usize>(Variant(_5, 0), 4)) = !7_usize;
_8 = !Field::<bool>(Variant(_5, 0), 0);
place!(Field::<isize>(Variant(_5, 0), 2)) = (-9223372036854775808_isize);
place!(Field::<usize>(Variant(_5, 0), 4)) = 7381107528200974219_usize >> Field::<u16>(Variant(_5, 0), 5);
_1 = &mut place!(Field::<i8>(Variant(_5, 0), 3));
(*_1) = 47_i8 + (-62_i8);
_6 = !RET;
(*_1) = (-109_i8) | (-103_i8);
(*_1) = 124_isize as i8;
_2 = core::ptr::addr_of!(_1);
_4 = 9810_i16 as f32;
(*_1) = _4 as i8;
(*_1) = (-34_i8) << _6;
(*_1) = 106_i8 << _6;
_11 = 11_u8;
(*_1) = 83_i8 + 103_i8;
Goto(bb7)
}
bb7 = {
_11 = 134_u8 << (*_1);
(*_1) = (-104_i8) << RET;
(*_1) = (-44_i8) * (-30_i8);
(*_1) = (-65_i8) * 75_i8;
_10 = '\u{52834}';
(*_1) = 5_i8 << _11;
_11 = 34_u8 - 60_u8;
_10 = '\u{fbcba}';
(*_1) = (-76_i8);
(*_1) = 1983306442_i32 as i8;
(*_1) = (-79_i8) & 67_i8;
_8 = (*_1) > (*_1);
_6 = 129722224472216898973868079424897084201_u128 as u32;
_8 = (*_1) > (*_1);
(*_1) = 72214191385955070201055008051686569480_i128 as i8;
_10 = '\u{4316c}';
(*_1) = 120_i8;
(*_1) = 110_i8 + (-97_i8);
_12 = (-25_isize) ^ 9223372036854775807_isize;
(*_1) = (-71_i8) ^ (-3_i8);
(*_1) = 60_i8 ^ (-95_i8);
(*_1) = -77_i8;
(*_1) = (-7_i8) * 114_i8;
_11 = !133_u8;
(*_1) = (-51_i8) * (-40_i8);
_9 = _11;
(*_1) = 0_i8;
match (*_1) {
1 => bb2,
2 => bb3,
3 => bb4,
0 => bb8,
_ => bb5
}
}
bb8 = {
(*_1) = (-42_i8) - (-59_i8);
(*_1) = !(-117_i8);
(*_1) = -(-124_i8);
(*_1) = (-52_i8) & (-94_i8);
(*_1) = 16_i8;
(*_1) = 43_i8 >> _6;
_10 = '\u{c750c}';
_11 = _9;
_14 = _9 - _11;
_6 = _4 as u32;
_6 = RET - RET;
_11 = _14 - _14;
(*_1) = RET as i8;
(*_1) = (-6_i8) * 24_i8;
(*_1) = (-8_i8) << _11;
Goto(bb9)
}
bb9 = {
(*_1) = -89_i8;
_15 = 1337077611947268015_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = (-9_i8);
(*_1) = (-13_i8);
_10 = '\u{54995}';
(*_1) = (-32_i8) + 23_i8;
(*_1) = (-105_i8);
_16 = &mut (*_1);
_8 = false | false;
(*_2) = Move(_16);
Goto(bb10)
}
bb10 = {
_14 = _11 >> _11;
_11 = !_14;
_10 = '\u{d60a3}';
_14 = _9 + _11;
RET = _6 >> _14;
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_11 = !_14;
_9 = !_11;
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
RET = _15 as u32;
_10 = '\u{1b834}';
_11 = _9;
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_4 = 16306646370495773985_usize as f32;
_20 = [(-14159_i16),(-8542_i16)];
RET = _6;
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_10 = '\u{7df79}';
match _15 {
0 => bb11,
1 => bb12,
2 => bb13,
3 => bb14,
1337077611947268015 => bb16,
_ => bb15
}
}
bb11 = {
Return()
}
bb12 = {
(*_1) = (-42_i8) - (-59_i8);
(*_1) = !(-117_i8);
(*_1) = -(-124_i8);
(*_1) = (-52_i8) & (-94_i8);
(*_1) = 16_i8;
(*_1) = 43_i8 >> _6;
_10 = '\u{c750c}';
_11 = _9;
_14 = _9 - _11;
_6 = _4 as u32;
_6 = RET - RET;
_11 = _14 - _14;
(*_1) = RET as i8;
(*_1) = (-6_i8) * 24_i8;
(*_1) = (-8_i8) << _11;
Goto(bb9)
}
bb13 = {
Return()
}
bb14 = {
place!(Field::<i8>(Variant(_5, 0), 3)) = (-64_i8);
_4 = Field::<usize>(Variant(_5, 0), 4) as f32;
place!(Field::<usize>(Variant(_5, 0), 4)) = !7_usize;
_8 = !Field::<bool>(Variant(_5, 0), 0);
place!(Field::<isize>(Variant(_5, 0), 2)) = (-9223372036854775808_isize);
place!(Field::<usize>(Variant(_5, 0), 4)) = 7381107528200974219_usize >> Field::<u16>(Variant(_5, 0), 5);
_1 = &mut place!(Field::<i8>(Variant(_5, 0), 3));
(*_1) = 47_i8 + (-62_i8);
_6 = !RET;
(*_1) = (-109_i8) | (-103_i8);
(*_1) = 124_isize as i8;
_2 = core::ptr::addr_of!(_1);
_4 = 9810_i16 as f32;
(*_1) = _4 as i8;
(*_1) = (-34_i8) << _6;
(*_1) = 106_i8 << _6;
_11 = 11_u8;
(*_1) = 83_i8 + 103_i8;
Goto(bb7)
}
bb15 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb16 = {
_10 = '\u{9b7b4}';
_11 = !_14;
_8 = !true;
_20 = [1181_i16,(-15700_i16)];
_20 = [(-14289_i16),31663_i16];
_15 = 1659294743087843360_u64 + 7710302824145038270_u64;
_10 = '\u{a9e37}';
_11 = 66002478225009746169051916013437119837_u128 as u8;
_6 = !RET;
_22 = _8 as i64;
_9 = _14 - _14;
_22 = 4482587664469684954_i64;
_15 = 3193421452380930777_u64 & 4142452863499126755_u64;
_6 = _12 as u32;
_4 = 8166_i16 as f32;
_23 = [55_i8,4_i8,119_i8,(-15_i8),112_i8];
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_6 = RET << _9;
_23 = [121_i8,(-11_i8),107_i8,(-92_i8),(-94_i8)];
_10 = '\u{8e6d9}';
_10 = '\u{1c643}';
_20 = [(-31574_i16),(-9243_i16)];
_20 = [(-2193_i16),(-30711_i16)];
_4 = 1_usize as f32;
_14 = !_9;
match _22 {
0 => bb11,
1 => bb17,
2 => bb18,
4482587664469684954 => bb20,
_ => bb19
}
}
bb17 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb18 = {
(*_1) = -89_i8;
_15 = 1337077611947268015_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = (-9_i8);
(*_1) = (-13_i8);
_10 = '\u{54995}';
(*_1) = (-32_i8) + 23_i8;
(*_1) = (-105_i8);
_16 = &mut (*_1);
_8 = false | false;
(*_2) = Move(_16);
Goto(bb10)
}
bb19 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb20 = {
_8 = _14 == _9;
_26.1 = _8 as u128;
_4 = 222997915_i32 as f32;
_6 = RET + RET;
_4 = _9 as f32;
_10 = '\u{93d6}';
_25 = _22;
_8 = true;
RET = !_6;
_14 = _9 << _11;
_26.1 = _8 as u128;
_9 = _14 | _14;
_22 = _25 - _25;
_10 = '\u{cf3c2}';
_22 = _25 & _25;
match _25 {
0 => bb21,
1 => bb22,
2 => bb23,
4482587664469684954 => bb25,
_ => bb24
}
}
bb21 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb22 = {
Return()
}
bb23 = {
Return()
}
bb24 = {
_10 = '\u{9b7b4}';
_11 = !_14;
_8 = !true;
_20 = [1181_i16,(-15700_i16)];
_20 = [(-14289_i16),31663_i16];
_15 = 1659294743087843360_u64 + 7710302824145038270_u64;
_10 = '\u{a9e37}';
_11 = 66002478225009746169051916013437119837_u128 as u8;
_6 = !RET;
_22 = _8 as i64;
_9 = _14 - _14;
_22 = 4482587664469684954_i64;
_15 = 3193421452380930777_u64 & 4142452863499126755_u64;
_6 = _12 as u32;
_4 = 8166_i16 as f32;
_23 = [55_i8,4_i8,119_i8,(-15_i8),112_i8];
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_6 = RET << _9;
_23 = [121_i8,(-11_i8),107_i8,(-92_i8),(-94_i8)];
_10 = '\u{8e6d9}';
_10 = '\u{1c643}';
_20 = [(-31574_i16),(-9243_i16)];
_20 = [(-2193_i16),(-30711_i16)];
_4 = 1_usize as f32;
_14 = !_9;
match _22 {
0 => bb11,
1 => bb17,
2 => bb18,
4482587664469684954 => bb20,
_ => bb19
}
}
bb25 = {
_3 = core::ptr::addr_of_mut!(_29.1.0);
(*_3) = _4 as i32;
(*_3) = -1538136104_i32;
_7 = core::ptr::addr_of_mut!(_29.0);
(*_7) = [_8,_8,_8,_8];
_28 = _25 as f32;
match _25 {
0 => bb6,
1 => bb24,
2 => bb22,
3 => bb4,
4482587664469684954 => bb27,
_ => bb26
}
}
bb26 = {
(*_1) = -89_i8;
_15 = 1337077611947268015_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = (-9_i8);
(*_1) = (-13_i8);
_10 = '\u{54995}';
(*_1) = (-32_i8) + 23_i8;
(*_1) = (-105_i8);
_16 = &mut (*_1);
_8 = false | false;
(*_2) = Move(_16);
Goto(bb10)
}
bb27 = {
(*_7) = [_8,_8,_8,_8];
_4 = _28;
(*_3) = 73407061215611576388135304923300022654_i128 as i32;
_29.1.2 = Adt18::Variant1 { fld0: _15,fld1: 4_usize,fld2: _28,fld3: 43783_u16,fld4: _26.1,fld5: (*_3),fld6: (*_7) };
(*_7) = Field::<[bool; 4]>(Variant(_29.1.2, 1), 6);
(*_3) = -Field::<i32>(Variant(_29.1.2, 1), 5);
(*_7) = Field::<[bool; 4]>(Variant(_29.1.2, 1), 6);
(*_7) = [_8,_8,_8,_8];
(*_7) = [_8,_8,_8,_8];
(*_3) = Field::<i32>(Variant(_29.1.2, 1), 5) | Field::<i32>(Variant(_29.1.2, 1), 5);
(*_3) = Field::<i32>(Variant(_29.1.2, 1), 5) ^ Field::<i32>(Variant(_29.1.2, 1), 5);
(*_3) = _12 as i32;
(*_7) = Field::<[bool; 4]>(Variant(_29.1.2, 1), 6);
_7 = core::ptr::addr_of_mut!((*_7));
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_31 = _4 + Field::<f32>(Variant(_29.1.2, 1), 2);
Goto(bb28)
}
bb28 = {
(*_7) = [_8,_8,_8,_8];
_24 = Adt51::Variant3 { fld0: Field::<u128>(Variant(_29.1.2, 1), 4),fld1: Move(_3) };
_37.0.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_29.1.2, 1), 0),fld1: (-100_i8),fld2: _9 };
match _25 {
0 => bb29,
4482587664469684954 => bb31,
_ => bb30
}
}
bb29 = {
(*_1) = -89_i8;
_15 = 1337077611947268015_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = (-9_i8);
(*_1) = (-13_i8);
_10 = '\u{54995}';
(*_1) = (-32_i8) + 23_i8;
(*_1) = (-105_i8);
_16 = &mut (*_1);
_8 = false | false;
(*_2) = Move(_16);
Goto(bb10)
}
bb30 = {
(*_1) = (-42_i8) - (-59_i8);
(*_1) = !(-117_i8);
(*_1) = -(-124_i8);
(*_1) = (-52_i8) & (-94_i8);
(*_1) = 16_i8;
(*_1) = 43_i8 >> _6;
_10 = '\u{c750c}';
_11 = _9;
_14 = _9 - _11;
_6 = _4 as u32;
_6 = RET - RET;
_11 = _14 - _14;
(*_1) = RET as i8;
(*_1) = (-6_i8) * 24_i8;
(*_1) = (-8_i8) << _11;
Goto(bb9)
}
bb31 = {
place!(Field::<u16>(Variant(_29.1.2, 1), 3)) = 55401_u16 | 30634_u16;
(*_7) = Field::<[bool; 4]>(Variant(_29.1.2, 1), 6);
(*_7) = Field::<[bool; 4]>(Variant(_29.1.2, 1), 6);
_29.1.2 = Adt18::Variant0 { fld0: _15,fld1: 107_i8,fld2: _9 };
_29.1.0 = 1020966709_i32 >> Field::<u8>(Variant(_29.1.2, 0), 2);
_29.1.0 = 1_usize as i32;
_3 = Move(Field::<*mut i32>(Variant(_24, 3), 1));
(*_7) = [_8,_8,_8,_8];
_29.0 = [_8,_8,_8,_8];
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_37.0.fld0 = _8;
(*_7) = [_8,_37.0.fld0,_8,_37.0.fld0];
(*_7) = [_37.0.fld0,_8,_37.0.fld0,_8];
_9 = !Field::<u8>(Variant(_37.0.fld4, 0), 2);
_39.0.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_29.1.2, 0), 0),fld1: 23_i8,fld2: Field::<u8>(Variant(_29.1.2, 0), 2) };
(*_7) = [_37.0.fld0,_8,_8,_37.0.fld0];
_33.0 = Adt23::Variant0 { fld0: _37.0.fld0,fld1: _10,fld2: _12,fld3: (-24_i8),fld4: 7_usize,fld5: 23792_u16 };
Goto(bb32)
}
bb32 = {
place!(Field::<i8>(Variant(_39.0.2, 0), 1)) = (-29_i8) * 99_i8;
(*_7) = [_37.0.fld0,Field::<bool>(Variant(_33.0, 0), 0),_37.0.fld0,Field::<bool>(Variant(_33.0, 0), 0)];
_24 = Adt51::Variant3 { fld0: _26.1,fld1: Move(_3) };
Goto(bb33)
}
bb33 = {
_37.0.fld4 = Adt18::Variant0 { fld0: _15,fld1: Field::<i8>(Variant(_39.0.2, 0), 1),fld2: _9 };
_42.0 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_33.0, 0), 0),fld1: Field::<char>(Variant(_33.0, 0), 1),fld2: _12,fld3: Field::<i8>(Variant(_37.0.fld4, 0), 1),fld4: 14413023595091391735_usize,fld5: 30037_u16 };
_39.0 = (_29.1.0, _31, Move(_37.0.fld4), Move(_37.0.fld4));
place!(Field::<u16>(Variant(_42.0, 0), 5)) = 46322_u16 * 35155_u16;
RET = Field::<i8>(Variant(_39.0.2, 0), 1) as u32;
(*_7) = [Field::<bool>(Variant(_42.0, 0), 0),_8,Field::<bool>(Variant(_42.0, 0), 0),_8];
_41 = !(-60986354710898578008660113620504470277_i128);
_16 = &mut place!(Field::<i8>(Variant(_39.0.3, 0), 1));
(*_7) = [_8,Field::<bool>(Variant(_33.0, 0), 0),_8,_37.0.fld0];
(*_2) = &mut (*_16);
(*_7) = [_8,Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0)];
place!(Field::<i8>(Variant(_29.1.2, 0), 1)) = (*_1) - (*_1);
_4 = _31;
place!(Field::<u128>(Variant(_24, 3), 0)) = !_26.1;
_2 = core::ptr::addr_of!((*_2));
Goto(bb34)
}
bb34 = {
_42.0 = Adt23::Variant1 { fld0: 38239_u16,fld1: RET,fld2: _15 };
Goto(bb35)
}
bb35 = {
place!(Field::<usize>(Variant(_33.0, 0), 4)) = 3193056516871634272_usize >> (*_1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1) | Field::<i8>(Variant(_29.1.2, 0), 1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1) - Field::<i8>(Variant(_29.1.2, 0), 1);
(*_2) = &mut place!(Field::<i8>(Variant(_29.1.2, 0), 1));
place!(Field::<char>(Variant(_33.0, 0), 1)) = _10;
(*_2) = Move(_16);
_12 = Field::<u32>(Variant(_42.0, 1), 1) as isize;
_7 = core::ptr::addr_of_mut!((*_7));
place!(Field::<isize>(Variant(_33.0, 0), 2)) = _12 * _12;
_10 = Field::<char>(Variant(_33.0, 0), 1);
_46 = !_6;
_10 = Field::<char>(Variant(_33.0, 0), 1);
(*_7) = [Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0),_37.0.fld0,_37.0.fld0];
match _25 {
0 => bb30,
1 => bb27,
2 => bb8,
3 => bb36,
4 => bb37,
4482587664469684954 => bb39,
_ => bb38
}
}
bb36 = {
Return()
}
bb37 = {
_8 = _14 == _9;
_26.1 = _8 as u128;
_4 = 222997915_i32 as f32;
_6 = RET + RET;
_4 = _9 as f32;
_10 = '\u{93d6}';
_25 = _22;
_8 = true;
RET = !_6;
_14 = _9 << _11;
_26.1 = _8 as u128;
_9 = _14 | _14;
_22 = _25 - _25;
_10 = '\u{cf3c2}';
_22 = _25 & _25;
match _25 {
0 => bb21,
1 => bb22,
2 => bb23,
4482587664469684954 => bb25,
_ => bb24
}
}
bb38 = {
(*_1) = -89_i8;
_15 = 1337077611947268015_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = (-9_i8);
(*_1) = (-13_i8);
_10 = '\u{54995}';
(*_1) = (-32_i8) + 23_i8;
(*_1) = (-105_i8);
_16 = &mut (*_1);
_8 = false | false;
(*_2) = Move(_16);
Goto(bb10)
}
bb39 = {
_3 = core::ptr::addr_of_mut!(_37.1);
_37.0.fld2 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_33.0, 0), 0),fld1: Field::<char>(Variant(_33.0, 0), 1),fld2: Field::<isize>(Variant(_33.0, 0), 2),fld3: (-94_i8),fld4: Field::<usize>(Variant(_33.0, 0), 4),fld5: 25528_u16 };
_37.0.fld3.0 = _41;
(*_3) = -(-1098920583_i32);
_28 = _4 * _31;
place!(Field::<char>(Variant(_33.0, 0), 1)) = Field::<char>(Variant(_37.0.fld2, 0), 1);
_33.0 = Adt23::Variant1 { fld0: 62956_u16,fld1: _46,fld2: _15 };
(*_7) = [_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0,_37.0.fld0];
(*_7) = [_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0,Field::<bool>(Variant(_37.0.fld2, 0), 0)];
_56 = [Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4)];
place!(Field::<isize>(Variant(_37.0.fld2, 0), 2)) = (*_3) as isize;
(*_3) = (-227367967_i32);
(*_7) = [_37.0.fld0,Field::<bool>(Variant(_37.0.fld2, 0), 0),_8,_37.0.fld0];
_37.0.fld1 = Field::<u128>(Variant(_24, 3), 0) + _26.1;
_37.1 = 1661820874_i32;
Goto(bb40)
}
bb40 = {
_11 = _9;
place!(Field::<u64>(Variant(_33.0, 1), 2)) = 32248_i16 as u64;
place!(Field::<u128>(Variant(_24, 3), 0)) = _26.1 << _9;
place!(Field::<u16>(Variant(_42.0, 1), 0)) = !9446_u16;
place!(Field::<u64>(Variant(_33.0, 1), 2)) = Field::<u64>(Variant(_42.0, 1), 2) * _15;
place!(Field::<u128>(Variant(_24, 3), 0)) = !_37.0.fld1;
place!(Field::<bool>(Variant(_37.0.fld2, 0), 0)) = _8;
(*_7) = [Field::<bool>(Variant(_37.0.fld2, 0), 0),_8,_8,_8];
_17 = [Field::<isize>(Variant(_37.0.fld2, 0), 2),_12,_12,_12,Field::<isize>(Variant(_37.0.fld2, 0), 2),_12,_12,Field::<isize>(Variant(_37.0.fld2, 0), 2)];
_56 = [Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4)];
(*_7) = [_37.0.fld0,Field::<bool>(Variant(_37.0.fld2, 0), 0),_8,Field::<bool>(Variant(_37.0.fld2, 0), 0)];
_37.1 = Field::<u16>(Variant(_42.0, 1), 0) as i32;
(*_7) = [_37.0.fld0,_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0];
_40 = Field::<usize>(Variant(_37.0.fld2, 0), 4) >> Field::<u128>(Variant(_24, 3), 0);
_37.0.fld0 = _8 | Field::<bool>(Variant(_37.0.fld2, 0), 0);
(*_7) = [_8,_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0];
Call(_12 = core::intrinsics::transmute(Field::<isize>(Variant(_37.0.fld2, 0), 2)), ReturnTo(bb41), UnwindUnreachable())
}
bb41 = {
_58.0.2 = Field::<usize>(Variant(_37.0.fld2, 0), 4) - _40;
_8 = Field::<bool>(Variant(_37.0.fld2, 0), 0) ^ _37.0.fld0;
_37.0.fld2 = _42.0;
place!(Field::<u128>(Variant(_24, 3), 0)) = Field::<u64>(Variant(_33.0, 1), 2) as u128;
(*_7) = [_8,_8,_8,_8];
_59 = _9 - _14;
_37.0.fld3 = (_41,);
_37.1 = 1860323569_i32;
_7 = core::ptr::addr_of_mut!((*_7));
(*_7) = [_8,_8,_8,_37.0.fld0];
_20 = [16454_i16,(-13425_i16)];
(*_3) = (-1589111595_i32) ^ 1442892043_i32;
_58.0.2 = _40 & _40;
place!(Field::<*mut i32>(Variant(_24, 3), 1)) = core::ptr::addr_of_mut!((*_3));
(*_7) = [_37.0.fld0,_37.0.fld0,_8,_8];
_46 = Field::<u32>(Variant(_33.0, 1), 1) + _6;
_37.0.fld0 = _8 | _8;
_37.0.fld5 = -_28;
match _25 {
0 => bb42,
1 => bb43,
2 => bb44,
3 => bb45,
4 => bb46,
4482587664469684954 => bb48,
_ => bb47
}
}
bb42 = {
(*_1) = (-42_i8) - (-59_i8);
(*_1) = !(-117_i8);
(*_1) = -(-124_i8);
(*_1) = (-52_i8) & (-94_i8);
(*_1) = 16_i8;
(*_1) = 43_i8 >> _6;
_10 = '\u{c750c}';
_11 = _9;
_14 = _9 - _11;
_6 = _4 as u32;
_6 = RET - RET;
_11 = _14 - _14;
(*_1) = RET as i8;
(*_1) = (-6_i8) * 24_i8;
(*_1) = (-8_i8) << _11;
Goto(bb9)
}
bb43 = {
_3 = core::ptr::addr_of_mut!(_37.1);
_37.0.fld2 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_33.0, 0), 0),fld1: Field::<char>(Variant(_33.0, 0), 1),fld2: Field::<isize>(Variant(_33.0, 0), 2),fld3: (-94_i8),fld4: Field::<usize>(Variant(_33.0, 0), 4),fld5: 25528_u16 };
_37.0.fld3.0 = _41;
(*_3) = -(-1098920583_i32);
_28 = _4 * _31;
place!(Field::<char>(Variant(_33.0, 0), 1)) = Field::<char>(Variant(_37.0.fld2, 0), 1);
_33.0 = Adt23::Variant1 { fld0: 62956_u16,fld1: _46,fld2: _15 };
(*_7) = [_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0,_37.0.fld0];
(*_7) = [_8,Field::<bool>(Variant(_37.0.fld2, 0), 0),_37.0.fld0,Field::<bool>(Variant(_37.0.fld2, 0), 0)];
_56 = [Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4),Field::<usize>(Variant(_37.0.fld2, 0), 4)];
place!(Field::<isize>(Variant(_37.0.fld2, 0), 2)) = (*_3) as isize;
(*_3) = (-227367967_i32);
(*_7) = [_37.0.fld0,Field::<bool>(Variant(_37.0.fld2, 0), 0),_8,_37.0.fld0];
_37.0.fld1 = Field::<u128>(Variant(_24, 3), 0) + _26.1;
_37.1 = 1661820874_i32;
Goto(bb40)
}
bb44 = {
_4 = 10168451308764265815_usize as f32;
_4 = (-1350405097830551762_i64) as f32;
_4 = 101533180611513211353434000744765701841_i128 as f32;
RET = 3435952753_u32 >> (-9251_i16);
_4 = (-70287127886390558293898119693621581324_i128) as f32;
_4 = 1573758857_i32 as f32;
RET = !3950409330_u32;
RET = 4102974446_u32 << 15425_i16;
_4 = 17212203046105315194_u64 as f32;
RET = !4210458007_u32;
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 10284_u16,fld1: RET,fld2: 10398134941063129486_u64 };
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u64>(Variant(_5, 1), 2)) = 14377695481832511725_u64 * 6900949675944711905_u64;
place!(Field::<u64>(Variant(_5, 1), 2)) = !1374056499346525643_u64;
_6 = !Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u32>(Variant(_5, 1), 1)) = _6 >> _6;
RET = Field::<u32>(Variant(_5, 1), 1) * Field::<u32>(Variant(_5, 1), 1);
place!(Field::<u16>(Variant(_5, 1), 0)) = 49881_u16 * 29856_u16;
RET = '\u{cd7c3}' as u32;
place!(Field::<u64>(Variant(_5, 1), 2)) = 527909249002786376_u64 + 4146772272961805364_u64;
_5 = Adt23::Variant1 { fld0: 5914_u16,fld1: _6,fld2: 960692395266583250_u64 };
_4 = RET as f32;
_5 = Adt23::Variant1 { fld0: 12533_u16,fld1: _6,fld2: 2461895306114434115_u64 };
Call(_5 = fn3(Move(_2), Move(_3)), ReturnTo(bb6), UnwindUnreachable())
}
bb45 = {
_10 = '\u{9b7b4}';
_11 = !_14;
_8 = !true;
_20 = [1181_i16,(-15700_i16)];
_20 = [(-14289_i16),31663_i16];
_15 = 1659294743087843360_u64 + 7710302824145038270_u64;
_10 = '\u{a9e37}';
_11 = 66002478225009746169051916013437119837_u128 as u8;
_6 = !RET;
_22 = _8 as i64;
_9 = _14 - _14;
_22 = 4482587664469684954_i64;
_15 = 3193421452380930777_u64 & 4142452863499126755_u64;
_6 = _12 as u32;
_4 = 8166_i16 as f32;
_23 = [55_i8,4_i8,119_i8,(-15_i8),112_i8];
_17 = [_12,_12,_12,_12,_12,_12,_12,_12];
_6 = RET << _9;
_23 = [121_i8,(-11_i8),107_i8,(-92_i8),(-94_i8)];
_10 = '\u{8e6d9}';
_10 = '\u{1c643}';
_20 = [(-31574_i16),(-9243_i16)];
_20 = [(-2193_i16),(-30711_i16)];
_4 = 1_usize as f32;
_14 = !_9;
match _22 {
0 => bb11,
1 => bb17,
2 => bb18,
4482587664469684954 => bb20,
_ => bb19
}
}
bb46 = {
_37.0.fld4 = Adt18::Variant0 { fld0: _15,fld1: Field::<i8>(Variant(_39.0.2, 0), 1),fld2: _9 };
_42.0 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_33.0, 0), 0),fld1: Field::<char>(Variant(_33.0, 0), 1),fld2: _12,fld3: Field::<i8>(Variant(_37.0.fld4, 0), 1),fld4: 14413023595091391735_usize,fld5: 30037_u16 };
_39.0 = (_29.1.0, _31, Move(_37.0.fld4), Move(_37.0.fld4));
place!(Field::<u16>(Variant(_42.0, 0), 5)) = 46322_u16 * 35155_u16;
RET = Field::<i8>(Variant(_39.0.2, 0), 1) as u32;
(*_7) = [Field::<bool>(Variant(_42.0, 0), 0),_8,Field::<bool>(Variant(_42.0, 0), 0),_8];
_41 = !(-60986354710898578008660113620504470277_i128);
_16 = &mut place!(Field::<i8>(Variant(_39.0.3, 0), 1));
(*_7) = [_8,Field::<bool>(Variant(_33.0, 0), 0),_8,_37.0.fld0];
(*_2) = &mut (*_16);
(*_7) = [_8,Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0)];
place!(Field::<i8>(Variant(_29.1.2, 0), 1)) = (*_1) - (*_1);
_4 = _31;
place!(Field::<u128>(Variant(_24, 3), 0)) = !_26.1;
_2 = core::ptr::addr_of!((*_2));
Goto(bb34)
}
bb47 = {
place!(Field::<usize>(Variant(_33.0, 0), 4)) = 3193056516871634272_usize >> (*_1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1) | Field::<i8>(Variant(_29.1.2, 0), 1);
(*_1) = Field::<i8>(Variant(_29.1.2, 0), 1) - Field::<i8>(Variant(_29.1.2, 0), 1);
(*_2) = &mut place!(Field::<i8>(Variant(_29.1.2, 0), 1));
place!(Field::<char>(Variant(_33.0, 0), 1)) = _10;
(*_2) = Move(_16);
_12 = Field::<u32>(Variant(_42.0, 1), 1) as isize;
_7 = core::ptr::addr_of_mut!((*_7));
place!(Field::<isize>(Variant(_33.0, 0), 2)) = _12 * _12;
_10 = Field::<char>(Variant(_33.0, 0), 1);
_46 = !_6;
_10 = Field::<char>(Variant(_33.0, 0), 1);
(*_7) = [Field::<bool>(Variant(_33.0, 0), 0),Field::<bool>(Variant(_33.0, 0), 0),_37.0.fld0,_37.0.fld0];
match _25 {
0 => bb30,
1 => bb27,
2 => bb8,
3 => bb36,
4 => bb37,
4482587664469684954 => bb39,
_ => bb38
}
}
bb48 = {
_58.0.1 = (-68_i8) & (-66_i8);
_48.1 = Move(_3);
(*_2) = &mut _58.0.1;
place!(Field::<u32>(Variant(_33.0, 1), 1)) = _6;
Goto(bb49)
}
bb49 = {
place!(Field::<u128>(Variant(_24, 3), 0)) = _26.1;
_27 = &mut (*_2);
(*_7) = [_37.0.fld0,_8,_8,_8];
Goto(bb50)
}
bb50 = {
Call(_68 = dump_var(2_usize, 6_usize, Move(_6), 59_usize, Move(_59), 41_usize, Move(_41), 23_usize, Move(_23)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_68 = dump_var(2_usize, 25_usize, Move(_25), 10_usize, Move(_10), 9_usize, Move(_9), 12_usize, Move(_12)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_68 = dump_var(2_usize, 8_usize, Move(_8), 69_usize, _69, 69_usize, _69, 69_usize, _69), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn3(mut _1: *const &'static mut i8,mut _2: *mut i32) -> Adt23 {
mir! {
type RET = Adt23;
let _3: (usize, &'static mut &'static mut (*mut i32, *mut [i16; 2], u8), &'static f64);
let _4: f64;
let _5: &'static mut (Adt31, i32);
let _6: *mut *mut i32;
let _7: i16;
let _8: *const &'static mut i8;
let _9: isize;
let _10: isize;
let _11: f64;
let _12: &'static mut &'static mut i8;
let _13: i16;
let _14: &'static *mut [i16; 2];
let _15: isize;
let _16: u128;
let _17: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _18: isize;
let _19: &'static mut (Adt31, i32);
let _20: i128;
let _21: char;
let _22: &'static *mut [i16; 2];
let _23: f64;
let _24: f64;
let _25: (i128,);
let _26: ([bool; 4], (i32, f32, Adt18, Adt18));
let _27: f64;
let _28: &'static mut &'static mut i8;
let _29: bool;
let _30: *const *mut [i16; 2];
let _31: f64;
let _32: (&'static mut *mut [u64; 1], u128);
let _33: *const [usize; 2];
let _34: &'static mut (Adt31, i32);
let _35: *mut [bool; 4];
let _36: [isize; 8];
let _37: f32;
let _38: Adt31;
let _39: i32;
let _40: &'static *mut [bool; 4];
let _41: f64;
let _42: (i128,);
let _43: ();
let _44: ();
{
RET = Adt23::Variant1 { fld0: 65077_u16,fld1: 1967908363_u32,fld2: 7615064632733847_u64 };
RET = Adt23::Variant0 { fld0: true,fld1: '\u{989d0}',fld2: 27_isize,fld3: (-122_i8),fld4: 15005625148677825427_usize,fld5: 47012_u16 };
place!(Field::<bool>(Variant(RET, 0), 0)) = (-29_i8) <= (-79_i8);
place!(Field::<i8>(Variant(RET, 0), 3)) = (-63_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{8b3bf}';
place!(Field::<usize>(Variant(RET, 0), 4)) = !9330201557563603367_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{21d85}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 167768314227180050594228622780051481836_i128 as i8;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{e387a}',fld2: 9223372036854775807_isize,fld3: (-121_i8),fld4: 2436527041976609740_usize,fld5: 7276_u16 };
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{bb44f}';
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 14721_u16 ^ 57163_u16;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{20c58}';
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{52725}';
Goto(bb1)
}
bb1 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb2 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
place!(Field::<u16>(Variant(RET, 0), 5)) = 55561_u16 << Field::<isize>(Variant(RET, 0), 2);
_7 = !4449_i16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<usize>(Variant(RET, 0), 4)) = !_3.0;
place!(Field::<i8>(Variant(RET, 0), 3)) = (-103_i8);
_7 = (-1286128717_i32) as i16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
match Field::<i8>(Variant(RET, 0), 3) {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768211353 => bb10,
_ => bb9
}
}
bb4 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
RET = Adt23::Variant1 { fld0: 23215_u16,fld1: 1247700628_u32,fld2: 18178802148544951735_u64 };
_3.2 = &_4;
place!(Field::<u32>(Variant(RET, 1), 1)) = false as u32;
RET = Adt23::Variant1 { fld0: 5893_u16,fld1: 417903797_u32,fld2: 2893460814046085238_u64 };
place!(Field::<u16>(Variant(RET, 1), 0)) = 39417_u16;
_4 = 113590086398474733178288411104213570302_u128 as f64;
place!(Field::<u64>(Variant(RET, 1), 2)) = 17899377663650870110_u64 >> Field::<u16>(Variant(RET, 1), 0);
place!(Field::<u16>(Variant(RET, 1), 0)) = 13427_u16 << _3.0;
place!(Field::<u32>(Variant(RET, 1), 1)) = 1580462480_u32 & 1364827757_u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 56862_u16 | 52569_u16;
place!(Field::<u16>(Variant(RET, 1), 0)) = 86_i8 as u16;
place!(Field::<u32>(Variant(RET, 1), 1)) = '\u{10ee53}' as u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 9223372036854775807_isize as u16;
_10 = -9223372036854775807_isize;
place!(Field::<u64>(Variant(RET, 1), 2)) = 3290826320475731657_u64 * 15286646490426731166_u64;
place!(Field::<u32>(Variant(RET, 1), 1)) = 481790526_u32;
_7 = (-24180_i16) + (-27017_i16);
place!(Field::<u16>(Variant(RET, 1), 0)) = 15299_u16;
_3.0 = 5217698864672276391_usize;
_9 = _10;
_10 = _9 ^ _9;
place!(Field::<u16>(Variant(RET, 1), 0)) = (-23_i8) as u16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<u64>(Variant(RET, 1), 2)) = 4963660480600632276_u64;
_10 = _9 ^ _9;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{38d16}',fld2: _9,fld3: (-36_i8),fld4: _3.0,fld5: 20764_u16 };
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{f4f7f}';
match _3.0 {
0 => bb11,
1 => bb12,
2 => bb13,
5217698864672276391 => bb15,
_ => bb14
}
}
bb11 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb12 = {
place!(Field::<u16>(Variant(RET, 0), 5)) = 55561_u16 << Field::<isize>(Variant(RET, 0), 2);
_7 = !4449_i16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<usize>(Variant(RET, 0), 4)) = !_3.0;
place!(Field::<i8>(Variant(RET, 0), 3)) = (-103_i8);
_7 = (-1286128717_i32) as i16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
match Field::<i8>(Variant(RET, 0), 3) {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768211353 => bb10,
_ => bb9
}
}
bb13 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb15 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = 18397896547527758474_u64 as i8;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{c42ec}';
_10 = _9 + _9;
_7 = 14254_i16 << Field::<isize>(Variant(RET, 0), 2);
place!(Field::<bool>(Variant(RET, 0), 0)) = !true;
_13 = -_7;
place!(Field::<u16>(Variant(RET, 0), 5)) = 22232_u16 + 60013_u16;
_13 = _7;
_11 = 202992027_i32 as f64;
_10 = _9 - _9;
place!(Field::<isize>(Variant(RET, 0), 2)) = _10;
_11 = 2130826682_u32 as f64;
match Field::<usize>(Variant(RET, 0), 4) {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
5217698864672276391 => bb21,
_ => bb20
}
}
bb16 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb17 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb18 = {
place!(Field::<u16>(Variant(RET, 0), 5)) = 55561_u16 << Field::<isize>(Variant(RET, 0), 2);
_7 = !4449_i16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<usize>(Variant(RET, 0), 4)) = !_3.0;
place!(Field::<i8>(Variant(RET, 0), 3)) = (-103_i8);
_7 = (-1286128717_i32) as i16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
match Field::<i8>(Variant(RET, 0), 3) {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768211353 => bb10,
_ => bb9
}
}
bb19 = {
Return()
}
bb20 = {
RET = Adt23::Variant1 { fld0: 23215_u16,fld1: 1247700628_u32,fld2: 18178802148544951735_u64 };
_3.2 = &_4;
place!(Field::<u32>(Variant(RET, 1), 1)) = false as u32;
RET = Adt23::Variant1 { fld0: 5893_u16,fld1: 417903797_u32,fld2: 2893460814046085238_u64 };
place!(Field::<u16>(Variant(RET, 1), 0)) = 39417_u16;
_4 = 113590086398474733178288411104213570302_u128 as f64;
place!(Field::<u64>(Variant(RET, 1), 2)) = 17899377663650870110_u64 >> Field::<u16>(Variant(RET, 1), 0);
place!(Field::<u16>(Variant(RET, 1), 0)) = 13427_u16 << _3.0;
place!(Field::<u32>(Variant(RET, 1), 1)) = 1580462480_u32 & 1364827757_u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 56862_u16 | 52569_u16;
place!(Field::<u16>(Variant(RET, 1), 0)) = 86_i8 as u16;
place!(Field::<u32>(Variant(RET, 1), 1)) = '\u{10ee53}' as u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 9223372036854775807_isize as u16;
_10 = -9223372036854775807_isize;
place!(Field::<u64>(Variant(RET, 1), 2)) = 3290826320475731657_u64 * 15286646490426731166_u64;
place!(Field::<u32>(Variant(RET, 1), 1)) = 481790526_u32;
_7 = (-24180_i16) + (-27017_i16);
place!(Field::<u16>(Variant(RET, 1), 0)) = 15299_u16;
_3.0 = 5217698864672276391_usize;
_9 = _10;
_10 = _9 ^ _9;
place!(Field::<u16>(Variant(RET, 1), 0)) = (-23_i8) as u16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<u64>(Variant(RET, 1), 2)) = 4963660480600632276_u64;
_10 = _9 ^ _9;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{38d16}',fld2: _9,fld3: (-36_i8),fld4: _3.0,fld5: 20764_u16 };
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{f4f7f}';
match _3.0 {
0 => bb11,
1 => bb12,
2 => bb13,
5217698864672276391 => bb15,
_ => bb14
}
}
bb21 = {
_6 = core::ptr::addr_of_mut!((*_6));
_11 = -_4;
_3.2 = &_11;
_10 = Field::<isize>(Variant(RET, 0), 2);
_6 = core::ptr::addr_of_mut!((*_6));
_15 = _10 ^ Field::<isize>(Variant(RET, 0), 2);
_16 = 131_u8 as u128;
_13 = _10 as i16;
_17.0.2 = 251_u8 + 153_u8;
match Field::<usize>(Variant(RET, 0), 4) {
0 => bb5,
1 => bb11,
2 => bb22,
3 => bb23,
4 => bb24,
5 => bb25,
6 => bb26,
5217698864672276391 => bb28,
_ => bb27
}
}
bb22 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb23 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb24 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb25 = {
Return()
}
bb26 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb27 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = 18397896547527758474_u64 as i8;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{c42ec}';
_10 = _9 + _9;
_7 = 14254_i16 << Field::<isize>(Variant(RET, 0), 2);
place!(Field::<bool>(Variant(RET, 0), 0)) = !true;
_13 = -_7;
place!(Field::<u16>(Variant(RET, 0), 5)) = 22232_u16 + 60013_u16;
_13 = _7;
_11 = 202992027_i32 as f64;
_10 = _9 - _9;
place!(Field::<isize>(Variant(RET, 0), 2)) = _10;
_11 = 2130826682_u32 as f64;
match Field::<usize>(Variant(RET, 0), 4) {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
5217698864672276391 => bb21,
_ => bb20
}
}
bb28 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = _3.0 >> _3.0;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{cb731}';
_10 = _15 >> Field::<isize>(Variant(RET, 0), 2);
_13 = _7;
_17.0.0 = Move((*_6));
(*_6) = Move(_17.0.0);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{b2fae}',fld2: _10,fld3: (-52_i8),fld4: _3.0,fld5: 40050_u16 };
place!(Field::<u16>(Variant(RET, 0), 5)) = 8132_u16;
_11 = 75291120_i32 as f64;
match Field::<usize>(Variant(RET, 0), 4) {
0 => bb20,
1 => bb29,
2 => bb30,
3 => bb31,
4 => bb32,
5217698864672276391 => bb34,
_ => bb33
}
}
bb29 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = 18397896547527758474_u64 as i8;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{c42ec}';
_10 = _9 + _9;
_7 = 14254_i16 << Field::<isize>(Variant(RET, 0), 2);
place!(Field::<bool>(Variant(RET, 0), 0)) = !true;
_13 = -_7;
place!(Field::<u16>(Variant(RET, 0), 5)) = 22232_u16 + 60013_u16;
_13 = _7;
_11 = 202992027_i32 as f64;
_10 = _9 - _9;
place!(Field::<isize>(Variant(RET, 0), 2)) = _10;
_11 = 2130826682_u32 as f64;
match Field::<usize>(Variant(RET, 0), 4) {
0 => bb16,
1 => bb17,
2 => bb18,
3 => bb19,
5217698864672276391 => bb21,
_ => bb20
}
}
bb30 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb31 = {
RET = Adt23::Variant1 { fld0: 23215_u16,fld1: 1247700628_u32,fld2: 18178802148544951735_u64 };
_3.2 = &_4;
place!(Field::<u32>(Variant(RET, 1), 1)) = false as u32;
RET = Adt23::Variant1 { fld0: 5893_u16,fld1: 417903797_u32,fld2: 2893460814046085238_u64 };
place!(Field::<u16>(Variant(RET, 1), 0)) = 39417_u16;
_4 = 113590086398474733178288411104213570302_u128 as f64;
place!(Field::<u64>(Variant(RET, 1), 2)) = 17899377663650870110_u64 >> Field::<u16>(Variant(RET, 1), 0);
place!(Field::<u16>(Variant(RET, 1), 0)) = 13427_u16 << _3.0;
place!(Field::<u32>(Variant(RET, 1), 1)) = 1580462480_u32 & 1364827757_u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 56862_u16 | 52569_u16;
place!(Field::<u16>(Variant(RET, 1), 0)) = 86_i8 as u16;
place!(Field::<u32>(Variant(RET, 1), 1)) = '\u{10ee53}' as u32;
place!(Field::<u16>(Variant(RET, 1), 0)) = 9223372036854775807_isize as u16;
_10 = -9223372036854775807_isize;
place!(Field::<u64>(Variant(RET, 1), 2)) = 3290826320475731657_u64 * 15286646490426731166_u64;
place!(Field::<u32>(Variant(RET, 1), 1)) = 481790526_u32;
_7 = (-24180_i16) + (-27017_i16);
place!(Field::<u16>(Variant(RET, 1), 0)) = 15299_u16;
_3.0 = 5217698864672276391_usize;
_9 = _10;
_10 = _9 ^ _9;
place!(Field::<u16>(Variant(RET, 1), 0)) = (-23_i8) as u16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<u64>(Variant(RET, 1), 2)) = 4963660480600632276_u64;
_10 = _9 ^ _9;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{38d16}',fld2: _9,fld3: (-36_i8),fld4: _3.0,fld5: 20764_u16 };
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{f4f7f}';
match _3.0 {
0 => bb11,
1 => bb12,
2 => bb13,
5217698864672276391 => bb15,
_ => bb14
}
}
bb32 = {
place!(Field::<u16>(Variant(RET, 0), 5)) = 55561_u16 << Field::<isize>(Variant(RET, 0), 2);
_7 = !4449_i16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<usize>(Variant(RET, 0), 4)) = !_3.0;
place!(Field::<i8>(Variant(RET, 0), 3)) = (-103_i8);
_7 = (-1286128717_i32) as i16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
match Field::<i8>(Variant(RET, 0), 3) {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768211353 => bb10,
_ => bb9
}
}
bb33 = {
Return()
}
bb34 = {
_17.0.0 = Move((*_6));
(*_6) = Move(_17.0.0);
place!(Field::<u16>(Variant(RET, 0), 5)) = !14555_u16;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{2b438}';
_16 = 153268608052294023766442065020821283131_u128;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{411f9}',fld2: _10,fld3: 72_i8,fld4: _3.0,fld5: 33322_u16 };
_17.0.0 = Move((*_6));
(*_6) = Move(_17.0.0);
_3.0 = Field::<usize>(Variant(RET, 0), 4);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{e176d}';
_20 = 116237952032876084312184390527413726536_i128 - 83008857066650881846038029752484550119_i128;
_17.0.0 = Move((*_6));
(*_6) = Move(_17.0.0);
_15 = _13 as isize;
_3.0 = Field::<usize>(Variant(RET, 0), 4) % Field::<usize>(Variant(RET, 0), 4);
place!(Field::<u16>(Variant(RET, 0), 5)) = !16380_u16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
_10 = (-783357664_i32) as isize;
_20 = (-93225232779782705602619777130897987576_i128);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{d91e7}',fld2: _15,fld3: 14_i8,fld4: _3.0,fld5: 8464_u16 };
_9 = Field::<isize>(Variant(RET, 0), 2);
_10 = _15;
_18 = Field::<isize>(Variant(RET, 0), 2) - _10;
_9 = !_10;
_6 = core::ptr::addr_of_mut!((*_6));
place!(Field::<bool>(Variant(RET, 0), 0)) = _3.0 > _3.0;
place!(Field::<u16>(Variant(RET, 0), 5)) = !2814_u16;
_11 = _4;
_11 = Field::<usize>(Variant(RET, 0), 4) as f64;
Goto(bb35)
}
bb35 = {
place!(Field::<isize>(Variant(RET, 0), 2)) = _9;
_10 = _15 << _18;
place!(Field::<i8>(Variant(RET, 0), 3)) = -(-15_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{8c8b0}';
_17.1 = Adt48::Variant0 { fld0: _3.0 };
_20 = 71053077959213490368124773958147638683_i128;
place!(Field::<isize>(Variant(RET, 0), 2)) = _9 | _15;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{3c28d}',fld2: _10,fld3: (-11_i8),fld4: _3.0,fld5: 54557_u16 };
_3.2 = &_4;
_23 = -_11;
_11 = _23;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{e6544}';
_13 = _7 >> _10;
_7 = -_13;
_18 = _11 as isize;
_17.0.2 = true as u8;
RET = Adt23::Variant0 { fld0: false,fld1: '\u{f2b2c}',fld2: _10,fld3: 38_i8,fld4: _3.0,fld5: 59089_u16 };
match _20 {
0 => bb24,
1 => bb2,
2 => bb13,
3 => bb29,
71053077959213490368124773958147638683 => bb36,
_ => bb10
}
}
bb36 = {
RET = Adt23::Variant1 { fld0: 32330_u16,fld1: 1130612004_u32,fld2: 8560907217436921799_u64 };
(*_6) = core::ptr::addr_of_mut!(_26.1.0);
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_2) = 11618650699340885419_u64 as i32;
_24 = -_23;
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1966564406_i32;
_24 = -_23;
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
RET = Adt23::Variant1 { fld0: 1382_u16,fld1: 2183304958_u32,fld2: 15119701038817063280_u64 };
_9 = _10;
_9 = true as isize;
place!(Field::<u32>(Variant(RET, 1), 1)) = 3603863226_u32;
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
place!(Field::<u64>(Variant(RET, 1), 2)) = 3585198975632874646_u64;
_25.0 = -_20;
_21 = '\u{b9486}';
(*_6) = core::ptr::addr_of_mut!((*_2));
_29 = !true;
(*_2) = !(-96954953_i32);
_9 = _10;
_6 = core::ptr::addr_of_mut!((*_6));
Goto(bb37)
}
bb37 = {
(*_6) = core::ptr::addr_of_mut!((*_2));
_25 = (_20,);
(*_6) = core::ptr::addr_of_mut!((*_2));
_21 = '\u{53721}';
(*_2) = (-985073798_i32) >> _7;
Goto(bb38)
}
bb38 = {
(*_6) = core::ptr::addr_of_mut!((*_2));
_32.1 = _16 / _16;
_26.1.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(RET, 1), 2),fld1: 38_i8,fld2: _17.0.2 };
_32.1 = Field::<usize>(Variant(_17.1, 0), 0) as u128;
_10 = _9 >> (*_2);
_26.1.0 = (-604133357_i32) - 1637206607_i32;
(*_6) = core::ptr::addr_of_mut!((*_2));
match _20 {
0 => bb36,
1 => bb2,
2 => bb3,
3 => bb17,
4 => bb39,
5 => bb40,
6 => bb41,
71053077959213490368124773958147638683 => bb43,
_ => bb42
}
}
bb39 = {
place!(Field::<i8>(Variant(RET, 0), 3)) = (-93_i8);
_3.0 = !Field::<usize>(Variant(RET, 0), 4);
_4 = 76922947210933651768731814481220448681_i128 as f64;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{d7a59}';
place!(Field::<i8>(Variant(RET, 0), 3)) = 79_i8;
_3.2 = &_4;
RET = Adt23::Variant0 { fld0: true,fld1: '\u{9b4a1}',fld2: 9223372036854775807_isize,fld3: 12_i8,fld4: _3.0,fld5: 39015_u16 };
RET = Adt23::Variant0 { fld0: false,fld1: '\u{2d5a5}',fld2: (-9223372036854775808_isize),fld3: (-76_i8),fld4: _3.0,fld5: 65425_u16 };
place!(Field::<i8>(Variant(RET, 0), 3)) = (-67_i8) + (-124_i8);
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{101b7}';
_3.0 = Field::<usize>(Variant(RET, 0), 4);
RET = Adt23::Variant0 { fld0: false,fld1: '\u{111b}',fld2: (-9223372036854775808_isize),fld3: (-17_i8),fld4: _3.0,fld5: 60072_u16 };
_4 = 167398443230810572465703617444355551285_i128 as f64;
place!(Field::<isize>(Variant(RET, 0), 2)) = 2086162354_u32 as isize;
Call(_2 = fn4(Move(_1), Move(_3.2), _4), ReturnTo(bb3), UnwindUnreachable())
}
bb40 = {
Return()
}
bb41 = {
place!(Field::<usize>(Variant(RET, 0), 4)) = 18022145773959777462_usize & 15919312688038728281_usize;
place!(Field::<char>(Variant(RET, 0), 1)) = '\u{1cd01}';
_4 = (-9223372036854775808_isize) as f64;
_3.0 = Field::<usize>(Variant(RET, 0), 4) ^ Field::<usize>(Variant(RET, 0), 4);
place!(Field::<isize>(Variant(RET, 0), 2)) = -(-125_isize);
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
place!(Field::<u16>(Variant(RET, 0), 5)) = 5692_u16 >> Field::<usize>(Variant(RET, 0), 4);
Goto(bb2)
}
bb42 = {
place!(Field::<u16>(Variant(RET, 0), 5)) = 55561_u16 << Field::<isize>(Variant(RET, 0), 2);
_7 = !4449_i16;
_6 = core::ptr::addr_of_mut!(_2);
place!(Field::<usize>(Variant(RET, 0), 4)) = !_3.0;
place!(Field::<i8>(Variant(RET, 0), 3)) = (-103_i8);
_7 = (-1286128717_i32) as i16;
place!(Field::<bool>(Variant(RET, 0), 0)) = false;
match Field::<i8>(Variant(RET, 0), 3) {
0 => bb1,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb7,
5 => bb8,
340282366920938463463374607431768211353 => bb10,
_ => bb9
}
}
bb43 = {
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
_30 = core::ptr::addr_of!(_17.0.1);
(*_2) = -(-1336945401_i32);
_6 = core::ptr::addr_of_mut!((*_6));
_26.0 = [_29,_29,_29,_29];
(*_2) = (-1358985310_i32) | (-1540482242_i32);
(*_2) = -(-87478930_i32);
(*_2) = 1217427662_i32 ^ (-1041428340_i32);
(*_6) = core::ptr::addr_of_mut!((*_2));
_26.1.0 = (-6193960807553677990_i64) as i32;
_35 = core::ptr::addr_of_mut!(_26.0);
match _25.0 {
71053077959213490368124773958147638683 => bb44,
_ => bb8
}
}
bb44 = {
(*_2) = 1836722373_i32 ^ 837350860_i32;
(*_2) = (-162421872_i32);
_13 = _7;
(*_2) = 1160144852_i32 * (-219621615_i32);
(*_2) = 37015_u16 as i32;
_26.0 = [_29,_29,_29,_29];
(*_6) = core::ptr::addr_of_mut!((*_2));
place!(Field::<u64>(Variant(RET, 1), 2)) = Field::<u32>(Variant(RET, 1), 1) as u64;
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
_29 = true;
_16 = Field::<u8>(Variant(_26.1.2, 0), 2) as u128;
_29 = Field::<u64>(Variant(_26.1.2, 0), 0) > Field::<u64>(Variant(RET, 1), 2);
(*_6) = core::ptr::addr_of_mut!((*_2));
(*_6) = core::ptr::addr_of_mut!((*_2));
_18 = _9 - _10;
Goto(bb45)
}
bb45 = {
(*_35) = [_29,_29,_29,_29];
(*_35) = [_29,_29,_29,_29];
_31 = -_11;
(*_2) = -1997586083_i32;
_38.fld2 = Adt23::Variant1 { fld0: 4692_u16,fld1: Field::<u32>(Variant(RET, 1), 1),fld2: Field::<u64>(Variant(_26.1.2, 0), 0) };
(*_35) = [_29,_29,_29,_29];
_37 = (-6626539443246728244_i64) as f32;
place!(Field::<u16>(Variant(_38.fld2, 1), 0)) = 34261_u16;
_7 = (-112_i8) as i16;
(*_2) = 1949324000_i32;
_30 = core::ptr::addr_of!((*_30));
(*_2) = !(-1234718981_i32);
(*_6) = core::ptr::addr_of_mut!((*_2));
_39 = (*_2) | (*_2);
_42 = _25;
place!(Field::<i8>(Variant(_26.1.2, 0), 1)) = 63_i8 & 74_i8;
(*_6) = core::ptr::addr_of_mut!((*_2));
_38.fld1 = !_16;
_26.0 = [_29,_29,_29,_29];
(*_35) = [_29,_29,_29,_29];
RET = Adt23::Variant0 { fld0: _29,fld1: _21,fld2: _10,fld3: Field::<i8>(Variant(_26.1.2, 0), 1),fld4: Field::<usize>(Variant(_17.1, 0), 0),fld5: Field::<u16>(Variant(_38.fld2, 1), 0) };
(*_35) = [_29,Field::<bool>(Variant(RET, 0), 0),Field::<bool>(Variant(RET, 0), 0),Field::<bool>(Variant(RET, 0), 0)];
(*_2) = -_39;
(*_2) = _39;
Goto(bb46)
}
bb46 = {
Call(_43 = dump_var(3_usize, 9_usize, Move(_9), 29_usize, Move(_29), 39_usize, Move(_39), 15_usize, Move(_15)), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
Call(_43 = dump_var(3_usize, 16_usize, Move(_16), 20_usize, Move(_20), 44_usize, _44, 44_usize, _44), ReturnTo(bb48), UnwindUnreachable())
}
bb48 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn4(mut _1: *const &'static mut i8,mut _2: &'static f64,mut _3: f64) -> *mut i32 {
mir! {
type RET = *mut i32;
let _4: [i16; 2];
let _5: isize;
let _6: isize;
let _7: [u64; 1];
let _8: i32;
let _9: *const [u128; 2];
let _10: isize;
let _11: isize;
let _12: isize;
let _13: i32;
let _14: f32;
let _15: [u8; 2];
let _16: u64;
let _17: bool;
let _18: i64;
let _19: f32;
let _20: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _21: isize;
let _22: u128;
let _23: u16;
let _24: ((i32, f32, Adt18, Adt18),);
let _25: i32;
let _26: bool;
let _27: isize;
let _28: [u64; 1];
let _29: bool;
let _30: u16;
let _31: f32;
let _32: &'static *mut [i16; 2];
let _33: *const [i128; 4];
let _34: u32;
let _35: char;
let _36: [i16; 2];
let _37: &'static [u64; 1];
let _38: *const &'static mut i8;
let _39: bool;
let _40: isize;
let _41: &'static &'static f64;
let _42: u8;
let _43: *const &'static mut i8;
let _44: f32;
let _45: *mut *mut i32;
let _46: *mut [bool; 4];
let _47: *mut i32;
let _48: (i128,);
let _49: u8;
let _50: ([bool; 4], (i32, f32, Adt18, Adt18));
let _51: Adt31;
let _52: ();
let _53: ();
{
_2 = &_3;
_3 = 922413416_u32 as f64;
_3 = 1165527158_u32 as f64;
_3 = (-1212907263_i32) as f64;
_3 = 38_isize as f64;
_3 = 123885502546279556781308789979789493357_i128 as f64;
Goto(bb1)
}
bb1 = {
_4 = [14523_i16,(-9723_i16)];
_4 = [(-29412_i16),(-19624_i16)];
_3 = 2892310945_u32 as f64;
_4 = [25540_i16,(-31469_i16)];
_4 = [(-30909_i16),(-18974_i16)];
_4 = [8081_i16,27422_i16];
Call(_4 = fn5(Move(_1), Move(_2), _3, _3, _3, _3, _3, _3, _3, _3), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_2 = &_3;
_4 = [(-13637_i16),2965_i16];
_4 = [15250_i16,(-2965_i16)];
_4 = [(-22657_i16),(-19302_i16)];
_4 = [7212_i16,22261_i16];
_5 = 36398168648275714400602011631681434358_i128 as isize;
_3 = (-76_i8) as f64;
_4 = [7110_i16,(-351_i16)];
_5 = 9223372036854775807_isize;
_3 = 3547_u16 as f64;
_4 = [24787_i16,27945_i16];
_3 = 10197_i16 as f64;
_3 = (-1916232317_i32) as f64;
_4 = [(-19048_i16),25967_i16];
_5 = _3 as isize;
_4 = [17931_i16,2704_i16];
_3 = (-568932156_i32) as f64;
_4 = [(-16245_i16),(-29739_i16)];
_5 = (-9223372036854775808_isize) | 9223372036854775807_isize;
Goto(bb3)
}
bb3 = {
_4 = [(-14410_i16),31884_i16];
_5 = 9223372036854775807_isize + (-9223372036854775808_isize);
_4 = [(-7227_i16),2027_i16];
_5 = 92_isize;
_5 = 9223372036854775807_isize & 113_isize;
_3 = _5 as f64;
_4 = [30085_i16,(-12804_i16)];
_5 = 9223372036854775807_isize + (-77_isize);
_5 = 9223372036854775807_isize + 83_isize;
_4 = [(-31507_i16),19411_i16];
_3 = (-3635458368830795176_i64) as f64;
_4 = [(-21172_i16),(-7349_i16)];
_3 = 334676996234900008349355830620061694057_u128 as f64;
_7 = [13989255446610574032_u64];
_6 = !_5;
Goto(bb4)
}
bb4 = {
_5 = _6 * _6;
_3 = 16684222102257920947_u64 as f64;
_8 = 1312504188_i32 >> _6;
_4 = [(-32266_i16),(-18642_i16)];
_10 = -_5;
_4 = [(-27407_i16),5677_i16];
_4 = [4795_i16,28475_i16];
_4 = [5657_i16,(-12700_i16)];
_7 = [2538128991119580545_u64];
_12 = _10 & _10;
_11 = (-74_i8) as isize;
_3 = _12 as f64;
_3 = 200_u8 as f64;
_3 = (-168529555767544280398966935939033955337_i128) as f64;
RET = core::ptr::addr_of_mut!(_8);
(*RET) = false as i32;
Goto(bb5)
}
bb5 = {
_7 = [11770456214519108230_u64];
(*RET) = (-118_i8) as i32;
_13 = 17708_u16 as i32;
(*RET) = _13;
(*RET) = -_13;
(*RET) = _13 ^ _13;
(*RET) = _13 * _13;
(*RET) = _13 * _13;
(*RET) = _13 ^ _13;
_3 = 90182804471247092059620962473700327635_u128 as f64;
_11 = _3 as isize;
Goto(bb6)
}
bb6 = {
_13 = (*RET) - (*RET);
(*RET) = true as i32;
(*RET) = _13 & _13;
(*RET) = _13 * _13;
RET = core::ptr::addr_of_mut!((*RET));
(*RET) = _3 as i32;
_10 = _12 ^ _12;
_10 = _12 + _12;
_4 = [16020_i16,20922_i16];
_15 = [239_u8,178_u8];
_14 = 13832960308727909716_usize as f32;
(*RET) = _10 as i32;
(*RET) = -_13;
(*RET) = _13 << _12;
(*RET) = 3621557816_u32 as i32;
Goto(bb7)
}
bb7 = {
_12 = _10 << (*RET);
_8 = _13 + _13;
(*RET) = 6567990945420912747_i64 as i32;
_6 = _12 << _13;
_17 = false;
(*RET) = _13 << _12;
_7 = [15782379184617713855_u64];
(*RET) = 244_u8 as i32;
_20.1 = Adt48::Variant2 { fld0: _14,fld1: 67_i8 };
_8 = -_13;
Goto(bb8)
}
bb8 = {
_6 = _11 + _10;
_19 = _14 * _14;
_6 = _12;
_22 = 38814083588823959610463599190928423809_u128;
_10 = _12 & _6;
(*RET) = _13;
_18 = (-7800277872991685000_i64) * 7623396702004161849_i64;
(*RET) = 6357780820578567620_u64 as i32;
place!(Field::<f32>(Variant(_20.1, 2), 0)) = _19 - _19;
(*RET) = _13 ^ _13;
_16 = _22 as u64;
_20.0.0 = core::ptr::addr_of_mut!((*RET));
_3 = _12 as f64;
_11 = _12;
_6 = !_11;
(*RET) = -_13;
(*RET) = -_13;
(*RET) = _13 ^ _13;
(*RET) = _13 ^ _13;
Goto(bb9)
}
bb9 = {
_23 = 45833_u16 + 51493_u16;
_20.0.1 = core::ptr::addr_of_mut!(_4);
(*RET) = _13 >> _10;
(*RET) = _13;
match _22 {
0 => bb10,
1 => bb11,
2 => bb12,
3 => bb13,
38814083588823959610463599190928423809 => bb15,
_ => bb14
}
}
bb10 = {
_2 = &_3;
_4 = [(-13637_i16),2965_i16];
_4 = [15250_i16,(-2965_i16)];
_4 = [(-22657_i16),(-19302_i16)];
_4 = [7212_i16,22261_i16];
_5 = 36398168648275714400602011631681434358_i128 as isize;
_3 = (-76_i8) as f64;
_4 = [7110_i16,(-351_i16)];
_5 = 9223372036854775807_isize;
_3 = 3547_u16 as f64;
_4 = [24787_i16,27945_i16];
_3 = 10197_i16 as f64;
_3 = (-1916232317_i32) as f64;
_4 = [(-19048_i16),25967_i16];
_5 = _3 as isize;
_4 = [17931_i16,2704_i16];
_3 = (-568932156_i32) as f64;
_4 = [(-16245_i16),(-29739_i16)];
_5 = (-9223372036854775808_isize) | 9223372036854775807_isize;
Goto(bb3)
}
bb11 = {
_4 = [(-14410_i16),31884_i16];
_5 = 9223372036854775807_isize + (-9223372036854775808_isize);
_4 = [(-7227_i16),2027_i16];
_5 = 92_isize;
_5 = 9223372036854775807_isize & 113_isize;
_3 = _5 as f64;
_4 = [30085_i16,(-12804_i16)];
_5 = 9223372036854775807_isize + (-77_isize);
_5 = 9223372036854775807_isize + 83_isize;
_4 = [(-31507_i16),19411_i16];
_3 = (-3635458368830795176_i64) as f64;
_4 = [(-21172_i16),(-7349_i16)];
_3 = 334676996234900008349355830620061694057_u128 as f64;
_7 = [13989255446610574032_u64];
_6 = !_5;
Goto(bb4)
}
bb12 = {
_13 = (*RET) - (*RET);
(*RET) = true as i32;
(*RET) = _13 & _13;
(*RET) = _13 * _13;
RET = core::ptr::addr_of_mut!((*RET));
(*RET) = _3 as i32;
_10 = _12 ^ _12;
_10 = _12 + _12;
_4 = [16020_i16,20922_i16];
_15 = [239_u8,178_u8];
_14 = 13832960308727909716_usize as f32;
(*RET) = _10 as i32;
(*RET) = -_13;
(*RET) = _13 << _12;
(*RET) = 3621557816_u32 as i32;
Goto(bb7)
}
bb13 = {
_7 = [11770456214519108230_u64];
(*RET) = (-118_i8) as i32;
_13 = 17708_u16 as i32;
(*RET) = _13;
(*RET) = -_13;
(*RET) = _13 ^ _13;
(*RET) = _13 * _13;
(*RET) = _13 * _13;
(*RET) = _13 ^ _13;
_3 = 90182804471247092059620962473700327635_u128 as f64;
_11 = _3 as isize;
Goto(bb6)
}
bb14 = {
_5 = _6 * _6;
_3 = 16684222102257920947_u64 as f64;
_8 = 1312504188_i32 >> _6;
_4 = [(-32266_i16),(-18642_i16)];
_10 = -_5;
_4 = [(-27407_i16),5677_i16];
_4 = [4795_i16,28475_i16];
_4 = [5657_i16,(-12700_i16)];
_7 = [2538128991119580545_u64];
_12 = _10 & _10;
_11 = (-74_i8) as isize;
_3 = _12 as f64;
_3 = 200_u8 as f64;
_3 = (-168529555767544280398966935939033955337_i128) as f64;
RET = core::ptr::addr_of_mut!(_8);
(*RET) = false as i32;
Goto(bb5)
}
bb15 = {
_24.0.1 = -Field::<f32>(Variant(_20.1, 2), 0);
(*RET) = _13 + _13;
(*RET) = _13 >> _10;
_24.0.1 = -_14;
(*RET) = _13 * _13;
_4 = [22400_i16,(-31722_i16)];
_24.0.1 = Field::<f32>(Variant(_20.1, 2), 0) + Field::<f32>(Variant(_20.1, 2), 0);
_21 = 232_u8 as isize;
(*RET) = _13;
_20.0.2 = 89_u8;
_8 = _16 as i32;
_32 = &_20.0.1;
(*RET) = _13 ^ _13;
_18 = 2794620625_u32 as i64;
_16 = 12545973047105811887_u64 & 1952355001298159302_u64;
Call(_28 = core::intrinsics::transmute(_10), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
(*RET) = _13;
place!(Field::<i8>(Variant(_20.1, 2), 1)) = (-102_i8) << _23;
_31 = -_24.0.1;
(*RET) = _13 | _13;
_10 = _23 as isize;
(*RET) = _13 | _13;
_31 = _14 * _24.0.1;
_24.0.2 = Adt18::Variant0 { fld0: _16,fld1: Field::<i8>(Variant(_20.1, 2), 1),fld2: _20.0.2 };
_37 = &_28;
_7 = [Field::<u64>(Variant(_24.0.2, 0), 0)];
(*RET) = _23 as i32;
_20.0.1 = core::ptr::addr_of_mut!(_4);
_30 = !_23;
Goto(bb17)
}
bb17 = {
_26 = _17 & _17;
(*RET) = !_13;
_26 = (*RET) > (*RET);
_37 = &_7;
_21 = -_12;
_26 = _23 > _23;
(*RET) = '\u{bc920}' as i32;
_31 = 8595062814092379290_usize as f32;
_19 = _24.0.1 * Field::<f32>(Variant(_20.1, 2), 0);
_20.0.2 = Field::<u64>(Variant(_24.0.2, 0), 0) as u8;
_35 = '\u{1a4ff}';
(*RET) = !_13;
_40 = !_11;
_25 = (*RET) ^ (*RET);
_25 = (*RET);
place!(Field::<i8>(Variant(_24.0.2, 0), 1)) = Field::<i8>(Variant(_20.1, 2), 1) - Field::<i8>(Variant(_20.1, 2), 1);
(*RET) = -_25;
(*RET) = _13 - _13;
(*RET) = _25;
_24.0.1 = _19;
Goto(bb18)
}
bb18 = {
_22 = 24449254696854702162490138220123816797_u128;
_36 = _4;
(*RET) = _25 | _25;
_42 = _20.0.2 / Field::<u8>(Variant(_24.0.2, 0), 2);
place!(Field::<i8>(Variant(_24.0.2, 0), 1)) = 127062953631374713709004436695016722396_i128 as i8;
_30 = !_23;
place!(Field::<u8>(Variant(_24.0.2, 0), 2)) = _20.0.2;
_37 = &_28;
_41 = &_2;
_6 = 333620384_u32 as isize;
(*RET) = _26 as i32;
_24.0.1 = _19;
_44 = Field::<f32>(Variant(_20.1, 2), 0) + _24.0.1;
_40 = _5 - _12;
(*RET) = _35 as i32;
_16 = Field::<u64>(Variant(_24.0.2, 0), 0) + Field::<u64>(Variant(_24.0.2, 0), 0);
_35 = '\u{61650}';
_18 = 35077477571613292_i64 - 6068927376191006310_i64;
Goto(bb19)
}
bb19 = {
(*RET) = _13 + _25;
(*RET) = _42 as i32;
_14 = _44 * _19;
_4 = _36;
place!(Field::<i8>(Variant(_20.1, 2), 1)) = 2953703158_u32 as i8;
(*RET) = _25;
_24.0.0 = (*RET) << (*RET);
place!(Field::<i8>(Variant(_20.1, 2), 1)) = _42 as i8;
(*RET) = _25;
_34 = !764319704_u32;
_8 = _25 & _24.0.0;
_20.0.1 = core::ptr::addr_of_mut!(_36);
_27 = _3 as isize;
_22 = !312755372892977700560964996980610394267_u128;
(*RET) = _13 - _25;
(*RET) = _24.0.0;
_24.0.2 = Adt18::Variant0 { fld0: _16,fld1: Field::<i8>(Variant(_20.1, 2), 1),fld2: _20.0.2 };
(*RET) = _24.0.0;
_23 = _3 as u16;
_11 = (*RET) as isize;
_28 = [Field::<u64>(Variant(_24.0.2, 0), 0)];
Goto(bb20)
}
bb20 = {
_17 = (*RET) > _24.0.0;
_37 = &_7;
_48 = (123416822842215040598541149516221811985_i128,);
(*RET) = _23 as i32;
_45 = core::ptr::addr_of_mut!(_20.0.0);
place!(Field::<i8>(Variant(_24.0.2, 0), 1)) = Field::<i8>(Variant(_20.1, 2), 1);
_47 = core::ptr::addr_of_mut!((*RET));
_24.0.0 = (*RET);
RET = Move((*_45));
_39 = !_17;
(*_47) = _25 << _18;
(*_45) = core::ptr::addr_of_mut!((*_47));
(*_45) = core::ptr::addr_of_mut!((*_47));
_50.0 = [_17,_26,_17,_26];
(*_45) = core::ptr::addr_of_mut!((*_47));
Goto(bb21)
}
bb21 = {
Call(_52 = dump_var(4_usize, 27_usize, Move(_27), 18_usize, Move(_18), 23_usize, Move(_23), 30_usize, Move(_30)), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
Call(_52 = dump_var(4_usize, 40_usize, Move(_40), 36_usize, Move(_36), 7_usize, Move(_7), 10_usize, Move(_10)), ReturnTo(bb23), UnwindUnreachable())
}
bb23 = {
Call(_52 = dump_var(4_usize, 11_usize, Move(_11), 42_usize, Move(_42), 28_usize, Move(_28), 21_usize, Move(_21)), ReturnTo(bb24), UnwindUnreachable())
}
bb24 = {
Call(_52 = dump_var(4_usize, 25_usize, Move(_25), 8_usize, Move(_8), 53_usize, _53, 53_usize, _53), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn5(mut _1: *const &'static mut i8,mut _2: &'static f64,mut _3: f64,mut _4: f64,mut _5: f64,mut _6: f64,mut _7: f64,mut _8: f64,mut _9: f64,mut _10: f64) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _11: &'static mut *mut [u64; 1];
let _12: f64;
let _13: (i16,);
let _14: Adt41;
let _15: Adt41;
let _16: u8;
let _17: usize;
let _18: &'static mut *mut *mut i32;
let _19: &'static Adt51;
let _20: bool;
let _21: &'static mut &'static mut i8;
let _22: isize;
let _23: isize;
let _24: bool;
let _25: isize;
let _26: [bool; 4];
let _27: usize;
let _28: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _29: *mut [i16; 2];
let _30: *mut i32;
let _31: *mut *mut i32;
let _32: ([bool; 4], (i32, f32, Adt18, Adt18));
let _33: *mut [u64; 1];
let _34: *mut (&'static mut *mut [u64; 1], u128);
let _35: &'static mut (*mut i32, *mut [i16; 2], u8);
let _36: ((i32, f32, Adt18, Adt18),);
let _37: f64;
let _38: u8;
let _39: i32;
let _40: char;
let _41: *mut *mut i32;
let _42: u64;
let _43: u16;
let _44: &'static mut (i32, f32, Adt18, Adt18);
let _45: usize;
let _46: *const [i128; 4];
let _47: isize;
let _48: [u64; 1];
let _49: &'static mut (*mut i32, *mut [i16; 2], u8);
let _50: isize;
let _51: ((*const *mut [i16; 2], i8, usize), Adt31);
let _52: *mut [u64; 1];
let _53: &'static [i128; 4];
let _54: &'static mut *mut *mut i32;
let _55: Adt23;
let _56: f64;
let _57: bool;
let _58: &'static u32;
let _59: bool;
let _60: f32;
let _61: f64;
let _62: (*const *mut [i16; 2], i8, usize);
let _63: [char; 2];
let _64: &'static *mut [bool; 4];
let _65: &'static mut (*mut i32, *mut [i16; 2], u8);
let _66: [bool; 4];
let _67: ([bool; 4], (i32, f32, Adt18, Adt18));
let _68: isize;
let _69: f64;
let _70: [u8; 5];
let _71: isize;
let _72: i64;
let _73: &'static [i128; 4];
let _74: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _75: isize;
let _76: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _77: *mut (&'static mut *mut [u64; 1], u128);
let _78: ();
let _79: ();
{
RET = [(-5278_i16),8718_i16];
_3 = _4 * _6;
_4 = _6 - _6;
_7 = (-26260411609528146196184411362037926241_i128) as f64;
_8 = _10 * _10;
_7 = 5829_i16 as f64;
_2 = &_6;
_7 = (-42_i8) as f64;
_8 = _10 - (*_2);
_10 = (*_2) - _5;
RET = [18707_i16,(-21733_i16)];
_3 = 3371503691178997139_i64 as f64;
_4 = -(*_2);
_2 = &_10;
_9 = (*_2) + (*_2);
Call(_8 = fn6(Move(_1), Move(_2), (*_2), (*_2), (*_2), (*_2), (*_2), RET, (*_2), _6, _10), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_3 = -_4;
RET = [(-6008_i16),(-24601_i16)];
_13.0 = true as i16;
_10 = _8 * _8;
_8 = 42260_u16 as f64;
_2 = &_4;
RET = [_13.0,_13.0];
_5 = -_10;
_12 = (*_2) * _5;
_6 = _12 + _10;
_13 = (12924_i16,);
_2 = &_5;
RET = [_13.0,_13.0];
_6 = (*_2) + (*_2);
Goto(bb2)
}
bb2 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_12 = _6 * (*_2);
_13 = (14786_i16,);
_13.0 = (-28356_i16) & 29773_i16;
_12 = (*_2) - (*_2);
_12 = _9 + (*_2);
_17 = !5_usize;
_7 = 167373616552379920165975648813203984155_u128 as f64;
_12 = 222254440512036379212133641431485495475_u128 as f64;
_8 = 234_u8 as f64;
_10 = (*_2) - (*_2);
_5 = -(*_2);
_3 = _10 * (*_2);
_2 = &_6;
_6 = -_9;
_17 = 6497603035381501430_usize << _13.0;
_5 = _10 - _10;
_6 = -_4;
_10 = _13.0 as f64;
_2 = &_9;
Goto(bb4)
}
bb4 = {
_12 = (*_2) - (*_2);
_13.0 = (-32617_i16) * (-5714_i16);
_7 = _5 + (*_2);
_16 = (-9223372036854775808_isize) as u8;
_5 = (*_2);
_7 = -(*_2);
_20 = !true;
_9 = _7 * _4;
_7 = _12;
_22 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_5 = _4 * _6;
_8 = -_7;
_10 = _3 - _4;
_6 = _9 + _4;
_23 = _22 * _22;
_27 = !_17;
Goto(bb5)
}
bb5 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb6 = {
_22 = _23 - _23;
_2 = &_10;
_25 = -_22;
_9 = _3;
_28.0.2 = _16 >> _13.0;
_3 = _7;
_17 = !_27;
_13 = (12530_i16,);
_8 = -_6;
RET = [_13.0,_13.0];
_16 = _28.0.2 << _25;
_26 = [_20,_20,_20,_20];
_7 = 52_i8 as f64;
_31 = core::ptr::addr_of_mut!(_30);
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_30) = !(-1968116412_i32);
Goto(bb7)
}
bb7 = {
(*_31) = core::ptr::addr_of_mut!((*_30));
_27 = _17 ^ _17;
(*_30) = 1476930577_i32 << _23;
match _13.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
12530 => bb10,
_ => bb9
}
}
bb8 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb9 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb10 = {
(*_30) = (-278336183_i32);
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_31) = core::ptr::addr_of_mut!((*_30));
_9 = 5054685318003416205_u64 as f64;
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_30) = 1563458151_i32 >> _25;
_30 = core::ptr::addr_of_mut!(_32.1.0);
(*_30) = (-730932174_i32) + (-2019407977_i32);
match _13.0 {
12530 => bb12,
_ => bb11
}
}
bb11 = {
_12 = (*_2) - (*_2);
_13.0 = (-32617_i16) * (-5714_i16);
_7 = _5 + (*_2);
_16 = (-9223372036854775808_isize) as u8;
_5 = (*_2);
_7 = -(*_2);
_20 = !true;
_9 = _7 * _4;
_7 = _12;
_22 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_5 = _4 * _6;
_8 = -_7;
_10 = _3 - _4;
_6 = _9 + _4;
_23 = _22 * _22;
_27 = !_17;
Goto(bb5)
}
bb12 = {
(*_31) = core::ptr::addr_of_mut!((*_30));
_36.0.1 = _13.0 as f32;
(*_31) = core::ptr::addr_of_mut!((*_30));
match _13.0 {
0 => bb10,
1 => bb5,
2 => bb7,
3 => bb6,
4 => bb13,
5 => bb14,
12530 => bb16,
_ => bb15
}
}
bb13 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb14 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb15 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb16 = {
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_30) = (-1716800692_i32);
_37 = _6 + _12;
_31 = core::ptr::addr_of_mut!((*_31));
_9 = _8 * _5;
_10 = _9 + _37;
_28.0.0 = core::ptr::addr_of_mut!(_36.0.0);
(*_30) = _5 as i32;
(*_31) = core::ptr::addr_of_mut!((*_30));
_36.0.0 = (*_30) | (*_30);
_28.0.1 = core::ptr::addr_of_mut!(RET);
_29 = core::ptr::addr_of_mut!(RET);
_32.0 = [_20,_20,_20,_20];
(*_30) = _36.0.0 * _36.0.0;
(*_31) = core::ptr::addr_of_mut!((*_30));
_12 = _4 - _5;
(*_29) = [_13.0,_13.0];
_22 = _25;
_31 = core::ptr::addr_of_mut!((*_31));
(*_29) = [_13.0,_13.0];
(*_31) = Move(_28.0.0);
(*_29) = [_13.0,_13.0];
match _13.0 {
0 => bb8,
1 => bb2,
12530 => bb18,
_ => bb17
}
}
bb17 = {
(*_30) = (-278336183_i32);
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_31) = core::ptr::addr_of_mut!((*_30));
_9 = 5054685318003416205_u64 as f64;
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_30) = 1563458151_i32 >> _25;
_30 = core::ptr::addr_of_mut!(_32.1.0);
(*_30) = (-730932174_i32) + (-2019407977_i32);
match _13.0 {
12530 => bb12,
_ => bb11
}
}
bb18 = {
_4 = _12 - _6;
_37 = -_8;
_29 = core::ptr::addr_of_mut!((*_29));
_28.0 = (Move((*_31)), Move(_29), _16);
_20 = _25 == _22;
_32.1.2 = Adt18::Variant0 { fld0: 2373022304721029511_u64,fld1: (-122_i8),fld2: _16 };
_38 = _16 ^ Field::<u8>(Variant(_32.1.2, 0), 2);
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_31) = core::ptr::addr_of_mut!((*_30));
_18 = &mut _31;
_28.0.0 = core::ptr::addr_of_mut!((*_30));
(*_18) = core::ptr::addr_of_mut!(_30);
(*_30) = _36.0.0 - _36.0.0;
(*_18) = core::ptr::addr_of_mut!(_30);
_32.1.1 = 2621912260_u32 as f32;
place!(Field::<u8>(Variant(_32.1.2, 0), 2)) = 2710866267_u32 as u8;
_35 = &mut _28.0;
(*_18) = core::ptr::addr_of_mut!((*_35).0);
_32.1.3 = Adt18::Variant1 { fld0: 5944620423802836549_u64,fld1: _17,fld2: _32.1.1,fld3: 4542_u16,fld4: 224409971322526167850777399660958034408_u128,fld5: (*_30),fld6: _32.0 };
(*_18) = core::ptr::addr_of_mut!((*_35).0);
_7 = _4 - _9;
(*_30) = _36.0.0;
_40 = '\u{7cded}';
(*_35).0 = core::ptr::addr_of_mut!((*_30));
(*_35).1 = core::ptr::addr_of_mut!(RET);
(*_30) = -_36.0.0;
match _13.0 {
0 => bb1,
1 => bb2,
2 => bb11,
3 => bb16,
4 => bb14,
5 => bb6,
12530 => bb19,
_ => bb8
}
}
bb19 = {
(*_35).1 = core::ptr::addr_of_mut!(RET);
_29 = core::ptr::addr_of_mut!(RET);
(*_35).1 = core::ptr::addr_of_mut!((*_29));
place!(Field::<u64>(Variant(_32.1.3, 1), 0)) = 4542237545703056472_u64 + 7423885668554873696_u64;
place!(Field::<u16>(Variant(_32.1.3, 1), 3)) = !30567_u16;
(*_35) = (Move(_30), Move(_29), _38);
_40 = '\u{78702}';
_4 = _3 * _7;
_36.0.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_32.1.3, 1), 0),fld1: _27,fld2: Field::<f32>(Variant(_32.1.3, 1), 2),fld3: Field::<u16>(Variant(_32.1.3, 1), 3),fld4: 233271483910407424092327811058261825959_u128,fld5: Field::<i32>(Variant(_32.1.3, 1), 5),fld6: _32.0 };
place!(Field::<u128>(Variant(_32.1.3, 1), 4)) = !202018181321082755326742677019342929940_u128;
(*_18) = core::ptr::addr_of_mut!((*_35).0);
place!(Field::<u8>(Variant(_32.1.2, 0), 2)) = (*_35).2 | (*_35).2;
match _13.0 {
12530 => bb20,
_ => bb13
}
}
bb20 = {
place!(Field::<[bool; 4]>(Variant(_36.0.3, 1), 6)) = _32.0;
(*_35).1 = core::ptr::addr_of_mut!(RET);
(*_35).2 = Field::<u8>(Variant(_32.1.2, 0), 2) >> _32.1.0;
(*_35).0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_32.1.3, 1), 5)));
_38 = (*_35).2;
match _13.0 {
0 => bb7,
1 => bb11,
2 => bb14,
3 => bb9,
12530 => bb21,
_ => bb8
}
}
bb21 = {
_32.0 = [_20,_20,_20,_20];
place!(Field::<i8>(Variant(_32.1.2, 0), 1)) = 0_i8;
_32.1.1 = Field::<usize>(Variant(_32.1.3, 1), 1) as f32;
(*_35).1 = core::ptr::addr_of_mut!(RET);
(*_35).0 = core::ptr::addr_of_mut!(_32.1.0);
_23 = _25 << (*_35).2;
(*_35).0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_32.1.3, 1), 5)));
(*_35).2 = Field::<u8>(Variant(_32.1.2, 0), 2) - _38;
(*_18) = core::ptr::addr_of_mut!((*_35).0);
place!(Field::<usize>(Variant(_36.0.3, 1), 1)) = _12 as usize;
_36.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_36.0.3, 1), 0),fld1: Field::<usize>(Variant(_36.0.3, 1), 1),fld2: _32.1.1,fld3: Field::<u16>(Variant(_36.0.3, 1), 3),fld4: Field::<u128>(Variant(_32.1.3, 1), 4),fld5: _32.1.0,fld6: Field::<[bool; 4]>(Variant(_32.1.3, 1), 6) };
(*_35).1 = core::ptr::addr_of_mut!(RET);
_13 = ((-29500_i16),);
(*_35).0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_32.1.3, 1), 5)));
(*_18) = core::ptr::addr_of_mut!((*_35).0);
(*_35).2 = Field::<u8>(Variant(_32.1.2, 0), 2) | Field::<u8>(Variant(_32.1.2, 0), 2);
(*_35).1 = core::ptr::addr_of_mut!(RET);
place!(Field::<u64>(Variant(_32.1.2, 0), 0)) = Field::<u64>(Variant(_36.0.2, 1), 0) & Field::<u64>(Variant(_32.1.3, 1), 0);
_36.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_36.0.2, 1), 0),fld1: Field::<i8>(Variant(_32.1.2, 0), 1),fld2: (*_35).2 };
(*_35).0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_32.1.3, 1), 5)));
(*_35).2 = Field::<u64>(Variant(_32.1.2, 0), 0) as u8;
Goto(bb22)
}
bb22 = {
place!(Field::<i32>(Variant(_32.1.3, 1), 5)) = Field::<i32>(Variant(_36.0.2, 1), 5) ^ _32.1.0;
_51.1.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_32.1.3, 1), 3),fld1: 3165361814_u32,fld2: Field::<u64>(Variant(_32.1.2, 0), 0) };
_51.1.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_32.1.3, 1), 0),fld1: Field::<i8>(Variant(_32.1.2, 0), 1),fld2: Field::<u8>(Variant(_32.1.2, 0), 2) };
(*_35).0 = core::ptr::addr_of_mut!(_36.0.0);
_32.1 = (_36.0.0, Field::<f32>(Variant(_36.0.2, 1), 2), Move(_36.0.3), Move(_36.0.3));
place!(Field::<u32>(Variant(_51.1.fld2, 1), 1)) = 4136145893_u32 ^ 2472280621_u32;
_36.0 = Move(_32.1);
_52 = core::ptr::addr_of_mut!(_48);
_33 = core::ptr::addr_of_mut!((*_52));
_29 = core::ptr::addr_of_mut!(RET);
_32.1.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_36.0.2, 0), 0),fld1: Field::<i8>(Variant(_51.1.fld4, 0), 1),fld2: Field::<u8>(Variant(_36.0.3, 0), 2) };
_45 = _17;
(*_33) = [Field::<u64>(Variant(_51.1.fld2, 1), 2)];
_41 = Move((*_18));
match Field::<i8>(Variant(_51.1.fld4, 0), 1) {
1 => bb2,
2 => bb21,
3 => bb23,
4 => bb24,
0 => bb26,
_ => bb25
}
}
bb23 = {
_12 = (*_2) - (*_2);
_13.0 = (-32617_i16) * (-5714_i16);
_7 = _5 + (*_2);
_16 = (-9223372036854775808_isize) as u8;
_5 = (*_2);
_7 = -(*_2);
_20 = !true;
_9 = _7 * _4;
_7 = _12;
_22 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_5 = _4 * _6;
_8 = -_7;
_10 = _3 - _4;
_6 = _9 + _4;
_23 = _22 * _22;
_27 = !_17;
Goto(bb5)
}
bb24 = {
_22 = _23 - _23;
_2 = &_10;
_25 = -_22;
_9 = _3;
_28.0.2 = _16 >> _13.0;
_3 = _7;
_17 = !_27;
_13 = (12530_i16,);
_8 = -_6;
RET = [_13.0,_13.0];
_16 = _28.0.2 << _25;
_26 = [_20,_20,_20,_20];
_7 = 52_i8 as f64;
_31 = core::ptr::addr_of_mut!(_30);
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_30) = !(-1968116412_i32);
Goto(bb7)
}
bb25 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb26 = {
(*_35).0 = core::ptr::addr_of_mut!(_36.0.0);
_51.1.fld3.0 = _40 as i128;
_13 = (21255_i16,);
(*_29) = [_13.0,_13.0];
_56 = Field::<u16>(Variant(_51.1.fld2, 1), 0) as f64;
_30 = Move((*_35).0);
_36.0.0 = 507244449_i32 ^ 827950922_i32;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_33) = [Field::<u64>(Variant(_51.1.fld4, 0), 0)];
(*_29) = [_13.0,_13.0];
_51.1.fld5 = _36.0.1 - _36.0.1;
_54 = &mut _41;
_7 = _36.0.0 as f64;
_32.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_51.1.fld2, 1), 2),fld1: _27,fld2: _36.0.1,fld3: Field::<u16>(Variant(_51.1.fld2, 1), 0),fld4: 91412460434658619557587597302384023041_u128,fld5: _36.0.0,fld6: _32.0 };
_25 = 131345250923433587552614308158704601835_u128 as isize;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_52) = [Field::<u64>(Variant(_36.0.3, 0), 0)];
(*_35).2 = Field::<u8>(Variant(_32.1.3, 0), 2);
(*_29) = [_13.0,_13.0];
(*_35).1 = core::ptr::addr_of_mut!(RET);
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb22,
2 => bb16,
3 => bb27,
4 => bb28,
0 => bb30,
_ => bb29
}
}
bb27 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb28 = {
place!(Field::<i32>(Variant(_32.1.3, 1), 5)) = Field::<i32>(Variant(_36.0.2, 1), 5) ^ _32.1.0;
_51.1.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_32.1.3, 1), 3),fld1: 3165361814_u32,fld2: Field::<u64>(Variant(_32.1.2, 0), 0) };
_51.1.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_32.1.3, 1), 0),fld1: Field::<i8>(Variant(_32.1.2, 0), 1),fld2: Field::<u8>(Variant(_32.1.2, 0), 2) };
(*_35).0 = core::ptr::addr_of_mut!(_36.0.0);
_32.1 = (_36.0.0, Field::<f32>(Variant(_36.0.2, 1), 2), Move(_36.0.3), Move(_36.0.3));
place!(Field::<u32>(Variant(_51.1.fld2, 1), 1)) = 4136145893_u32 ^ 2472280621_u32;
_36.0 = Move(_32.1);
_52 = core::ptr::addr_of_mut!(_48);
_33 = core::ptr::addr_of_mut!((*_52));
_29 = core::ptr::addr_of_mut!(RET);
_32.1.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_36.0.2, 0), 0),fld1: Field::<i8>(Variant(_51.1.fld4, 0), 1),fld2: Field::<u8>(Variant(_36.0.3, 0), 2) };
_45 = _17;
(*_33) = [Field::<u64>(Variant(_51.1.fld2, 1), 2)];
_41 = Move((*_18));
match Field::<i8>(Variant(_51.1.fld4, 0), 1) {
1 => bb2,
2 => bb21,
3 => bb23,
4 => bb24,
0 => bb26,
_ => bb25
}
}
bb29 = {
(*_31) = core::ptr::addr_of_mut!((*_30));
_27 = _17 ^ _17;
(*_30) = 1476930577_i32 << _23;
match _13.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb8,
12530 => bb10,
_ => bb9
}
}
bb30 = {
_58 = &place!(Field::<u32>(Variant(_51.1.fld2, 1), 1));
_42 = Field::<u64>(Variant(_36.0.3, 0), 0) ^ Field::<u64>(Variant(_51.1.fld2, 1), 2);
_55 = _51.1.fld2;
(*_52) = [Field::<u64>(Variant(_55, 1), 2)];
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb23,
2 => bb31,
3 => bb32,
4 => bb33,
0 => bb35,
_ => bb34
}
}
bb31 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb32 = {
_4 = _12 - _6;
_37 = -_8;
_29 = core::ptr::addr_of_mut!((*_29));
_28.0 = (Move((*_31)), Move(_29), _16);
_20 = _25 == _22;
_32.1.2 = Adt18::Variant0 { fld0: 2373022304721029511_u64,fld1: (-122_i8),fld2: _16 };
_38 = _16 ^ Field::<u8>(Variant(_32.1.2, 0), 2);
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_31) = core::ptr::addr_of_mut!((*_30));
_18 = &mut _31;
_28.0.0 = core::ptr::addr_of_mut!((*_30));
(*_18) = core::ptr::addr_of_mut!(_30);
(*_30) = _36.0.0 - _36.0.0;
(*_18) = core::ptr::addr_of_mut!(_30);
_32.1.1 = 2621912260_u32 as f32;
place!(Field::<u8>(Variant(_32.1.2, 0), 2)) = 2710866267_u32 as u8;
_35 = &mut _28.0;
(*_18) = core::ptr::addr_of_mut!((*_35).0);
_32.1.3 = Adt18::Variant1 { fld0: 5944620423802836549_u64,fld1: _17,fld2: _32.1.1,fld3: 4542_u16,fld4: 224409971322526167850777399660958034408_u128,fld5: (*_30),fld6: _32.0 };
(*_18) = core::ptr::addr_of_mut!((*_35).0);
_7 = _4 - _9;
(*_30) = _36.0.0;
_40 = '\u{7cded}';
(*_35).0 = core::ptr::addr_of_mut!((*_30));
(*_35).1 = core::ptr::addr_of_mut!(RET);
(*_30) = -_36.0.0;
match _13.0 {
0 => bb1,
1 => bb2,
2 => bb11,
3 => bb16,
4 => bb14,
5 => bb6,
12530 => bb19,
_ => bb8
}
}
bb33 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb34 = {
(*_35).0 = core::ptr::addr_of_mut!(_36.0.0);
_51.1.fld3.0 = _40 as i128;
_13 = (21255_i16,);
(*_29) = [_13.0,_13.0];
_56 = Field::<u16>(Variant(_51.1.fld2, 1), 0) as f64;
_30 = Move((*_35).0);
_36.0.0 = 507244449_i32 ^ 827950922_i32;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_33) = [Field::<u64>(Variant(_51.1.fld4, 0), 0)];
(*_29) = [_13.0,_13.0];
_51.1.fld5 = _36.0.1 - _36.0.1;
_54 = &mut _41;
_7 = _36.0.0 as f64;
_32.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_51.1.fld2, 1), 2),fld1: _27,fld2: _36.0.1,fld3: Field::<u16>(Variant(_51.1.fld2, 1), 0),fld4: 91412460434658619557587597302384023041_u128,fld5: _36.0.0,fld6: _32.0 };
_25 = 131345250923433587552614308158704601835_u128 as isize;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_52) = [Field::<u64>(Variant(_36.0.3, 0), 0)];
(*_35).2 = Field::<u8>(Variant(_32.1.3, 0), 2);
(*_29) = [_13.0,_13.0];
(*_35).1 = core::ptr::addr_of_mut!(RET);
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb22,
2 => bb16,
3 => bb27,
4 => bb28,
0 => bb30,
_ => bb29
}
}
bb35 = {
_51.1.fld4 = Move(_36.0.3);
_38 = (*_35).2 - (*_35).2;
(*_35).2 = Field::<u8>(Variant(_36.0.2, 0), 2) >> _38;
place!(Field::<i8>(Variant(_51.1.fld4, 0), 1)) = Field::<i8>(Variant(_36.0.2, 0), 1) + Field::<i8>(Variant(_32.1.3, 0), 1);
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb10,
2 => bb36,
3 => bb37,
0 => bb39,
_ => bb38
}
}
bb36 = {
_12 = (*_2) - (*_2);
_13.0 = (-32617_i16) * (-5714_i16);
_7 = _5 + (*_2);
_16 = (-9223372036854775808_isize) as u8;
_5 = (*_2);
_7 = -(*_2);
_20 = !true;
_9 = _7 * _4;
_7 = _12;
_22 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_5 = _4 * _6;
_8 = -_7;
_10 = _3 - _4;
_6 = _9 + _4;
_23 = _22 * _22;
_27 = !_17;
Goto(bb5)
}
bb37 = {
(*_35).1 = core::ptr::addr_of_mut!(RET);
_29 = core::ptr::addr_of_mut!(RET);
(*_35).1 = core::ptr::addr_of_mut!((*_29));
place!(Field::<u64>(Variant(_32.1.3, 1), 0)) = 4542237545703056472_u64 + 7423885668554873696_u64;
place!(Field::<u16>(Variant(_32.1.3, 1), 3)) = !30567_u16;
(*_35) = (Move(_30), Move(_29), _38);
_40 = '\u{78702}';
_4 = _3 * _7;
_36.0.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_32.1.3, 1), 0),fld1: _27,fld2: Field::<f32>(Variant(_32.1.3, 1), 2),fld3: Field::<u16>(Variant(_32.1.3, 1), 3),fld4: 233271483910407424092327811058261825959_u128,fld5: Field::<i32>(Variant(_32.1.3, 1), 5),fld6: _32.0 };
place!(Field::<u128>(Variant(_32.1.3, 1), 4)) = !202018181321082755326742677019342929940_u128;
(*_18) = core::ptr::addr_of_mut!((*_35).0);
place!(Field::<u8>(Variant(_32.1.2, 0), 2)) = (*_35).2 | (*_35).2;
match _13.0 {
12530 => bb20,
_ => bb13
}
}
bb38 = {
_22 = _23 - _23;
_2 = &_10;
_25 = -_22;
_9 = _3;
_28.0.2 = _16 >> _13.0;
_3 = _7;
_17 = !_27;
_13 = (12530_i16,);
_8 = -_6;
RET = [_13.0,_13.0];
_16 = _28.0.2 << _25;
_26 = [_20,_20,_20,_20];
_7 = 52_i8 as f64;
_31 = core::ptr::addr_of_mut!(_30);
(*_31) = core::ptr::addr_of_mut!(_32.1.0);
(*_31) = core::ptr::addr_of_mut!((*_30));
(*_30) = !(-1968116412_i32);
Goto(bb7)
}
bb39 = {
(*_52) = [Field::<u64>(Variant(_55, 1), 2)];
_50 = _40 as isize;
_8 = _12 * _12;
_51.0.1 = -Field::<i8>(Variant(_51.1.fld4, 0), 1);
_43 = !Field::<u16>(Variant(_32.1.2, 1), 3);
(*_35).1 = core::ptr::addr_of_mut!((*_29));
(*_52) = [Field::<u64>(Variant(_51.1.fld2, 1), 2)];
place!(Field::<f32>(Variant(_32.1.2, 1), 2)) = Field::<i8>(Variant(_51.1.fld4, 0), 1) as f32;
(*_29) = [_13.0,_13.0];
_62.1 = Field::<i32>(Variant(_32.1.2, 1), 5) as i8;
(*_35).1 = core::ptr::addr_of_mut!((*_29));
(*_35).1 = core::ptr::addr_of_mut!((*_29));
place!(Field::<f32>(Variant(_32.1.2, 1), 2)) = _10 as f32;
(*_54) = core::ptr::addr_of_mut!(_30);
_32.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_55, 1), 2),fld1: _27,fld2: _36.0.1,fld3: Field::<u16>(Variant(_55, 1), 0),fld4: 163376363607299198626580407531989675326_u128,fld5: _36.0.0,fld6: _32.0 };
_36.0 = (Field::<i32>(Variant(_32.1.2, 1), 5), _51.1.fld5, Move(_51.1.fld4), Move(_51.1.fld4));
(*_54) = core::ptr::addr_of_mut!(_30);
(*_35).2 = Field::<u8>(Variant(_36.0.2, 0), 2) * _38;
_39 = -Field::<i32>(Variant(_32.1.2, 1), 5);
(*_52) = [Field::<u64>(Variant(_51.1.fld2, 1), 2)];
(*_29) = [_13.0,_13.0];
place!(Field::<u64>(Variant(_36.0.3, 0), 0)) = Field::<u64>(Variant(_55, 1), 2) >> (*_35).2;
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb31,
2 => bb26,
3 => bb4,
4 => bb40,
5 => bb41,
0 => bb43,
_ => bb42
}
}
bb40 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb41 = {
(*_35).0 = core::ptr::addr_of_mut!(_36.0.0);
_51.1.fld3.0 = _40 as i128;
_13 = (21255_i16,);
(*_29) = [_13.0,_13.0];
_56 = Field::<u16>(Variant(_51.1.fld2, 1), 0) as f64;
_30 = Move((*_35).0);
_36.0.0 = 507244449_i32 ^ 827950922_i32;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_33) = [Field::<u64>(Variant(_51.1.fld4, 0), 0)];
(*_29) = [_13.0,_13.0];
_51.1.fld5 = _36.0.1 - _36.0.1;
_54 = &mut _41;
_7 = _36.0.0 as f64;
_32.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_51.1.fld2, 1), 2),fld1: _27,fld2: _36.0.1,fld3: Field::<u16>(Variant(_51.1.fld2, 1), 0),fld4: 91412460434658619557587597302384023041_u128,fld5: _36.0.0,fld6: _32.0 };
_25 = 131345250923433587552614308158704601835_u128 as isize;
(*_29) = [_13.0,_13.0];
(*_29) = [_13.0,_13.0];
(*_52) = [Field::<u64>(Variant(_36.0.3, 0), 0)];
(*_35).2 = Field::<u8>(Variant(_32.1.3, 0), 2);
(*_29) = [_13.0,_13.0];
(*_35).1 = core::ptr::addr_of_mut!(RET);
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb22,
2 => bb16,
3 => bb27,
4 => bb28,
0 => bb30,
_ => bb29
}
}
bb42 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb43 = {
place!(Field::<u128>(Variant(_32.1.2, 1), 4)) = 180087008796659229238796196649781889797_u128 * 278652150118278533694972414437045462301_u128;
place!(Field::<u32>(Variant(_51.1.fld2, 1), 1)) = !Field::<u32>(Variant(_55, 1), 1);
_6 = Field::<i32>(Variant(_32.1.2, 1), 5) as f64;
(*_29) = [_13.0,_13.0];
_51.1.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_32.1.2, 1), 3),fld1: Field::<u32>(Variant(_55, 1), 1),fld2: Field::<u64>(Variant(_36.0.3, 0), 0) };
_62.0 = core::ptr::addr_of!((*_35).1);
Call((*_35).2 = core::intrinsics::transmute(Field::<u8>(Variant(_36.0.2, 0), 2)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
(*_29) = [_13.0,_13.0];
place!(Field::<u16>(Variant(_55, 1), 0)) = _43 ^ Field::<u16>(Variant(_51.1.fld2, 1), 0);
_62.2 = _27;
(*_35).2 = Field::<u8>(Variant(_36.0.3, 0), 2) >> _16;
_32.1 = (_36.0.0, _51.1.fld5, Move(_36.0.3), Move(_36.0.3));
_63 = [_40,_40];
(*_54) = core::ptr::addr_of_mut!(_30);
_67.1.1 = _36.0.1 + _51.1.fld5;
_12 = _4 + _5;
_60 = -_36.0.1;
place!(Field::<u32>(Variant(_51.1.fld2, 1), 1)) = !Field::<u32>(Variant(_55, 1), 1);
(*_35).1 = core::ptr::addr_of_mut!((*_29));
_61 = _43 as f64;
_59 = _20 & _20;
(*_29) = [_13.0,_13.0];
(*_54) = core::ptr::addr_of_mut!(_30);
place!(Field::<u8>(Variant(_36.0.2, 0), 2)) = (*_35).2 | _38;
_36.0.0 = _32.1.0;
(*_54) = core::ptr::addr_of_mut!(_30);
match _13.0 {
0 => bb4,
1 => bb45,
2 => bb46,
3 => bb47,
4 => bb48,
5 => bb49,
6 => bb50,
21255 => bb52,
_ => bb51
}
}
bb45 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb46 = {
_12 = (*_2) - (*_2);
_13.0 = (-32617_i16) * (-5714_i16);
_7 = _5 + (*_2);
_16 = (-9223372036854775808_isize) as u8;
_5 = (*_2);
_7 = -(*_2);
_20 = !true;
_9 = _7 * _4;
_7 = _12;
_22 = (-9223372036854775808_isize) - 9223372036854775807_isize;
_5 = _4 * _6;
_8 = -_7;
_10 = _3 - _4;
_6 = _9 + _4;
_23 = _22 * _22;
_27 = !_17;
Goto(bb5)
}
bb47 = {
_12 = _6 * (*_2);
_13 = (14786_i16,);
_13.0 = (-28356_i16) & 29773_i16;
_12 = (*_2) - (*_2);
_12 = _9 + (*_2);
_17 = !5_usize;
_7 = 167373616552379920165975648813203984155_u128 as f64;
_12 = 222254440512036379212133641431485495475_u128 as f64;
_8 = 234_u8 as f64;
_10 = (*_2) - (*_2);
_5 = -(*_2);
_3 = _10 * (*_2);
_2 = &_6;
_6 = -_9;
_17 = 6497603035381501430_usize << _13.0;
_5 = _10 - _10;
_6 = -_4;
_10 = _13.0 as f64;
_2 = &_9;
Goto(bb4)
}
bb48 = {
_13.0 = (-27635_i16) & (-22930_i16);
_26 = [_20,_20,_20,_20];
_10 = 45142_u16 as f64;
_8 = _27 as f64;
Goto(bb6)
}
bb49 = {
_51.1.fld4 = Move(_36.0.3);
_38 = (*_35).2 - (*_35).2;
(*_35).2 = Field::<u8>(Variant(_36.0.2, 0), 2) >> _38;
place!(Field::<i8>(Variant(_51.1.fld4, 0), 1)) = Field::<i8>(Variant(_36.0.2, 0), 1) + Field::<i8>(Variant(_32.1.3, 0), 1);
match Field::<i8>(Variant(_32.1.3, 0), 1) {
1 => bb10,
2 => bb36,
3 => bb37,
0 => bb39,
_ => bb38
}
}
bb50 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb51 = {
_9 = (*_2) * _6;
_13 = (10617_i16,);
_7 = -(*_2);
_17 = 18879385121129759517962104699826853066_u128 as usize;
_12 = (*_2);
_4 = (*_2) + (*_2);
_10 = (*_2);
_5 = _9 * _10;
_2 = &_9;
_7 = _10;
_3 = (-2140993504_i32) as f64;
_7 = 9223372036854775807_isize as f64;
_5 = (*_2);
Call(_3 = core::intrinsics::transmute(_17), ReturnTo(bb3), UnwindUnreachable())
}
bb52 = {
(*_35).2 = _16;
(*_35).1 = core::ptr::addr_of_mut!((*_29));
(*_52) = [Field::<u64>(Variant(_32.1.3, 0), 0)];
place!(Field::<u64>(Variant(_32.1.3, 0), 0)) = _62.2 as u64;
_38 = Field::<u8>(Variant(_32.1.3, 0), 2);
(*_35).2 = _23 as u8;
(*_29) = [_13.0,_13.0];
(*_54) = core::ptr::addr_of_mut!(_30);
_48 = [Field::<u64>(Variant(_32.1.2, 0), 0)];
_67.1.1 = _32.1.1 - _60;
(*_54) = core::ptr::addr_of_mut!(_30);
_39 = -_36.0.0;
_36.0.2 = Move(_32.1.3);
(*_35).2 = !Field::<u8>(Variant(_36.0.2, 0), 2);
(*_35).2 = Field::<i8>(Variant(_32.1.2, 0), 1) as u8;
_63 = [_40,_40];
(*_35).1 = core::ptr::addr_of_mut!((*_29));
_38 = Field::<u8>(Variant(_32.1.2, 0), 2);
(*_29) = [_13.0,_13.0];
(*_52) = [Field::<u64>(Variant(_32.1.2, 0), 0)];
_16 = _51.1.fld3.0 as u8;
(*_29) = [_13.0,_13.0];
Goto(bb53)
}
bb53 = {
Call(_78 = dump_var(5_usize, 45_usize, Move(_45), 23_usize, Move(_23), 42_usize, Move(_42), 39_usize, Move(_39)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_78 = dump_var(5_usize, 16_usize, Move(_16), 38_usize, Move(_38), 59_usize, Move(_59), 27_usize, Move(_27)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_78 = dump_var(5_usize, 43_usize, Move(_43), 79_usize, _79, 79_usize, _79, 79_usize, _79), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn6(mut _1: *const &'static mut i8,mut _2: &'static f64,mut _3: f64,mut _4: f64,mut _5: f64,mut _6: f64,mut _7: f64,mut _8: [i16; 2],mut _9: f64,mut _10: f64,mut _11: f64) -> f64 {
mir! {
type RET = f64;
let _12: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _13: &'static [u64; 1];
let _14: char;
let _15: *mut [i16; 2];
let _16: isize;
let _17: u16;
let _18: u128;
let _19: [i16; 2];
let _20: f64;
let _21: [bool; 4];
let _22: &'static mut (*mut i32, *mut [i16; 2], u8);
let _23: u64;
let _24: bool;
let _25: ([bool; 4], (i32, f32, Adt18, Adt18));
let _26: isize;
let _27: i16;
let _28: &'static &'static f64;
let _29: isize;
let _30: (&'static mut *mut [u64; 1], u128);
let _31: u8;
let _32: &'static f64;
let _33: f32;
let _34: &'static *mut [i16; 2];
let _35: isize;
let _36: [u8; 2];
let _37: [i8; 5];
let _38: usize;
let _39: &'static *mut [i16; 2];
let _40: char;
let _41: (Adt31, i32);
let _42: u128;
let _43: u8;
let _44: isize;
let _45: (&'static mut *mut [u64; 1], u128);
let _46: Adt48;
let _47: bool;
let _48: u64;
let _49: isize;
let _50: &'static mut *mut *mut i32;
let _51: f32;
let _52: f64;
let _53: Adt48;
let _54: i64;
let _55: (*mut i32, *mut [i16; 2], u8);
let _56: isize;
let _57: *mut i32;
let _58: ();
let _59: ();
{
_5 = _4;
_5 = _10 + _9;
RET = _6 + _3;
Call(_10 = core::intrinsics::fmaf64(_5, RET, _9), ReturnTo(bb1), UnwindUnreachable())
}
bb1 = {
_2 = &_4;
_3 = 16615161627600053463_u64 as f64;
RET = _4 + (*_2);
_2 = &_3;
RET = -_5;
Goto(bb2)
}
bb2 = {
_7 = (*_2) - (*_2);
_8 = [(-10264_i16),17794_i16];
_3 = _10 + _9;
_5 = 28342_i16 as f64;
_9 = -RET;
_2 = &_7;
_5 = (*_2) + _6;
RET = (*_2);
_9 = (*_2) * _5;
_10 = -_9;
_15 = core::ptr::addr_of_mut!(_8);
(*_15) = [(-28244_i16),3540_i16];
_16 = 94_isize >> (-7318891331599464040_i64);
_16 = 269175052052049022923879068973421967575_u128 as isize;
_16 = 25_isize;
(*_15) = [(-2307_i16),(-11680_i16)];
(*_15) = [(-12649_i16),(-19053_i16)];
(*_15) = [(-1708_i16),(-1420_i16)];
(*_15) = [29089_i16,(-32747_i16)];
_7 = _3;
(*_15) = [1377_i16,1126_i16];
_3 = _9;
_18 = !65055395454593130041038626996517480882_u128;
match _16 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
25 => bb10,
_ => bb9
}
}
bb3 = {
_2 = &_4;
_3 = 16615161627600053463_u64 as f64;
RET = _4 + (*_2);
_2 = &_3;
RET = -_5;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
_11 = 27680_i16 as f64;
(*_15) = [12345_i16,(-2338_i16)];
_14 = '\u{902a6}';
_7 = -_10;
_2 = &_4;
match _16 {
0 => bb6,
25 => bb12,
_ => bb11
}
}
bb11 = {
_2 = &_4;
_3 = 16615161627600053463_u64 as f64;
RET = _4 + (*_2);
_2 = &_3;
RET = -_5;
Goto(bb2)
}
bb12 = {
_16 = (-16_isize) + 9223372036854775807_isize;
(*_15) = [24485_i16,27898_i16];
_5 = (*_2) + _6;
(*_15) = [18822_i16,8292_i16];
_8 = [(-13781_i16),(-18540_i16)];
_15 = core::ptr::addr_of_mut!((*_15));
Goto(bb13)
}
bb13 = {
_17 = 14959_u16 & 15659_u16;
_18 = 103968112828313399086744084791147533816_u128;
match _18 {
0 => bb8,
1 => bb14,
2 => bb15,
3 => bb16,
4 => bb17,
5 => bb18,
103968112828313399086744084791147533816 => bb20,
_ => bb19
}
}
bb14 = {
_16 = (-16_isize) + 9223372036854775807_isize;
(*_15) = [24485_i16,27898_i16];
_5 = (*_2) + _6;
(*_15) = [18822_i16,8292_i16];
_8 = [(-13781_i16),(-18540_i16)];
_15 = core::ptr::addr_of_mut!((*_15));
Goto(bb13)
}
bb15 = {
_2 = &_4;
_3 = 16615161627600053463_u64 as f64;
RET = _4 + (*_2);
_2 = &_3;
RET = -_5;
Goto(bb2)
}
bb16 = {
_11 = 27680_i16 as f64;
(*_15) = [12345_i16,(-2338_i16)];
_14 = '\u{902a6}';
_7 = -_10;
_2 = &_4;
match _16 {
0 => bb6,
25 => bb12,
_ => bb11
}
}
bb17 = {
_7 = (*_2) - (*_2);
_8 = [(-10264_i16),17794_i16];
_3 = _10 + _9;
_5 = 28342_i16 as f64;
_9 = -RET;
_2 = &_7;
_5 = (*_2) + _6;
RET = (*_2);
_9 = (*_2) * _5;
_10 = -_9;
_15 = core::ptr::addr_of_mut!(_8);
(*_15) = [(-28244_i16),3540_i16];
_16 = 94_isize >> (-7318891331599464040_i64);
_16 = 269175052052049022923879068973421967575_u128 as isize;
_16 = 25_isize;
(*_15) = [(-2307_i16),(-11680_i16)];
(*_15) = [(-12649_i16),(-19053_i16)];
(*_15) = [(-1708_i16),(-1420_i16)];
(*_15) = [29089_i16,(-32747_i16)];
_7 = _3;
(*_15) = [1377_i16,1126_i16];
_3 = _9;
_18 = !65055395454593130041038626996517480882_u128;
match _16 {
0 => bb1,
1 => bb3,
2 => bb4,
3 => bb5,
4 => bb6,
5 => bb7,
6 => bb8,
25 => bb10,
_ => bb9
}
}
bb18 = {
Return()
}
bb19 = {
Return()
}
bb20 = {
(*_15) = [(-15728_i16),(-14174_i16)];
_15 = core::ptr::addr_of_mut!(_8);
(*_15) = [12927_i16,(-26630_i16)];
(*_15) = [(-24902_i16),(-30911_i16)];
RET = (*_2) - (*_2);
_11 = -_5;
_15 = core::ptr::addr_of_mut!((*_15));
(*_15) = [(-15687_i16),(-5303_i16)];
(*_15) = [(-7887_i16),3601_i16];
_10 = -(*_2);
_8 = [(-4398_i16),25932_i16];
(*_15) = [23568_i16,31518_i16];
(*_15) = [30038_i16,(-14716_i16)];
(*_15) = [725_i16,5568_i16];
_2 = &_11;
(*_15) = [9868_i16,(-25831_i16)];
(*_15) = [11725_i16,25534_i16];
_9 = _17 as f64;
_19 = [11221_i16,(-2360_i16)];
_9 = _17 as f64;
(*_15) = _19;
_14 = '\u{42b53}';
_8 = [(-22881_i16),11135_i16];
(*_15) = [(-21348_i16),(-27056_i16)];
_6 = (*_2);
_5 = (*_2);
Goto(bb21)
}
bb21 = {
_6 = -(*_2);
_10 = (*_2) - (*_2);
(*_15) = [(-16066_i16),23398_i16];
(*_15) = [(-7871_i16),1977_i16];
(*_15) = [(-19047_i16),11000_i16];
_17 = 16990000081006163300_u64 as u16;
(*_15) = [5475_i16,(-28824_i16)];
_8 = [(-6983_i16),4748_i16];
(*_15) = _19;
(*_15) = _19;
_14 = '\u{673d7}';
(*_15) = _19;
_6 = (*_2);
RET = _7 - (*_2);
_9 = -(*_2);
(*_15) = _19;
(*_15) = [9940_i16,(-32138_i16)];
_16 = 9223372036854775807_isize - 9223372036854775807_isize;
_23 = !6173751823731474945_u64;
_25.0 = [false,true,false,true];
_6 = -(*_2);
_25.1.0 = -(-69471614_i32);
(*_15) = _19;
_21 = _25.0;
match _18 {
103968112828313399086744084791147533816 => bb23,
_ => bb22
}
}
bb22 = {
_2 = &_4;
_3 = 16615161627600053463_u64 as f64;
RET = _4 + (*_2);
_2 = &_3;
RET = -_5;
Goto(bb2)
}
bb23 = {
_25.1.0 = (-1008443362_i32) ^ 635097828_i32;
_2 = &_10;
_10 = _6 * RET;
_24 = true;
(*_15) = [(-18930_i16),6807_i16];
(*_15) = [(-29931_i16),13665_i16];
(*_15) = _19;
(*_15) = _19;
_25.1.3 = Adt18::Variant0 { fld0: _23,fld1: 53_i8,fld2: 155_u8 };
_25.1.1 = 1538264144_u32 as f32;
_25.1.2 = Adt18::Variant1 { fld0: _23,fld1: 1_usize,fld2: _25.1.1,fld3: _17,fld4: _18,fld5: _25.1.0,fld6: _21 };
_25.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_25.1.3, 0), 0),fld1: 6_usize,fld2: _25.1.1,fld3: _17,fld4: _18,fld5: _25.1.0,fld6: _21 };
(*_15) = [7077_i16,(-23148_i16)];
_28 = &_2;
_31 = 216_u8 >> Field::<u128>(Variant(_25.1.2, 1), 4);
_6 = _10 * _9;
place!(Field::<i32>(Variant(_25.1.2, 1), 5)) = _25.1.1 as i32;
_5 = _31 as f64;
(*_15) = [9665_i16,25746_i16];
place!(Field::<f32>(Variant(_25.1.2, 1), 2)) = _25.1.1;
Goto(bb24)
}
bb24 = {
place!(Field::<u8>(Variant(_25.1.3, 0), 2)) = 25652_i16 as u8;
match Field::<u128>(Variant(_25.1.2, 1), 4) {
0 => bb18,
1 => bb25,
2 => bb26,
3 => bb27,
103968112828313399086744084791147533816 => bb29,
_ => bb28
}
}
bb25 = {
Return()
}
bb26 = {
Return()
}
bb27 = {
_11 = 27680_i16 as f64;
(*_15) = [12345_i16,(-2338_i16)];
_14 = '\u{902a6}';
_7 = -_10;
_2 = &_4;
match _16 {
0 => bb6,
25 => bb12,
_ => bb11
}
}
bb28 = {
_16 = (-16_isize) + 9223372036854775807_isize;
(*_15) = [24485_i16,27898_i16];
_5 = (*_2) + _6;
(*_15) = [18822_i16,8292_i16];
_8 = [(-13781_i16),(-18540_i16)];
_15 = core::ptr::addr_of_mut!((*_15));
Goto(bb13)
}
bb29 = {
place!(Field::<usize>(Variant(_25.1.2, 1), 1)) = 9124349920646794961_usize & 6_usize;
place!(Field::<f32>(Variant(_25.1.2, 1), 2)) = _25.1.1;
place!(Field::<u8>(Variant(_25.1.3, 0), 2)) = _31;
(*_15) = [13896_i16,22068_i16];
_14 = '\u{a1ed1}';
place!(Field::<u16>(Variant(_25.1.2, 1), 3)) = Field::<usize>(Variant(_25.1.2, 1), 1) as u16;
place!(Field::<u8>(Variant(_25.1.3, 0), 2)) = !_31;
_20 = Field::<u128>(Variant(_25.1.2, 1), 4) as f64;
(*_15) = _19;
place!(Field::<u16>(Variant(_25.1.2, 1), 3)) = _6 as u16;
_20 = _10 * _6;
_36 = [_31,_31];
(*_15) = [2498_i16,(-7429_i16)];
_18 = Field::<u128>(Variant(_25.1.2, 1), 4) * Field::<u128>(Variant(_25.1.2, 1), 4);
_25.1.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_25.1.3, 0), 0),fld1: 12187775216424933809_usize,fld2: _25.1.1,fld3: _17,fld4: _18,fld5: _25.1.0,fld6: _25.0 };
_5 = _7 * _3;
Goto(bb30)
}
bb30 = {
place!(Field::<i8>(Variant(_25.1.3, 0), 1)) = Field::<f32>(Variant(_25.1.2, 1), 2) as i8;
_5 = _6;
place!(Field::<i32>(Variant(_25.1.2, 1), 5)) = (-168289979163652612199146655536371385854_i128) as i32;
place!(Field::<i32>(Variant(_25.1.2, 1), 5)) = _25.1.0 >> _18;
_30.1 = Field::<u128>(Variant(_25.1.2, 1), 4);
_30.1 = Field::<u128>(Variant(_25.1.2, 1), 4) * Field::<u128>(Variant(_25.1.2, 1), 4);
_27 = -(-7420_i16);
_24 = true ^ true;
(*_15) = [_27,_27];
_41.0.fld1 = _30.1 - _18;
_41.0.fld0 = _41.0.fld1 != _41.0.fld1;
_41.0.fld4 = Move(_25.1.3);
_16 = -10_isize;
_25.1.3 = Move(_41.0.fld4);
_32 = &_9;
_28 = &_32;
place!(Field::<u16>(Variant(_25.1.2, 1), 3)) = _17;
(*_15) = [_27,_27];
_41.0.fld2 = Adt23::Variant1 { fld0: _17,fld1: 2052900062_u32,fld2: Field::<u64>(Variant(_25.1.3, 0), 0) };
place!(Field::<u32>(Variant(_41.0.fld2, 1), 1)) = _25.1.1 as u32;
Call(_10 = core::intrinsics::transmute(Field::<u64>(Variant(_25.1.3, 0), 0)), ReturnTo(bb31), UnwindUnreachable())
}
bb31 = {
_16 = (-9223372036854775808_isize);
_18 = _41.0.fld1 << _41.0.fld1;
_35 = _41.0.fld1 as isize;
_33 = _25.1.1 * Field::<f32>(Variant(_25.1.2, 1), 2);
place!(Field::<f32>(Variant(_25.1.2, 1), 2)) = _25.1.1 - _33;
place!(Field::<[bool; 4]>(Variant(_25.1.2, 1), 6)) = _25.0;
(*_15) = [_27,_27];
_42 = Field::<u32>(Variant(_41.0.fld2, 1), 1) as u128;
_41.0.fld5 = _25.1.1 * Field::<f32>(Variant(_25.1.2, 1), 2);
(*_15) = _19;
_42 = _18;
place!(Field::<u32>(Variant(_41.0.fld2, 1), 1)) = 1974193753_u32 >> _35;
_18 = _42;
_41.0.fld5 = -_33;
_41.1 = _25.1.0 + Field::<i32>(Variant(_25.1.2, 1), 5);
_8 = _19;
_5 = (*_32) * (*_32);
_23 = !Field::<u64>(Variant(_25.1.2, 1), 0);
(*_15) = _19;
place!(Field::<u128>(Variant(_25.1.2, 1), 4)) = _41.0.fld1 >> _35;
_4 = (*_32) + (*_32);
Call((*_15) = core::intrinsics::transmute(_25.0), ReturnTo(bb32), UnwindUnreachable())
}
bb32 = {
_40 = _14;
_2 = &(*_32);
(*_15) = _19;
_48 = Field::<u64>(Variant(_41.0.fld2, 1), 2);
RET = (*_32);
Call((*_15) = fn7(Move(_1), _14, Move(_32)), ReturnTo(bb33), UnwindUnreachable())
}
bb33 = {
_41.1 = !Field::<i32>(Variant(_25.1.2, 1), 5);
_4 = RET + _20;
_18 = _42;
_25.0 = [_41.0.fld0,_41.0.fld0,_24,_41.0.fld0];
_42 = 28971508975947652638139737663360737477_i128 as u128;
_41.0.fld4 = Move(_25.1.3);
_45.1 = Field::<u128>(Variant(_25.1.2, 1), 4) & Field::<u128>(Variant(_25.1.2, 1), 4);
_25.1.3 = Move(_41.0.fld4);
_34 = &_15;
_17 = Field::<u16>(Variant(_41.0.fld2, 1), 0) * Field::<u16>(Variant(_41.0.fld2, 1), 0);
place!(Field::<u128>(Variant(_25.1.2, 1), 4)) = _30.1 >> _17;
(*_15) = _19;
_49 = -_16;
_5 = -_20;
_41.0.fld6 = -(*_2);
_49 = _16 | _35;
place!(Field::<[bool; 4]>(Variant(_25.1.2, 1), 6)) = _25.0;
place!(Field::<i8>(Variant(_25.1.3, 0), 1)) = Field::<u32>(Variant(_41.0.fld2, 1), 1) as i8;
_41.0.fld4 = Move(_25.1.3);
_41.0.fld6 = _4 * (*_2);
_41.1 = _25.1.0 << _30.1;
_30.1 = !_45.1;
_25.1.2 = Move(_41.0.fld4);
(*_15) = [_27,_27];
_39 = &(*_34);
(*_15) = [_27,_27];
_31 = !Field::<u8>(Variant(_25.1.2, 0), 2);
(*_15) = [_27,_27];
Goto(bb34)
}
bb34 = {
_38 = 847664625327173218_usize & 0_usize;
_25.0 = _21;
_37 = [Field::<i8>(Variant(_25.1.2, 0), 1),Field::<i8>(Variant(_25.1.2, 0), 1),Field::<i8>(Variant(_25.1.2, 0), 1),Field::<i8>(Variant(_25.1.2, 0), 1),Field::<i8>(Variant(_25.1.2, 0), 1)];
place!(Field::<u8>(Variant(_25.1.2, 0), 2)) = !_31;
(*_15) = [_27,_27];
_14 = _40;
_41.0.fld3.0 = !89921521568578485262995183357283763403_i128;
_27 = (-21299_i16);
_49 = -_35;
place!(Field::<u32>(Variant(_41.0.fld2, 1), 1)) = 279416544_u32;
_25.0 = [_41.0.fld0,_41.0.fld0,_41.0.fld0,_41.0.fld0];
RET = _20;
place!(Field::<i8>(Variant(_25.1.2, 0), 1)) = 93_i8;
_41.0.fld1 = _30.1 - _45.1;
_41.0.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_25.1.2, 0), 0),fld1: Field::<i8>(Variant(_25.1.2, 0), 1),fld2: Field::<u8>(Variant(_25.1.2, 0), 2) };
_41.0.fld2 = Adt23::Variant1 { fld0: _17,fld1: 4093056641_u32,fld2: _48 };
Goto(bb35)
}
bb35 = {
Call(_58 = dump_var(6_usize, 16_usize, Move(_16), 49_usize, Move(_49), 40_usize, Move(_40), 14_usize, Move(_14)), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
Call(_58 = dump_var(6_usize, 38_usize, Move(_38), 31_usize, Move(_31), 48_usize, Move(_48), 18_usize, Move(_18)), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
Call(_58 = dump_var(6_usize, 17_usize, Move(_17), 59_usize, _59, 59_usize, _59, 59_usize, _59), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn7(mut _1: *const &'static mut i8,mut _2: char,mut _3: &'static f64) -> [i16; 2] {
mir! {
type RET = [i16; 2];
let _4: *mut &'static mut (i32, f32, Adt18, Adt18);
let _5: isize;
let _6: [u8; 6];
let _7: u32;
let _8: *const &'static mut i8;
let _9: isize;
let _10: &'static f64;
let _11: &'static *mut [bool; 4];
let _12: u128;
let _13: isize;
let _14: *const [u128; 2];
let _15: *mut [u64; 1];
let _16: usize;
let _17: *const *mut [i16; 2];
let _18: &'static u32;
let _19: &'static mut *mut *mut i32;
let _20: f64;
let _21: f64;
let _22: f32;
let _23: *mut [i16; 2];
let _24: Adt31;
let _25: i128;
let _26: f32;
let _27: char;
let _28: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _29: *mut *mut i32;
let _30: &'static mut *mut [u64; 1];
let _31: f32;
let _32: char;
let _33: &'static mut &'static mut i8;
let _34: isize;
let _35: i32;
let _36: char;
let _37: (i128,);
let _38: &'static mut &'static mut i8;
let _39: char;
let _40: (Adt31, i32);
let _41: f64;
let _42: &'static f64;
let _43: bool;
let _44: f32;
let _45: &'static [u64; 1];
let _46: u64;
let _47: f32;
let _48: u16;
let _49: f32;
let _50: &'static *mut [i16; 2];
let _51: &'static f64;
let _52: Adt18;
let _53: char;
let _54: Adt31;
let _55: isize;
let _56: *mut &'static mut (i32, f32, Adt18, Adt18);
let _57: i64;
let _58: Adt23;
let _59: *mut [i16; 2];
let _60: isize;
let _61: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _62: &'static f64;
let _63: isize;
let _64: ();
let _65: ();
{
_2 = '\u{cd409}';
RET = [(-14476_i16),9950_i16];
_2 = '\u{71469}';
_2 = '\u{f3267}';
_2 = '\u{8ec93}';
_2 = '\u{10e266}';
RET = [6049_i16,(-12215_i16)];
RET = [26650_i16,22314_i16];
_2 = '\u{d481f}';
_2 = '\u{cb47b}';
_2 = '\u{cec0c}';
_2 = '\u{10dbce}';
_5 = 15448848377681989295_usize as isize;
_2 = '\u{f75ee}';
_5 = (-9223372036854775808_isize) + (-9223372036854775808_isize);
RET = [17695_i16,(-4049_i16)];
RET = [(-32255_i16),(-23983_i16)];
_5 = (-9223372036854775808_isize) >> 73312496822342926791799760679476981045_u128;
_2 = '\u{74230}';
_6 = [23_u8,198_u8,209_u8,120_u8,174_u8,96_u8];
RET = [(-20722_i16),3996_i16];
_6 = [84_u8,184_u8,69_u8,34_u8,109_u8,206_u8];
_5 = (-9223372036854775808_isize);
_2 = '\u{1bc7}';
_6 = [34_u8,228_u8,232_u8,254_u8,127_u8,8_u8];
_2 = '\u{561c0}';
_2 = '\u{e9211}';
Goto(bb1)
}
bb1 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb2 = {
_6 = [193_u8,20_u8,0_u8,33_u8,85_u8,105_u8];
_7 = 3571652417_u32;
RET = [22540_i16,(-12965_i16)];
_2 = '\u{b065c}';
_7 = 290288129_u32 | 4216720277_u32;
_7 = !2434733564_u32;
_8 = Move(_1);
RET = [22571_i16,3114_i16];
_2 = '\u{109021}';
_7 = 5011_u16 as u32;
_9 = -_5;
_12 = 171477099837046271288355152195100293452_u128 | 127768411804787837141488583239691262431_u128;
_1 = Move(_8);
_9 = _5 & _5;
_8 = Move(_1);
match _5 {
0 => bb3,
1 => bb4,
2 => bb5,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb3 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
_6 = [88_u8,40_u8,98_u8,24_u8,243_u8,174_u8];
_1 = Move(_8);
RET = [8113_i16,9327_i16];
_12 = 245158292471061390145955231644220453186_u128 - 303348337558002156256258785252931945867_u128;
_2 = '\u{5dd52}';
_8 = Move(_1);
_1 = Move(_8);
Goto(bb8)
}
bb8 = {
_2 = '\u{8d66a}';
_5 = _9;
_6 = [211_u8,250_u8,0_u8,221_u8,182_u8,222_u8];
_7 = !2318471118_u32;
_7 = !3305364886_u32;
RET = [19027_i16,4467_i16];
RET = [8547_i16,19038_i16];
_5 = _9;
_5 = _9;
_6 = [190_u8,92_u8,112_u8,110_u8,139_u8,118_u8];
_6 = [189_u8,176_u8,16_u8,136_u8,47_u8,41_u8];
_6 = [93_u8,60_u8,248_u8,195_u8,189_u8,203_u8];
_2 = '\u{15b79}';
_6 = [23_u8,234_u8,28_u8,240_u8,108_u8,234_u8];
_8 = Move(_1);
_13 = _9 * _9;
Goto(bb9)
}
bb9 = {
_2 = '\u{d2867}';
_12 = 223196350218584617485054239467980478740_u128;
_12 = 79945440831669911943054313181644424350_u128 ^ 286976046278653606102795279704740025842_u128;
_13 = _9;
Goto(bb10)
}
bb10 = {
RET = [(-24025_i16),(-4799_i16)];
_5 = !_9;
RET = [32309_i16,(-6344_i16)];
_1 = Move(_8);
_16 = 6482494411137456549_i64 as usize;
_2 = '\u{99bb5}';
_12 = 256195237758030955990527543814522067267_u128;
_18 = &_7;
_5 = _9 + _13;
_9 = _5 & _5;
_5 = _9 >> (*_18);
_6 = [190_u8,100_u8,242_u8,239_u8,11_u8,192_u8];
_13 = _5 + _5;
RET = [(-30968_i16),1786_i16];
_2 = '\u{6b1fc}';
_21 = 22988_u16 as f64;
match _12 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
256195237758030955990527543814522067267 => bb11,
_ => bb8
}
}
bb11 = {
_22 = (-7614039154921868787_i64) as f32;
_17 = core::ptr::addr_of!(_23);
_3 = &_21;
_10 = Move(_3);
Goto(bb12)
}
bb12 = {
(*_17) = core::ptr::addr_of_mut!(RET);
_20 = 16_i8 as f64;
(*_23) = [14699_i16,11139_i16];
(*_23) = [32299_i16,(-15279_i16)];
(*_17) = core::ptr::addr_of_mut!((*_23));
_24.fld4 = Adt18::Variant0 { fld0: 15317784802096279724_u64,fld1: (-87_i8),fld2: 133_u8 };
(*_17) = core::ptr::addr_of_mut!((*_23));
place!(Field::<u64>(Variant(_24.fld4, 0), 0)) = !7242700799307381331_u64;
(*_23) = [(-28057_i16),(-17755_i16)];
_5 = !_13;
_24.fld1 = _12;
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
_3 = &_20;
_13 = _2 as isize;
_10 = Move(_3);
_16 = 7305782938677093401_usize >> _5;
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23) = [30981_i16,19687_i16];
Goto(bb13)
}
bb13 = {
_21 = _20 * _20;
(*_23) = [4143_i16,27420_i16];
(*_23) = [31924_i16,(-17565_i16)];
_16 = 1_usize;
_24.fld5 = -_22;
_24.fld0 = true ^ true;
(*_23) = [5550_i16,(-25115_i16)];
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = 20386_i16;
_13 = _5 ^ _9;
Goto(bb14)
}
bb14 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = (-23378_i16) - (-28125_i16);
(*_23)[_16] = 1079733091_i32 as i16;
_3 = &_20;
(*_23) = [(-2128_i16),5360_i16];
match (*_23)[_16] {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb11,
5360 => bb15,
_ => bb8
}
}
bb15 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
place!(Field::<i8>(Variant(_24.fld4, 0), 1)) = _24.fld5 as i8;
place!(Field::<u64>(Variant(_24.fld4, 0), 0)) = 502186412759243108_u64 | 8475248073526081227_u64;
(*_23) = [24154_i16,13849_i16];
_25 = !31765909112664449443730712012509042942_i128;
(*_23) = [(-26712_i16),3567_i16];
_21 = -(*_3);
_28.0 = _24.fld5 as i64;
(*_23)[_16] = _28.0 as i16;
(*_23)[_16] = 26716_i16 | 27465_i16;
_24.fld2 = Adt23::Variant0 { fld0: _24.fld0,fld1: _2,fld2: _13,fld3: Field::<i8>(Variant(_24.fld4, 0), 1),fld4: _16,fld5: 59080_u16 };
(*_23)[_16] = 16324_i16 * 327_i16;
_2 = Field::<char>(Variant(_24.fld2, 0), 1);
(*_23)[_16] = 10608_i16;
(*_23) = [26064_i16,(-9409_i16)];
_3 = &_21;
(*_17) = core::ptr::addr_of_mut!((*_23));
_24.fld0 = _5 <= _5;
(*_23)[_16] = (-26978_i16) ^ 8447_i16;
(*_23) = [2219_i16,19475_i16];
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = (-25101_i16) ^ (-31474_i16);
(*_23) = [3396_i16,(-8387_i16)];
_31 = _22 - _22;
(*_23)[_16] = (-25191_i16) | (-1054_i16);
match _24.fld1 {
0 => bb13,
1 => bb10,
2 => bb6,
3 => bb12,
4 => bb5,
5 => bb16,
256195237758030955990527543814522067267 => bb18,
_ => bb17
}
}
bb16 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb17 = {
_6 = [193_u8,20_u8,0_u8,33_u8,85_u8,105_u8];
_7 = 3571652417_u32;
RET = [22540_i16,(-12965_i16)];
_2 = '\u{b065c}';
_7 = 290288129_u32 | 4216720277_u32;
_7 = !2434733564_u32;
_8 = Move(_1);
RET = [22571_i16,3114_i16];
_2 = '\u{109021}';
_7 = 5011_u16 as u32;
_9 = -_5;
_12 = 171477099837046271288355152195100293452_u128 | 127768411804787837141488583239691262431_u128;
_1 = Move(_8);
_9 = _5 & _5;
_8 = Move(_1);
match _5 {
0 => bb3,
1 => bb4,
2 => bb5,
340282366920938463454151235394913435648 => bb7,
_ => bb6
}
}
bb18 = {
_24.fld2 = Adt23::Variant1 { fld0: 39757_u16,fld1: (*_18),fld2: Field::<u64>(Variant(_24.fld4, 0), 0) };
_29 = core::ptr::addr_of_mut!(_28.1);
(*_23) = [(-19708_i16),29713_i16];
_27 = _2;
_29 = core::ptr::addr_of_mut!((*_29));
Goto(bb19)
}
bb19 = {
_7 = Field::<u32>(Variant(_24.fld2, 1), 1) + Field::<u32>(Variant(_24.fld2, 1), 1);
(*_29) = core::ptr::addr_of_mut!(_35);
_34 = _9;
place!(Field::<u16>(Variant(_24.fld2, 1), 0)) = 23255_u16 * 60827_u16;
_24.fld3.0 = _25 - _25;
(*_23) = [12162_i16,(-29159_i16)];
_20 = (*_3) * _21;
place!(Field::<u8>(Variant(_24.fld4, 0), 2)) = _6[_16] + _6[_16];
(*_17) = core::ptr::addr_of_mut!((*_23));
Call(_5 = core::intrinsics::transmute(_34), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
Goto(bb21)
}
bb21 = {
(*_23)[_16] = (-14905_i16) ^ 8595_i16;
(*_23)[_16] = Field::<u64>(Variant(_24.fld2, 1), 2) as i16;
Call((*_23)[_16] = core::intrinsics::bswap(885_i16), ReturnTo(bb22), UnwindUnreachable())
}
bb22 = {
(*_23) = [(-25401_i16),(-6808_i16)];
(*_17) = core::ptr::addr_of_mut!((*_23));
_3 = &_20;
_24.fld2 = Adt23::Variant1 { fld0: 23814_u16,fld1: _7,fld2: Field::<u64>(Variant(_24.fld4, 0), 0) };
(*_23) = [25982_i16,820_i16];
(*_23)[_16] = 26607_i16 - (-675_i16);
(*_23)[_16] = -(-21504_i16);
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_29) = core::ptr::addr_of_mut!(_35);
(*_17) = core::ptr::addr_of_mut!((*_23));
place!(Field::<i8>(Variant(_24.fld4, 0), 1)) = (-81_i8);
_7 = _16 as u32;
(*_23)[_16] = 18749_u16 as i16;
_40.0.fld1 = !_12;
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
match _6[_16] {
0 => bb19,
1 => bb16,
2 => bb11,
3 => bb10,
4 => bb5,
5 => bb13,
100 => bb23,
_ => bb12
}
}
bb23 = {
_35 = !1985443241_i32;
_28.0 = (-3119419589644642433_i64);
_40.0.fld3 = (_25,);
(*_29) = core::ptr::addr_of_mut!(_35);
_24.fld5 = _22 + _22;
(*_23) = [(-10401_i16),(-11711_i16)];
_43 = _24.fld0;
(*_29) = core::ptr::addr_of_mut!(_40.1);
(*_23)[_16] = -26472_i16;
_42 = Move(_3);
(*_23) = [7916_i16,(-4601_i16)];
_3 = &_21;
(*_23)[_16] = 7952_i16 >> _5;
_23 = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23) = [11428_i16,19674_i16];
(*_29) = core::ptr::addr_of_mut!(_40.1);
(*_29) = core::ptr::addr_of_mut!(_35);
(*_29) = core::ptr::addr_of_mut!(_35);
_37.0 = _40.0.fld3.0 & _24.fld3.0;
(*_23)[_16] = (-19860_i16) + (-9849_i16);
(*_23) = [(-19338_i16),1965_i16];
(*_29) = core::ptr::addr_of_mut!(_40.1);
_22 = _31 * _31;
match (*_23)[_16] {
1965 => bb25,
_ => bb24
}
}
bb24 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb25 = {
(*_29) = core::ptr::addr_of_mut!(_40.1);
_34 = !_13;
(*_23) = [(-9068_i16),(-8262_i16)];
_37 = (_24.fld3.0,);
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
_35 = !(-2058832003_i32);
(*_23)[_16] = 60619_u16 as i16;
(*_29) = core::ptr::addr_of_mut!(_35);
_24.fld5 = -_22;
Goto(bb26)
}
bb26 = {
_40.0.fld0 = _43;
(*_23) = [(-1501_i16),17585_i16];
(*_23) = [(-3169_i16),24943_i16];
match (*_23)[_16] {
24943 => bb28,
_ => bb27
}
}
bb27 = {
_21 = _20 * _20;
(*_23) = [4143_i16,27420_i16];
(*_23) = [31924_i16,(-17565_i16)];
_16 = 1_usize;
_24.fld5 = -_22;
_24.fld0 = true ^ true;
(*_23) = [5550_i16,(-25115_i16)];
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = 20386_i16;
_13 = _5 ^ _9;
Goto(bb14)
}
bb28 = {
_43 = _24.fld0;
_26 = _22;
(*_23) = [8485_i16,(-11500_i16)];
place!(Field::<u64>(Variant(_24.fld4, 0), 0)) = Field::<u64>(Variant(_24.fld2, 1), 2) << _9;
_32 = _2;
(*_23) = [(-18452_i16),(-11165_i16)];
_19 = &mut _29;
_40.0.fld6 = -(*_3);
_48 = 8076_u16 ^ 14419_u16;
_43 = _40.0.fld0;
_43 = _40.0.fld0 & _40.0.fld0;
place!(Field::<u32>(Variant(_24.fld2, 1), 1)) = _7 - _7;
_24.fld5 = _22 - _22;
(*_19) = core::ptr::addr_of_mut!(_28.1);
(*_23)[_16] = (-5149_i16);
(*_17) = core::ptr::addr_of_mut!((*_23));
_17 = core::ptr::addr_of!((*_17));
_8 = Move(_1);
Call((*_23)[_16] = fn8(Move((*_17)), Move((*_19))), ReturnTo(bb29), UnwindUnreachable())
}
bb29 = {
_10 = &(*_3);
_36 = _32;
_24.fld2 = Adt23::Variant0 { fld0: _40.0.fld0,fld1: _27,fld2: _13,fld3: Field::<i8>(Variant(_24.fld4, 0), 1),fld4: _16,fld5: _48 };
(*_17) = core::ptr::addr_of_mut!(RET);
_44 = _12 as f32;
match _12 {
0 => bb1,
1 => bb16,
2 => bb13,
3 => bb21,
4 => bb5,
5 => bb11,
256195237758030955990527543814522067267 => bb30,
_ => bb15
}
}
bb30 = {
_49 = _26;
(*_17) = core::ptr::addr_of_mut!((*_23));
_36 = Field::<char>(Variant(_24.fld2, 0), 1);
_24.fld5 = Field::<u64>(Variant(_24.fld4, 0), 0) as f32;
_28.1 = core::ptr::addr_of_mut!(_40.1);
_26 = _34 as f32;
match _12 {
0 => bb7,
1 => bb19,
2 => bb6,
3 => bb29,
4 => bb31,
5 => bb32,
6 => bb33,
256195237758030955990527543814522067267 => bb35,
_ => bb34
}
}
bb31 = {
RET = [(-24025_i16),(-4799_i16)];
_5 = !_9;
RET = [32309_i16,(-6344_i16)];
_1 = Move(_8);
_16 = 6482494411137456549_i64 as usize;
_2 = '\u{99bb5}';
_12 = 256195237758030955990527543814522067267_u128;
_18 = &_7;
_5 = _9 + _13;
_9 = _5 & _5;
_5 = _9 >> (*_18);
_6 = [190_u8,100_u8,242_u8,239_u8,11_u8,192_u8];
_13 = _5 + _5;
RET = [(-30968_i16),1786_i16];
_2 = '\u{6b1fc}';
_21 = 22988_u16 as f64;
match _12 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
256195237758030955990527543814522067267 => bb11,
_ => bb8
}
}
bb32 = {
(*_23) = [(-25401_i16),(-6808_i16)];
(*_17) = core::ptr::addr_of_mut!((*_23));
_3 = &_20;
_24.fld2 = Adt23::Variant1 { fld0: 23814_u16,fld1: _7,fld2: Field::<u64>(Variant(_24.fld4, 0), 0) };
(*_23) = [25982_i16,820_i16];
(*_23)[_16] = 26607_i16 - (-675_i16);
(*_23)[_16] = -(-21504_i16);
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_29) = core::ptr::addr_of_mut!(_35);
(*_17) = core::ptr::addr_of_mut!((*_23));
place!(Field::<i8>(Variant(_24.fld4, 0), 1)) = (-81_i8);
_7 = _16 as u32;
(*_23)[_16] = 18749_u16 as i16;
_40.0.fld1 = !_12;
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
match _6[_16] {
0 => bb19,
1 => bb16,
2 => bb11,
3 => bb10,
4 => bb5,
5 => bb13,
100 => bb23,
_ => bb12
}
}
bb33 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb34 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
place!(Field::<i8>(Variant(_24.fld4, 0), 1)) = _24.fld5 as i8;
place!(Field::<u64>(Variant(_24.fld4, 0), 0)) = 502186412759243108_u64 | 8475248073526081227_u64;
(*_23) = [24154_i16,13849_i16];
_25 = !31765909112664449443730712012509042942_i128;
(*_23) = [(-26712_i16),3567_i16];
_21 = -(*_3);
_28.0 = _24.fld5 as i64;
(*_23)[_16] = _28.0 as i16;
(*_23)[_16] = 26716_i16 | 27465_i16;
_24.fld2 = Adt23::Variant0 { fld0: _24.fld0,fld1: _2,fld2: _13,fld3: Field::<i8>(Variant(_24.fld4, 0), 1),fld4: _16,fld5: 59080_u16 };
(*_23)[_16] = 16324_i16 * 327_i16;
_2 = Field::<char>(Variant(_24.fld2, 0), 1);
(*_23)[_16] = 10608_i16;
(*_23) = [26064_i16,(-9409_i16)];
_3 = &_21;
(*_17) = core::ptr::addr_of_mut!((*_23));
_24.fld0 = _5 <= _5;
(*_23)[_16] = (-26978_i16) ^ 8447_i16;
(*_23) = [2219_i16,19475_i16];
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = (-25101_i16) ^ (-31474_i16);
(*_23) = [3396_i16,(-8387_i16)];
_31 = _22 - _22;
(*_23)[_16] = (-25191_i16) | (-1054_i16);
match _24.fld1 {
0 => bb13,
1 => bb10,
2 => bb6,
3 => bb12,
4 => bb5,
5 => bb16,
256195237758030955990527543814522067267 => bb18,
_ => bb17
}
}
bb35 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
RET = [3040_i16,(-21315_i16)];
_29 = core::ptr::addr_of_mut!(_28.1);
(*_23) = [3673_i16,(-24569_i16)];
match Field::<i8>(Variant(_24.fld2, 0), 3) {
0 => bb14,
1 => bb33,
2 => bb7,
3 => bb26,
4 => bb36,
5 => bb37,
340282366920938463463374607431768211375 => bb39,
_ => bb38
}
}
bb36 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb37 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb38 = {
RET = [(-24025_i16),(-4799_i16)];
_5 = !_9;
RET = [32309_i16,(-6344_i16)];
_1 = Move(_8);
_16 = 6482494411137456549_i64 as usize;
_2 = '\u{99bb5}';
_12 = 256195237758030955990527543814522067267_u128;
_18 = &_7;
_5 = _9 + _13;
_9 = _5 & _5;
_5 = _9 >> (*_18);
_6 = [190_u8,100_u8,242_u8,239_u8,11_u8,192_u8];
_13 = _5 + _5;
RET = [(-30968_i16),1786_i16];
_2 = '\u{6b1fc}';
_21 = 22988_u16 as f64;
match _12 {
0 => bb1,
1 => bb2,
2 => bb9,
3 => bb4,
4 => bb5,
5 => bb6,
6 => bb7,
256195237758030955990527543814522067267 => bb11,
_ => bb8
}
}
bb39 = {
_41 = (-5780_i16) as f64;
_36 = _27;
_50 = &(*_17);
_7 = 1073386334_u32 + 1393476938_u32;
(*_29) = core::ptr::addr_of_mut!(_35);
_53 = _27;
_6 = [Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2)];
(*_23) = [(-27274_i16),(-1174_i16)];
(*_29) = core::ptr::addr_of_mut!(_35);
(*_17) = core::ptr::addr_of_mut!((*_23));
_24.fld6 = _24.fld5 as f64;
(*_23) = [23469_i16,(-16401_i16)];
(*_17) = core::ptr::addr_of_mut!(RET);
(*_29) = core::ptr::addr_of_mut!(_35);
Goto(bb40)
}
bb40 = {
_52 = Move(_24.fld4);
match Field::<usize>(Variant(_24.fld2, 0), 4) {
0 => bb30,
2 => bb41,
3 => bb42,
1 => bb44,
_ => bb43
}
}
bb41 = {
_41 = (-5780_i16) as f64;
_36 = _27;
_50 = &(*_17);
_7 = 1073386334_u32 + 1393476938_u32;
(*_29) = core::ptr::addr_of_mut!(_35);
_53 = _27;
_6 = [Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2)];
(*_23) = [(-27274_i16),(-1174_i16)];
(*_29) = core::ptr::addr_of_mut!(_35);
(*_17) = core::ptr::addr_of_mut!((*_23));
_24.fld6 = _24.fld5 as f64;
(*_23) = [23469_i16,(-16401_i16)];
(*_17) = core::ptr::addr_of_mut!(RET);
(*_29) = core::ptr::addr_of_mut!(_35);
Goto(bb40)
}
bb42 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = (-23378_i16) - (-28125_i16);
(*_23)[_16] = 1079733091_i32 as i16;
_3 = &_20;
(*_23) = [(-2128_i16),5360_i16];
match (*_23)[_16] {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb11,
5360 => bb15,
_ => bb8
}
}
bb43 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb44 = {
_54.fld6 = _21;
(*_23) = [6666_i16,(-28650_i16)];
_48 = !Field::<u16>(Variant(_24.fld2, 0), 5);
_44 = -_31;
_1 = Move(_8);
_54 = Adt31 { fld0: _40.0.fld0,fld1: _40.0.fld1,fld2: _24.fld2,fld3: _24.fld3,fld4: Move(_52),fld5: _49,fld6: _24.fld6 };
_47 = _26 - _24.fld5;
(*_17) = core::ptr::addr_of_mut!((*_23));
_51 = &_54.fld6;
_29 = core::ptr::addr_of_mut!((*_29));
_13 = Field::<i8>(Variant(_24.fld2, 0), 3) as isize;
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_29) = core::ptr::addr_of_mut!(_40.1);
place!(Field::<u16>(Variant(_24.fld2, 0), 5)) = Field::<u16>(Variant(_54.fld2, 0), 5);
place!(Field::<usize>(Variant(_54.fld2, 0), 4)) = _28.0 as usize;
(*_29) = core::ptr::addr_of_mut!(_35);
(*_23) = [(-955_i16),(-20263_i16)];
(*_23) = [4230_i16,(-26123_i16)];
_54.fld1 = _40.0.fld1;
(*_17) = core::ptr::addr_of_mut!((*_23));
_43 = !_54.fld0;
_40.0.fld4 = Move(_54.fld4);
_54.fld3 = _24.fld3;
place!(Field::<u8>(Variant(_40.0.fld4, 0), 2)) = 4_u8 + 107_u8;
_52 = Move(_40.0.fld4);
_24.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_52, 0), 0),fld1: Field::<i8>(Variant(_24.fld2, 0), 3),fld2: Field::<u8>(Variant(_52, 0), 2) };
_36 = Field::<char>(Variant(_24.fld2, 0), 1);
_3 = &(*_51);
match Field::<usize>(Variant(_24.fld2, 0), 4) {
1 => bb46,
_ => bb45
}
}
bb45 = {
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_23)[_16] = (-23378_i16) - (-28125_i16);
(*_23)[_16] = 1079733091_i32 as i16;
_3 = &_20;
(*_23) = [(-2128_i16),5360_i16];
match (*_23)[_16] {
0 => bb1,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb11,
5360 => bb15,
_ => bb8
}
}
bb46 = {
RET = [(-19328_i16),13077_i16];
_5 = _34;
_6 = [Field::<u8>(Variant(_52, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_52, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_24.fld4, 0), 2),Field::<u8>(Variant(_52, 0), 2)];
(*_23) = [(-2773_i16),(-31739_i16)];
_29 = core::ptr::addr_of_mut!((*_29));
_40.0 = Adt31 { fld0: _54.fld0,fld1: _54.fld1,fld2: _24.fld2,fld3: _24.fld3,fld4: Move(_52),fld5: _26,fld6: (*_51) };
_40.1 = _35;
_24.fld5 = 11800_i16 as f32;
place!(Field::<bool>(Variant(_54.fld2, 0), 0)) = _24.fld0;
_54.fld0 = (*_51) >= (*_3);
_29 = core::ptr::addr_of_mut!((*_29));
_28.1 = core::ptr::addr_of_mut!(_40.1);
RET = [16627_i16,23224_i16];
place!(Field::<bool>(Variant(_54.fld2, 0), 0)) = (*_51) > (*_3);
(*_23) = [(-13847_i16),(-30444_i16)];
match Field::<usize>(Variant(_24.fld2, 0), 4) {
0 => bb43,
2 => bb47,
1 => bb49,
_ => bb48
}
}
bb47 = {
(*_29) = core::ptr::addr_of_mut!(_40.1);
_34 = !_13;
(*_23) = [(-9068_i16),(-8262_i16)];
_37 = (_24.fld3.0,);
(*_17) = core::ptr::addr_of_mut!((*_23));
(*_17) = core::ptr::addr_of_mut!((*_23));
_35 = !(-2058832003_i32);
(*_23)[_16] = 60619_u16 as i16;
(*_29) = core::ptr::addr_of_mut!(_35);
_24.fld5 = -_22;
Goto(bb26)
}
bb48 = {
RET = [17799_i16,(-5604_i16)];
Goto(bb2)
}
bb49 = {
_22 = _47 + _47;
_55 = Field::<isize>(Variant(_40.0.fld2, 0), 2);
_40.0.fld2 = _54.fld2;
place!(Field::<char>(Variant(_40.0.fld2, 0), 1)) = _2;
_12 = !_24.fld1;
_40.0.fld4 = Move(_24.fld4);
_24 = Adt31 { fld0: _40.0.fld0,fld1: _12,fld2: _40.0.fld2,fld3: _40.0.fld3,fld4: Move(_40.0.fld4),fld5: _40.0.fld5,fld6: (*_3) };
(*_23) = [15917_i16,(-27436_i16)];
(*_29) = core::ptr::addr_of_mut!(_35);
(*_23) = [(-4960_i16),(-31571_i16)];
_12 = !_24.fld1;
(*_17) = core::ptr::addr_of_mut!((*_23));
_54.fld0 = _24.fld0 <= Field::<bool>(Variant(_24.fld2, 0), 0);
(*_23) = [(-22407_i16),31243_i16];
_63 = Field::<isize>(Variant(_40.0.fld2, 0), 2) << _55;
_54.fld4 = Move(_24.fld4);
(*_17) = core::ptr::addr_of_mut!((*_23));
_44 = _7 as f32;
_41 = (*_51) * (*_51);
place!(Field::<isize>(Variant(_24.fld2, 0), 2)) = Field::<isize>(Variant(_40.0.fld2, 0), 2);
_62 = Move(_3);
Goto(bb50)
}
bb50 = {
Call(_64 = dump_var(7_usize, 6_usize, Move(_6), 53_usize, Move(_53), 12_usize, Move(_12), 13_usize, Move(_13)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_64 = dump_var(7_usize, 5_usize, Move(_5), 43_usize, Move(_43), 36_usize, Move(_36), 55_usize, Move(_55)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_64 = dump_var(7_usize, 34_usize, Move(_34), 48_usize, Move(_48), 65_usize, _65, 65_usize, _65), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn8(mut _1: *mut [i16; 2],mut _2: *mut *mut i32) -> i16 {
mir! {
type RET = i16;
let _3: *mut &'static mut (i32, f32, Adt18, Adt18);
let _4: bool;
let _5: f32;
let _6: isize;
let _7: &'static mut &'static mut i8;
let _8: u16;
let _9: *mut [i16; 2];
let _10: *const [usize; 2];
let _11: (&'static mut *mut [u64; 1], u128);
let _12: f64;
let _13: &'static mut *mut *mut i32;
let _14: isize;
let _15: &'static mut *mut *mut i32;
let _16: f64;
let _17: f32;
let _18: f64;
let _19: [usize; 2];
let _20: [u64; 1];
let _21: (i128,);
let _22: &'static u32;
let _23: *const &'static mut i8;
let _24: [i128; 4];
let _25: char;
let _26: &'static mut &'static mut i8;
let _27: f32;
let _28: &'static Adt51;
let _29: &'static *mut [i16; 2];
let _30: &'static mut (i32, f32, Adt18, Adt18);
let _31: *mut *mut i32;
let _32: *mut [bool; 4];
let _33: *const [i128; 4];
let _34: [usize; 2];
let _35: &'static mut *mut *mut i32;
let _36: bool;
let _37: isize;
let _38: usize;
let _39: isize;
let _40: u64;
let _41: *mut i16;
let _42: [u8; 2];
let _43: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _44: isize;
let _45: *mut i16;
let _46: f32;
let _47: &'static u32;
let _48: bool;
let _49: *const [usize; 2];
let _50: [usize; 5];
let _51: isize;
let _52: *const [usize; 2];
let _53: f64;
let _54: &'static &'static f64;
let _55: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _56: ();
let _57: ();
{
RET = (-11744_i16) + (-2619_i16);
RET = (-20648_i16) | 20327_i16;
RET = (-80_i8) as i16;
_4 = RET < RET;
_4 = false;
_4 = false;
_4 = false | true;
RET = 25222_i16;
_6 = 114_isize + (-9223372036854775808_isize);
_5 = 3055092816446910647_i64 as f32;
_4 = _6 >= _6;
_4 = false;
_5 = 9163377876571575773_u64 as f32;
_8 = 53051_u16 >> _6;
_4 = false;
_6 = _8 as isize;
_6 = RET as isize;
_4 = !false;
_6 = 9223372036854775807_isize >> _8;
_9 = Move(_1);
_1 = Move(_9);
Goto(bb1)
}
bb1 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb3 = {
_4 = true;
_16 = _12 * _12;
_5 = _11.1 as f32;
RET = (-26487_i16) - (-23295_i16);
_6 = !_14;
_16 = -_12;
_16 = -_12;
_17 = _5 - _5;
_5 = _17 + _17;
RET = 904_i16;
_11.1 = !56290189031420643786132498975067279961_u128;
_10 = core::ptr::addr_of!(_19);
(*_10) = [3535665874840362274_usize,3_usize];
_10 = core::ptr::addr_of!((*_10));
(*_10) = [5_usize,16965392735511782513_usize];
match RET {
0 => bb1,
1 => bb4,
904 => bb6,
_ => bb5
}
}
bb4 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb5 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
(*_10) = [18174828209044871718_usize,3210476188400959232_usize];
(*_10) = [1_usize,339555990704796080_usize];
(*_10) = [7_usize,11010560702512257055_usize];
_18 = _16 * _16;
(*_10) = [3_usize,4_usize];
(*_10) = [4_usize,7_usize];
_11.1 = 315129311503246000910065266049264935978_u128 >> _6;
(*_10) = [7601734698195214208_usize,7_usize];
(*_10) = [6_usize,18227515063236442829_usize];
_16 = -_12;
(*_10) = [17314411556397225975_usize,4_usize];
(*_10) = [9238239379040212095_usize,16506643333055568310_usize];
(*_10) = [18437780121352812539_usize,0_usize];
(*_10) = [2105881757789955923_usize,3_usize];
(*_10) = [58313964572137401_usize,8775641361152630943_usize];
(*_10) = [14024890867291020378_usize,11215524084201878193_usize];
_20 = [15822104245965575301_u64];
_14 = _6 ^ _6;
(*_10) = [7500698567978991514_usize,2124850383924052719_usize];
match RET {
0 => bb5,
1 => bb2,
904 => bb7,
_ => bb4
}
}
bb7 = {
(*_10) = [1_usize,6_usize];
(*_10) = [4_usize,10183257373920477073_usize];
(*_10) = [6_usize,4802607324121959444_usize];
(*_10) = [1697842689450085737_usize,6_usize];
(*_10) = [3_usize,7_usize];
_5 = _17 * _17;
_11.1 = _14 as u128;
(*_10) = [4_usize,8710199120993190394_usize];
_16 = _18 - _18;
_21 = (75509367400645614005335673583701503968_i128,);
_16 = _12 - _18;
(*_10) = [6_usize,7579138920731943556_usize];
_24 = [_21.0,_21.0,_21.0,_21.0];
(*_10) = [1_usize,3564804616330069932_usize];
_21.0 = _14 as i128;
_21.0 = (-12355039696457793196146861233028423688_i128);
_25 = '\u{dddfa}';
_24 = [_21.0,_21.0,_21.0,_21.0];
(*_10) = [5_usize,3859997036709970396_usize];
_11.1 = 226684950875177503063355743114837344520_u128 - 188178710425752524866521231479061086610_u128;
_27 = _17 - _5;
match _21.0 {
0 => bb5,
1 => bb6,
2 => bb8,
3 => bb9,
4 => bb10,
5 => bb11,
327927327224480670267227746198739787768 => bb13,
_ => bb12
}
}
bb8 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb9 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb10 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb11 = {
_4 = true;
_16 = _12 * _12;
_5 = _11.1 as f32;
RET = (-26487_i16) - (-23295_i16);
_6 = !_14;
_16 = -_12;
_16 = -_12;
_17 = _5 - _5;
_5 = _17 + _17;
RET = 904_i16;
_11.1 = !56290189031420643786132498975067279961_u128;
_10 = core::ptr::addr_of!(_19);
(*_10) = [3535665874840362274_usize,3_usize];
_10 = core::ptr::addr_of!((*_10));
(*_10) = [5_usize,16965392735511782513_usize];
match RET {
0 => bb1,
1 => bb4,
904 => bb6,
_ => bb5
}
}
bb12 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb13 = {
_12 = 1175598194_i32 as f64;
Call(_6 = core::intrinsics::transmute(_14), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_17 = _27;
_18 = _16 - _12;
_5 = _17 - _27;
_19 = [1719021507738167844_usize,3_usize];
(*_10) = [13825905196937936392_usize,7_usize];
(*_10) = [0_usize,1_usize];
Goto(bb15)
}
bb15 = {
(*_10) = [2_usize,6_usize];
Goto(bb16)
}
bb16 = {
(*_10) = [12799865234281141470_usize,0_usize];
(*_10) = [1_usize,9071980357382896488_usize];
_19 = [17550739923783853234_usize,1469600469370704618_usize];
(*_10) = [4212312391662356757_usize,6_usize];
(*_10) = [6669248479566190136_usize,2422689839729714622_usize];
_5 = -_27;
(*_10) = [7916971273922241111_usize,17494711624277845570_usize];
(*_10) = [4_usize,3402160387800478801_usize];
(*_10) = [0_usize,4_usize];
_5 = RET as f32;
_14 = _6 & _6;
_21 = ((-67572936698176917109361065212809590179_i128),);
(*_10) = [6_usize,2_usize];
match _21.0 {
0 => bb1,
1 => bb7,
2 => bb5,
3 => bb8,
4 => bb17,
272709430222761546354013542218958621277 => bb19,
_ => bb18
}
}
bb17 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb19 = {
(*_10) = [7_usize,4_usize];
(*_10) = [9567171558246435700_usize,6637513620519422811_usize];
_10 = core::ptr::addr_of!((*_10));
(*_10) = [1834622383701806476_usize,3_usize];
(*_10) = [6_usize,11505789460752934284_usize];
_20 = [4585612529492539052_u64];
(*_10) = [1_usize,1_usize];
(*_10) = [2_usize,66926179011931060_usize];
(*_10) = [3_usize,1_usize];
_19 = [7793955048034419216_usize,10797532427062320525_usize];
_19 = [12320216273290312597_usize,10480703507012324074_usize];
(*_10) = [7_usize,14223766779321965563_usize];
_4 = _16 != _12;
(*_10) = [2_usize,6_usize];
_27 = _17 + _17;
RET = -18048_i16;
(*_10) = [0_usize,2_usize];
_5 = _27;
(*_10) = [17315662549016005611_usize,0_usize];
(*_10) = [10506293345888932061_usize,18380857636637987023_usize];
(*_10) = [3278101046401582607_usize,6184031556915973870_usize];
(*_10) = [1_usize,1_usize];
_27 = _18 as f32;
_12 = _16 * _16;
(*_10) = [5376539396279797786_usize,8430543005731539972_usize];
(*_10) = [1_usize,175465567941716117_usize];
_21.0 = (-100978444495803403437464588531183105489_i128) | 83774257319194025683716291095996040773_i128;
_27 = 91990092_u32 as f32;
Call(_5 = core::intrinsics::transmute(_25), ReturnTo(bb20), UnwindUnreachable())
}
bb20 = {
(*_10) = [17778455199573377003_usize,5_usize];
(*_10) = [9894081722493075034_usize,17181039923341733095_usize];
_18 = _16 * _12;
(*_10) = [4_usize,0_usize];
(*_10) = [0_usize,3831085715829299149_usize];
_21.0 = -65342674642963090879570989419279725057_i128;
(*_10) = [11074291966788949142_usize,1_usize];
(*_10) = [2217389074470423092_usize,17127946561280783718_usize];
Goto(bb21)
}
bb21 = {
_8 = !23809_u16;
(*_10) = [15536427472163411092_usize,3_usize];
(*_10) = [4_usize,0_usize];
_11.1 = 268805105222866259459668662524377143092_u128 & 109169625953444230875034705401061255092_u128;
(*_10) = [6_usize,8997717229366755148_usize];
(*_10) = [392635149058959459_usize,3_usize];
(*_10) = [15950949377193443605_usize,5143857152674542876_usize];
_10 = core::ptr::addr_of!((*_10));
_16 = RET as f64;
(*_10) = [2_usize,14972484547300422133_usize];
_21 = ((-39140641274491351818327027436844988954_i128),);
_16 = -_12;
_27 = _17;
(*_10) = [1_usize,6_usize];
Goto(bb22)
}
bb22 = {
_36 = _4 ^ _4;
_36 = _18 <= _18;
(*_10) = [5_usize,8334978941255098323_usize];
_5 = _17;
Goto(bb23)
}
bb23 = {
_20 = [11336639795605575794_u64];
_20 = [5077879540940770044_u64];
_34 = [4_usize,1660362190338297011_usize];
(*_10) = _34;
(*_10) = [7981623706489545238_usize,17135577728281658141_usize];
(*_10) = [0_usize,0_usize];
_34 = [4777503025261750350_usize,1_usize];
Goto(bb24)
}
bb24 = {
_11.1 = 102624128193909539478829213547737523228_u128 & 125640975827148242925164403892916643276_u128;
(*_10) = [5_usize,0_usize];
_33 = core::ptr::addr_of!(_24);
_16 = -_12;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = _34;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = [12012885179960077654_usize,2_usize];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
match _21.0 {
0 => bb25,
1 => bb26,
2 => bb27,
3 => bb28,
301141725646447111645047579994923222502 => bb30,
_ => bb29
}
}
bb25 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb26 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb27 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb28 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb29 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb30 = {
(*_33) = [_21.0,_21.0,_21.0,_21.0];
match _21.0 {
0 => bb12,
1 => bb31,
2 => bb32,
3 => bb33,
4 => bb34,
5 => bb35,
301141725646447111645047579994923222502 => bb37,
_ => bb36
}
}
bb31 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb32 = {
(*_10) = [12799865234281141470_usize,0_usize];
(*_10) = [1_usize,9071980357382896488_usize];
_19 = [17550739923783853234_usize,1469600469370704618_usize];
(*_10) = [4212312391662356757_usize,6_usize];
(*_10) = [6669248479566190136_usize,2422689839729714622_usize];
_5 = -_27;
(*_10) = [7916971273922241111_usize,17494711624277845570_usize];
(*_10) = [4_usize,3402160387800478801_usize];
(*_10) = [0_usize,4_usize];
_5 = RET as f32;
_14 = _6 & _6;
_21 = ((-67572936698176917109361065212809590179_i128),);
(*_10) = [6_usize,2_usize];
match _21.0 {
0 => bb1,
1 => bb7,
2 => bb5,
3 => bb8,
4 => bb17,
272709430222761546354013542218958621277 => bb19,
_ => bb18
}
}
bb33 = {
_36 = _4 ^ _4;
_36 = _18 <= _18;
(*_10) = [5_usize,8334978941255098323_usize];
_5 = _17;
Goto(bb23)
}
bb34 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb35 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb36 = {
(*_10) = [7_usize,4_usize];
(*_10) = [9567171558246435700_usize,6637513620519422811_usize];
_10 = core::ptr::addr_of!((*_10));
(*_10) = [1834622383701806476_usize,3_usize];
(*_10) = [6_usize,11505789460752934284_usize];
_20 = [4585612529492539052_u64];
(*_10) = [1_usize,1_usize];
(*_10) = [2_usize,66926179011931060_usize];
(*_10) = [3_usize,1_usize];
_19 = [7793955048034419216_usize,10797532427062320525_usize];
_19 = [12320216273290312597_usize,10480703507012324074_usize];
(*_10) = [7_usize,14223766779321965563_usize];
_4 = _16 != _12;
(*_10) = [2_usize,6_usize];
_27 = _17 + _17;
RET = -18048_i16;
(*_10) = [0_usize,2_usize];
_5 = _27;
(*_10) = [17315662549016005611_usize,0_usize];
(*_10) = [10506293345888932061_usize,18380857636637987023_usize];
(*_10) = [3278101046401582607_usize,6184031556915973870_usize];
(*_10) = [1_usize,1_usize];
_27 = _18 as f32;
_12 = _16 * _16;
(*_10) = [5376539396279797786_usize,8430543005731539972_usize];
(*_10) = [1_usize,175465567941716117_usize];
_21.0 = (-100978444495803403437464588531183105489_i128) | 83774257319194025683716291095996040773_i128;
_27 = 91990092_u32 as f32;
Call(_5 = core::intrinsics::transmute(_25), ReturnTo(bb20), UnwindUnreachable())
}
bb37 = {
(*_10) = _34;
_14 = _18 as isize;
RET = _8 as i16;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_12 = _16 - _16;
_38 = 7_usize + 8098076386209786479_usize;
_37 = _21.0 as isize;
(*_10) = [_38,_38];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = [_38,_38];
(*_10) = _34;
match _21.0 {
0 => bb1,
1 => bb25,
2 => bb19,
301141725646447111645047579994923222502 => bb38,
_ => bb23
}
}
bb38 = {
_39 = _16 as isize;
(*_10) = _34;
_27 = _17 * _5;
_41 = core::ptr::addr_of_mut!(RET);
_6 = -_14;
_39 = _6;
_25 = '\u{2ab01}';
(*_10) = [_38,_38];
_12 = (*_41) as f64;
(*_10) = [_38,_38];
_17 = _27;
(*_41) = 455708512303035641_u64 as i16;
_36 = !_4;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_8 = !11281_u16;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_43.0 = (-2942944442054261849_i64);
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = _34;
(*_41) = (-18354_i16) >> _14;
(*_41) = (-4557_i16) | (-29503_i16);
_31 = core::ptr::addr_of_mut!(_43.1);
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_41) = (-21690_i16);
(*_41) = (-2795_i16) >> _39;
_37 = _18 as isize;
Goto(bb39)
}
bb39 = {
RET = _8 as i16;
_17 = _27 * _27;
_44 = !_6;
(*_10) = [_38,_38];
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = _34;
(*_41) = (-21694_i16);
(*_41) = _17 as i16;
(*_10) = [_38,_38];
(*_41) = 25802_i16 << _44;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
match _43.0 {
0 => bb20,
1 => bb18,
2 => bb3,
3 => bb10,
4 => bb25,
340282366920938463460431662989713949607 => bb41,
_ => bb40
}
}
bb40 = {
_39 = _16 as isize;
(*_10) = _34;
_27 = _17 * _5;
_41 = core::ptr::addr_of_mut!(RET);
_6 = -_14;
_39 = _6;
_25 = '\u{2ab01}';
(*_10) = [_38,_38];
_12 = (*_41) as f64;
(*_10) = [_38,_38];
_17 = _27;
(*_41) = 455708512303035641_u64 as i16;
_36 = !_4;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_8 = !11281_u16;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_43.0 = (-2942944442054261849_i64);
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_10) = _34;
(*_41) = (-18354_i16) >> _14;
(*_41) = (-4557_i16) | (-29503_i16);
_31 = core::ptr::addr_of_mut!(_43.1);
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_41) = (-21690_i16);
(*_41) = (-2795_i16) >> _39;
_37 = _18 as isize;
Goto(bb39)
}
bb41 = {
_13 = &mut _31;
_39 = _6;
_48 = _36;
(*_10) = [_38,_38];
(*_41) = 1046709158_i32 as i16;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_51 = _6 + _44;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_10) = [_38,_38];
_49 = Move(_10);
_45 = Move(_41);
_10 = core::ptr::addr_of!(_34);
(*_33) = [_21.0,_21.0,_21.0,_21.0];
_17 = _51 as f32;
Call(_51 = core::intrinsics::bswap(_44), ReturnTo(bb42), UnwindUnreachable())
}
bb42 = {
(*_10) = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
_16 = -_18;
(*_33) = [_21.0,_21.0,_21.0,_21.0];
match _43.0 {
0 => bb36,
340282366920938463460431662989713949607 => bb43,
_ => bb28
}
}
bb43 = {
_6 = _44 + _51;
(*_10) = [_38,_38];
(*_10) = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_10) = _19;
_40 = !6855072950676536780_u64;
Goto(bb44)
}
bb44 = {
(*_33) = [_21.0,_21.0,_21.0,_21.0];
match _43.0 {
0 => bb23,
1 => bb21,
2 => bb36,
3 => bb19,
4 => bb37,
5 => bb22,
340282366920938463460431662989713949607 => bb46,
_ => bb45
}
}
bb45 = {
_8 = 57845_u16 >> _11.1;
_11.1 = _8 as u128;
_8 = 20293_u16;
RET = (-18730_i16) - 21353_i16;
_11.1 = 177288973767582019368078680216872157988_u128;
_11.1 = 322592101857180506650573048639639317702_u128 | 37990718118214929031420704572687934657_u128;
_4 = _11.1 > _11.1;
_8 = _4 as u16;
_6 = 9223372036854775807_isize * 9223372036854775807_isize;
_14 = _6 * _6;
_11.1 = 190689428702909521105291940818524886766_u128 & 216944409227347133680294759137745084655_u128;
RET = _11.1 as i16;
_6 = _14;
_6 = _14;
_8 = 61143_u16 ^ 55009_u16;
_4 = true & false;
_11.1 = 79146553817922060144123208341241746509_u128 | 302963530303307030820473654252804815213_u128;
_12 = 6_usize as f64;
_6 = -_14;
Goto(bb3)
}
bb46 = {
(*_13) = core::ptr::addr_of_mut!(_43.1);
_19 = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_10) = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
_4 = _27 > _27;
(*_10) = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
_20 = [_40];
(*_10) = [_38,_38];
match _21.0 {
0 => bb32,
301141725646447111645047579994923222502 => bb48,
_ => bb47
}
}
bb47 = {
_11.1 = 243065408188896993054048656001034202398_u128 << _8;
_9 = Move(_1);
_4 = false;
_5 = 94_i8 as f32;
RET = !28017_i16;
_8 = 18943_u16;
_8 = 35320_u16;
_1 = Move(_9);
_9 = Move(_1);
_5 = (-4581788742925439607_i64) as f32;
_5 = 3780118955_u32 as f32;
_11.1 = 14398583630052314424_u64 as u128;
RET = _11.1 as i16;
_12 = (-5754159920735013065_i64) as f64;
Call(_11.1 = fn9(_8, Move(_9), Move(_2), _5, _8, _8, _4, _8, _8, _4, _6, _8), ReturnTo(bb2), UnwindUnreachable())
}
bb48 = {
(*_10) = [_38,_38];
_27 = -_5;
Goto(bb49)
}
bb49 = {
(*_13) = core::ptr::addr_of_mut!(_43.1);
_25 = '\u{10edc3}';
_50 = [_38,_38,_38,_38,_38];
_6 = _51 * _37;
(*_10) = [_38,_38];
_41 = core::ptr::addr_of_mut!(RET);
(*_13) = core::ptr::addr_of_mut!(_43.1);
_53 = _16;
(*_10) = [_38,_38];
(*_13) = core::ptr::addr_of_mut!(_43.1);
(*_10) = [_38,_38];
Goto(bb50)
}
bb50 = {
Call(_56 = dump_var(8_usize, 8_usize, Move(_8), 48_usize, Move(_48), 24_usize, Move(_24), 39_usize, Move(_39)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_56 = dump_var(8_usize, 20_usize, Move(_20), 25_usize, Move(_25), 34_usize, Move(_34), 50_usize, Move(_50)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_56 = dump_var(8_usize, 6_usize, Move(_6), 57_usize, _57, 57_usize, _57, 57_usize, _57), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn9(mut _1: u16,mut _2: *mut [i16; 2],mut _3: *mut *mut i32,mut _4: f32,mut _5: u16,mut _6: u16,mut _7: bool,mut _8: u16,mut _9: u16,mut _10: bool,mut _11: isize,mut _12: u16) -> u128 {
mir! {
type RET = u128;
let _13: [usize; 8];
let _14: &'static [u64; 1];
let _15: u8;
let _16: &'static mut (i32, f32, Adt18, Adt18);
let _17: *const *mut [i16; 2];
let _18: u8;
let _19: u64;
let _20: [u8; 6];
let _21: bool;
let _22: *mut [i16; 2];
let _23: [isize; 8];
let _24: &'static [u64; 1];
let _25: &'static mut &'static mut i8;
let _26: Adt48;
let _27: f64;
let _28: isize;
let _29: *const *mut [i16; 2];
let _30: f64;
let _31: &'static u32;
let _32: u8;
let _33: (i128,);
let _34: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _35: Adt48;
let _36: &'static mut *mut *mut i32;
let _37: f32;
let _38: usize;
let _39: &'static &'static f64;
let _40: f64;
let _41: char;
let _42: (Adt23,);
let _43: i16;
let _44: i128;
let _45: isize;
let _46: ();
let _47: ();
{
_8 = _6 + _12;
_10 = _4 <= _4;
_5 = 2886804686967447355_u64 as u16;
RET = 162968869778708339725184670709479449536_u128 >> _9;
_7 = _10;
_11 = (-9223372036854775808_isize) * (-9223372036854775808_isize);
_15 = 239_u8;
_5 = _12 * _9;
_7 = _10 == _10;
_8 = _6;
_6 = 4095008283_u32 as u16;
_5 = 6176183379129654815_u64 as u16;
_13 = [9136778988278564466_usize,7335217071067866799_usize,5_usize,5_usize,3_usize,7589566200550870180_usize,7168681147875628496_usize,8899203569741892801_usize];
_12 = !_1;
_17 = core::ptr::addr_of!(_2);
_10 = _7 >= _7;
_13 = [5_usize,11702388585331982586_usize,7890218018352136065_usize,15241877836813611703_usize,6_usize,1_usize,7_usize,17772411824539153657_usize];
_8 = !_6;
_12 = !_5;
_1 = (-18651_i16) as u16;
_13 = [14597049632745959461_usize,7247666176520034291_usize,4_usize,2_usize,3_usize,7_usize,4500769704285699532_usize,0_usize];
_11 = !(-125_isize);
_18 = 13713931084043719871_u64 as u8;
Goto(bb1)
}
bb1 = {
_6 = _8 / _9;
_12 = _9 | _5;
_12 = !_1;
_19 = _10 as u64;
_17 = core::ptr::addr_of!((*_17));
_9 = _6 << _19;
_11 = !(-79_isize);
_11 = 3690542451_u32 as isize;
_10 = _7 ^ _7;
_18 = _15;
_18 = !_15;
_20 = [_18,_15,_18,_18,_15,_15];
_5 = _9 << _6;
_4 = (-2513982641930945537_i64) as f32;
_8 = _5 << _5;
RET = _10 as u128;
Call(_15 = fn10(Move(_17), Move((*_17)), _8, Move(_3), _12, _11), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_6 = _5 - _8;
_15 = _18 << _6;
_10 = RET != RET;
_9 = !_6;
_7 = _5 > _8;
_4 = (-111504225526962315814145433485773158002_i128) as f32;
_7 = !_10;
_20 = [_15,_15,_15,_15,_15,_15];
_20 = [_15,_15,_15,_15,_15,_15];
_4 = _6 as f32;
_18 = !_15;
_8 = _5;
_17 = core::ptr::addr_of!(_2);
_21 = !_10;
_10 = !_7;
_4 = _11 as f32;
_11 = 52_isize | 9223372036854775807_isize;
_5 = _6;
_10 = !_7;
_19 = 17921238318669030512_u64 * 15339032546044165350_u64;
_8 = !_5;
_7 = _21 ^ _10;
_8 = !_5;
_19 = 15211409766262952915_u64 * 595423577748009328_u64;
_7 = _21;
_11 = -(-89_isize);
Goto(bb3)
}
bb3 = {
_6 = _5 << _15;
_19 = !7172871635248943060_u64;
_4 = _19 as f32;
_1 = _8 << _18;
_19 = 1098160635590993848_u64 & 1093916673701589887_u64;
_5 = _1;
_8 = _1 - _9;
_9 = _11 as u16;
_5 = _1 & _6;
RET = 5_usize as u128;
_5 = _1;
Goto(bb4)
}
bb4 = {
_27 = 1015171361_i32 as f64;
_23 = [_11,_11,_11,_11,_11,_11,_11,_11];
_1 = _5;
Goto(bb5)
}
bb5 = {
_21 = !_7;
_8 = _1 & _1;
_27 = 3750017618_u32 as f64;
_1 = _5 - _5;
_11 = 1_usize as isize;
Goto(bb6)
}
bb6 = {
_28 = _11 | _11;
_10 = _8 < _5;
_10 = _8 == _8;
_7 = !_10;
_20 = [_18,_15,_15,_15,_18,_15];
_6 = !_8;
_15 = !_18;
_20 = [_18,_18,_15,_15,_15,_18];
_11 = _28 << _6;
_9 = _5 + _1;
_29 = core::ptr::addr_of!((*_17));
_7 = _10 ^ _10;
_18 = _15 * _15;
_8 = !_6;
_9 = _6;
_7 = _8 > _8;
_1 = _6 >> _6;
_29 = core::ptr::addr_of!((*_17));
_19 = RET as u64;
_10 = _7 & _7;
Goto(bb7)
}
bb7 = {
_5 = !_6;
_27 = 626_i16 as f64;
_6 = _1 - _1;
_4 = _11 as f32;
_30 = (-118817262415974947950843158886918320761_i128) as f64;
_32 = !_18;
_18 = _32 | _32;
_27 = _30 + _30;
_23 = [_11,_11,_11,_11,_11,_11,_11,_11];
Goto(bb8)
}
bb8 = {
_4 = (-22511_i16) as f32;
_33.0 = (-87684950689999765116742050020668696084_i128) + 16334183323583138227368793295463847385_i128;
_26 = Adt48::Variant0 { fld0: 883989157946251978_usize };
_5 = _1 - _6;
_38 = 17852233421780566432_usize - 2524454538483356928_usize;
_19 = 18017502515222763689_u64 & 3585158798389212498_u64;
_5 = _8 << _9;
Goto(bb9)
}
bb9 = {
_9 = 1371713674_u32 as u16;
place!(Field::<usize>(Variant(_26, 0), 0)) = _38 + _38;
_30 = _27 * _27;
_6 = !_1;
_9 = !_1;
_38 = Field::<usize>(Variant(_26, 0), 0);
_37 = _4 * _4;
_13 = [Field::<usize>(Variant(_26, 0), 0),_38,Field::<usize>(Variant(_26, 0), 0),Field::<usize>(Variant(_26, 0), 0),Field::<usize>(Variant(_26, 0), 0),_38,Field::<usize>(Variant(_26, 0), 0),Field::<usize>(Variant(_26, 0), 0)];
_28 = _11 << _9;
_18 = _32 ^ _32;
_37 = -_4;
_26 = Adt48::Variant0 { fld0: _38 };
_23 = [_28,_28,_11,_28,_28,_28,_28,_11];
_5 = _6 ^ _6;
_23 = [_28,_11,_11,_28,_11,_28,_11,_28];
_42.0 = Adt23::Variant0 { fld0: _21,fld1: '\u{f030d}',fld2: _28,fld3: 8_i8,fld4: _38,fld5: _5 };
Goto(bb10)
}
bb10 = {
_30 = _27;
RET = 153017857036099019355216195447547328985_u128 << _32;
_42.0 = Adt23::Variant1 { fld0: _8,fld1: 1354741231_u32,fld2: _19 };
_41 = '\u{be95d}';
_20 = [_32,_18,_32,_15,_15,_18];
RET = 164673975163534637602509865217783661926_u128 << Field::<u16>(Variant(_42.0, 1), 0);
_4 = -_37;
place!(Field::<u64>(Variant(_42.0, 1), 2)) = _19;
_43 = 1753529768_i32 as i16;
_42.0 = Adt23::Variant0 { fld0: _7,fld1: _41,fld2: _28,fld3: 50_i8,fld4: _38,fld5: _8 };
_17 = core::ptr::addr_of!((*_29));
_26 = Adt48::Variant0 { fld0: Field::<usize>(Variant(_42.0, 0), 4) };
_13 = [Field::<usize>(Variant(_42.0, 0), 4),Field::<usize>(Variant(_42.0, 0), 4),Field::<usize>(Variant(_42.0, 0), 4),Field::<usize>(Variant(_26, 0), 0),Field::<usize>(Variant(_26, 0), 0),Field::<usize>(Variant(_26, 0), 0),_38,_38];
RET = 334155258605904576247393119995579633758_u128 << _32;
_44 = _33.0;
_11 = Field::<isize>(Variant(_42.0, 0), 2);
Goto(bb11)
}
bb11 = {
Call(_46 = dump_var(9_usize, 9_usize, Move(_9), 38_usize, Move(_38), 5_usize, Move(_5), 33_usize, Move(_33)), ReturnTo(bb12), UnwindUnreachable())
}
bb12 = {
Call(_46 = dump_var(9_usize, 10_usize, Move(_10), 41_usize, Move(_41), 7_usize, Move(_7), 11_usize, Move(_11)), ReturnTo(bb13), UnwindUnreachable())
}
bb13 = {
Call(_46 = dump_var(9_usize, 12_usize, Move(_12), 21_usize, Move(_21), 43_usize, Move(_43), 47_usize, _47), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn10(mut _1: *const *mut [i16; 2],mut _2: *mut [i16; 2],mut _3: u16,mut _4: *mut *mut i32,mut _5: u16,mut _6: isize) -> u8 {
mir! {
type RET = u8;
let _7: [isize; 8];
let _8: f64;
let _9: (i16,);
let _10: isize;
let _11: Adt41;
let _12: (Adt31, i32);
let _13: i32;
let _14: i8;
let _15: &'static mut &'static mut i8;
let _16: char;
let _17: *const [i128; 4];
let _18: i32;
let _19: i8;
let _20: [isize; 8];
let _21: &'static mut *mut [u64; 1];
let _22: [u64; 1];
let _23: char;
let _24: &'static mut *mut *mut i32;
let _25: &'static [i128; 4];
let _26: *mut &'static *mut [bool; 4];
let _27: *mut (&'static mut *mut [u64; 1], u128);
let _28: isize;
let _29: isize;
let _30: u8;
let _31: Adt41;
let _32: &'static [i128; 4];
let _33: &'static mut (*mut i32, *mut [i16; 2], u8);
let _34: [bool; 4];
let _35: isize;
let _36: f32;
let _37: (i128,);
let _38: *const [i128; 4];
let _39: isize;
let _40: i128;
let _41: &'static f64;
let _42: [isize; 8];
let _43: f32;
let _44: [char; 2];
let _45: &'static u32;
let _46: ((*mut i32, *mut [i16; 2], u8), (*mut i32, *mut [i16; 2], u8), &'static mut *mut *mut i32, Adt51);
let _47: f32;
let _48: f32;
let _49: isize;
let _50: &'static mut (Adt31, i32);
let _51: &'static mut &'static mut i8;
let _52: u128;
let _53: f32;
let _54: isize;
let _55: &'static mut (i32, f32, Adt18, Adt18);
let _56: &'static mut (i32, f32, Adt18, Adt18);
let _57: *const [u128; 2];
let _58: f32;
let _59: bool;
let _60: [u64; 1];
let _61: [i8; 5];
let _62: *const [i128; 4];
let _63: &'static mut (i32, f32, Adt18, Adt18);
let _64: &'static mut (i32, f32, Adt18, Adt18);
let _65: f32;
let _66: *mut *mut i32;
let _67: u16;
let _68: u32;
let _69: i128;
let _70: u128;
let _71: *mut (&'static mut *mut [u64; 1], u128);
let _72: &'static [u64; 1];
let _73: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _74: (*const *mut [i16; 2], i8, usize);
let _75: *mut i16;
let _76: [i8; 5];
let _77: &'static Adt51;
let _78: *mut i16;
let _79: char;
let _80: ();
let _81: ();
{
_1 = core::ptr::addr_of!(_2);
RET = 32_u8 << _3;
_6 = (-64_isize);
_5 = '\u{6d148}' as u16;
_6 = !(-9223372036854775808_isize);
RET = '\u{4c037}' as u8;
_3 = !_5;
_3 = _5;
_1 = core::ptr::addr_of!((*_1));
_3 = _5 + _5;
_1 = core::ptr::addr_of!((*_1));
_9.0 = (-31745_i16);
_3 = _5 ^ _5;
RET = !226_u8;
_10 = _6 & _6;
_9 = ((-29839_i16),);
_9 = (31818_i16,);
_7 = [_10,_10,_6,_10,_10,_6,_6,_10];
_12.0.fld6 = 95_i8 as f64;
_8 = 2395511836_u32 as f64;
_12.0.fld5 = 1127753953510274073_u64 as f32;
_10 = _6 * _6;
match _9.0 {
31818 => bb2,
_ => bb1
}
}
bb1 = {
Return()
}
bb2 = {
_12.1 = -55557954_i32;
_1 = core::ptr::addr_of!((*_1));
RET = 123_u8 | 87_u8;
_12.0.fld6 = -_8;
Goto(bb3)
}
bb3 = {
_9.0 = 5763_i16 >> _3;
_16 = '\u{ea56c}';
_12.0.fld1 = _12.0.fld5 as u128;
_12.0.fld1 = 69855210510593218015607957580026889492_u128;
_7 = [_10,_10,_10,_10,_6,_10,_10,_10];
_14 = (-7_i8) - (-11_i8);
_12.0.fld4 = Adt18::Variant0 { fld0: 11345682048097724320_u64,fld1: _14,fld2: RET };
_12.0.fld5 = _14 as f32;
_12.0.fld6 = 514430958_u32 as f64;
_13 = _10 as i32;
_12.0.fld0 = true | true;
_12.0.fld4 = Adt18::Variant0 { fld0: 1729943397570893349_u64,fld1: _14,fld2: RET };
_12.0.fld3.0 = !30135989781257602324593809792657957865_i128;
_13 = _12.1;
_12.1 = _13;
_12.0.fld0 = _10 != _10;
_14 = Field::<i8>(Variant(_12.0.fld4, 0), 1) * Field::<i8>(Variant(_12.0.fld4, 0), 1);
_12.0.fld3.0 = (-13172939855567391398287711945534543020_i128) | (-40721145988505045150728625007132366095_i128);
_12.1 = _13;
_16 = '\u{b71ff}';
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = !16011637781459129714_u64;
Goto(bb4)
}
bb4 = {
_12.0.fld0 = true;
_13 = -_12.1;
_9 = ((-21794_i16),);
_12.0.fld2 = Adt23::Variant1 { fld0: _5,fld1: 3417485085_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = _3;
_18 = _12.1;
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 3601300867_u32 * 2750880286_u32;
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = Field::<u64>(Variant(_12.0.fld2, 1), 2) ^ Field::<u64>(Variant(_12.0.fld2, 1), 2);
_12.0.fld0 = false;
Goto(bb5)
}
bb5 = {
_12.0.fld0 = _13 > _18;
_12.0.fld1 = _9.0 as u128;
_3 = _12.0.fld0 as u16;
_12.0.fld3 = (88315544008532418462907441574769903167_i128,);
_18 = _13;
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = Field::<i8>(Variant(_12.0.fld4, 0), 1) as u32;
_12.0.fld1 = !245213270558120476820259684514328518304_u128;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 213514060_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_9 = (29420_i16,);
_12.0.fld2 = Adt23::Variant0 { fld0: _12.0.fld0,fld1: _16,fld2: _10,fld3: _14,fld4: 5_usize,fld5: _5 };
place!(Field::<i8>(Variant(_12.0.fld2, 0), 3)) = Field::<i8>(Variant(_12.0.fld4, 0), 1) - _14;
_5 = !_3;
place!(Field::<i8>(Variant(_12.0.fld2, 0), 3)) = _14 + _14;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 3914236553_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 3842769932_u32;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = Field::<u64>(Variant(_12.0.fld4, 0), 0);
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = _5 - _5;
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = Field::<u64>(Variant(_12.0.fld2, 1), 2) << _12.1;
_12.1 = Field::<u64>(Variant(_12.0.fld4, 0), 0) as i32;
_1 = core::ptr::addr_of!((*_1));
_12.1 = _13;
_9 = (2374_i16,);
_12.0.fld6 = _8 - _8;
Goto(bb6)
}
bb6 = {
_9 = (29697_i16,);
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = !Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld6 = _8 + _8;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = _6 as u64;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_3;
_12.0.fld5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) as f32;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 ^ _14;
_12.1 = _13 << Field::<u64>(Variant(_12.0.fld2, 1), 2);
_6 = _12.0.fld6 as isize;
_5 = _3 + _3;
_20 = [_6,_6,_10,_6,_10,_6,_10,_6];
_1 = core::ptr::addr_of!((*_1));
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1738897962_u32;
Call((*_1) = fn11(), ReturnTo(bb7), UnwindUnreachable())
}
bb7 = {
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _12.1 as i8;
_10 = _6 << _13;
_12.0.fld3.0 = _18 as i128;
_7 = _20;
_7 = _20;
_13 = _12.1;
_22 = [Field::<u64>(Variant(_12.0.fld4, 0), 0)];
_12.1 = 6064045568849454533_usize as i32;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = Field::<u64>(Variant(_12.0.fld4, 0), 0) - Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld0 = false;
_12.0.fld1 = !36012407355009288967167731864258741983_u128;
match Field::<u32>(Variant(_12.0.fld2, 1), 1) {
0 => bb4,
1738897962 => bb9,
_ => bb8
}
}
bb8 = {
_9.0 = 5763_i16 >> _3;
_16 = '\u{ea56c}';
_12.0.fld1 = _12.0.fld5 as u128;
_12.0.fld1 = 69855210510593218015607957580026889492_u128;
_7 = [_10,_10,_10,_10,_6,_10,_10,_10];
_14 = (-7_i8) - (-11_i8);
_12.0.fld4 = Adt18::Variant0 { fld0: 11345682048097724320_u64,fld1: _14,fld2: RET };
_12.0.fld5 = _14 as f32;
_12.0.fld6 = 514430958_u32 as f64;
_13 = _10 as i32;
_12.0.fld0 = true | true;
_12.0.fld4 = Adt18::Variant0 { fld0: 1729943397570893349_u64,fld1: _14,fld2: RET };
_12.0.fld3.0 = !30135989781257602324593809792657957865_i128;
_13 = _12.1;
_12.1 = _13;
_12.0.fld0 = _10 != _10;
_14 = Field::<i8>(Variant(_12.0.fld4, 0), 1) * Field::<i8>(Variant(_12.0.fld4, 0), 1);
_12.0.fld3.0 = (-13172939855567391398287711945534543020_i128) | (-40721145988505045150728625007132366095_i128);
_12.1 = _13;
_16 = '\u{b71ff}';
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = !16011637781459129714_u64;
Goto(bb4)
}
bb9 = {
_20 = _7;
_7 = [_10,_10,_10,_6,_10,_6,_10,_6];
_19 = _13 as i8;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2) ^ Field::<u8>(Variant(_12.0.fld4, 0), 2);
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = _6 as u32;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 3406717863_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_1 = core::ptr::addr_of!((*_1));
_3 = !_5;
_29 = _10;
_23 = _16;
_12.0.fld0 = _5 == _3;
_29 = Field::<i8>(Variant(_12.0.fld4, 0), 1) as isize;
_13 = _29 as i32;
_5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) | _3;
_20 = [_6,_10,_6,_29,_10,_10,_6,_10];
_6 = !_29;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_5;
_22 = [Field::<u64>(Variant(_12.0.fld4, 0), 0)];
_9.0 = !(-29358_i16);
_24 = &mut _4;
_13 = _18;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 + _14;
_7 = [_6,_29,_29,_10,_6,_6,_6,_10];
_29 = _6 | _10;
_10 = _14 as isize;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2);
_23 = _16;
_28 = _6 - _6;
Goto(bb10)
}
bb10 = {
_30 = Field::<u8>(Variant(_12.0.fld4, 0), 2) + Field::<u8>(Variant(_12.0.fld4, 0), 2);
_9.0 = (-8779_i16) << _29;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 2750648549_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_12.0.fld0 = _6 != _10;
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = !3915672_u32;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = _12.0.fld6 as u16;
Goto(bb11)
}
bb11 = {
_12.0.fld6 = _9.0 as f64;
RET = _30;
_29 = _6;
_1 = core::ptr::addr_of!((*_1));
_14 = -Field::<i8>(Variant(_12.0.fld4, 0), 1);
_12.0.fld5 = Field::<i8>(Variant(_12.0.fld4, 0), 1) as f32;
_12.0.fld2 = Adt23::Variant0 { fld0: _12.0.fld0,fld1: _23,fld2: _10,fld3: _14,fld4: 17099048152260801972_usize,fld5: _5 };
_7 = _20;
_19 = !Field::<i8>(Variant(_12.0.fld2, 0), 3);
place!(Field::<i8>(Variant(_12.0.fld2, 0), 3)) = Field::<i8>(Variant(_12.0.fld4, 0), 1) * Field::<i8>(Variant(_12.0.fld4, 0), 1);
_9.0 = -(-32111_i16);
place!(Field::<u16>(Variant(_12.0.fld2, 0), 5)) = _19 as u16;
_12.0.fld6 = _8;
_35 = Field::<isize>(Variant(_12.0.fld2, 0), 2) & _6;
_8 = -_12.0.fld6;
_12.0.fld4 = Adt18::Variant0 { fld0: 9227049187318752241_u64,fld1: _19,fld2: RET };
_10 = _35;
_12.0.fld0 = Field::<bool>(Variant(_12.0.fld2, 0), 0) & Field::<bool>(Variant(_12.0.fld2, 0), 0);
_8 = -_12.0.fld6;
_34 = [Field::<bool>(Variant(_12.0.fld2, 0), 0),Field::<bool>(Variant(_12.0.fld2, 0), 0),_12.0.fld0,_12.0.fld0];
_37 = _12.0.fld3;
_12.0.fld6 = 3950877663_u32 as f64;
Goto(bb12)
}
bb12 = {
place!(Field::<char>(Variant(_12.0.fld2, 0), 1)) = _16;
_12.1 = -_13;
_19 = Field::<i8>(Variant(_12.0.fld4, 0), 1);
place!(Field::<usize>(Variant(_12.0.fld2, 0), 4)) = 6_usize * 6695183044048969080_usize;
_19 = _14 * Field::<i8>(Variant(_12.0.fld2, 0), 3);
_41 = &_12.0.fld6;
_12.0.fld4 = Adt18::Variant1 { fld0: 15416389686369165440_u64,fld1: Field::<usize>(Variant(_12.0.fld2, 0), 4),fld2: _12.0.fld5,fld3: Field::<u16>(Variant(_12.0.fld2, 0), 5),fld4: _12.0.fld1,fld5: _13,fld6: _34 };
place!(Field::<u128>(Variant(_12.0.fld4, 1), 4)) = Field::<bool>(Variant(_12.0.fld2, 0), 0) as u128;
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = 1436251190838859246_u64 ^ 5055681474656641973_u64;
_22 = [Field::<u64>(Variant(_12.0.fld4, 1), 0)];
_12.1 = _13;
_12.0.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_12.0.fld4, 1), 3),fld1: 1498581455_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 1), 0) };
_36 = -Field::<f32>(Variant(_12.0.fld4, 1), 2);
_41 = &_8;
_30 = RET + RET;
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = Field::<u64>(Variant(_12.0.fld2, 1), 2);
_41 = &_12.0.fld6;
Goto(bb13)
}
bb13 = {
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1236068605_u32;
_42 = [_29,_6,_29,_28,_35,_35,_35,_35];
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = Field::<u64>(Variant(_12.0.fld2, 1), 2) | Field::<u64>(Variant(_12.0.fld2, 1), 2);
_35 = Field::<u64>(Variant(_12.0.fld4, 1), 0) as isize;
_12.0.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_12.0.fld4, 1), 3),fld1: 3079910106_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 1), 0) };
_13 = !_12.1;
_12.0.fld5 = _9.0 as f32;
_34 = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
_1 = core::ptr::addr_of!((*_1));
_20 = _7;
_12.0.fld6 = _9.0 as f64;
_19 = _14 & _14;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = Field::<u64>(Variant(_12.0.fld4, 1), 0) * Field::<u64>(Variant(_12.0.fld4, 1), 0);
_42 = [_28,_28,_29,_28,_35,_6,_10,_35];
_12.0.fld2 = Adt23::Variant0 { fld0: _12.0.fld0,fld1: _23,fld2: _35,fld3: _14,fld4: Field::<usize>(Variant(_12.0.fld4, 1), 1),fld5: Field::<u16>(Variant(_12.0.fld4, 1), 3) };
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
_12.0.fld3 = (_37.0,);
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
place!(Field::<bool>(Variant(_12.0.fld2, 0), 0)) = _12.0.fld0;
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = _34;
place!(Field::<u16>(Variant(_12.0.fld2, 0), 5)) = _3 - Field::<u16>(Variant(_12.0.fld4, 1), 3);
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = 14805016260576438415_u64;
_8 = _12.0.fld6;
Goto(bb14)
}
bb14 = {
place!(Field::<isize>(Variant(_12.0.fld2, 0), 2)) = _6 - _28;
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
_41 = &_8;
_16 = Field::<char>(Variant(_12.0.fld2, 0), 1);
_13 = _18 + Field::<i32>(Variant(_12.0.fld4, 1), 5);
_46.2 = &mut (*_24);
_12.0.fld3.0 = _37.0 >> RET;
match Field::<u64>(Variant(_12.0.fld4, 1), 0) {
0 => bb15,
1 => bb16,
2 => bb17,
14805016260576438415 => bb19,
_ => bb18
}
}
bb15 = {
_12.1 = -55557954_i32;
_1 = core::ptr::addr_of!((*_1));
RET = 123_u8 | 87_u8;
_12.0.fld6 = -_8;
Goto(bb3)
}
bb16 = {
_20 = _7;
_7 = [_10,_10,_10,_6,_10,_6,_10,_6];
_19 = _13 as i8;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2) ^ Field::<u8>(Variant(_12.0.fld4, 0), 2);
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = _6 as u32;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 3406717863_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_1 = core::ptr::addr_of!((*_1));
_3 = !_5;
_29 = _10;
_23 = _16;
_12.0.fld0 = _5 == _3;
_29 = Field::<i8>(Variant(_12.0.fld4, 0), 1) as isize;
_13 = _29 as i32;
_5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) | _3;
_20 = [_6,_10,_6,_29,_10,_10,_6,_10];
_6 = !_29;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_5;
_22 = [Field::<u64>(Variant(_12.0.fld4, 0), 0)];
_9.0 = !(-29358_i16);
_24 = &mut _4;
_13 = _18;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 + _14;
_7 = [_6,_29,_29,_10,_6,_6,_6,_10];
_29 = _6 | _10;
_10 = _14 as isize;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2);
_23 = _16;
_28 = _6 - _6;
Goto(bb10)
}
bb17 = {
_9.0 = 5763_i16 >> _3;
_16 = '\u{ea56c}';
_12.0.fld1 = _12.0.fld5 as u128;
_12.0.fld1 = 69855210510593218015607957580026889492_u128;
_7 = [_10,_10,_10,_10,_6,_10,_10,_10];
_14 = (-7_i8) - (-11_i8);
_12.0.fld4 = Adt18::Variant0 { fld0: 11345682048097724320_u64,fld1: _14,fld2: RET };
_12.0.fld5 = _14 as f32;
_12.0.fld6 = 514430958_u32 as f64;
_13 = _10 as i32;
_12.0.fld0 = true | true;
_12.0.fld4 = Adt18::Variant0 { fld0: 1729943397570893349_u64,fld1: _14,fld2: RET };
_12.0.fld3.0 = !30135989781257602324593809792657957865_i128;
_13 = _12.1;
_12.1 = _13;
_12.0.fld0 = _10 != _10;
_14 = Field::<i8>(Variant(_12.0.fld4, 0), 1) * Field::<i8>(Variant(_12.0.fld4, 0), 1);
_12.0.fld3.0 = (-13172939855567391398287711945534543020_i128) | (-40721145988505045150728625007132366095_i128);
_12.1 = _13;
_16 = '\u{b71ff}';
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = !16011637781459129714_u64;
Goto(bb4)
}
bb18 = {
_30 = Field::<u8>(Variant(_12.0.fld4, 0), 2) + Field::<u8>(Variant(_12.0.fld4, 0), 2);
_9.0 = (-8779_i16) << _29;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 2750648549_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_12.0.fld0 = _6 != _10;
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = !3915672_u32;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = _12.0.fld6 as u16;
Goto(bb11)
}
bb19 = {
_36 = (*_41) as f32;
_46.1.0 = core::ptr::addr_of_mut!(_18);
_44 = [_23,_23];
place!(Field::<isize>(Variant(_12.0.fld2, 0), 2)) = _10;
_30 = RET;
_9.0 = (-16617_i16);
_1 = core::ptr::addr_of!((*_1));
_29 = _10 >> _19;
_52 = Field::<u128>(Variant(_12.0.fld4, 1), 4) & Field::<u128>(Variant(_12.0.fld4, 1), 4);
_30 = RET;
_12.0.fld3.0 = _37.0;
place!(Field::<i8>(Variant(_12.0.fld2, 0), 3)) = !_14;
Goto(bb20)
}
bb20 = {
place!(Field::<usize>(Variant(_12.0.fld4, 1), 1)) = Field::<usize>(Variant(_12.0.fld2, 0), 4);
_13 = !_18;
_37 = (_12.0.fld3.0,);
_39 = !_29;
_37.0 = _12.0.fld3.0 * _12.0.fld3.0;
_12.0.fld1 = _52 + _52;
_37 = (_12.0.fld3.0,);
_6 = _39 - _29;
_12.0.fld1 = _52 * Field::<u128>(Variant(_12.0.fld4, 1), 4);
RET = _23 as u8;
_49 = _39 | _6;
_44 = [Field::<char>(Variant(_12.0.fld2, 0), 1),_16];
_36 = Field::<f32>(Variant(_12.0.fld4, 1), 2);
place!(Field::<usize>(Variant(_12.0.fld4, 1), 1)) = !Field::<usize>(Variant(_12.0.fld2, 0), 4);
_40 = Field::<bool>(Variant(_12.0.fld2, 0), 0) as i128;
_12.0.fld3 = (_40,);
_3 = Field::<u64>(Variant(_12.0.fld4, 1), 0) as u16;
Goto(bb21)
}
bb21 = {
RET = _30;
_20 = [_49,_39,_49,_29,_39,_6,_49,_6];
_34 = Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6);
_13 = _12.0.fld1 as i32;
_20 = _42;
_23 = _16;
_34 = Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6);
_12.1 = 2306523700_u32 as i32;
_43 = 4165484931_u32 as f32;
_53 = _12.0.fld3.0 as f32;
_43 = -Field::<f32>(Variant(_12.0.fld4, 1), 2);
_37 = (_40,);
_46.0 = (Move(_46.1.0), Move((*_1)), _30);
(*_1) = Move(_46.0.1);
place!(Field::<u16>(Variant(_12.0.fld2, 0), 5)) = 1775925139_u32 as u16;
_40 = _37.0 - _12.0.fld3.0;
_12.1 = _13;
_19 = _14 | _14;
_40 = _12.0.fld3.0 + _12.0.fld3.0;
place!(Field::<i8>(Variant(_12.0.fld2, 0), 3)) = _14 * _14;
place!(Field::<usize>(Variant(_12.0.fld2, 0), 4)) = !Field::<usize>(Variant(_12.0.fld4, 1), 1);
match _9.0 {
0 => bb8,
1 => bb13,
2 => bb22,
340282366920938463463374607431768194839 => bb24,
_ => bb23
}
}
bb22 = {
_9 = (29697_i16,);
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = !Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld6 = _8 + _8;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = _6 as u64;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_3;
_12.0.fld5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) as f32;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 ^ _14;
_12.1 = _13 << Field::<u64>(Variant(_12.0.fld2, 1), 2);
_6 = _12.0.fld6 as isize;
_5 = _3 + _3;
_20 = [_6,_6,_10,_6,_10,_6,_10,_6];
_1 = core::ptr::addr_of!((*_1));
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1738897962_u32;
Call((*_1) = fn11(), ReturnTo(bb7), UnwindUnreachable())
}
bb23 = {
_9.0 = 5763_i16 >> _3;
_16 = '\u{ea56c}';
_12.0.fld1 = _12.0.fld5 as u128;
_12.0.fld1 = 69855210510593218015607957580026889492_u128;
_7 = [_10,_10,_10,_10,_6,_10,_10,_10];
_14 = (-7_i8) - (-11_i8);
_12.0.fld4 = Adt18::Variant0 { fld0: 11345682048097724320_u64,fld1: _14,fld2: RET };
_12.0.fld5 = _14 as f32;
_12.0.fld6 = 514430958_u32 as f64;
_13 = _10 as i32;
_12.0.fld0 = true | true;
_12.0.fld4 = Adt18::Variant0 { fld0: 1729943397570893349_u64,fld1: _14,fld2: RET };
_12.0.fld3.0 = !30135989781257602324593809792657957865_i128;
_13 = _12.1;
_12.1 = _13;
_12.0.fld0 = _10 != _10;
_14 = Field::<i8>(Variant(_12.0.fld4, 0), 1) * Field::<i8>(Variant(_12.0.fld4, 0), 1);
_12.0.fld3.0 = (-13172939855567391398287711945534543020_i128) | (-40721145988505045150728625007132366095_i128);
_12.1 = _13;
_16 = '\u{b71ff}';
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = !16011637781459129714_u64;
Goto(bb4)
}
bb24 = {
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
_12.0.fld1 = !_52;
_12.0.fld4 = Adt18::Variant0 { fld0: 10622085385333752289_u64,fld1: _14,fld2: RET };
_48 = _36 + _53;
_47 = -_36;
_36 = -_53;
_19 = !Field::<i8>(Variant(_12.0.fld2, 0), 3);
_36 = _47 * _48;
_12.0.fld6 = (*_41) + (*_41);
_46.1.2 = RET >> _19;
_46.1.0 = core::ptr::addr_of_mut!(_12.1);
_53 = _36 * _36;
_22 = [1119751606640852232_u64];
_24 = Move(_46.2);
_5 = _40 as u16;
Goto(bb25)
}
bb25 = {
_46.1.2 = _46.0.2 << _6;
_23 = Field::<char>(Variant(_12.0.fld2, 0), 1);
_46.1.2 = _30;
_40 = _12.0.fld3.0 << _12.0.fld3.0;
_34 = [_12.0.fld0,Field::<bool>(Variant(_12.0.fld2, 0), 0),_12.0.fld0,_12.0.fld0];
_46.0.1 = Move((*_1));
place!(Field::<u64>(Variant(_12.0.fld4, 0), 0)) = 4471890117444984059_u64 << _5;
_23 = _16;
(*_1) = Move(_46.0.1);
Goto(bb26)
}
bb26 = {
_12.0.fld1 = _52 - _52;
_3 = _5;
_40 = _12.0.fld3.0 | _12.0.fld3.0;
place!(Field::<u16>(Variant(_12.0.fld2, 0), 5)) = Field::<usize>(Variant(_12.0.fld2, 0), 4) as u16;
_12.0.fld6 = -(*_41);
_50 = &mut _12;
(*_50).1 = _13 - _13;
(*_50).0.fld3 = _37;
_54 = _35 - _6;
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = Field::<u16>(Variant((*_50).0.fld2, 0), 5) as usize;
_7 = [_6,Field::<isize>(Variant((*_50).0.fld2, 0), 2),_54,_39,_49,_54,_54,_39];
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = 5645817442577671488_i64 as usize;
(*_50).0.fld1 = _52 >> _29;
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = (*_50).0.fld1 as usize;
place!(Field::<u64>(Variant((*_50).0.fld4, 0), 0)) = !18039036802190238285_u64;
place!(Field::<u16>(Variant((*_50).0.fld2, 0), 5)) = _3 - _3;
Goto(bb27)
}
bb27 = {
_19 = (*_41) as i8;
_46.1.2 = 3438331491_u32 as u8;
(*_50).0.fld3.0 = _9.0 as i128;
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = _36 as i8;
place!(Field::<u16>(Variant((*_50).0.fld2, 0), 5)) = _5 | _5;
(*_50).0.fld6 = (*_41);
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = !Field::<i8>(Variant((*_50).0.fld2, 0), 3);
(*_50).1 = Field::<i8>(Variant((*_50).0.fld2, 0), 3) as i32;
place!(Field::<u16>(Variant((*_50).0.fld2, 0), 5)) = Field::<u8>(Variant((*_50).0.fld4, 0), 2) as u16;
match _9.0 {
0 => bb14,
1 => bb7,
2 => bb21,
3 => bb15,
4 => bb28,
340282366920938463463374607431768194839 => bb30,
_ => bb29
}
}
bb28 = {
_9 = (29697_i16,);
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = !Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld6 = _8 + _8;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = _6 as u64;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_3;
_12.0.fld5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) as f32;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 ^ _14;
_12.1 = _13 << Field::<u64>(Variant(_12.0.fld2, 1), 2);
_6 = _12.0.fld6 as isize;
_5 = _3 + _3;
_20 = [_6,_6,_10,_6,_10,_6,_10,_6];
_1 = core::ptr::addr_of!((*_1));
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1738897962_u32;
Call((*_1) = fn11(), ReturnTo(bb7), UnwindUnreachable())
}
bb29 = {
_20 = _7;
_7 = [_10,_10,_10,_6,_10,_6,_10,_6];
_19 = _13 as i8;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2) ^ Field::<u8>(Variant(_12.0.fld4, 0), 2);
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = _6 as u32;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 3406717863_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_1 = core::ptr::addr_of!((*_1));
_3 = !_5;
_29 = _10;
_23 = _16;
_12.0.fld0 = _5 == _3;
_29 = Field::<i8>(Variant(_12.0.fld4, 0), 1) as isize;
_13 = _29 as i32;
_5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) | _3;
_20 = [_6,_10,_6,_29,_10,_10,_6,_10];
_6 = !_29;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_5;
_22 = [Field::<u64>(Variant(_12.0.fld4, 0), 0)];
_9.0 = !(-29358_i16);
_24 = &mut _4;
_13 = _18;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 + _14;
_7 = [_6,_29,_29,_10,_6,_6,_6,_10];
_29 = _6 | _10;
_10 = _14 as isize;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2);
_23 = _16;
_28 = _6 - _6;
Goto(bb10)
}
bb30 = {
(*_50).0.fld3 = (_37.0,);
(*_50).0.fld3.0 = _5 as i128;
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = Field::<i8>(Variant((*_50).0.fld2, 0), 3);
(*_50).0.fld3 = (_40,);
(*_50).0.fld3 = (_40,);
(*_50).0.fld6 = (*_41);
(*_50).0.fld3.0 = Field::<usize>(Variant((*_50).0.fld2, 0), 4) as i128;
_46.3 = Adt51::Variant3 { fld0: (*_50).0.fld1,fld1: Move(_46.1.0) };
(*_50).0.fld3 = _37;
place!(Field::<*mut i32>(Variant(_46.3, 3), 1)) = core::ptr::addr_of_mut!((*_50).1);
(*_50).0.fld4 = Adt18::Variant0 { fld0: 282655140928670699_u64,fld1: Field::<i8>(Variant((*_50).0.fld2, 0), 3),fld2: _30 };
place!(Field::<u64>(Variant((*_50).0.fld4, 0), 0)) = 14941920806496941599_u64;
(*_50).0.fld3.0 = -_40;
(*_50).0.fld3 = (_40,);
(*_50).0.fld3 = (_40,);
Goto(bb31)
}
bb31 = {
(*_50).0.fld2 = Adt23::Variant1 { fld0: _5,fld1: 4029291700_u32,fld2: Field::<u64>(Variant((*_50).0.fld4, 0), 0) };
(*_50).0.fld3.0 = (*_50).1 as i128;
place!(Field::<u8>(Variant((*_50).0.fld4, 0), 2)) = 8764833274600441172_i64 as u8;
place!(Field::<u64>(Variant((*_50).0.fld2, 1), 2)) = !Field::<u64>(Variant((*_50).0.fld4, 0), 0);
(*_50).0.fld3.0 = _40;
_59 = !(*_50).0.fld0;
_46.0 = (Move(Field::<*mut i32>(Variant(_46.3, 3), 1)), Move((*_1)), Field::<u8>(Variant((*_50).0.fld4, 0), 2));
place!(Field::<u128>(Variant(_46.3, 3), 0)) = (*_50).0.fld1;
match Field::<u64>(Variant((*_50).0.fld4, 0), 0) {
0 => bb25,
1 => bb32,
2 => bb33,
14941920806496941599 => bb35,
_ => bb34
}
}
bb32 = {
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1236068605_u32;
_42 = [_29,_6,_29,_28,_35,_35,_35,_35];
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = Field::<u64>(Variant(_12.0.fld2, 1), 2) | Field::<u64>(Variant(_12.0.fld2, 1), 2);
_35 = Field::<u64>(Variant(_12.0.fld4, 1), 0) as isize;
_12.0.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_12.0.fld4, 1), 3),fld1: 3079910106_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 1), 0) };
_13 = !_12.1;
_12.0.fld5 = _9.0 as f32;
_34 = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
_1 = core::ptr::addr_of!((*_1));
_20 = _7;
_12.0.fld6 = _9.0 as f64;
_19 = _14 & _14;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = Field::<u64>(Variant(_12.0.fld4, 1), 0) * Field::<u64>(Variant(_12.0.fld4, 1), 0);
_42 = [_28,_28,_29,_28,_35,_6,_10,_35];
_12.0.fld2 = Adt23::Variant0 { fld0: _12.0.fld0,fld1: _23,fld2: _35,fld3: _14,fld4: Field::<usize>(Variant(_12.0.fld4, 1), 1),fld5: Field::<u16>(Variant(_12.0.fld4, 1), 3) };
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
_12.0.fld3 = (_37.0,);
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
place!(Field::<bool>(Variant(_12.0.fld2, 0), 0)) = _12.0.fld0;
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = _34;
place!(Field::<u16>(Variant(_12.0.fld2, 0), 5)) = _3 - Field::<u16>(Variant(_12.0.fld4, 1), 3);
place!(Field::<u64>(Variant(_12.0.fld4, 1), 0)) = 14805016260576438415_u64;
_8 = _12.0.fld6;
Goto(bb14)
}
bb33 = {
Return()
}
bb34 = {
_9 = (29697_i16,);
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = !Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld6 = _8 + _8;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = _6 as u64;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_3;
_12.0.fld5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) as f32;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 ^ _14;
_12.1 = _13 << Field::<u64>(Variant(_12.0.fld2, 1), 2);
_6 = _12.0.fld6 as isize;
_5 = _3 + _3;
_20 = [_6,_6,_10,_6,_10,_6,_10,_6];
_1 = core::ptr::addr_of!((*_1));
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1738897962_u32;
Call((*_1) = fn11(), ReturnTo(bb7), UnwindUnreachable())
}
bb35 = {
(*_50).0.fld2 = Adt23::Variant1 { fld0: _5,fld1: 3233696701_u32,fld2: Field::<u64>(Variant((*_50).0.fld4, 0), 0) };
(*_50).0.fld6 = -(*_41);
(*_1) = Move(_46.0.1);
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = _16 as i8;
(*_50).0.fld2 = Adt23::Variant0 { fld0: (*_50).0.fld0,fld1: _16,fld2: _6,fld3: Field::<i8>(Variant((*_50).0.fld4, 0), 1),fld4: 2464435028947285203_usize,fld5: _5 };
Goto(bb36)
}
bb36 = {
(*_50).0.fld1 = _52 >> Field::<isize>(Variant((*_50).0.fld2, 0), 2);
(*_50).0.fld2 = Adt23::Variant0 { fld0: (*_50).0.fld0,fld1: _23,fld2: _6,fld3: Field::<i8>(Variant((*_50).0.fld4, 0), 1),fld4: 4_usize,fld5: _3 };
(*_50).0.fld5 = _36 + _53;
place!(Field::<u8>(Variant((*_50).0.fld4, 0), 2)) = RET << Field::<isize>(Variant((*_50).0.fld2, 0), 2);
Goto(bb37)
}
bb37 = {
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = !1_usize;
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = Field::<i8>(Variant((*_50).0.fld2, 0), 3) << Field::<isize>(Variant((*_50).0.fld2, 0), 2);
place!(Field::<u16>(Variant((*_50).0.fld2, 0), 5)) = _5 * _3;
(*_50).0.fld4 = Adt18::Variant0 { fld0: 14560640941651071411_u64,fld1: Field::<i8>(Variant((*_50).0.fld2, 0), 3),fld2: _46.1.2 };
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = 15898857448285586349_usize ^ 3_usize;
place!(Field::<u64>(Variant((*_50).0.fld4, 0), 0)) = 4585033596539919888_u64;
(*_50).0.fld1 = Field::<u128>(Variant(_46.3, 3), 0);
(*_50).0.fld3 = (_40,);
_65 = (*_50).0.fld5;
match Field::<u64>(Variant((*_50).0.fld4, 0), 0) {
0 => bb3,
1 => bb27,
2 => bb38,
4585033596539919888 => bb40,
_ => bb39
}
}
bb38 = {
_20 = _7;
_7 = [_10,_10,_10,_6,_10,_6,_10,_6];
_19 = _13 as i8;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2) ^ Field::<u8>(Variant(_12.0.fld4, 0), 2);
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = _6 as u32;
_12.0.fld2 = Adt23::Variant1 { fld0: _3,fld1: 3406717863_u32,fld2: Field::<u64>(Variant(_12.0.fld4, 0), 0) };
_1 = core::ptr::addr_of!((*_1));
_3 = !_5;
_29 = _10;
_23 = _16;
_12.0.fld0 = _5 == _3;
_29 = Field::<i8>(Variant(_12.0.fld4, 0), 1) as isize;
_13 = _29 as i32;
_5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) | _3;
_20 = [_6,_10,_6,_29,_10,_10,_6,_10];
_6 = !_29;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_5;
_22 = [Field::<u64>(Variant(_12.0.fld4, 0), 0)];
_9.0 = !(-29358_i16);
_24 = &mut _4;
_13 = _18;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 + _14;
_7 = [_6,_29,_29,_10,_6,_6,_6,_10];
_29 = _6 | _10;
_10 = _14 as isize;
RET = Field::<u8>(Variant(_12.0.fld4, 0), 2);
_23 = _16;
_28 = _6 - _6;
Goto(bb10)
}
bb39 = {
Return()
}
bb40 = {
place!(Field::<bool>(Variant((*_50).0.fld2, 0), 0)) = !(*_50).0.fld0;
(*_50).0.fld3 = _37;
place!(Field::<isize>(Variant((*_50).0.fld2, 0), 2)) = _49;
match Field::<u64>(Variant((*_50).0.fld4, 0), 0) {
4585033596539919888 => bb42,
_ => bb41
}
}
bb41 = {
(*_50).0.fld3 = (_37.0,);
(*_50).0.fld3.0 = _5 as i128;
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = Field::<i8>(Variant((*_50).0.fld2, 0), 3);
(*_50).0.fld3 = (_40,);
(*_50).0.fld3 = (_40,);
(*_50).0.fld6 = (*_41);
(*_50).0.fld3.0 = Field::<usize>(Variant((*_50).0.fld2, 0), 4) as i128;
_46.3 = Adt51::Variant3 { fld0: (*_50).0.fld1,fld1: Move(_46.1.0) };
(*_50).0.fld3 = _37;
place!(Field::<*mut i32>(Variant(_46.3, 3), 1)) = core::ptr::addr_of_mut!((*_50).1);
(*_50).0.fld4 = Adt18::Variant0 { fld0: 282655140928670699_u64,fld1: Field::<i8>(Variant((*_50).0.fld2, 0), 3),fld2: _30 };
place!(Field::<u64>(Variant((*_50).0.fld4, 0), 0)) = 14941920806496941599_u64;
(*_50).0.fld3.0 = -_40;
(*_50).0.fld3 = (_40,);
(*_50).0.fld3 = (_40,);
Goto(bb31)
}
bb42 = {
(*_50).0.fld5 = _53 * _36;
place!(Field::<*mut i32>(Variant(_46.3, 3), 1)) = core::ptr::addr_of_mut!((*_50).1);
place!(Field::<u16>(Variant((*_50).0.fld2, 0), 5)) = Field::<usize>(Variant((*_50).0.fld2, 0), 4) as u16;
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = 8730341575109920977_usize | 12831853021135777715_usize;
place!(Field::<i8>(Variant((*_50).0.fld2, 0), 3)) = Field::<char>(Variant((*_50).0.fld2, 0), 1) as i8;
Goto(bb43)
}
bb43 = {
place!(Field::<i8>(Variant((*_50).0.fld4, 0), 1)) = _14 | Field::<i8>(Variant((*_50).0.fld2, 0), 3);
(*_50).0.fld3 = (_40,);
_74 = (Move(_1), Field::<i8>(Variant((*_50).0.fld4, 0), 1), Field::<usize>(Variant((*_50).0.fld2, 0), 4));
Goto(bb44)
}
bb44 = {
place!(Field::<char>(Variant((*_50).0.fld2, 0), 1)) = _23;
(*_50).0.fld4 = Adt18::Variant0 { fld0: 13206319380464416505_u64,fld1: Field::<i8>(Variant((*_50).0.fld2, 0), 3),fld2: RET };
(*_50).0.fld3 = _37;
_28 = Field::<isize>(Variant((*_50).0.fld2, 0), 2);
place!(Field::<bool>(Variant((*_50).0.fld2, 0), 0)) = !(*_50).0.fld0;
(*_50).0.fld6 = (*_41);
(*_50).0.fld3.0 = _37.0 ^ _37.0;
_53 = (*_50).0.fld5 * (*_50).0.fld5;
place!(Field::<char>(Variant((*_50).0.fld2, 0), 1)) = _23;
(*_50).0.fld4 = Adt18::Variant0 { fld0: 13104550337978486826_u64,fld1: _14,fld2: RET };
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = !_74.2;
(*_50).0.fld6 = -(*_41);
_3 = Field::<u16>(Variant((*_50).0.fld2, 0), 5) + Field::<u16>(Variant((*_50).0.fld2, 0), 5);
(*_50).0.fld5 = _9.0 as f32;
Goto(bb45)
}
bb45 = {
place!(Field::<i8>(Variant((*_50).0.fld2, 0), 3)) = Field::<i8>(Variant((*_50).0.fld4, 0), 1);
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = _74.2 & _74.2;
place!(Field::<isize>(Variant((*_50).0.fld2, 0), 2)) = _49 | _28;
(*_50).0.fld2 = Adt23::Variant0 { fld0: (*_50).0.fld0,fld1: _16,fld2: _28,fld3: Field::<i8>(Variant((*_50).0.fld4, 0), 1),fld4: _74.2,fld5: _5 };
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = _74.2 ^ _74.2;
place!(Field::<bool>(Variant((*_50).0.fld2, 0), 0)) = _59 ^ (*_50).0.fld0;
match _9.0 {
0 => bb36,
1 => bb43,
2 => bb10,
3 => bb46,
340282366920938463463374607431768194839 => bb48,
_ => bb47
}
}
bb46 = {
Return()
}
bb47 = {
place!(Field::<isize>(Variant(_12.0.fld2, 0), 2)) = _6 - _28;
(*_24) = core::ptr::addr_of_mut!(_46.0.0);
_41 = &_8;
_16 = Field::<char>(Variant(_12.0.fld2, 0), 1);
_13 = _18 + Field::<i32>(Variant(_12.0.fld4, 1), 5);
_46.2 = &mut (*_24);
_12.0.fld3.0 = _37.0 >> RET;
match Field::<u64>(Variant(_12.0.fld4, 1), 0) {
0 => bb15,
1 => bb16,
2 => bb17,
14805016260576438415 => bb19,
_ => bb18
}
}
bb48 = {
(*_50).0.fld4 = Adt18::Variant1 { fld0: 17334601416935401131_u64,fld1: Field::<usize>(Variant((*_50).0.fld2, 0), 4),fld2: _65,fld3: Field::<u16>(Variant((*_50).0.fld2, 0), 5),fld4: (*_50).0.fld1,fld5: (*_50).1,fld6: _34 };
place!(Field::<u128>(Variant((*_50).0.fld4, 1), 4)) = !(*_50).0.fld1;
_1 = core::ptr::addr_of!(_46.0.1);
place!(Field::<f32>(Variant((*_50).0.fld4, 1), 2)) = (*_50).0.fld5;
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = Field::<usize>(Variant((*_50).0.fld4, 1), 1) + Field::<usize>(Variant((*_50).0.fld4, 1), 1);
_3 = Field::<u16>(Variant((*_50).0.fld4, 1), 3) ^ Field::<u16>(Variant((*_50).0.fld4, 1), 3);
place!(Field::<u16>(Variant((*_50).0.fld4, 1), 3)) = Field::<u16>(Variant((*_50).0.fld2, 0), 5) * Field::<u16>(Variant((*_50).0.fld2, 0), 5);
place!(Field::<usize>(Variant((*_50).0.fld2, 0), 4)) = Field::<usize>(Variant((*_50).0.fld4, 1), 1) & Field::<usize>(Variant((*_50).0.fld4, 1), 1);
place!(Field::<u128>(Variant((*_50).0.fld4, 1), 4)) = (*_50).0.fld1;
place!(Field::<f32>(Variant((*_50).0.fld4, 1), 2)) = _53 * _53;
place!(Field::<u64>(Variant((*_50).0.fld4, 1), 0)) = !17653750036318320243_u64;
place!(Field::<[bool; 4]>(Variant((*_50).0.fld4, 1), 6)) = [Field::<bool>(Variant((*_50).0.fld2, 0), 0),(*_50).0.fld0,Field::<bool>(Variant((*_50).0.fld2, 0), 0),Field::<bool>(Variant((*_50).0.fld2, 0), 0)];
match _9.0 {
0 => bb13,
1 => bb49,
2 => bb50,
340282366920938463463374607431768194839 => bb52,
_ => bb51
}
}
bb49 = {
place!(Field::<[bool; 4]>(Variant(_12.0.fld4, 1), 6)) = [_12.0.fld0,_12.0.fld0,_12.0.fld0,_12.0.fld0];
_12.0.fld1 = !_52;
_12.0.fld4 = Adt18::Variant0 { fld0: 10622085385333752289_u64,fld1: _14,fld2: RET };
_48 = _36 + _53;
_47 = -_36;
_36 = -_53;
_19 = !Field::<i8>(Variant(_12.0.fld2, 0), 3);
_36 = _47 * _48;
_12.0.fld6 = (*_41) + (*_41);
_46.1.2 = RET >> _19;
_46.1.0 = core::ptr::addr_of_mut!(_12.1);
_53 = _36 * _36;
_22 = [1119751606640852232_u64];
_24 = Move(_46.2);
_5 = _40 as u16;
Goto(bb25)
}
bb50 = {
Return()
}
bb51 = {
_9 = (29697_i16,);
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = !Field::<u64>(Variant(_12.0.fld4, 0), 0);
_12.0.fld6 = _8 + _8;
place!(Field::<u64>(Variant(_12.0.fld2, 1), 2)) = _6 as u64;
place!(Field::<u16>(Variant(_12.0.fld2, 1), 0)) = !_3;
_12.0.fld5 = Field::<u16>(Variant(_12.0.fld2, 1), 0) as f32;
place!(Field::<i8>(Variant(_12.0.fld4, 0), 1)) = _14 ^ _14;
_12.1 = _13 << Field::<u64>(Variant(_12.0.fld2, 1), 2);
_6 = _12.0.fld6 as isize;
_5 = _3 + _3;
_20 = [_6,_6,_10,_6,_10,_6,_10,_6];
_1 = core::ptr::addr_of!((*_1));
place!(Field::<u32>(Variant(_12.0.fld2, 1), 1)) = 1738897962_u32;
Call((*_1) = fn11(), ReturnTo(bb7), UnwindUnreachable())
}
bb52 = {
(*_50).1 = Field::<i32>(Variant((*_50).0.fld4, 1), 5) + Field::<i32>(Variant((*_50).0.fld4, 1), 5);
place!(Field::<usize>(Variant((*_50).0.fld4, 1), 1)) = Field::<usize>(Variant((*_50).0.fld2, 0), 4);
(*_50).0.fld2 = Adt23::Variant0 { fld0: _59,fld1: _23,fld2: _54,fld3: _74.1,fld4: Field::<usize>(Variant((*_50).0.fld4, 1), 1),fld5: Field::<u16>(Variant((*_50).0.fld4, 1), 3) };
_37.0 = (*_50).0.fld3.0;
(*_50).0.fld4 = Adt18::Variant1 { fld0: 16417521467508692306_u64,fld1: Field::<usize>(Variant((*_50).0.fld2, 0), 4),fld2: _65,fld3: Field::<u16>(Variant((*_50).0.fld2, 0), 5),fld4: (*_50).0.fld1,fld5: (*_50).1,fld6: _34 };
(*_50).0.fld2 = Adt23::Variant0 { fld0: (*_50).0.fld0,fld1: _23,fld2: _49,fld3: _74.1,fld4: Field::<usize>(Variant((*_50).0.fld4, 1), 1),fld5: Field::<u16>(Variant((*_50).0.fld4, 1), 3) };
place!(Field::<u128>(Variant((*_50).0.fld4, 1), 4)) = Field::<u128>(Variant(_46.3, 3), 0);
(*_50).1 = Field::<i32>(Variant((*_50).0.fld4, 1), 5) >> Field::<i8>(Variant((*_50).0.fld2, 0), 3);
place!(Field::<f32>(Variant((*_50).0.fld4, 1), 2)) = _36 + _65;
Goto(bb53)
}
bb53 = {
Call(_80 = dump_var(10_usize, 18_usize, Move(_18), 54_usize, Move(_54), 49_usize, Move(_49), 6_usize, Move(_6)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_80 = dump_var(10_usize, 19_usize, Move(_19), 14_usize, Move(_14), 7_usize, Move(_7), 34_usize, Move(_34)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_80 = dump_var(10_usize, 16_usize, Move(_16), 22_usize, Move(_22), 52_usize, Move(_52), 40_usize, Move(_40)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_80 = dump_var(10_usize, 9_usize, Move(_9), 20_usize, Move(_20), 81_usize, _81, 81_usize, _81), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn11() -> *mut [i16; 2] {
mir! {
type RET = *mut [i16; 2];
let _1: u128;
let _2: isize;
let _3: Adt31;
let _4: *mut [i16; 2];
let _5: f64;
let _6: f32;
let _7: i32;
let _8: isize;
let _9: &'static mut *mut [u64; 1];
let _10: char;
let _11: &'static mut *mut *mut i32;
let _12: *mut [bool; 4];
let _13: bool;
let _14: *mut &'static *mut [bool; 4];
let _15: f32;
let _16: f64;
let _17: isize;
let _18: bool;
let _19: [u8; 5];
let _20: [u8; 2];
let _21: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _22: bool;
let _23: isize;
let _24: &'static [u64; 1];
let _25: f32;
let _26: (i32, f32, Adt18, Adt18);
let _27: &'static mut (Adt31, i32);
let _28: [i16; 2];
let _29: *mut &'static mut (i32, f32, Adt18, Adt18);
let _30: [i128; 4];
let _31: f32;
let _32: f32;
let _33: [i128; 4];
let _34: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _35: &'static mut *mut *mut i32;
let _36: isize;
let _37: &'static mut (Adt31, i32);
let _38: f64;
let _39: f32;
let _40: [isize; 8];
let _41: [i128; 4];
let _42: isize;
let _43: Adt31;
let _44: isize;
let _45: f32;
let _46: ((i32, f32, Adt18, Adt18),);
let _47: char;
let _48: f32;
let _49: &'static *mut [i16; 2];
let _50: isize;
let _51: bool;
let _52: isize;
let _53: bool;
let _54: &'static mut (*mut i32, *mut [i16; 2], u8);
let _55: char;
let _56: i32;
let _57: char;
let _58: i128;
let _59: u64;
let _60: f64;
let _61: *mut i16;
let _62: [u8; 6];
let _63: (*const *mut [i16; 2], i8, usize);
let _64: f32;
let _65: isize;
let _66: &'static mut *mut *mut i32;
let _67: *mut i32;
let _68: bool;
let _69: *mut *mut i32;
let _70: *mut &'static *mut [bool; 4];
let _71: u128;
let _72: u128;
let _73: isize;
let _74: *mut *mut i32;
let _75: isize;
let _76: *const [i128; 4];
let _77: &'static mut [char; 2];
let _78: i128;
let _79: *mut &'static mut (i32, f32, Adt18, Adt18);
let _80: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _81: (i16,);
let _82: f64;
let _83: [usize; 8];
let _84: u64;
let _85: [u64; 1];
let _86: i16;
let _87: f32;
let _88: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _89: *mut [i16; 2];
let _90: char;
let _91: *const *mut [i16; 2];
let _92: f32;
let _93: *mut *mut i32;
let _94: f64;
let _95: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _96: ();
let _97: ();
{
_1 = (-4418248527488559086_i64) as u128;
_3.fld5 = _1 as f32;
_3.fld2 = Adt23::Variant0 { fld0: false,fld1: '\u{10d742}',fld2: (-9223372036854775808_isize),fld3: 100_i8,fld4: 2265023742583423315_usize,fld5: 59152_u16 };
_3.fld2 = Adt23::Variant1 { fld0: 46892_u16,fld1: 1590451167_u32,fld2: 6695060360629389457_u64 };
Goto(bb1)
}
bb1 = {
_1 = 122247829174312334785218469503745032929_u128 + 284301828893760027246539325279383358578_u128;
_3.fld5 = (-2864_i16) as f32;
_3.fld1 = _1 << _1;
_2 = 106_i8 as isize;
_3.fld3.0 = 121980388332263795666699951847426710744_i128;
_3.fld2 = Adt23::Variant1 { fld0: 12933_u16,fld1: 2336979934_u32,fld2: 4536441574234345919_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 7486_u16,fld1: 1056848732_u32,fld2: 5039738934356834128_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 31159_u16,fld1: 3080367956_u32,fld2: 14646666451304525967_u64 };
_3.fld4 = Adt18::Variant0 { fld0: 8865441936404745320_u64,fld1: 113_i8,fld2: 48_u8 };
_3.fld2 = Adt23::Variant1 { fld0: 5759_u16,fld1: 1133489823_u32,fld2: 16016401258395686166_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 10583_u16,fld1: 3307407740_u32,fld2: 10640403507557431946_u64 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = 3408601102_u32;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 50579_u16 << _3.fld1;
match Field::<u32>(Variant(_3.fld2, 1), 1) {
0 => bb2,
1 => bb3,
2 => bb4,
3408601102 => bb6,
_ => bb5
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u64>(Variant(_3.fld2, 1), 2)) = !2691798119243017673_u64;
_3.fld5 = _3.fld3.0 as f32;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2);
_2 = 9223372036854775807_isize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _3.fld5 as i8;
_6 = _3.fld5 - _3.fld5;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u16;
_3.fld2 = Adt23::Variant1 { fld0: 16321_u16,fld1: 2425812228_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 11_i8,fld2: 81_u8 };
_3.fld2 = Adt23::Variant1 { fld0: 33577_u16,fld1: 2259805117_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = _3.fld5 + _3.fld5;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-2528_i16) as u8;
_3.fld1 = _1 - _1;
_3.fld0 = _3.fld5 >= _6;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-4_i8),fld2: 54_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = '\u{7c9c7}' as u32;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u8;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _2 as i8;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{6cd72}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 12261_u16 };
_3.fld3 = ((-24433765304245569031176193957844924830_i128),);
Goto(bb7)
}
bb7 = {
_3.fld5 = _6 - _6;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = !_3.fld0;
_7 = (-1980531052_i32) >> _3.fld1;
_6 = _3.fld5 - _3.fld5;
_3.fld0 = _7 < _7;
_3.fld2 = Adt23::Variant1 { fld0: 50772_u16,fld1: 1504220899_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_7 = -1851798167_i32;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{11d64}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 4158738678441172123_usize,fld5: 7711_u16 };
_3.fld1 = _1 + _1;
_10 = '\u{57b44}';
_3.fld3 = (15424863703074559161994686161678854782_i128,);
place!(Field::<usize>(Variant(_3.fld2, 0), 4)) = Field::<bool>(Variant(_3.fld2, 0), 0) as usize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = Field::<i8>(Variant(_3.fld2, 0), 3) - Field::<i8>(Variant(_3.fld2, 0), 3);
_2 = Field::<isize>(Variant(_3.fld2, 0), 2);
_3.fld2 = Adt23::Variant1 { fld0: 64816_u16,fld1: 3562103788_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) - Field::<u64>(Variant(_3.fld2, 1), 2);
Goto(bb8)
}
bb8 = {
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 7839_u16 & 16539_u16;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15739_u16 };
_3.fld4 = Adt18::Variant0 { fld0: 11938667280979956781_u64,fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: 33_u8 };
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 38_u8 as i8;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 172_u8 >> _3.fld1;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15567_u16 };
_8 = Field::<bool>(Variant(_3.fld2, 0), 0) as isize;
_5 = _3.fld3.0 as f64;
_3.fld5 = -_6;
_3.fld2 = Adt23::Variant1 { fld0: 46816_u16,fld1: 2516840802_u32,fld2: 6574831166089274024_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 50661_u16,fld1: 1439136828_u32,fld2: 974997204507901063_u64 };
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<i8>(Variant(_3.fld4, 0), 1) as u16;
_5 = _8 as f64;
_13 = _3.fld0;
_3.fld6 = _5 - _5;
_10 = '\u{ea2a6}';
_3.fld2 = Adt23::Variant1 { fld0: 62209_u16,fld1: 825548308_u32,fld2: 17731057478314393810_u64 };
_5 = _8 as f64;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 26075_u16 | 3644_u16;
Goto(bb9)
}
bb9 = {
_17 = _8 << _3.fld1;
_3.fld3.0 = 121220088915724195337209925659136405784_i128 + 98907233127603396651602317039600467982_i128;
_2 = _17 << _8;
_15 = 7112973049958537334_i64 as f32;
Goto(bb10)
}
bb10 = {
_17 = Field::<u16>(Variant(_3.fld2, 1), 0) as isize;
_3.fld5 = _6 * _6;
_3.fld6 = _5;
_3.fld2 = Adt23::Variant0 { fld0: _13,fld1: _10,fld2: _8,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 21157_u16 };
_16 = _5;
_18 = _1 >= _1;
Goto(bb11)
}
bb11 = {
_20 = [Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2)];
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _18 & _3.fld0;
_21.0 = !6553664342183212834_i64;
_3.fld3 = ((-63764675325807005704149885315887168220_i128),);
Goto(bb12)
}
bb12 = {
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = Field::<i8>(Variant(_3.fld2, 0), 3) >> _8;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _18 == _13;
match _3.fld3.0 {
0 => bb11,
1 => bb13,
276517691595131457759224722115881043236 => bb15,
_ => bb14
}
}
bb13 = {
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u64>(Variant(_3.fld2, 1), 2)) = !2691798119243017673_u64;
_3.fld5 = _3.fld3.0 as f32;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2);
_2 = 9223372036854775807_isize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _3.fld5 as i8;
_6 = _3.fld5 - _3.fld5;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u16;
_3.fld2 = Adt23::Variant1 { fld0: 16321_u16,fld1: 2425812228_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 11_i8,fld2: 81_u8 };
_3.fld2 = Adt23::Variant1 { fld0: 33577_u16,fld1: 2259805117_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = _3.fld5 + _3.fld5;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-2528_i16) as u8;
_3.fld1 = _1 - _1;
_3.fld0 = _3.fld5 >= _6;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-4_i8),fld2: 54_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = '\u{7c9c7}' as u32;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u8;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _2 as i8;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{6cd72}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 12261_u16 };
_3.fld3 = ((-24433765304245569031176193957844924830_i128),);
Goto(bb7)
}
bb14 = {
Return()
}
bb15 = {
_23 = Field::<isize>(Variant(_3.fld2, 0), 2);
place!(Field::<char>(Variant(_3.fld2, 0), 1)) = _10;
_8 = !_2;
_8 = 10771515228391373550_usize as isize;
_17 = _2 + _2;
Goto(bb16)
}
bb16 = {
_13 = _17 == _17;
place!(Field::<char>(Variant(_3.fld2, 0), 1)) = _10;
_19 = [Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2)];
place!(Field::<u16>(Variant(_3.fld2, 0), 5)) = !54229_u16;
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 971793547_u32 as i8;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = 5739472137690335455_u64;
_3.fld2 = Adt23::Variant1 { fld0: 20389_u16,fld1: 3943090413_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld2 = Adt23::Variant1 { fld0: 48137_u16,fld1: 1653035630_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = 63687_u16 as u64;
_19 = [Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2)];
_3.fld0 = _13 & _13;
_2 = _23 * _17;
_3.fld1 = _1;
_3.fld2 = Adt23::Variant1 { fld0: 39156_u16,fld1: 3771113090_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = -_3.fld5;
_23 = -_17;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = 63_i8 | 110_i8;
Goto(bb17)
}
bb17 = {
_3.fld5 = _6 - _6;
_17 = _23 | _23;
_26.0 = _7 + _7;
_18 = _17 < _23;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 239_u8 ^ 133_u8;
_26.3 = Move(_3.fld4);
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 27442_u16 ^ 28458_u16;
_5 = _16 * _3.fld6;
_8 = _2 << _23;
_16 = _6 as f64;
place!(Field::<u64>(Variant(_26.3, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) * Field::<u64>(Variant(_3.fld2, 1), 2);
_22 = _18;
_21.0 = 889093134518726012_i64 - 7421542265521360448_i64;
_15 = _3.fld5 - _3.fld5;
_8 = _17;
_17 = -_8;
_21.1 = core::ptr::addr_of_mut!(_7);
_1 = !_3.fld1;
_26.1 = -_6;
Goto(bb18)
}
bb18 = {
place!(Field::<u64>(Variant(_26.3, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) - Field::<u64>(Variant(_3.fld2, 1), 2);
place!(Field::<u64>(Variant(_26.3, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) << _2;
_20 = [Field::<u8>(Variant(_26.3, 0), 2),Field::<u8>(Variant(_26.3, 0), 2)];
_5 = _3.fld6 - _16;
_15 = _3.fld5 - _26.1;
_5 = _3.fld6;
_7 = _26.0 * _26.0;
_1 = _3.fld1 + _3.fld1;
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = 3533380967_u32 ^ 3804762750_u32;
_13 = _3.fld0;
_3.fld4 = Move(_26.3);
_15 = _3.fld5 + _6;
_25 = _26.1;
_26.0 = _7;
match _3.fld3.0 {
0 => bb11,
1 => bb9,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb8,
6 => bb19,
276517691595131457759224722115881043236 => bb21,
_ => bb20
}
}
bb19 = {
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 7839_u16 & 16539_u16;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15739_u16 };
_3.fld4 = Adt18::Variant0 { fld0: 11938667280979956781_u64,fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: 33_u8 };
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 38_u8 as i8;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 172_u8 >> _3.fld1;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15567_u16 };
_8 = Field::<bool>(Variant(_3.fld2, 0), 0) as isize;
_5 = _3.fld3.0 as f64;
_3.fld5 = -_6;
_3.fld2 = Adt23::Variant1 { fld0: 46816_u16,fld1: 2516840802_u32,fld2: 6574831166089274024_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 50661_u16,fld1: 1439136828_u32,fld2: 974997204507901063_u64 };
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<i8>(Variant(_3.fld4, 0), 1) as u16;
_5 = _8 as f64;
_13 = _3.fld0;
_3.fld6 = _5 - _5;
_10 = '\u{ea2a6}';
_3.fld2 = Adt23::Variant1 { fld0: 62209_u16,fld1: 825548308_u32,fld2: 17731057478314393810_u64 };
_5 = _8 as f64;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 26075_u16 | 3644_u16;
Goto(bb9)
}
bb20 = {
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u64>(Variant(_3.fld2, 1), 2)) = !2691798119243017673_u64;
_3.fld5 = _3.fld3.0 as f32;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2);
_2 = 9223372036854775807_isize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _3.fld5 as i8;
_6 = _3.fld5 - _3.fld5;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u16;
_3.fld2 = Adt23::Variant1 { fld0: 16321_u16,fld1: 2425812228_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 11_i8,fld2: 81_u8 };
_3.fld2 = Adt23::Variant1 { fld0: 33577_u16,fld1: 2259805117_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = _3.fld5 + _3.fld5;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-2528_i16) as u8;
_3.fld1 = _1 - _1;
_3.fld0 = _3.fld5 >= _6;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-4_i8),fld2: 54_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = '\u{7c9c7}' as u32;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u8;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _2 as i8;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{6cd72}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 12261_u16 };
_3.fld3 = ((-24433765304245569031176193957844924830_i128),);
Goto(bb7)
}
bb21 = {
_17 = _2 & _2;
_7 = 15536446630917176930_usize as i32;
RET = core::ptr::addr_of_mut!(_28);
(*RET) = [(-13291_i16),(-16069_i16)];
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) | Field::<u64>(Variant(_3.fld2, 1), 2);
RET = core::ptr::addr_of_mut!((*RET));
_3.fld0 = !_13;
_4 = core::ptr::addr_of_mut!((*RET));
(*_4) = [25010_i16,9613_i16];
(*RET) = [664_i16,(-24897_i16)];
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-14_i8),fld2: 247_u8 };
_22 = _3.fld0;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 91_i8,fld2: 45_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = 1027771303_u32 - 3895347340_u32;
_26.0 = _7;
_18 = !_13;
_21.1 = core::ptr::addr_of_mut!(_26.0);
_30 = [_3.fld3.0,_3.fld3.0,_3.fld3.0,_3.fld3.0];
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-90_i8) as u8;
_7 = _26.0;
_22 = !_18;
(*RET) = [6831_i16,23730_i16];
(*RET) = [(-1982_i16),(-32204_i16)];
Goto(bb22)
}
bb22 = {
_7 = _26.0 * _26.0;
_13 = _1 > _3.fld1;
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = _25 as u32;
_13 = _3.fld0;
_32 = _26.0 as f32;
_3.fld6 = -_5;
(*RET) = [(-21985_i16),8914_i16];
(*RET) = [(-11636_i16),30617_i16];
_25 = _26.1 * _15;
(*RET) = [(-3498_i16),32275_i16];
(*RET) = [(-23958_i16),9083_i16];
_16 = _3.fld6 + _5;
(*RET) = [26013_i16,26328_i16];
_25 = _3.fld5 + _32;
(*RET) = [(-11769_i16),7595_i16];
_31 = -_26.1;
_26.0 = _26.1 as i32;
(*RET) = [(-27416_i16),8825_i16];
_38 = _17 as f64;
(*RET) = [25987_i16,(-4336_i16)];
(*RET) = [(-24770_i16),26614_i16];
Goto(bb23)
}
bb23 = {
_32 = -_15;
_22 = _13 & _13;
(*RET) = [30291_i16,(-15699_i16)];
(*RET) = [(-4429_i16),26123_i16];
(*RET) = [14516_i16,17555_i16];
(*RET) = [18802_i16,29338_i16];
_36 = Field::<u64>(Variant(_3.fld4, 0), 0) as isize;
_22 = !_13;
(*RET) = [7633_i16,(-10821_i16)];
(*RET) = [12652_i16,15416_i16];
(*RET) = [(-25227_i16),23066_i16];
Goto(bb24)
}
bb24 = {
(*RET) = [(-10253_i16),5737_i16];
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = (-59_i8) ^ (-16_i8);
_41 = [_3.fld3.0,_3.fld3.0,_3.fld3.0,_3.fld3.0];
_4 = core::ptr::addr_of_mut!((*RET));
(*_4) = [441_i16,(-28640_i16)];
(*RET) = [(-18952_i16),13706_i16];
_3.fld0 = _18 == _13;
(*RET) = [(-3940_i16),19364_i16];
_10 = '\u{744be}';
(*RET) = [(-26012_i16),25606_i16];
_3.fld5 = _1 as f32;
_21.0 = (-5476477555779553044_i64) >> _3.fld1;
_30 = [_3.fld3.0,_3.fld3.0,_3.fld3.0,_3.fld3.0];
(*RET) = [(-32207_i16),(-12993_i16)];
_7 = _8 as i32;
_28 = [(-9631_i16),(-720_i16)];
_26 = (_7, _3.fld5, Move(_3.fld4), Move(_3.fld4));
(*RET) = [(-2224_i16),23872_i16];
_43.fld5 = 1925740362086318049_usize as f32;
(*RET) = [(-9356_i16),26763_i16];
_43 = Adt31 { fld0: _22,fld1: _1,fld2: _3.fld2,fld3: _3.fld3,fld4: Move(_26.3),fld5: _15,fld6: _38 };
_39 = _43.fld5;
(*RET) = [28422_i16,20898_i16];
_3 = Adt31 { fld0: _22,fld1: _1,fld2: _43.fld2,fld3: _43.fld3,fld4: Move(_43.fld4),fld5: _31,fld6: _43.fld6 };
_26.0 = !_7;
match _3.fld3.0 {
0 => bb11,
1 => bb20,
2 => bb25,
3 => bb26,
4 => bb27,
5 => bb28,
276517691595131457759224722115881043236 => bb30,
_ => bb29
}
}
bb25 = {
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 7839_u16 & 16539_u16;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15739_u16 };
_3.fld4 = Adt18::Variant0 { fld0: 11938667280979956781_u64,fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: 33_u8 };
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 38_u8 as i8;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 172_u8 >> _3.fld1;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15567_u16 };
_8 = Field::<bool>(Variant(_3.fld2, 0), 0) as isize;
_5 = _3.fld3.0 as f64;
_3.fld5 = -_6;
_3.fld2 = Adt23::Variant1 { fld0: 46816_u16,fld1: 2516840802_u32,fld2: 6574831166089274024_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 50661_u16,fld1: 1439136828_u32,fld2: 974997204507901063_u64 };
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<i8>(Variant(_3.fld4, 0), 1) as u16;
_5 = _8 as f64;
_13 = _3.fld0;
_3.fld6 = _5 - _5;
_10 = '\u{ea2a6}';
_3.fld2 = Adt23::Variant1 { fld0: 62209_u16,fld1: 825548308_u32,fld2: 17731057478314393810_u64 };
_5 = _8 as f64;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 26075_u16 | 3644_u16;
Goto(bb9)
}
bb26 = {
Return()
}
bb27 = {
_3.fld5 = _6 - _6;
_17 = _23 | _23;
_26.0 = _7 + _7;
_18 = _17 < _23;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 239_u8 ^ 133_u8;
_26.3 = Move(_3.fld4);
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 27442_u16 ^ 28458_u16;
_5 = _16 * _3.fld6;
_8 = _2 << _23;
_16 = _6 as f64;
place!(Field::<u64>(Variant(_26.3, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) * Field::<u64>(Variant(_3.fld2, 1), 2);
_22 = _18;
_21.0 = 889093134518726012_i64 - 7421542265521360448_i64;
_15 = _3.fld5 - _3.fld5;
_8 = _17;
_17 = -_8;
_21.1 = core::ptr::addr_of_mut!(_7);
_1 = !_3.fld1;
_26.1 = -_6;
Goto(bb18)
}
bb28 = {
Return()
}
bb29 = {
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 7839_u16 & 16539_u16;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15739_u16 };
_3.fld4 = Adt18::Variant0 { fld0: 11938667280979956781_u64,fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: 33_u8 };
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 38_u8 as i8;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = 172_u8 >> _3.fld1;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 15567_u16 };
_8 = Field::<bool>(Variant(_3.fld2, 0), 0) as isize;
_5 = _3.fld3.0 as f64;
_3.fld5 = -_6;
_3.fld2 = Adt23::Variant1 { fld0: 46816_u16,fld1: 2516840802_u32,fld2: 6574831166089274024_u64 };
_3.fld2 = Adt23::Variant1 { fld0: 50661_u16,fld1: 1439136828_u32,fld2: 974997204507901063_u64 };
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<i8>(Variant(_3.fld4, 0), 1) as u16;
_5 = _8 as f64;
_13 = _3.fld0;
_3.fld6 = _5 - _5;
_10 = '\u{ea2a6}';
_3.fld2 = Adt23::Variant1 { fld0: 62209_u16,fld1: 825548308_u32,fld2: 17731057478314393810_u64 };
_5 = _8 as f64;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = 26075_u16 | 3644_u16;
Goto(bb9)
}
bb30 = {
_39 = _26.1 - _32;
(*RET) = [(-6359_i16),(-26053_i16)];
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<u16>(Variant(_43.fld2, 1), 0);
_28 = [(-30785_i16),18776_i16];
_43.fld3.0 = -_3.fld3.0;
_30 = [_43.fld3.0,_43.fld3.0,_3.fld3.0,_43.fld3.0];
_47 = _10;
_46.0 = (_7, _43.fld5, Move(_26.2), Move(_26.2));
_38 = _16;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _10 as i8;
(*RET) = [(-15103_i16),4738_i16];
_42 = _43.fld1 as isize;
_40 = [_17,_23,_23,_17,_42,_23,_42,_17];
_15 = _38 as f32;
(*RET) = [4595_i16,13108_i16];
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = !Field::<u16>(Variant(_43.fld2, 1), 0);
_5 = -_3.fld6;
_43.fld5 = _25 * _39;
_39 = Field::<u16>(Variant(_3.fld2, 1), 0) as f32;
match _3.fld3.0 {
0 => bb22,
1 => bb2,
2 => bb13,
3 => bb20,
276517691595131457759224722115881043236 => bb32,
_ => bb31
}
}
bb31 = {
Return()
}
bb32 = {
place!(Field::<u64>(Variant(_46.0.3, 0), 0)) = Field::<u64>(Variant(_46.0.2, 0), 0) << _26.0;
_1 = !_43.fld1;
_13 = _43.fld0 & _3.fld0;
(*RET) = [5570_i16,30906_i16];
_26 = (_46.0.0, _46.0.1, Move(_46.0.3), Move(_46.0.3));
_46.0 = (_26.0, _15, Move(_26.2), Move(_26.2));
(*RET) = [(-14369_i16),10670_i16];
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: _10,fld2: _8,fld3: Field::<i8>(Variant(_46.0.3, 0), 1),fld4: 4_usize,fld5: Field::<u16>(Variant(_43.fld2, 1), 0) };
_17 = -Field::<isize>(Variant(_3.fld2, 0), 2);
match _3.fld3.0 {
0 => bb33,
1 => bb34,
2 => bb35,
3 => bb36,
4 => bb37,
5 => bb38,
276517691595131457759224722115881043236 => bb40,
_ => bb39
}
}
bb33 = {
_23 = Field::<isize>(Variant(_3.fld2, 0), 2);
place!(Field::<char>(Variant(_3.fld2, 0), 1)) = _10;
_8 = !_2;
_8 = 10771515228391373550_usize as isize;
_17 = _2 + _2;
Goto(bb16)
}
bb34 = {
_17 = _8 << _3.fld1;
_3.fld3.0 = 121220088915724195337209925659136405784_i128 + 98907233127603396651602317039600467982_i128;
_2 = _17 << _8;
_15 = 7112973049958537334_i64 as f32;
Goto(bb10)
}
bb35 = {
_1 = _3.fld1 >> _3.fld1;
place!(Field::<u64>(Variant(_3.fld2, 1), 2)) = !2691798119243017673_u64;
_3.fld5 = _3.fld3.0 as f32;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2);
_2 = 9223372036854775807_isize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _3.fld5 as i8;
_6 = _3.fld5 - _3.fld5;
place!(Field::<u16>(Variant(_3.fld2, 1), 0)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u16;
_3.fld2 = Adt23::Variant1 { fld0: 16321_u16,fld1: 2425812228_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 11_i8,fld2: 81_u8 };
_3.fld2 = Adt23::Variant1 { fld0: 33577_u16,fld1: 2259805117_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = _3.fld5 + _3.fld5;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-2528_i16) as u8;
_3.fld1 = _1 - _1;
_3.fld0 = _3.fld5 >= _6;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-4_i8),fld2: 54_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = '\u{7c9c7}' as u32;
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = Field::<u32>(Variant(_3.fld2, 1), 1) as u8;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = _2 as i8;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{6cd72}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 5_usize,fld5: 12261_u16 };
_3.fld3 = ((-24433765304245569031176193957844924830_i128),);
Goto(bb7)
}
bb36 = {
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = Field::<i8>(Variant(_3.fld2, 0), 3) >> _8;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _18 == _13;
match _3.fld3.0 {
0 => bb11,
1 => bb13,
276517691595131457759224722115881043236 => bb15,
_ => bb14
}
}
bb37 = {
Return()
}
bb38 = {
_3.fld5 = _6 - _6;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = !_3.fld0;
_7 = (-1980531052_i32) >> _3.fld1;
_6 = _3.fld5 - _3.fld5;
_3.fld0 = _7 < _7;
_3.fld2 = Adt23::Variant1 { fld0: 50772_u16,fld1: 1504220899_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_7 = -1851798167_i32;
_3.fld2 = Adt23::Variant0 { fld0: _3.fld0,fld1: '\u{11d64}',fld2: _2,fld3: Field::<i8>(Variant(_3.fld4, 0), 1),fld4: 4158738678441172123_usize,fld5: 7711_u16 };
_3.fld1 = _1 + _1;
_10 = '\u{57b44}';
_3.fld3 = (15424863703074559161994686161678854782_i128,);
place!(Field::<usize>(Variant(_3.fld2, 0), 4)) = Field::<bool>(Variant(_3.fld2, 0), 0) as usize;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = Field::<i8>(Variant(_3.fld2, 0), 3) - Field::<i8>(Variant(_3.fld2, 0), 3);
_2 = Field::<isize>(Variant(_3.fld2, 0), 2);
_3.fld2 = Adt23::Variant1 { fld0: 64816_u16,fld1: 3562103788_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) - Field::<u64>(Variant(_3.fld2, 1), 2);
Goto(bb8)
}
bb39 = {
_13 = _17 == _17;
place!(Field::<char>(Variant(_3.fld2, 0), 1)) = _10;
_19 = [Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2)];
place!(Field::<u16>(Variant(_3.fld2, 0), 5)) = !54229_u16;
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = 971793547_u32 as i8;
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = 5739472137690335455_u64;
_3.fld2 = Adt23::Variant1 { fld0: 20389_u16,fld1: 3943090413_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_3.fld2 = Adt23::Variant1 { fld0: 48137_u16,fld1: 1653035630_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = 63687_u16 as u64;
_19 = [Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2),Field::<u8>(Variant(_3.fld4, 0), 2)];
_3.fld0 = _13 & _13;
_2 = _23 * _17;
_3.fld1 = _1;
_3.fld2 = Adt23::Variant1 { fld0: 39156_u16,fld1: 3771113090_u32,fld2: Field::<u64>(Variant(_3.fld4, 0), 0) };
_6 = -_3.fld5;
_23 = -_17;
place!(Field::<i8>(Variant(_3.fld4, 0), 1)) = 63_i8 | 110_i8;
Goto(bb17)
}
bb40 = {
_26 = (_7, _43.fld5, Move(_46.0.3), Move(_46.0.3));
(*RET) = [(-10472_i16),28461_i16];
(*RET) = [(-24940_i16),(-10143_i16)];
place!(Field::<u64>(Variant(_26.3, 0), 0)) = Field::<u64>(Variant(_26.2, 0), 0) >> _1;
_46 = (Move(_26),);
_46.0 = (_7, _43.fld5, Move(_3.fld4), Move(_3.fld4));
_32 = -_15;
_47 = Field::<char>(Variant(_3.fld2, 0), 1);
_39 = _46.0.1 - _3.fld5;
_3.fld6 = -_5;
_26.3 = Move(_46.0.2);
_48 = _39 - _43.fld5;
_46.0.3 = Move(_26.3);
_6 = _46.0.1 + _39;
(*RET) = [15203_i16,(-5820_i16)];
_3.fld3.0 = Field::<u8>(Variant(_46.0.3, 0), 2) as i128;
_39 = -_15;
_46.0.2 = Move(_46.0.3);
place!(Field::<u16>(Variant(_3.fld2, 0), 5)) = Field::<u16>(Variant(_43.fld2, 1), 0) ^ Field::<u16>(Variant(_43.fld2, 1), 0);
_43.fld3 = (_3.fld3.0,);
_43.fld1 = !_3.fld1;
_43.fld4 = Move(_46.0.2);
_15 = _25;
_26.1 = _32;
place!(Field::<i8>(Variant(_43.fld4, 0), 1)) = _43.fld3.0 as i8;
Goto(bb41)
}
bb41 = {
place!(Field::<isize>(Variant(_3.fld2, 0), 2)) = _42;
_3.fld6 = _5;
place!(Field::<u8>(Variant(_43.fld4, 0), 2)) = 132_u8 | 183_u8;
_45 = _46.0.0 as f32;
_3.fld3 = (_43.fld3.0,);
_26 = (_46.0.0, _15, Move(_43.fld4), Move(_43.fld4));
_23 = _2;
_1 = _3.fld1 | _43.fld1;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_26.3, 0), 0),fld1: Field::<i8>(Variant(_26.2, 0), 1),fld2: Field::<u8>(Variant(_26.2, 0), 2) };
place!(Field::<u64>(Variant(_26.2, 0), 0)) = !Field::<u64>(Variant(_26.3, 0), 0);
(*RET) = [(-10885_i16),13796_i16];
(*RET) = [16463_i16,(-17354_i16)];
place!(Field::<u64>(Variant(_43.fld2, 1), 2)) = Field::<i8>(Variant(_26.3, 0), 1) as u64;
_43.fld1 = 13806_i16 as u128;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _22;
(*RET) = [(-21326_i16),(-4651_i16)];
_60 = -_3.fld6;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _1 == _1;
_33 = [_43.fld3.0,_43.fld3.0,_43.fld3.0,_43.fld3.0];
_59 = Field::<u64>(Variant(_26.3, 0), 0) - Field::<u64>(Variant(_43.fld2, 1), 2);
place!(Field::<u16>(Variant(_43.fld2, 1), 0)) = Field::<u16>(Variant(_3.fld2, 0), 5) << _2;
_1 = !_3.fld1;
_44 = _3.fld3.0 as isize;
_38 = _5 + _43.fld6;
Goto(bb42)
}
bb42 = {
place!(Field::<i8>(Variant(_26.2, 0), 1)) = -Field::<i8>(Variant(_26.3, 0), 1);
_20 = [Field::<u8>(Variant(_26.3, 0), 2),Field::<u8>(Variant(_26.2, 0), 2)];
_43.fld5 = Field::<u32>(Variant(_43.fld2, 1), 1) as f32;
_58 = !_3.fld3.0;
_63.0 = core::ptr::addr_of!(RET);
_46.0.2 = Move(_26.3);
_67 = Move(_21.1);
_43.fld6 = Field::<u8>(Variant(_3.fld4, 0), 2) as f64;
_26.2 = Move(_3.fld4);
(*RET) = [(-2199_i16),(-17615_i16)];
_63.1 = -Field::<i8>(Variant(_26.2, 0), 1);
_46.0.3 = Move(_26.2);
place!(Field::<usize>(Variant(_3.fld2, 0), 4)) = 1_usize + 11091334247118048925_usize;
_16 = -_5;
_64 = Field::<usize>(Variant(_3.fld2, 0), 4) as f32;
(*RET) = [10117_i16,19761_i16];
_52 = _42 | _23;
Goto(bb43)
}
bb43 = {
(*RET) = [18131_i16,(-19170_i16)];
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = Field::<u16>(Variant(_43.fld2, 1), 0) as i8;
_62 = [Field::<u8>(Variant(_46.0.3, 0), 2),Field::<u8>(Variant(_46.0.2, 0), 2),Field::<u8>(Variant(_46.0.3, 0), 2),Field::<u8>(Variant(_46.0.3, 0), 2),Field::<u8>(Variant(_46.0.2, 0), 2),Field::<u8>(Variant(_46.0.3, 0), 2)];
_63.2 = Field::<i8>(Variant(_3.fld2, 0), 3) as usize;
_46.0.0 = _26.0 | _7;
_43.fld2 = Adt23::Variant0 { fld0: _18,fld1: _47,fld2: Field::<isize>(Variant(_3.fld2, 0), 2),fld3: Field::<i8>(Variant(_3.fld2, 0), 3),fld4: _63.2,fld5: Field::<u16>(Variant(_3.fld2, 0), 5) };
_46.0.0 = _7;
_60 = _38;
(*RET) = [7713_i16,22725_i16];
(*RET) = [7404_i16,6364_i16];
_3.fld6 = _38;
_50 = _8 & _23;
_36 = _2 + _17;
place!(Field::<u16>(Variant(_43.fld2, 0), 5)) = Field::<u64>(Variant(_46.0.2, 0), 0) as u16;
(*RET) = [(-20548_i16),(-31506_i16)];
_74 = core::ptr::addr_of_mut!(_67);
Call(_12 = fn12(Move((*_74)), (*RET), Move(_63.0), Move(_46.0.3), _10, _10, Move(_74), _31, Move(RET), _18, Move(_4), _43.fld1), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
place!(Field::<usize>(Variant(_43.fld2, 0), 4)) = !Field::<usize>(Variant(_3.fld2, 0), 4);
_43.fld2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_3.fld2, 0), 5),fld1: 2149602258_u32,fld2: _59 };
_74 = core::ptr::addr_of_mut!(_67);
(*_74) = core::ptr::addr_of_mut!(_7);
_26.3 = Move(_46.0.2);
_57 = Field::<char>(Variant(_3.fld2, 0), 1);
_28 = [130_i16,8231_i16];
_53 = !_18;
_6 = _43.fld5 - _45;
_47 = _57;
(*_67) = !_46.0.0;
_66 = &mut _74;
_57 = _47;
_43.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_43.fld2, 1), 2),fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: Field::<u8>(Variant(_26.3, 0), 2) };
_65 = -_52;
_36 = _65 * _52;
(*_66) = core::ptr::addr_of_mut!(_67);
_3.fld0 = _53;
_21.1 = Move(_67);
_30 = _33;
_46.0 = (_7, _6, Move(_43.fld4), Move(_43.fld4));
_50 = _23;
place!(Field::<u64>(Variant(_26.3, 0), 0)) = _63.2 as u64;
_56 = _26.0;
RET = core::ptr::addr_of_mut!(_28);
_63.1 = (-16750_i16) as i8;
_16 = _60;
_75 = !_8;
Goto(bb45)
}
bb45 = {
place!(Field::<u64>(Variant(_46.0.3, 0), 0)) = Field::<u64>(Variant(_26.3, 0), 0) - Field::<u64>(Variant(_26.3, 0), 0);
(*_66) = core::ptr::addr_of_mut!(_67);
_52 = -_17;
_43.fld0 = !_3.fld0;
_3.fld4 = Move(_26.3);
_55 = _10;
_67 = Move(_21.1);
_50 = !_75;
_22 = _13 & _13;
_3.fld3.0 = _43.fld3.0 * _58;
_11 = &mut (*_66);
_46.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld4, 0), 0),fld1: Field::<i8>(Variant(_3.fld2, 0), 3),fld2: Field::<u8>(Variant(_46.0.2, 0), 2) };
_36 = _2 + _23;
_3.fld1 = !_1;
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = Field::<i8>(Variant(_46.0.2, 0), 1) & Field::<i8>(Variant(_46.0.3, 0), 1);
_30 = _41;
_43.fld1 = _26.1 as u128;
_31 = _43.fld5 - _46.0.1;
(*RET) = [(-17751_i16),(-29515_i16)];
Goto(bb46)
}
bb46 = {
place!(Field::<u64>(Variant(_43.fld2, 1), 2)) = !Field::<u64>(Variant(_3.fld4, 0), 0);
_80.2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_43.fld2, 1), 0),fld1: 952007704_u32,fld2: Field::<u64>(Variant(_43.fld2, 1), 2) };
_5 = _3.fld6 + _38;
_43.fld0 = _63.2 < _63.2;
_72 = _43.fld1 & _43.fld1;
(*RET) = [(-16320_i16),5116_i16];
_43 = Adt31 { fld0: _3.fld0,fld1: _3.fld1,fld2: _3.fld2,fld3: _3.fld3,fld4: Move(_3.fld4),fld5: _31,fld6: _38 };
_25 = _26.1;
_33 = _41;
_80.2 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_3.fld2, 0), 5),fld1: 4216909974_u32,fld2: Field::<u64>(Variant(_46.0.3, 0), 0) };
(*_11) = core::ptr::addr_of_mut!(_67);
_46.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_43.fld4, 0), 0),fld1: Field::<i8>(Variant(_43.fld2, 0), 3),fld2: Field::<u8>(Variant(_43.fld4, 0), 2) };
_26.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_46.0.3, 0), 0),fld1: Field::<i8>(Variant(_46.0.3, 0), 1),fld2: Field::<u8>(Variant(_43.fld4, 0), 2) };
place!(Field::<i8>(Variant(_46.0.2, 0), 1)) = Field::<i8>(Variant(_43.fld2, 0), 3) * Field::<i8>(Variant(_3.fld2, 0), 3);
_59 = Field::<u64>(Variant(_26.3, 0), 0) & Field::<u64>(Variant(_43.fld4, 0), 0);
_44 = -_23;
_72 = Field::<u64>(Variant(_26.3, 0), 0) as u128;
_68 = _43.fld1 <= _72;
(*_11) = core::ptr::addr_of_mut!(_67);
_48 = _3.fld5;
_26.1 = -_25;
place!(Field::<u32>(Variant(_80.2, 1), 1)) = _43.fld3.0 as u32;
_63.0 = core::ptr::addr_of!(_4);
place!(Field::<u64>(Variant(_26.3, 0), 0)) = _59;
_43.fld3 = (_58,);
_63.1 = Field::<i8>(Variant(_43.fld2, 0), 3);
Goto(bb47)
}
bb47 = {
(*_11) = core::ptr::addr_of_mut!(_21.1);
(*RET) = [(-6453_i16),18842_i16];
_55 = _47;
_26.1 = -_46.0.1;
(*RET) = [(-20670_i16),23612_i16];
(*RET) = [14396_i16,(-12365_i16)];
place!(Field::<u16>(Variant(_80.2, 1), 0)) = Field::<u16>(Variant(_43.fld2, 0), 5);
RET = core::ptr::addr_of_mut!((*RET));
_20 = [Field::<u8>(Variant(_46.0.2, 0), 2),Field::<u8>(Variant(_43.fld4, 0), 2)];
(*_11) = core::ptr::addr_of_mut!(_21.1);
(*_11) = core::ptr::addr_of_mut!(_21.1);
_48 = _6;
_86 = 735_i16;
_80.1 = [_63.2,_63.2,_63.2,_63.2,_63.2,_63.2,_63.2,_63.2];
(*_11) = core::ptr::addr_of_mut!(_67);
_2 = _86 as isize;
_19 = [Field::<u8>(Variant(_43.fld4, 0), 2),Field::<u8>(Variant(_46.0.2, 0), 2),Field::<u8>(Variant(_46.0.3, 0), 2),Field::<u8>(Variant(_43.fld4, 0), 2),Field::<u8>(Variant(_43.fld4, 0), 2)];
_55 = _47;
_51 = _53 != _53;
_59 = !Field::<u64>(Variant(_80.2, 1), 2);
(*RET) = [_86,_86];
_32 = Field::<u64>(Variant(_43.fld4, 0), 0) as f32;
match _86 {
0 => bb23,
1 => bb34,
2 => bb48,
735 => bb50,
_ => bb49
}
}
bb48 = {
_17 = _2 & _2;
_7 = 15536446630917176930_usize as i32;
RET = core::ptr::addr_of_mut!(_28);
(*RET) = [(-13291_i16),(-16069_i16)];
place!(Field::<u64>(Variant(_3.fld4, 0), 0)) = Field::<u64>(Variant(_3.fld2, 1), 2) | Field::<u64>(Variant(_3.fld2, 1), 2);
RET = core::ptr::addr_of_mut!((*RET));
_3.fld0 = !_13;
_4 = core::ptr::addr_of_mut!((*RET));
(*_4) = [25010_i16,9613_i16];
(*RET) = [664_i16,(-24897_i16)];
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: (-14_i8),fld2: 247_u8 };
_22 = _3.fld0;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_3.fld2, 1), 2),fld1: 91_i8,fld2: 45_u8 };
place!(Field::<u32>(Variant(_3.fld2, 1), 1)) = 1027771303_u32 - 3895347340_u32;
_26.0 = _7;
_18 = !_13;
_21.1 = core::ptr::addr_of_mut!(_26.0);
_30 = [_3.fld3.0,_3.fld3.0,_3.fld3.0,_3.fld3.0];
place!(Field::<u8>(Variant(_3.fld4, 0), 2)) = (-90_i8) as u8;
_7 = _26.0;
_22 = !_18;
(*RET) = [6831_i16,23730_i16];
(*RET) = [(-1982_i16),(-32204_i16)];
Goto(bb22)
}
bb49 = {
place!(Field::<isize>(Variant(_3.fld2, 0), 2)) = _42;
_3.fld6 = _5;
place!(Field::<u8>(Variant(_43.fld4, 0), 2)) = 132_u8 | 183_u8;
_45 = _46.0.0 as f32;
_3.fld3 = (_43.fld3.0,);
_26 = (_46.0.0, _15, Move(_43.fld4), Move(_43.fld4));
_23 = _2;
_1 = _3.fld1 | _43.fld1;
_3.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_26.3, 0), 0),fld1: Field::<i8>(Variant(_26.2, 0), 1),fld2: Field::<u8>(Variant(_26.2, 0), 2) };
place!(Field::<u64>(Variant(_26.2, 0), 0)) = !Field::<u64>(Variant(_26.3, 0), 0);
(*RET) = [(-10885_i16),13796_i16];
(*RET) = [16463_i16,(-17354_i16)];
place!(Field::<u64>(Variant(_43.fld2, 1), 2)) = Field::<i8>(Variant(_26.3, 0), 1) as u64;
_43.fld1 = 13806_i16 as u128;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _22;
(*RET) = [(-21326_i16),(-4651_i16)];
_60 = -_3.fld6;
place!(Field::<bool>(Variant(_3.fld2, 0), 0)) = _1 == _1;
_33 = [_43.fld3.0,_43.fld3.0,_43.fld3.0,_43.fld3.0];
_59 = Field::<u64>(Variant(_26.3, 0), 0) - Field::<u64>(Variant(_43.fld2, 1), 2);
place!(Field::<u16>(Variant(_43.fld2, 1), 0)) = Field::<u16>(Variant(_3.fld2, 0), 5) << _2;
_1 = !_3.fld1;
_44 = _3.fld3.0 as isize;
_38 = _5 + _43.fld6;
Goto(bb42)
}
bb50 = {
(*_11) = core::ptr::addr_of_mut!(_67);
(*RET) = [_86,_86];
_5 = -_16;
_26.3 = Move(_43.fld4);
_43.fld4 = Move(_46.0.3);
_52 = _44;
_36 = _23 - _23;
_4 = Move(RET);
_83 = [_63.2,_63.2,_63.2,_63.2,_63.2,_63.2,_63.2,_63.2];
_88.1 = [_63.2,Field::<usize>(Variant(_3.fld2, 0), 4),_63.2,_63.2,_63.2,_63.2,_63.2,_63.2];
(*_11) = core::ptr::addr_of_mut!(_67);
place!(Field::<i8>(Variant(_46.0.2, 0), 1)) = Field::<i8>(Variant(_43.fld4, 0), 1) - Field::<i8>(Variant(_3.fld2, 0), 3);
_75 = _52;
_26.2 = Move(_46.0.2);
place!(Field::<u64>(Variant(_26.2, 0), 0)) = _59;
RET = core::ptr::addr_of_mut!(_28);
place!(Field::<i8>(Variant(_3.fld2, 0), 3)) = _63.1 ^ Field::<i8>(Variant(_26.2, 0), 1);
_35 = &mut (*_11);
_94 = Field::<isize>(Variant(_3.fld2, 0), 2) as f64;
Goto(bb51)
}
bb51 = {
Call(_96 = dump_var(11_usize, 68_usize, Move(_68), 22_usize, Move(_22), 56_usize, Move(_56), 7_usize, Move(_7)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_96 = dump_var(11_usize, 83_usize, Move(_83), 86_usize, Move(_86), 42_usize, Move(_42), 72_usize, Move(_72)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_96 = dump_var(11_usize, 20_usize, Move(_20), 40_usize, Move(_40), 53_usize, Move(_53), 65_usize, Move(_65)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_96 = dump_var(11_usize, 47_usize, Move(_47), 52_usize, Move(_52), 33_usize, Move(_33), 59_usize, Move(_59)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_96 = dump_var(11_usize, 10_usize, Move(_10), 51_usize, Move(_51), 97_usize, _97, 97_usize, _97), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn12(mut _1: *mut i32,mut _2: [i16; 2],mut _3: *const *mut [i16; 2],mut _4: Adt18,mut _5: char,mut _6: char,mut _7: *mut *mut i32,mut _8: f32,mut _9: *mut [i16; 2],mut _10: bool,mut _11: *mut [i16; 2],mut _12: u128) -> *mut [bool; 4] {
mir! {
type RET = *mut [bool; 4];
let _13: &'static mut *mut [u64; 1];
let _14: bool;
let _15: usize;
let _16: u128;
let _17: ((*const *mut [i16; 2], i8, usize), Adt31);
let _18: f64;
let _19: (*const *mut [i16; 2], i8, usize);
let _20: f64;
let _21: i128;
let _22: *mut [u64; 1];
let _23: i128;
let _24: ((*mut i32, *mut [i16; 2], u8), (*mut i32, *mut [i16; 2], u8), &'static mut *mut *mut i32, Adt51);
let _25: &'static mut *mut [u64; 1];
let _26: f64;
let _27: isize;
let _28: bool;
let _29: f64;
let _30: i128;
let _31: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _32: f64;
let _33: (Adt23,);
let _34: i64;
let _35: [i16; 2];
let _36: &'static mut *mut *mut i32;
let _37: &'static mut (i32, f32, Adt18, Adt18);
let _38: *mut i32;
let _39: [u64; 1];
let _40: &'static mut (i32, f32, Adt18, Adt18);
let _41: *const [usize; 2];
let _42: isize;
let _43: [char; 2];
let _44: char;
let _45: &'static mut *mut [u64; 1];
let _46: Adt48;
let _47: isize;
let _48: char;
let _49: *const [u128; 2];
let _50: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _51: &'static [u64; 1];
let _52: *mut i16;
let _53: &'static Adt51;
let _54: Adt66;
let _55: &'static *mut [i16; 2];
let _56: isize;
let _57: isize;
let _58: *mut i32;
let _59: isize;
let _60: f64;
let _61: u16;
let _62: *const [usize; 2];
let _63: Adt51;
let _64: &'static [u64; 1];
let _65: i16;
let _66: &'static [u64; 1];
let _67: i16;
let _68: f32;
let _69: f32;
let _70: char;
let _71: u128;
let _72: *const [u128; 2];
let _73: i8;
let _74: i64;
let _75: &'static mut (*mut i32, *mut [i16; 2], u8);
let _76: (i16,);
let _77: (Adt23,);
let _78: &'static mut (*mut i32, *mut [i16; 2], u8);
let _79: (i16,);
let _80: [u8; 2];
let _81: bool;
let _82: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _83: (i32, f32, Adt18, Adt18);
let _84: char;
let _85: *mut [u64; 1];
let _86: f64;
let _87: &'static &'static f64;
let _88: *mut [i16; 2];
let _89: Adt66;
let _90: &'static mut *mut *mut i32;
let _91: char;
let _92: [usize; 2];
let _93: &'static &'static f64;
let _94: &'static [i128; 4];
let _95: [i128; 4];
let _96: &'static *mut [i16; 2];
let _97: isize;
let _98: f32;
let _99: (i16,);
let _100: f32;
let _101: u128;
let _102: isize;
let _103: [u128; 2];
let _104: f32;
let _105: &'static mut *mut *mut i32;
let _106: f32;
let _107: &'static [u64; 1];
let _108: *mut &'static *mut [bool; 4];
let _109: u128;
let _110: ((i32, f32, Adt18, Adt18),);
let _111: usize;
let _112: &'static mut *mut *mut i32;
let _113: bool;
let _114: i64;
let _115: &'static Adt51;
let _116: *const [i128; 4];
let _117: *mut [i16; 2];
let _118: &'static mut *mut *mut i32;
let _119: f32;
let _120: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _121: usize;
let _122: usize;
let _123: [u16; 2];
let _124: *mut &'static mut (i32, f32, Adt18, Adt18);
let _125: i16;
let _126: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _127: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _128: f64;
let _129: isize;
let _130: u16;
let _131: *mut [bool; 4];
let _132: isize;
let _133: isize;
let _134: char;
let _135: &'static u32;
let _136: *mut i32;
let _137: i128;
let _138: isize;
let _139: *mut [u64; 1];
let _140: bool;
let _141: *mut [i16; 2];
let _142: char;
let _143: *const [i128; 4];
let _144: i128;
let _145: isize;
let _146: ((i32, f32, Adt18, Adt18),);
let _147: &'static Adt51;
let _148: *const [u128; 2];
let _149: *mut i16;
let _150: f32;
let _151: &'static mut [char; 2];
let _152: *mut &'static mut (i32, f32, Adt18, Adt18);
let _153: ((*mut i32, *mut [i16; 2], u8), (*mut i32, *mut [i16; 2], u8), &'static mut *mut *mut i32, Adt51);
let _154: char;
let _155: *const [i128; 4];
let _156: u64;
let _157: *mut i32;
let _158: [usize; 5];
let _159: u64;
let _160: usize;
let _161: f64;
let _162: char;
let _163: *mut (&'static mut *mut [u64; 1], u128);
let _164: isize;
let _165: (i32, f32, Adt18, Adt18);
let _166: (Adt23,);
let _167: (i32, f32, Adt18, Adt18);
let _168: Adt18;
let _169: &'static *mut [bool; 4];
let _170: u16;
let _171: isize;
let _172: isize;
let _173: isize;
let _174: [u128; 2];
let _175: i8;
let _176: bool;
let _177: (&'static mut *mut [u64; 1], u128);
let _178: isize;
let _179: f32;
let _180: f64;
let _181: bool;
let _182: (&'static f64, [usize; 8], Adt23, [usize; 5]);
let _183: Adt18;
let _184: Adt57;
let _185: [u8; 6];
let _186: u32;
let _187: *const [u128; 2];
let _188: *const [i128; 4];
let _189: &'static mut (i32, f32, Adt18, Adt18);
let _190: bool;
let _191: &'static Adt51;
let _192: &'static mut *mut *mut i32;
let _193: char;
let _194: bool;
let _195: char;
let _196: u8;
let _197: u64;
let _198: &'static &'static f64;
let _199: &'static mut *mut [u64; 1];
let _200: *mut &'static *mut [bool; 4];
let _201: f32;
let _202: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _203: (&'static mut *mut [u64; 1], u128);
let _204: isize;
let _205: isize;
let _206: usize;
let _207: *const [u128; 2];
let _208: i32;
let _209: char;
let _210: &'static Adt51;
let _211: i128;
let _212: &'static mut [char; 2];
let _213: isize;
let _214: f32;
let _215: f32;
let _216: u128;
let _217: u32;
let _218: *mut [i16; 2];
let _219: f32;
let _220: &'static mut [char; 2];
let _221: u8;
let _222: isize;
let _223: f32;
let _224: [u16; 2];
let _225: *mut &'static *mut [bool; 4];
let _226: isize;
let _227: f32;
let _228: f32;
let _229: isize;
let _230: ([bool; 4], (i32, f32, Adt18, Adt18));
let _231: usize;
let _232: &'static mut *mut *mut i32;
let _233: u16;
let _234: f32;
let _235: isize;
let _236: *mut [bool; 4];
let _237: ((*const *mut [i16; 2], i8, usize), Adt31);
let _238: u64;
let _239: bool;
let _240: isize;
let _241: *mut &'static mut (i32, f32, Adt18, Adt18);
let _242: f64;
let _243: &'static &'static f64;
let _244: char;
let _245: &'static mut *mut [u64; 1];
let _246: ([bool; 4], (i32, f32, Adt18, Adt18));
let _247: isize;
let _248: [usize; 2];
let _249: *const *mut [i16; 2];
let _250: f32;
let _251: i64;
let _252: isize;
let _253: &'static u32;
let _254: ();
let _255: ();
{
_5 = _6;
_11 = core::ptr::addr_of_mut!(_2);
(*_11) = [(-19288_i16),25482_i16];
(*_11) = [17149_i16,20591_i16];
(*_11) = [26215_i16,(-22468_i16)];
(*_11) = [(-19691_i16),(-14292_i16)];
(*_11) = [7605_i16,28117_i16];
(*_11) = [(-6759_i16),(-8078_i16)];
(*_11) = [(-6425_i16),(-1690_i16)];
(*_11) = [9723_i16,17333_i16];
_5 = _6;
place!(Field::<u64>(Variant(_4, 0), 0)) = 5182764235223136552_u64 >> _12;
_5 = _6;
(*_11) = [(-18964_i16),10573_i16];
place!(Field::<i8>(Variant(_4, 0), 1)) = 19872_i16 as i8;
(*_11) = [(-10355_i16),(-19277_i16)];
(*_11) = [5115_i16,(-23043_i16)];
_12 = !28234605765334488927685899380272062448_u128;
(*_11) = [32756_i16,30969_i16];
_12 = 303710189757409143666301513078911246190_u128 + 76226010490256413261030931930869522744_u128;
_5 = _6;
_8 = 8410698788691226835_usize as f32;
Goto(bb1)
}
bb1 = {
(*_11) = [29302_i16,(-16625_i16)];
(*_11) = [(-18764_i16),(-30069_i16)];
_3 = core::ptr::addr_of!(_9);
place!(Field::<u64>(Variant(_4, 0), 0)) = 11205108399822482650_u64 * 3121189759733292078_u64;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_3) = Move(_11);
(*_3) = core::ptr::addr_of_mut!(_2);
_2 = [(-31388_i16),(-770_i16)];
_15 = !4_usize;
(*_3) = core::ptr::addr_of_mut!((*_9));
_6 = _5;
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5719_i16,20570_i16];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [(-26742_i16),(-7321_i16)];
(*_9) = [(-30324_i16),19002_i16];
(*_9) = [21259_i16,(-25699_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5036_i16,(-31490_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
place!(Field::<u8>(Variant(_4, 0), 2)) = 4056_i16 as u8;
_17.1.fld5 = Field::<i8>(Variant(_4, 0), 1) as f32;
(*_3) = core::ptr::addr_of_mut!((*_9));
Call(_17.1 = fn13(Move((*_3)), Move(_3), Move(_1), (*_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb2 = {
_16 = _17.1.fld1 & _12;
_9 = core::ptr::addr_of_mut!(_2);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = _17.1.fld5 as u64;
_3 = core::ptr::addr_of!(_9);
(*_9) = [(-22743_i16),(-20706_i16)];
_10 = _17.1.fld1 >= _17.1.fld1;
(*_9) = [(-12875_i16),(-9767_i16)];
_17.0 = (Move(_3), Field::<i8>(Variant(_4, 0), 1), _15);
_18 = _17.1.fld6 * _17.1.fld6;
place!(Field::<u64>(Variant(_4, 0), 0)) = Field::<u64>(Variant(_17.1.fld2, 1), 2) ^ Field::<u64>(Variant(_17.1.fld2, 1), 2);
(*_9) = [9463_i16,(-31472_i16)];
_19.2 = _15;
_17.1.fld6 = _17.1.fld3.0 as f64;
(*_9) = [(-19253_i16),(-32342_i16)];
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = Field::<u64>(Variant(_4, 0), 0) + Field::<u64>(Variant(_4, 0), 0);
_19.1 = _17.0.1 - _17.0.1;
_19.1 = _17.0.1;
_17.1.fld3.0 = !(-46673430879838254198737668447058883370_i128);
_17.1.fld3 = ((-63695912752837435040168524968517780420_i128),);
_17.0.0 = core::ptr::addr_of!(_9);
_17.0.0 = core::ptr::addr_of!(_9);
(*_9) = [23941_i16,10064_i16];
(*_9) = [21166_i16,(-4612_i16)];
place!(Field::<u8>(Variant(_4, 0), 2)) = Field::<u8>(Variant(_17.1.fld4, 0), 2);
(*_9) = [16057_i16,(-528_i16)];
_17.1.fld4 = Move(_4);
_17.0.1 = Field::<i8>(Variant(_17.1.fld4, 0), 1) * Field::<i8>(Variant(_17.1.fld4, 0), 1);
Call(_20 = core::intrinsics::transmute(Field::<u64>(Variant(_17.1.fld4, 0), 0)), ReturnTo(bb3), UnwindUnreachable())
}
bb3 = {
_11 = core::ptr::addr_of_mut!((*_9));
_17.0.2 = !_15;
match _17.1.fld3.0 {
0 => bb2,
1 => bb4,
2 => bb5,
276586454168101028423206082463250431036 => bb7,
_ => bb6
}
}
bb4 = {
_16 = _17.1.fld1 & _12;
_9 = core::ptr::addr_of_mut!(_2);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = _17.1.fld5 as u64;
_3 = core::ptr::addr_of!(_9);
(*_9) = [(-22743_i16),(-20706_i16)];
_10 = _17.1.fld1 >= _17.1.fld1;
(*_9) = [(-12875_i16),(-9767_i16)];
_17.0 = (Move(_3), Field::<i8>(Variant(_4, 0), 1), _15);
_18 = _17.1.fld6 * _17.1.fld6;
place!(Field::<u64>(Variant(_4, 0), 0)) = Field::<u64>(Variant(_17.1.fld2, 1), 2) ^ Field::<u64>(Variant(_17.1.fld2, 1), 2);
(*_9) = [9463_i16,(-31472_i16)];
_19.2 = _15;
_17.1.fld6 = _17.1.fld3.0 as f64;
(*_9) = [(-19253_i16),(-32342_i16)];
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = Field::<u64>(Variant(_4, 0), 0) + Field::<u64>(Variant(_4, 0), 0);
_19.1 = _17.0.1 - _17.0.1;
_19.1 = _17.0.1;
_17.1.fld3.0 = !(-46673430879838254198737668447058883370_i128);
_17.1.fld3 = ((-63695912752837435040168524968517780420_i128),);
_17.0.0 = core::ptr::addr_of!(_9);
_17.0.0 = core::ptr::addr_of!(_9);
(*_9) = [23941_i16,10064_i16];
(*_9) = [21166_i16,(-4612_i16)];
place!(Field::<u8>(Variant(_4, 0), 2)) = Field::<u8>(Variant(_17.1.fld4, 0), 2);
(*_9) = [16057_i16,(-528_i16)];
_17.1.fld4 = Move(_4);
_17.0.1 = Field::<i8>(Variant(_17.1.fld4, 0), 1) * Field::<i8>(Variant(_17.1.fld4, 0), 1);
Call(_20 = core::intrinsics::transmute(Field::<u64>(Variant(_17.1.fld4, 0), 0)), ReturnTo(bb3), UnwindUnreachable())
}
bb5 = {
(*_11) = [29302_i16,(-16625_i16)];
(*_11) = [(-18764_i16),(-30069_i16)];
_3 = core::ptr::addr_of!(_9);
place!(Field::<u64>(Variant(_4, 0), 0)) = 11205108399822482650_u64 * 3121189759733292078_u64;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_3) = Move(_11);
(*_3) = core::ptr::addr_of_mut!(_2);
_2 = [(-31388_i16),(-770_i16)];
_15 = !4_usize;
(*_3) = core::ptr::addr_of_mut!((*_9));
_6 = _5;
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5719_i16,20570_i16];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [(-26742_i16),(-7321_i16)];
(*_9) = [(-30324_i16),19002_i16];
(*_9) = [21259_i16,(-25699_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5036_i16,(-31490_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
place!(Field::<u8>(Variant(_4, 0), 2)) = 4056_i16 as u8;
_17.1.fld5 = Field::<i8>(Variant(_4, 0), 1) as f32;
(*_3) = core::ptr::addr_of_mut!((*_9));
Call(_17.1 = fn13(Move((*_3)), Move(_3), Move(_1), (*_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb6 = {
Return()
}
bb7 = {
(*_9) = [23966_i16,(-4905_i16)];
(*_9) = [29599_i16,24745_i16];
_17.1.fld3.0 = (-53398698239532570167078571501192776645_i128) << Field::<u64>(Variant(_17.1.fld2, 1), 2);
_5 = _6;
_10 = _17.1.fld0;
(*_9) = [(-5510_i16),(-16735_i16)];
_12 = _17.1.fld1 ^ _16;
_6 = _5;
_21 = _17.1.fld3.0 + _17.1.fld3.0;
Call(place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = core::intrinsics::transmute(_5), ReturnTo(bb8), UnwindUnreachable())
}
bb8 = {
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2);
_15 = _19.2 & _17.0.2;
_19.1 = 9223372036854775807_isize as i8;
_19 = Move(_17.0);
_17.0.1 = _19.1 ^ Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.1 = -_17.0.1;
_14 = _10 | _17.1.fld0;
_7 = core::ptr::addr_of_mut!(_1);
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _17.1.fld5 as u16;
Goto(bb9)
}
bb9 = {
_17.1.fld3.0 = _21 | _21;
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u32>(Variant(_17.1.fld2, 1), 1) as u64;
_19.0 = core::ptr::addr_of!(_24.0.1);
_17.0.1 = Field::<i8>(Variant(_17.1.fld4, 0), 1) & Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.1.fld5 = _8 * _8;
_17.0.2 = _15;
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
(*_9) = [(-20044_i16),(-18846_i16)];
(*_9) = [28945_i16,8050_i16];
_17.1.fld2 = Adt23::Variant1 { fld0: 30333_u16,fld1: 1576756637_u32,fld2: Field::<u64>(Variant(_17.1.fld4, 0), 0) };
_24.0.1 = Move(_9);
_7 = core::ptr::addr_of_mut!((*_7));
_23 = _17.1.fld3.0 << _17.1.fld3.0;
_7 = core::ptr::addr_of_mut!((*_7));
_23 = _17.1.fld3.0 * _21;
_24.0.2 = _24.1.2 ^ Field::<u8>(Variant(_17.1.fld4, 0), 2);
_14 = _17.1.fld0 & _10;
_27 = 32_isize;
_6 = _5;
_9 = core::ptr::addr_of_mut!(_2);
_17.1.fld3 = (_23,);
(*_9) = [12929_i16,5265_i16];
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = _19.1 as u64;
_8 = _17.1.fld5 - _17.1.fld5;
(*_9) = [30475_i16,(-30774_i16)];
Goto(bb10)
}
bb10 = {
_17.1.fld3.0 = _21;
(*_9) = [(-14221_i16),(-26203_i16)];
_17.1.fld3 = (_23,);
_6 = _5;
_17.0.1 = Field::<i8>(Variant(_17.1.fld4, 0), 1) * Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.1.fld2 = Adt23::Variant1 { fld0: 58285_u16,fld1: 3035610856_u32,fld2: Field::<u64>(Variant(_17.1.fld4, 0), 0) };
_21 = _17.1.fld3.0;
_17.0.2 = _19.2;
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2) | Field::<u8>(Variant(_17.1.fld4, 0), 2);
(*_9) = [(-18503_i16),24440_i16];
_17.1.fld3 = (_23,);
_5 = _6;
(*_9) = [(-32002_i16),(-28441_i16)];
_3 = core::ptr::addr_of!(_24.0.1);
_16 = _17.1.fld1 & _12;
place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = 2836922026_u32 * 1673935245_u32;
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _6 as u16;
(*_3) = Move(_9);
_6 = _5;
_24.1.1 = core::ptr::addr_of_mut!(_2);
match _27 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
32 => bb11,
_ => bb7
}
}
bb11 = {
_19.2 = _15;
(*_3) = core::ptr::addr_of_mut!(_2);
_4 = Move(_17.1.fld4);
(*_3) = Move(_24.1.1);
_10 = _24.1.2 == _24.0.2;
place!(Field::<u8>(Variant(_4, 0), 2)) = !_24.1.2;
_29 = -_17.1.fld6;
_17.1.fld4 = Move(_4);
_4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld4, 0), 0),fld1: _19.1,fld2: Field::<u8>(Variant(_17.1.fld4, 0), 2) };
_19.0 = Move(_17.0.0);
_19 = (Move(_3), Field::<i8>(Variant(_4, 0), 1), _17.0.2);
_12 = _16;
_30 = _23;
_17.0 = (Move(_19.0), Field::<i8>(Variant(_17.1.fld4, 0), 1), _19.2);
_19.1 = !Field::<i8>(Variant(_4, 0), 1);
place!(Field::<i8>(Variant(_4, 0), 1)) = -_19.1;
_19 = (Move(_17.0.0), Field::<i8>(Variant(_4, 0), 1), _15);
_17.1.fld5 = -_8;
_11 = core::ptr::addr_of_mut!(_2);
(*_11) = [9551_i16,4665_i16];
_17.1.fld3 = (_23,);
_19.2 = !_15;
_17.0.2 = _15 - _19.2;
(*_11) = [16173_i16,26916_i16];
_10 = _16 > _12;
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_20 = _29 - _29;
_26 = _15 as f64;
_17.0 = (Move(_19.0), _19.1, _15);
match _27 {
0 => bb6,
1 => bb5,
2 => bb3,
3 => bb4,
32 => bb13,
_ => bb12
}
}
bb12 = {
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2);
_15 = _19.2 & _17.0.2;
_19.1 = 9223372036854775807_isize as i8;
_19 = Move(_17.0);
_17.0.1 = _19.1 ^ Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.1 = -_17.0.1;
_14 = _10 | _17.1.fld0;
_7 = core::ptr::addr_of_mut!(_1);
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _17.1.fld5 as u16;
Goto(bb9)
}
bb13 = {
_20 = _18;
(*_11) = [(-13179_i16),4311_i16];
place!(Field::<u8>(Variant(_4, 0), 2)) = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_9);
_17.0.2 = _19.2 << Field::<u8>(Variant(_4, 0), 2);
_33.0 = _17.1.fld2;
_11 = core::ptr::addr_of_mut!((*_11));
_17.0.0 = core::ptr::addr_of!(_11);
_5 = _6;
_32 = _18 * _18;
(*_11) = [(-5155_i16),(-19727_i16)];
(*_11) = [(-21834_i16),(-24755_i16)];
_30 = _23 & _23;
place!(Field::<u8>(Variant(_4, 0), 2)) = _19.1 as u8;
_7 = core::ptr::addr_of_mut!((*_7));
_18 = _32 * _32;
_24.1.1 = core::ptr::addr_of_mut!((*_11));
_17.1.fld3 = (_21,);
(*_11) = [4353_i16,9960_i16];
_17.1.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: _17.0.1,fld2: _24.0.2 };
(*_11) = [(-9418_i16),(-12973_i16)];
_17.1.fld3.0 = _30 | _30;
Goto(bb14)
}
bb14 = {
_17.1.fld5 = _8 - _8;
place!(Field::<u8>(Variant(_17.1.fld4, 0), 2)) = !Field::<u8>(Variant(_4, 0), 2);
place!(Field::<u64>(Variant(_33.0, 1), 2)) = Field::<u64>(Variant(_17.1.fld2, 1), 2) ^ Field::<u64>(Variant(_4, 0), 0);
(*_11) = [27223_i16,(-13756_i16)];
_33 = (_17.1.fld2,);
_17.1.fld6 = _18 + _32;
_32 = -_18;
_10 = _17.1.fld0 ^ _17.1.fld0;
_34 = (-3354270381550006516_i64) - (-6867382878541692752_i64);
_24.0.2 = _24.1.2;
_21 = _17.1.fld3.0 >> _17.1.fld3.0;
(*_11) = [(-28505_i16),(-12068_i16)];
place!(Field::<u64>(Variant(_4, 0), 0)) = Field::<u64>(Variant(_33.0, 1), 2);
place!(Field::<u64>(Variant(_4, 0), 0)) = Field::<u64>(Variant(_33.0, 1), 2);
_26 = _18 - _17.1.fld6;
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = !Field::<u64>(Variant(_33.0, 1), 2);
(*_11) = [(-6166_i16),6192_i16];
_3 = core::ptr::addr_of!(_24.1.1);
(*_3) = Move(_24.0.1);
_17.1.fld0 = _10;
Goto(bb15)
}
bb15 = {
(*_11) = [(-28469_i16),17411_i16];
_28 = _17.1.fld6 > _29;
_19.0 = Move(_3);
place!(Field::<u32>(Variant(_33.0, 1), 1)) = Field::<u32>(Variant(_17.1.fld2, 1), 1);
_16 = _12;
_24.0.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2) + _24.1.2;
(*_11) = [18315_i16,10935_i16];
(*_11) = [359_i16,(-24836_i16)];
(*_11) = [(-29319_i16),4792_i16];
_24.1.2 = !_24.0.2;
_6 = _5;
_34 = (-482610408080812608_i64) & (-9040738244869464029_i64);
_24.1.2 = Field::<u8>(Variant(_4, 0), 2) << _16;
place!(Field::<u64>(Variant(_33.0, 1), 2)) = !Field::<u64>(Variant(_4, 0), 0);
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = !Field::<u64>(Variant(_33.0, 1), 2);
_18 = _17.1.fld6;
_17.1.fld0 = _28 | _28;
place!(Field::<i8>(Variant(_4, 0), 1)) = _19.1 ^ _19.1;
_10 = _28 ^ _28;
_29 = _24.0.2 as f64;
_9 = Move(_24.1.1);
_24.0.2 = _24.1.2;
_36 = &mut _7;
_19.0 = core::ptr::addr_of!(_24.1.1);
(*_11) = [323_i16,(-10205_i16)];
Goto(bb16)
}
bb16 = {
(*_11) = [4896_i16,(-23589_i16)];
place!(Field::<u64>(Variant(_4, 0), 0)) = Field::<u64>(Variant(_17.1.fld2, 1), 2) << _21;
(*_36) = core::ptr::addr_of_mut!(_38);
_35 = (*_11);
(*_11) = [8019_i16,11753_i16];
_28 = !_10;
_17.0 = (Move(_19.0), Field::<i8>(Variant(_4, 0), 1), _15);
(*_11) = [26495_i16,(-28129_i16)];
match _27 {
0 => bb17,
1 => bb18,
2 => bb19,
3 => bb20,
32 => bb22,
_ => bb21
}
}
bb17 = {
(*_11) = [29302_i16,(-16625_i16)];
(*_11) = [(-18764_i16),(-30069_i16)];
_3 = core::ptr::addr_of!(_9);
place!(Field::<u64>(Variant(_4, 0), 0)) = 11205108399822482650_u64 * 3121189759733292078_u64;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_3) = Move(_11);
(*_3) = core::ptr::addr_of_mut!(_2);
_2 = [(-31388_i16),(-770_i16)];
_15 = !4_usize;
(*_3) = core::ptr::addr_of_mut!((*_9));
_6 = _5;
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5719_i16,20570_i16];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [(-26742_i16),(-7321_i16)];
(*_9) = [(-30324_i16),19002_i16];
(*_9) = [21259_i16,(-25699_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5036_i16,(-31490_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
place!(Field::<u8>(Variant(_4, 0), 2)) = 4056_i16 as u8;
_17.1.fld5 = Field::<i8>(Variant(_4, 0), 1) as f32;
(*_3) = core::ptr::addr_of_mut!((*_9));
Call(_17.1 = fn13(Move((*_3)), Move(_3), Move(_1), (*_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb18 = {
(*_9) = [23966_i16,(-4905_i16)];
(*_9) = [29599_i16,24745_i16];
_17.1.fld3.0 = (-53398698239532570167078571501192776645_i128) << Field::<u64>(Variant(_17.1.fld2, 1), 2);
_5 = _6;
_10 = _17.1.fld0;
(*_9) = [(-5510_i16),(-16735_i16)];
_12 = _17.1.fld1 ^ _16;
_6 = _5;
_21 = _17.1.fld3.0 + _17.1.fld3.0;
Call(place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = core::intrinsics::transmute(_5), ReturnTo(bb8), UnwindUnreachable())
}
bb19 = {
_20 = _18;
(*_11) = [(-13179_i16),4311_i16];
place!(Field::<u8>(Variant(_4, 0), 2)) = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_9);
_17.0.2 = _19.2 << Field::<u8>(Variant(_4, 0), 2);
_33.0 = _17.1.fld2;
_11 = core::ptr::addr_of_mut!((*_11));
_17.0.0 = core::ptr::addr_of!(_11);
_5 = _6;
_32 = _18 * _18;
(*_11) = [(-5155_i16),(-19727_i16)];
(*_11) = [(-21834_i16),(-24755_i16)];
_30 = _23 & _23;
place!(Field::<u8>(Variant(_4, 0), 2)) = _19.1 as u8;
_7 = core::ptr::addr_of_mut!((*_7));
_18 = _32 * _32;
_24.1.1 = core::ptr::addr_of_mut!((*_11));
_17.1.fld3 = (_21,);
(*_11) = [4353_i16,9960_i16];
_17.1.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: _17.0.1,fld2: _24.0.2 };
(*_11) = [(-9418_i16),(-12973_i16)];
_17.1.fld3.0 = _30 | _30;
Goto(bb14)
}
bb20 = {
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2);
_15 = _19.2 & _17.0.2;
_19.1 = 9223372036854775807_isize as i8;
_19 = Move(_17.0);
_17.0.1 = _19.1 ^ Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.1 = -_17.0.1;
_14 = _10 | _17.1.fld0;
_7 = core::ptr::addr_of_mut!(_1);
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _17.1.fld5 as u16;
Goto(bb9)
}
bb21 = {
_17.1.fld3.0 = _21;
(*_9) = [(-14221_i16),(-26203_i16)];
_17.1.fld3 = (_23,);
_6 = _5;
_17.0.1 = Field::<i8>(Variant(_17.1.fld4, 0), 1) * Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.1.fld2 = Adt23::Variant1 { fld0: 58285_u16,fld1: 3035610856_u32,fld2: Field::<u64>(Variant(_17.1.fld4, 0), 0) };
_21 = _17.1.fld3.0;
_17.0.2 = _19.2;
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2) | Field::<u8>(Variant(_17.1.fld4, 0), 2);
(*_9) = [(-18503_i16),24440_i16];
_17.1.fld3 = (_23,);
_5 = _6;
(*_9) = [(-32002_i16),(-28441_i16)];
_3 = core::ptr::addr_of!(_24.0.1);
_16 = _17.1.fld1 & _12;
place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = 2836922026_u32 * 1673935245_u32;
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _6 as u16;
(*_3) = Move(_9);
_6 = _5;
_24.1.1 = core::ptr::addr_of_mut!(_2);
match _27 {
0 => bb9,
1 => bb2,
2 => bb3,
3 => bb4,
32 => bb11,
_ => bb7
}
}
bb22 = {
_8 = _17.1.fld5 - _17.1.fld5;
place!(Field::<u8>(Variant(_17.1.fld4, 0), 2)) = _24.0.2 | _24.0.2;
_4 = Move(_17.1.fld4);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
_17.0.0 = core::ptr::addr_of!(_11);
Goto(bb23)
}
bb23 = {
Goto(bb24)
}
bb24 = {
_4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: _17.0.1,fld2: _24.0.2 };
(*_36) = core::ptr::addr_of_mut!(_24.1.0);
(*_11) = _35;
_9 = core::ptr::addr_of_mut!((*_11));
(*_11) = _35;
_39 = [Field::<u64>(Variant(_4, 0), 0)];
place!(Field::<u16>(Variant(_33.0, 1), 0)) = Field::<u16>(Variant(_17.1.fld2, 1), 0);
_14 = !_17.1.fld0;
_24.2 = &mut (*_36);
(*_11) = [(-30496_i16),22053_i16];
_48 = _5;
(*_11) = [25583_i16,22252_i16];
match _27 {
0 => bb11,
1 => bb13,
2 => bb25,
3 => bb26,
4 => bb27,
32 => bb29,
_ => bb28
}
}
bb25 = {
Return()
}
bb26 = {
_11 = core::ptr::addr_of_mut!((*_9));
_17.0.2 = !_15;
match _17.1.fld3.0 {
0 => bb2,
1 => bb4,
2 => bb5,
276586454168101028423206082463250431036 => bb7,
_ => bb6
}
}
bb27 = {
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2);
_15 = _19.2 & _17.0.2;
_19.1 = 9223372036854775807_isize as i8;
_19 = Move(_17.0);
_17.0.1 = _19.1 ^ Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.1 = -_17.0.1;
_14 = _10 | _17.1.fld0;
_7 = core::ptr::addr_of_mut!(_1);
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _17.1.fld5 as u16;
Goto(bb9)
}
bb28 = {
(*_9) = [23966_i16,(-4905_i16)];
(*_9) = [29599_i16,24745_i16];
_17.1.fld3.0 = (-53398698239532570167078571501192776645_i128) << Field::<u64>(Variant(_17.1.fld2, 1), 2);
_5 = _6;
_10 = _17.1.fld0;
(*_9) = [(-5510_i16),(-16735_i16)];
_12 = _17.1.fld1 ^ _16;
_6 = _5;
_21 = _17.1.fld3.0 + _17.1.fld3.0;
Call(place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = core::intrinsics::transmute(_5), ReturnTo(bb8), UnwindUnreachable())
}
bb29 = {
_24.0.1 = core::ptr::addr_of_mut!((*_11));
_39 = [Field::<u64>(Variant(_4, 0), 0)];
(*_11) = [(-20577_i16),5340_i16];
(*_11) = [(-1106_i16),517_i16];
_50.1 = [_19.2,_17.0.2,_17.0.2,_15,_15,_17.0.2,_17.0.2,_15];
_17.1.fld5 = _8;
(*_11) = _35;
_8 = 1008275247_i32 as f32;
_44 = _6;
place!(Field::<u64>(Variant(_33.0, 1), 2)) = !Field::<u64>(Variant(_4, 0), 0);
_29 = -_26;
_12 = !_16;
_27 = (-109_isize);
(*_11) = [28772_i16,(-27992_i16)];
(*_11) = [(-26372_i16),(-4500_i16)];
(*_11) = [5414_i16,30988_i16];
_11 = core::ptr::addr_of_mut!((*_11));
_3 = core::ptr::addr_of!(_24.1.1);
_46 = Adt48::Variant2 { fld0: _17.1.fld5,fld1: _19.1 };
(*_3) = core::ptr::addr_of_mut!((*_11));
_48 = _44;
_50.2 = _17.1.fld2;
(*_11) = [(-11904_i16),31144_i16];
_17.1.fld4 = Move(_4);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.0 = Move(_17.0.0);
match _27 {
0 => bb10,
1 => bb7,
2 => bb13,
3 => bb22,
4 => bb30,
5 => bb31,
6 => bb32,
340282366920938463463374607431768211347 => bb34,
_ => bb33
}
}
bb30 = {
(*_9) = [23966_i16,(-4905_i16)];
(*_9) = [29599_i16,24745_i16];
_17.1.fld3.0 = (-53398698239532570167078571501192776645_i128) << Field::<u64>(Variant(_17.1.fld2, 1), 2);
_5 = _6;
_10 = _17.1.fld0;
(*_9) = [(-5510_i16),(-16735_i16)];
_12 = _17.1.fld1 ^ _16;
_6 = _5;
_21 = _17.1.fld3.0 + _17.1.fld3.0;
Call(place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = core::intrinsics::transmute(_5), ReturnTo(bb8), UnwindUnreachable())
}
bb31 = {
_24.1.2 = Field::<u8>(Variant(_17.1.fld4, 0), 2);
_15 = _19.2 & _17.0.2;
_19.1 = 9223372036854775807_isize as i8;
_19 = Move(_17.0);
_17.0.1 = _19.1 ^ Field::<i8>(Variant(_17.1.fld4, 0), 1);
_17.0.0 = core::ptr::addr_of!(_24.1.1);
_24.1.2 = !Field::<u8>(Variant(_17.1.fld4, 0), 2);
_17.0.0 = core::ptr::addr_of!(_24.0.1);
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) << Field::<u8>(Variant(_17.1.fld4, 0), 2);
_19.1 = -_17.0.1;
_14 = _10 | _17.1.fld0;
_7 = core::ptr::addr_of_mut!(_1);
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _17.1.fld5 as u16;
Goto(bb9)
}
bb32 = {
(*_9) = [23966_i16,(-4905_i16)];
(*_9) = [29599_i16,24745_i16];
_17.1.fld3.0 = (-53398698239532570167078571501192776645_i128) << Field::<u64>(Variant(_17.1.fld2, 1), 2);
_5 = _6;
_10 = _17.1.fld0;
(*_9) = [(-5510_i16),(-16735_i16)];
_12 = _17.1.fld1 ^ _16;
_6 = _5;
_21 = _17.1.fld3.0 + _17.1.fld3.0;
Call(place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = core::intrinsics::transmute(_5), ReturnTo(bb8), UnwindUnreachable())
}
bb33 = {
(*_11) = [29302_i16,(-16625_i16)];
(*_11) = [(-18764_i16),(-30069_i16)];
_3 = core::ptr::addr_of!(_9);
place!(Field::<u64>(Variant(_4, 0), 0)) = 11205108399822482650_u64 * 3121189759733292078_u64;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_3) = Move(_11);
(*_3) = core::ptr::addr_of_mut!(_2);
_2 = [(-31388_i16),(-770_i16)];
_15 = !4_usize;
(*_3) = core::ptr::addr_of_mut!((*_9));
_6 = _5;
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5719_i16,20570_i16];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [(-26742_i16),(-7321_i16)];
(*_9) = [(-30324_i16),19002_i16];
(*_9) = [21259_i16,(-25699_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_9) = [5036_i16,(-31490_i16)];
(*_3) = core::ptr::addr_of_mut!((*_9));
(*_3) = core::ptr::addr_of_mut!((*_9));
place!(Field::<u8>(Variant(_4, 0), 2)) = 4056_i16 as u8;
_17.1.fld5 = Field::<i8>(Variant(_4, 0), 1) as f32;
(*_3) = core::ptr::addr_of_mut!((*_9));
Call(_17.1 = fn13(Move((*_3)), Move(_3), Move(_1), (*_9)), ReturnTo(bb2), UnwindUnreachable())
}
bb34 = {
_10 = !_28;
_24.0.1 = core::ptr::addr_of_mut!((*_11));
_42 = _27 | _27;
_17.1.fld3.0 = _30;
_20 = -_18;
_5 = _44;
(*_11) = [(-32671_i16),18324_i16];
(*_11) = _35;
_50.3 = [_15,_15,_19.2,_19.2,_19.2];
_44 = _5;
_19 = (Move(_3), Field::<i8>(Variant(_17.1.fld4, 0), 1), _15);
_24.1.2 = _24.0.2 * _24.0.2;
_8 = Field::<f32>(Variant(_46, 2), 0) * Field::<f32>(Variant(_46, 2), 0);
Goto(bb35)
}
bb35 = {
_17.0.0 = Move(_19.0);
(*_11) = [(-14656_i16),(-20718_i16)];
(*_11) = [(-32173_i16),(-24019_i16)];
_17.1.fld5 = _8 * Field::<f32>(Variant(_46, 2), 0);
place!(Field::<i8>(Variant(_17.1.fld4, 0), 1)) = Field::<i8>(Variant(_46, 2), 1);
(*_11) = _35;
_15 = !_19.2;
(*_11) = [14155_i16,(-15616_i16)];
(*_11) = _35;
(*_11) = [25831_i16,23763_i16];
_39 = [Field::<u64>(Variant(_17.1.fld4, 0), 0)];
place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = Field::<u64>(Variant(_17.1.fld2, 1), 2) as u32;
_20 = _26;
(*_11) = [8280_i16,4637_i16];
_27 = _42 * _42;
_10 = _14;
_4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: _17.0.1,fld2: _24.1.2 };
_30 = _17.1.fld3.0 | _21;
_17.1.fld0 = _14 | _28;
Call(_17.1.fld6 = core::intrinsics::transmute(_15), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_17.1.fld5 = -Field::<f32>(Variant(_46, 2), 0);
_43 = [_48,_48];
_42 = _27;
_3 = core::ptr::addr_of!(_24.1.1);
_48 = _5;
_59 = _27;
(*_3) = core::ptr::addr_of_mut!((*_11));
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = Field::<u16>(Variant(_33.0, 1), 0);
place!(Field::<u16>(Variant(_50.2, 1), 0)) = Field::<u16>(Variant(_33.0, 1), 0) - Field::<u16>(Variant(_33.0, 1), 0);
(*_3) = Move(_9);
_17.1.fld5 = _34 as f32;
_17.1.fld5 = Field::<f32>(Variant(_46, 2), 0) + Field::<f32>(Variant(_46, 2), 0);
_60 = _27 as f64;
_60 = _18;
(*_3) = Move(_24.0.1);
_33.0 = Adt23::Variant0 { fld0: _28,fld1: _48,fld2: _59,fld3: _19.1,fld4: _15,fld5: Field::<u16>(Variant(_50.2, 1), 0) };
_39 = [Field::<u64>(Variant(_50.2, 1), 2)];
_39 = [Field::<u64>(Variant(_17.1.fld2, 1), 2)];
_34 = Field::<i8>(Variant(_17.1.fld4, 0), 1) as i64;
(*_11) = [(-12802_i16),5459_i16];
(*_11) = [(-22223_i16),(-5012_i16)];
_63 = Adt51::Variant1 { fld0: _50.3 };
Goto(bb37)
}
bb37 = {
(*_3) = core::ptr::addr_of_mut!(_2);
(*_11) = [(-26323_i16),25433_i16];
(*_3) = core::ptr::addr_of_mut!((*_11));
_24.3 = Move(_63);
_44 = Field::<char>(Variant(_33.0, 0), 1);
_19 = Move(_17.0);
place!(Field::<u16>(Variant(_33.0, 0), 5)) = _19.1 as u16;
Goto(bb38)
}
bb38 = {
_19.0 = Move(_3);
(*_11) = _35;
place!(Field::<u8>(Variant(_4, 0), 2)) = _24.1.2 >> _21;
_11 = Move(_24.1.1);
_22 = core::ptr::addr_of_mut!(_39);
_5 = Field::<char>(Variant(_33.0, 0), 1);
place!(Field::<u8>(Variant(_17.1.fld4, 0), 2)) = Field::<u8>(Variant(_4, 0), 2) * _24.1.2;
_3 = core::ptr::addr_of!(_11);
_12 = _16;
_11 = core::ptr::addr_of_mut!(_35);
_5 = _6;
place!(Field::<u32>(Variant(_50.2, 1), 1)) = Field::<u32>(Variant(_17.1.fld2, 1), 1) | Field::<u32>(Variant(_17.1.fld2, 1), 1);
Goto(bb39)
}
bb39 = {
(*_11) = [(-774_i16),10481_i16];
_24.0.1 = core::ptr::addr_of_mut!((*_11));
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_3) = core::ptr::addr_of_mut!((*_11));
_17.1.fld3.0 = _21 >> Field::<u32>(Variant(_17.1.fld2, 1), 1);
_45 = &mut _22;
(*_3) = core::ptr::addr_of_mut!((*_11));
_26 = _18;
_66 = &_39;
_55 = &(*_3);
_68 = _8 + _8;
(*_45) = core::ptr::addr_of_mut!((*_66));
(*_3) = core::ptr::addr_of_mut!((*_11));
_64 = &_39;
(*_11) = [26766_i16,(-25494_i16)];
_17.1.fld4 = Move(_4);
_69 = _68 - _17.1.fld5;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_11) = [29127_i16,20713_i16];
_17.1.fld1 = 1754501009_i32 as u128;
Goto(bb40)
}
bb40 = {
_17.0.2 = Field::<usize>(Variant(_33.0, 0), 4);
(*_3) = core::ptr::addr_of_mut!((*_11));
_9 = Move((*_3));
Goto(bb41)
}
bb41 = {
place!(Field::<u16>(Variant(_33.0, 0), 5)) = Field::<u16>(Variant(_50.2, 1), 0) ^ Field::<u16>(Variant(_17.1.fld2, 1), 0);
(*_3) = core::ptr::addr_of_mut!(_2);
(*_3) = core::ptr::addr_of_mut!((*_11));
_51 = &(*_64);
_50.3 = [_15,Field::<usize>(Variant(_33.0, 0), 4),_15,_17.0.2,_17.0.2];
(*_3) = core::ptr::addr_of_mut!((*_11));
_57 = _42;
_13 = &mut (*_45);
_59 = !_57;
_53 = &_24.3;
place!(Field::<i8>(Variant(_33.0, 0), 3)) = _12 as i8;
_73 = -Field::<i8>(Variant(_17.1.fld4, 0), 1);
(*_13) = core::ptr::addr_of_mut!((*_64));
Goto(bb42)
}
bb42 = {
place!(Field::<usize>(Variant(_33.0, 0), 4)) = _34 as usize;
_17.0 = (Move(_19.0), _73, _19.2);
_48 = _5;
place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = Field::<u32>(Variant(_50.2, 1), 1) & Field::<u32>(Variant(_50.2, 1), 1);
_61 = Field::<u16>(Variant(_33.0, 0), 5);
_17.1.fld5 = _69;
Goto(bb43)
}
bb43 = {
_4 = Move(_17.1.fld4);
_33 = (_17.1.fld2,);
_35 = (*_11);
(*_11) = [(-13357_i16),26162_i16];
place!(Field::<u8>(Variant(_4, 0), 2)) = _24.0.2 - _24.0.2;
_17.0.1 = Field::<u32>(Variant(_17.1.fld2, 1), 1) as i8;
_10 = !_28;
_68 = _23 as f32;
Goto(bb44)
}
bb44 = {
_74 = !_34;
(*_11) = [3131_i16,16585_i16];
_24.1.0 = core::ptr::addr_of_mut!(_83.0);
_50.0 = &_18;
_50.0 = &_29;
_24.1.0 = core::ptr::addr_of_mut!(_83.0);
_83.3 = Move(_4);
_81 = _17.1.fld0 == _17.1.fld0;
(*_11) = [(-13370_i16),(-18070_i16)];
_17.1.fld0 = !_14;
_83.0 = Field::<u32>(Variant(_50.2, 1), 1) as i32;
_77.0 = Adt23::Variant0 { fld0: _17.1.fld0,fld1: _44,fld2: _59,fld3: _17.0.1,fld4: _19.2,fld5: Field::<u16>(Variant(_50.2, 1), 0) };
_65 = -(-16852_i16);
_5 = _48;
_28 = Field::<bool>(Variant(_77.0, 0), 0);
(*_11) = [_65,_65];
Goto(bb45)
}
bb45 = {
_17.1.fld3 = (_23,);
_58 = core::ptr::addr_of_mut!(_83.0);
_82.1 = core::ptr::addr_of_mut!((*_58));
_17.1.fld5 = -_69;
_27 = -Field::<isize>(Variant(_77.0, 0), 2);
_56 = (*_58) as isize;
_63 = Adt51::Variant3 { fld0: _17.1.fld1,fld1: Move(_82.1) };
_11 = core::ptr::addr_of_mut!((*_11));
_17.1.fld5 = -_69;
_50.3 = Field::<[usize; 5]>(Variant((*_53), 1), 0);
_5 = _6;
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = _61 - Field::<u16>(Variant(_50.2, 1), 0);
(*_11) = [_65,_65];
_71 = !_16;
_84 = _44;
_47 = _56 << (*_58);
_87 = &_50.0;
_82.2 = &mut (*_13);
Goto(bb46)
}
bb46 = {
place!(Field::<u16>(Variant(_50.2, 1), 0)) = _65 as u16;
_38 = core::ptr::addr_of_mut!((*_58));
Goto(bb47)
}
bb47 = {
_82.1 = core::ptr::addr_of_mut!((*_58));
(*_38) = 1322883147_i32;
_17.1.fld1 = _16 - _16;
(*_58) = _47 as i32;
_42 = _17.0.2 as isize;
_85 = core::ptr::addr_of_mut!((*_64));
(*_58) = (-1689215693_i32) + 1630867561_i32;
(*_58) = 1184087866_i32;
_82.1 = core::ptr::addr_of_mut!((*_58));
(*_11) = [_65,_65];
_19 = (Move(_17.0.0), Field::<i8>(Variant(_77.0, 0), 3), _15);
_24.2 = Move(_36);
place!(Field::<usize>(Variant(_77.0, 0), 4)) = _15 ^ _15;
(*_58) = (-1432292046_i32) & 595240349_i32;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_58) = (-340662381_i32);
(*_3) = core::ptr::addr_of_mut!((*_11));
_12 = _71 << Field::<u32>(Variant(_17.1.fld2, 1), 1);
_50.2 = _77.0;
(*_58) = _30 as i32;
_58 = core::ptr::addr_of_mut!((*_58));
_25 = &mut _85;
_9 = core::ptr::addr_of_mut!((*_11));
(*_25) = core::ptr::addr_of_mut!((*_64));
Goto(bb48)
}
bb48 = {
(*_58) = (-1148187589_i32) ^ (-402870411_i32);
(*_9) = _35;
_17.1.fld3.0 = !_21;
_95 = [_30,_30,_17.1.fld3.0,_30];
(*_25) = core::ptr::addr_of_mut!((*_64));
(*_25) = core::ptr::addr_of_mut!((*_64));
_13 = &mut (*_25);
(*_58) = (-772194237_i32) * 1497345510_i32;
_25 = Move(_45);
_80 = [_24.1.2,Field::<u8>(Variant(_83.3, 0), 2)];
_99.0 = -_65;
(*_3) = core::ptr::addr_of_mut!((*_9));
place!(Field::<char>(Variant(_50.2, 0), 1)) = _44;
(*_9) = [_99.0,_99.0];
(*_13) = core::ptr::addr_of_mut!((*_64));
(*_9) = [_65,_65];
(*_3) = Move(_24.0.1);
(*_3) = core::ptr::addr_of_mut!((*_9));
_98 = _8;
_82.2 = &mut (*_13);
_68 = -_69;
(*_9) = _35;
Goto(bb49)
}
bb49 = {
_17.1.fld3.0 = _21 - _21;
_86 = _20;
_33 = _77;
_35 = [_65,_65];
_83.1 = -_17.1.fld5;
_97 = _47 & _47;
place!(Field::<i8>(Variant(_77.0, 0), 3)) = Field::<i8>(Variant(_33.0, 0), 3) + _19.1;
(*_9) = [_65,_99.0];
_56 = _97 | _47;
place!(Field::<usize>(Variant(_33.0, 0), 4)) = _65 as usize;
_82.1 = core::ptr::addr_of_mut!((*_58));
_104 = _17.1.fld5 * _98;
_14 = _17.1.fld0 ^ _28;
Goto(bb50)
}
bb50 = {
_44 = Field::<char>(Variant(_33.0, 0), 1);
_17.0.2 = _19.2 << _97;
_52 = core::ptr::addr_of_mut!(_67);
_66 = Move(_51);
(*_9) = _35;
_42 = _56 >> _21;
_97 = !_56;
(*_52) = _17.0.2 as i16;
_29 = (*_58) as f64;
_103 = [_12,_17.1.fld1];
_91 = _5;
_17.0.0 = core::ptr::addr_of!((*_3));
_106 = -_8;
place!(Field::<u16>(Variant(_77.0, 0), 5)) = Field::<u16>(Variant(_17.1.fld2, 1), 0) - Field::<u16>(Variant(_17.1.fld2, 1), 0);
_42 = _56 | _56;
(*_9) = [_67,(*_52)];
_33 = (_50.2,);
_14 = !_28;
_41 = core::ptr::addr_of!(_92);
place!(Field::<u128>(Variant(_63, 3), 0)) = _16 - _12;
_14 = Field::<i8>(Variant(_50.2, 0), 3) > _17.0.1;
_58 = Move(Field::<*mut i32>(Variant(_63, 3), 1));
place!(Field::<u128>(Variant(_63, 3), 0)) = _12 >> (*_52);
(*_52) = _65 << Field::<u8>(Variant(_83.3, 0), 2);
_98 = _17.1.fld5;
place!(Field::<u16>(Variant(_50.2, 0), 5)) = _34 as u16;
(*_41) = [_17.0.2,_17.0.2];
Goto(bb51)
}
bb51 = {
(*_52) = _65;
place!(Field::<u16>(Variant(_77.0, 0), 5)) = Field::<u16>(Variant(_17.1.fld2, 1), 0) * _61;
_57 = _17.0.1 as isize;
_17.1.fld6 = _60 * _20;
(*_3) = Move(_9);
_88 = core::ptr::addr_of_mut!(_35);
_101 = _71;
_82 = (_74, Move(_58), Move(_13));
_103 = [Field::<u128>(Variant(_63, 3), 0),_12];
_84 = Field::<char>(Variant(_50.2, 0), 1);
place!(Field::<u64>(Variant(_83.3, 0), 0)) = !Field::<u64>(Variant(_17.1.fld2, 1), 2);
_19.0 = core::ptr::addr_of!((*_3));
Goto(bb52)
}
bb52 = {
place!(Field::<bool>(Variant(_50.2, 0), 0)) = Field::<bool>(Variant(_77.0, 0), 0);
(*_3) = core::ptr::addr_of_mut!((*_88));
_11 = core::ptr::addr_of_mut!((*_88));
_63 = Move(_24.3);
_107 = &(*_64);
_73 = !Field::<i8>(Variant(_33.0, 0), 3);
_104 = -_98;
place!(Field::<u64>(Variant(_83.3, 0), 0)) = _17.1.fld3.0 as u64;
_62 = core::ptr::addr_of!((*_41));
(*_52) = _5 as i16;
Goto(bb53)
}
bb53 = {
_80 = [_24.1.2,_24.1.2];
(*_3) = core::ptr::addr_of_mut!((*_11));
place!(Field::<isize>(Variant(_33.0, 0), 2)) = _57;
(*_3) = core::ptr::addr_of_mut!((*_88));
_110.0.0 = -_83.0;
(*_41) = [_17.0.2,_17.0.2];
_24.1 = (Move(_82.1), Move((*_3)), Field::<u8>(Variant(_83.3, 0), 2));
_24.1.2 = _83.0 as u8;
_39 = [Field::<u64>(Variant(_83.3, 0), 0)];
_117 = core::ptr::addr_of_mut!((*_88));
Goto(bb54)
}
bb54 = {
_79 = ((*_52),);
_109 = _82.0 as u128;
place!(Field::<[usize; 5]>(Variant(_63, 1), 0)) = [_17.0.2,_17.0.2,_17.0.2,_17.0.2,_17.0.2];
place!(Field::<u16>(Variant(_17.1.fld2, 1), 0)) = !Field::<u16>(Variant(_33.0, 0), 5);
(*_52) = _79.0 * _99.0;
_4 = Move(_83.3);
(*_117) = [(*_52),(*_52)];
(*_3) = core::ptr::addr_of_mut!((*_117));
_46 = Adt48::Variant1 { fld0: Move(_24.1.0),fld1: Move(_24.1),fld2: _19.1 };
_35 = [_99.0,(*_52)];
_93 = &(*_87);
(*_88) = _2;
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u8>(Variant(_4, 0), 2) as u64;
_24.1.1 = core::ptr::addr_of_mut!((*_88));
_19.0 = core::ptr::addr_of!((*_3));
_50.0 = &_26;
(*_3) = core::ptr::addr_of_mut!((*_88));
(*_11) = [_79.0,(*_52)];
_24.0.1 = Move((*_3));
_93 = Move(_87);
_24.0.1 = core::ptr::addr_of_mut!((*_88));
place!(Field::<isize>(Variant(_33.0, 0), 2)) = _86 as isize;
Goto(bb55)
}
bb55 = {
_24.1.0 = core::ptr::addr_of_mut!(_110.0.0);
(*_3) = core::ptr::addr_of_mut!((*_88));
(*_3) = Move(_88);
_83.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: _19.1,fld2: Field::<u8>(Variant(_4, 0), 2) };
_50.1 = [_17.0.2,_17.0.2,_17.0.2,_17.0.2,_17.0.2,_17.0.2,_17.0.2,_19.2];
_68 = _98 * _69;
(*_41) = [Field::<usize>(Variant(_50.2, 0), 4),_17.0.2];
_113 = _28 != Field::<bool>(Variant(_77.0, 0), 0);
(*_3) = core::ptr::addr_of_mut!(_35);
(*_11) = [(*_52),(*_52)];
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_11) = [(*_52),(*_52)];
(*_11) = _2;
(*_41) = [Field::<usize>(Variant(_33.0, 0), 4),_17.0.2];
_17.1.fld3 = (_21,);
_17.1.fld4 = Move(_83.2);
(*_52) = Field::<u64>(Variant(_17.1.fld4, 0), 0) as i16;
_30 = _21;
(*_41) = [_17.0.2,Field::<usize>(Variant(_50.2, 0), 4)];
_91 = _84;
_60 = _32 - _17.1.fld6;
_80 = [Field::<u8>(Variant(_4, 0), 2),Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2];
Goto(bb56)
}
bb56 = {
_51 = &_39;
(*_11) = [(*_52),(*_52)];
_38 = Move(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).0);
place!(Field::<[usize; 5]>(Variant(_63, 1), 0)) = _50.3;
_53 = &_63;
_17.1.fld6 = _60 - _60;
_72 = core::ptr::addr_of!(_103);
_18 = _20 * _60;
_66 = &(*_51);
_52 = core::ptr::addr_of_mut!((*_52));
_121 = Field::<u8>(Variant(_17.1.fld4, 0), 2) as usize;
place!(Field::<u64>(Variant(_17.1.fld2, 1), 2)) = Field::<u64>(Variant(_17.1.fld4, 0), 0) >> Field::<u32>(Variant(_17.1.fld2, 1), 1);
place!(Field::<char>(Variant(_33.0, 0), 1)) = _6;
_12 = _71 | _16;
_129 = !_47;
_17.1.fld3 = (_21,);
(*_72) = [_17.1.fld1,_12];
_121 = _17.0.2 << Field::<i8>(Variant(_77.0, 0), 3);
place!(Field::<usize>(Variant(_77.0, 0), 4)) = !_121;
_20 = _18;
_17.1.fld1 = !_101;
_122 = Field::<u64>(Variant(_4, 0), 0) as usize;
_19 = Move(_17.0);
_9 = Move((*_3));
place!(Field::<u64>(Variant(_17.1.fld4, 0), 0)) = Field::<u64>(Variant(_4, 0), 0) * Field::<u64>(Variant(_17.1.fld2, 1), 2);
(*_52) = _19.2 as i16;
Goto(bb57)
}
bb57 = {
_32 = _20;
(*_3) = core::ptr::addr_of_mut!(_2);
place!(Field::<u8>(Variant(_17.1.fld4, 0), 2)) = !Field::<u8>(Variant(_4, 0), 2);
(*_52) = -_99.0;
(*_52) = _99.0;
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_11) = [(*_52),_67];
(*_72) = [_12,_16];
_100 = _104 * _17.1.fld5;
_19.0 = core::ptr::addr_of!((*_3));
_17.0.0 = core::ptr::addr_of!((*_3));
_135 = &place!(Field::<u32>(Variant(_17.1.fld2, 1), 1));
_77.0 = Adt23::Variant1 { fld0: Field::<u16>(Variant(_33.0, 0), 5),fld1: (*_135),fld2: Field::<u64>(Variant(_17.1.fld4, 0), 0) };
_16 = _12 & _12;
_44 = Field::<char>(Variant(_50.2, 0), 1);
_17.1.fld6 = _20 * _20;
(*_41) = [_122,_121];
_76 = ((*_52),);
_62 = core::ptr::addr_of!((*_41));
Goto(bb58)
}
bb58 = {
_15 = !Field::<usize>(Variant(_33.0, 0), 4);
_5 = _91;
(*_72) = [_12,_17.1.fld1];
(*_72) = [_71,_12];
(*_62) = [_121,_19.2];
_1 = core::ptr::addr_of_mut!(_83.0);
place!(Field::<u16>(Variant(_50.2, 0), 5)) = Field::<u16>(Variant(_17.1.fld2, 1), 0) | Field::<u16>(Variant(_17.1.fld2, 1), 0);
Goto(bb59)
}
bb59 = {
_24.1.2 = Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2 | Field::<u8>(Variant(_4, 0), 2);
(*_72) = [_16,_16];
_24.3 = Move(_63);
Goto(bb60)
}
bb60 = {
Goto(bb61)
}
bb61 = {
(*_11) = [(*_52),(*_52)];
_102 = _57 << _121;
_87 = &_50.0;
(*_52) = _99.0;
_111 = _98 as usize;
(*_1) = _81 as i32;
(*_3) = core::ptr::addr_of_mut!(_2);
_99.0 = (*_52) * (*_52);
(*_41) = [_121,_111];
_81 = Field::<i8>(Variant(_17.1.fld4, 0), 1) <= Field::<i8>(Variant(_46, 1), 2);
(*_72) = [_101,_16];
Goto(bb62)
}
bb62 = {
place!(Field::<bool>(Variant(_33.0, 0), 0)) = !_14;
(*_3) = Move(_117);
_63 = Move(_24.3);
_24.0 = (Move(Field::<*mut i32>(Variant(_46, 1), 0)), Move(_9), Field::<u8>(Variant(_17.1.fld4, 0), 2));
_78 = &mut _24.1;
_26 = _16 as f64;
(*_78).0 = core::ptr::addr_of_mut!((*_1));
place!(Field::<i8>(Variant(_50.2, 0), 3)) = _73 >> (*_135);
_122 = _121 + _111;
(*_72) = [_16,_101];
_142 = _44;
Goto(bb63)
}
bb63 = {
_67 = _76.0 + _99.0;
_106 = _68 - _17.1.fld5;
(*_1) = _110.0.0 * _110.0.0;
(*_78).0 = core::ptr::addr_of_mut!(_110.0.0);
(*_78).1 = core::ptr::addr_of_mut!(_35);
(*_78).2 = !Field::<u8>(Variant(_4, 0), 2);
(*_1) = _110.0.0;
(*_72) = [_71,_71];
_50.3 = Field::<[usize; 5]>(Variant(_63, 1), 0);
(*_52) = _99.0 >> (*_78).2;
_88 = core::ptr::addr_of_mut!(_35);
_17.0.0 = core::ptr::addr_of!((*_78).1);
_94 = &_95;
_51 = Move(_107);
(*_78) = (Move(_38), Move((*_3)), Field::<u8>(Variant(_4, 0), 2));
place!(Field::<usize>(Variant(_33.0, 0), 4)) = (*_52) as usize;
(*_78) = (Move(_1), Move(_88), Field::<u8>(Variant(_17.1.fld4, 0), 2));
_146.0.0 = _83.0 << (*_52);
_153.3 = Move(_63);
(*_78).1 = Move(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).1);
(*_3) = core::ptr::addr_of_mut!(_35);
(*_3) = core::ptr::addr_of_mut!((*_11));
Call(_19.2 = core::intrinsics::transmute(_122), ReturnTo(bb64), UnwindUnreachable())
}
bb64 = {
(*_78).2 = !Field::<u8>(Variant(_4, 0), 2);
_137 = _16 as i128;
_4 = Move(_17.1.fld4);
(*_41) = [_122,_19.2];
(*_3) = Move((*_78).1);
_93 = &(*_87);
_153.0.2 = (*_78).2;
(*_41) = [_19.2,_121];
(*_41) = [_122,_122];
(*_41) = [_122,Field::<usize>(Variant(_33.0, 0), 4)];
place!(Field::<u32>(Variant(_77.0, 1), 1)) = (*_135) & (*_135);
_52 = core::ptr::addr_of_mut!(_67);
(*_3) = core::ptr::addr_of_mut!(_35);
_17.1.fld3.0 = (*_78).2 as i128;
Goto(bb65)
}
bb65 = {
_102 = -_97;
place!(Field::<*mut i32>(Variant(_46, 1), 0)) = core::ptr::addr_of_mut!(_110.0.0);
_113 = !_28;
place!(Field::<u64>(Variant(_77.0, 1), 2)) = Field::<u64>(Variant(_17.1.fld2, 1), 2);
(*_11) = [(*_52),(*_52)];
place!(Field::<u16>(Variant(_50.2, 0), 5)) = _61 << _67;
Goto(bb66)
}
bb66 = {
(*_78).2 = !Field::<u8>(Variant(_4, 0), 2);
(*_52) = (*_78).2 as i16;
_50.2 = Adt23::Variant0 { fld0: _14,fld1: _6,fld2: _56,fld3: _73,fld4: _19.2,fld5: Field::<u16>(Variant(_33.0, 0), 5) };
_64 = Move(_66);
_76.0 = (*_52) & (*_52);
_84 = _5;
_83.3 = Move(_4);
_151 = &mut _43;
(*_52) = _76.0 << (*_135);
_72 = core::ptr::addr_of!((*_72));
Goto(bb67)
}
bb67 = {
_110.0 = (_146.0.0, _69, Move(_83.3), Move(_83.3));
(*_11) = _2;
(*_41) = [_122,Field::<usize>(Variant(_50.2, 0), 4)];
(*_78).0 = core::ptr::addr_of_mut!(_165.0);
_69 = _100 - _83.1;
_17.0.1 = _18 as i8;
(*_11) = _2;
_70 = _6;
_63 = Adt51::Variant3 { fld0: _101,fld1: Move(Field::<*mut i32>(Variant(_46, 1), 0)) };
(*_41) = [_122,_121];
(*_41) = [_121,_122];
_77.0 = Adt23::Variant0 { fld0: _28,fld1: _5,fld2: _56,fld3: Field::<i8>(Variant(_46, 1), 2),fld4: _111,fld5: _61 };
_99 = _76;
_4 = Move(_110.0.2);
_153.0 = (Move(Field::<*mut i32>(Variant(_63, 3), 1)), Move((*_3)), (*_78).2);
(*_72) = [_16,_71];
(*_3) = core::ptr::addr_of_mut!(_35);
_39 = [Field::<u64>(Variant(_4, 0), 0)];
_110.0.2 = Move(_110.0.3);
(*_78).2 = Field::<u8>(Variant(_4, 0), 2) << (*_52);
_58 = core::ptr::addr_of_mut!(_83.0);
Goto(bb68)
}
bb68 = {
_57 = Field::<isize>(Variant(_50.2, 0), 2);
(*_72) = [_16,_109];
_82.0 = _146.0.0 as i64;
_82.1 = core::ptr::addr_of_mut!((*_58));
(*_78).2 = !Field::<u8>(Variant(_4, 0), 2);
(*_11) = [(*_52),(*_52)];
_165 = (_146.0.0, _110.0.1, Move(_4), Move(_4));
(*_3) = core::ptr::addr_of_mut!((*_11));
(*_72) = [_16,_17.1.fld1];
(*_58) = -_110.0.0;
_61 = _121 as u16;
place!(Field::<i8>(Variant(_77.0, 0), 3)) = _86 as i8;
_119 = _68;
_66 = &_39;
_6 = Field::<char>(Variant(_77.0, 0), 1);
(*_78).0 = core::ptr::addr_of_mut!((*_58));
place!(Field::<u8>(Variant(_110.0.2, 0), 2)) = !(*_78).2;
Goto(bb69)
}
bb69 = {
_56 = _69 as isize;
_110.0 = ((*_58), _104, Move(_165.3), Move(_165.2));
_113 = _81;
place!(Field::<isize>(Variant(_77.0, 0), 2)) = _56 | _56;
(*_11) = [(*_52),(*_52)];
place!(Field::<i8>(Variant(_77.0, 0), 3)) = !_73;
_185 = [(*_78).2,Field::<u8>(Variant(_110.0.2, 0), 2),(*_78).2,(*_78).2,(*_78).2,(*_78).2];
_61 = Field::<u16>(Variant(_50.2, 0), 5);
_182 = (Move(_50.0), _50.1, _50.2, _50.3);
_26 = -_32;
_132 = Field::<u16>(Variant(_77.0, 0), 5) as isize;
place!(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1)).2 = Field::<u8>(Variant(_110.0.3, 0), 2) ^ (*_78).2;
place!(Field::<u16>(Variant(_182.2, 0), 5)) = Field::<u16>(Variant(_77.0, 0), 5);
(*_72) = [_16,_71];
_104 = -_69;
_67 = _100 as i16;
(*_41) = [_111,_19.2];
_162 = _48;
place!(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1)).0 = Move((*_78).0);
(*_52) = _104 as i16;
(*_78).2 = !Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2;
_69 = _83.1 + _83.1;
Goto(bb70)
}
bb70 = {
(*_11) = _2;
_153.1.1 = core::ptr::addr_of_mut!((*_11));
_83 = Move(_110.0);
(*_3) = core::ptr::addr_of_mut!(_2);
(*_58) = _146.0.0 + _165.0;
(*_52) = _99.0;
(*_78).2 = _153.0.2 * Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2;
Goto(bb71)
}
bb71 = {
_133 = !_56;
_194 = _81;
place!(Field::<u64>(Variant(_83.2, 0), 0)) = _102 as u64;
(*_41) = [Field::<usize>(Variant(_182.2, 0), 4),Field::<usize>(Variant(_50.2, 0), 4)];
place!(Field::<isize>(Variant(_33.0, 0), 2)) = Field::<isize>(Variant(_77.0, 0), 2);
(*_41) = [Field::<usize>(Variant(_182.2, 0), 4),_111];
Goto(bb72)
}
bb72 = {
(*_3) = core::ptr::addr_of_mut!((*_11));
_33 = (_50.2,);
_110.0.0 = (*_58) >> (*_78).2;
_110.0.1 = _104;
_76 = ((*_52),);
_109 = _16 ^ _16;
_110.0.0 = (*_58) ^ _83.0;
_187 = Move(_72);
_139 = core::ptr::addr_of_mut!((*_66));
(*_58) = Field::<u16>(Variant(_182.2, 0), 5) as i32;
(*_58) = Field::<isize>(Variant(_50.2, 0), 2) as i32;
(*_58) = Field::<i8>(Variant(_83.3, 0), 1) as i32;
(*_58) = _110.0.0 & _110.0.0;
_72 = core::ptr::addr_of!(_103);
_154 = _48;
_82.0 = _74 | _74;
(*_11) = _35;
(*_11) = [(*_52),(*_52)];
Call((*_52) = core::intrinsics::bswap(_76.0), ReturnTo(bb73), UnwindUnreachable())
}
bb73 = {
(*_41) = [Field::<usize>(Variant(_77.0, 0), 4),Field::<usize>(Variant(_50.2, 0), 4)];
_171 = _42 >> (*_58);
_173 = Field::<bool>(Variant(_77.0, 0), 0) as isize;
_180 = _17.1.fld6 + _18;
(*_52) = _76.0;
(*_11) = _35;
_146.0.0 = (*_58) * (*_58);
(*_151) = [_142,_44];
_128 = _60 * _20;
_195 = Field::<char>(Variant(_33.0, 0), 1);
_147 = &_153.3;
place!(Field::<bool>(Variant(_33.0, 0), 0)) = _28;
_146.0.0 = Field::<usize>(Variant(_33.0, 0), 4) as i32;
_127.1 = core::ptr::addr_of!((*_94));
(*_78).2 = !Field::<u8>(Variant(_83.2, 0), 2);
(*_11) = _35;
_9 = core::ptr::addr_of_mut!((*_11));
_67 = _30 as i16;
_127.1 = core::ptr::addr_of!((*_94));
(*_151) = [Field::<char>(Variant(_33.0, 0), 1),_6];
_149 = core::ptr::addr_of_mut!(_67);
_164 = _129;
(*_58) = Field::<u16>(Variant(_77.0, 0), 5) as i32;
(*_78).2 = Field::<u8>(Variant(_83.3, 0), 2) | Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2;
Goto(bb74)
}
bb74 = {
_153.1.0 = core::ptr::addr_of_mut!((*_58));
place!(Field::<usize>(Variant(_33.0, 0), 4)) = _121;
_4 = Move(_83.3);
_50.0 = &_20;
(*_41) = [_121,_19.2];
_110.0.3 = Move(_83.2);
_125 = (*_52) | (*_52);
(*_11) = [(*_149),_67];
_167.1 = _69 - _83.1;
(*_3) = core::ptr::addr_of_mut!((*_11));
_17.1.fld1 = _109 + _109;
_45 = &mut _139;
_13 = &mut (*_45);
_142 = _91;
(*_3) = core::ptr::addr_of_mut!((*_11));
_116 = core::ptr::addr_of!((*_94));
_158 = [Field::<usize>(Variant(_50.2, 0), 4),_121,Field::<usize>(Variant(_182.2, 0), 4),Field::<usize>(Variant(_77.0, 0), 4),_111];
_129 = _171;
_127 = (Move(_116), Move(_116), Move(_41));
_76.0 = !_99.0;
(*_58) = Field::<u64>(Variant(_17.1.fld2, 1), 2) as i32;
_8 = _119 + _69;
(*_52) = _125;
_109 = !_101;
(*_151) = [_162,_5];
(*_58) = _146.0.0;
_110.0.3 = Move(_4);
(*_151) = [_162,_44];
Goto(bb75)
}
bb75 = {
(*_13) = core::ptr::addr_of_mut!((*_66));
(*_52) = -_99.0;
_115 = &(*_147);
(*_52) = _76.0 >> (*_78).2;
_113 = _17.1.fld0;
_185 = [(*_78).2,(*_78).2,(*_78).2,(*_78).2,(*_78).2,(*_78).2];
_74 = _30 as i64;
(*_58) = -_146.0.0;
_181 = !_194;
(*_13) = core::ptr::addr_of_mut!((*_66));
_1 = core::ptr::addr_of_mut!((*_58));
place!(Field::<u128>(Variant(_63, 3), 0)) = _71 | _101;
_5 = Field::<char>(Variant(_182.2, 0), 1);
(*_52) = _99.0;
_178 = -Field::<isize>(Variant(_50.2, 0), 2);
_44 = _84;
place!(Field::<char>(Variant(_33.0, 0), 1)) = _48;
(*_11) = _35;
_50.1 = [Field::<usize>(Variant(_50.2, 0), 4),Field::<usize>(Variant(_33.0, 0), 4),_19.2,Field::<usize>(Variant(_33.0, 0), 4),Field::<usize>(Variant(_77.0, 0), 4),_111,Field::<usize>(Variant(_182.2, 0), 4),Field::<usize>(Variant(_77.0, 0), 4)];
Goto(bb76)
}
bb76 = {
(*_78).2 = Field::<u8>(Variant(_110.0.3, 0), 2) << _74;
_86 = _180 * _17.1.fld6;
_72 = core::ptr::addr_of!((*_72));
_167.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_110.0.3, 0), 0),fld1: _17.0.1,fld2: (*_78).2 };
(*_52) = -_125;
place!(Field::<*mut i32>(Variant(_46, 1), 0)) = core::ptr::addr_of_mut!((*_1));
_83.0 = !_110.0.0;
(*_13) = core::ptr::addr_of_mut!((*_66));
_98 = _178 as f32;
_83.3 = Move(_167.2);
(*_151) = [_48,_154];
(*_13) = core::ptr::addr_of_mut!((*_66));
(*_3) = core::ptr::addr_of_mut!((*_11));
_167 = ((*_58), _165.1, Move(_110.0.3), Move(_110.0.3));
(*_151) = [Field::<char>(Variant(_77.0, 0), 1),_44];
place!(Field::<usize>(Variant(_33.0, 0), 4)) = !Field::<usize>(Variant(_50.2, 0), 4);
_207 = core::ptr::addr_of!((*_72));
_153.1 = (Move(_58), Move((*_3)), (*_78).2);
_17.0.1 = _61 as i8;
_19.0 = core::ptr::addr_of!((*_3));
Goto(bb77)
}
bb77 = {
(*_13) = core::ptr::addr_of_mut!((*_66));
_167.2 = Move(_83.3);
_64 = &(*_66);
place!(Field::<i8>(Variant(_50.2, 0), 3)) = !_73;
_202.1 = Move(_153.1.0);
(*_3) = core::ptr::addr_of_mut!(_2);
_182.2 = _33.0;
_190 = _17.1.fld1 < _101;
_117 = core::ptr::addr_of_mut!(_2);
(*_78).2 = Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2 + _153.1.2;
(*_11) = [(*_52),(*_52)];
_92 = [_121,Field::<usize>(Variant(_77.0, 0), 4)];
(*_13) = core::ptr::addr_of_mut!((*_66));
_106 = -_104;
(*_72) = [_16,_17.1.fld1];
(*_1) = _146.0.0;
_111 = _21 as usize;
(*_13) = core::ptr::addr_of_mut!((*_64));
_80 = [(*_78).2,Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2];
(*_13) = core::ptr::addr_of_mut!((*_64));
Goto(bb78)
}
bb78 = {
(*_3) = Move(_9);
_17.0 = Move(_19);
place!(Field::<char>(Variant(_77.0, 0), 1)) = Field::<char>(Variant(_182.2, 0), 1);
_161 = (*_52) as f64;
_75 = &mut _153.0;
_171 = Field::<isize>(Variant(_33.0, 0), 2) >> (*_78).2;
_182 = (Move(_50.0), _50.1, _33.0, Field::<[usize; 5]>(Variant((*_115), 1), 0));
Goto(bb79)
}
bb79 = {
(*_52) = _125 >> _47;
(*_78).2 = Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1).2;
(*_151) = [_5,_5];
(*_52) = _125 - _76.0;
_107 = &(*_66);
(*_52) = _99.0 * _125;
_29 = _20;
_83.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: Field::<i8>(Variant(_167.2, 0), 1),fld2: (*_78).2 };
(*_1) = _146.0.0;
_203.1 = _17.1.fld1 << (*_75).2;
place!(Field::<u16>(Variant(_50.2, 0), 5)) = Field::<u16>(Variant(_182.2, 0), 5);
Goto(bb80)
}
bb80 = {
(*_72) = [_203.1,_16];
_113 = !_181;
_143 = core::ptr::addr_of!((*_94));
_127.0 = core::ptr::addr_of!((*_143));
_96 = Move(_55);
Goto(bb81)
}
bb81 = {
(*_52) = _76.0 << (*_1);
(*_72) = [_17.1.fld1,_17.1.fld1];
place!(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1)).0 = core::ptr::addr_of_mut!((*_1));
_62 = core::ptr::addr_of!(_92);
(*_75).0 = Move(Field::<*mut i32>(Variant(_46, 1), 0));
(*_62) = [_121,_17.0.2];
_186 = _121 as u32;
_1 = core::ptr::addr_of_mut!(_110.0.0);
place!(Field::<char>(Variant(_182.2, 0), 1)) = Field::<char>(Variant(_33.0, 0), 1);
(*_72) = [Field::<u128>(Variant(_63, 3), 0),_12];
_145 = _42;
_150 = _98 * _104;
_33.0 = _50.2;
_88 = core::ptr::addr_of_mut!(_2);
_47 = (*_75).2 as isize;
(*_62) = [Field::<usize>(Variant(_50.2, 0), 4),Field::<usize>(Variant(_77.0, 0), 4)];
_31 = &mut _75;
_13 = Move(_45);
(*_52) = _99.0;
place!(Field::<u32>(Variant(_17.1.fld2, 1), 1)) = _74 as u32;
(*_52) = !_99.0;
_35 = [(*_52),(*_52)];
place!(Field::<u64>(Variant(_167.3, 0), 0)) = _48 as u64;
_17.1.fld3.0 = _74 as i128;
Goto(bb82)
}
bb82 = {
_17.1.fld1 = _203.1 - _203.1;
_134 = Field::<char>(Variant(_77.0, 0), 1);
_212 = &mut (*_151);
_102 = -Field::<isize>(Variant(_77.0, 0), 2);
(*_72) = [_203.1,_71];
place!(Field::<u8>(Variant(_83.3, 0), 2)) = !(*_78).2;
_83.2 = Move(_167.2);
_44 = _70;
_176 = !_194;
(*_72) = [_12,Field::<u128>(Variant(_63, 3), 0)];
_73 = !_17.0.1;
_166 = _77;
_165.2 = Move(_83.2);
(*_78).2 = Field::<u8>(Variant(_83.3, 0), 2);
place!(Field::<isize>(Variant(_50.2, 0), 2)) = _164;
place!(Field::<usize>(Variant(_182.2, 0), 4)) = _17.0.2 * _121;
_81 = _113;
_44 = _134;
place!(Field::<usize>(Variant(_166.0, 0), 4)) = Field::<usize>(Variant(_182.2, 0), 4) * Field::<usize>(Variant(_33.0, 0), 4);
_196 = !(*_78).2;
(*_1) = -_83.0;
Goto(bb83)
}
bb83 = {
_17.1.fld4 = Move(_165.2);
(*_1) = _167.0 & _146.0.0;
(*_3) = Move(_88);
_44 = _5;
Goto(bb84)
}
bb84 = {
_209 = _142;
(*_212) = [_48,_162];
_146.0 = ((*_1), _106, Move(_17.1.fld4), Move(_17.1.fld4));
(*_52) = _17.1.fld0 as i16;
place!(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1)).2 = (*_78).2 * (*_78).2;
place!(Field::<bool>(Variant(_182.2, 0), 0)) = _113;
_114 = !_74;
(*_3) = core::ptr::addr_of_mut!(_2);
place!(Field::<bool>(Variant(_77.0, 0), 0)) = !_28;
_50.3 = [Field::<usize>(Variant(_77.0, 0), 4),Field::<usize>(Variant(_50.2, 0), 4),_122,Field::<usize>(Variant(_166.0, 0), 4),_121];
_191 = &(*_147);
Goto(bb85)
}
bb85 = {
_156 = Field::<u64>(Variant(_83.3, 0), 0) << (*_1);
(*_11) = [(*_52),(*_52)];
(*_1) = -_165.0;
(*_62) = [Field::<usize>(Variant(_77.0, 0), 4),Field::<usize>(Variant(_182.2, 0), 4)];
_81 = Field::<bool>(Variant(_33.0, 0), 0) & _113;
_12 = !Field::<u128>(Variant(_63, 3), 0);
_222 = _164;
_84 = _209;
(*_212) = [Field::<char>(Variant(_182.2, 0), 1),Field::<char>(Variant(_182.2, 0), 1)];
_27 = _129 - Field::<isize>(Variant(_33.0, 0), 2);
_32 = Field::<i8>(Variant(_33.0, 0), 3) as f64;
place!(Field::<i8>(Variant(_182.2, 0), 3)) = -Field::<i8>(Variant(_50.2, 0), 3);
_155 = core::ptr::addr_of!((*_143));
place!(Field::<(*mut i32, *mut [i16; 2], u8)>(Variant(_46, 1), 1)) = (Move(_202.1), Move((*_3)), (*_78).2);
_203.1 = _125 as u128;
_214 = _119 + _98;
(*_1) = _14 as i32;
place!(Field::<*mut i32>(Variant(_46, 1), 0)) = core::ptr::addr_of_mut!(_167.0);
Call(_82.0 = core::intrinsics::transmute((*_64)), ReturnTo(bb86), UnwindUnreachable())
}
bb86 = {
_46 = Adt48::Variant2 { fld0: _165.1,fld1: Field::<i8>(Variant(_146.0.2, 0), 1) };
place!(Field::<bool>(Variant(_182.2, 0), 0)) = _196 < (*_78).2;
(*_72) = [_203.1,_203.1];
_167 = ((*_1), _165.1, Move(_146.0.2), Move(_146.0.3));
_40 = &mut _167;
(*_212) = [Field::<char>(Variant(_182.2, 0), 1),_91];
_79.0 = _20 as i16;
(*_40) = ((*_1), _69, Move(_83.3), Move(_83.3));
(*_40).3 = Move((*_40).2);
_230.1 = ((*_40).0, _68, Move((*_40).3), Move((*_40).3));
_234 = (*_40).1 + (*_40).1;
_5 = _134;
(*_40).1 = _17.1.fld3.0 as f32;
_165.3 = Adt18::Variant0 { fld0: _156,fld1: Field::<i8>(Variant(_182.2, 0), 3),fld2: (*_78).2 };
(*_3) = core::ptr::addr_of_mut!(_2);
_64 = Move(_107);
_83.2 = Move(_165.3);
_98 = Field::<usize>(Variant(_77.0, 0), 4) as f32;
_228 = -_100;
_190 = (*_52) < (*_52);
(*_78).2 = !Field::<u8>(Variant(_230.1.3, 0), 2);
_141 = core::ptr::addr_of_mut!((*_11));
_237.0 = (Move(_3), Field::<i8>(Variant(_33.0, 0), 3), _122);
_174 = (*_72);
Goto(bb87)
}
bb87 = {
(*_62) = [Field::<usize>(Variant(_50.2, 0), 4),Field::<usize>(Variant(_166.0, 0), 4)];
_238 = !Field::<u64>(Variant(_83.2, 0), 0);
(*_62) = [_17.0.2,_15];
_39 = [Field::<u64>(Variant(_83.2, 0), 0)];
place!(Field::<u8>(Variant(_83.2, 0), 2)) = (*_78).2 * (*_78).2;
_194 = !_10;
(*_78).2 = Field::<u8>(Variant(_230.1.3, 0), 2) - Field::<u8>(Variant(_230.1.3, 0), 2);
_126 = &mut (*_31);
_116 = core::ptr::addr_of!((*_155));
_97 = Field::<isize>(Variant(_50.2, 0), 2);
_127.1 = core::ptr::addr_of!((*_143));
_115 = Move(_147);
_179 = Field::<f32>(Variant(_46, 2), 0);
Goto(bb88)
}
bb88 = {
_113 = _81;
_165.0 = _146.0.0 - (*_1);
_237.1.fld3.0 = _21 << (*_40).0;
(*_141) = [_125,_67];
_165.0 = _230.1.0 ^ _230.1.0;
_171 = Field::<isize>(Variant(_33.0, 0), 2);
(*_52) = !_76.0;
_74 = _82.0 ^ _82.0;
(*_40).1 = -_69;
_38 = core::ptr::addr_of_mut!((*_40).0);
_230.1.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_17.1.fld2, 1), 2),fld1: Field::<i8>(Variant(_46, 2), 1),fld2: (*_78).2 };
(*_1) = (*_78).2 as i32;
_5 = Field::<char>(Variant(_50.2, 0), 1);
_215 = _146.0.1;
_19.0 = Move(_17.0.0);
_182.2 = Adt23::Variant0 { fld0: _14,fld1: _154,fld2: _129,fld3: Field::<i8>(Variant(_33.0, 0), 3),fld4: _237.0.2,fld5: Field::<u16>(Variant(_77.0, 0), 5) };
_214 = _98;
(*_11) = _35;
(*_78).2 = Field::<u8>(Variant(_83.2, 0), 2) - _196;
place!(Field::<usize>(Variant(_166.0, 0), 4)) = Field::<usize>(Variant(_182.2, 0), 4);
place!(Field::<isize>(Variant(_33.0, 0), 2)) = _47;
Goto(bb89)
}
bb89 = {
(*_62) = [_122,Field::<usize>(Variant(_166.0, 0), 4)];
_156 = _238 + Field::<u64>(Variant(_230.1.2, 0), 0);
_146.0 = ((*_40).0, (*_40).1, Move(_83.2), Move(_230.1.2));
_117 = core::ptr::addr_of_mut!((*_11));
_50.1 = [_111,_111,_237.0.2,Field::<usize>(Variant(_50.2, 0), 4),Field::<usize>(Variant(_33.0, 0), 4),_122,Field::<usize>(Variant(_33.0, 0), 4),Field::<usize>(Variant(_166.0, 0), 4)];
place!(Field::<*mut i32>(Variant(_63, 3), 1)) = core::ptr::addr_of_mut!((*_1));
Goto(bb90)
}
bb90 = {
_185 = [(*_78).2,(*_78).2,(*_78).2,Field::<u8>(Variant(_230.1.3, 0), 2),Field::<u8>(Variant(_146.0.3, 0), 2),(*_78).2];
(*_1) = (*_38) * _230.1.0;
_237.0.0 = Move(_19.0);
(*_78).2 = Field::<u8>(Variant(_146.0.2, 0), 2);
_5 = _195;
_146.0.1 = _17.1.fld1 as f32;
Goto(bb91)
}
bb91 = {
(*_212) = [_195,_154];
_237.0.0 = core::ptr::addr_of!(_117);
place!(Field::<u16>(Variant(_77.0, 0), 5)) = !_61;
(*_62) = [Field::<usize>(Variant(_33.0, 0), 4),_121];
_246.1.1 = Field::<u32>(Variant(_17.1.fld2, 1), 1) as f32;
_234 = (*_40).1;
(*_78).2 = Field::<u8>(Variant(_146.0.2, 0), 2) | Field::<u8>(Variant(_146.0.2, 0), 2);
_231 = Field::<usize>(Variant(_77.0, 0), 4) * Field::<usize>(Variant(_77.0, 0), 4);
_246.1.2 = Move(_230.1.3);
_250 = _137 as f32;
_3 = core::ptr::addr_of!(_88);
(*_40).1 = _214 * _234;
_58 = Move(_38);
_215 = _60 as f32;
(*_62) = [_111,_17.0.2];
Goto(bb92)
}
bb92 = {
(*_3) = Move(_141);
RET = core::ptr::addr_of_mut!(_230.0);
_77.0 = Adt23::Variant0 { fld0: _181,fld1: _70,fld2: _133,fld3: Field::<i8>(Variant(_46, 2), 1),fld4: _111,fld5: Field::<u16>(Variant(_17.1.fld2, 1), 0) };
_141 = core::ptr::addr_of_mut!((*_11));
_187 = core::ptr::addr_of!((*_72));
(*_3) = core::ptr::addr_of_mut!((*_141));
(*_88) = _35;
_216 = _203.1 >> (*_1);
(*_88) = _35;
(*_62) = [_122,Field::<usize>(Variant(_33.0, 0), 4)];
(*_40).1 = -_165.1;
(*_78).2 = _196 & Field::<u8>(Variant(_146.0.3, 0), 2);
Goto(bb93)
}
bb93 = {
Call(_254 = dump_var(12_usize, 23_usize, Move(_23), 185_usize, Move(_185), 195_usize, Move(_195), 34_usize, Move(_34)), ReturnTo(bb94), UnwindUnreachable())
}
bb94 = {
Call(_254 = dump_var(12_usize, 21_usize, Move(_21), 102_usize, Move(_102), 238_usize, Move(_238), 91_usize, Move(_91)), ReturnTo(bb95), UnwindUnreachable())
}
bb95 = {
Call(_254 = dump_var(12_usize, 2_usize, Move(_2), 222_usize, Move(_222), 109_usize, Move(_109), 164_usize, Move(_164)), ReturnTo(bb96), UnwindUnreachable())
}
bb96 = {
Call(_254 = dump_var(12_usize, 194_usize, Move(_194), 44_usize, Move(_44), 27_usize, Move(_27), 99_usize, Move(_99)), ReturnTo(bb97), UnwindUnreachable())
}
bb97 = {
Call(_254 = dump_var(12_usize, 142_usize, Move(_142), 174_usize, Move(_174), 35_usize, Move(_35), 12_usize, Move(_12)), ReturnTo(bb98), UnwindUnreachable())
}
bb98 = {
Call(_254 = dump_var(12_usize, 97_usize, Move(_97), 76_usize, Move(_76), 162_usize, Move(_162), 65_usize, Move(_65)), ReturnTo(bb99), UnwindUnreachable())
}
bb99 = {
Call(_254 = dump_var(12_usize, 216_usize, Move(_216), 181_usize, Move(_181), 16_usize, Move(_16), 156_usize, Move(_156)), ReturnTo(bb100), UnwindUnreachable())
}
bb100 = {
Call(_254 = dump_var(12_usize, 10_usize, Move(_10), 137_usize, Move(_137), 47_usize, Move(_47), 5_usize, Move(_5)), ReturnTo(bb101), UnwindUnreachable())
}
bb101 = {
Call(_254 = dump_var(12_usize, 42_usize, Move(_42), 190_usize, Move(_190), 70_usize, Move(_70), 133_usize, Move(_133)), ReturnTo(bb102), UnwindUnreachable())
}
bb102 = {
Call(_254 = dump_var(12_usize, 14_usize, Move(_14), 6_usize, Move(_6), 154_usize, Move(_154), 113_usize, Move(_113)), ReturnTo(bb103), UnwindUnreachable())
}
bb103 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn13(mut _1: *mut [i16; 2],mut _2: *const *mut [i16; 2],mut _3: *mut i32,mut _4: [i16; 2]) -> Adt31 {
mir! {
type RET = Adt31;
let _5: (i128,);
let _6: &'static mut (Adt31, i32);
let _7: &'static mut *mut [u64; 1];
let _8: f64;
let _9: isize;
let _10: &'static u32;
let _11: char;
let _12: i16;
let _13: *const [usize; 2];
let _14: [u8; 6];
let _15: isize;
let _16: u8;
let _17: [usize; 2];
let _18: isize;
let _19: u64;
let _20: f64;
let _21: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _22: f64;
let _23: f64;
let _24: f32;
let _25: i128;
let _26: i32;
let _27: [i16; 2];
let _28: u128;
let _29: usize;
let _30: i64;
let _31: Adt57;
let _32: *const [u128; 2];
let _33: bool;
let _34: char;
let _35: *mut *mut i32;
let _36: usize;
let _37: *mut [bool; 4];
let _38: [usize; 5];
let _39: char;
let _40: char;
let _41: (&'static mut *mut [u64; 1], u128);
let _42: isize;
let _43: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _44: ((*mut i32, *mut [i16; 2], u8), (*mut i32, *mut [i16; 2], u8), &'static mut *mut *mut i32, Adt51);
let _45: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _46: i8;
let _47: i64;
let _48: *const [i128; 4];
let _49: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _50: *mut (&'static mut *mut [u64; 1], u128);
let _51: [i128; 4];
let _52: *mut &'static *mut [bool; 4];
let _53: *const [usize; 2];
let _54: u32;
let _55: u64;
let _56: i16;
let _57: char;
let _58: isize;
let _59: *mut [u64; 1];
let _60: &'static *mut [i16; 2];
let _61: *const [u128; 2];
let _62: &'static mut &'static mut i8;
let _63: isize;
let _64: (Adt23,);
let _65: *mut &'static *mut [bool; 4];
let _66: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _67: [u8; 2];
let _68: isize;
let _69: u16;
let _70: char;
let _71: u128;
let _72: &'static mut (Adt31, i32);
let _73: ();
let _74: ();
{
RET.fld0 = 45783374307868844447034402153534658374_i128 >= (-36978042277394807817772752167508901527_i128);
RET.fld3 = ((-34002804810403844055984493736355346091_i128),);
RET.fld6 = 6_usize as f64;
RET.fld2 = Adt23::Variant1 { fld0: 50761_u16,fld1: 1127947259_u32,fld2: 17364444263604656356_u64 };
RET.fld5 = RET.fld6 as f32;
RET.fld1 = 2280328064509485498_i64 as u128;
RET.fld1 = RET.fld6 as u128;
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = !3318439405_u32;
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = 2327930883_u32;
_2 = core::ptr::addr_of!(_1);
match RET.fld3.0 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
306279562110534619407390113695412865365 => bb6,
_ => bb5
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
(*_2) = core::ptr::addr_of_mut!(_4);
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3 = ((-78569208161137576609331314575116659523_i128),);
_5 = (RET.fld3.0,);
(*_1) = [29515_i16,11676_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3.0 = 4_u8 as i128;
Goto(bb7)
}
bb7 = {
_4 = [7708_i16,5287_i16];
(*_1) = [6099_i16,(-6114_i16)];
RET.fld6 = 212_u8 as f64;
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3 = _5;
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [28953_i16,(-5464_i16)];
(*_1) = [(-20813_i16),(-23065_i16)];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [(-18105_i16),(-28367_i16)];
(*_1) = [(-13704_i16),31882_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [22490_i16,30255_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
match RET.fld3.0 {
0 => bb5,
1 => bb8,
261713158759800886854043292856651551933 => bb10,
_ => bb9
}
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [(-30532_i16),(-5293_i16)];
(*_1) = [2451_i16,(-30803_i16)];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [5084_i16,(-31906_i16)];
(*_1) = [10574_i16,(-27537_i16)];
RET.fld5 = 6443000736830491866_u64 as f32;
(*_1) = [(-14214_i16),28508_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
_2 = core::ptr::addr_of!((*_2));
Goto(bb11)
}
bb11 = {
(*_1) = [(-2046_i16),(-29784_i16)];
(*_1) = [2129_i16,(-13003_i16)];
(*_1) = [(-21730_i16),29745_i16];
RET.fld0 = _5.0 < RET.fld3.0;
RET.fld6 = RET.fld5 as f64;
(*_2) = core::ptr::addr_of_mut!((*_1));
_12 = !(-20016_i16);
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
_8 = RET.fld6 * RET.fld6;
_14 = [132_u8,173_u8,232_u8,10_u8,104_u8,194_u8];
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
_10 = &place!(Field::<u32>(Variant(RET.fld2, 1), 1));
place!(Field::<u16>(Variant(RET.fld2, 1), 0)) = 48402_u16 >> (*_10);
(*_1) = [_12,_12];
_5 = RET.fld3;
match Field::<u32>(Variant(RET.fld2, 1), 1) {
0 => bb8,
1 => bb12,
2 => bb13,
2327930883 => bb15,
_ => bb14
}
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
_4 = [7708_i16,5287_i16];
(*_1) = [6099_i16,(-6114_i16)];
RET.fld6 = 212_u8 as f64;
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3 = _5;
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [28953_i16,(-5464_i16)];
(*_1) = [(-20813_i16),(-23065_i16)];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [(-18105_i16),(-28367_i16)];
(*_1) = [(-13704_i16),31882_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [22490_i16,30255_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
match RET.fld3.0 {
0 => bb5,
1 => bb8,
261713158759800886854043292856651551933 => bb10,
_ => bb9
}
}
bb15 = {
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
_18 = 1_isize;
Goto(bb16)
}
bb16 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld0 = !true;
_15 = -_18;
(*_1) = [_12,_12];
place!(Field::<u64>(Variant(RET.fld2, 1), 2)) = 15714103585164152636_u64 | 11718286785812542753_u64;
_2 = core::ptr::addr_of!((*_2));
(*_1) = [_12,_12];
(*_1) = [_12,_12];
RET.fld6 = _8;
RET.fld1 = 50543445952161630134737024464666935420_u128;
_2 = core::ptr::addr_of!((*_2));
_5 = (RET.fld3.0,);
(*_1) = [_12,_12];
_18 = _15 << (*_10);
_19 = Field::<u64>(Variant(RET.fld2, 1), 2) & Field::<u64>(Variant(RET.fld2, 1), 2);
_5.0 = RET.fld3.0;
(*_1) = [_12,_12];
_1 = core::ptr::addr_of_mut!((*_1));
Goto(bb17)
}
bb17 = {
_4 = [_12,_12];
_21.2 = core::ptr::addr_of!(_17);
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld2 = Adt23::Variant0 { fld0: RET.fld0,fld1: '\u{fee0e}',fld2: _15,fld3: (-31_i8),fld4: 1_usize,fld5: 33407_u16 };
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
place!(Field::<u16>(Variant(RET.fld2, 0), 5)) = _18 as u16;
(*_2) = core::ptr::addr_of_mut!((*_1));
_4 = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
_12 = -15957_i16;
_22 = RET.fld6 * RET.fld6;
place!(Field::<isize>(Variant(RET.fld2, 0), 2)) = _18;
RET.fld2 = Adt23::Variant1 { fld0: 42294_u16,fld1: 994356384_u32,fld2: _19 };
(*_2) = core::ptr::addr_of_mut!((*_1));
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = 2722599728_u32 | 4148596871_u32;
RET.fld0 = false | true;
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
Goto(bb18)
}
bb18 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
_13 = core::ptr::addr_of!(_17);
_20 = -_22;
(*_13) = [7_usize,1_usize];
(*_13) = [4_usize,9048753168842370564_usize];
(*_2) = core::ptr::addr_of_mut!((*_1));
_18 = _15;
(*_1) = [_12,_12];
Goto(bb19)
}
bb19 = {
(*_13) = [0_usize,6_usize];
(*_13) = [6_usize,1_usize];
(*_13) = [10631087614513420071_usize,1_usize];
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_13) = [10558087528524974076_usize,0_usize];
Goto(bb20)
}
bb20 = {
RET.fld0 = Field::<u32>(Variant(RET.fld2, 1), 1) > Field::<u32>(Variant(RET.fld2, 1), 1);
_24 = RET.fld5;
RET.fld1 = 265313007343478340198967883718669635509_u128;
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3.0 = _5.0 + _5.0;
(*_13) = [13499773589247656093_usize,5081498970181039663_usize];
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3.0 = Field::<u32>(Variant(RET.fld2, 1), 1) as i128;
_15 = _18 * _18;
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld4 = Adt18::Variant0 { fld0: _19,fld1: (-20_i8),fld2: 78_u8 };
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_13) = [10960337967067469908_usize,3_usize];
(*_1) = [_12,_12];
_18 = _19 as isize;
(*_13) = [7_usize,17241834080998696159_usize];
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = !_19;
_5 = (RET.fld3.0,);
(*_13) = [1_usize,10289088119725893044_usize];
_21.2 = core::ptr::addr_of!((*_13));
(*_1) = [_12,_12];
Call((*_2) = fn14(_5.0, Move(_13), _4, Move(_3), Move(_21.2), Move(_2), (*_13), _19), ReturnTo(bb21), UnwindUnreachable())
}
bb21 = {
_11 = '\u{8b45b}';
RET.fld0 = false;
_3 = core::ptr::addr_of_mut!(_26);
(*_3) = 1811684694_i32 | (-18896819_i32);
_21.2 = core::ptr::addr_of!(_17);
RET.fld1 = 95074107095795504146276764380850570826_u128;
(*_3) = 147533157_i32 << Field::<u64>(Variant(RET.fld4, 0), 0);
(*_3) = (-1062598368_i32);
place!(Field::<u8>(Variant(RET.fld4, 0), 2)) = 175_u8 - 182_u8;
_26 = _12 as i32;
(*_3) = (-1036721603_i32);
_16 = Field::<u8>(Variant(RET.fld4, 0), 2) - Field::<u8>(Variant(RET.fld4, 0), 2);
(*_3) = !1757773094_i32;
(*_3) = 599667322_i32;
(*_3) = -1289168088_i32;
_18 = -_15;
_23 = _20;
place!(Field::<u8>(Variant(RET.fld4, 0), 2)) = _16 | _16;
(*_3) = (-1623152469_i32) << _5.0;
place!(Field::<i8>(Variant(RET.fld4, 0), 1)) = 30_i8;
_24 = RET.fld5 + RET.fld5;
_28 = RET.fld1;
_9 = -_18;
match _28 {
95074107095795504146276764380850570826 => bb23,
_ => bb22
}
}
bb22 = {
_4 = [7708_i16,5287_i16];
(*_1) = [6099_i16,(-6114_i16)];
RET.fld6 = 212_u8 as f64;
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3 = _5;
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [28953_i16,(-5464_i16)];
(*_1) = [(-20813_i16),(-23065_i16)];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [(-18105_i16),(-28367_i16)];
(*_1) = [(-13704_i16),31882_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_1) = [22490_i16,30255_i16];
(*_2) = core::ptr::addr_of_mut!((*_1));
match RET.fld3.0 {
0 => bb5,
1 => bb8,
261713158759800886854043292856651551933 => bb10,
_ => bb9
}
}
bb23 = {
RET.fld1 = _28 | _28;
(*_3) = (-750914810_i32);
RET.fld3 = _5;
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = 190788689_u32 & 1166628392_u32;
_27 = [_12,_12];
RET.fld3.0 = _5.0 ^ _5.0;
_33 = (*_3) >= (*_3);
(*_3) = !(-149012943_i32);
_5.0 = RET.fld3.0 * RET.fld3.0;
(*_3) = (-1535944559_i32) | (-1796494650_i32);
(*_3) = 962366378_i32 | 1766631035_i32;
_13 = Move(_21.2);
(*_3) = _11 as i32;
_25 = _5.0;
(*_3) = Field::<u64>(Variant(RET.fld2, 1), 2) as i32;
_9 = _15 - _15;
_29 = Field::<u64>(Variant(RET.fld4, 0), 0) as usize;
_25 = _11 as i128;
(*_3) = _28 as i32;
(*_3) = 684025072_i32;
_9 = _15 * _15;
(*_3) = _5.0 as i32;
_5.0 = _25;
RET.fld1 = _25 as u128;
_9 = !_15;
RET.fld3 = (_25,);
_21.2 = core::ptr::addr_of!(_17);
_21.2 = core::ptr::addr_of!(_17);
Goto(bb24)
}
bb24 = {
(*_3) = -(-453241088_i32);
_18 = _15 + _15;
Goto(bb25)
}
bb25 = {
_10 = &place!(Field::<u32>(Variant(RET.fld2, 1), 1));
_34 = _11;
_14 = [Field::<u8>(Variant(RET.fld4, 0), 2),_16,Field::<u8>(Variant(RET.fld4, 0), 2),Field::<u8>(Variant(RET.fld4, 0), 2),Field::<u8>(Variant(RET.fld4, 0), 2),Field::<u8>(Variant(RET.fld4, 0), 2)];
_29 = 1176423555891362948_usize | 10821866642414499570_usize;
(*_3) = _19 as i32;
place!(Field::<u64>(Variant(RET.fld2, 1), 2)) = Field::<u64>(Variant(RET.fld4, 0), 0) + _19;
_2 = core::ptr::addr_of!(_1);
(*_3) = 821091548_i32;
_28 = !RET.fld1;
_22 = -_23;
(*_2) = core::ptr::addr_of_mut!(_27);
(*_3) = 1144630834_i32;
(*_1) = [_12,_12];
RET.fld2 = Adt23::Variant1 { fld0: 38026_u16,fld1: 2671570613_u32,fld2: Field::<u64>(Variant(RET.fld4, 0), 0) };
_25 = Field::<u64>(Variant(RET.fld4, 0), 0) as i128;
_30 = -1140168202384487226_i64;
_35 = core::ptr::addr_of_mut!(_3);
place!(Field::<u64>(Variant(RET.fld2, 1), 2)) = Field::<u64>(Variant(RET.fld4, 0), 0) << _19;
(*_35) = core::ptr::addr_of_mut!((*_3));
(*_1) = [_12,_12];
_41.1 = _18 as u128;
_39 = _11;
(*_2) = core::ptr::addr_of_mut!((*_1));
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = RET.fld3.0 as u64;
_38 = [_29,_29,_29,_29,_29];
(*_35) = core::ptr::addr_of_mut!((*_3));
Goto(bb26)
}
bb26 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
_12 = (-26971_i16) << Field::<u8>(Variant(RET.fld4, 0), 2);
Goto(bb27)
}
bb27 = {
_38 = [_29,_29,_29,_29,_29];
RET.fld1 = _28 * _41.1;
(*_1) = [_12,_12];
(*_1) = _4;
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = _16 as u32;
Goto(bb28)
}
bb28 = {
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = _19 + _19;
RET.fld3 = (_5.0,);
_9 = _18;
_44.0 = (Move((*_35)), Move((*_2)), _16);
_44.1 = (Move(_44.0.0), Move(_44.0.1), _16);
_38 = [_29,_29,_29,_29,_29];
RET.fld3.0 = _25 | _25;
(*_35) = core::ptr::addr_of_mut!(_26);
(*_3) = 1109613278_i32 << Field::<u8>(Variant(RET.fld4, 0), 2);
_44.3 = Adt51::Variant1 { fld0: _38 };
_44.0.1 = core::ptr::addr_of_mut!(_4);
_9 = _23 as isize;
(*_3) = 343125379_i32;
match (*_3) {
0 => bb9,
1 => bb29,
2 => bb30,
3 => bb31,
4 => bb32,
5 => bb33,
343125379 => bb35,
_ => bb34
}
}
bb29 = {
Return()
}
bb30 = {
Return()
}
bb31 = {
Return()
}
bb32 = {
(*_3) = -(-453241088_i32);
_18 = _15 + _15;
Goto(bb25)
}
bb33 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
_13 = core::ptr::addr_of!(_17);
_20 = -_22;
(*_13) = [7_usize,1_usize];
(*_13) = [4_usize,9048753168842370564_usize];
(*_2) = core::ptr::addr_of_mut!((*_1));
_18 = _15;
(*_1) = [_12,_12];
Goto(bb19)
}
bb34 = {
Return()
}
bb35 = {
(*_3) = (-882616998_i32) | (-702554835_i32);
(*_35) = Move(_44.1.0);
RET.fld3 = _5;
_46 = -Field::<i8>(Variant(RET.fld4, 0), 1);
(*_35) = core::ptr::addr_of_mut!(_26);
(*_35) = core::ptr::addr_of_mut!((*_3));
Goto(bb36)
}
bb36 = {
(*_35) = core::ptr::addr_of_mut!((*_3));
_1 = core::ptr::addr_of_mut!(_27);
_36 = _29 + _29;
_31 = Adt57::Variant1 { fld0: (*_1) };
_5 = RET.fld3;
(*_35) = core::ptr::addr_of_mut!((*_3));
_45.0 = _24 as i64;
(*_1) = [_12,_12];
Goto(bb37)
}
bb37 = {
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld4 = Adt18::Variant0 { fld0: _19,fld1: _46,fld2: _44.1.2 };
(*_2) = Move(_44.1.1);
_36 = _29 - _29;
place!(Field::<[usize; 5]>(Variant(_44.3, 1), 0)) = [_29,_36,_36,_36,_36];
(*_3) = (-1753998518_i32) & (-1358137942_i32);
(*_3) = (-508091325_i32);
_44.0.2 = !_44.1.2;
_44.0.2 = _44.1.2 + _16;
(*_3) = 246720177_i32;
(*_3) = RET.fld3.0 as i32;
_13 = Move(_21.2);
Goto(bb38)
}
bb38 = {
_39 = _34;
_30 = _45.0 - _45.0;
place!(Field::<i8>(Variant(RET.fld4, 0), 1)) = _46 & _46;
(*_2) = core::ptr::addr_of_mut!(_27);
_43.0.2 = _44.0.2 << Field::<u8>(Variant(RET.fld4, 0), 2);
(*_3) = (-1348684123_i32);
_25 = RET.fld3.0 + RET.fld3.0;
(*_3) = 199465997_i32;
_49.1 = Move((*_35));
_24 = RET.fld5 * RET.fld5;
(*_35) = core::ptr::addr_of_mut!(_26);
_28 = Field::<u64>(Variant(RET.fld2, 1), 2) as u128;
(*_1) = [_12,_12];
(*_1) = [_12,_12];
_46 = -Field::<i8>(Variant(RET.fld4, 0), 1);
_44.2 = &mut _35;
(*_3) = 788707469_i32 | 55975086_i32;
_17 = [_36,_36];
_1 = core::ptr::addr_of_mut!(_27);
_53 = core::ptr::addr_of!(_17);
(*_3) = !(-713173565_i32);
_43.0.2 = Field::<u8>(Variant(RET.fld4, 0), 2) >> Field::<u64>(Variant(RET.fld2, 1), 2);
(*_3) = _29 as i32;
(*_1) = Field::<[i16; 2]>(Variant(_31, 1), 0);
Call(_47 = core::intrinsics::transmute(_30), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
_14 = [_43.0.2,_44.1.2,_43.0.2,_44.0.2,_16,_43.0.2];
_27 = [_12,_12];
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = !Field::<u64>(Variant(RET.fld2, 1), 2);
_27 = [_12,_12];
_22 = _23 + _8;
place!(Field::<u8>(Variant(RET.fld4, 0), 2)) = _46 as u8;
(*_53) = [_36,_29];
_48 = core::ptr::addr_of!(_51);
_44.0.0 = core::ptr::addr_of_mut!((*_3));
(*_48) = [_25,_5.0,_25,_25];
(*_3) = 238003592_i32;
(*_53) = [_36,_36];
(*_53) = [_36,_36];
(*_53) = [_36,_36];
(*_1) = [_12,_12];
RET.fld3.0 = _5.0 & _25;
_9 = (*_3) as isize;
(*_53) = [_29,_36];
(*_48) = [RET.fld3.0,RET.fld3.0,_25,RET.fld3.0];
match (*_3) {
0 => bb9,
1 => bb36,
2 => bb40,
3 => bb41,
4 => bb42,
5 => bb43,
6 => bb44,
238003592 => bb46,
_ => bb45
}
}
bb40 = {
Return()
}
bb41 = {
RET.fld0 = Field::<u32>(Variant(RET.fld2, 1), 1) > Field::<u32>(Variant(RET.fld2, 1), 1);
_24 = RET.fld5;
RET.fld1 = 265313007343478340198967883718669635509_u128;
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3.0 = _5.0 + _5.0;
(*_13) = [13499773589247656093_usize,5081498970181039663_usize];
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld3.0 = Field::<u32>(Variant(RET.fld2, 1), 1) as i128;
_15 = _18 * _18;
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld4 = Adt18::Variant0 { fld0: _19,fld1: (-20_i8),fld2: 78_u8 };
(*_1) = [_12,_12];
(*_1) = [_12,_12];
(*_13) = [10960337967067469908_usize,3_usize];
(*_1) = [_12,_12];
_18 = _19 as isize;
(*_13) = [7_usize,17241834080998696159_usize];
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = !_19;
_5 = (RET.fld3.0,);
(*_13) = [1_usize,10289088119725893044_usize];
_21.2 = core::ptr::addr_of!((*_13));
(*_1) = [_12,_12];
Call((*_2) = fn14(_5.0, Move(_13), _4, Move(_3), Move(_21.2), Move(_2), (*_13), _19), ReturnTo(bb21), UnwindUnreachable())
}
bb42 = {
_4 = [_12,_12];
_21.2 = core::ptr::addr_of!(_17);
(*_2) = core::ptr::addr_of_mut!((*_1));
RET.fld2 = Adt23::Variant0 { fld0: RET.fld0,fld1: '\u{fee0e}',fld2: _15,fld3: (-31_i8),fld4: 1_usize,fld5: 33407_u16 };
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
(*_2) = core::ptr::addr_of_mut!((*_1));
place!(Field::<u16>(Variant(RET.fld2, 0), 5)) = _18 as u16;
(*_2) = core::ptr::addr_of_mut!((*_1));
_4 = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
_12 = -15957_i16;
_22 = RET.fld6 * RET.fld6;
place!(Field::<isize>(Variant(RET.fld2, 0), 2)) = _18;
RET.fld2 = Adt23::Variant1 { fld0: 42294_u16,fld1: 994356384_u32,fld2: _19 };
(*_2) = core::ptr::addr_of_mut!((*_1));
place!(Field::<u32>(Variant(RET.fld2, 1), 1)) = 2722599728_u32 | 4148596871_u32;
RET.fld0 = false | true;
(*_1) = [_12,_12];
(*_2) = core::ptr::addr_of_mut!((*_1));
Goto(bb18)
}
bb43 = {
Return()
}
bb44 = {
Return()
}
bb45 = {
Return()
}
bb46 = {
_44.0.1 = core::ptr::addr_of_mut!((*_1));
_42 = _23 as isize;
(*_53) = [_29,_29];
_55 = Field::<u64>(Variant(RET.fld2, 1), 2) * Field::<u64>(Variant(RET.fld4, 0), 0);
(*_48) = [RET.fld3.0,_25,RET.fld3.0,_25];
(*_48) = [RET.fld3.0,_5.0,RET.fld3.0,RET.fld3.0];
(*_3) = (-943218489_i32);
_5.0 = RET.fld3.0;
_26 = (-1903976805_i32) | 569528185_i32;
(*_1) = [_12,_12];
_27 = [_12,_12];
_19 = !Field::<u64>(Variant(RET.fld4, 0), 0);
(*_48) = [_25,RET.fld3.0,RET.fld3.0,_5.0];
place!(Field::<u64>(Variant(RET.fld4, 0), 0)) = _34 as u64;
_33 = RET.fld0;
_8 = _22 + _23;
_43.0.0 = core::ptr::addr_of_mut!((*_3));
_21.2 = Move(_13);
(*_48) = [_5.0,_25,RET.fld3.0,_5.0];
_66.0.0 = core::ptr::addr_of_mut!((*_3));
Goto(bb47)
}
bb47 = {
_48 = core::ptr::addr_of!((*_48));
_44.1 = (Move(_66.0.0), Move((*_2)), _43.0.2);
_2 = core::ptr::addr_of!((*_2));
_5 = (RET.fld3.0,);
_30 = RET.fld1 as i64;
_63 = _18;
_21.1 = core::ptr::addr_of!((*_48));
_21.1 = core::ptr::addr_of!((*_48));
_17 = [_36,_36];
_39 = _11;
_40 = _11;
(*_2) = core::ptr::addr_of_mut!(place!(Field::<[i16; 2]>(Variant(_31, 1), 0)));
Goto(bb48)
}
bb48 = {
RET.fld3.0 = _5.0;
_5.0 = RET.fld3.0 ^ RET.fld3.0;
(*_48) = [RET.fld3.0,_5.0,_5.0,_25];
(*_2) = Move(_44.1.1);
_34 = _11;
(*_2) = core::ptr::addr_of_mut!(place!(Field::<[i16; 2]>(Variant(_31, 1), 0)));
(*_1) = [_12,_12];
(*_53) = [_36,_36];
Goto(bb49)
}
bb49 = {
(*_53) = [_29,_36];
_5 = (RET.fld3.0,);
(*_53) = [_36,_29];
(*_53) = [_36,_36];
_58 = -_18;
(*_53) = [_36,_29];
_44.0.1 = core::ptr::addr_of_mut!((*_1));
(*_48) = [_5.0,_5.0,_5.0,_5.0];
Goto(bb50)
}
bb50 = {
_25 = RET.fld3.0 & RET.fld3.0;
_21.0 = core::ptr::addr_of!((*_48));
(*_1) = _27;
(*_53) = [_36,_36];
(*_48) = [RET.fld3.0,_25,_25,_25];
_5 = (_25,);
(*_48) = [_25,RET.fld3.0,_5.0,_5.0];
place!(Field::<[usize; 5]>(Variant(_44.3, 1), 0)) = [_29,_36,_36,_29,_29];
place!(Field::<u16>(Variant(RET.fld2, 1), 0)) = 49954_u16 - 60775_u16;
(*_3) = 1294163237_i32 ^ 930567156_i32;
(*_1) = [_12,_12];
Goto(bb51)
}
bb51 = {
Call(_73 = dump_var(13_usize, 19_usize, Move(_19), 25_usize, Move(_25), 12_usize, Move(_12), 27_usize, Move(_27)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_73 = dump_var(13_usize, 34_usize, Move(_34), 30_usize, Move(_30), 42_usize, Move(_42), 26_usize, Move(_26)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_73 = dump_var(13_usize, 47_usize, Move(_47), 28_usize, Move(_28), 14_usize, Move(_14), 29_usize, Move(_29)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_73 = dump_var(13_usize, 16_usize, Move(_16), 9_usize, Move(_9), 39_usize, Move(_39), 74_usize, _74), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn14(mut _1: i128,mut _2: *const [usize; 2],mut _3: [i16; 2],mut _4: *mut i32,mut _5: *const [usize; 2],mut _6: *const *mut [i16; 2],mut _7: [usize; 2],mut _8: u64) -> *mut [i16; 2] {
mir! {
type RET = *mut [i16; 2];
let _9: *const *mut [i16; 2];
let _10: char;
let _11: (i32, f32, Adt18, Adt18);
let _12: *const *mut [i16; 2];
let _13: isize;
let _14: isize;
let _15: &'static f64;
let _16: *mut [u64; 1];
let _17: *mut [bool; 4];
let _18: *const &'static mut i8;
let _19: [usize; 2];
let _20: f64;
let _21: Adt23;
let _22: u128;
let _23: f32;
let _24: usize;
let _25: &'static *mut [i16; 2];
let _26: char;
let _27: isize;
let _28: f32;
let _29: isize;
let _30: *const [usize; 2];
let _31: f64;
let _32: *mut *mut i32;
let _33: &'static mut *mut [u64; 1];
let _34: &'static mut (Adt31, i32);
let _35: u16;
let _36: &'static *mut [bool; 4];
let _37: char;
let _38: &'static mut (*mut i32, *mut [i16; 2], u8);
let _39: [u8; 6];
let _40: &'static *mut [i16; 2];
let _41: u64;
let _42: &'static [u64; 1];
let _43: char;
let _44: isize;
let _45: f32;
let _46: isize;
let _47: u16;
let _48: Adt41;
let _49: *mut [u64; 1];
let _50: usize;
let _51: (*mut i32, *mut [i16; 2], u8);
let _52: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _53: bool;
let _54: i128;
let _55: isize;
let _56: char;
let _57: [i8; 5];
let _58: Adt41;
let _59: f64;
let _60: f32;
let _61: u16;
let _62: i32;
let _63: &'static &'static f64;
let _64: bool;
let _65: f64;
let _66: f32;
let _67: f64;
let _68: i8;
let _69: *mut *mut i32;
let _70: *mut (&'static mut *mut [u64; 1], u128);
let _71: f64;
let _72: &'static *mut [bool; 4];
let _73: &'static f64;
let _74: f64;
let _75: char;
let _76: f64;
let _77: i16;
let _78: ();
let _79: ();
{
_5 = core::ptr::addr_of!(_7);
(*_5) = [6_usize,1_usize];
(*_5) = [11572262378066939660_usize,4599521416202249773_usize];
RET = core::ptr::addr_of_mut!(_3);
(*RET) = [(-9265_i16),(-9830_i16)];
(*_5) = [2_usize,2_usize];
Goto(bb1)
}
bb1 = {
_9 = Move(_6);
(*RET) = [(-930_i16),(-15014_i16)];
(*RET) = [2242_i16,8086_i16];
(*RET) = [(-20267_i16),21614_i16];
_6 = core::ptr::addr_of!(RET);
(*RET) = [(-4917_i16),12023_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_5 = core::ptr::addr_of!((*_5));
(*RET) = [(-2733_i16),(-17366_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_8 = 2751723696_u32 as u64;
(*_5) = [7868914271802871815_usize,3_usize];
_1 = 2_usize as i128;
_7 = [2_usize,14188430110766111017_usize];
(*_5) = [5670810138619373980_usize,580672201590552605_usize];
(*_5) = [7655959788706643778_usize,7_usize];
(*RET) = [(-1835_i16),12795_i16];
_11.3 = Adt18::Variant0 { fld0: _8,fld1: 93_i8,fld2: 216_u8 };
(*RET) = [(-22601_i16),31892_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_2 = core::ptr::addr_of!((*_5));
(*_5) = [0_usize,247929049963715571_usize];
(*RET) = [(-8631_i16),(-18882_i16)];
Goto(bb2)
}
bb2 = {
_6 = core::ptr::addr_of!((*_6));
(*RET) = [30669_i16,(-5346_i16)];
_11.1 = 3355531917_u32 as f32;
_2 = Move(_5);
(*RET) = [21103_i16,19079_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 15_u8 + 137_u8;
place!(Field::<u64>(Variant(_11.3, 0), 0)) = _8;
(*RET) = [(-27674_i16),6079_i16];
Goto(bb3)
}
bb3 = {
_11.0 = 1337464918_i32 * 1158552943_i32;
(*_6) = core::ptr::addr_of_mut!(_3);
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [31994_i16,(-11144_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-5756_i16),19095_i16];
(*RET) = [4622_i16,28382_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 35072_u16 as u8;
_5 = core::ptr::addr_of!(_7);
place!(Field::<u64>(Variant(_11.3, 0), 0)) = 212501897376665066_usize as u64;
(*RET) = [(-22630_i16),1002_i16];
(*_5) = [2_usize,4_usize];
(*_5) = [2683262115783211778_usize,4355170637143270661_usize];
(*_5) = [4_usize,16190585345275033549_usize];
(*RET) = [27225_i16,16605_i16];
(*_5) = [2_usize,17424650998842569905_usize];
Goto(bb4)
}
bb4 = {
_1 = 138120848490583381614175393590244385278_i128;
Goto(bb5)
}
bb5 = {
(*RET) = [31555_i16,(-8498_i16)];
_12 = core::ptr::addr_of!((*_6));
(*_5) = [6965962910712285881_usize,5391886174823604394_usize];
(*_6) = core::ptr::addr_of_mut!((*RET));
_11.3 = Adt18::Variant0 { fld0: _8,fld1: 92_i8,fld2: 148_u8 };
(*_5) = [3_usize,0_usize];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-9109_i16),24656_i16];
_6 = core::ptr::addr_of!((*_6));
(*_5) = [0_usize,5_usize];
(*RET) = [21014_i16,19272_i16];
_6 = core::ptr::addr_of!((*_6));
(*_5) = [3900930934545355516_usize,15391147556942519904_usize];
(*_5) = [7_usize,3580604975940316464_usize];
_13 = (-11_isize) * 9223372036854775807_isize;
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-17086_i16),30114_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_5) = [4_usize,6_usize];
match _1 {
0 => bb1,
1 => bb2,
2 => bb4,
138120848490583381614175393590244385278 => bb7,
_ => bb6
}
}
bb6 = {
_1 = 138120848490583381614175393590244385278_i128;
Goto(bb5)
}
bb7 = {
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_5) = [16625551622993564194_usize,5_usize];
(*_5) = [17748701433434442800_usize,5079192354467218790_usize];
(*_5) = [6_usize,11070140731893024179_usize];
_1 = (-165703991351598997537378258607142110161_i128);
Goto(bb8)
}
bb8 = {
_11.1 = _1 as f32;
Goto(bb9)
}
bb9 = {
(*_5) = [9751109497036346552_usize,7_usize];
(*_5) = [6396621849550186188_usize,4_usize];
(*RET) = [(-30456_i16),4769_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [11252_i16,(-9344_i16)];
(*_5) = [0_usize,6_usize];
_14 = _13 & _13;
Goto(bb10)
}
bb10 = {
(*RET) = [3921_i16,(-18056_i16)];
(*_5) = [2_usize,6_usize];
(*_6) = core::ptr::addr_of_mut!((*RET));
_20 = _8 as f64;
(*_5) = [6_usize,5622738500198828579_usize];
_19 = [9253081679449434302_usize,4198556605982166783_usize];
_11.0 = 401890413_i32 & 148083149_i32;
(*_5) = _19;
(*_5) = [16219420180409566838_usize,0_usize];
_22 = 256176561861821005788302559107904986896_u128;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_6));
(*_6) = core::ptr::addr_of_mut!((*RET));
place!(Field::<u64>(Variant(_11.3, 0), 0)) = _8;
(*RET) = [20301_i16,26525_i16];
place!(Field::<i8>(Variant(_11.3, 0), 1)) = (-121_i8) << _11.0;
(*RET) = [(-15916_i16),(-20284_i16)];
(*_5) = [4_usize,274973731402242994_usize];
_2 = core::ptr::addr_of!((*_5));
(*RET) = [25131_i16,5729_i16];
(*_2) = [18234647041455552011_usize,6_usize];
(*_2) = [4_usize,4357899382296978099_usize];
Goto(bb11)
}
bb11 = {
(*RET) = [(-17661_i16),14451_i16];
match _1 {
0 => bb6,
174578375569339465925996348824626101295 => bb13,
_ => bb12
}
}
bb12 = {
(*_5) = [9751109497036346552_usize,7_usize];
(*_5) = [6396621849550186188_usize,4_usize];
(*RET) = [(-30456_i16),4769_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [11252_i16,(-9344_i16)];
(*_5) = [0_usize,6_usize];
_14 = _13 & _13;
Goto(bb10)
}
bb13 = {
(*RET) = [(-28130_i16),(-30651_i16)];
(*_2) = _19;
(*_2) = _19;
_15 = &_20;
_24 = 0_usize >> _14;
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!(_3);
(*RET) = [(-29477_i16),14222_i16];
(*_5) = [_24,_24];
(*_5) = [_24,_24];
_11.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_11.3, 0), 0),fld1: Field::<i8>(Variant(_11.3, 0), 1),fld2: 184_u8 };
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-10561_i16),(-6955_i16)];
(*_5) = [_24,_24];
Call(_1 = core::intrinsics::bswap((-164685432688579780821404629036430872554_i128)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
_12 = core::ptr::addr_of!((*_6));
_2 = Move(_5);
(*_12) = core::ptr::addr_of_mut!((*RET));
place!(Field::<u64>(Variant(_11.2, 0), 0)) = _8 + _8;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_21 = Adt23::Variant0 { fld0: true,fld1: '\u{b7595}',fld2: _13,fld3: Field::<i8>(Variant(_11.3, 0), 1),fld4: _24,fld5: 9305_u16 };
_13 = Field::<isize>(Variant(_21, 0), 2);
(*_6) = core::ptr::addr_of_mut!((*RET));
_5 = core::ptr::addr_of!(_19);
_2 = Move(_5);
(*_6) = core::ptr::addr_of_mut!((*RET));
place!(Field::<u64>(Variant(_11.2, 0), 0)) = _8 << _24;
_6 = core::ptr::addr_of!((*_6));
_11.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_11.2, 0), 0),fld1: Field::<i8>(Variant(_11.2, 0), 1),fld2: 8_u8 };
_10 = '\u{540ff}';
_25 = &(*_6);
(*_6) = core::ptr::addr_of_mut!((*RET));
_5 = core::ptr::addr_of!(_19);
(*_5) = [Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_6) = core::ptr::addr_of_mut!((*RET));
_19 = [Field::<usize>(Variant(_21, 0), 4),_24];
(*_5) = [Field::<usize>(Variant(_21, 0), 4),Field::<usize>(Variant(_21, 0), 4)];
(*_6) = core::ptr::addr_of_mut!((*RET));
Goto(bb15)
}
bb15 = {
(*_6) = core::ptr::addr_of_mut!((*RET));
_28 = 18920_u16 as f32;
(*RET) = [(-26648_i16),(-9281_i16)];
_11.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_11.2, 0), 0),fld1: Field::<i8>(Variant(_11.2, 0), 1),fld2: 6_u8 };
(*_6) = core::ptr::addr_of_mut!((*RET));
Call(place!(Field::<u8>(Variant(_11.2, 0), 2)) = fn15(Move(_9), Move(_2), Move((*_6)), Move(_5), _11.0, Move(_6), Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
place!(Field::<i8>(Variant(_21, 0), 3)) = Field::<i8>(Variant(_11.2, 0), 1) << Field::<isize>(Variant(_21, 0), 2);
_14 = Field::<isize>(Variant(_21, 0), 2) ^ Field::<isize>(Variant(_21, 0), 2);
place!(Field::<u8>(Variant(_11.3, 0), 2)) = Field::<u8>(Variant(_11.2, 0), 2) - Field::<u8>(Variant(_11.2, 0), 2);
_29 = _11.0 as isize;
_2 = core::ptr::addr_of!(_7);
_3 = [(-15537_i16),(-5790_i16)];
_6 = Move(_12);
place!(Field::<i8>(Variant(_11.3, 0), 1)) = Field::<i8>(Variant(_21, 0), 3) + Field::<i8>(Variant(_11.2, 0), 1);
_11.3 = Adt18::Variant0 { fld0: _8,fld1: Field::<i8>(Variant(_21, 0), 3),fld2: Field::<u8>(Variant(_11.2, 0), 2) };
(*_2) = _19;
_12 = core::ptr::addr_of!(RET);
RET = core::ptr::addr_of_mut!(_3);
_20 = (-3078806902252457623_i64) as f64;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*RET) = [17288_i16,(-9061_i16)];
Goto(bb17)
}
bb17 = {
_8 = Field::<u64>(Variant(_11.2, 0), 0);
_32 = core::ptr::addr_of_mut!(_4);
place!(Field::<u8>(Variant(_11.3, 0), 2)) = Field::<u8>(Variant(_11.2, 0), 2);
(*_32) = core::ptr::addr_of_mut!(_11.0);
place!(Field::<u64>(Variant(_11.2, 0), 0)) = !_8;
_2 = core::ptr::addr_of!((*_2));
Goto(bb18)
}
bb18 = {
(*_4) = 108546688_i32 & 630647635_i32;
(*RET) = [(-20915_i16),(-19202_i16)];
(*_12) = core::ptr::addr_of_mut!((*RET));
_22 = _1 as u128;
_11.0 = 940307289_i32 << Field::<u8>(Variant(_11.3, 0), 2);
(*_2) = [_24,_24];
(*_4) = (-494939278_i32);
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
_11.1 = Field::<u8>(Variant(_11.2, 0), 2) as f32;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
place!(Field::<bool>(Variant(_21, 0), 0)) = true;
(*RET) = [1344_i16,15879_i16];
Goto(bb19)
}
bb19 = {
_8 = (*_4) as u64;
(*_4) = 873938786_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_6 = core::ptr::addr_of!((*_12));
(*_2) = [_24,_24];
(*_6) = core::ptr::addr_of_mut!((*RET));
_24 = Field::<usize>(Variant(_21, 0), 4) ^ Field::<usize>(Variant(_21, 0), 4);
_20 = _14 as f64;
(*RET) = [(-30653_i16),(-7386_i16)];
_3 = [19242_i16,21451_i16];
_30 = Move(_2);
(*_4) = 1195427735_i32 * (-987868336_i32);
_1 = !(-18626319980764415725699405966312464080_i128);
(*_4) = _20 as i32;
(*_4) = (-575836622_i32);
(*RET) = [(-10828_i16),(-13098_i16)];
(*RET) = [23617_i16,23352_i16];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_4) = !1469923336_i32;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_12));
(*_9) = core::ptr::addr_of_mut!((*RET));
Goto(bb20)
}
bb20 = {
(*_6) = core::ptr::addr_of_mut!((*RET));
_11.2 = Move(_11.3);
place!(Field::<u16>(Variant(_21, 0), 5)) = 59065_u16;
place!(Field::<u8>(Variant(_11.2, 0), 2)) = !144_u8;
(*RET) = [14022_i16,(-26314_i16)];
(*RET) = [19726_i16,(-27538_i16)];
(*_32) = core::ptr::addr_of_mut!(_11.0);
_28 = -_11.1;
place!(Field::<u8>(Variant(_11.2, 0), 2)) = 120_u8 << _24;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = 715422384_i32 >> Field::<i8>(Variant(_11.2, 0), 1);
_8 = !Field::<u64>(Variant(_11.2, 0), 0);
_12 = core::ptr::addr_of!((*_12));
(*RET) = [15954_i16,32631_i16];
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
_28 = _11.1 * _11.1;
_10 = Field::<char>(Variant(_21, 0), 1);
(*_12) = core::ptr::addr_of_mut!((*RET));
_11.0 = (-308937644_i32) >> Field::<u8>(Variant(_11.2, 0), 2);
(*_12) = core::ptr::addr_of_mut!((*RET));
_26 = Field::<char>(Variant(_21, 0), 1);
(*_4) = 379542097_i32 * 102823758_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
Goto(bb21)
}
bb21 = {
(*RET) = [29754_i16,(-2950_i16)];
(*_4) = _26 as i32;
_35 = Field::<u16>(Variant(_21, 0), 5) | Field::<u16>(Variant(_21, 0), 5);
_1 = !79401687464123822658365409037542558862_i128;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = -1190724767_i32;
(*RET) = [115_i16,13476_i16];
(*RET) = [(-31114_i16),(-32253_i16)];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_4) = (-1433002398_i32) << Field::<usize>(Variant(_21, 0), 4);
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_4) = !1144436110_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_43 = Field::<char>(Variant(_21, 0), 1);
_6 = core::ptr::addr_of!(RET);
(*_4) = _1 as i32;
_26 = Field::<char>(Variant(_21, 0), 1);
_44 = !_14;
match Field::<u16>(Variant(_21, 0), 5) {
0 => bb12,
1 => bb14,
2 => bb11,
3 => bb4,
4 => bb22,
5 => bb23,
59065 => bb25,
_ => bb24
}
}
bb22 = {
_9 = Move(_6);
(*RET) = [(-930_i16),(-15014_i16)];
(*RET) = [2242_i16,8086_i16];
(*RET) = [(-20267_i16),21614_i16];
_6 = core::ptr::addr_of!(RET);
(*RET) = [(-4917_i16),12023_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_5 = core::ptr::addr_of!((*_5));
(*RET) = [(-2733_i16),(-17366_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_8 = 2751723696_u32 as u64;
(*_5) = [7868914271802871815_usize,3_usize];
_1 = 2_usize as i128;
_7 = [2_usize,14188430110766111017_usize];
(*_5) = [5670810138619373980_usize,580672201590552605_usize];
(*_5) = [7655959788706643778_usize,7_usize];
(*RET) = [(-1835_i16),12795_i16];
_11.3 = Adt18::Variant0 { fld0: _8,fld1: 93_i8,fld2: 216_u8 };
(*RET) = [(-22601_i16),31892_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_2 = core::ptr::addr_of!((*_5));
(*_5) = [0_usize,247929049963715571_usize];
(*RET) = [(-8631_i16),(-18882_i16)];
Goto(bb2)
}
bb23 = {
_1 = 138120848490583381614175393590244385278_i128;
Goto(bb5)
}
bb24 = {
_11.0 = 1337464918_i32 * 1158552943_i32;
(*_6) = core::ptr::addr_of_mut!(_3);
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [31994_i16,(-11144_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-5756_i16),19095_i16];
(*RET) = [4622_i16,28382_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 35072_u16 as u8;
_5 = core::ptr::addr_of!(_7);
place!(Field::<u64>(Variant(_11.3, 0), 0)) = 212501897376665066_usize as u64;
(*RET) = [(-22630_i16),1002_i16];
(*_5) = [2_usize,4_usize];
(*_5) = [2683262115783211778_usize,4355170637143270661_usize];
(*_5) = [4_usize,16190585345275033549_usize];
(*RET) = [27225_i16,16605_i16];
(*_5) = [2_usize,17424650998842569905_usize];
Goto(bb4)
}
bb25 = {
(*_32) = core::ptr::addr_of_mut!((*_4));
(*RET) = [(-10843_i16),12263_i16];
match Field::<u16>(Variant(_21, 0), 5) {
0 => bb20,
1 => bb26,
2 => bb27,
3 => bb28,
59065 => bb30,
_ => bb29
}
}
bb26 = {
(*RET) = [(-17661_i16),14451_i16];
match _1 {
0 => bb6,
174578375569339465925996348824626101295 => bb13,
_ => bb12
}
}
bb27 = {
place!(Field::<i8>(Variant(_21, 0), 3)) = Field::<i8>(Variant(_11.2, 0), 1) << Field::<isize>(Variant(_21, 0), 2);
_14 = Field::<isize>(Variant(_21, 0), 2) ^ Field::<isize>(Variant(_21, 0), 2);
place!(Field::<u8>(Variant(_11.3, 0), 2)) = Field::<u8>(Variant(_11.2, 0), 2) - Field::<u8>(Variant(_11.2, 0), 2);
_29 = _11.0 as isize;
_2 = core::ptr::addr_of!(_7);
_3 = [(-15537_i16),(-5790_i16)];
_6 = Move(_12);
place!(Field::<i8>(Variant(_11.3, 0), 1)) = Field::<i8>(Variant(_21, 0), 3) + Field::<i8>(Variant(_11.2, 0), 1);
_11.3 = Adt18::Variant0 { fld0: _8,fld1: Field::<i8>(Variant(_21, 0), 3),fld2: Field::<u8>(Variant(_11.2, 0), 2) };
(*_2) = _19;
_12 = core::ptr::addr_of!(RET);
RET = core::ptr::addr_of_mut!(_3);
_20 = (-3078806902252457623_i64) as f64;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*RET) = [17288_i16,(-9061_i16)];
Goto(bb17)
}
bb28 = {
_1 = 138120848490583381614175393590244385278_i128;
Goto(bb5)
}
bb29 = {
_8 = (*_4) as u64;
(*_4) = 873938786_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_6 = core::ptr::addr_of!((*_12));
(*_2) = [_24,_24];
(*_6) = core::ptr::addr_of_mut!((*RET));
_24 = Field::<usize>(Variant(_21, 0), 4) ^ Field::<usize>(Variant(_21, 0), 4);
_20 = _14 as f64;
(*RET) = [(-30653_i16),(-7386_i16)];
_3 = [19242_i16,21451_i16];
_30 = Move(_2);
(*_4) = 1195427735_i32 * (-987868336_i32);
_1 = !(-18626319980764415725699405966312464080_i128);
(*_4) = _20 as i32;
(*_4) = (-575836622_i32);
(*RET) = [(-10828_i16),(-13098_i16)];
(*RET) = [23617_i16,23352_i16];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_4) = !1469923336_i32;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_12));
(*_9) = core::ptr::addr_of_mut!((*RET));
Goto(bb20)
}
bb30 = {
_23 = _28 + _11.1;
RET = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
_4 = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = -2029721146_i32;
(*_12) = core::ptr::addr_of_mut!((*RET));
match Field::<u16>(Variant(_21, 0), 5) {
0 => bb18,
1 => bb8,
2 => bb15,
3 => bb31,
4 => bb32,
5 => bb33,
6 => bb34,
59065 => bb36,
_ => bb35
}
}
bb31 = {
_6 = core::ptr::addr_of!((*_6));
(*RET) = [30669_i16,(-5346_i16)];
_11.1 = 3355531917_u32 as f32;
_2 = Move(_5);
(*RET) = [21103_i16,19079_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 15_u8 + 137_u8;
place!(Field::<u64>(Variant(_11.3, 0), 0)) = _8;
(*RET) = [(-27674_i16),6079_i16];
Goto(bb3)
}
bb32 = {
(*RET) = [(-17661_i16),14451_i16];
match _1 {
0 => bb6,
174578375569339465925996348824626101295 => bb13,
_ => bb12
}
}
bb33 = {
place!(Field::<i8>(Variant(_21, 0), 3)) = Field::<i8>(Variant(_11.2, 0), 1) << Field::<isize>(Variant(_21, 0), 2);
_14 = Field::<isize>(Variant(_21, 0), 2) ^ Field::<isize>(Variant(_21, 0), 2);
place!(Field::<u8>(Variant(_11.3, 0), 2)) = Field::<u8>(Variant(_11.2, 0), 2) - Field::<u8>(Variant(_11.2, 0), 2);
_29 = _11.0 as isize;
_2 = core::ptr::addr_of!(_7);
_3 = [(-15537_i16),(-5790_i16)];
_6 = Move(_12);
place!(Field::<i8>(Variant(_11.3, 0), 1)) = Field::<i8>(Variant(_21, 0), 3) + Field::<i8>(Variant(_11.2, 0), 1);
_11.3 = Adt18::Variant0 { fld0: _8,fld1: Field::<i8>(Variant(_21, 0), 3),fld2: Field::<u8>(Variant(_11.2, 0), 2) };
(*_2) = _19;
_12 = core::ptr::addr_of!(RET);
RET = core::ptr::addr_of_mut!(_3);
_20 = (-3078806902252457623_i64) as f64;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*RET) = [17288_i16,(-9061_i16)];
Goto(bb17)
}
bb34 = {
_1 = 138120848490583381614175393590244385278_i128;
Goto(bb5)
}
bb35 = {
_8 = (*_4) as u64;
(*_4) = 873938786_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_6 = core::ptr::addr_of!((*_12));
(*_2) = [_24,_24];
(*_6) = core::ptr::addr_of_mut!((*RET));
_24 = Field::<usize>(Variant(_21, 0), 4) ^ Field::<usize>(Variant(_21, 0), 4);
_20 = _14 as f64;
(*RET) = [(-30653_i16),(-7386_i16)];
_3 = [19242_i16,21451_i16];
_30 = Move(_2);
(*_4) = 1195427735_i32 * (-987868336_i32);
_1 = !(-18626319980764415725699405966312464080_i128);
(*_4) = _20 as i32;
(*_4) = (-575836622_i32);
(*RET) = [(-10828_i16),(-13098_i16)];
(*RET) = [23617_i16,23352_i16];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_4) = !1469923336_i32;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_12));
(*_9) = core::ptr::addr_of_mut!((*RET));
Goto(bb20)
}
bb36 = {
_26 = _43;
_2 = core::ptr::addr_of!(_7);
_45 = 32352_i16 as f32;
(*_32) = core::ptr::addr_of_mut!((*_4));
place!(Field::<u8>(Variant(_11.2, 0), 2)) = 96_u8;
(*_4) = 372216005_i32 * (-1040200003_i32);
_28 = -_23;
_51.1 = core::ptr::addr_of_mut!((*RET));
(*_4) = !(-30620129_i32);
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_32) = core::ptr::addr_of_mut!((*_4));
_55 = Field::<isize>(Variant(_21, 0), 2) ^ _14;
_27 = Field::<isize>(Variant(_21, 0), 2);
(*_4) = -(-2032527379_i32);
_41 = 16717_i16 as u64;
(*_2) = [_24,_24];
_22 = !91399558895802189700722159636689556959_u128;
_52.0 = (-1634531724717990554_i64) + 3187227585006378562_i64;
_25 = &_51.1;
(*_2) = _19;
Goto(bb37)
}
bb37 = {
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = !(-1735643300_i32);
_54 = _1 ^ _1;
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
(*_32) = core::ptr::addr_of_mut!((*_4));
_14 = _13 ^ _55;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = Move(_51.1);
_30 = core::ptr::addr_of!((*_2));
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
_37 = _10;
(*_32) = core::ptr::addr_of_mut!((*_4));
_50 = Field::<usize>(Variant(_21, 0), 4) - _24;
(*_4) = 1518060837_i32 - 473371654_i32;
(*_30) = [_24,Field::<usize>(Variant(_21, 0), 4)];
(*_12) = core::ptr::addr_of_mut!(_3);
_22 = 40635653913981023191194216828820145259_u128;
(*_30) = [_50,_50];
(*_30) = [_50,Field::<usize>(Variant(_21, 0), 4)];
_9 = core::ptr::addr_of!((*_12));
_39 = [Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2)];
_8 = _41;
(*_9) = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
(*_4) = (-975733259_i32) * (-2102343016_i32);
(*_4) = 1008314767_i32 >> _50;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
match _22 {
0 => bb33,
1 => bb20,
2 => bb30,
40635653913981023191194216828820145259 => bb39,
_ => bb38
}
}
bb38 = {
_6 = core::ptr::addr_of!((*_6));
(*RET) = [30669_i16,(-5346_i16)];
_11.1 = 3355531917_u32 as f32;
_2 = Move(_5);
(*RET) = [21103_i16,19079_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 15_u8 + 137_u8;
place!(Field::<u64>(Variant(_11.3, 0), 0)) = _8;
(*RET) = [(-27674_i16),6079_i16];
Goto(bb3)
}
bb39 = {
(*_32) = core::ptr::addr_of_mut!((*_4));
_10 = _43;
(*_32) = core::ptr::addr_of_mut!((*_4));
Goto(bb40)
}
bb40 = {
_46 = _14;
(*_4) = 1673061619_i32;
_1 = _54;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
_3 = [(-31904_i16),(-30820_i16)];
(*_4) = 499954708_i32 >> _54;
_52.0 = (-1167286593900767993_i64) >> Field::<i8>(Variant(_21, 0), 3);
(*_12) = core::ptr::addr_of_mut!((*RET));
_57 = [Field::<i8>(Variant(_11.2, 0), 1),Field::<i8>(Variant(_21, 0), 3),Field::<i8>(Variant(_11.2, 0), 1),Field::<i8>(Variant(_11.2, 0), 1),Field::<i8>(Variant(_11.2, 0), 1)];
_66 = _28 - _23;
_59 = _20 - _20;
_29 = !_14;
_43 = Field::<char>(Variant(_21, 0), 1);
(*_30) = [_50,_50];
(*_4) = Field::<bool>(Variant(_21, 0), 0) as i32;
(*_30) = [_24,_24];
_24 = Field::<usize>(Variant(_21, 0), 4) ^ _50;
Goto(bb41)
}
bb41 = {
(*_30) = _19;
_51.2 = Field::<u8>(Variant(_11.2, 0), 2);
(*_2) = [_50,_24];
(*RET) = [(-9381_i16),31930_i16];
(*_12) = core::ptr::addr_of_mut!((*RET));
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
_51 = (Move((*_32)), Move((*_12)), Field::<u8>(Variant(_11.2, 0), 2));
(*_32) = core::ptr::addr_of_mut!(_11.0);
(*_12) = core::ptr::addr_of_mut!(_3);
_32 = core::ptr::addr_of_mut!((*_32));
(*_32) = core::ptr::addr_of_mut!((*_4));
(*RET) = [4150_i16,(-17722_i16)];
_59 = _20;
(*_12) = core::ptr::addr_of_mut!((*RET));
_61 = Field::<u16>(Variant(_21, 0), 5) | _35;
(*_2) = [_24,_50];
(*RET) = [16154_i16,(-21239_i16)];
_45 = _23 + _11.1;
_46 = 1834449834_u32 as isize;
(*_4) = !(-1487047985_i32);
(*_12) = core::ptr::addr_of_mut!((*RET));
RET = core::ptr::addr_of_mut!((*RET));
(*_4) = (-550597138_i32) + 2027751507_i32;
_62 = (*_4) ^ (*_4);
(*_4) = Field::<u8>(Variant(_11.2, 0), 2) as i32;
(*_12) = core::ptr::addr_of_mut!((*RET));
Goto(bb42)
}
bb42 = {
(*_12) = core::ptr::addr_of_mut!((*RET));
_22 = 285718714381917843753442251024615908642_u128 << _44;
match Field::<u8>(Variant(_11.2, 0), 2) {
0 => bb27,
1 => bb2,
2 => bb43,
3 => bb44,
96 => bb46,
_ => bb45
}
}
bb43 = {
place!(Field::<i8>(Variant(_21, 0), 3)) = Field::<i8>(Variant(_11.2, 0), 1) << Field::<isize>(Variant(_21, 0), 2);
_14 = Field::<isize>(Variant(_21, 0), 2) ^ Field::<isize>(Variant(_21, 0), 2);
place!(Field::<u8>(Variant(_11.3, 0), 2)) = Field::<u8>(Variant(_11.2, 0), 2) - Field::<u8>(Variant(_11.2, 0), 2);
_29 = _11.0 as isize;
_2 = core::ptr::addr_of!(_7);
_3 = [(-15537_i16),(-5790_i16)];
_6 = Move(_12);
place!(Field::<i8>(Variant(_11.3, 0), 1)) = Field::<i8>(Variant(_21, 0), 3) + Field::<i8>(Variant(_11.2, 0), 1);
_11.3 = Adt18::Variant0 { fld0: _8,fld1: Field::<i8>(Variant(_21, 0), 3),fld2: Field::<u8>(Variant(_11.2, 0), 2) };
(*_2) = _19;
_12 = core::ptr::addr_of!(RET);
RET = core::ptr::addr_of_mut!(_3);
_20 = (-3078806902252457623_i64) as f64;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*RET) = [17288_i16,(-9061_i16)];
Goto(bb17)
}
bb44 = {
(*_6) = core::ptr::addr_of_mut!((*RET));
_11.2 = Move(_11.3);
place!(Field::<u16>(Variant(_21, 0), 5)) = 59065_u16;
place!(Field::<u8>(Variant(_11.2, 0), 2)) = !144_u8;
(*RET) = [14022_i16,(-26314_i16)];
(*RET) = [19726_i16,(-27538_i16)];
(*_32) = core::ptr::addr_of_mut!(_11.0);
_28 = -_11.1;
place!(Field::<u8>(Variant(_11.2, 0), 2)) = 120_u8 << _24;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = 715422384_i32 >> Field::<i8>(Variant(_11.2, 0), 1);
_8 = !Field::<u64>(Variant(_11.2, 0), 0);
_12 = core::ptr::addr_of!((*_12));
(*RET) = [15954_i16,32631_i16];
place!(Field::<char>(Variant(_21, 0), 1)) = _10;
_28 = _11.1 * _11.1;
_10 = Field::<char>(Variant(_21, 0), 1);
(*_12) = core::ptr::addr_of_mut!((*RET));
_11.0 = (-308937644_i32) >> Field::<u8>(Variant(_11.2, 0), 2);
(*_12) = core::ptr::addr_of_mut!((*RET));
_26 = Field::<char>(Variant(_21, 0), 1);
(*_4) = 379542097_i32 * 102823758_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
Goto(bb21)
}
bb45 = {
(*_6) = core::ptr::addr_of_mut!((*RET));
_28 = 18920_u16 as f32;
(*RET) = [(-26648_i16),(-9281_i16)];
_11.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_11.2, 0), 0),fld1: Field::<i8>(Variant(_11.2, 0), 1),fld2: 6_u8 };
(*_6) = core::ptr::addr_of_mut!((*RET));
Call(place!(Field::<u8>(Variant(_11.2, 0), 2)) = fn15(Move(_9), Move(_2), Move((*_6)), Move(_5), _11.0, Move(_6), Move(_4)), ReturnTo(bb16), UnwindUnreachable())
}
bb46 = {
_64 = _45 <= _23;
Call(_59 = core::intrinsics::fmaf64(_20, _20, _20), ReturnTo(bb47), UnwindUnreachable())
}
bb47 = {
_60 = 2509781675_u32 as f32;
(*RET) = [18967_i16,(-20468_i16)];
(*_4) = -_62;
_30 = core::ptr::addr_of!((*_2));
place!(Field::<char>(Variant(_21, 0), 1)) = _37;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_2) = [Field::<usize>(Variant(_21, 0), 4),_50];
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_2) = [Field::<usize>(Variant(_21, 0), 4),_24];
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_32) = core::ptr::addr_of_mut!((*_4));
(*RET) = [(-14933_i16),5556_i16];
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_2) = _19;
(*RET) = [(-15145_i16),30528_i16];
_73 = &_59;
_50 = _24 * _24;
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_12) = Move(_51.1);
(*_12) = core::ptr::addr_of_mut!(_3);
(*_4) = _62 + _62;
match _51.2 {
0 => bb36,
1 => bb39,
2 => bb46,
3 => bb48,
4 => bb49,
5 => bb50,
6 => bb51,
96 => bb53,
_ => bb52
}
}
bb48 = {
_9 = Move(_6);
(*RET) = [(-930_i16),(-15014_i16)];
(*RET) = [2242_i16,8086_i16];
(*RET) = [(-20267_i16),21614_i16];
_6 = core::ptr::addr_of!(RET);
(*RET) = [(-4917_i16),12023_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_5 = core::ptr::addr_of!((*_5));
(*RET) = [(-2733_i16),(-17366_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_8 = 2751723696_u32 as u64;
(*_5) = [7868914271802871815_usize,3_usize];
_1 = 2_usize as i128;
_7 = [2_usize,14188430110766111017_usize];
(*_5) = [5670810138619373980_usize,580672201590552605_usize];
(*_5) = [7655959788706643778_usize,7_usize];
(*RET) = [(-1835_i16),12795_i16];
_11.3 = Adt18::Variant0 { fld0: _8,fld1: 93_i8,fld2: 216_u8 };
(*RET) = [(-22601_i16),31892_i16];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_6) = core::ptr::addr_of_mut!((*RET));
_2 = core::ptr::addr_of!((*_5));
(*_5) = [0_usize,247929049963715571_usize];
(*RET) = [(-8631_i16),(-18882_i16)];
Goto(bb2)
}
bb49 = {
_8 = (*_4) as u64;
(*_4) = 873938786_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_6 = core::ptr::addr_of!((*_12));
(*_2) = [_24,_24];
(*_6) = core::ptr::addr_of_mut!((*RET));
_24 = Field::<usize>(Variant(_21, 0), 4) ^ Field::<usize>(Variant(_21, 0), 4);
_20 = _14 as f64;
(*RET) = [(-30653_i16),(-7386_i16)];
_3 = [19242_i16,21451_i16];
_30 = Move(_2);
(*_4) = 1195427735_i32 * (-987868336_i32);
_1 = !(-18626319980764415725699405966312464080_i128);
(*_4) = _20 as i32;
(*_4) = (-575836622_i32);
(*RET) = [(-10828_i16),(-13098_i16)];
(*RET) = [23617_i16,23352_i16];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_6) = core::ptr::addr_of_mut!((*RET));
(*_4) = !1469923336_i32;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_12));
(*_9) = core::ptr::addr_of_mut!((*RET));
Goto(bb20)
}
bb50 = {
(*RET) = [29754_i16,(-2950_i16)];
(*_4) = _26 as i32;
_35 = Field::<u16>(Variant(_21, 0), 5) | Field::<u16>(Variant(_21, 0), 5);
_1 = !79401687464123822658365409037542558862_i128;
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = -1190724767_i32;
(*RET) = [115_i16,13476_i16];
(*RET) = [(-31114_i16),(-32253_i16)];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_4) = (-1433002398_i32) << Field::<usize>(Variant(_21, 0), 4);
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_4) = !1144436110_i32;
(*_32) = core::ptr::addr_of_mut!((*_4));
_43 = Field::<char>(Variant(_21, 0), 1);
_6 = core::ptr::addr_of!(RET);
(*_4) = _1 as i32;
_26 = Field::<char>(Variant(_21, 0), 1);
_44 = !_14;
match Field::<u16>(Variant(_21, 0), 5) {
0 => bb12,
1 => bb14,
2 => bb11,
3 => bb4,
4 => bb22,
5 => bb23,
59065 => bb25,
_ => bb24
}
}
bb51 = {
(*RET) = [3921_i16,(-18056_i16)];
(*_5) = [2_usize,6_usize];
(*_6) = core::ptr::addr_of_mut!((*RET));
_20 = _8 as f64;
(*_5) = [6_usize,5622738500198828579_usize];
_19 = [9253081679449434302_usize,4198556605982166783_usize];
_11.0 = 401890413_i32 & 148083149_i32;
(*_5) = _19;
(*_5) = [16219420180409566838_usize,0_usize];
_22 = 256176561861821005788302559107904986896_u128;
(*_6) = core::ptr::addr_of_mut!((*RET));
_9 = core::ptr::addr_of!((*_6));
(*_6) = core::ptr::addr_of_mut!((*RET));
place!(Field::<u64>(Variant(_11.3, 0), 0)) = _8;
(*RET) = [20301_i16,26525_i16];
place!(Field::<i8>(Variant(_11.3, 0), 1)) = (-121_i8) << _11.0;
(*RET) = [(-15916_i16),(-20284_i16)];
(*_5) = [4_usize,274973731402242994_usize];
_2 = core::ptr::addr_of!((*_5));
(*RET) = [25131_i16,5729_i16];
(*_2) = [18234647041455552011_usize,6_usize];
(*_2) = [4_usize,4357899382296978099_usize];
Goto(bb11)
}
bb52 = {
_11.0 = 1337464918_i32 * 1158552943_i32;
(*_6) = core::ptr::addr_of_mut!(_3);
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [31994_i16,(-11144_i16)];
(*_6) = core::ptr::addr_of_mut!((*RET));
(*RET) = [(-5756_i16),19095_i16];
(*RET) = [4622_i16,28382_i16];
place!(Field::<u8>(Variant(_11.3, 0), 2)) = 35072_u16 as u8;
_5 = core::ptr::addr_of!(_7);
place!(Field::<u64>(Variant(_11.3, 0), 0)) = 212501897376665066_usize as u64;
(*RET) = [(-22630_i16),1002_i16];
(*_5) = [2_usize,4_usize];
(*_5) = [2683262115783211778_usize,4355170637143270661_usize];
(*_5) = [4_usize,16190585345275033549_usize];
(*RET) = [27225_i16,16605_i16];
(*_5) = [2_usize,17424650998842569905_usize];
Goto(bb4)
}
bb53 = {
(*_32) = core::ptr::addr_of_mut!((*_4));
_52.1 = core::ptr::addr_of_mut!((*_4));
_3 = [18059_i16,24784_i16];
(*_2) = _19;
_7 = [_50,_50];
(*RET) = [(-15352_i16),27898_i16];
(*_32) = core::ptr::addr_of_mut!((*_4));
(*_12) = core::ptr::addr_of_mut!((*RET));
(*_4) = _62 << Field::<i8>(Variant(_11.2, 0), 1);
(*_12) = core::ptr::addr_of_mut!((*RET));
_29 = (*_4) as isize;
_39 = [Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),_51.2,_51.2];
(*RET) = [20761_i16,(-19477_i16)];
_59 = _20;
(*_4) = !_62;
(*_2) = [_50,_50];
_1 = !_54;
(*_4) = _62;
_39 = [_51.2,Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),Field::<u8>(Variant(_11.2, 0), 2),_51.2];
place!(Field::<i8>(Variant(_11.2, 0), 1)) = !Field::<i8>(Variant(_21, 0), 3);
_56 = _26;
Goto(bb54)
}
bb54 = {
Call(_78 = dump_var(14_usize, 1_usize, Move(_1), 44_usize, Move(_44), 61_usize, Move(_61), 13_usize, Move(_13)), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Call(_78 = dump_var(14_usize, 10_usize, Move(_10), 55_usize, Move(_55), 50_usize, Move(_50), 37_usize, Move(_37)), ReturnTo(bb56), UnwindUnreachable())
}
bb56 = {
Call(_78 = dump_var(14_usize, 19_usize, Move(_19), 56_usize, Move(_56), 24_usize, Move(_24), 27_usize, Move(_27)), ReturnTo(bb57), UnwindUnreachable())
}
bb57 = {
Call(_78 = dump_var(14_usize, 26_usize, Move(_26), 39_usize, Move(_39), 79_usize, _79, 79_usize, _79), ReturnTo(bb58), UnwindUnreachable())
}
bb58 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn15(mut _1: *const *mut [i16; 2],mut _2: *const [usize; 2],mut _3: *mut [i16; 2],mut _4: *const [usize; 2],mut _5: i32,mut _6: *const *mut [i16; 2],mut _7: *mut i32) -> u8 {
mir! {
type RET = u8;
let _8: *mut *mut i32;
let _9: f64;
let _10: [u16; 2];
let _11: u128;
let _12: &'static mut (*mut i32, *mut [i16; 2], u8);
let _13: u8;
let _14: isize;
let _15: i128;
let _16: Adt23;
let _17: isize;
let _18: isize;
let _19: &'static mut &'static mut i8;
let _20: Adt18;
let _21: &'static Adt51;
let _22: f32;
let _23: char;
let _24: *mut [i16; 2];
let _25: i32;
let _26: *mut [i16; 2];
let _27: isize;
let _28: usize;
let _29: &'static Adt51;
let _30: char;
let _31: char;
let _32: char;
let _33: Adt57;
let _34: *mut &'static mut (i32, f32, Adt18, Adt18);
let _35: *mut i16;
let _36: u32;
let _37: i128;
let _38: &'static [u64; 1];
let _39: *const [usize; 2];
let _40: isize;
let _41: [u64; 1];
let _42: ((i32, f32, Adt18, Adt18),);
let _43: isize;
let _44: bool;
let _45: char;
let _46: ();
let _47: ();
{
_1 = core::ptr::addr_of!(_3);
_8 = core::ptr::addr_of_mut!(_7);
(*_8) = core::ptr::addr_of_mut!(_5);
(*_7) = '\u{5791b}' as i32;
_8 = core::ptr::addr_of_mut!((*_8));
(*_7) = (-2001937310_i32) ^ (-1408784975_i32);
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = 2456376662_u32 as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = -(-1387577199_i32);
(*_8) = core::ptr::addr_of_mut!((*_7));
_9 = (-132179877842660207744524144374695664500_i128) as f64;
(*_8) = core::ptr::addr_of_mut!((*_7));
_8 = core::ptr::addr_of_mut!((*_8));
(*_7) = 8044367447064764267_i64 as i32;
_10 = [3392_u16,5666_u16];
(*_7) = (-9223372036854775808_isize) as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = -(-1328588159_i32);
_11 = 23246516415696372061181382029839334922_u128;
match _11 {
0 => bb1,
1 => bb2,
2 => bb3,
3 => bb4,
4 => bb5,
5 => bb6,
23246516415696372061181382029839334922 => bb8,
_ => bb7
}
}
bb1 = {
Return()
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
RET = 244_u8;
(*_7) = _9 as i32;
(*_7) = 376962263_i32 >> RET;
(*_7) = 1372733990_i32 * 1578730630_i32;
_8 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!((*_8));
match _11 {
0 => bb7,
1 => bb2,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
23246516415696372061181382029839334922 => bb14,
_ => bb13
}
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
Return()
}
bb13 = {
Return()
}
bb14 = {
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = (-74_isize) as i32;
_4 = Move(_2);
(*_7) = 219198003_i32 ^ (-516664203_i32);
(*_7) = (-743457192_i32) << RET;
Call((*_7) = fn16(Move((*_1)), Move((*_8)), Move(_8), Move(_1), _11, Move(_6), Move(_4), RET, _9), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
RET = 91_u8;
_9 = 34335_u16 as f64;
_1 = core::ptr::addr_of!(_3);
_7 = core::ptr::addr_of_mut!(_5);
(*_7) = (-977328339_i32) ^ 29657916_i32;
(*_7) = (-369409144_i32) & (-1237485589_i32);
(*_7) = (-586973642_i32);
_13 = RET ^ RET;
_1 = core::ptr::addr_of!((*_1));
_9 = 4211021662749955545_usize as f64;
(*_7) = false as i32;
match RET {
0 => bb8,
1 => bb2,
2 => bb7,
3 => bb5,
4 => bb16,
91 => bb18,
_ => bb17
}
}
bb16 = {
Return()
}
bb17 = {
Return()
}
bb18 = {
_6 = Move(_1);
(*_7) = (-2013081390_i32);
(*_7) = 356893440_i32;
(*_7) = !342492287_i32;
_17 = !(-9223372036854775808_isize);
(*_7) = (-121418414466527555091730611044695989108_i128) as i32;
match _11 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb11,
4 => bb13,
23246516415696372061181382029839334922 => bb19,
_ => bb6
}
}
bb19 = {
(*_7) = 1566234913_u32 as i32;
(*_7) = 1102994588_i32;
Goto(bb20)
}
bb20 = {
(*_7) = 289616508_i32 & 1366379824_i32;
(*_7) = !(-1780216970_i32);
(*_7) = !136128682_i32;
(*_7) = -(-1608959059_i32);
_15 = 152700043483317293882874136851216149941_i128;
_1 = core::ptr::addr_of!(_3);
_10 = [62745_u16,51986_u16];
_8 = core::ptr::addr_of_mut!(_7);
(*_8) = core::ptr::addr_of_mut!((*_7));
Goto(bb21)
}
bb21 = {
_5 = _9 as i32;
(*_7) = 1130233546_i32 * 2077476753_i32;
RET = _13;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = (-1422734857_i32);
_10 = [37042_u16,27196_u16];
(*_7) = 1234850884_i32 - 46712744_i32;
(*_7) = 2742914987_u32 as i32;
(*_7) = 36550_u16 as i32;
Goto(bb22)
}
bb22 = {
(*_7) = (-38988439_i32) * 991391879_i32;
(*_7) = '\u{41f62}' as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = !(-90120873_i32);
(*_7) = 1224954058_i32 - 222761519_i32;
(*_7) = 1471773754_i32 | (-1080569107_i32);
_22 = 13214476119397081065_usize as f32;
(*_7) = _22 as i32;
_23 = '\u{9fa03}';
match _11 {
0 => bb20,
23246516415696372061181382029839334922 => bb23,
_ => bb9
}
}
bb23 = {
_6 = core::ptr::addr_of!((*_1));
_22 = RET as f32;
(*_7) = (-1444246432_i32) << _13;
(*_7) = (-550167189_i32) * 1520566295_i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = 34024_u16 as i32;
_16 = Adt23::Variant1 { fld0: 29730_u16,fld1: 2339611441_u32,fld2: 11010517557980002187_u64 };
_10 = [51557_u16,6222_u16];
(*_7) = _11 as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
_8 = core::ptr::addr_of_mut!((*_8));
(*_8) = core::ptr::addr_of_mut!((*_7));
_14 = 8423426561389993281_usize as isize;
place!(Field::<u16>(Variant(_16, 1), 0)) = 37859_u16 >> _15;
_18 = (-5029570599123467567_i64) as isize;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
Goto(bb24)
}
bb24 = {
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = _15 as i32;
_23 = '\u{354f6}';
(*_7) = -1766782450_i32;
_8 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!((*_8));
(*_8) = core::ptr::addr_of_mut!((*_7));
place!(Field::<u64>(Variant(_16, 1), 2)) = 1296642043539578459_u64 >> (*_7);
_30 = _23;
_30 = _23;
(*_7) = (-1753657930_i32);
(*_7) = RET as i32;
place!(Field::<u16>(Variant(_16, 1), 0)) = 8019_u16 + 28344_u16;
(*_7) = 6_usize as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
_8 = core::ptr::addr_of_mut!((*_8));
_1 = core::ptr::addr_of!((*_6));
_31 = _30;
RET = _13 << (*_7);
_30 = _31;
Goto(bb25)
}
bb25 = {
(*_8) = core::ptr::addr_of_mut!((*_7));
_27 = _17;
(*_7) = _11 as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = (-2102579016_i32) >> _14;
(*_7) = 212227061_i32 << _27;
place!(Field::<u32>(Variant(_16, 1), 1)) = 3487725040_u32 >> RET;
(*_8) = core::ptr::addr_of_mut!((*_7));
_13 = !RET;
_10 = [Field::<u16>(Variant(_16, 1), 0),Field::<u16>(Variant(_16, 1), 0)];
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!(_25);
(*_7) = _5;
_1 = Move(_6);
(*_8) = core::ptr::addr_of_mut!(_25);
(*_8) = core::ptr::addr_of_mut!((*_7));
_8 = core::ptr::addr_of_mut!((*_8));
(*_7) = _5 & _5;
_8 = core::ptr::addr_of_mut!((*_8));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = _5 << _27;
(*_8) = core::ptr::addr_of_mut!((*_7));
Goto(bb26)
}
bb26 = {
_8 = core::ptr::addr_of_mut!((*_8));
_11 = !246459438431674488792194655779063307647_u128;
_11 = 117623191766774953140637000393096218053_u128;
(*_8) = core::ptr::addr_of_mut!((*_7));
match _11 {
0 => bb18,
1 => bb24,
2 => bb3,
3 => bb21,
4 => bb27,
5 => bb28,
6 => bb29,
117623191766774953140637000393096218053 => bb31,
_ => bb30
}
}
bb27 = {
Return()
}
bb28 = {
_6 = Move(_1);
(*_7) = (-2013081390_i32);
(*_7) = 356893440_i32;
(*_7) = !342492287_i32;
_17 = !(-9223372036854775808_isize);
(*_7) = (-121418414466527555091730611044695989108_i128) as i32;
match _11 {
0 => bb1,
1 => bb7,
2 => bb8,
3 => bb11,
4 => bb13,
23246516415696372061181382029839334922 => bb19,
_ => bb6
}
}
bb29 = {
RET = 244_u8;
(*_7) = _9 as i32;
(*_7) = 376962263_i32 >> RET;
(*_7) = 1372733990_i32 * 1578730630_i32;
_8 = core::ptr::addr_of_mut!((*_8));
_8 = core::ptr::addr_of_mut!((*_8));
match _11 {
0 => bb7,
1 => bb2,
2 => bb9,
3 => bb10,
4 => bb11,
5 => bb12,
23246516415696372061181382029839334922 => bb14,
_ => bb13
}
}
bb30 = {
Return()
}
bb31 = {
_36 = !Field::<u32>(Variant(_16, 1), 1);
(*_7) = -_5;
(*_7) = _5;
(*_7) = _5 ^ _5;
_14 = _17 >> (*_7);
(*_7) = -_5;
_27 = Field::<u64>(Variant(_16, 1), 2) as isize;
(*_7) = _5 + _5;
(*_7) = _5;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = _5 + _5;
(*_8) = core::ptr::addr_of_mut!((*_7));
_8 = core::ptr::addr_of_mut!((*_8));
_17 = _14 >> _36;
_36 = 6_usize as u32;
_36 = Field::<u32>(Variant(_16, 1), 1);
_32 = _23;
(*_8) = core::ptr::addr_of_mut!((*_7));
RET = _13 - _13;
(*_8) = core::ptr::addr_of_mut!((*_7));
_11 = !23392213589009785638774684830086845590_u128;
_37 = _15 - _15;
_6 = Move(_1);
_27 = _17 & _17;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = _5;
match _15 {
0 => bb9,
1 => bb26,
2 => bb32,
3 => bb33,
4 => bb34,
152700043483317293882874136851216149941 => bb36,
_ => bb35
}
}
bb32 = {
Return()
}
bb33 = {
Return()
}
bb34 = {
Return()
}
bb35 = {
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = (-74_isize) as i32;
_4 = Move(_2);
(*_7) = 219198003_i32 ^ (-516664203_i32);
(*_7) = (-743457192_i32) << RET;
Call((*_7) = fn16(Move((*_1)), Move((*_8)), Move(_8), Move(_1), _11, Move(_6), Move(_4), RET, _9), ReturnTo(bb15), UnwindUnreachable())
}
bb36 = {
(*_7) = !_5;
_13 = RET - RET;
(*_8) = core::ptr::addr_of_mut!((*_7));
_41 = [Field::<u64>(Variant(_16, 1), 2)];
_43 = 2771984799129043985_i64 as isize;
_25 = -_5;
_6 = core::ptr::addr_of!(_26);
_14 = _37 as isize;
(*_8) = core::ptr::addr_of_mut!(_42.0.0);
_11 = 182673659978903054218427992418881589536_u128;
_1 = core::ptr::addr_of!((*_6));
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_7) = _9 as i32;
(*_8) = core::ptr::addr_of_mut!((*_7));
(*_8) = core::ptr::addr_of_mut!((*_7));
_5 = (*_7) - (*_7);
(*_7) = _22 as i32;
(*_7) = _25 >> Field::<u16>(Variant(_16, 1), 0);
_17 = -_27;
_40 = _27 ^ _17;
(*_8) = core::ptr::addr_of_mut!((*_7));
RET = _13 & _13;
_16 = Adt23::Variant0 { fld0: true,fld1: _31,fld2: _27,fld3: (-64_i8),fld4: 2_usize,fld5: 37713_u16 };
Goto(bb37)
}
bb37 = {
Call(_46 = dump_var(15_usize, 30_usize, Move(_30), 14_usize, Move(_14), 43_usize, Move(_43), 27_usize, Move(_27)), ReturnTo(bb38), UnwindUnreachable())
}
bb38 = {
Call(_46 = dump_var(15_usize, 41_usize, Move(_41), 31_usize, Move(_31), 5_usize, Move(_5), 23_usize, Move(_23)), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
Call(_46 = dump_var(15_usize, 40_usize, Move(_40), 47_usize, _47, 47_usize, _47, 47_usize, _47), ReturnTo(bb40), UnwindUnreachable())
}
bb40 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn16(mut _1: *mut [i16; 2],mut _2: *mut i32,mut _3: *mut *mut i32,mut _4: *const *mut [i16; 2],mut _5: u128,mut _6: *const *mut [i16; 2],mut _7: *const [usize; 2],mut _8: u8,mut _9: f64) -> i32 {
mir! {
type RET = i32;
let _10: f64;
let _11: *mut &'static mut (i32, f32, Adt18, Adt18);
let _12: u32;
let _13: u16;
let _14: i64;
let _15: [isize; 8];
let _16: char;
let _17: char;
let _18: [u8; 6];
let _19: i8;
let _20: [i8; 5];
let _21: [i128; 4];
let _22: bool;
let _23: *const &'static mut i8;
let _24: [u16; 2];
let _25: i16;
let _26: *mut [bool; 4];
let _27: &'static mut (*mut i32, *mut [i16; 2], u8);
let _28: f64;
let _29: &'static &'static f64;
let _30: &'static [i128; 4];
let _31: f64;
let _32: bool;
let _33: [isize; 8];
let _34: f64;
let _35: char;
let _36: u16;
let _37: char;
let _38: *mut [bool; 4];
let _39: isize;
let _40: &'static mut &'static mut i8;
let _41: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _42: isize;
let _43: *const [u128; 2];
let _44: f32;
let _45: [u8; 2];
let _46: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _47: i64;
let _48: bool;
let _49: &'static mut (Adt31, i32);
let _50: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _51: &'static mut (i32, f32, Adt18, Adt18);
let _52: f64;
let _53: &'static Adt51;
let _54: Adt51;
let _55: char;
let _56: f64;
let _57: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _58: i64;
let _59: u32;
let _60: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _61: i32;
let _62: Adt51;
let _63: &'static mut (*mut i32, *mut [i16; 2], u8);
let _64: &'static *mut [bool; 4];
let _65: i16;
let _66: f64;
let _67: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _68: i8;
let _69: i8;
let _70: char;
let _71: u32;
let _72: i128;
let _73: Adt18;
let _74: [u8; 6];
let _75: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _76: char;
let _77: ();
let _78: ();
{
_5 = 127857202506669365706314430849176344355_u128;
Goto(bb1)
}
bb1 = {
_5 = 91975321514029864914593485081126713097_u128 | 61440644591132564753554741526188134560_u128;
_4 = core::ptr::addr_of!(_1);
_6 = core::ptr::addr_of!((*_4));
RET = (-283648518_i32) + 1603403576_i32;
_8 = 82_u8;
_6 = core::ptr::addr_of!((*_4));
RET = (-1096802690_i32);
_2 = core::ptr::addr_of_mut!(RET);
(*_2) = 753687321_i32 >> _5;
_6 = core::ptr::addr_of!((*_6));
_5 = 340163667587727057170933949274065161310_u128 << (*_2);
(*_2) = 1502424880_i32;
(*_2) = (-9223372036854775808_isize) as i32;
(*_2) = 1764132565_i32 - (-291871586_i32);
_3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb2 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-1368937395_i32) & 56510716_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1825779308_i32 + 1272073251_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 746494069_i32;
(*_2) = _5 as i32;
(*_2) = 329365946_i32 << _5;
(*_2) = (-848184495_i32) | 646141314_i32;
(*_2) = 667161170_i32;
RET = 1218925268_i32 | (-1248827558_i32);
(*_2) = (-551377597_i32);
(*_2) = 16570_u16 as i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-9223372036854775808_isize) as i32;
Goto(bb3)
}
bb3 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_4 = core::ptr::addr_of!((*_4));
(*_2) = !(-612314058_i32);
_8 = 9_u8;
(*_3) = core::ptr::addr_of_mut!((*_2));
_14 = 6003999939335425093_i64;
(*_2) = _5 as i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = (-1848476537_i32) & 1624688056_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !2084754788_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_10 = (*_2) as f64;
_12 = 3035661227_u32;
(*_2) = 16386962092981422284_u64 as i32;
(*_2) = !1847325503_i32;
(*_2) = (-953379041_i32) >> _14;
(*_3) = core::ptr::addr_of_mut!((*_2));
RET = 1513603841_i32;
(*_2) = (-1573473871_i32);
(*_2) = (-376870052_i32) ^ 1256818463_i32;
_13 = (-2_i8) as u16;
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
match _12 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
3035661227 => bb12,
_ => bb11
}
}
bb4 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-1368937395_i32) & 56510716_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1825779308_i32 + 1272073251_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 746494069_i32;
(*_2) = _5 as i32;
(*_2) = 329365946_i32 << _5;
(*_2) = (-848184495_i32) | 646141314_i32;
(*_2) = 667161170_i32;
RET = 1218925268_i32 | (-1248827558_i32);
(*_2) = (-551377597_i32);
(*_2) = 16570_u16 as i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-9223372036854775808_isize) as i32;
Goto(bb3)
}
bb5 = {
_5 = 91975321514029864914593485081126713097_u128 | 61440644591132564753554741526188134560_u128;
_4 = core::ptr::addr_of!(_1);
_6 = core::ptr::addr_of!((*_4));
RET = (-283648518_i32) + 1603403576_i32;
_8 = 82_u8;
_6 = core::ptr::addr_of!((*_4));
RET = (-1096802690_i32);
_2 = core::ptr::addr_of_mut!(RET);
(*_2) = 753687321_i32 >> _5;
_6 = core::ptr::addr_of!((*_6));
_5 = 340163667587727057170933949274065161310_u128 << (*_2);
(*_2) = 1502424880_i32;
(*_2) = (-9223372036854775808_isize) as i32;
(*_2) = 1764132565_i32 - (-291871586_i32);
_3 = core::ptr::addr_of_mut!(_2);
Goto(bb2)
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
Return()
}
bb9 = {
Return()
}
bb10 = {
Return()
}
bb11 = {
Return()
}
bb12 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-161313053_i32);
(*_2) = 1286595500_i32 & 1608091792_i32;
_8 = 217_u8 << (*_2);
_14 = _8 as i64;
(*_2) = !(-540950050_i32);
_12 = 1350436485_u32 & 370850832_u32;
(*_2) = _13 as i32;
(*_2) = (-68_i8) as i32;
_16 = '\u{72344}';
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !1179677092_i32;
_9 = _10 - _10;
(*_3) = core::ptr::addr_of_mut!((*_2));
_17 = _16;
RET = 183244686_i32;
Goto(bb13)
}
bb13 = {
(*_2) = -(-1167746901_i32);
RET = 655308014_i32 - (-2033937638_i32);
_2 = core::ptr::addr_of_mut!((*_2));
_13 = 9021_i16 as u16;
_17 = _16;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1563364472_i32;
_15 = [9223372036854775807_isize,9223372036854775807_isize,(-58_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_9 = -_10;
_20 = [(-57_i8),91_i8,(-115_i8),44_i8,(-48_i8)];
(*_2) = 1798130240_i32;
(*_2) = (-450756193_i32) | 1272425340_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 30762468_i32 >> _8;
_16 = _17;
_15 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-18_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 1532556921_i32 >> _12;
Goto(bb14)
}
bb14 = {
_14 = (-4921124445041325129_i64) + 576032750864564190_i64;
(*_2) = 17085192061049734256_usize as i32;
(*_2) = (-1136473105_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_21 = [167032504167303796609630303288382024107_i128,71020131721631093398159679764043098436_i128,(-122326282211088578869597388188143535639_i128),98824361534445654818399945776892625513_i128];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_22 = !false;
_5 = 295582723798385747444247773091160227794_u128 << (*_2);
_8 = 57_u8;
_14 = _9 as i64;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_10 = _9 - _9;
(*_2) = _14 as i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_21 = [165402968160978253706852968605645909425_i128,151461491986836597146867737782817402919_i128,38223272802353201845996316802191021266_i128,(-38761689659447500167721947860137451765_i128)];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-977668395_i32) >> _14;
(*_2) = -1419711327_i32;
_12 = !2405251522_u32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
Goto(bb15)
}
bb15 = {
_4 = core::ptr::addr_of!((*_6));
Call((*_2) = fn17(Move((*_4)), Move((*_3)), _20), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
(*_3) = core::ptr::addr_of_mut!(RET);
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 1878923708_i32 - 729521809_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_25 = _12 as i16;
(*_2) = 1658287851_i32;
(*_2) = !(-643419689_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
_19 = -(-18_i8);
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb17)
}
bb17 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
(*_2) = 967325987_i32;
(*_2) = (-898225648_i32) & (-165210860_i32);
(*_2) = (-1075498692_i32) ^ (-298706318_i32);
(*_2) = _16 as i32;
(*_2) = -42005755_i32;
_20 = [_19,_19,_19,_19,_19];
(*_2) = (-1453619617_i32);
_9 = _10 + _10;
_14 = !(-7587021390192168607_i64);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_28 = _5 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = _12 as i32;
_10 = -_9;
_22 = false;
(*_2) = _12 as i32;
match _8 {
0 => bb10,
1 => bb14,
2 => bb8,
3 => bb13,
4 => bb5,
5 => bb11,
6 => bb16,
57 => bb19,
_ => bb18
}
}
bb18 = {
(*_3) = core::ptr::addr_of_mut!(RET);
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 1878923708_i32 - 729521809_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_25 = _12 as i16;
(*_2) = 1658287851_i32;
(*_2) = !(-643419689_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
_19 = -(-18_i8);
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb17)
}
bb19 = {
_24 = [_13,_13];
_16 = _17;
(*_2) = (-2114232598_i32) >> _13;
(*_2) = (-1139731948_i32) & (-107692136_i32);
(*_2) = 17249011830319254897_usize as i32;
_24 = [_13,_13];
(*_2) = (-1560614497_i32) + 499542745_i32;
_5 = (-59373554202981240568142236261888608856_i128) as u128;
(*_3) = core::ptr::addr_of_mut!((*_2));
_19 = (-47_i8) | (-93_i8);
_12 = 1458017085_u32;
_12 = 2299890316_u32;
_25 = 3553_i16 >> (*_2);
(*_3) = core::ptr::addr_of_mut!((*_2));
_15 = [9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),8_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-6_isize)];
_24 = [_13,_13];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = (-2096118216_i32);
_14 = (-5732065300295760822_i64);
match (*_2) {
0 => bb20,
340282366920938463463374607429672093240 => bb22,
_ => bb21
}
}
bb20 = {
(*_2) = -(-1167746901_i32);
RET = 655308014_i32 - (-2033937638_i32);
_2 = core::ptr::addr_of_mut!((*_2));
_13 = 9021_i16 as u16;
_17 = _16;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1563364472_i32;
_15 = [9223372036854775807_isize,9223372036854775807_isize,(-58_isize),9223372036854775807_isize,(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize)];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_9 = -_10;
_20 = [(-57_i8),91_i8,(-115_i8),44_i8,(-48_i8)];
(*_2) = 1798130240_i32;
(*_2) = (-450756193_i32) | 1272425340_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 30762468_i32 >> _8;
_16 = _17;
_15 = [9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,9223372036854775807_isize,(-18_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize)];
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 1532556921_i32 >> _12;
Goto(bb14)
}
bb21 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
(*_2) = 967325987_i32;
(*_2) = (-898225648_i32) & (-165210860_i32);
(*_2) = (-1075498692_i32) ^ (-298706318_i32);
(*_2) = _16 as i32;
(*_2) = -42005755_i32;
_20 = [_19,_19,_19,_19,_19];
(*_2) = (-1453619617_i32);
_9 = _10 + _10;
_14 = !(-7587021390192168607_i64);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_28 = _5 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = _12 as i32;
_10 = -_9;
_22 = false;
(*_2) = _12 as i32;
match _8 {
0 => bb10,
1 => bb14,
2 => bb8,
3 => bb13,
4 => bb5,
5 => bb11,
6 => bb16,
57 => bb19,
_ => bb18
}
}
bb22 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_30 = &_21;
(*_2) = _19 as i32;
(*_2) = 1147745142_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_21 = [(-25204290337815355294293071271091308947_i128),77966732853002513749064339939952326485_i128,(-17619812124224341290405639928343535780_i128),122403004493200922301132091408144873637_i128];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = _5 as i32;
Goto(bb23)
}
bb23 = {
_16 = _17;
_25 = !(-25871_i16);
_12 = !3894237931_u32;
(*_2) = 619213573_i32 & 825706634_i32;
_32 = (*_2) < (*_2);
(*_3) = core::ptr::addr_of_mut!((*_2));
_20 = [_19,_19,_19,_19,_19];
(*_3) = core::ptr::addr_of_mut!((*_2));
_17 = _16;
(*_2) = !313574690_i32;
Goto(bb24)
}
bb24 = {
_5 = !142217136765113690722067249021296321363_u128;
(*_3) = core::ptr::addr_of_mut!((*_2));
_9 = _10 + _28;
(*_2) = 1259182848_i32 - 441195391_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_15 = [(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,112_isize,(-9223372036854775808_isize),(-44_isize)];
(*_2) = 1813152309_i32 & (-712960794_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_22 = _32;
(*_2) = (-595577220_i32) - 2116575025_i32;
(*_2) = 1948367997_i32 * (-1616949721_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = -(-1148177513_i32);
(*_2) = (-1576592189_i32) ^ 1875748699_i32;
(*_2) = (-882150639_i32) + 1812551430_i32;
(*_2) = 451002628_i32 * 933043937_i32;
_15 = [9223372036854775807_isize,(-9223372036854775808_isize),(-72_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-9223372036854775808_isize),(-54_isize),(-71_isize)];
(*_2) = (-557762443_i32) - 526875668_i32;
(*_2) = (-250337183_i32) + (-551695619_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !2108642242_i32;
match _14 {
0 => bb15,
1 => bb7,
340282366920938463457642542131472450634 => bb26,
_ => bb25
}
}
bb25 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
(*_2) = 967325987_i32;
(*_2) = (-898225648_i32) & (-165210860_i32);
(*_2) = (-1075498692_i32) ^ (-298706318_i32);
(*_2) = _16 as i32;
(*_2) = -42005755_i32;
_20 = [_19,_19,_19,_19,_19];
(*_2) = (-1453619617_i32);
_9 = _10 + _10;
_14 = !(-7587021390192168607_i64);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_28 = _5 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = _12 as i32;
_10 = -_9;
_22 = false;
(*_2) = _12 as i32;
match _8 {
0 => bb10,
1 => bb14,
2 => bb8,
3 => bb13,
4 => bb5,
5 => bb11,
6 => bb16,
57 => bb19,
_ => bb18
}
}
bb26 = {
_5 = 236109509967142080376462885032140933021_u128 ^ 150228205164149864591961283591029199734_u128;
_35 = _17;
_17 = _16;
_5 = 321579280653474901486230612088925362057_u128 ^ 72673921972881572962821315244118392144_u128;
_31 = (-9223372036854775808_isize) as f64;
_25 = !(-19708_i16);
_13 = 34249_u16 >> (*_2);
Goto(bb27)
}
bb27 = {
_32 = !_22;
(*_2) = _5 as i32;
match _8 {
57 => bb29,
_ => bb28
}
}
bb28 = {
Return()
}
bb29 = {
(*_2) = 465799505_i32 * (-1438481356_i32);
_42 = 9223372036854775807_isize ^ (-9223372036854775808_isize);
(*_2) = 1109806340_i32;
_2 = core::ptr::addr_of_mut!((*_2));
_36 = !_13;
(*_3) = core::ptr::addr_of_mut!((*_2));
_15 = [_42,_42,_42,_42,_42,_42,_42,_42];
(*_2) = (-701387437_i32) + 1917150383_i32;
_21 = [52998640158024816853454776615741662125_i128,(-22532654863440235018647285555826925038_i128),(-168701400397899011979942885482414618644_i128),(-63480181419598353708998293804699689371_i128)];
_18 = [_8,_8,_8,_8,_8,_8];
_18 = [_8,_8,_8,_8,_8,_8];
(*_2) = (-1579689421_i32) & (-802070080_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_13 = _36 << (*_2);
_17 = _35;
Call(_10 = core::intrinsics::fmaf64(_9, _28, _31), ReturnTo(bb30), UnwindUnreachable())
}
bb30 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !(-1875093887_i32);
_47 = -_14;
Goto(bb31)
}
bb31 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_31 = -_28;
(*_2) = _35 as i32;
_3 = core::ptr::addr_of_mut!((*_3));
_24 = [_13,_13];
_5 = 58361165864097889581663917851854405657_u128 ^ 27616424157631635903272283029635188795_u128;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1221958707_i32 >> _42;
_13 = _36;
_13 = _36 << (*_2);
_13 = _36 - _36;
_39 = _12 as isize;
(*_3) = core::ptr::addr_of_mut!((*_2));
_14 = _47 << (*_2);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 836862618_i32 & 1522397937_i32;
(*_2) = !(-1867316573_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_20 = [_19,_19,_19,_19,_19];
_17 = _35;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 684655423_i32;
_31 = _10;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_50.1 = core::ptr::addr_of!(_21);
match (*_2) {
684655423 => bb32,
_ => bb8
}
}
bb32 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = 1952354850_i32 & 1673707682_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !(-447941905_i32);
_37 = _16;
(*_3) = core::ptr::addr_of_mut!((*_2));
_20 = [_19,_19,_19,_19,_19];
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_48 = (*_2) > (*_2);
(*_2) = 683020929_i32 | (-571049950_i32);
(*_2) = _25 as i32;
_25 = _8 as i16;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
RET = 181538185_i32 ^ 701889866_i32;
_20 = [_19,_19,_19,_19,_19];
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb33)
}
bb33 = {
_42 = _39 & _39;
_19 = (-7_i8) + 52_i8;
_55 = _35;
(*_2) = 408674696_i32 >> _13;
(*_3) = core::ptr::addr_of_mut!((*_2));
_18 = [_8,_8,_8,_8,_8,_8];
_42 = !_39;
_44 = _5 as f32;
_28 = -_10;
_47 = _14;
_16 = _37;
(*_2) = 1297885393_i32 - (-1812290444_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_52 = -_9;
(*_2) = (-2097897251_i32) * 1449823194_i32;
_57.0.2 = _8 + _8;
_34 = _9 - _10;
_60.1 = core::ptr::addr_of!(_21);
_50.2 = Move(_7);
Goto(bb34)
}
bb34 = {
(*_2) = 989040210_i32 ^ 1576546098_i32;
_37 = _35;
(*_2) = (-84741999693706132776207698949559506076_i128) as i32;
_44 = _13 as f32;
(*_2) = -(-622297425_i32);
(*_2) = (-2136803731_i32);
_17 = _37;
_59 = !_12;
Goto(bb35)
}
bb35 = {
_60.1 = core::ptr::addr_of!(_21);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_33 = [_39,_39,_39,_42,_39,_42,_42,_42];
_16 = _37;
_60 = (Move(_50.1), Move(_50.1), Move(_50.2));
_50.1 = core::ptr::addr_of!(_21);
_48 = (*_2) == (*_2);
_50 = (Move(_60.1), Move(_60.1), Move(_60.2));
_60.1 = Move(_60.0);
(*_2) = (-1875270384_i32) & (-41624220_i32);
_18 = [_57.0.2,_57.0.2,_8,_57.0.2,_8,_8];
_17 = _16;
(*_3) = core::ptr::addr_of_mut!((*_2));
_15 = [_39,_42,_39,_39,_42,_42,_42,_42];
_59 = !_12;
Call(_65 = core::intrinsics::bswap(_25), ReturnTo(bb36), UnwindUnreachable())
}
bb36 = {
_6 = Move(_4);
_57.1 = Adt48::Variant2 { fld0: _44,fld1: _19 };
_60.1 = Move(_50.0);
_15 = _33;
(*_2) = (-440216695_i32);
_9 = _28 - _34;
_17 = _16;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!(_61);
(*_2) = _9 as i32;
(*_2) = RET;
_60.2 = Move(_50.2);
match (*_2) {
0 => bb4,
1 => bb37,
340282366920938463463374607431327994761 => bb39,
_ => bb38
}
}
bb37 = {
Return()
}
bb38 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !(-1875093887_i32);
_47 = -_14;
Goto(bb31)
}
bb39 = {
_45 = [_57.0.2,_8];
(*_3) = core::ptr::addr_of_mut!(RET);
_24 = [_36,_13];
_35 = _55;
(*_3) = core::ptr::addr_of_mut!((*_2));
RET = _61 & _61;
(*_2) = _61;
_50.2 = Move(_60.2);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = _61;
_60.2 = Move(_50.2);
_33 = _15;
(*_2) = !_61;
_4 = core::ptr::addr_of!(_1);
_55 = _37;
_31 = -_28;
_67 = (Move(_50.1), Move(_50.1), Move(_60.2));
_47 = _14 ^ _14;
_22 = _48;
(*_2) = -_61;
_7 = Move(_67.2);
Goto(bb40)
}
bb40 = {
_4 = core::ptr::addr_of!((*_4));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
place!(Field::<f32>(Variant(_57.1, 2), 0)) = _44;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !_61;
Goto(bb41)
}
bb41 = {
_28 = _52;
_9 = -_10;
_50.1 = core::ptr::addr_of!(_21);
_33 = _15;
_60.0 = core::ptr::addr_of!(_21);
_67.2 = Move(_7);
(*_2) = _25 as i32;
_50 = (Move(_67.0), Move(_60.0), Move(_67.2));
_10 = _34 - _9;
_58 = _14;
(*_3) = core::ptr::addr_of_mut!((*_2));
_67.0 = Move(_50.1);
_50.1 = core::ptr::addr_of!(_21);
(*_2) = !_61;
(*_3) = core::ptr::addr_of_mut!((*_2));
_35 = _55;
_19 = Field::<i8>(Variant(_57.1, 2), 1) + Field::<i8>(Variant(_57.1, 2), 1);
_17 = _35;
_14 = _58 ^ _58;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = _61;
_16 = _55;
_65 = _25 * _25;
_69 = -_19;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = _61;
_36 = _13 ^ _13;
_66 = _10 + _10;
_67.1 = core::ptr::addr_of!(_21);
_57.0.0 = core::ptr::addr_of_mut!((*_2));
match (*_2) {
0 => bb42,
1 => bb43,
340282366920938463463374607431327994761 => bb45,
_ => bb44
}
}
bb42 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_4 = core::ptr::addr_of!((*_4));
(*_2) = !(-612314058_i32);
_8 = 9_u8;
(*_3) = core::ptr::addr_of_mut!((*_2));
_14 = 6003999939335425093_i64;
(*_2) = _5 as i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = (-1848476537_i32) & 1624688056_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !2084754788_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_10 = (*_2) as f64;
_12 = 3035661227_u32;
(*_2) = 16386962092981422284_u64 as i32;
(*_2) = !1847325503_i32;
(*_2) = (-953379041_i32) >> _14;
(*_3) = core::ptr::addr_of_mut!((*_2));
RET = 1513603841_i32;
(*_2) = (-1573473871_i32);
(*_2) = (-376870052_i32) ^ 1256818463_i32;
_13 = (-2_i8) as u16;
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
match _12 {
0 => bb4,
1 => bb5,
2 => bb6,
3 => bb7,
4 => bb8,
5 => bb9,
6 => bb10,
3035661227 => bb12,
_ => bb11
}
}
bb43 = {
Return()
}
bb44 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_2) = !(-1875093887_i32);
_47 = -_14;
Goto(bb31)
}
bb45 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_37 = _17;
(*_3) = core::ptr::addr_of_mut!((*_2));
_9 = _66;
_65 = _39 as i16;
_10 = _52 * _34;
_9 = _59 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_60.2 = Move(_50.2);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = Move(_57.0.0);
_48 = !_32;
match _61 {
0 => bb31,
1 => bb12,
2 => bb32,
3 => bb46,
4 => bb47,
340282366920938463463374607431327994761 => bb49,
_ => bb48
}
}
bb46 = {
(*_3) = core::ptr::addr_of_mut!(RET);
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 1878923708_i32 - 729521809_i32;
(*_3) = core::ptr::addr_of_mut!((*_2));
_25 = _12 as i16;
(*_2) = 1658287851_i32;
(*_2) = !(-643419689_i32);
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
_19 = -(-18_i8);
(*_3) = core::ptr::addr_of_mut!((*_2));
_2 = core::ptr::addr_of_mut!((*_2));
Goto(bb17)
}
bb47 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
(*_2) = 967325987_i32;
(*_2) = (-898225648_i32) & (-165210860_i32);
(*_2) = (-1075498692_i32) ^ (-298706318_i32);
(*_2) = _16 as i32;
(*_2) = -42005755_i32;
_20 = [_19,_19,_19,_19,_19];
(*_2) = (-1453619617_i32);
_9 = _10 + _10;
_14 = !(-7587021390192168607_i64);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_28 = _5 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = _12 as i32;
_10 = -_9;
_22 = false;
(*_2) = _12 as i32;
match _8 {
0 => bb10,
1 => bb14,
2 => bb8,
3 => bb13,
4 => bb5,
5 => bb11,
6 => bb16,
57 => bb19,
_ => bb18
}
}
bb48 = {
(*_3) = core::ptr::addr_of_mut!((*_2));
_24 = [_13,_13];
(*_2) = 967325987_i32;
(*_2) = (-898225648_i32) & (-165210860_i32);
(*_2) = (-1075498692_i32) ^ (-298706318_i32);
(*_2) = _16 as i32;
(*_2) = -42005755_i32;
_20 = [_19,_19,_19,_19,_19];
(*_2) = (-1453619617_i32);
_9 = _10 + _10;
_14 = !(-7587021390192168607_i64);
(*_3) = core::ptr::addr_of_mut!((*_2));
(*_3) = core::ptr::addr_of_mut!((*_2));
_28 = _5 as f64;
(*_3) = core::ptr::addr_of_mut!((*_2));
_3 = core::ptr::addr_of_mut!((*_3));
(*_2) = _12 as i32;
_10 = -_9;
_22 = false;
(*_2) = _12 as i32;
match _8 {
0 => bb10,
1 => bb14,
2 => bb8,
3 => bb13,
4 => bb5,
5 => bb11,
6 => bb16,
57 => bb19,
_ => bb18
}
}
bb49 = {
(*_3) = core::ptr::addr_of_mut!(_61);
_2 = core::ptr::addr_of_mut!((*_2));
_67.2 = Move(_60.2);
_6 = core::ptr::addr_of!(_1);
_69 = _19 & _19;
_21 = [36179275063139750739842377638022328242_i128,(-86641475198003881245341857784246929507_i128),(-48022430908900266331258002527784058792_i128),(-12440390708019021560916559023006595213_i128)];
_71 = !_59;
(*_2) = !RET;
_72 = !166590711315378688713368319366027979712_i128;
_57.0.2 = !_8;
_68 = _69 * Field::<i8>(Variant(_57.1, 2), 1);
Goto(bb50)
}
bb50 = {
Call(_77 = dump_var(16_usize, 5_usize, Move(_5), 69_usize, Move(_69), 8_usize, Move(_8), 15_usize, Move(_15)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_77 = dump_var(16_usize, 39_usize, Move(_39), 37_usize, Move(_37), 45_usize, Move(_45), 17_usize, Move(_17)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_77 = dump_var(16_usize, 71_usize, Move(_71), 21_usize, Move(_21), 68_usize, Move(_68), 24_usize, Move(_24)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_77 = dump_var(16_usize, 25_usize, Move(_25), 32_usize, Move(_32), 13_usize, Move(_13), 48_usize, Move(_48)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_77 = dump_var(16_usize, 20_usize, Move(_20), 78_usize, _78, 78_usize, _78, 78_usize, _78), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn17(mut _1: *mut [i16; 2],mut _2: *mut i32,mut _3: [i8; 5]) -> i32 {
mir! {
type RET = i32;
let _4: char;
let _5: ([bool; 4], (i32, f32, Adt18, Adt18));
let _6: Adt66;
let _7: *const &'static mut i8;
let _8: [u64; 1];
let _9: isize;
let _10: char;
let _11: i16;
let _12: char;
let _13: [i128; 4];
let _14: i64;
let _15: i128;
let _16: f32;
let _17: isize;
let _18: *mut i32;
let _19: isize;
let _20: &'static mut *mut *mut i32;
let _21: isize;
let _22: i8;
let _23: &'static [u64; 1];
let _24: f64;
let _25: *const [u128; 2];
let _26: [char; 2];
let _27: *mut *mut i32;
let _28: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _29: isize;
let _30: *const [i128; 4];
let _31: [i8; 5];
let _32: i16;
let _33: f64;
let _34: isize;
let _35: *mut [bool; 4];
let _36: f64;
let _37: i16;
let _38: &'static [u64; 1];
let _39: i8;
let _40: i32;
let _41: ((*const *mut [i16; 2], i8, usize), Adt31);
let _42: &'static f64;
let _43: i8;
let _44: isize;
let _45: f64;
let _46: isize;
let _47: *mut (&'static mut *mut [u64; 1], u128);
let _48: isize;
let _49: &'static mut (*mut i32, *mut [i16; 2], u8);
let _50: (i128,);
let _51: f32;
let _52: [u8; 5];
let _53: &'static mut *mut [u64; 1];
let _54: (Adt31, i32);
let _55: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _56: *mut &'static *mut [bool; 4];
let _57: isize;
let _58: f32;
let _59: (i16,);
let _60: i64;
let _61: ((*const *mut [i16; 2], i8, usize), Adt31);
let _62: &'static *mut [i16; 2];
let _63: i32;
let _64: f32;
let _65: isize;
let _66: &'static *mut [bool; 4];
let _67: Adt18;
let _68: (i64, *mut i32, &'static mut *mut [u64; 1]);
let _69: &'static [u64; 1];
let _70: isize;
let _71: *const [u128; 2];
let _72: u16;
let _73: u16;
let _74: char;
let _75: u16;
let _76: Adt48;
let _77: isize;
let _78: *mut &'static *mut [bool; 4];
let _79: char;
let _80: (*mut i32, *mut [i16; 2], u8);
let _81: f32;
let _82: *const [u128; 2];
let _83: [usize; 5];
let _84: (*const [i128; 4], *const [i128; 4], *const [usize; 2]);
let _85: isize;
let _86: &'static &'static f64;
let _87: char;
let _88: isize;
let _89: [u64; 1];
let _90: char;
let _91: Adt31;
let _92: char;
let _93: f64;
let _94: isize;
let _95: isize;
let _96: f32;
let _97: isize;
let _98: [isize; 8];
let _99: u128;
let _100: (i128,);
let _101: *mut [i16; 2];
let _102: &'static [i128; 4];
let _103: isize;
let _104: isize;
let _105: i8;
let _106: bool;
let _107: ();
let _108: ();
{
_3 = [95_i8,(-76_i8),(-113_i8),(-18_i8),99_i8];
_2 = core::ptr::addr_of_mut!(RET);
_2 = core::ptr::addr_of_mut!((*_2));
(*_2) = 555278082_i32;
(*_2) = -(-1685321129_i32);
Goto(bb1)
}
bb1 = {
(*_2) = 644398156_u32 as i32;
(*_2) = 280376183_i32 ^ 1580932990_i32;
(*_2) = (-1000739157_i32);
match (*_2) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607430767472299 => bb7,
_ => bb6
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
(*_2) = (-915359290_i32) | 720229525_i32;
(*_2) = 1336024881_i32 + (-667879540_i32);
(*_2) = !1650793254_i32;
(*_2) = !(-1149483095_i32);
(*_2) = 44219_u16 as i32;
(*_2) = 7561527541647830582_i64 as i32;
(*_2) = 1084104541074371869_u64 as i32;
(*_2) = -(-56519018_i32);
(*_2) = 6689720828565893031_i64 as i32;
(*_2) = !(-883262683_i32);
(*_2) = 2078315162_i32 * 297081555_i32;
_4 = '\u{c2a3b}';
(*_2) = 38485783266213199565872772794589607927_u128 as i32;
(*_2) = (-1204303491_i32) & 164898043_i32;
_5.1.1 = 29374_i16 as f32;
_5.1.3 = Adt18::Variant0 { fld0: 15303319530106824517_u64,fld1: (-97_i8),fld2: 35_u8 };
place!(Field::<i8>(Variant(_5.1.3, 0), 1)) = (-122_i8);
match Field::<i8>(Variant(_5.1.3, 0), 1) {
0 => bb4,
1 => bb8,
2 => bb9,
340282366920938463463374607431768211334 => bb11,
_ => bb10
}
}
bb8 = {
Return()
}
bb9 = {
(*_2) = 644398156_u32 as i32;
(*_2) = 280376183_i32 ^ 1580932990_i32;
(*_2) = (-1000739157_i32);
match (*_2) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607430767472299 => bb7,
_ => bb6
}
}
bb10 = {
Return()
}
bb11 = {
(*_2) = 889072143_i32;
(*_2) = !(-333457169_i32);
_9 = 17154_u16 as isize;
_5.0 = [false,true,false,false];
(*_2) = 20910_u16 as i32;
_5.1.2 = Adt18::Variant0 { fld0: 10357569767982066646_u64,fld1: Field::<i8>(Variant(_5.1.3, 0), 1),fld2: 3_u8 };
(*_2) = 495335401_i32 | (-1804223015_i32);
(*_2) = -1308210142_i32;
place!(Field::<i8>(Variant(_5.1.3, 0), 1)) = !Field::<i8>(Variant(_5.1.2, 0), 1);
_11 = !(-25324_i16);
(*_2) = 520056185_i32;
(*_2) = -1434013387_i32;
_5.1.0 = !(*_2);
(*_2) = !_5.1.0;
_5.1.2 = Adt18::Variant1 { fld0: 16332828347560114090_u64,fld1: 16206262116829270380_usize,fld2: _5.1.1,fld3: 21138_u16,fld4: 9117180352154492870660291224672424858_u128,fld5: (*_2),fld6: _5.0 };
_5.1.3 = Adt18::Variant0 { fld0: 12675152958937512635_u64,fld1: 13_i8,fld2: 31_u8 };
_10 = _4;
Goto(bb12)
}
bb12 = {
(*_2) = _4 as i32;
_3 = [(-28_i8),(-125_i8),(-94_i8),(-42_i8),(-114_i8)];
_9 = (-9223372036854775808_isize);
_12 = _10;
_8 = [8016705848460304748_u64];
place!(Field::<u64>(Variant(_5.1.2, 1), 0)) = 14378370293696683417_u64 | 7024018494352432096_u64;
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 1), 0),fld1: 2230757458174888951_usize,fld2: Field::<f32>(Variant(_5.1.2, 1), 2),fld3: 21193_u16,fld4: 92789377537017777340092192180402225202_u128,fld5: (*_2),fld6: _5.0 };
(*_2) = !Field::<i32>(Variant(_5.1.3, 1), 5);
(*_2) = !_5.1.0;
place!(Field::<f32>(Variant(_5.1.2, 1), 2)) = (-3894347771477461354_i64) as f32;
(*_2) = _5.1.0 >> Field::<u64>(Variant(_5.1.3, 1), 0);
place!(Field::<u64>(Variant(_5.1.2, 1), 0)) = Field::<u64>(Variant(_5.1.3, 1), 0) << (*_2);
match _9 {
0 => bb13,
340282366920938463454151235394913435648 => bb15,
_ => bb14
}
}
bb13 = {
Return()
}
bb14 = {
(*_2) = 644398156_u32 as i32;
(*_2) = 280376183_i32 ^ 1580932990_i32;
(*_2) = (-1000739157_i32);
match (*_2) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607430767472299 => bb7,
_ => bb6
}
}
bb15 = {
(*_2) = Field::<i32>(Variant(_5.1.2, 1), 5) & _5.1.0;
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5) >> Field::<i32>(Variant(_5.1.3, 1), 5);
_5.1.1 = -Field::<f32>(Variant(_5.1.2, 1), 2);
(*_2) = _5.1.0;
Call((*_2) = fn18(), ReturnTo(bb16), UnwindUnreachable())
}
bb16 = {
_13 = [162802169834733053884522521622019189623_i128,(-169647194088156373851729333679789421013_i128),(-33796070586817367053523282638792491769_i128),(-39942226360155716116842700597609581313_i128)];
place!(Field::<u128>(Variant(_5.1.3, 1), 4)) = 61993811108649125936535315163739843460_u128;
_2 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_5.1.3, 1), 5)));
_2 = core::ptr::addr_of_mut!((*_2));
place!(Field::<f32>(Variant(_5.1.2, 1), 2)) = -Field::<f32>(Variant(_5.1.3, 1), 2);
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 1), 0),fld1: 4591930918797339730_usize,fld2: _5.1.1,fld3: 11656_u16,fld4: 188634723154612463894508403436241902347_u128,fld5: RET,fld6: Field::<[bool; 4]>(Variant(_5.1.2, 1), 6) };
_14 = 478494587122427518_i64 & (-1530093354411737295_i64);
place!(Field::<u128>(Variant(_5.1.2, 1), 4)) = !221822683309251616167404637000802925157_u128;
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = 1_usize;
place!(Field::<usize>(Variant(_5.1.2, 1), 1)) = _14 as usize;
_5.1.1 = Field::<f32>(Variant(_5.1.2, 1), 2);
_5.1.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_5.1.2, 1), 0),fld1: 48_i8,fld2: 120_u8 };
_9 = (-9223372036854775808_isize) * 2_isize;
place!(Field::<u128>(Variant(_5.1.2, 1), 4)) = 51448101451953554519403465132103802833_u128 * 11048830066964058617144669228111617178_u128;
place!(Field::<u16>(Variant(_5.1.2, 1), 3)) = (-55517224182918648862605347777576080720_i128) as u16;
place!(Field::<u8>(Variant(_5.1.3, 0), 2)) = _9 as u8;
_17 = _9 * _9;
place!(Field::<i8>(Variant(_5.1.3, 0), 1)) = -35_i8;
RET = Field::<i32>(Variant(_5.1.2, 1), 5) - _5.1.0;
_15 = -118056870136266299603788002735464847727_i128;
_16 = _11 as f32;
place!(Field::<u64>(Variant(_5.1.2, 1), 0)) = !Field::<u64>(Variant(_5.1.3, 0), 0);
_4 = _12;
_5.1.0 = 1309544794_u32 as i32;
Goto(bb17)
}
bb17 = {
_14 = Field::<u16>(Variant(_5.1.2, 1), 3) as i64;
_9 = _17;
_5.0 = [true,false,true,false];
place!(Field::<u128>(Variant(_5.1.2, 1), 4)) = 16849430038404292620827089574559333066_u128 << _14;
Goto(bb18)
}
bb18 = {
place!(Field::<f32>(Variant(_5.1.2, 1), 2)) = _16 + _16;
_9 = !_17;
_22 = Field::<i8>(Variant(_5.1.3, 0), 1);
_14 = -(-2865773554049101143_i64);
_16 = Field::<f32>(Variant(_5.1.2, 1), 2) + _5.1.1;
place!(Field::<f32>(Variant(_5.1.2, 1), 2)) = _5.1.1 - _16;
place!(Field::<u8>(Variant(_5.1.3, 0), 2)) = 245_u8;
place!(Field::<f32>(Variant(_5.1.2, 1), 2)) = -_5.1.1;
_5.1.2 = Move(_5.1.3);
_2 = core::ptr::addr_of_mut!(_5.1.0);
_27 = core::ptr::addr_of_mut!(_28.0.0);
_22 = Field::<u64>(Variant(_5.1.2, 0), 0) as i8;
(*_2) = _9 as i32;
(*_27) = core::ptr::addr_of_mut!((*_2));
(*_27) = core::ptr::addr_of_mut!((*_2));
_3 = [Field::<i8>(Variant(_5.1.2, 0), 1),_22,_22,_22,_22];
_20 = &mut _27;
Goto(bb19)
}
bb19 = {
(*_2) = RET;
(*_2) = RET + RET;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_20) = core::ptr::addr_of_mut!(_2);
_24 = (*_2) as f64;
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 0), 0),fld1: 5_usize,fld2: _16,fld3: 38198_u16,fld4: 291641992977769233130421593112905785602_u128,fld5: (*_2),fld6: _5.0 };
Goto(bb20)
}
bb20 = {
place!(Field::<u128>(Variant(_5.1.3, 1), 4)) = 164227498002870285755585214085950110174_u128 & 6193876426851391406966824136808744492_u128;
RET = (*_2);
(*_2) = _16 as i32;
_28.1 = Adt48::Variant0 { fld0: 5975646767311755868_usize };
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = 14277093880872350151_usize;
_5.1.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_5.1.3, 1), 0),fld1: _22,fld2: 168_u8 };
match Field::<usize>(Variant(_5.1.3, 1), 1) {
0 => bb8,
1 => bb2,
2 => bb3,
3 => bb7,
14277093880872350151 => bb21,
_ => bb6
}
}
bb21 = {
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = Field::<u64>(Variant(_5.1.3, 1), 0) as usize;
_9 = !_17;
_14 = 2265831756476888818_i64 * (-9071497789106459761_i64);
(*_20) = core::ptr::addr_of_mut!(_2);
_28.0.1 = Move(_1);
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_1 = Move(_28.0.1);
place!(Field::<u16>(Variant(_5.1.3, 1), 3)) = 59010_u16 * 26463_u16;
_32 = _11 >> (*_2);
(*_20) = core::ptr::addr_of_mut!(_18);
(*_2) = RET >> _15;
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5) * RET;
Goto(bb22)
}
bb22 = {
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5) * Field::<i32>(Variant(_5.1.3, 1), 5);
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5) >> _17;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
Goto(bb23)
}
bb23 = {
(*_2) = RET;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_12 = _10;
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5);
_5.1.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_5.1.2, 0), 0),fld1: Field::<i8>(Variant(_5.1.2, 0), 1),fld2: 254_u8 };
(*_2) = RET;
(*_20) = core::ptr::addr_of_mut!(_18);
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
place!(Field::<u64>(Variant(_5.1.3, 0), 0)) = !Field::<u64>(Variant(_5.1.2, 0), 0);
_31 = _3;
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 0), 0),fld1: 6_usize,fld2: _16,fld3: 53289_u16,fld4: 193700491317280708624855990243964047822_u128,fld5: (*_2),fld6: _5.0 };
(*_20) = core::ptr::addr_of_mut!(_18);
(*_2) = RET;
Goto(bb24)
}
bb24 = {
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5);
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = 7_usize * 5_usize;
_2 = core::ptr::addr_of_mut!((*_2));
_11 = _16 as i16;
(*_2) = RET << Field::<i8>(Variant(_5.1.2, 0), 1);
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_20) = core::ptr::addr_of_mut!(_2);
_12 = _10;
_28.1 = Adt48::Variant0 { fld0: Field::<usize>(Variant(_5.1.3, 1), 1) };
_11 = _32;
Call((*_2) = core::intrinsics::bswap(Field::<i32>(Variant(_5.1.3, 1), 5)), ReturnTo(bb25), UnwindUnreachable())
}
bb25 = {
(*_2) = -Field::<i32>(Variant(_5.1.3, 1), 5);
_17 = _9 << _5.1.0;
place!(Field::<u8>(Variant(_5.1.2, 0), 2)) = 107_u8 + 1_u8;
_41.1.fld1 = 2530329165754601356301864945403084095_u128 & 294938137018096046984190457556018109566_u128;
_32 = _11 & _11;
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5);
_26 = [_12,_12];
_28.1 = Adt48::Variant0 { fld0: Field::<usize>(Variant(_5.1.3, 1), 1) };
(*_2) = !Field::<i32>(Variant(_5.1.3, 1), 5);
(*_2) = !Field::<i32>(Variant(_5.1.3, 1), 5);
_28.0.0 = core::ptr::addr_of_mut!((*_2));
_41.0.1 = _16 as i8;
_41.0.2 = Field::<usize>(Variant(_28.1, 0), 0);
_29 = _17 << _11;
_41.0.2 = Field::<usize>(Variant(_5.1.3, 1), 1);
_30 = core::ptr::addr_of!(_13);
_11 = _32 & _32;
place!(Field::<u16>(Variant(_5.1.3, 1), 3)) = !40838_u16;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
Goto(bb26)
}
bb26 = {
(*_20) = core::ptr::addr_of_mut!(_18);
(*_20) = core::ptr::addr_of_mut!(_2);
_9 = _29;
_35 = core::ptr::addr_of_mut!(place!(Field::<[bool; 4]>(Variant(_5.1.3, 1), 6)));
(*_20) = core::ptr::addr_of_mut!(_18);
(*_35) = _5.0;
_41.1.fld5 = _16 - Field::<f32>(Variant(_5.1.3, 1), 2);
_23 = &_8;
(*_35) = [true,false,false,false];
_28.0.1 = Move(_1);
Goto(bb27)
}
bb27 = {
place!(Field::<i8>(Variant(_5.1.2, 0), 1)) = !_22;
(*_30) = [_15,_15,_15,_15];
_41.1.fld3 = (_15,);
_1 = Move(_28.0.1);
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5) & Field::<i32>(Variant(_5.1.3, 1), 5);
_28.0.1 = Move(_1);
place!(Field::<f32>(Variant(_5.1.3, 1), 2)) = _15 as f32;
_17 = _9 | _29;
_43 = _41.1.fld5 as i8;
_1 = Move(_28.0.1);
_2 = Move(_28.0.0);
(*_35) = [true,false,false,true];
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 0), 0),fld1: Field::<usize>(Variant(_28.1, 0), 0),fld2: _41.1.fld5,fld3: 184_u16,fld4: _41.1.fld1,fld5: RET,fld6: _5.0 };
_26 = [_10,_4];
_33 = -_24;
_48 = _29 << Field::<u64>(Variant(_5.1.2, 0), 0);
(*_30) = [_15,_15,_41.1.fld3.0,_15];
place!(Field::<u128>(Variant(_5.1.3, 1), 4)) = !_41.1.fld1;
place!(Field::<u64>(Variant(_5.1.2, 0), 0)) = Field::<u64>(Variant(_5.1.3, 1), 0) >> _11;
(*_30) = [_15,_15,_41.1.fld3.0,_41.1.fld3.0];
_8 = [Field::<u64>(Variant(_5.1.2, 0), 0)];
_9 = _48 + _17;
Goto(bb28)
}
bb28 = {
(*_30) = [_15,_41.1.fld3.0,_15,_15];
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_22 = _43 ^ _43;
_41.1.fld0 = true | false;
_14 = _9 as i64;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_37 = _22 as i16;
_41.0.1 = _43 & _22;
_44 = _41.0.2 as isize;
_51 = _37 as f32;
_38 = Move(_23);
_18 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_5.1.3, 1), 5)));
(*_30) = [_15,_41.1.fld3.0,_15,_15];
_23 = &_8;
(*_30) = [_41.1.fld3.0,_15,_41.1.fld3.0,_15];
(*_18) = RET;
_50 = _41.1.fld3;
_41.1.fld6 = _11 as f64;
Goto(bb29)
}
bb29 = {
_40 = _5.1.0 ^ (*_18);
_28.0.1 = Move(_1);
_41.1.fld2 = Adt23::Variant1 { fld0: 38741_u16,fld1: 3729200840_u32,fld2: Field::<u64>(Variant(_5.1.2, 0), 0) };
(*_30) = [_50.0,_50.0,_15,_41.1.fld3.0];
_34 = _9;
(*_18) = _41.0.2 as i32;
place!(Field::<f32>(Variant(_5.1.3, 1), 2)) = _41.1.fld5 * _51;
_12 = _4;
_22 = _43;
(*_30) = [_15,_50.0,_41.1.fld3.0,_50.0];
(*_20) = core::ptr::addr_of_mut!(_18);
_28.0.0 = core::ptr::addr_of_mut!((*_18));
(*_30) = [_41.1.fld3.0,_50.0,_50.0,_41.1.fld3.0];
(*_20) = core::ptr::addr_of_mut!(_18);
_33 = -_41.1.fld6;
(*_20) = core::ptr::addr_of_mut!(_2);
(*_30) = [_50.0,_15,_50.0,_41.1.fld3.0];
_26 = [_12,_10];
_17 = _34 | _34;
_11 = -_37;
_19 = -_17;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_18) = !_40;
_14 = (-7901619817231949005_i64) * 742773960764014044_i64;
_44 = -_9;
place!(Field::<u32>(Variant(_41.1.fld2, 1), 1)) = 4012601475_u32 & 3332232999_u32;
Goto(bb30)
}
bb30 = {
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = _41.0.2;
(*_18) = _5.1.0;
place!(Field::<u32>(Variant(_41.1.fld2, 1), 1)) = 2433465235_u32;
_28.0.2 = _40 as u8;
_1 = Move(_28.0.1);
(*_18) = Field::<f32>(Variant(_5.1.3, 1), 2) as i32;
_37 = !_32;
(*_20) = core::ptr::addr_of_mut!(_2);
place!(Field::<u16>(Variant(_41.1.fld2, 1), 0)) = 57732_u16 * 29055_u16;
(*_18) = _40 ^ RET;
(*_18) = RET ^ _5.1.0;
(*_18) = _40;
_41.1.fld4 = Move(_5.1.2);
(*_18) = _5.1.0;
_22 = _17 as i8;
_41.0.2 = Field::<usize>(Variant(_28.1, 0), 0) >> _48;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_46 = _48 >> (*_18);
_51 = Field::<f32>(Variant(_5.1.3, 1), 2) - _16;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_20) = core::ptr::addr_of_mut!(_2);
_54.0.fld4 = Move(_41.1.fld4);
place!(Field::<[bool; 4]>(Variant(_5.1.3, 1), 6)) = [_41.1.fld0,_41.1.fld0,_41.1.fld0,_41.1.fld0];
place!(Field::<i32>(Variant(_5.1.3, 1), 5)) = -_40;
match Field::<u32>(Variant(_41.1.fld2, 1), 1) {
0 => bb6,
1 => bb8,
2 => bb31,
3 => bb32,
2433465235 => bb34,
_ => bb33
}
}
bb31 = {
Return()
}
bb32 = {
(*_2) = Field::<i32>(Variant(_5.1.3, 1), 5);
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = 7_usize * 5_usize;
_2 = core::ptr::addr_of_mut!((*_2));
_11 = _16 as i16;
(*_2) = RET << Field::<i8>(Variant(_5.1.2, 0), 1);
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_20) = core::ptr::addr_of_mut!(_2);
_12 = _10;
_28.1 = Adt48::Variant0 { fld0: Field::<usize>(Variant(_5.1.3, 1), 1) };
_11 = _32;
Call((*_2) = core::intrinsics::bswap(Field::<i32>(Variant(_5.1.3, 1), 5)), ReturnTo(bb25), UnwindUnreachable())
}
bb33 = {
(*_2) = 644398156_u32 as i32;
(*_2) = 280376183_i32 ^ 1580932990_i32;
(*_2) = (-1000739157_i32);
match (*_2) {
0 => bb2,
1 => bb3,
2 => bb4,
3 => bb5,
340282366920938463463374607430767472299 => bb7,
_ => bb6
}
}
bb34 = {
_51 = -Field::<f32>(Variant(_5.1.3, 1), 2);
(*_18) = _5.1.0 >> Field::<u64>(Variant(_41.1.fld2, 1), 2);
place!(Field::<u16>(Variant(_41.1.fld2, 1), 0)) = 18948_u16 >> Field::<i32>(Variant(_5.1.3, 1), 5);
_54.0.fld2 = _41.1.fld2;
(*_18) = RET & _5.1.0;
place!(Field::<u16>(Variant(_5.1.3, 1), 3)) = _15 as u16;
(*_20) = core::ptr::addr_of_mut!(_2);
(*_30) = [_50.0,_41.1.fld3.0,_50.0,_50.0];
(*_20) = core::ptr::addr_of_mut!(_18);
(*_30) = [_41.1.fld3.0,_41.1.fld3.0,_15,_41.1.fld3.0];
(*_18) = -_40;
_52 = [_28.0.2,_28.0.2,_28.0.2,_28.0.2,_28.0.2];
(*_30) = [_41.1.fld3.0,_15,_50.0,_50.0];
(*_30) = [_15,_15,_41.1.fld3.0,_15];
(*_18) = _5.1.0 | RET;
(*_20) = core::ptr::addr_of_mut!(_18);
(*_30) = [_15,_15,_15,_41.1.fld3.0];
_41.1 = Adt31 { fld0: true,fld1: Field::<u128>(Variant(_5.1.3, 1), 4),fld2: _54.0.fld2,fld3: _50,fld4: Move(_54.0.fld4),fld5: _51,fld6: _33 };
_36 = _11 as f64;
_2 = core::ptr::addr_of_mut!(_54.1);
_61.1.fld5 = Field::<u64>(Variant(_41.1.fld4, 0), 0) as f32;
(*_30) = [_41.1.fld3.0,_50.0,_50.0,_15];
Goto(bb35)
}
bb35 = {
(*_2) = _5.1.0 ^ (*_18);
_61.1.fld6 = _33 + _33;
(*_18) = (*_2) * (*_2);
_59.0 = -_11;
_28.0.1 = Move(_1);
(*_20) = core::ptr::addr_of_mut!(_18);
_34 = _19 * _9;
(*_30) = [_50.0,_50.0,_15,_41.1.fld3.0];
place!(Field::<u16>(Variant(_41.1.fld2, 1), 0)) = !Field::<u16>(Variant(_54.0.fld2, 1), 0);
_2 = core::ptr::addr_of_mut!((*_18));
(*_2) = _28.0.2 as i32;
(*_30) = [_50.0,_41.1.fld3.0,_15,_41.1.fld3.0];
_14 = -(-2676816105863376503_i64);
(*_2) = _5.1.0 | _5.1.0;
_63 = (*_18) | (*_18);
_6 = Adt66::Variant1 { fld0: _19,fld1: Move(_28) };
place!(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1)).0.2 = !Field::<u8>(Variant(_41.1.fld4, 0), 2);
_65 = _17 >> _19;
match Field::<u32>(Variant(_54.0.fld2, 1), 1) {
0 => bb26,
1 => bb34,
2 => bb11,
3 => bb31,
4 => bb17,
5 => bb24,
6 => bb19,
2433465235 => bb36,
_ => bb20
}
}
bb36 = {
_28.0.1 = Move(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1).0.1);
_54.0.fld3 = _50;
(*_2) = _40;
_59.0 = _41.1.fld0 as i16;
_5.1.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_41.1.fld4, 0), 0),fld1: _22,fld2: Field::<u8>(Variant(_41.1.fld4, 0), 2) };
_61.1.fld3.0 = _41.1.fld3.0 << _22;
_69 = Move(_23);
(*_20) = core::ptr::addr_of_mut!(_2);
_14 = (-2208272513029928967_i64) + (-5914592131148108003_i64);
_1 = Move(_28.0.1);
(*_30) = [_61.1.fld3.0,_61.1.fld3.0,_61.1.fld3.0,_61.1.fld3.0];
(*_2) = _40 & RET;
_61.0.1 = Field::<u32>(Variant(_41.1.fld2, 1), 1) as i8;
(*_18) = _54.1;
(*_20) = core::ptr::addr_of_mut!(_18);
_61.1.fld6 = -_33;
Call(_5.1.0 = core::intrinsics::bswap(_63), ReturnTo(bb37), UnwindUnreachable())
}
bb37 = {
(*_18) = _5.1.0 | _54.1;
_61.1.fld5 = -_51;
(*_18) = _63 ^ _63;
_61.1.fld2 = Adt23::Variant0 { fld0: _41.1.fld0,fld1: _4,fld2: _9,fld3: _22,fld4: _41.0.2,fld5: Field::<u16>(Variant(_54.0.fld2, 1), 0) };
_35 = core::ptr::addr_of_mut!(place!(Field::<[bool; 4]>(Variant(_5.1.3, 1), 6)));
(*_18) = RET | _54.1;
_74 = Field::<char>(Variant(_61.1.fld2, 0), 1);
place!(Field::<u16>(Variant(_61.1.fld2, 0), 5)) = Field::<u16>(Variant(_41.1.fld2, 1), 0);
_61.0.2 = _41.0.2 + Field::<usize>(Variant(_61.1.fld2, 0), 4);
_41.1.fld2 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_61.1.fld2, 0), 0),fld1: _74,fld2: _9,fld3: Field::<i8>(Variant(_5.1.2, 0), 1),fld4: Field::<usize>(Variant(_61.1.fld2, 0), 4),fld5: Field::<u16>(Variant(_54.0.fld2, 1), 0) };
_5.1.1 = _51 + Field::<f32>(Variant(_5.1.3, 1), 2);
_66 = &_35;
_68.0 = _14 + _14;
(*_18) = _54.1;
_64 = _61.1.fld5;
_56 = core::ptr::addr_of_mut!(_66);
place!(Field::<char>(Variant(_41.1.fld2, 0), 1)) = _74;
(*_18) = _61.1.fld3.0 as i32;
place!(Field::<u8>(Variant(_5.1.2, 0), 2)) = Field::<u8>(Variant(_41.1.fld4, 0), 2);
(*_35) = _5.0;
(*_20) = core::ptr::addr_of_mut!(_18);
_3 = _31;
match Field::<u32>(Variant(_54.0.fld2, 1), 1) {
2433465235 => bb38,
_ => bb28
}
}
bb38 = {
place!(Field::<bool>(Variant(_61.1.fld2, 0), 0)) = Field::<bool>(Variant(_41.1.fld2, 0), 0);
(*_20) = core::ptr::addr_of_mut!(place!(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1)).0.0);
place!(Field::<u8>(Variant(_5.1.2, 0), 2)) = Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1).0.2;
_15 = _61.1.fld3.0 & _61.1.fld3.0;
_13 = [_61.1.fld3.0,_61.1.fld3.0,_15,_15];
_76 = Adt48::Variant2 { fld0: _41.1.fld5,fld1: Field::<i8>(Variant(_61.1.fld2, 0), 3) };
_15 = _61.1.fld3.0 ^ _61.1.fld3.0;
_28.0.2 = !Field::<u8>(Variant(_41.1.fld4, 0), 2);
_51 = -_61.1.fld5;
_28.0.1 = Move(_1);
place!(Field::<char>(Variant(_61.1.fld2, 0), 1)) = _12;
(*_20) = core::ptr::addr_of_mut!(_80.0);
_61.1.fld1 = _41.1.fld1;
(*_20) = core::ptr::addr_of_mut!(_18);
_41.0.0 = core::ptr::addr_of!(_80.1);
(*_20) = core::ptr::addr_of_mut!(_2);
(*_30) = [_61.1.fld3.0,_15,_61.1.fld3.0,_15];
(*_18) = _63;
_54.0.fld1 = Field::<u128>(Variant(_5.1.3, 1), 4) + _61.1.fld1;
_74 = Field::<char>(Variant(_41.1.fld2, 0), 1);
_28.1 = Adt48::Variant2 { fld0: _41.1.fld5,fld1: Field::<i8>(Variant(_5.1.2, 0), 1) };
_41.0.1 = !Field::<i8>(Variant(_76, 2), 1);
_22 = Field::<bool>(Variant(_41.1.fld2, 0), 0) as i8;
_54.0.fld0 = !Field::<bool>(Variant(_61.1.fld2, 0), 0);
(*_30) = [_61.1.fld3.0,_61.1.fld3.0,_15,_61.1.fld3.0];
Goto(bb39)
}
bb39 = {
_81 = _61.1.fld5 * _5.1.1;
_42 = &_41.1.fld6;
place!(Field::<u64>(Variant(_5.1.3, 1), 0)) = Field::<u64>(Variant(_54.0.fld2, 1), 2) >> _61.1.fld3.0;
_14 = _68.0 - _68.0;
_22 = _17 as i8;
_70 = _34 | _17;
_38 = &_8;
(*_30) = [_15,_15,_61.1.fld3.0,_15];
place!(Field::<u8>(Variant(_41.1.fld4, 0), 2)) = Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1).0.2 - _28.0.2;
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = Field::<usize>(Variant(_61.1.fld2, 0), 4);
_80.0 = core::ptr::addr_of_mut!((*_18));
_63 = Field::<u16>(Variant(_54.0.fld2, 1), 0) as i32;
match Field::<u32>(Variant(_54.0.fld2, 1), 1) {
0 => bb40,
1 => bb41,
2433465235 => bb43,
_ => bb42
}
}
bb40 = {
(*_2) = RET;
(*_2) = RET + RET;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
(*_20) = core::ptr::addr_of_mut!(_2);
_24 = (*_2) as f64;
_5.1.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_5.1.2, 0), 0),fld1: 5_usize,fld2: _16,fld3: 38198_u16,fld4: 291641992977769233130421593112905785602_u128,fld5: (*_2),fld6: _5.0 };
Goto(bb20)
}
bb41 = {
(*_18) = _5.1.0 | _54.1;
_61.1.fld5 = -_51;
(*_18) = _63 ^ _63;
_61.1.fld2 = Adt23::Variant0 { fld0: _41.1.fld0,fld1: _4,fld2: _9,fld3: _22,fld4: _41.0.2,fld5: Field::<u16>(Variant(_54.0.fld2, 1), 0) };
_35 = core::ptr::addr_of_mut!(place!(Field::<[bool; 4]>(Variant(_5.1.3, 1), 6)));
(*_18) = RET | _54.1;
_74 = Field::<char>(Variant(_61.1.fld2, 0), 1);
place!(Field::<u16>(Variant(_61.1.fld2, 0), 5)) = Field::<u16>(Variant(_41.1.fld2, 1), 0);
_61.0.2 = _41.0.2 + Field::<usize>(Variant(_61.1.fld2, 0), 4);
_41.1.fld2 = Adt23::Variant0 { fld0: Field::<bool>(Variant(_61.1.fld2, 0), 0),fld1: _74,fld2: _9,fld3: Field::<i8>(Variant(_5.1.2, 0), 1),fld4: Field::<usize>(Variant(_61.1.fld2, 0), 4),fld5: Field::<u16>(Variant(_54.0.fld2, 1), 0) };
_5.1.1 = _51 + Field::<f32>(Variant(_5.1.3, 1), 2);
_66 = &_35;
_68.0 = _14 + _14;
(*_18) = _54.1;
_64 = _61.1.fld5;
_56 = core::ptr::addr_of_mut!(_66);
place!(Field::<char>(Variant(_41.1.fld2, 0), 1)) = _74;
(*_18) = _61.1.fld3.0 as i32;
place!(Field::<u8>(Variant(_5.1.2, 0), 2)) = Field::<u8>(Variant(_41.1.fld4, 0), 2);
(*_35) = _5.0;
(*_20) = core::ptr::addr_of_mut!(_18);
_3 = _31;
match Field::<u32>(Variant(_54.0.fld2, 1), 1) {
2433465235 => bb38,
_ => bb28
}
}
bb42 = {
Return()
}
bb43 = {
(*_18) = _5.1.0 * _63;
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_41.1.fld3.0 = -_61.1.fld3.0;
(*_20) = core::ptr::addr_of_mut!(_18);
match Field::<u32>(Variant(_54.0.fld2, 1), 1) {
0 => bb30,
1 => bb11,
2 => bb7,
3 => bb16,
4 => bb35,
2433465235 => bb44,
_ => bb10
}
}
bb44 = {
_50.0 = _15 << (*_18);
_40 = -(*_18);
_61.1.fld3 = _41.1.fld3;
_61.1.fld4 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_54.0.fld2, 1), 2),fld1: Field::<usize>(Variant(_61.1.fld2, 0), 4),fld2: _51,fld3: Field::<u16>(Variant(_54.0.fld2, 1), 0),fld4: _54.0.fld1,fld5: (*_18),fld6: (*_35) };
_87 = _74;
(*_20) = core::ptr::addr_of_mut!(_18);
(*_30) = [_15,_50.0,_61.1.fld3.0,_50.0];
_9 = _22 as isize;
(*_20) = core::ptr::addr_of_mut!(_80.0);
(*_35) = [Field::<bool>(Variant(_41.1.fld2, 0), 0),Field::<bool>(Variant(_61.1.fld2, 0), 0),_41.1.fld0,Field::<bool>(Variant(_41.1.fld2, 0), 0)];
_24 = (*_42) - (*_42);
(*_20) = core::ptr::addr_of_mut!(_28.0.0);
_54.0.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_5.1.3, 1), 0),fld1: _22,fld2: Field::<u8>(Variant(_5.1.2, 0), 2) };
(*_18) = !Field::<i32>(Variant(_61.1.fld4, 1), 5);
place!(Field::<usize>(Variant(_5.1.3, 1), 1)) = _61.0.2;
_68.0 = -_14;
_45 = (*_42);
_80.1 = Move(_28.0.1);
_54.0.fld6 = (*_42) - _36;
_73 = Field::<u16>(Variant(_41.1.fld2, 0), 5) << Field::<i8>(Variant(_61.1.fld2, 0), 3);
_54.0 = Adt31 { fld0: Field::<bool>(Variant(_61.1.fld2, 0), 0),fld1: Field::<u128>(Variant(_5.1.3, 1), 4),fld2: _61.1.fld2,fld3: _50,fld4: Move(_61.1.fld4),fld5: _51,fld6: (*_42) };
(*_18) = -_40;
place!(Field::<u64>(Variant(_54.0.fld4, 1), 0)) = Field::<u64>(Variant(_5.1.3, 1), 0) >> _41.0.1;
_81 = _41.1.fld5 + Field::<f32>(Variant(_76, 2), 0);
(*_35) = _5.0;
place!(Field::<i32>(Variant(_5.1.3, 1), 5)) = _63 - Field::<i32>(Variant(_54.0.fld4, 1), 5);
(*_18) = Field::<i32>(Variant(_54.0.fld4, 1), 5) >> _41.1.fld3.0;
Goto(bb45)
}
bb45 = {
_85 = Field::<isize>(Variant(_6, 1), 0) & _34;
_34 = _17;
(*_30) = [_15,_50.0,_61.1.fld3.0,_50.0];
(*_35) = Field::<[bool; 4]>(Variant(_54.0.fld4, 1), 6);
_91.fld5 = _54.0.fld5 + Field::<f32>(Variant(_54.0.fld4, 1), 2);
(*_18) = 1368059372_u32 as i32;
_41.0.0 = core::ptr::addr_of!(_28.0.1);
_86 = &_42;
_61.0.1 = _12 as i8;
place!(Field::<isize>(Variant(_61.1.fld2, 0), 2)) = Field::<bool>(Variant(_41.1.fld2, 0), 0) as isize;
Goto(bb46)
}
bb46 = {
Goto(bb47)
}
bb47 = {
Goto(bb48)
}
bb48 = {
(*_30) = [_54.0.fld3.0,_41.1.fld3.0,_50.0,_41.1.fld3.0];
_98 = [_65,_70,_9,_19,_19,_65,Field::<isize>(Variant(_6, 1), 0),Field::<isize>(Variant(_61.1.fld2, 0), 2)];
_84.1 = core::ptr::addr_of!((*_30));
place!(Field::<f32>(Variant(_76, 2), 0)) = _91.fld5;
place!(Field::<i8>(Variant(_61.1.fld2, 0), 3)) = !_41.0.1;
_1 = Move(_80.1);
place!(Field::<i8>(Variant(_28.1, 2), 1)) = -_22;
(*_20) = core::ptr::addr_of_mut!(_80.0);
place!(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1)).0 = (Move(_80.0), Move(_1), _28.0.2);
_28.0.0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_54.0.fld4, 1), 5)));
place!(Field::<u64>(Variant(_5.1.3, 1), 0)) = Field::<u64>(Variant(_5.1.2, 0), 0) * Field::<u64>(Variant(_54.0.fld4, 1), 0);
(*_20) = core::ptr::addr_of_mut!(_68.1);
(*_18) = _54.1 & Field::<i32>(Variant(_54.0.fld4, 1), 5);
_91.fld5 = _16;
place!(Field::<i8>(Variant(_61.1.fld2, 0), 3)) = -Field::<i8>(Variant(_28.1, 2), 1);
(*_30) = [_41.1.fld3.0,_41.1.fld3.0,_50.0,_15];
_91.fld1 = _41.1.fld1 >> Field::<u64>(Variant(_5.1.3, 1), 0);
place!(Field::<u8>(Variant(_5.1.2, 0), 2)) = _28.0.2 | _28.0.2;
(*_30) = [_41.1.fld3.0,_61.1.fld3.0,_61.1.fld3.0,_54.0.fld3.0];
place!(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1)).0.2 = !Field::<u8>(Variant(_5.1.2, 0), 2);
Call(place!(Field::<u128>(Variant(_5.1.3, 1), 4)) = core::intrinsics::transmute(_91.fld1), ReturnTo(bb49), UnwindUnreachable())
}
bb49 = {
_101 = Move(Field::<((*mut i32, *mut [i16; 2], u8), Adt48)>(Variant(_6, 1), 1).0.1);
(*_20) = core::ptr::addr_of_mut!(_80.0);
place!(Field::<i8>(Variant(_41.1.fld4, 0), 1)) = Field::<i8>(Variant(_61.1.fld2, 0), 3) | _22;
_59.0 = -_32;
(*_20) = core::ptr::addr_of_mut!(_80.0);
(*_35) = [Field::<bool>(Variant(_54.0.fld2, 0), 0),Field::<bool>(Variant(_41.1.fld2, 0), 0),Field::<bool>(Variant(_41.1.fld2, 0), 0),Field::<bool>(Variant(_41.1.fld2, 0), 0)];
_79 = _4;
_80.1 = Move(_101);
_61.0.0 = core::ptr::addr_of!(_80.1);
_70 = _54.0.fld5 as isize;
_61.1.fld0 = _81 != _5.1.1;
_97 = Field::<isize>(Variant(_61.1.fld2, 0), 2);
place!(Field::<f32>(Variant(_5.1.3, 1), 2)) = -_61.1.fld5;
place!(Field::<char>(Variant(_61.1.fld2, 0), 1)) = _12;
_91.fld3.0 = -_54.0.fld3.0;
place!(Field::<u128>(Variant(_54.0.fld4, 1), 4)) = _91.fld1 * Field::<u128>(Variant(_5.1.3, 1), 4);
_89 = [Field::<u64>(Variant(_5.1.3, 1), 0)];
_41.1.fld4 = Move(_5.1.3);
_81 = _61.1.fld5 * _51;
place!(Field::<f32>(Variant(_41.1.fld4, 1), 2)) = -Field::<f32>(Variant(_76, 2), 0);
_46 = _97;
(*_18) = _63;
_91.fld0 = !_61.1.fld0;
Goto(bb50)
}
bb50 = {
Call(_107 = dump_var(17_usize, 87_usize, Move(_87), 13_usize, Move(_13), 12_usize, Move(_12), 29_usize, Move(_29)), ReturnTo(bb51), UnwindUnreachable())
}
bb51 = {
Call(_107 = dump_var(17_usize, 73_usize, Move(_73), 79_usize, Move(_79), 85_usize, Move(_85), 17_usize, Move(_17)), ReturnTo(bb52), UnwindUnreachable())
}
bb52 = {
Call(_107 = dump_var(17_usize, 46_usize, Move(_46), 31_usize, Move(_31), 4_usize, Move(_4), 50_usize, Move(_50)), ReturnTo(bb53), UnwindUnreachable())
}
bb53 = {
Call(_107 = dump_var(17_usize, 74_usize, Move(_74), 43_usize, Move(_43), 52_usize, Move(_52), 3_usize, Move(_3)), ReturnTo(bb54), UnwindUnreachable())
}
bb54 = {
Call(_107 = dump_var(17_usize, 70_usize, Move(_70), 63_usize, Move(_63), 65_usize, Move(_65), 108_usize, _108), ReturnTo(bb55), UnwindUnreachable())
}
bb55 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
pub fn fn18() -> i32 {
mir! {
type RET = i32;
let _1: char;
let _2: [bool; 4];
let _3: &'static mut (*mut i32, *mut [i16; 2], u8);
let _4: char;
let _5: ((*mut i32, *mut [i16; 2], u8), Adt48);
let _6: f32;
let _7: isize;
let _8: ((i32, f32, Adt18, Adt18),);
let _9: f64;
let _10: [bool; 4];
let _11: (*const *mut [i16; 2], i8, usize);
let _12: i64;
let _13: f64;
let _14: (i32, f32, Adt18, Adt18);
let _15: *mut (&'static mut *mut [u64; 1], u128);
let _16: bool;
let _17: f64;
let _18: [u8; 5];
let _19: f32;
let _20: &'static [u64; 1];
let _21: char;
let _22: (i16,);
let _23: (*mut i32, *mut [i16; 2], u8);
let _24: &'static mut *mut [u64; 1];
let _25: f32;
let _26: *const [usize; 2];
let _27: char;
let _28: &'static *mut [i16; 2];
let _29: i32;
let _30: (*const *mut [i16; 2], i8, usize);
let _31: i128;
let _32: *const [usize; 2];
let _33: u128;
let _34: u16;
let _35: f32;
let _36: u128;
let _37: bool;
let _38: &'static mut (Adt31, i32);
let _39: &'static [i128; 4];
let _40: Adt31;
let _41: usize;
let _42: *mut [u64; 1];
let _43: f32;
let _44: isize;
let _45: char;
let _46: *mut &'static mut (i32, f32, Adt18, Adt18);
let _47: isize;
let _48: *mut *mut i32;
let _49: Adt41;
let _50: f64;
let _51: &'static mut &'static mut (*mut i32, *mut [i16; 2], u8);
let _52: [u128; 2];
let _53: (i16,);
let _54: isize;
let _55: [usize; 5];
let _56: ();
let _57: ();
{
RET = (-1682828600_i32);
RET = 331349917054672769264098937737819409523_u128 as i32;
RET = 1184475117276308553_usize as i32;
_2 = [false,true,false,true];
_2 = [true,true,false,true];
_4 = '\u{573ff}';
RET = !(-1550541913_i32);
_2 = [false,true,false,false];
_4 = '\u{23019}';
_2 = [false,false,false,true];
RET = 1257519458_i32 * (-1661978520_i32);
_4 = '\u{d689a}';
_1 = _4;
_2 = [false,false,true,true];
_2 = [false,true,true,false];
_2 = [false,true,true,false];
_2 = [false,false,true,true];
_5.1 = Adt48::Variant0 { fld0: 0_usize };
Goto(bb1)
}
bb1 = {
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(RET);
_7 = (-110_isize) + (-9223372036854775808_isize);
_8.0.2 = Adt18::Variant0 { fld0: 11649789047680711564_u64,fld1: (-85_i8),fld2: 174_u8 };
_8.0.2 = Adt18::Variant0 { fld0: 5800974317610525221_u64,fld1: (-41_i8),fld2: 4_u8 };
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !5_u8;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = 19_u8 | 42_u8;
_8.0.1 = (-106407312384208733368855566126913007084_i128) as f32;
RET = 818891385_i32 * (-2098032290_i32);
_9 = _8.0.1 as f64;
_4 = _1;
RET = (-32486_i16) as i32;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !69_u8;
Goto(bb2)
}
bb2 = {
_5.0.2 = Field::<u8>(Variant(_8.0.2, 0), 2) | Field::<u8>(Variant(_8.0.2, 0), 2);
_11.2 = 4_usize;
match _11.2 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb8,
_ => bb7
}
}
bb3 = {
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(RET);
_7 = (-110_isize) + (-9223372036854775808_isize);
_8.0.2 = Adt18::Variant0 { fld0: 11649789047680711564_u64,fld1: (-85_i8),fld2: 174_u8 };
_8.0.2 = Adt18::Variant0 { fld0: 5800974317610525221_u64,fld1: (-41_i8),fld2: 4_u8 };
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !5_u8;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = 19_u8 | 42_u8;
_8.0.1 = (-106407312384208733368855566126913007084_i128) as f32;
RET = 818891385_i32 * (-2098032290_i32);
_9 = _8.0.1 as f64;
_4 = _1;
RET = (-32486_i16) as i32;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !69_u8;
Goto(bb2)
}
bb4 = {
Return()
}
bb5 = {
Return()
}
bb6 = {
Return()
}
bb7 = {
Return()
}
bb8 = {
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = _7 as u64;
_9 = Field::<u8>(Variant(_8.0.2, 0), 2) as f64;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = _5.0.2;
_10 = [true,false,true,false];
_6 = _7 as f32;
_8.0.1 = -_6;
_5.1 = Adt48::Variant0 { fld0: _11.2 };
_12 = 8565218085546888148_i64 >> Field::<u8>(Variant(_8.0.2, 0), 2);
_8.0.2 = Adt18::Variant0 { fld0: 3157150691809090982_u64,fld1: (-10_i8),fld2: _5.0.2 };
_8.0.3 = Adt18::Variant1 { fld0: 5847483617146838388_u64,fld1: _11.2,fld2: _8.0.1,fld3: 13679_u16,fld4: 81675570346015120526680078155374123286_u128,fld5: RET,fld6: _2 };
_14.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
_13 = _9 + _9;
_4 = _1;
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = 14920879778150398876_u64;
_6 = Field::<f32>(Variant(_8.0.3, 1), 2) * Field::<f32>(Variant(_8.0.3, 1), 2);
place!(Field::<f32>(Variant(_8.0.3, 1), 2)) = Field::<u8>(Variant(_8.0.2, 0), 2) as f32;
_14.1 = _8.0.1 * _8.0.1;
_7 = 9_isize;
place!(Field::<u128>(Variant(_8.0.3, 1), 4)) = 39483852685911804314901477910723955537_u128 * 169987906084577650975129714622505374790_u128;
_7 = 9223372036854775807_isize & (-74_isize);
_8.0.0 = _14.0 + _14.0;
_14.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.2, 0), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _14.1,fld3: 54614_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_11.1 = (-75_i8) - 113_i8;
_8.0.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
Goto(bb9)
}
bb9 = {
_17 = _9 * _9;
_8.0.1 = _14.1 + Field::<f32>(Variant(_14.2, 1), 2);
_13 = _9 + _17;
place!(Field::<u64>(Variant(_8.0.3, 1), 0)) = Field::<u64>(Variant(_14.2, 1), 0);
_14.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.2, 1), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _8.0.1,fld3: 40856_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_14.2, 1), 5)));
_18 = [Field::<u8>(Variant(_8.0.2, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.2, 0), 2),Field::<u8>(Variant(_8.0.2, 0), 2),Field::<u8>(Variant(_8.0.2, 0), 2)];
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.3, 1), 0),fld1: Field::<usize>(Variant(_14.3, 1), 1),fld2: _14.1,fld3: 14859_u16,fld4: Field::<u128>(Variant(_14.2, 1), 4),fld5: Field::<i32>(Variant(_8.0.3, 1), 5),fld6: Field::<[bool; 4]>(Variant(_14.2, 1), 6) };
place!(Field::<u16>(Variant(_8.0.2, 1), 3)) = 39967_u16 << Field::<u64>(Variant(_8.0.2, 1), 0);
match Field::<usize>(Variant(_5.1, 0), 0) {
0 => bb7,
1 => bb6,
2 => bb10,
3 => bb11,
4 => bb13,
_ => bb12
}
}
bb10 = {
_5.0.2 = Field::<u8>(Variant(_8.0.2, 0), 2) | Field::<u8>(Variant(_8.0.2, 0), 2);
_11.2 = 4_usize;
match _11.2 {
0 => bb3,
1 => bb4,
2 => bb5,
3 => bb6,
4 => bb8,
_ => bb7
}
}
bb11 = {
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(RET);
_7 = (-110_isize) + (-9223372036854775808_isize);
_8.0.2 = Adt18::Variant0 { fld0: 11649789047680711564_u64,fld1: (-85_i8),fld2: 174_u8 };
_8.0.2 = Adt18::Variant0 { fld0: 5800974317610525221_u64,fld1: (-41_i8),fld2: 4_u8 };
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !5_u8;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = 19_u8 | 42_u8;
_8.0.1 = (-106407312384208733368855566126913007084_i128) as f32;
RET = 818891385_i32 * (-2098032290_i32);
_9 = _8.0.1 as f64;
_4 = _1;
RET = (-32486_i16) as i32;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !69_u8;
Goto(bb2)
}
bb12 = {
Return()
}
bb13 = {
_4 = _1;
place!(Field::<u16>(Variant(_14.2, 1), 3)) = Field::<u16>(Variant(_8.0.2, 1), 3) * Field::<u16>(Variant(_8.0.2, 1), 3);
_18 = [_5.0.2,_5.0.2,_5.0.2,_5.0.2,_5.0.2];
place!(Field::<i32>(Variant(_8.0.3, 1), 5)) = RET | RET;
Goto(bb14)
}
bb14 = {
_11.0 = core::ptr::addr_of!(_5.0.1);
place!(Field::<u64>(Variant(_14.2, 1), 0)) = Field::<u64>(Variant(_14.3, 1), 0);
_19 = Field::<f32>(Variant(_8.0.3, 1), 2) * _8.0.1;
_10 = [false,true,true,false];
_10 = [true,false,false,true];
place!(Field::<usize>(Variant(_8.0.2, 1), 1)) = 6760_i16 as usize;
place!(Field::<u128>(Variant(_8.0.2, 1), 4)) = Field::<f32>(Variant(_14.3, 1), 2) as u128;
_14.0 = _8.0.0 & Field::<i32>(Variant(_8.0.3, 1), 5);
_6 = Field::<f32>(Variant(_14.2, 1), 2) + Field::<f32>(Variant(_14.2, 1), 2);
_8.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_14.2, 1), 0),fld1: _11.1,fld2: _5.0.2 };
_18 = [Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2)];
place!(Field::<u64>(Variant(_8.0.2, 1), 0)) = !Field::<u64>(Variant(_14.2, 1), 0);
_7 = _11.1 as isize;
_4 = _1;
_5.0.2 = !Field::<u8>(Variant(_8.0.3, 0), 2);
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.3, 0), 0),fld1: _11.2,fld2: _8.0.1,fld3: Field::<u16>(Variant(_14.2, 1), 3),fld4: Field::<u128>(Variant(_14.2, 1), 4),fld5: Field::<i32>(Variant(_14.3, 1), 5),fld6: Field::<[bool; 4]>(Variant(_14.3, 1), 6) };
_8.0.1 = -_6;
_4 = _1;
place!(Field::<u128>(Variant(_14.3, 1), 4)) = !Field::<u128>(Variant(_8.0.2, 1), 4);
place!(Field::<i32>(Variant(_14.2, 1), 5)) = Field::<i32>(Variant(_14.3, 1), 5) - Field::<i32>(Variant(_8.0.2, 1), 5);
_8.0.1 = -Field::<f32>(Variant(_14.3, 1), 2);
_18 = [Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2),Field::<u8>(Variant(_8.0.3, 0), 2),Field::<u8>(Variant(_8.0.3, 0), 2)];
RET = _14.0 | _14.0;
match Field::<u64>(Variant(_14.3, 1), 0) {
0 => bb3,
1 => bb15,
2 => bb16,
14920879778150398876 => bb18,
_ => bb17
}
}
bb15 = {
_17 = _9 * _9;
_8.0.1 = _14.1 + Field::<f32>(Variant(_14.2, 1), 2);
_13 = _9 + _17;
place!(Field::<u64>(Variant(_8.0.3, 1), 0)) = Field::<u64>(Variant(_14.2, 1), 0);
_14.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.2, 1), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _8.0.1,fld3: 40856_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_14.2, 1), 5)));
_18 = [Field::<u8>(Variant(_8.0.2, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.2, 0), 2),Field::<u8>(Variant(_8.0.2, 0), 2),Field::<u8>(Variant(_8.0.2, 0), 2)];
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.3, 1), 0),fld1: Field::<usize>(Variant(_14.3, 1), 1),fld2: _14.1,fld3: 14859_u16,fld4: Field::<u128>(Variant(_14.2, 1), 4),fld5: Field::<i32>(Variant(_8.0.3, 1), 5),fld6: Field::<[bool; 4]>(Variant(_14.2, 1), 6) };
place!(Field::<u16>(Variant(_8.0.2, 1), 3)) = 39967_u16 << Field::<u64>(Variant(_8.0.2, 1), 0);
match Field::<usize>(Variant(_5.1, 0), 0) {
0 => bb7,
1 => bb6,
2 => bb10,
3 => bb11,
4 => bb13,
_ => bb12
}
}
bb16 = {
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = _7 as u64;
_9 = Field::<u8>(Variant(_8.0.2, 0), 2) as f64;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = _5.0.2;
_10 = [true,false,true,false];
_6 = _7 as f32;
_8.0.1 = -_6;
_5.1 = Adt48::Variant0 { fld0: _11.2 };
_12 = 8565218085546888148_i64 >> Field::<u8>(Variant(_8.0.2, 0), 2);
_8.0.2 = Adt18::Variant0 { fld0: 3157150691809090982_u64,fld1: (-10_i8),fld2: _5.0.2 };
_8.0.3 = Adt18::Variant1 { fld0: 5847483617146838388_u64,fld1: _11.2,fld2: _8.0.1,fld3: 13679_u16,fld4: 81675570346015120526680078155374123286_u128,fld5: RET,fld6: _2 };
_14.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
_13 = _9 + _9;
_4 = _1;
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = 14920879778150398876_u64;
_6 = Field::<f32>(Variant(_8.0.3, 1), 2) * Field::<f32>(Variant(_8.0.3, 1), 2);
place!(Field::<f32>(Variant(_8.0.3, 1), 2)) = Field::<u8>(Variant(_8.0.2, 0), 2) as f32;
_14.1 = _8.0.1 * _8.0.1;
_7 = 9_isize;
place!(Field::<u128>(Variant(_8.0.3, 1), 4)) = 39483852685911804314901477910723955537_u128 * 169987906084577650975129714622505374790_u128;
_7 = 9223372036854775807_isize & (-74_isize);
_8.0.0 = _14.0 + _14.0;
_14.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.2, 0), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _14.1,fld3: 54614_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_11.1 = (-75_i8) - 113_i8;
_8.0.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
Goto(bb9)
}
bb17 = {
Return()
}
bb18 = {
_14.1 = -_6;
_22.0 = 1442_i16 >> _11.2;
place!(Field::<u128>(Variant(_14.2, 1), 4)) = !Field::<u128>(Variant(_8.0.2, 1), 4);
place!(Field::<[bool; 4]>(Variant(_8.0.2, 1), 6)) = [false,false,true,true];
_14.2 = Move(_8.0.2);
place!(Field::<f32>(Variant(_14.2, 1), 2)) = -_19;
_23.2 = Field::<u8>(Variant(_8.0.3, 0), 2) & _5.0.2;
_14.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.3, 0), 0),fld1: Field::<usize>(Variant(_14.2, 1), 1),fld2: _14.1,fld3: Field::<u16>(Variant(_14.2, 1), 3),fld4: Field::<u128>(Variant(_14.2, 1), 4),fld5: _14.0,fld6: Field::<[bool; 4]>(Variant(_14.2, 1), 6) };
_22.0 = (-13648_i16);
_19 = Field::<f32>(Variant(_14.3, 1), 2) + Field::<f32>(Variant(_14.2, 1), 2);
_1 = _4;
_12 = -2553167952550268862_i64;
_23.0 = core::ptr::addr_of_mut!(place!(Field::<i32>(Variant(_14.2, 1), 5)));
_19 = -Field::<f32>(Variant(_14.3, 1), 2);
_23.2 = Field::<u8>(Variant(_8.0.3, 0), 2);
_14.2 = Move(_14.3);
_2 = [false,true,false,false];
_14.2 = Move(_8.0.3);
_21 = _4;
_14.0 = _8.0.0 << _5.0.2;
_31 = 58793910840669710242641356232410244685_i128 << Field::<u8>(Variant(_14.2, 0), 2);
_18 = [_23.2,_5.0.2,_23.2,Field::<u8>(Variant(_14.2, 0), 2),_5.0.2];
_30.0 = core::ptr::addr_of!(_23.1);
_2 = [true,false,true,false];
_22.0 = !(-6864_i16);
_29 = RET + RET;
_10 = _2;
Goto(bb19)
}
bb19 = {
_4 = _1;
_17 = _13 * _9;
_8.0.1 = _6;
match _11.2 {
0 => bb12,
1 => bb8,
4 => bb20,
_ => bb18
}
}
bb20 = {
_22 = ((-15155_i16),);
_4 = _1;
_22 = ((-11140_i16),);
_30.2 = _11.2 % Field::<usize>(Variant(_5.1, 0), 0);
_11.1 = Field::<i8>(Variant(_14.2, 0), 1);
match Field::<u64>(Variant(_14.2, 0), 0) {
0 => bb19,
1 => bb21,
2 => bb22,
3 => bb23,
4 => bb24,
14920879778150398876 => bb26,
_ => bb25
}
}
bb21 = {
_11.0 = core::ptr::addr_of!(_5.0.1);
place!(Field::<u64>(Variant(_14.2, 1), 0)) = Field::<u64>(Variant(_14.3, 1), 0);
_19 = Field::<f32>(Variant(_8.0.3, 1), 2) * _8.0.1;
_10 = [false,true,true,false];
_10 = [true,false,false,true];
place!(Field::<usize>(Variant(_8.0.2, 1), 1)) = 6760_i16 as usize;
place!(Field::<u128>(Variant(_8.0.2, 1), 4)) = Field::<f32>(Variant(_14.3, 1), 2) as u128;
_14.0 = _8.0.0 & Field::<i32>(Variant(_8.0.3, 1), 5);
_6 = Field::<f32>(Variant(_14.2, 1), 2) + Field::<f32>(Variant(_14.2, 1), 2);
_8.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_14.2, 1), 0),fld1: _11.1,fld2: _5.0.2 };
_18 = [Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2)];
place!(Field::<u64>(Variant(_8.0.2, 1), 0)) = !Field::<u64>(Variant(_14.2, 1), 0);
_7 = _11.1 as isize;
_4 = _1;
_5.0.2 = !Field::<u8>(Variant(_8.0.3, 0), 2);
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.3, 0), 0),fld1: _11.2,fld2: _8.0.1,fld3: Field::<u16>(Variant(_14.2, 1), 3),fld4: Field::<u128>(Variant(_14.2, 1), 4),fld5: Field::<i32>(Variant(_14.3, 1), 5),fld6: Field::<[bool; 4]>(Variant(_14.3, 1), 6) };
_8.0.1 = -_6;
_4 = _1;
place!(Field::<u128>(Variant(_14.3, 1), 4)) = !Field::<u128>(Variant(_8.0.2, 1), 4);
place!(Field::<i32>(Variant(_14.2, 1), 5)) = Field::<i32>(Variant(_14.3, 1), 5) - Field::<i32>(Variant(_8.0.2, 1), 5);
_8.0.1 = -Field::<f32>(Variant(_14.3, 1), 2);
_18 = [Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,Field::<u8>(Variant(_8.0.3, 0), 2),Field::<u8>(Variant(_8.0.3, 0), 2),Field::<u8>(Variant(_8.0.3, 0), 2)];
RET = _14.0 | _14.0;
match Field::<u64>(Variant(_14.3, 1), 0) {
0 => bb3,
1 => bb15,
2 => bb16,
14920879778150398876 => bb18,
_ => bb17
}
}
bb22 = {
Return()
}
bb23 = {
Return()
}
bb24 = {
_4 = _1;
_5.0.0 = core::ptr::addr_of_mut!(RET);
_7 = (-110_isize) + (-9223372036854775808_isize);
_8.0.2 = Adt18::Variant0 { fld0: 11649789047680711564_u64,fld1: (-85_i8),fld2: 174_u8 };
_8.0.2 = Adt18::Variant0 { fld0: 5800974317610525221_u64,fld1: (-41_i8),fld2: 4_u8 };
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !5_u8;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = 19_u8 | 42_u8;
_8.0.1 = (-106407312384208733368855566126913007084_i128) as f32;
RET = 818891385_i32 * (-2098032290_i32);
_9 = _8.0.1 as f64;
_4 = _1;
RET = (-32486_i16) as i32;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = !69_u8;
Goto(bb2)
}
bb25 = {
Return()
}
bb26 = {
_8.0.2 = Move(_14.2);
_5.0.0 = core::ptr::addr_of_mut!(_14.0);
_30.2 = _12 as usize;
_10 = _2;
place!(Field::<usize>(Variant(_5.1, 0), 0)) = _12 as usize;
_2 = [true,false,false,false];
_30.1 = -_11.1;
_31 = !608502513023823178201898606007136713_i128;
_23.2 = _8.0.1 as u8;
_23.2 = _5.0.2;
_34 = 20364_u16 | 33027_u16;
_27 = _4;
_14.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_8.0.2, 0), 0),fld1: _11.1,fld2: _5.0.2 };
_22 = ((-2951_i16),);
_1 = _21;
_22.0 = !(-6194_i16);
_30.2 = _31 as usize;
_33 = 102210701048810910702282670295817205729_u128 * 78015623893020337695998883216709865429_u128;
_35 = _14.1 * _19;
RET = _12 as i32;
_21 = _4;
_16 = false;
_14.3 = Move(_14.2);
_35 = 2476427407_u32 as f32;
match Field::<u64>(Variant(_14.3, 0), 0) {
0 => bb25,
1 => bb13,
2 => bb27,
3 => bb28,
14920879778150398876 => bb30,
_ => bb29
}
}
bb27 = {
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = _7 as u64;
_9 = Field::<u8>(Variant(_8.0.2, 0), 2) as f64;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = _5.0.2;
_10 = [true,false,true,false];
_6 = _7 as f32;
_8.0.1 = -_6;
_5.1 = Adt48::Variant0 { fld0: _11.2 };
_12 = 8565218085546888148_i64 >> Field::<u8>(Variant(_8.0.2, 0), 2);
_8.0.2 = Adt18::Variant0 { fld0: 3157150691809090982_u64,fld1: (-10_i8),fld2: _5.0.2 };
_8.0.3 = Adt18::Variant1 { fld0: 5847483617146838388_u64,fld1: _11.2,fld2: _8.0.1,fld3: 13679_u16,fld4: 81675570346015120526680078155374123286_u128,fld5: RET,fld6: _2 };
_14.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
_13 = _9 + _9;
_4 = _1;
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = 14920879778150398876_u64;
_6 = Field::<f32>(Variant(_8.0.3, 1), 2) * Field::<f32>(Variant(_8.0.3, 1), 2);
place!(Field::<f32>(Variant(_8.0.3, 1), 2)) = Field::<u8>(Variant(_8.0.2, 0), 2) as f32;
_14.1 = _8.0.1 * _8.0.1;
_7 = 9_isize;
place!(Field::<u128>(Variant(_8.0.3, 1), 4)) = 39483852685911804314901477910723955537_u128 * 169987906084577650975129714622505374790_u128;
_7 = 9223372036854775807_isize & (-74_isize);
_8.0.0 = _14.0 + _14.0;
_14.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.2, 0), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _14.1,fld3: 54614_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_11.1 = (-75_i8) - 113_i8;
_8.0.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
Goto(bb9)
}
bb28 = {
Return()
}
bb29 = {
_22 = ((-15155_i16),);
_4 = _1;
_22 = ((-11140_i16),);
_30.2 = _11.2 % Field::<usize>(Variant(_5.1, 0), 0);
_11.1 = Field::<i8>(Variant(_14.2, 0), 1);
match Field::<u64>(Variant(_14.2, 0), 0) {
0 => bb19,
1 => bb21,
2 => bb22,
3 => bb23,
4 => bb24,
14920879778150398876 => bb26,
_ => bb25
}
}
bb30 = {
place!(Field::<u64>(Variant(_14.3, 0), 0)) = Field::<u64>(Variant(_8.0.2, 0), 0) * Field::<u64>(Variant(_8.0.2, 0), 0);
_35 = -_19;
_36 = _33 + _33;
_9 = -_17;
_11 = Move(_30);
_14 = (_29, _19, Move(_8.0.2), Move(_8.0.2));
_30 = Move(_11);
_25 = _19 + _35;
RET = _16 as i32;
_30.0 = core::ptr::addr_of!(_23.1);
_14.0 = _29 * _29;
_35 = _8.0.1 + _6;
_8.0.3 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_14.3, 0), 0),fld1: Field::<i8>(Variant(_14.3, 0), 1),fld2: _23.2 };
Goto(bb31)
}
bb31 = {
_30.2 = Field::<usize>(Variant(_5.1, 0), 0) ^ Field::<usize>(Variant(_5.1, 0), 0);
_8.0.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_8.0.3, 0), 0),fld1: Field::<i8>(Variant(_14.3, 0), 1),fld2: Field::<u8>(Variant(_8.0.3, 0), 2) };
_21 = _4;
_40.fld0 = Field::<i8>(Variant(_8.0.3, 0), 1) == Field::<i8>(Variant(_14.3, 0), 1);
_33 = _36 & _36;
_21 = _27;
_1 = _27;
_37 = _25 <= _35;
place!(Field::<u64>(Variant(_14.2, 0), 0)) = Field::<u64>(Variant(_8.0.2, 0), 0);
_1 = _4;
_40.fld2 = Adt23::Variant0 { fld0: _37,fld1: _21,fld2: _7,fld3: Field::<i8>(Variant(_8.0.2, 0), 1),fld4: Field::<usize>(Variant(_5.1, 0), 0),fld5: _34 };
place!(Field::<u64>(Variant(_8.0.3, 0), 0)) = Field::<u64>(Variant(_14.3, 0), 0) & Field::<u64>(Variant(_8.0.2, 0), 0);
_40.fld0 = _37;
Goto(bb32)
}
bb32 = {
_27 = _21;
_40.fld1 = _37 as u128;
_8.0 = Move(_14);
place!(Field::<isize>(Variant(_40.fld2, 0), 2)) = _7 + _7;
match Field::<u64>(Variant(_8.0.3, 0), 0) {
0 => bb30,
1 => bb17,
2 => bb8,
3 => bb33,
4 => bb34,
14920879778150398876 => bb36,
_ => bb35
}
}
bb33 = {
Return()
}
bb34 = {
_22 = ((-15155_i16),);
_4 = _1;
_22 = ((-11140_i16),);
_30.2 = _11.2 % Field::<usize>(Variant(_5.1, 0), 0);
_11.1 = Field::<i8>(Variant(_14.2, 0), 1);
match Field::<u64>(Variant(_14.2, 0), 0) {
0 => bb19,
1 => bb21,
2 => bb22,
3 => bb23,
4 => bb24,
14920879778150398876 => bb26,
_ => bb25
}
}
bb35 = {
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = _7 as u64;
_9 = Field::<u8>(Variant(_8.0.2, 0), 2) as f64;
place!(Field::<u8>(Variant(_8.0.2, 0), 2)) = _5.0.2;
_10 = [true,false,true,false];
_6 = _7 as f32;
_8.0.1 = -_6;
_5.1 = Adt48::Variant0 { fld0: _11.2 };
_12 = 8565218085546888148_i64 >> Field::<u8>(Variant(_8.0.2, 0), 2);
_8.0.2 = Adt18::Variant0 { fld0: 3157150691809090982_u64,fld1: (-10_i8),fld2: _5.0.2 };
_8.0.3 = Adt18::Variant1 { fld0: 5847483617146838388_u64,fld1: _11.2,fld2: _8.0.1,fld3: 13679_u16,fld4: 81675570346015120526680078155374123286_u128,fld5: RET,fld6: _2 };
_14.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
_13 = _9 + _9;
_4 = _1;
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = 14920879778150398876_u64;
_6 = Field::<f32>(Variant(_8.0.3, 1), 2) * Field::<f32>(Variant(_8.0.3, 1), 2);
place!(Field::<f32>(Variant(_8.0.3, 1), 2)) = Field::<u8>(Variant(_8.0.2, 0), 2) as f32;
_14.1 = _8.0.1 * _8.0.1;
_7 = 9_isize;
place!(Field::<u128>(Variant(_8.0.3, 1), 4)) = 39483852685911804314901477910723955537_u128 * 169987906084577650975129714622505374790_u128;
_7 = 9223372036854775807_isize & (-74_isize);
_8.0.0 = _14.0 + _14.0;
_14.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.2, 0), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _14.1,fld3: 54614_u16,fld4: Field::<u128>(Variant(_8.0.3, 1), 4),fld5: RET,fld6: Field::<[bool; 4]>(Variant(_8.0.3, 1), 6) };
_11.1 = (-75_i8) - 113_i8;
_8.0.0 = Field::<i32>(Variant(_8.0.3, 1), 5);
Goto(bb9)
}
bb36 = {
_11 = Move(_30);
_9 = _17;
place!(Field::<usize>(Variant(_40.fld2, 0), 4)) = Field::<usize>(Variant(_5.1, 0), 0) & _11.2;
_16 = !_37;
_40.fld6 = -_13;
_23.0 = core::ptr::addr_of_mut!(_14.0);
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.3, 0), 0),fld1: Field::<usize>(Variant(_5.1, 0), 0),fld2: _8.0.1,fld3: Field::<u16>(Variant(_40.fld2, 0), 5),fld4: _40.fld1,fld5: _29,fld6: _10 };
_34 = Field::<u16>(Variant(_8.0.2, 1), 3);
place!(Field::<u16>(Variant(_8.0.2, 1), 3)) = _34 & _34;
_14 = (Field::<i32>(Variant(_8.0.2, 1), 5), _35, Move(_8.0.3), Move(_8.0.2));
_30.1 = 3131069820_u32 as i8;
_6 = _19;
_10 = [_40.fld0,_40.fld0,_16,_40.fld0];
_8 = (Move(_14),);
_5.0.0 = core::ptr::addr_of_mut!(_8.0.0);
_30.2 = _22.0 as usize;
_33 = Field::<usize>(Variant(_40.fld2, 0), 4) as u128;
_41 = _11.2 + _11.2;
_40.fld1 = Field::<u128>(Variant(_8.0.3, 1), 4) | _33;
_4 = _1;
_17 = -_9;
_30.0 = core::ptr::addr_of!(_23.1);
_14.2 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_8.0.3, 1), 0),fld1: Field::<i8>(Variant(_8.0.2, 0), 1),fld2: _23.2 };
_8.0 = (_29, _35, Move(_14.2), Move(_14.2));
place!(Field::<char>(Variant(_40.fld2, 0), 1)) = _27;
_12 = 1454959330317991629_i64 >> _36;
_8.0.0 = _29 & _29;
_37 = Field::<bool>(Variant(_40.fld2, 0), 0);
_5.0.0 = core::ptr::addr_of_mut!(_8.0.0);
_41 = _11.2;
Goto(bb37)
}
bb37 = {
_11.2 = Field::<usize>(Variant(_40.fld2, 0), 4);
place!(Field::<u64>(Variant(_8.0.2, 0), 0)) = !Field::<u64>(Variant(_8.0.3, 0), 0);
_43 = _8.0.1 + _35;
_1 = _27;
_14.2 = Move(_8.0.2);
_11 = Move(_30);
_30 = Move(_11);
_14.0 = -_29;
Goto(bb38)
}
bb38 = {
place!(Field::<isize>(Variant(_40.fld2, 0), 2)) = _7 | _7;
_37 = !Field::<bool>(Variant(_40.fld2, 0), 0);
_8.0.1 = _35 + _19;
_22.0 = 22378_i16 & 24651_i16;
_14.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.2, 0), 0),fld1: _41,fld2: _19,fld3: _34,fld4: _40.fld1,fld5: _29,fld6: _10 };
_1 = _27;
_25 = _35 + _43;
_18 = [Field::<u8>(Variant(_14.2, 0), 2),Field::<u8>(Variant(_14.2, 0), 2),_23.2,_5.0.2,Field::<u8>(Variant(_14.2, 0), 2)];
place!(Field::<i32>(Variant(_14.3, 1), 5)) = _8.0.0 * _8.0.0;
place!(Field::<usize>(Variant(_14.3, 1), 1)) = Field::<usize>(Variant(_40.fld2, 0), 4) | _41;
_5.0.2 = _40.fld1 as u8;
_18 = [_5.0.2,_5.0.2,_5.0.2,_5.0.2,_5.0.2];
_40.fld5 = _43 - _25;
_11 = Move(_30);
place!(Field::<u64>(Variant(_8.0.3, 0), 0)) = !Field::<u64>(Variant(_14.2, 0), 0);
_47 = Field::<u128>(Variant(_14.3, 1), 4) as isize;
_14.1 = _8.0.0 as f32;
place!(Field::<usize>(Variant(_14.3, 1), 1)) = _41 << _29;
_2 = _10;
_30.1 = Field::<i8>(Variant(_14.2, 0), 1) + Field::<i8>(Variant(_8.0.3, 0), 1);
_40.fld0 = Field::<bool>(Variant(_40.fld2, 0), 0) | Field::<bool>(Variant(_40.fld2, 0), 0);
_18 = [_5.0.2,_5.0.2,_5.0.2,_5.0.2,_5.0.2];
_5.0.0 = Move(_23.0);
Call(_8.0.3 = fn19(_30.1, Move(_5.0.0), Move(_11.0), _27, _1, _1), ReturnTo(bb39), UnwindUnreachable())
}
bb39 = {
_48 = core::ptr::addr_of_mut!(_23.0);
_30.2 = Field::<usize>(Variant(_14.3, 1), 1);
(*_48) = core::ptr::addr_of_mut!(_8.0.0);
_8.0.2 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_14.3, 1), 0),fld1: Field::<usize>(Variant(_40.fld2, 0), 4),fld2: _8.0.1,fld3: _34,fld4: _40.fld1,fld5: Field::<i32>(Variant(_14.3, 1), 5),fld6: _2 };
place!(Field::<f32>(Variant(_14.3, 1), 2)) = _25 + Field::<f32>(Variant(_8.0.2, 1), 2);
Goto(bb40)
}
bb40 = {
_17 = -_40.fld6;
_4 = Field::<char>(Variant(_40.fld2, 0), 1);
_18 = [Field::<u8>(Variant(_8.0.3, 0), 2),_5.0.2,_5.0.2,_5.0.2,_5.0.2];
Goto(bb41)
}
bb41 = {
_29 = -Field::<i32>(Variant(_8.0.2, 1), 5);
_14.1 = _40.fld5;
_40.fld4 = Adt18::Variant0 { fld0: Field::<u64>(Variant(_14.3, 1), 0),fld1: Field::<i8>(Variant(_8.0.3, 0), 1),fld2: _5.0.2 };
_14.1 = Field::<f32>(Variant(_14.3, 1), 2);
Goto(bb42)
}
bb42 = {
place!(Field::<i32>(Variant(_14.3, 1), 5)) = Field::<i32>(Variant(_8.0.2, 1), 5);
(*_48) = core::ptr::addr_of_mut!(RET);
_40.fld3.0 = _31 | _31;
place!(Field::<isize>(Variant(_40.fld2, 0), 2)) = !_47;
_40.fld6 = _34 as f64;
_30.0 = core::ptr::addr_of!(_23.1);
_30.0 = core::ptr::addr_of!(_5.0.1);
_44 = !_47;
_10 = [Field::<bool>(Variant(_40.fld2, 0), 0),_16,Field::<bool>(Variant(_40.fld2, 0), 0),_37];
(*_48) = core::ptr::addr_of_mut!(_29);
place!(Field::<u64>(Variant(_14.3, 1), 0)) = !Field::<u64>(Variant(_40.fld4, 0), 0);
place!(Field::<u64>(Variant(_8.0.3, 0), 0)) = Field::<u64>(Variant(_40.fld4, 0), 0) - Field::<u64>(Variant(_40.fld4, 0), 0);
_22 = ((-15321_i16),);
_40.fld1 = Field::<u128>(Variant(_14.3, 1), 4) - _36;
place!(Field::<i8>(Variant(_8.0.3, 0), 1)) = _11.1 >> Field::<u128>(Variant(_14.3, 1), 4);
place!(Field::<isize>(Variant(_40.fld2, 0), 2)) = !_44;
place!(Field::<u64>(Variant(_8.0.2, 1), 0)) = Field::<u64>(Variant(_8.0.3, 0), 0) >> _5.0.2;
_52 = [Field::<u128>(Variant(_14.3, 1), 4),Field::<u128>(Variant(_8.0.2, 1), 4)];
place!(Field::<u8>(Variant(_40.fld4, 0), 2)) = _34 as u8;
place!(Field::<i8>(Variant(_40.fld4, 0), 1)) = Field::<i8>(Variant(_8.0.3, 0), 1);
_4 = _21;
_53 = (_22.0,);
_8.0.3 = Adt18::Variant1 { fld0: Field::<u64>(Variant(_8.0.2, 1), 0),fld1: _11.2,fld2: _25,fld3: Field::<u16>(Variant(_40.fld2, 0), 5),fld4: _40.fld1,fld5: Field::<i32>(Variant(_8.0.2, 1), 5),fld6: _2 };
RET = _5.0.2 as i32;
_45 = _4;
place!(Field::<u128>(Variant(_8.0.3, 1), 4)) = _9 as u128;
Goto(bb43)
}
bb43 = {
Call(_56 = dump_var(18_usize, 21_usize, Move(_21), 29_usize, Move(_29), 16_usize, Move(_16), 36_usize, Move(_36)), ReturnTo(bb44), UnwindUnreachable())
}
bb44 = {
Call(_56 = dump_var(18_usize, 34_usize, Move(_34), 45_usize, Move(_45), 4_usize, Move(_4), 1_usize, Move(_1)), ReturnTo(bb45), UnwindUnreachable())
}
bb45 = {
Call(_56 = dump_var(18_usize, 7_usize, Move(_7), 27_usize, Move(_27), 52_usize, Move(_52), 57_usize, _57), ReturnTo(bb46), UnwindUnreachable())
}
bb46 = {
Return()
}

}
}
#[custom_mir(dialect = "runtime", phase = "initial")]
fn fn19(mut _1: i8,mut _2: *mut i32,mut _3: *const *mut [i16; 2],mut _4: char,mut _5: char,mut _6: char) -> Adt18 {
mir! {
type RET = Adt18;
let _7: (&'static mut *mut [u64; 1], u128);
let _8: Adt51;
let _9: &'static [i128; 4];
let _10: u64;
let _11: *mut i16;
let _12: u8;
let _13: &'static [u64; 1];
let _14: u64;
let _15: &'static *mut [i16; 2];
let _16: isize;
let _17: [isize; 8];
let _18: (i16,);
let _19: [isize; 8];
let _20: u64;
let _21: bool;
let _22: isize;
let _23: char;
let _24: *mut *mut i32;
let _25: f32;
let _26: i64;
let _27: i64;
let _28: char;
let _29: isize;
let _30: char;
let _31: ();
let _32: ();
{
_4 = _6;
_5 = _4;
RET = Adt18::Variant0 { fld0: 2884137058300225990_u64,fld1: _1,fld2: 179_u8 };
place!(Field::<u64>(Variant(RET, 0), 0)) = !6029604082955387750_u64;
place!(Field::<u64>(Variant(RET, 0), 0)) = 7548113576468796523_u64;
_4 = _6;
_6 = _4;
_7.1 = !115191104911494785958033714302053968809_u128;
_7.1 = !34267387897036459440804315607928176674_u128;
place!(Field::<u8>(Variant(RET, 0), 2)) = 247_u8;
_4 = _6;
_4 = _6;
_7.1 = _1 as u128;
RET = Adt18::Variant0 { fld0: 2334673844833594190_u64,fld1: _1,fld2: 73_u8 };
_6 = _5;
place!(Field::<u64>(Variant(RET, 0), 0)) = 9581_u16 as u64;
place!(Field::<u8>(Variant(RET, 0), 2)) = Field::<u64>(Variant(RET, 0), 0) as u8;
_7.1 = 369609390_u32 as u128;
_7.1 = 131300229827300512154283233226724988119_u128;
_7.1 = 165142641982843207799708296364140870093_u128;
place!(Field::<u64>(Variant(RET, 0), 0)) = 13438306411069456745_u64 * 9165881625655629460_u64;
Goto(bb1)
}
bb1 = {
_6 = _5;
_8 = Adt51::Variant3 { fld0: _7.1,fld1: Move(_2) };
_2 = Move(Field::<*mut i32>(Variant(_8, 3), 1));
RET = Adt18::Variant0 { fld0: 17401743641586995740_u64,fld1: _1,fld2: 33_u8 };
_6 = _5;
_1 = Field::<i8>(Variant(RET, 0), 1);
place!(Field::<*mut i32>(Variant(_8, 3), 1)) = Move(_2);
place!(Field::<u8>(Variant(RET, 0), 2)) = 196_u8;
RET = Adt18::Variant0 { fld0: 13832355896173321098_u64,fld1: _1,fld2: 234_u8 };
place!(Field::<i8>(Variant(RET, 0), 1)) = _4 as i8;
place!(Field::<u128>(Variant(_8, 3), 0)) = _7.1 / _7.1;
match _7.1 {
0 => bb2,
1 => bb3,
165142641982843207799708296364140870093 => bb5,
_ => bb4
}
}
bb2 = {
Return()
}
bb3 = {
Return()
}
bb4 = {
Return()
}
bb5 = {
_7.1 = !Field::<u128>(Variant(_8, 3), 0);
place!(Field::<i8>(Variant(RET, 0), 1)) = _6 as i8;
_10 = 12976406360582062247_u64 & 7537049223134191405_u64;
RET = Adt18::Variant0 { fld0: _10,fld1: _1,fld2: 10_u8 };
_10 = !Field::<u64>(Variant(RET, 0), 0);
_2 = Move(Field::<*mut i32>(Variant(_8, 3), 1));
_6 = _5;
place!(Field::<u8>(Variant(RET, 0), 2)) = 91_u8 ^ 134_u8;
place!(Field::<u8>(Variant(RET, 0), 2)) = _1 as u8;
_10 = Field::<u64>(Variant(RET, 0), 0) + Field::<u64>(Variant(RET, 0), 0);
_5 = _4;
_6 = _5;
Goto(bb6)
}
bb6 = {
place!(Field::<u128>(Variant(_8, 3), 0)) = false as u128;
place!(Field::<*mut i32>(Variant(_8, 3), 1)) = Move(_2);
_14 = _10 & Field::<u64>(Variant(RET, 0), 0);
_12 = Field::<u8>(Variant(RET, 0), 2) & Field::<u8>(Variant(RET, 0), 2);
_7.1 = Field::<u128>(Variant(_8, 3), 0);
_2 = Move(Field::<*mut i32>(Variant(_8, 3), 1));
place!(Field::<*mut i32>(Variant(_8, 3), 1)) = Move(_2);
place!(Field::<i8>(Variant(RET, 0), 1)) = _1 << _14;
_1 = (-3025652877191603874_i64) as i8;
place!(Field::<u128>(Variant(_8, 3), 0)) = _7.1 << Field::<u8>(Variant(RET, 0), 2);
_17 = [9223372036854775807_isize,9223372036854775807_isize,(-9223372036854775808_isize),(-9223372036854775808_isize),9223372036854775807_isize,(-9223372036854775808_isize),64_isize,68_isize];
_5 = _6;
_10 = !_14;
_14 = !_10;
Goto(bb7)
}
bb7 = {
place!(Field::<u8>(Variant(RET, 0), 2)) = _12 * _12;
_1 = Field::<i8>(Variant(RET, 0), 1) << _12;
_18.0 = (-9223372036854775808_isize) as i16;
_11 = core::ptr::addr_of_mut!(_18.0);
(*_11) = (-13600_i16) ^ (-27067_i16);
_20 = _10 | _14;
place!(Field::<u8>(Variant(RET, 0), 2)) = !_12;
_21 = true;
place!(Field::<u64>(Variant(RET, 0), 0)) = 9223372036854775807_isize as u64;
_20 = 2261_u16 as u64;
(*_11) = _10 as i16;
_22 = (-106_isize) - 9223372036854775807_isize;
_19 = [_22,_22,_22,_22,_22,_22,_22,_22];
_22 = _12 as isize;
(*_11) = (-4142_i16);
(*_11) = -(-8242_i16);
(*_11) = 26191_i16 & 28167_i16;
place!(Field::<u8>(Variant(RET, 0), 2)) = _12;
(*_11) = -2261_i16;
_5 = _4;
(*_11) = 11780_i16 << _14;
Goto(bb8)
}
bb8 = {
(*_11) = 23262_i16 << _14;
(*_11) = (-17127_i16);
_16 = _22 | _22;
(*_11) = (-2076_i16);
(*_11) = 63865_u16 as i16;
(*_11) = (-31184_i16) - 19933_i16;
_23 = _6;
(*_11) = 3102446828_u32 as i16;
_24 = core::ptr::addr_of_mut!(place!(Field::<*mut i32>(Variant(_8, 3), 1)));
_25 = (*_11) as f32;
(*_11) = -23999_i16;
_6 = _4;
Goto(bb9)
}
bb9 = {
(*_11) = (-5788_i16);
(*_11) = (-21908_i16) & (-21944_i16);
(*_11) = (-2619_i16);
(*_11) = 2687323607106878382_i64 as i16;
(*_11) = !(-7542_i16);
_17 = _19;
(*_11) = _21 as i16;
_11 = core::ptr::addr_of_mut!((*_11));
(*_11) = 6242_i16;
_1 = Field::<i8>(Variant(RET, 0), 1) | Field::<i8>(Variant(RET, 0), 1);
place!(Field::<u64>(Variant(RET, 0), 0)) = !_14;
match (*_11) {
0 => bb1,
1 => bb4,
6242 => bb11,
_ => bb10
}
}
bb10 = {
Return()
}
bb11 = {
(*_11) = 4_usize as i16;
Goto(bb12)
}
bb12 = {
(*_11) = 12395_i16 & (-2570_i16);
(*_11) = 28528_i16 | (-18720_i16);
place!(Field::<u8>(Variant(RET, 0), 2)) = !_12;
(*_11) = 21438_i16 & (-13299_i16);
(*_11) = (-27755_i16) & (-1684_i16);
(*_11) = (-4800_i16) | (-18000_i16);
place!(Field::<i8>(Variant(RET, 0), 1)) = _1 ^ _1;
place!(Field::<u8>(Variant(RET, 0), 2)) = !_12;
_16 = _22 & _22;
_17 = _19;
(*_11) = 10188_i16 - 5171_i16;
(*_11) = 22423_i16;
place!(Field::<i8>(Variant(RET, 0), 1)) = _1 * _1;
_26 = (-1332914776891067840_i64) ^ (-2854451167713461428_i64);
RET = Adt18::Variant0 { fld0: _14,fld1: _1,fld2: _12 };
(*_11) = -(-30386_i16);
(*_11) = 7976_i16;
_24 = core::ptr::addr_of_mut!((*_24));
Goto(bb13)
}
bb13 = {
Call(_31 = dump_var(19_usize, 14_usize, Move(_14), 20_usize, Move(_20), 10_usize, Move(_10), 5_usize, Move(_5)), ReturnTo(bb14), UnwindUnreachable())
}
bb14 = {
Call(_31 = dump_var(19_usize, 1_usize, Move(_1), 19_usize, Move(_19), 12_usize, Move(_12), 21_usize, Move(_21)), ReturnTo(bb15), UnwindUnreachable())
}
bb15 = {
Return()
}

}
}
pub fn main() {
                fn0(std::hint::black_box(false), std::hint::black_box('\u{d611d}'), std::hint::black_box((-9223372036854775808_isize)), std::hint::black_box((-39_i8)), std::hint::black_box((-10870_i16)), std::hint::black_box(1724331843_i32), std::hint::black_box(83250071805419414664338408399494068426_u128), std::hint::black_box(37239381885141432281772429535313518210_i128), std::hint::black_box(2_usize), std::hint::black_box(118_u8), std::hint::black_box(6063236252456165260_u64), std::hint::black_box(3063227478_u32));
                
            }
#[derive(Debug)]
pub enum Adt18 {
Variant0{
fld0: u64,
fld1: i8,
fld2: u8,

},
Variant1{
fld0: u64,
fld1: usize,
fld2: f32,
fld3: u16,
fld4: u128,
fld5: i32,
fld6: [bool; 4],

}}
#[derive(Debug,Copy,Clone)]
pub enum Adt23 {
Variant0{
fld0: bool,
fld1: char,
fld2: isize,
fld3: i8,
fld4: usize,
fld5: u16,

},
Variant1{
fld0: u16,
fld1: u32,
fld2: u64,

}}
#[derive(Debug)]
pub struct Adt31 {
fld0: bool,
fld1: u128,
fld2: Adt23,
fld3: (i128,),
fld4: Adt18,
fld5: f32,
fld6: f64,
}
#[derive(Debug)]
pub enum Adt41 {
Variant0{
fld0: [usize; 2],
fld1: [usize; 8],
fld2: [bool; 4],
fld3: f64,
fld4: *mut [u64; 1],
fld5: [u64; 1],
fld6: Adt23,

},
Variant1{
fld0: usize,
fld1: [i16; 2],
fld2: *mut i32,
fld3: (i32, f32, Adt18, Adt18),
fld4: u32,
fld5: i128,
fld6: [isize; 8],

},
Variant2{
fld0: [usize; 8],
fld1: u128,
fld2: [isize; 8],
fld3: f64,
fld4: (Adt31, i32),
fld5: Adt23,

},
Variant3{
fld0: [char; 2],
fld1: *mut [i16; 2],
fld2: i16,

}}
#[derive(Debug)]
pub enum Adt48 {
Variant0{
fld0: usize,

},
Variant1{
fld0: *mut i32,
fld1: (*mut i32, *mut [i16; 2], u8),
fld2: i8,

},
Variant2{
fld0: f32,
fld1: i8,

}}
#[derive(Debug)]
pub enum Adt51 {
Variant0{
fld0: [u8; 5],
fld1: (i32, f32, Adt18, Adt18),
fld2: Adt23,
fld3: u8,
fld4: i16,
fld5: i32,
fld6: u128,

},
Variant1{
fld0: [usize; 5],

},
Variant2{
fld0: bool,
fld1: [i128; 4],
fld2: [usize; 8],
fld3: usize,
fld4: Adt41,
fld5: Adt23,
fld6: u128,
fld7: *mut [i16; 2],

},
Variant3{
fld0: u128,
fld1: *mut i32,

}}
#[derive(Debug)]
pub enum Adt57 {
Variant0{
fld0: bool,
fld1: [u128; 2],
fld2: isize,
fld3: Adt23,
fld4: i16,
fld5: (i32, f32, Adt18, Adt18),
fld6: (*mut i32, *mut [i16; 2], u8),
fld7: usize,

},
Variant1{
fld0: [i16; 2],

},
Variant2{
fld0: f64,
fld1: *mut *mut i32,

},
Variant3{
fld0: [u64; 1],
fld1: u8,
fld2: Adt23,
fld3: [usize; 8],
fld4: Adt51,
fld5: (*mut i32, *mut [i16; 2], u8),

}}
#[derive(Debug)]
pub enum Adt66 {
Variant0{
fld0: (i16,),
fld1: ((*mut i32, *mut [i16; 2], u8), Adt48),

},
Variant1{
fld0: isize,
fld1: ((*mut i32, *mut [i16; 2], u8), Adt48),

}}

